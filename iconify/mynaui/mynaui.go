package mynaui

import (
	g "maragu.dev/gomponents"
	h "maragu.dev/gomponents/html"
)

const IconifyVersion = ""

var (
	hAttr   = g.Attr("height", "1em")
	viewbox = g.Attr("viewbox", "0 0 24 24")
)

func AArrowDown(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9.5 13.667L7 7l-2.5 6.667m5 0L10.75 17M9.5 13.667h-5M3.25 17l1.25-3.333M17.25 7.5v9m3.5-3.5l-3.5 3.5l-3.5-3.5"/>`), g.Group(children),
	)
}

func AArrowDownSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M7 6.25a.75.75 0 0 1 .702.487l3.75 10a.75.75 0 0 1-1.404.526L8.98 14.417H5.02l-1.068 2.846a.75.75 0 1 1-1.404-.526l3.75-10A.75.75 0 0 1 7 6.25m1.418 6.667L7 9.136l-1.418 3.78zM17.25 6.75a.75.75 0 0 1 .75.75v4.97h3.28a.75.75 0 0 1 0 1.06l-3.5 3.5a.75.75 0 0 1-1.06 0l-3.5-3.5a.75.75 0 0 1 0-1.06h3.28V7.5a.75.75 0 0 1 .75-.75"/>`), g.Group(children),
	)
}

func AArrowUp(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9.5 13.667L7 7l-2.5 6.667m5 0L10.75 17M9.5 13.667h-5M3.25 17l1.25-3.333M17.25 7.5v9m3.5-6L17.25 7l-3.5 3.5"/>`), g.Group(children),
	)
}

func AArrowUpSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M7 6.25a.75.75 0 0 1 .702.487l3.75 10a.75.75 0 0 1-1.404.526L8.98 14.417H5.02l-1.068 2.846a.75.75 0 1 1-1.404-.526l3.75-10A.75.75 0 0 1 7 6.25m1.418 6.667L7 9.136l-1.418 3.78zM16.72 6.47a.75.75 0 0 1 1.06 0l3.5 3.5a.75.75 0 0 1 0 1.06H18v5.47a.75.75 0 0 1-1.5 0v-5.47h-3.28a.75.75 0 0 1 0-1.06z"/>`), g.Group(children),
	)
}

func AcademicHat(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M14.217 3.5a5.17 5.17 0 0 0-4.434 0L3.092 6.637c-1.456.682-1.456 3.044 0 3.726l6.69 3.137a5.17 5.17 0 0 0 4.435 0l6.691-3.137c1.456-.682 1.456-3.044 0-3.726zM22 8.5v5"/><path d="M5 11.5v5.125C5 19.543 9.694 21 12 21s7-1.457 7-4.375V11.5"/></g>`), g.Group(children),
	)
}

func AcademicHatSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M22.75 8.5v5a.75.75 0 0 1-1.5 0v-2.469l-.023.011l-1.477.693v4.89c0 1.909-1.527 3.193-3.05 3.953c-1.564.78-3.428 1.172-4.7 1.172s-3.136-.392-4.7-1.172c-1.523-.76-3.05-2.044-3.05-3.953v-4.89l-1.477-.692C1.721 10.549 1.25 9.478 1.25 8.5s.47-2.05 1.523-2.542L9.464 2.82a5.92 5.92 0 0 1 5.072 0l6.69 3.137C22.28 6.45 22.75 7.522 22.75 8.5m-8.214 5.68a5.92 5.92 0 0 1-5.072 0L5.75 12.437v4.187c0 1.01.82 1.913 2.22 2.61c1.36.679 2.996 1.015 4.03 1.015s2.67-.336 4.03-1.014c1.4-.698 2.22-1.601 2.22-2.61v-4.188z"/>`), g.Group(children),
	)
}

func Accessibility(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0M8 9.5l4 .778m0 0l4-.778m-4 .778v2.333m0 0L10.4 16.5m1.6-3.889l1.6 3.889M12 7.25v.5"/>`), g.Group(children),
	)
}

func AccessibilitySolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12m10.5-4.75a.75.75 0 0 0-1.5 0v.5a.75.75 0 0 0 1.5 0zM8.143 8.764a.75.75 0 0 0-.286 1.472l3.393.66v1.567l-1.544 3.752a.75.75 0 0 0 1.388.57L12 14.582l.906 2.203a.75.75 0 0 0 1.387-.57l-1.543-3.752v-1.567l3.393-.66a.75.75 0 1 0-.286-1.472L12 9.514z"/>`), g.Group(children),
	)
}

func Activity(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M21 12h-2.962c-.21 0-.316 0-.405.042a.5.5 0 0 0-.201.173c-.061.088-.092.205-.155.44l-1.817 6.846c-.233.875-.349 1.313-.524 1.426a.435.435 0 0 1-.485-.002c-.175-.115-.288-.554-.514-1.43l-3.873-14.99c-.227-.876-.34-1.315-.515-1.43a.435.435 0 0 0-.485-.002c-.175.113-.291.55-.524 1.426l-1.817 6.845c-.063.236-.094.353-.154.44a.5.5 0 0 1-.202.174C6.278 12 6.173 12 5.962 12H3"/>`), g.Group(children),
	)
}

func ActivitySolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.292 2.396c.124.124.206.254.258.35c.079.145.138.3.185.44c.09.268.182.625.287 1.032l3.68 14.24L16.31 12.4l.013-.05l.003-.011c.044-.17.117-.454.283-.693a1.5 1.5 0 0 1 .599-.509c.191-.09.369-.117.5-.127c.105-.01.22-.009.308-.009H21a1 1 0 1 1 0 2h-2.78l-1.804 6.795c-.108.406-.202.762-.294 1.03a3 3 0 0 1-.188.44a1.4 1.4 0 0 1-.454.501a1.44 1.44 0 0 1-1.58-.006a1.4 1.4 0 0 1-.45-.505a3 3 0 0 1-.185-.441c-.09-.268-.182-.625-.287-1.032l-3.68-14.24L7.69 11.6l-.013.05l-.003.011c-.044.17-.118.454-.283.693a1.5 1.5 0 0 1-.599.509c-.191.09-.369.117-.5.127c-.105.01-.22.009-.308.009H3a1 1 0 1 1 0-2h2.78l1.804-6.796c.108-.405.202-.762.294-1.028c.048-.14.108-.295.188-.44a1.4 1.4 0 0 1 .454-.502a1.435 1.435 0 0 1 1.772.162"/>`), g.Group(children),
	)
}

func ActivitySquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M17 12h-2l-2 5l-2-10l-2 5H7"/><path d="M3 12c0-4.243 0-6.364 1.318-7.682S7.758 3 12 3s6.364 0 7.682 1.318S21 7.758 21 12s0 6.364-1.318 7.682S16.242 21 12 21s-6.364 0-7.682-1.318S3 16.242 3 12"/></g>`), g.Group(children),
	)
}

func ActivitySquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M6.962 2.421c1.276-.171 2.908-.171 4.981-.171h.114c2.073 0 3.705 0 4.98.171c1.31.176 2.354.545 3.175 1.367c.822.821 1.19 1.866 1.367 3.174c.171 1.276.171 2.908.171 4.981v.114c0 2.073 0 3.705-.171 4.98c-.176 1.31-.545 2.354-1.367 3.175c-.821.822-1.866 1.19-3.174 1.367c-1.276.171-2.908.171-4.981.171h-.114c-2.073 0-3.705 0-4.98-.171c-1.31-.176-2.354-.545-3.175-1.367c-.822-.821-1.19-1.866-1.367-3.174c-.171-1.276-.171-2.908-.171-4.981v-.114c0-2.073 0-3.705.171-4.98c.176-1.31.545-2.354 1.367-3.175c.821-.822 1.866-1.19 3.174-1.367m4.773 4.432a.75.75 0 0 0-1.431-.132L8.492 11.25H7a.75.75 0 0 0 0 1.5h2a.75.75 0 0 0 .696-.472l1.063-2.657l1.506 7.526a.75.75 0 0 0 1.431.132l1.812-4.529H17a.75.75 0 0 0 0-1.5h-2a.75.75 0 0 0-.696.471L13.24 14.38z"/>`), g.Group(children),
	)
}

func AddQueue(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3 9v10.4c0 .56 0 .84.109 1.054a1 1 0 0 0 .437.437C3.76 21 4.04 21 4.598 21H15m-1-8v-3m0 0V7m0 3h-3m3 0h3M7 13.8V6.2c0-1.12 0-1.68.218-2.108c.192-.377.497-.682.874-.874C8.52 3 9.08 3 10.2 3h7.6c1.12 0 1.68 0 2.108.218a2 2 0 0 1 .874.874C21 4.52 21 5.08 21 6.2v7.6c0 1.12 0 1.68-.218 2.108a2 2 0 0 1-.874.874c-.428.218-.986.218-2.104.218h-7.607c-1.118 0-1.678 0-2.105-.218a2 2 0 0 1-.874-.874C7 15.48 7 14.92 7 13.8"/>`), g.Group(children),
	)
}

func AddQueueSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.17 2.25h7.66c.535 0 .98 0 1.345.03c.38.03.736.098 1.073.27a2.75 2.75 0 0 1 1.203 1.201c.171.338.238.694.27 1.074c.03.364.03.81.03 1.344v7.661c0 .534 0 .98-.03 1.345c-.032.38-.099.736-.27 1.073a2.75 2.75 0 0 1-1.203 1.203c-.337.171-.693.238-1.072.27c-.364.029-.809.029-1.342.029h-7.667c-.534 0-.979 0-1.343-.03c-.38-.03-.736-.098-1.073-.27a2.75 2.75 0 0 1-1.201-1.202c-.172-.337-.24-.693-.27-1.073c-.03-.364-.03-.81-.03-1.344V6.17c0-.534 0-.98.03-1.345c.03-.38.098-.736.27-1.074a2.75 2.75 0 0 1 1.2-1.201c.338-.172.694-.24 1.074-.27c.365-.03.81-.03 1.345-.03M3 8.25a.75.75 0 0 1 .75.75v10.4c0 .292 0 .466.011.596a.6.6 0 0 0 .018.12a.25.25 0 0 0 .104.105a.6.6 0 0 0 .12.018c.13.01.304.011.595.011H15a.75.75 0 0 1 0 1.5H4.572c-.257 0-.493 0-.69-.016a1.8 1.8 0 0 1-.677-.175a1.75 1.75 0 0 1-.764-.765a1.8 1.8 0 0 1-.175-.676a9 9 0 0 1-.016-.692V9A.75.75 0 0 1 3 8.25m11-2a.75.75 0 0 0-.75.75v2.25H11a.75.75 0 0 0 0 1.5h2.25V13a.75.75 0 0 0 1.5 0v-2.25H17a.75.75 0 0 0 0-1.5h-2.25V7a.75.75 0 0 0-.75-.75"/>`), g.Group(children),
	)
}

func Aeroplane(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m14.134 6.992l3.396-3.397a2.033 2.033 0 0 1 2.875 2.875l-3.397 3.396l1.838 9.145c.235 1.17-2.034 2.8-2.638 1.25l-2.69-6.904l-3.493 3.493c.17 2.041.207 2.72-1.224 4.15l-2.175-3.626L3 15.199c1.43-1.431 2.109-1.395 4.15-1.224l3.493-3.492l-6.904-2.691c-1.55-.604.08-2.874 1.25-2.638z"/>`), g.Group(children),
	)
}

func AeroplaneSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M20.935 3.065a2.783 2.783 0 0 0-3.935 0l-3.112 3.112l-8.75-1.758c-.554-.111-1.076.083-1.462.333a3.1 3.1 0 0 0-.979 1.027c-.23.393-.406.905-.321 1.431c.093.586.484 1.044 1.091 1.28l5.834 2.274L6.866 13.2c-.83-.067-1.541-.103-2.199.059c-.797.196-1.442.655-2.197 1.41a.75.75 0 0 0 .144 1.174L6.08 17.92l2.08 3.465a.75.75 0 0 0 1.173.144c.755-.755 1.214-1.4 1.41-2.197c.162-.658.126-1.368.059-2.199l2.435-2.435l2.274 5.835c.236.607.695.998 1.28 1.09c.527.085 1.038-.09 1.432-.321a3.1 3.1 0 0 0 1.026-.979c.25-.386.444-.908.333-1.461l-1.758-8.75L20.935 7a2.78 2.78 0 0 0 0-3.935"/>`), g.Group(children),
	)
}

func AirConditioner(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M18.346 4.5H5.654c-.629 0-1.154.525-1.154 1.154v5.77c0 .628.525 1.153 1.154 1.153h12.692c.629 0 1.154-.525 1.154-1.154v-5.77c0-.628-.525-1.153-1.154-1.153"/><path d="M16.615 12.577v-2.308c0-.628-.525-1.154-1.153-1.154H8.537c-.628 0-1.153.526-1.153 1.154v2.308m-.577 5.77c1.64 0 1.73-1.604 1.73-2.886m8.654 2.885c-1.64 0-1.73-1.603-1.73-2.885M12 19.5v-4.039"/></g>`), g.Group(children),
	)
}

func AirConditionerSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M3.75 5.654c0-1.043.861-1.904 1.904-1.904h12.692c1.043 0 1.904.861 1.904 1.904v5.77a1.915 1.915 0 0 1-1.904 1.903H5.654a1.915 1.915 0 0 1-1.904-1.904zm12.115 6.173v-1.558a.416.416 0 0 0-.404-.404H8.539a.416.416 0 0 0-.403.404v1.558zM8.538 14.71a.75.75 0 0 1 .75.75c0 .625-.014 1.49-.305 2.205a2.27 2.27 0 0 1-.778 1.02c-.388.277-.86.41-1.397.41a.75.75 0 1 1 0-1.5c.283 0 .437-.067.527-.131c.094-.067.183-.177.258-.363c.165-.406.195-.984.195-1.64a.75.75 0 0 1 .75-.75m3.462 0a.75.75 0 0 1 .75.75V19.5a.75.75 0 0 1-1.5 0v-4.039a.75.75 0 0 1 .75-.75m3.461 0a.75.75 0 0 1 .75.75c0 .657.03 1.235.196 1.641c.075.186.164.296.258.363c.09.064.244.131.527.131a.75.75 0 0 1 0 1.5c-.537 0-1.01-.133-1.397-.41a2.27 2.27 0 0 1-.778-1.02c-.29-.715-.306-1.58-.306-2.205a.75.75 0 0 1 .75-.75"/>`), g.Group(children),
	)
}

func Airplay(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M12.632 16.511c-.216-.284-.324-.426-.455-.477a.48.48 0 0 0-.354 0c-.13.051-.239.193-.455.477l-2.363 3.106c-.336.443-.505.664-.505.85c0 .163.07.316.19.417c.139.116.408.116.947.116h4.726c.539 0 .808 0 .947-.116a.54.54 0 0 0 .19-.416c0-.187-.169-.408-.505-.85z"/><path d="M17.4 18h.6a3 3 0 0 0 3-3V6a3 3 0 0 0-3-3H6a3 3 0 0 0-3 3v9a3 3 0 0 0 3 3h.6"/></g>`), g.Group(children),
	)
}

func AirplaySolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M12.452 15.336a1.23 1.23 0 0 0-.904 0a1.3 1.3 0 0 0-.476.345c-.093.102-.191.232-.286.357L8.39 19.187c-.152.2-.296.39-.399.552c-.1.16-.24.413-.241.728c0 .376.162.742.458.991c.252.212.55.257.734.274c.189.018.422.018.665.018h4.787c.242 0 .475 0 .664-.018c.184-.017.482-.062.734-.274c.296-.248.458-.615.458-.991c0-.315-.141-.568-.241-.728c-.103-.163-.247-.351-.4-.552l-2.395-3.149c-.095-.125-.193-.255-.286-.357c-.1-.11-.253-.257-.476-.345"/><path d="M6 2.25A3.75 3.75 0 0 0 2.25 6v9A3.75 3.75 0 0 0 6 18.75h.6a.75.75 0 0 0 0-1.5H6A2.25 2.25 0 0 1 3.75 15V6A2.25 2.25 0 0 1 6 3.75h12A2.25 2.25 0 0 1 20.25 6v9A2.25 2.25 0 0 1 18 17.25h-.6a.75.75 0 0 0 0 1.5h.6A3.75 3.75 0 0 0 21.75 15V6A3.75 3.75 0 0 0 18 2.25z"/></g>`), g.Group(children),
	)
}

func Airpods(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M10 18V8a3.5 3.5 0 1 0-3.5 3.5c.274-.006.5.214.5.488V18a1.5 1.5 0 0 0 3 0m4 0V8a3.5 3.5 0 1 1 3.5 3.5a.49.49 0 0 0-.5.488V18a1.5 1.5 0 0 1-3 0"/>`), g.Group(children),
	)
}

func AirpodsSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M6.5 3.75a4.25 4.25 0 0 0-.25 8.493V18a2.25 2.25 0 0 0 4.5 0V8A4.25 4.25 0 0 0 6.5 3.75m11 0A4.25 4.25 0 0 0 13.25 8v10a2.25 2.25 0 0 0 4.5 0v-5.757a4.25 4.25 0 0 0-.25-8.493"/>`), g.Group(children),
	)
}

func Alarm(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M3 5.231L6.15 3M21 5.231L17.85 3M20 13a8 8 0 1 1-16 0a8 8 0 0 1 16 0"/><path d="M12 8.5v5l3 2"/></g>`), g.Group(children),
	)
}

func AlarmCheck(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M3 5.231L6.15 3M21 5.231L17.85 3M20 13a8 8 0 1 1-16 0a8 8 0 0 1 16 0"/><path d="m10 13.323l1.379 1.575a.3.3 0 0 0 .466-.022l2.8-3.876"/></g>`), g.Group(children),
	)
}

func AlarmCheckSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M18.284 2.388a.75.75 0 0 0-.867 1.224l3.15 2.231a.75.75 0 0 0 .867-1.224zm-11.7 1.224a.75.75 0 0 0-.867-1.224l-3.15 2.231a.75.75 0 0 0 .867 1.224zM3.25 13a8.75 8.75 0 1 0 17.5 0a8.75 8.75 0 0 0-17.5 0m11.834-2.608a.75.75 0 0 1 .169 1.047l-2.8 3.876a1.05 1.05 0 0 1-1.639.077l-1.378-1.576a.75.75 0 1 1 1.128-.987l1.005 1.148l2.468-3.416a.75.75 0 0 1 1.047-.169"/>`), g.Group(children),
	)
}

func AlarmMinus(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3 5.231L6.15 3M21 5.231L17.85 3M20 13a8 8 0 1 1-16 0a8 8 0 0 1 16 0M9.5 13h5"/>`), g.Group(children),
	)
}

func AlarmMinusSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M18.284 2.388a.75.75 0 0 0-.867 1.224l3.15 2.231a.75.75 0 0 0 .867-1.224zm-11.7 1.224a.75.75 0 0 0-.867-1.224l-3.15 2.231a.75.75 0 0 0 .867 1.224zM3.25 13a8.75 8.75 0 1 0 17.5 0a8.75 8.75 0 0 0-17.5 0m6.25-.75h5a.75.75 0 0 1 0 1.5h-5a.75.75 0 0 1 0-1.5"/>`), g.Group(children),
	)
}

func AlarmPlus(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3 5.231L6.15 3M21 5.231L17.85 3M20 13a8 8 0 1 1-16 0a8 8 0 0 1 16 0M9.5 13h5M12 10.5v5"/>`), g.Group(children),
	)
}

func AlarmPlusSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M18.284 2.388a.75.75 0 0 0-.867 1.224l3.15 2.231a.75.75 0 0 0 .867-1.224zm-11.7 1.224a.75.75 0 0 0-.867-1.224l-3.15 2.231a.75.75 0 0 0 .867 1.224zM3.25 13a8.75 8.75 0 1 1 17.5 0a8.75 8.75 0 0 1-17.5 0M12 9.75a.75.75 0 0 0-.75.75v1.75H9.5a.75.75 0 0 0 0 1.5h1.75v1.75a.75.75 0 0 0 1.5 0v-1.75h1.75a.75.75 0 0 0 0-1.5h-1.75V10.5a.75.75 0 0 0-.75-.75"/>`), g.Group(children),
	)
}

func AlarmSnooze(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M3 5.231L6.15 3M21 5.231L17.85 3M20 13a8 8 0 1 1-16 0a8 8 0 0 1 16 0"/><path d="M10.75 11h2.5l-2.5 4h2.5"/></g>`), g.Group(children),
	)
}

func AlarmSnoozeSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M6.584 3.612a.75.75 0 0 0-.867-1.224l-3.15 2.231a.75.75 0 0 0 .867 1.224zm11.7-1.224a.75.75 0 0 0-.867 1.224l3.15 2.231a.75.75 0 0 0 .867-1.224zM3.25 13a8.75 8.75 0 1 1 17.5 0a8.75 8.75 0 0 1-17.5 0m7.5-2.75a.75.75 0 0 0 0 1.5h1.147l-1.783 2.852a.75.75 0 0 0 .636 1.148h2.5a.75.75 0 0 0 0-1.5h-1.147l1.783-2.852a.75.75 0 0 0-.636-1.148z"/>`), g.Group(children),
	)
}

func AlarmSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M18.284 2.388a.75.75 0 0 0-.867 1.224l3.15 2.231a.75.75 0 0 0 .867-1.224zm-11.7 1.224a.75.75 0 0 0-.867-1.224l-3.15 2.231a.75.75 0 0 0 .867 1.224zM3.25 13a8.75 8.75 0 1 1 17.5 0a8.75 8.75 0 0 1-17.5 0m9.5-4.5a.75.75 0 0 0-1.5 0v5c0 .25.125.485.334.624l3 2a.75.75 0 1 0 .832-1.248l-2.666-1.777z"/>`), g.Group(children),
	)
}

func AlarmX(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3 5.231L6.15 3M21 5.231L17.85 3M20 13a8 8 0 1 1-16 0a8 8 0 0 1 16 0m-10-2l4 4m0-4l-4 4"/>`), g.Group(children),
	)
}

func AlarmXSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M18.284 2.388a.75.75 0 0 0-.867 1.224l3.15 2.231a.75.75 0 0 0 .867-1.224zm-11.7 1.224a.75.75 0 0 0-.867-1.224l-3.15 2.231a.75.75 0 0 0 .867 1.224zM3.25 13a8.75 8.75 0 1 0 17.5 0a8.75 8.75 0 0 0-17.5 0m6.22-2.53a.75.75 0 0 1 1.06 0L12 11.94l1.47-1.47a.75.75 0 1 1 1.06 1.06L13.06 13l1.47 1.47a.75.75 0 1 1-1.06 1.06L12 14.06l-1.47 1.47a.75.75 0 1 1-1.06-1.06L10.94 13l-1.47-1.47a.75.75 0 0 1 0-1.06"/>`), g.Group(children),
	)
}

func Album(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M13 3.5V10l2-1.857L17 10V3.5"/><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/></g>`), g.Group(children),
	)
}

func AlbumSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12.25 2.25V10a.75.75 0 0 0 1.26.55L15 9.166l1.49 1.384a.75.75 0 0 0 1.26-.55V2.357c.518.07.978.193 1.407.41a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057z"/>`), g.Group(children),
	)
}

func AlignBottom(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M10 14V6c0-.932 0-1.398-.152-1.765a2 2 0 0 0-1.083-1.083C8.398 3 7.932 3 7 3s-1.398 0-1.765.152a2 2 0 0 0-1.083 1.083C4 4.602 4 5.068 4 6v8c0 .932 0 1.398.152 1.765a2 2 0 0 0 1.083 1.083C5.602 17 6.068 17 7 17s1.398 0 1.765-.152a2 2 0 0 0 1.083-1.083C10 15.398 10 14.932 10 14m10 0v-4c0-.932 0-1.398-.152-1.765a2 2 0 0 0-1.083-1.083C18.398 7 17.932 7 17 7s-1.398 0-1.765.152a2 2 0 0 0-1.083 1.083C14 8.602 14 9.068 14 10v4c0 .932 0 1.398.152 1.765a2 2 0 0 0 1.083 1.083C15.602 17 16.068 17 17 17s1.398 0 1.765-.152a2 2 0 0 0 1.083-1.083C20 15.398 20 14.932 20 14m1 7H3"/>`), g.Group(children),
	)
}

func AlignBottomSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M6.975 2.25c-.445 0-.816 0-1.12.02a2.8 2.8 0 0 0-.907.19a2.75 2.75 0 0 0-1.489 1.488c-.12.29-.167.59-.188.907c-.021.304-.021.675-.021 1.12v8.05c0 .445 0 .816.02 1.12c.022.318.069.617.19.907a2.75 2.75 0 0 0 1.488 1.489c.29.12.59.167.907.188c.304.021.675.021 1.12.021h.05c.445 0 .816 0 1.12-.02c.317-.022.617-.069.907-.19a2.75 2.75 0 0 0 1.489-1.488c.12-.29.167-.59.188-.907c.021-.304.021-.675.021-1.12v-8.05c0-.445 0-.816-.02-1.12a2.8 2.8 0 0 0-.19-.907a2.75 2.75 0 0 0-1.488-1.489c-.29-.12-.59-.167-.907-.188c-.304-.021-.675-.021-1.12-.021zm10 4c-.445 0-.816 0-1.12.02a2.8 2.8 0 0 0-.907.19a2.75 2.75 0 0 0-1.489 1.488c-.12.29-.167.59-.188.907c-.021.304-.021.675-.021 1.12v4.05c0 .445 0 .816.02 1.12c.022.318.069.617.19.907a2.75 2.75 0 0 0 1.488 1.489c.29.12.59.167.907.188c.304.021.675.021 1.12.021h.05c.445 0 .816 0 1.12-.02c.317-.022.617-.069.907-.19a2.75 2.75 0 0 0 1.489-1.488c.12-.29.167-.59.188-.907c.021-.304.021-.675.021-1.12v-4.05c0-.445 0-.816-.02-1.12a2.8 2.8 0 0 0-.19-.907a2.75 2.75 0 0 0-1.488-1.489c-.29-.12-.59-.167-.907-.188c-.304-.021-.675-.021-1.12-.021zM3 20.25a.75.75 0 0 0 0 1.5h18a.75.75 0 0 0 0-1.5z"/>`), g.Group(children),
	)
}

func AlignHorizontal(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M12 21v-1m0-17v1m0 10H8c-.932 0-1.398 0-1.765.152a2 2 0 0 0-1.083 1.083C5 15.602 5 16.068 5 17s0 1.398.152 1.765a2 2 0 0 0 1.083 1.083C6.602 20 7.068 20 8 20h4m0-6h4c.932 0 1.398 0 1.765.152a2 2 0 0 1 1.083 1.083C19 15.602 19 16.068 19 17s0 1.398-.152 1.765a2 2 0 0 1-1.083 1.083C17.398 20 16.932 20 16 20h-4m0-6v-4m0 0h2c.932 0 1.398 0 1.765-.152a2 2 0 0 0 1.083-1.083C17 8.398 17 7.932 17 7s0-1.398-.152-1.765a2 2 0 0 0-1.083-1.083C15.398 4 14.932 4 14 4h-2m0 6h-2c-.932 0-1.398 0-1.765-.152a2 2 0 0 1-1.083-1.083C7 8.398 7 7.932 7 7s0-1.398.152-1.765a2 2 0 0 1 1.083-1.083C8.602 4 9.068 4 10 4h2"/>`), g.Group(children),
	)
}

func AlignHorizontalSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12 2.25a.75.75 0 0 1 .75.75v.25h1.275c.445 0 .816 0 1.12.02c.318.022.617.069.907.19a2.75 2.75 0 0 1 1.489 1.488c.12.29.167.59.188.907c.021.304.021.675.021 1.12v.05c0 .445 0 .816-.02 1.12a2.8 2.8 0 0 1-.19.907a2.75 2.75 0 0 1-1.488 1.489c-.29.12-.59.167-.907.188c-.304.021-.675.021-1.12.021H12.75v2.5h3.275c.445 0 .816 0 1.12.02c.317.022.617.069.907.19a2.75 2.75 0 0 1 1.489 1.488c.12.29.167.59.188.907c.021.304.021.675.021 1.12v.05c0 .445 0 .816-.02 1.12a2.8 2.8 0 0 1-.19.907a2.75 2.75 0 0 1-1.488 1.489c-.29.12-.59.167-.907.188c-.304.021-.675.021-1.12.021H12.75V21a.75.75 0 0 1-1.5 0v-.25H7.975c-.445 0-.816 0-1.12-.02a2.8 2.8 0 0 1-.907-.19a2.75 2.75 0 0 1-1.489-1.488c-.12-.29-.167-.59-.188-.907c-.021-.304-.021-.675-.021-1.12v-.05c0-.445 0-.816.02-1.12c.022-.318.07-.617.19-.907a2.75 2.75 0 0 1 1.488-1.489c.29-.12.59-.167.907-.188c.304-.021.675-.021 1.12-.021h3.275v-2.5H9.975c-.445 0-.816 0-1.12-.02a2.8 2.8 0 0 1-.907-.19a2.75 2.75 0 0 1-1.489-1.488c-.12-.29-.167-.59-.188-.907c-.021-.304-.021-.675-.021-1.12v-.05c0-.445 0-.816.02-1.12a2.8 2.8 0 0 1 .19-.907a2.75 2.75 0 0 1 1.488-1.489c.29-.12.59-.167.907-.188c.304-.021.675-.021 1.12-.021h1.275V3a.75.75 0 0 1 .75-.75"/>`), g.Group(children),
	)
}

func AlignLeft(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M18 14h-8c-.932 0-1.398 0-1.765.152a2 2 0 0 0-1.083 1.083C7 15.602 7 16.068 7 17s0 1.398.152 1.765a2 2 0 0 0 1.083 1.083C8.602 20 9.068 20 10 20h8c.932 0 1.398 0 1.765-.152a2 2 0 0 0 1.083-1.083C21 18.398 21 17.932 21 17s0-1.398-.152-1.765a2 2 0 0 0-1.083-1.083C19.398 14 18.932 14 18 14M14 4h-4c-.932 0-1.398 0-1.765.152a2 2 0 0 0-1.083 1.083C7 5.602 7 6.068 7 7s0 1.398.152 1.765a2 2 0 0 0 1.083 1.083C8.602 10 9.068 10 10 10h4c.932 0 1.398 0 1.765-.152a2 2 0 0 0 1.083-1.083C17 8.398 17 7.932 17 7s0-1.398-.152-1.765a2 2 0 0 0-1.083-1.083C15.398 4 14.932 4 14 4M3 21V3"/>`), g.Group(children),
	)
}

func AlignLeftSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M20.052 13.46a2.75 2.75 0 0 1 1.489 1.488c.12.29.167.59.188.907c.021.304.021.675.021 1.12v.05c0 .445 0 .816-.02 1.12a2.8 2.8 0 0 1-.19.907a2.75 2.75 0 0 1-1.488 1.489c-.29.12-.59.167-.907.188c-.304.021-.675.021-1.12.021h-8.05c-.445 0-.816 0-1.12-.02a2.8 2.8 0 0 1-.907-.19a2.75 2.75 0 0 1-1.489-1.488c-.12-.29-.167-.59-.188-.907c-.021-.304-.021-.675-.021-1.12v-.05c0-.445 0-.816.02-1.12c.022-.318.07-.617.19-.907a2.75 2.75 0 0 1 1.488-1.489c.29-.12.59-.167.907-.188c.304-.021.675-.021 1.12-.021h8.05c.445 0 .816 0 1.12.02c.317.022.617.069.907.19m-4-10a2.75 2.75 0 0 1 1.489 1.488c.12.29.167.59.188.907c.021.304.021.675.021 1.12v.05c0 .445 0 .816-.02 1.12a2.8 2.8 0 0 1-.19.907a2.75 2.75 0 0 1-1.488 1.489c-.29.12-.59.167-.907.188c-.304.021-.675.021-1.12.021h-4.05c-.445 0-.816 0-1.12-.02a2.8 2.8 0 0 1-.907-.19a2.75 2.75 0 0 1-1.489-1.488c-.12-.29-.167-.59-.188-.907c-.021-.304-.021-.675-.021-1.12v-.05c0-.445 0-.816.02-1.12a2.8 2.8 0 0 1 .19-.907a2.75 2.75 0 0 1 1.488-1.489c.29-.12.59-.167.907-.188c.304-.021.675-.021 1.12-.021h4.05c.445 0 .816 0 1.12.02c.318.022.617.069.907.19M3 2.25a.75.75 0 0 1 .75.75v18a.75.75 0 0 1-1.5 0V3A.75.75 0 0 1 3 2.25"/>`), g.Group(children),
	)
}

func AlignRight(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M14 14H6c-.932 0-1.398 0-1.765.152a2 2 0 0 0-1.083 1.083C3 15.602 3 16.068 3 17s0 1.398.152 1.765a2 2 0 0 0 1.083 1.083C4.602 20 5.068 20 6 20h8c.932 0 1.398 0 1.765-.152a2 2 0 0 0 1.083-1.083C17 18.398 17 17.932 17 17s0-1.398-.152-1.765a2 2 0 0 0-1.083-1.083C15.398 14 14.932 14 14 14m0-10h-4c-.932 0-1.398 0-1.765.152a2 2 0 0 0-1.083 1.083C7 5.602 7 6.068 7 7s0 1.398.152 1.765a2 2 0 0 0 1.083 1.083C8.602 10 9.068 10 10 10h4c.932 0 1.398 0 1.765-.152a2 2 0 0 0 1.083-1.083C17 8.398 17 7.932 17 7s0-1.398-.152-1.765a2 2 0 0 0-1.083-1.083C15.398 4 14.932 4 14 4m7 17V3"/>`), g.Group(children),
	)
}

func AlignRightSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M21 2.25a.75.75 0 0 1 .75.75v18a.75.75 0 0 1-1.5 0V3a.75.75 0 0 1 .75-.75m-4.948 1.21a2.75 2.75 0 0 1 1.489 1.488c.12.29.167.59.188.907c.021.304.021.675.021 1.12v.05c0 .445 0 .816-.02 1.12a2.8 2.8 0 0 1-.19.907a2.75 2.75 0 0 1-1.488 1.489c-.29.12-.59.167-.907.188c-.304.021-.675.021-1.12.021h-4.05c-.445 0-.816 0-1.12-.02a2.8 2.8 0 0 1-.907-.19a2.75 2.75 0 0 1-1.489-1.488c-.12-.29-.167-.59-.188-.907c-.021-.304-.021-.675-.021-1.12v-.05c0-.445 0-.816.02-1.12a2.8 2.8 0 0 1 .19-.907a2.75 2.75 0 0 1 1.488-1.489c.29-.12.59-.167.907-.188c.304-.021.675-.021 1.12-.021h4.05c.445 0 .816 0 1.12.02c.318.022.617.069.907.19M5.975 13.25h8.05c.445 0 .816 0 1.12.02c.318.022.617.069.907.19a2.75 2.75 0 0 1 1.489 1.488c.12.29.167.59.188.907c.021.304.021.675.021 1.12v.05c0 .445 0 .816-.02 1.12a2.8 2.8 0 0 1-.19.907a2.75 2.75 0 0 1-1.488 1.489c-.29.12-.59.167-.907.188c-.304.021-.675.021-1.12.021h-8.05c-.445 0-.816 0-1.12-.02a2.8 2.8 0 0 1-.907-.19a2.75 2.75 0 0 1-1.489-1.488c-.12-.29-.167-.59-.188-.907c-.021-.304-.021-.675-.021-1.12v-.05c0-.445 0-.816.02-1.12c.022-.318.069-.617.19-.907a2.75 2.75 0 0 1 1.488-1.489c.29-.12.59-.167.907-.188c.304-.021.675-.021 1.12-.021"/>`), g.Group(children),
	)
}

func AlignTop(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M10 18v-8c0-.932 0-1.398-.152-1.765a2 2 0 0 0-1.083-1.083C8.398 7 7.932 7 7 7s-1.398 0-1.765.152a2 2 0 0 0-1.083 1.083C4 8.602 4 9.068 4 10v8c0 .932 0 1.398.152 1.765a2 2 0 0 0 1.083 1.083C5.602 21 6.068 21 7 21s1.398 0 1.765-.152a2 2 0 0 0 1.083-1.083C10 19.398 10 18.932 10 18m10-4v-4c0-.932 0-1.398-.152-1.765a2 2 0 0 0-1.083-1.083C18.398 7 17.932 7 17 7s-1.398 0-1.765.152a2 2 0 0 0-1.083 1.083C14 8.602 14 9.068 14 10v4c0 .932 0 1.398.152 1.765a2 2 0 0 0 1.083 1.083C15.602 17 16.068 17 17 17s1.398 0 1.765-.152a2 2 0 0 0 1.083-1.083C20 15.398 20 14.932 20 14m1-11H3"/>`), g.Group(children),
	)
}

func AlignTopSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 3A.75.75 0 0 1 3 2.25h18a.75.75 0 0 1 0 1.5H3A.75.75 0 0 1 2.25 3m4.725 3.25c-.445 0-.816 0-1.12.02a2.8 2.8 0 0 0-.907.19a2.75 2.75 0 0 0-1.489 1.488c-.12.29-.167.59-.188.907c-.021.304-.021.675-.021 1.12v8.05c0 .445 0 .816.02 1.12c.022.317.069.617.19.907a2.75 2.75 0 0 0 1.488 1.489c.29.12.59.167.907.188c.304.021.675.021 1.12.021h.05c.445 0 .816 0 1.12-.02c.317-.022.617-.069.907-.19a2.75 2.75 0 0 0 1.489-1.488c.12-.29.167-.59.188-.907c.021-.304.021-.675.021-1.12v-8.05c0-.445 0-.816-.02-1.12a2.8 2.8 0 0 0-.19-.907a2.75 2.75 0 0 0-1.488-1.489c-.29-.12-.59-.167-.907-.188c-.304-.021-.675-.021-1.12-.021zm10 0c-.445 0-.816 0-1.12.02a2.8 2.8 0 0 0-.907.19a2.75 2.75 0 0 0-1.489 1.488c-.12.29-.167.59-.188.907c-.021.304-.021.675-.021 1.12v4.05c0 .445 0 .816.02 1.12c.022.318.069.617.19.907a2.75 2.75 0 0 0 1.488 1.489c.29.12.59.167.907.188c.304.021.675.021 1.12.021h.05c.445 0 .816 0 1.12-.02c.317-.022.617-.069.907-.19a2.75 2.75 0 0 0 1.489-1.488c.12-.29.167-.59.188-.907c.021-.304.021-.675.021-1.12v-4.05c0-.445 0-.816-.02-1.12a2.8 2.8 0 0 0-.19-.907a2.75 2.75 0 0 0-1.488-1.489c-.29-.12-.59-.167-.907-.188c-.304-.021-.675-.021-1.12-.021z"/>`), g.Group(children),
	)
}

func AlignVertical(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3 12h1m17 0h-1m-10 0V8c0-.932 0-1.398-.152-1.765a2 2 0 0 0-1.083-1.083C8.398 5 7.932 5 7 5s-1.398 0-1.765.152a2 2 0 0 0-1.083 1.083C4 6.602 4 7.068 4 8v4m6 0v4c0 .932 0 1.398-.152 1.765a2 2 0 0 1-1.083 1.083C8.398 19 7.932 19 7 19s-1.398 0-1.765-.152a2 2 0 0 1-1.083-1.083C4 17.398 4 16.932 4 16v-4m6 0h4m0 0v2c0 .932 0 1.398.152 1.765a2 2 0 0 0 1.083 1.083C15.602 17 16.068 17 17 17s1.398 0 1.765-.152a2 2 0 0 0 1.083-1.083C20 15.398 20 14.932 20 14v-2m-6 0v-2c0-.932 0-1.398.152-1.765a2 2 0 0 1 1.083-1.083C15.602 7 16.068 7 17 7s1.398 0 1.765.152a2 2 0 0 1 1.083 1.083C20 8.602 20 9.068 20 10v2"/>`), g.Group(children),
	)
}

func AlignVerticalSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M6.975 4.25h.05c.445 0 .816 0 1.12.02c.317.022.617.07.907.19a2.75 2.75 0 0 1 1.489 1.488c.12.29.167.59.188.907c.021.304.021.675.021 1.12v3.275h2.5V9.975c0-.445 0-.816.02-1.12c.022-.317.069-.617.19-.907a2.75 2.75 0 0 1 1.488-1.489c.29-.12.59-.167.907-.188c.304-.021.675-.021 1.12-.021h.05c.445 0 .816 0 1.12.02c.317.022.617.07.907.19a2.75 2.75 0 0 1 1.489 1.488c.12.29.167.59.188.907c.021.304.021.675.021 1.12v1.275H21a.75.75 0 0 1 0 1.5h-.25v1.275c0 .445 0 .816-.02 1.12a2.8 2.8 0 0 1-.19.907a2.75 2.75 0 0 1-1.488 1.489c-.29.12-.59.167-.907.188c-.304.021-.675.021-1.12.021h-.05c-.445 0-.816 0-1.12-.02a2.8 2.8 0 0 1-.907-.19a2.75 2.75 0 0 1-1.489-1.488c-.12-.29-.167-.59-.188-.907c-.021-.304-.021-.675-.021-1.12V12.75h-2.5v3.275c0 .445 0 .816-.02 1.12a2.8 2.8 0 0 1-.19.907a2.75 2.75 0 0 1-1.488 1.489c-.29.12-.59.167-.907.188c-.304.021-.675.021-1.12.021h-.05c-.445 0-.816 0-1.12-.02a2.8 2.8 0 0 1-.907-.19a2.75 2.75 0 0 1-1.489-1.488c-.12-.29-.167-.59-.188-.907c-.021-.304-.021-.675-.021-1.12V12.75H3a.75.75 0 0 1 0-1.5h.25V7.975c0-.445 0-.816.02-1.12c.022-.317.069-.617.19-.907a2.75 2.75 0 0 1 1.488-1.489c.29-.12.59-.167.907-.188c.304-.021.675-.021 1.12-.021"/>`), g.Group(children),
	)
}

func Alt(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3 5.25h5.625l6.75 13.5H21m-6.75-13.5H21"/>`), g.Group(children),
	)
}

func AltSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M3 4.25a1 1 0 0 0 0 2h5.007l6.474 12.947a1 1 0 0 0 .894.553H21a1 1 0 1 0 0-2h-5.007L9.519 4.803a1 1 0 0 0-.894-.553zm11.25 0a1 1 0 1 0 0 2H21a1 1 0 1 0 0-2z"/>`), g.Group(children),
	)
}

func Ambulance(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M6.9 10h4m-2-2v4m.307 4.455C9.207 17.86 8.095 19 6.724 19s-2.483-1.14-2.483-2.546m4.966 0c0-1.405-1.112-2.545-2.483-2.545s-2.483 1.14-2.483 2.545m4.966 0h5.586m-10.552 0H3V6a1 1 0 0 1 1-1h9.793a1 1 0 0 1 1 1v2.182m5.586 8.272c0 1.406-1.111 2.546-2.482 2.546s-2.483-1.14-2.483-2.546m4.965 0c0-1.405-1.111-2.545-2.482-2.545s-2.483 1.14-2.483 2.545m4.965 0H21v-5.09l-2.515-2.579a2 2 0 0 0-1.431-.603h-2.26m.62 8.272h-.62m0 0V8.182"/>`), g.Group(children),
	)
}

func AmbulanceSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.872 17.205h4.876c.332 1.448 1.603 2.545 3.149 2.545c1.545 0 2.817-1.098 3.148-2.547a.75.75 0 0 0 .705-.748v-5.091a.75.75 0 0 0-.213-.524l-2.515-2.578a2.75 2.75 0 0 0-1.968-.83h-1.51V6a1.75 1.75 0 0 0-1.75-1.75H4A1.75 1.75 0 0 0 2.25 6v10.455c0 .414.336.75.75.75h.576c.332 1.448 1.603 2.545 3.148 2.545s2.817-1.097 3.148-2.546m-4.88-.75c0-1.01.793-1.796 1.732-1.796c.94 0 1.733.786 1.733 1.795c0 1.01-.793 1.796-1.733 1.796s-1.733-.786-1.733-1.796m11.172 0c0-1.01.793-1.796 1.733-1.796c.939 0 1.732.786 1.732 1.795c0 1.01-.793 1.796-1.732 1.796c-.94 0-1.733-.786-1.733-1.796M9.649 8v1.25h1.25a.75.75 0 0 1 0 1.5H9.65V12a.75.75 0 0 1-1.5 0v-1.25H6.9a.75.75 0 0 1 0-1.5h1.25V8a.75.75 0 1 1 1.5 0"/>`), g.Group(children),
	)
}

func Ampersand(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M17.5 19.5C14.99 16.796 6.5 12 7.162 7.261c0-1.5 1.243-2.761 2.699-2.761s2.7 1.26 2.7 2.761c0 2.497-3.555 4.78-5.086 6.347c-1.3 1.33-1.3 3.551 0 4.881c1.297 1.327 3.488 1.314 4.773 0l5.252-5.552"/>`), g.Group(children),
	)
}

func AmpersandSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.201 12.179c.31-.277.622-.566.921-.865c1.084-1.083 2.188-2.472 2.188-4.053c0-1.9-1.565-3.511-3.449-3.511c-1.867 0-3.42 1.58-3.45 3.458c-.18 1.412.318 2.764 1.102 3.989q.269.418.584.826a20 20 0 0 0-1.158 1.06c-1.585 1.622-1.585 4.309 0 5.93c1.593 1.63 4.268 1.613 5.845 0l1.345-1.421l.137.109c1.153.915 2.104 1.684 2.684 2.31a.75.75 0 0 0 1.1-1.021c-.675-.727-1.727-1.572-2.851-2.464l-.035-.028l2.88-3.045a.75.75 0 1 0-1.089-1.031l-2.97 3.139a52 52 0 0 1-2.34-1.974a24 24 0 0 1-1.444-1.408m-.34-6.929c1.028 0 1.95.91 1.95 2.011c0 .916-.673 1.917-1.75 2.992c-.266.267-.547.527-.831.782a10 10 0 0 1-.454-.647c-.69-1.077-1.003-2.083-.872-3.023a1 1 0 0 0 .007-.104c0-1.1.922-2.011 1.95-2.011m-.792 7.915c.493.53 1.025 1.042 1.57 1.535a52 52 0 0 0 2.313 1.954l-1.244 1.315c-.993 1.01-2.697 1.018-3.697-.004c-1.015-1.038-1.015-2.794 0-3.833c.282-.288.643-.607 1.058-.967"/>`), g.Group(children),
	)
}

func AmpersandSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/><path d="M15.75 17c-1.712-1.803-7.5-5-7.049-8.16c0-1 .848-1.84 1.84-1.84s1.841.84 1.841 1.84c0 1.665-2.423 3.188-3.467 4.232a2.324 2.324 0 0 0 0 3.254c.884.885 2.378.876 3.254 0l3.581-3.701"/></g>`), g.Group(children),
	)
}

func AmpersandSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M9.451 8.84c0-.584.51-1.09 1.09-1.09s1.091.506 1.091 1.09c0 .494-.381 1.095-1.116 1.812q-.18.175-.37.346a6 6 0 0 1-.147-.214c-.453-.692-.632-1.298-.556-1.837a1 1 0 0 0 .008-.106m-.006 4.761q.223-.221.541-.49c.298.303.613.597.932.879c.446.394.911.776 1.367 1.137l-.65.672c-.586.58-1.601.584-2.19-.004a1.574 1.574 0 0 1 0-2.194"/><path d="M14.633 2.25c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057zm-3.069 9.475c.738-.72 1.568-1.713 1.568-2.884c0-1.417-1.185-2.591-2.59-2.591c-1.387 0-2.56 1.144-2.59 2.536c-.13 1.022.243 1.981.792 2.82q.123.187.26.372c-.224.192-.44.383-.62.563c-1.179 1.18-1.179 3.136 0 4.316c1.18 1.178 3.148 1.166 4.315 0l.775-.8c.758.588 1.363 1.07 1.732 1.46a.75.75 0 1 0 1.088-1.033c-.434-.457-1.083-.976-1.771-1.512l1.766-1.826a.75.75 0 1 0-1.078-1.043l-1.878 1.942c-.48-.379-.962-.771-1.422-1.178q-.415-.367-.783-.735q.221-.197.436-.407M9.451 8.841c0-.585.51-1.091 1.09-1.091s1.091.506 1.091 1.09c0 .494-.381 1.095-1.116 1.812q-.18.175-.37.346a6 6 0 0 1-.147-.214c-.453-.692-.632-1.298-.556-1.837a1 1 0 0 0 .008-.106m-.006 4.761q.223-.221.541-.49c.298.303.613.597.932.879c.446.394.911.776 1.367 1.137l-.65.672c-.586.58-1.601.584-2.19-.004a1.574 1.574 0 0 1 0-2.194"/></g>`), g.Group(children),
	)
}

func Ampersands(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M11 17.5C9.174 15.517 3 12 3.481 8.525c0-1.1.904-2.025 1.963-2.025s1.964.924 1.964 2.025c0 1.83-2.585 3.505-3.699 4.654c-.945.975-.945 2.605 0 3.58c.944.973 2.537.963 3.471 0L11 12.687M21 17.5c-1.826-1.983-8-5.5-7.519-8.975c0-1.1.904-2.025 1.963-2.025s1.964.924 1.964 2.025c0 1.83-2.585 3.505-3.699 4.654c-.945.975-.945 2.605 0 3.58c.944.973 2.537.963 3.471 0L21 12.687"/>`), g.Group(children),
	)
}

func AmpersandsSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M5.98 12.142q.422.44.9.876c.5.455 1.025.895 1.545 1.318l2.028-2.162a.75.75 0 1 1 1.094 1.027l-1.949 2.077c.761.61 1.48 1.2 1.954 1.714a.75.75 0 0 1-1.104 1.016c-.401-.436-1.06-.976-1.88-1.633l-.85.906c-1.226 1.265-3.307 1.278-4.547 0c-1.228-1.266-1.228-3.358 0-4.624c.206-.213.456-.44.716-.668a9 9 0 0 1-.324-.472c-.582-.917-.967-1.952-.831-3.045C2.76 7 3.969 5.75 5.444 5.75c1.493 0 2.714 1.28 2.714 2.775c0 1.245-.86 2.315-1.65 3.111q-.26.261-.528.506M5.444 7.25c-.625 0-1.213.568-1.213 1.275a1 1 0 0 1-.007.103c-.087.626.117 1.316.605 2.084q.089.14.187.279q.22-.203.428-.412c.78-.786 1.214-1.469 1.214-2.054c0-.707-.589-1.275-1.214-1.275m-.59 5.885a11 11 0 0 0-.606.566c-.664.684-.664 1.851 0 2.536a1.69 1.69 0 0 0 2.39.004l.758-.809a37 37 0 0 1-1.526-1.306a20 20 0 0 1-1.016-.99m11.126-.994q.422.44.9.876c.5.455 1.025.895 1.545 1.318l2.028-2.162a.75.75 0 1 1 1.094 1.027l-1.949 2.077c.762.61 1.48 1.2 1.954 1.714a.75.75 0 0 1-1.104 1.016c-.401-.436-1.06-.976-1.88-1.633l-.85.906c-1.226 1.265-3.307 1.278-4.547 0c-1.228-1.266-1.228-3.358 0-4.624c.206-.213.456-.44.716-.668a9 9 0 0 1-.324-.472c-.582-.917-.967-1.952-.831-3.045C12.76 7 13.969 5.75 15.444 5.75c1.493 0 2.714 1.28 2.714 2.775c0 1.245-.86 2.315-1.65 3.111q-.26.261-.528.506m-.536-4.892c-.625 0-1.213.568-1.213 1.275a1 1 0 0 1-.007.103c-.087.626.117 1.316.605 2.084q.089.14.187.279q.22-.203.428-.412c.78-.786 1.214-1.469 1.214-2.054c0-.707-.588-1.275-1.214-1.275m-.59 5.885c-.237.21-.441.396-.606.566c-.664.684-.664 1.851 0 2.536a1.69 1.69 0 0 0 2.39.004l.758-.809a37 37 0 0 1-1.526-1.306a20 20 0 0 1-1.016-.99"/>`), g.Group(children),
	)
}

func Anchor(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M5 12H3a9 9 0 1 0 18 0h-2m-7-5v14m0-14a2 2 0 1 0 0-4a2 2 0 0 0 0 4"/>`), g.Group(children),
	)
}

func AnchorSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12 2.25a2.75 2.75 0 0 0-.75 5.396v12.57a8.25 8.25 0 0 1-7.466-7.466H5a.75.75 0 0 0 0-1.5H3a.75.75 0 0 0-.75.75c0 5.385 4.365 9.75 9.75 9.75s9.75-4.365 9.75-9.75a.75.75 0 0 0-.75-.75h-2a.75.75 0 0 0 0 1.5h1.216a8.25 8.25 0 0 1-7.466 7.466V7.646A2.751 2.751 0 0 0 12 2.25"/>`), g.Group(children),
	)
}

func AngryCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/><path d="M9 16c.85-.63 1.885-1 3-1s2.15.37 3 1M8 8l3 1.5m2 0L16 8m-6.5 2.5V10m5 .5V10"/></g>`), g.Group(children),
	)
}

func AngryCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0 5.385 4.365 9.75 9.75 9.75s9.75-4.365 9.75-9.75S17.385 2.25 12 2.25S2.25 6.615 2.25 12m5.08-4.335a.75.75 0 0 1 1.005-.336l3 1.5a.75.75 0 1 1-.67 1.342l-.416-.208v.537a.75.75 0 1 1-1.5 0V10a.75.75 0 0 1 .33-.621L7.666 8.67a.75.75 0 0 1-.336-1.006m9.005 1.006l-1.415.708c.199.134.33.362.33.621v.5a.75.75 0 0 1-1.5 0v-.537l-.415.208a.75.75 0 1 1-.67-1.342l3-1.5a.75.75 0 1 1 .67 1.342m-7.782 6.727A5.77 5.77 0 0 1 12 14.25c1.285 0 2.474.427 3.447 1.148a.75.75 0 1 1-.894 1.204A4.27 4.27 0 0 0 12 15.75a4.27 4.27 0 0 0-2.553.852a.75.75 0 1 1-.894-1.204"/>`), g.Group(children),
	)
}

func AngryGhost(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M3 18.562v-6.518C3 7.05 7.03 3 12 3s9 4.05 9 9.044v6.517c0 1.162-.967 2.519-2 2c-.835-.42-2.223-.52-3 0c-.874.585-2.126.585-3 0c-.885-.593-1.649-.57-2.5 0c-.874.585-2.126.585-3 0c-.777-.52-1.665-.42-2.5 0c-1.033.519-2-.838-2-2"/><path d="M9 16c.85-.63 1.885-1 3-1s2.15.37 3 1M8 8l3 1.5m2 0L16 8m-6.5 2.5V10m5 .5V10"/></g>`), g.Group(children),
	)
}

func AngryGhostSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12.044v6.517c0 .764.308 1.57.8 2.127c.501.567 1.354 1.012 2.287.543c.696-.35 1.275-.363 1.746-.047c1.126.755 2.708.755 3.834 0c.345-.23.607-.308.825-.31c.218-.001.485.072.84.31c1.127.755 2.709.755 3.835 0c.213-.142.58-.237 1.044-.226c.454.01.898.12 1.202.273c.933.469 1.786.024 2.287-.543c.492-.557.8-1.363.8-2.126v-6.518c0-5.405-4.362-9.794-9.75-9.794s-9.75 4.389-9.75 9.794m6.303 3.354A5.77 5.77 0 0 1 12 14.25c1.285 0 2.474.427 3.447 1.148a.75.75 0 1 1-.894 1.204A4.27 4.27 0 0 0 12 15.75a4.27 4.27 0 0 0-2.553.852a.75.75 0 1 1-.894-1.204m-.218-8.069l3 1.5a.75.75 0 1 1-.67 1.342l-.416-.208v.537a.75.75 0 1 1-1.5 0V10a.75.75 0 0 1 .33-.621L7.666 8.67a.75.75 0 0 1 .67-1.342m8.336.336a.75.75 0 0 1-.336 1.006l-1.415.708c.199.134.33.362.33.621v.5a.75.75 0 0 1-1.5 0v-.537l-.415.208a.75.75 0 1 1-.67-1.342l3-1.5a.75.75 0 0 1 1.006.336"/>`), g.Group(children),
	)
}

func AngrySquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/><path d="M9 16c.85-.63 1.885-1 3-1s2.15.37 3 1M8 8l3 1.5m2 0L16 8m-6.5 2.5V10m5 .5V10"/></g>`), g.Group(children),
	)
}

func AngrySquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25c-1.092 0-1.958 0-2.655.057c-.714.058-1.317.18-1.868.46a4.75 4.75 0 0 0-2.076 2.077c-.281.55-.403 1.154-.461 1.868c-.057.697-.057 1.563-.057 2.655v5.266c0 1.092 0 1.958.057 2.655c.058.714.18 1.317.46 1.869a4.75 4.75 0 0 0 2.077 2.075c.55.281 1.154.403 1.868.461c.697.057 1.563.057 2.655.057h5.266c1.092 0 1.958 0 2.655-.057c.714-.058 1.317-.18 1.869-.46a4.75 4.75 0 0 0 2.075-2.076c.281-.552.403-1.155.461-1.869c.057-.697.057-1.563.057-2.655V9.367c0-1.092 0-1.958-.057-2.655c-.058-.714-.18-1.317-.46-1.868a4.75 4.75 0 0 0-2.076-2.076c-.552-.281-1.155-.403-1.869-.461c-.697-.057-1.563-.057-2.655-.057zm-.814 13.148A5.77 5.77 0 0 1 12 14.25c1.285 0 2.474.427 3.447 1.148a.75.75 0 1 1-.894 1.204A4.27 4.27 0 0 0 12 15.75a4.27 4.27 0 0 0-2.553.852a.75.75 0 1 1-.894-1.204m-.218-8.069l3 1.5a.75.75 0 1 1-.67 1.342l-.416-.208v.537a.75.75 0 1 1-1.5 0V10a.75.75 0 0 1 .33-.621L7.666 8.67a.75.75 0 0 1 .67-1.342m8.336.336a.75.75 0 0 1-.336 1.006l-1.415.708c.199.134.33.362.33.621v.5a.75.75 0 0 1-1.5 0v-.537l-.415.208a.75.75 0 1 1-.67-1.342l3-1.5a.75.75 0 0 1 1.006.336"/>`), g.Group(children),
	)
}

func AnnoyedCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0M9 15.5h6m-5-5.25H9m6 0h-1"/>`), g.Group(children),
	)
}

func AnnoyedCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0 5.385 4.365 9.75 9.75 9.75s9.75-4.365 9.75-9.75S17.385 2.25 12 2.25S2.25 6.615 2.25 12m6 3.5a.75.75 0 0 1 .75-.75h6a.75.75 0 0 1 0 1.5H9a.75.75 0 0 1-.75-.75m.75-6h1a.75.75 0 0 1 0 1.5H9a.75.75 0 0 1 0-1.5m4.25.75A.75.75 0 0 1 14 9.5h1a.75.75 0 0 1 0 1.5h-1a.75.75 0 0 1-.75-.75"/>`), g.Group(children),
	)
}

func AnnoyedGhost(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3 18.562v-6.518C3 7.05 7.03 3 12 3s9 4.05 9 9.044v6.517c0 1.162-.967 2.519-2 2c-.835-.42-2.223-.52-3 0c-.874.585-2.126.585-3 0c-.885-.593-1.649-.57-2.5 0c-.874.585-2.126.585-3 0c-.777-.52-1.665-.42-2.5 0c-1.033.519-2-.838-2-2M9 15.5h6m-5-5.25H9m6 0h-1"/>`), g.Group(children),
	)
}

func AnnoyedGhostSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12.044v6.517c0 .764.308 1.57.8 2.127c.501.567 1.354 1.012 2.287.543c.696-.35 1.275-.363 1.746-.047c1.126.755 2.708.755 3.834 0c.345-.23.607-.308.825-.31c.218-.001.485.072.84.31c1.127.755 2.709.755 3.835 0c.213-.142.58-.237 1.044-.226c.454.01.898.12 1.202.273c.933.469 1.786.024 2.287-.543c.492-.557.8-1.363.8-2.126v-6.518c0-5.405-4.362-9.794-9.75-9.794s-9.75 4.389-9.75 9.794m6 3.456a.75.75 0 0 1 .75-.75h6a.75.75 0 0 1 0 1.5H9a.75.75 0 0 1-.75-.75m.75-6h1a.75.75 0 0 1 0 1.5H9a.75.75 0 0 1 0-1.5m4.25.75A.75.75 0 0 1 14 9.5h1a.75.75 0 0 1 0 1.5h-1a.75.75 0 0 1-.75-.75"/>`), g.Group(children),
	)
}

func AnnoyedSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6zm6 6.1h6m-5-5.25H9m6 0h-1"/>`), g.Group(children),
	)
}

func AnnoyedSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25c-1.092 0-1.958 0-2.655.057c-.714.058-1.317.18-1.868.46a4.75 4.75 0 0 0-2.076 2.077c-.281.55-.403 1.154-.461 1.868c-.057.697-.057 1.563-.057 2.655v5.266c0 1.092 0 1.958.057 2.655c.058.714.18 1.317.46 1.869a4.75 4.75 0 0 0 2.077 2.075c.55.281 1.154.403 1.868.461c.697.057 1.563.057 2.655.057h5.266c1.092 0 1.958 0 2.655-.057c.714-.058 1.317-.18 1.869-.46a4.75 4.75 0 0 0 2.075-2.076c.281-.552.403-1.155.461-1.869c.057-.697.057-1.563.057-2.655V9.367c0-1.092 0-1.958-.057-2.655c-.058-.714-.18-1.317-.46-1.868a4.75 4.75 0 0 0-2.076-2.076c-.552-.281-1.155-.403-1.869-.461c-.697-.057-1.563-.057-2.655-.057zM8.25 15.5a.75.75 0 0 1 .75-.75h6a.75.75 0 0 1 0 1.5H9a.75.75 0 0 1-.75-.75m.75-6h1a.75.75 0 0 1 0 1.5H9a.75.75 0 0 1 0-1.5m4.25.75A.75.75 0 0 1 14 9.5h1a.75.75 0 0 1 0 1.5h-1a.75.75 0 0 1-.75-.75"/>`), g.Group(children),
	)
}

func Aperture(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m14.079 8.4l5.166 8.946M9.921 8.4h10.332M7.842 12l5.166-8.946M9.921 15.6L4.755 6.654M14.08 15.6H3.746M16.158 12l-5.166 8.946M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/>`), g.Group(children),
	)
}

func ApertureSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M4.726 8.104A8.2 8.2 0 0 0 3.75 12c0 1.002.179 1.962.506 2.85h4.366l-1.42-2.457l-.019-.034zM4.111 6.27a1 1 0 0 1 .088-.12a9.74 9.74 0 0 1 8.837-3.846a9.76 9.76 0 0 1 7.924 5.844A9.7 9.7 0 0 1 21.75 12c0 2.141-.69 4.122-1.86 5.73a1 1 0 0 1-.09.12a9.74 9.74 0 0 1-8.836 3.846a9.76 9.76 0 0 1-7.924-5.844A9.7 9.7 0 0 1 2.25 12c0-2.142.69-4.122 1.86-5.73m1.549.451l2.182 3.78l1.425-2.468l.008-.015l2.463-4.264A8.23 8.23 0 0 0 5.66 6.721m7.743-2.852L11.22 7.65h7.792a8.26 8.26 0 0 0-5.609-3.781m6.341 5.281h-4.366l1.42 2.457l.019.034l2.457 4.255A8.2 8.2 0 0 0 20.25 12a8.2 8.2 0 0 0-.506-2.85m-1.404 8.129l-2.182-3.78l-3.896 6.747a8.23 8.23 0 0 0 6.078-2.967m-7.743 2.852l2.183-3.781H4.988a8.26 8.26 0 0 0 5.609 3.781"/>`), g.Group(children),
	)
}

func Api(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M5.5 13L7 11.5l5.5 5.5l-1.5 1.5c-.75.75-3.5 2-5.5 0s-.75-4.75 0-5.5M3 21l2.5-2.5m13-7.5L17 12.5L11.5 7L13 5.5c.75-.75 3.5-2 5.5 0s.75 4.75 0 5.5m-6-3l-2 2M21 3l-2.5 2.5m-2.5 6l-2 2"/>`), g.Group(children),
	)
}

func ApiSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M3.53 21.53a.75.75 0 0 1-1.06-1.06l2.01-2.011c-.774-1.073-.908-2.265-.753-3.29c.178-1.172.743-2.2 1.243-2.7l1.5-1.5a.75.75 0 0 1 1.06 0l5.5 5.5a.75.75 0 0 1 0 1.061l-1.5 1.5c-.5.5-1.527 1.065-2.699 1.243c-1.025.155-2.217.02-3.29-.754zm7.5-11a.75.75 0 1 1-1.06-1.06L11.44 8l-.47-.47a.75.75 0 0 1 0-1.06l1.5-1.5c.5-.5 1.527-1.065 2.699-1.243c1.025-.155 2.217-.02 3.29.754l2.01-2.011a.75.75 0 1 1 1.061 1.06l-2.01 2.012c.774 1.072.91 2.264.754 3.29c-.178 1.171-.743 2.198-1.243 2.698l-1.5 1.5a.75.75 0 0 1-1.06 0l-.47-.47l-1.47 1.47a.75.75 0 1 1-1.06-1.06l1.47-1.47l-2.44-2.44z"/>`), g.Group(children),
	)
}

func Ar(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m8 10l4 2m-4-2v4l4 2m-4-6l4-2l4 2m-4 2l4-2m-4 2v4m4-6v4l-4 2m-2.6 5c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6m18 0c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21m0-18c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4M9.4 3c-2.24 0-3.36 0-4.216.436a4 4 0 0 0-1.748 1.748C3 6.04 3 7.16 3 9.4"/>`), g.Group(children),
	)
}

func ArSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25H9.4a.75.75 0 0 1 0 1.5c-1.132 0-1.937 0-2.566.052c-.62.05-1.005.147-1.31.302a3.25 3.25 0 0 0-1.42 1.42c-.155.305-.251.69-.302 1.31c-.051.63-.052 1.434-.052 2.566a.75.75 0 0 1-1.5 0v-.033c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057m7.8 1.552c-.63-.051-1.435-.052-2.567-.052a.75.75 0 0 1 0-1.5h.033c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655V9.4a.75.75 0 0 1-1.5 0c0-1.132 0-1.937-.052-2.566c-.05-.62-.147-1.005-.302-1.31a3.25 3.25 0 0 0-1.42-1.42c-.305-.155-.69-.251-1.31-.302m-5.502 3.527a.75.75 0 0 1 .67 0l4 2a.75.75 0 0 1 .415.671v4a.75.75 0 0 1-.415.67l-4 2a.75.75 0 0 1-.67 0l-4-2A.75.75 0 0 1 7.25 14v-4a.75.75 0 0 1 .415-.67zM3 13.85a.75.75 0 0 1 .75.75c0 1.133 0 1.937.052 2.566c.05.62.147 1.005.302 1.31a3.25 3.25 0 0 0 1.42 1.42c.305.155.69.251 1.31.302c.63.051 1.434.052 2.566.052a.75.75 0 0 1 0 1.5h-.033c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V14.6a.75.75 0 0 1 .75-.75m18 0a.75.75 0 0 1 .75.75v.033c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H14.6a.75.75 0 0 1 0-1.5c1.133 0 1.937 0 2.566-.052c.62-.05 1.005-.147 1.31-.302a3.25 3.25 0 0 0 1.42-1.42c.155-.305.251-.69.302-1.31c.051-.63.052-1.434.052-2.566a.75.75 0 0 1 .75-.75"/>`), g.Group(children),
	)
}

func Archive(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M10.5 11.5h3M20 8v11a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V8m17 0V5a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v3z"/>`), g.Group(children),
	)
}

func ArchiveSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M5 2.25h14A2.75 2.75 0 0 1 21.75 5v3a.75.75 0 0 1-.75.75h-.25V19A2.75 2.75 0 0 1 18 21.75H6A2.75 2.75 0 0 1 3.25 19V8.75H3A.75.75 0 0 1 2.25 8V5A2.75 2.75 0 0 1 5 2.25m-1.25 5h16.5V5c0-.69-.56-1.25-1.25-1.25H5c-.69 0-1.25.56-1.25 1.25zm6.75 3.5a.75.75 0 0 0 0 1.5h3a.75.75 0 0 0 0-1.5z"/>`), g.Group(children),
	)
}

func ArrowDiagonalOne(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m4.929 12.707l7.778-7.778m0 0v4.95m0-4.95h-4.95m11.314 6.364l-7.778 7.778m0 0h4.95m-4.95 0v-4.95"/>`), g.Group(children),
	)
}

func ArrowDiagonalOneSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M4.399 13.237a.75.75 0 0 0 1.06 0l4.929-4.928l2.32 2.32a.75.75 0 0 0 .75-.75v-4.95a.75.75 0 0 0-.75-.75h-4.95a.75.75 0 0 0-.75.75l2.319 2.32l-4.928 4.928a.75.75 0 0 0 0 1.06m15.202-2.474a.75.75 0 0 1 0 1.06l-4.928 4.929l2.32 2.32a.75.75 0 0 1-.75.75h-4.95a.75.75 0 0 1-.75-.75v-4.95a.75.75 0 0 1 .75-.75l2.32 2.319l4.928-4.928a.75.75 0 0 1 1.06 0"/>`), g.Group(children),
	)
}

func ArrowDiagonalTwo(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m11.293 4.929l7.778 7.778m0 0h-4.95m4.95 0v-4.95m-6.364 11.314L4.93 11.293m0 0v4.95m0-4.95h4.95"/>`), g.Group(children),
	)
}

func ArrowDiagonalTwoSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M13.238 19.601a.75.75 0 0 0 0-1.06l-4.929-4.929l2.32-2.32a.75.75 0 0 0-.75-.75h-4.95a.75.75 0 0 0-.75.75v4.95c0 .415.336.75.75.75l2.32-2.319l4.928 4.928a.75.75 0 0 0 1.06 0M10.763 4.399a.75.75 0 0 1 1.06 0l4.929 4.928l2.32-2.32a.75.75 0 0 1 .75.75v4.95a.75.75 0 0 1-.75.75h-4.95a.75.75 0 0 1-.75-.75l2.32-2.32l-4.93-4.928a.75.75 0 0 1 0-1.06"/>`), g.Group(children),
	)
}

func ArrowDown(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M12 4.5v15m0 0l-6-5.625m6 5.625l6-5.625"/>`), g.Group(children),
	)
}

func ArrowDownCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M12 7.5v9m3.5-3.5L12 16.5L8.5 13"/><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/></g>`), g.Group(children),
	)
}

func ArrowDownCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0 5.385 4.365 9.75 9.75 9.75s9.75-4.365 9.75-9.75S17.385 2.25 12 2.25S2.25 6.615 2.25 12M12 6.75a.75.75 0 0 1 .75.75v7.19l2.22-2.22a.75.75 0 1 1 1.06 1.06l-3.5 3.5a.75.75 0 0 1-1.06 0l-3.5-3.5a.75.75 0 1 1 1.06-1.06l2.22 2.22V7.5a.75.75 0 0 1 .75-.75"/>`), g.Group(children),
	)
}

func ArrowDownLeft(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m17.5 6.5l-11 11m0 0h9m-9 0v-9"/>`), g.Group(children),
	)
}

func ArrowDownLeftCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="m15.182 8.818l-6.364 6.364m4.95 0h-4.95v-4.95"/><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/></g>`), g.Group(children),
	)
}

func ArrowDownLeftCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12m13.462-3.712a.75.75 0 0 0-1.06 0L9.568 13.37v-3.139a.75.75 0 0 0-1.5 0v4.95a.75.75 0 0 0 .75.75h4.95a.75.75 0 0 0 0-1.5h-3.14l5.084-5.084a.75.75 0 0 0 0-1.06"/>`), g.Group(children),
	)
}

func ArrowDownLeftSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M15.5 18.25a.75.75 0 0 0 .75-.75l-4.345-4.345L18.03 7.03a.75.75 0 0 0-1.06-1.06l-6.125 6.125L6.5 7.75a.75.75 0 0 0-.75.75v9c0 .414.336.75.75.75z"/>`), g.Group(children),
	)
}

func ArrowDownLeftSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="m15.182 8.818l-6.364 6.364m4.95 0h-4.95v-4.95"/><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/></g>`), g.Group(children),
	)
}

func ArrowDownLeftSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057m6.345 6.038a.75.75 0 0 0-1.06 0L9.568 13.37v-3.139a.75.75 0 0 0-1.5 0v4.95a.75.75 0 0 0 .75.75h4.95a.75.75 0 0 0 0-1.5h-3.14l5.084-5.084a.75.75 0 0 0 0-1.06"/>`), g.Group(children),
	)
}

func ArrowDownLeftWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="m15.182 8.818l-6.364 6.364m4.95 0h-4.95v-4.95"/><path d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83"/></g>`), g.Group(children),
	)
}

func ArrowDownLeftWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.565 2.075c-.394.189-.755.497-1.26.928l-.079.066a2.56 2.56 0 0 1-1.58.655l-.102.008c-.662.053-1.135.09-1.547.236a3.33 3.33 0 0 0-2.03 2.029c-.145.412-.182.885-.235 1.547l-.008.102a2.56 2.56 0 0 1-.655 1.58l-.066.078c-.431.506-.74.867-.928 1.261a3.33 3.33 0 0 0 0 2.87c.189.394.497.755.928 1.26l.066.079c.41.48.604.939.655 1.58l.008.102c.053.662.09 1.135.236 1.547a3.33 3.33 0 0 0 2.029 2.03c.412.145.885.182 1.547.235l.102.008c.629.05 1.09.238 1.58.655l.079.066c.505.431.866.74 1.26.928a3.33 3.33 0 0 0 2.87 0c.394-.189.755-.497 1.26-.928l.079-.066c.48-.41.939-.604 1.58-.655l.102-.008c.662-.053 1.135-.09 1.547-.236a3.33 3.33 0 0 0 2.03-2.029c.145-.412.182-.885.235-1.547l.008-.102c.05-.629.238-1.09.655-1.58l.066-.079c.431-.505.74-.866.928-1.26a3.33 3.33 0 0 0 0-2.87c-.189-.394-.497-.755-.928-1.26l-.066-.079a2.56 2.56 0 0 1-.655-1.58l-.008-.102c-.053-.662-.09-1.135-.236-1.547a3.33 3.33 0 0 0-2.029-2.03c-.412-.145-.885-.182-1.547-.235l-.102-.008a2.56 2.56 0 0 1-1.58-.655l-.079-.066c-.505-.431-.866-.74-1.26-.928a3.33 3.33 0 0 0-2.87 0m5.147 6.213a.75.75 0 0 1 0 1.06l-5.083 5.084h3.139a.75.75 0 1 1 0 1.5h-4.95a.75.75 0 0 1-.75-.75v-4.95a.75.75 0 0 1 1.5 0v3.14l5.084-5.084a.75.75 0 0 1 1.06 0"/>`), g.Group(children),
	)
}

func ArrowDownRight(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m6.5 6.5l11 11m0 0h-9m9 0v-9"/>`), g.Group(children),
	)
}

func ArrowDownRightCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="m8.818 8.818l6.364 6.364m0-4.95v4.95h-4.95"/><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/></g>`), g.Group(children),
	)
}

func ArrowDownRightCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12m6.038-3.712a.75.75 0 0 0 0 1.06l5.083 5.084h-3.139a.75.75 0 0 0 0 1.5h4.95a.75.75 0 0 0 .75-.75v-4.95a.75.75 0 0 0-1.5 0v3.14L9.348 8.287a.75.75 0 0 0-1.06 0"/>`), g.Group(children),
	)
}

func ArrowDownRightSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.5 18.25a.75.75 0 0 1-.75-.75l4.345-4.345L5.97 7.03a.75.75 0 0 1 1.06-1.06l6.125 6.125L17.5 7.75a.75.75 0 0 1 .75.75v9a.75.75 0 0 1-.75.75z"/>`), g.Group(children),
	)
}

func ArrowDownRightSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="m8.818 8.818l6.364 6.364m0-4.95v4.95h-4.95"/><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/></g>`), g.Group(children),
	)
}

func ArrowDownRightSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057m-1.08 6.038a.75.75 0 0 0 0 1.06l5.084 5.084h-3.139a.75.75 0 0 0 0 1.5h4.95a.75.75 0 0 0 .75-.75v-4.95a.75.75 0 0 0-1.5 0v3.14L9.348 8.287a.75.75 0 0 0-1.06 0"/>`), g.Group(children),
	)
}

func ArrowDownRightWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="m8.818 8.818l6.364 6.364m0-4.95v4.95h-4.95"/><path d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83"/></g>`), g.Group(children),
	)
}

func ArrowDownRightWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.565 2.075c-.394.189-.755.497-1.26.928l-.079.066a2.56 2.56 0 0 1-1.58.655l-.102.008c-.662.053-1.135.09-1.547.236a3.33 3.33 0 0 0-2.03 2.029c-.145.412-.182.885-.235 1.547l-.008.102a2.56 2.56 0 0 1-.655 1.58l-.066.078c-.431.506-.74.867-.928 1.261a3.33 3.33 0 0 0 0 2.87c.189.394.497.755.928 1.26l.066.079c.41.48.604.939.655 1.58l.008.102c.053.662.09 1.135.236 1.547a3.33 3.33 0 0 0 2.029 2.03c.412.145.885.182 1.547.235l.102.008c.629.05 1.09.238 1.58.655l.079.066c.505.431.866.74 1.26.928a3.33 3.33 0 0 0 2.87 0c.394-.189.755-.497 1.26-.928l.079-.066c.48-.41.939-.604 1.58-.655l.102-.008c.662-.053 1.135-.09 1.547-.236a3.33 3.33 0 0 0 2.03-2.029c.145-.412.182-.885.235-1.547l.008-.102c.05-.629.238-1.09.655-1.58l.066-.079c.431-.505.74-.866.928-1.26a3.33 3.33 0 0 0 0-2.87c-.189-.394-.497-.755-.928-1.26l-.066-.079a2.56 2.56 0 0 1-.655-1.58l-.008-.102c-.053-.662-.09-1.135-.236-1.547a3.33 3.33 0 0 0-2.029-2.03c-.412-.145-.885-.182-1.547-.235l-.102-.008a2.56 2.56 0 0 1-1.58-.655l-.079-.066c-.505-.431-.866-.74-1.26-.928a3.33 3.33 0 0 0-2.87 0M8.288 8.288a.75.75 0 0 1 1.06 0l5.084 5.083v-3.139a.75.75 0 0 1 1.5 0v4.95a.75.75 0 0 1-.75.75h-4.95a.75.75 0 0 1 0-1.5h3.14L8.287 9.348a.75.75 0 0 1 0-1.06"/>`), g.Group(children),
	)
}

func ArrowDownSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M5.487 14.422a.75.75 0 0 1-.034-1.06h5.797V4.5a.75.75 0 0 1 1.5 0v8.862h5.797a.75.75 0 0 1-.034 1.06l-6 5.625a.75.75 0 0 1-1.026 0z"/>`), g.Group(children),
	)
}

func ArrowDownSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M12 7.5v9m3.5-3.5L12 16.5L8.5 13"/><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/></g>`), g.Group(children),
	)
}

func ArrowDownSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057M12 6.75a.75.75 0 0 0-.75.75v7.19l-2.22-2.22a.75.75 0 0 0-1.06 1.06l3.5 3.5a.75.75 0 0 0 1.06 0l3.5-3.5a.75.75 0 1 0-1.06-1.06l-2.22 2.22V7.5a.75.75 0 0 0-.75-.75"/>`), g.Group(children),
	)
}

func ArrowDownWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M12 7.5v9m3.5-3.5L12 16.5L8.5 13"/><path d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83"/></g>`), g.Group(children),
	)
}

func ArrowDownWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.565 2.075c-.394.189-.755.497-1.26.928l-.079.066a2.56 2.56 0 0 1-1.58.655l-.102.008c-.662.053-1.135.09-1.547.236a3.33 3.33 0 0 0-2.03 2.029c-.145.412-.182.885-.235 1.547l-.008.102a2.56 2.56 0 0 1-.655 1.58l-.066.078c-.431.506-.74.867-.928 1.261a3.33 3.33 0 0 0 0 2.87c.189.394.497.755.928 1.26l.066.079c.41.48.604.939.655 1.58l.008.102c.053.662.09 1.135.236 1.547a3.33 3.33 0 0 0 2.029 2.03c.412.145.885.182 1.547.235l.102.008c.629.05 1.09.238 1.58.655l.079.066c.505.431.866.74 1.26.928a3.33 3.33 0 0 0 2.87 0c.394-.189.755-.497 1.26-.928l.079-.066c.48-.41.939-.604 1.58-.655l.102-.008c.662-.053 1.135-.09 1.547-.236a3.33 3.33 0 0 0 2.03-2.029c.145-.412.182-.885.235-1.547l.008-.102c.05-.629.238-1.09.655-1.58l.066-.079c.431-.505.74-.866.928-1.26a3.33 3.33 0 0 0 0-2.87c-.189-.394-.497-.755-.928-1.26l-.066-.079a2.56 2.56 0 0 1-.655-1.58l-.008-.102c-.053-.662-.09-1.135-.236-1.547a3.33 3.33 0 0 0-2.029-2.03c-.412-.145-.885-.182-1.547-.235l-.102-.008a2.56 2.56 0 0 1-1.58-.655l-.079-.066c-.505-.431-.866-.74-1.26-.928a3.33 3.33 0 0 0-2.87 0M12 6.75a.75.75 0 0 1 .75.75v7.19l2.22-2.22a.75.75 0 1 1 1.06 1.06l-3.5 3.5a.75.75 0 0 1-1.06 0l-3.5-3.5a.75.75 0 1 1 1.06-1.06l2.22 2.22V7.5a.75.75 0 0 1 .75-.75"/>`), g.Group(children),
	)
}

func ArrowLeft(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M19.5 12h-15m0 0l5.625-6M4.5 12l5.625 6"/>`), g.Group(children),
	)
}

func ArrowLeftCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M16.5 12h-9m3.5 3.5L7.5 12L11 8.5"/><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/></g>`), g.Group(children),
	)
}

func ArrowLeftCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0 5.385 4.365 9.75 9.75 9.75s9.75-4.365 9.75-9.75S17.385 2.25 12 2.25S2.25 6.615 2.25 12m9.28-4.03a.75.75 0 0 1 0 1.06l-2.22 2.22h7.19a.75.75 0 0 1 0 1.5H9.31l2.22 2.22a.75.75 0 1 1-1.06 1.06l-3.5-3.5a.75.75 0 0 1 0-1.06l3.5-3.5a.75.75 0 0 1 1.06 0"/>`), g.Group(children),
	)
}

func ArrowLeftRight(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M6.5 7.5h11m0 0L14 11m3.5-3.5L14 4m3.5 12.5h-11m0 0L10 20m-3.5-3.5L10 13"/>`), g.Group(children),
	)
}

func ArrowLeftRightSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M5.75 7.5c0 .414.336.75.75.75h6.97v3.28a.75.75 0 0 0 1.06 0l3.5-3.5a.75.75 0 0 0 0-1.06l-3.5-3.5a.75.75 0 0 0-1.06 0v3.28H6.5a.75.75 0 0 0-.75.75m12.5 9a.75.75 0 0 1-.75.75h-6.97v3.28a.75.75 0 0 1-1.06 0l-3.5-3.5a.75.75 0 0 1 0-1.06l3.5-3.5a.75.75 0 0 1 1.06 0v3.28h6.97a.75.75 0 0 1 .75.75"/>`), g.Group(children),
	)
}

func ArrowLeftSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.578 5.487a.75.75 0 0 1 1.06-.034v5.797H19.5a.75.75 0 0 1 0 1.5h-8.862v5.797a.75.75 0 0 1-1.06-.034l-5.625-6a.75.75 0 0 1 0-1.026z"/>`), g.Group(children),
	)
}

func ArrowLeftSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M16.5 12h-9m3.5 3.5L7.5 12L11 8.5"/><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/></g>`), g.Group(children),
	)
}

func ArrowLeftSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057m2.163 5.72a.75.75 0 0 0-1.06 0l-3.5 3.5a.75.75 0 0 0 0 1.06l3.5 3.5a.75.75 0 1 0 1.06-1.06l-2.22-2.22h7.19a.75.75 0 0 0 0-1.5H9.31l2.22-2.22a.75.75 0 0 0 0-1.06"/>`), g.Group(children),
	)
}

func ArrowLeftWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M16.5 12h-9m3.5 3.5L7.5 12L11 8.5"/><path d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83"/></g>`), g.Group(children),
	)
}

func ArrowLeftWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.565 2.075a3.33 3.33 0 0 1 2.87 0c.394.189.755.497 1.26.928l.079.066c.48.41.939.604 1.58.655l.102.008c.662.053 1.135.09 1.547.236a3.33 3.33 0 0 1 2.03 2.029c.145.412.182.885.235 1.547l.008.102c.051.641.246 1.1.655 1.58l.066.078c.431.506.74.867.928 1.261a3.33 3.33 0 0 1 0 2.87c-.189.394-.497.755-.928 1.26l-.066.079c-.418.49-.605.951-.655 1.58l-.008.102c-.053.662-.09 1.135-.236 1.547a3.33 3.33 0 0 1-2.029 2.03c-.412.145-.885.182-1.547.235l-.102.008c-.641.051-1.1.246-1.58.655l-.079.066c-.505.431-.866.74-1.26.928a3.33 3.33 0 0 1-2.87 0c-.394-.189-.755-.497-1.26-.928l-.079-.066a2.56 2.56 0 0 0-1.58-.655l-.102-.008c-.662-.053-1.135-.09-1.547-.236a3.33 3.33 0 0 1-2.03-2.029c-.145-.412-.182-.885-.235-1.547l-.008-.102a2.56 2.56 0 0 0-.655-1.58l-.066-.079c-.431-.505-.74-.866-.928-1.26a3.33 3.33 0 0 1 0-2.87c.189-.394.497-.755.928-1.26l.066-.079a2.56 2.56 0 0 0 .655-1.58l.008-.102c.053-.662.09-1.135.236-1.547a3.33 3.33 0 0 1 2.029-2.03c.412-.145.885-.182 1.547-.235l.102-.008a2.56 2.56 0 0 0 1.58-.655l.078-.066c.506-.431.867-.74 1.261-.928m.965 5.895a.75.75 0 0 0-1.06 0l-3.5 3.5a.75.75 0 0 0 0 1.06l3.5 3.5a.75.75 0 1 0 1.06-1.06l-2.22-2.22h7.19a.75.75 0 0 0 0-1.5H9.31l2.22-2.22a.75.75 0 0 0 0-1.06"/>`), g.Group(children),
	)
}

func ArrowLongDown(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m8 18l4 4m0 0l4-4m-4 4V2"/>`), g.Group(children),
	)
}

func ArrowLongDownLeft(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M11 19H5m0 0v-6m0 6L19 5"/>`), g.Group(children),
	)
}

func ArrowLongDownLeftSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M19.53 4.47a.75.75 0 0 1 0 1.06L8.905 16.155L11.75 19a.75.75 0 0 1-.75.75H5a.75.75 0 0 1-.75-.75v-6a.75.75 0 0 1 .75-.75l2.845 2.845L18.47 4.47a.75.75 0 0 1 1.06 0"/>`), g.Group(children),
	)
}

func ArrowLongDownRight(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M19 13v6m0 0h-6m6 0L5 5"/>`), g.Group(children),
	)
}

func ArrowLongDownRightSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M4.47 4.47a.75.75 0 0 0 0 1.06l10.625 10.625L12.25 19c0 .414.336.75.75.75h6a.75.75 0 0 0 .75-.75v-6a.75.75 0 0 0-.75-.75l-2.845 2.845L5.53 4.47a.75.75 0 0 0-1.06 0"/>`), g.Group(children),
	)
}

func ArrowLongDownSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M16.53 17.47a.75.75 0 0 1 0 1.06l-4 4a.75.75 0 0 1-1.06 0l-4-4a.75.75 0 0 1 0-1.06h3.78V2a.75.75 0 0 1 1.5 0v15.47z"/>`), g.Group(children),
	)
}

func ArrowLongLeft(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m6 8l-4 4m0 0l4 4m-4-4h20"/>`), g.Group(children),
	)
}

func ArrowLongLeftSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M6.53 7.47a.75.75 0 0 0-1.06 0l-4 4a.75.75 0 0 0 0 1.06l4 4a.75.75 0 0 0 1.06 0v-3.78H22a.75.75 0 0 0 0-1.5H6.53z"/>`), g.Group(children),
	)
}

func ArrowLongRight(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m18 8l4 4m0 0l-4 4m4-4H2"/>`), g.Group(children),
	)
}

func ArrowLongRightSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M17.47 7.47a.75.75 0 0 1 1.06 0l4 4a.75.75 0 0 1 0 1.06l-4 4a.75.75 0 0 1-1.06 0v-3.78H2a.75.75 0 0 1 0-1.5h15.47z"/>`), g.Group(children),
	)
}

func ArrowLongUp(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m8 6l4-4m0 0l4 4m-4-4v20"/>`), g.Group(children),
	)
}

func ArrowLongUpLeft(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M5 11V5m0 0h6M5 5l14 14"/>`), g.Group(children),
	)
}

func ArrowLongUpLeftSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M19.53 19.53a.75.75 0 0 0 0-1.06L8.905 7.845L11.75 5a.75.75 0 0 0-.75-.75H5a.75.75 0 0 0-.75.75v6c0 .414.336.75.75.75l2.845-2.845L18.47 19.53a.75.75 0 0 0 1.06 0"/>`), g.Group(children),
	)
}

func ArrowLongUpRight(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M13 5h6m0 0v6m0-6L5 19"/>`), g.Group(children),
	)
}

func ArrowLongUpRightSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M4.47 19.53a.75.75 0 0 1 0-1.06L15.095 7.845L12.25 5a.75.75 0 0 1 .75-.75h6a.75.75 0 0 1 .75.75v6a.75.75 0 0 1-.75.75l-2.845-2.845L5.53 19.53a.75.75 0 0 1-1.06 0"/>`), g.Group(children),
	)
}

func ArrowLongUpSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M16.53 6.53a.75.75 0 0 0 0-1.06l-4-4a.75.75 0 0 0-1.06 0l-4 4a.75.75 0 0 0 0 1.06h3.78V22a.75.75 0 0 0 1.5 0V6.53z"/>`), g.Group(children),
	)
}

func ArrowRight(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M4.5 12h15m0 0l-5.625-6m5.625 6l-5.625 6"/>`), g.Group(children),
	)
}

func ArrowRightCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M7.5 12h9M13 8.5l3.5 3.5l-3.5 3.5"/><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/></g>`), g.Group(children),
	)
}

func ArrowRightCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0 5.385 4.365 9.75 9.75 9.75s9.75-4.365 9.75-9.75S17.385 2.25 12 2.25S2.25 6.615 2.25 12m10.22-4.03a.75.75 0 0 1 1.06 0l3.5 3.5a.75.75 0 0 1 0 1.06l-3.5 3.5a.75.75 0 1 1-1.06-1.06l2.22-2.22H7.5a.75.75 0 0 1 0-1.5h7.19l-2.22-2.22a.75.75 0 0 1 0-1.06"/>`), g.Group(children),
	)
}

func ArrowRightSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M14.422 5.487a.75.75 0 0 0-1.06-.034v5.797H4.5a.75.75 0 0 0 0 1.5h8.862v5.797a.75.75 0 0 0 1.06-.034l5.625-6a.75.75 0 0 0 0-1.026z"/>`), g.Group(children),
	)
}

func ArrowRightSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M7.5 12h9M13 8.5l3.5 3.5l-3.5 3.5"/><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/></g>`), g.Group(children),
	)
}

func ArrowRightSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057m3.103 5.72a.75.75 0 0 0 0 1.06l2.22 2.22H7.5a.75.75 0 0 0 0 1.5h7.19l-2.22 2.22a.75.75 0 1 0 1.06 1.06l3.5-3.5a.75.75 0 0 0 0-1.06l-3.5-3.5a.75.75 0 0 0-1.06 0"/>`), g.Group(children),
	)
}

func ArrowRightWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M7.5 12h9M13 8.5l3.5 3.5l-3.5 3.5"/><path d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83"/></g>`), g.Group(children),
	)
}

func ArrowRightWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.565 2.075a3.33 3.33 0 0 1 2.87 0c.394.189.755.497 1.26.928l.079.066c.48.41.939.604 1.58.655l.102.008c.662.053 1.135.09 1.547.236a3.33 3.33 0 0 1 2.03 2.029c.145.412.182.885.235 1.547l.008.102c.051.641.246 1.1.655 1.58l.066.078c.431.506.74.867.928 1.261a3.33 3.33 0 0 1 0 2.87c-.189.394-.497.755-.928 1.26l-.066.079c-.418.49-.605.951-.655 1.58l-.008.102c-.053.662-.09 1.135-.236 1.547a3.33 3.33 0 0 1-2.029 2.03c-.412.145-.885.182-1.547.235l-.102.008c-.641.051-1.1.246-1.58.655l-.079.066c-.505.431-.866.74-1.26.928a3.33 3.33 0 0 1-2.87 0c-.394-.189-.755-.497-1.26-.928l-.079-.066a2.56 2.56 0 0 0-1.58-.655l-.102-.008c-.662-.053-1.135-.09-1.547-.236a3.33 3.33 0 0 1-2.03-2.029c-.145-.412-.182-.885-.235-1.547l-.008-.102a2.56 2.56 0 0 0-.655-1.58l-.066-.079c-.431-.505-.74-.866-.928-1.26a3.33 3.33 0 0 1 0-2.87c.189-.394.497-.755.928-1.26l.066-.079a2.56 2.56 0 0 0 .655-1.58l.008-.102c.053-.662.09-1.135.236-1.547a3.33 3.33 0 0 1 2.029-2.03c.412-.145.885-.182 1.547-.235l.102-.008a2.56 2.56 0 0 0 1.58-.655l.078-.066c.506-.431.867-.74 1.261-.928M12.47 7.97a.75.75 0 0 0 0 1.06l2.22 2.22H7.5a.75.75 0 0 0 0 1.5h7.19l-2.22 2.22a.75.75 0 1 0 1.06 1.06l3.5-3.5a.75.75 0 0 0 0-1.06l-3.5-3.5a.75.75 0 0 0-1.06 0"/>`), g.Group(children),
	)
}

func ArrowUp(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M12 19.5v-15m0 0l-6 5.625M12 4.5l6 5.625"/>`), g.Group(children),
	)
}

func ArrowUpCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M12 16.5v-9M8.5 11L12 7.5l3.5 3.5"/><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/></g>`), g.Group(children),
	)
}

func ArrowUpCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0 5.385 4.365 9.75 9.75 9.75s9.75-4.365 9.75-9.75S17.385 2.25 12 2.25S2.25 6.615 2.25 12m5.72-1.53l3.5-3.5a.75.75 0 0 1 1.06 0l3.5 3.5a.75.75 0 1 1-1.06 1.06l-2.22-2.22v7.19a.75.75 0 0 1-1.5 0V9.31l-2.22 2.22a.75.75 0 0 1-1.06-1.06"/>`), g.Group(children),
	)
}

func ArrowUpDown(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M7.5 17.5v-11m0 0L11 10M7.5 6.5L4 10m12.5-3.5v11m0 0L20 14m-3.5 3.5L13 14"/>`), g.Group(children),
	)
}

func ArrowUpDownSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M7.5 18.25a.75.75 0 0 0 .75-.75v-6.97h3.28a.75.75 0 0 0 0-1.06l-3.5-3.5a.75.75 0 0 0-1.06 0l-3.5 3.5a.75.75 0 0 0 0 1.06h3.28v6.97c0 .414.336.75.75.75m9-12.5a.75.75 0 0 1 .75.75v6.97h3.28a.75.75 0 0 1 0 1.06l-3.5 3.5a.75.75 0 0 1-1.06 0l-3.5-3.5a.75.75 0 0 1 0-1.06h3.28V6.5a.75.75 0 0 1 .75-.75"/>`), g.Group(children),
	)
}

func ArrowUpLeft(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m17.5 17.5l-11-11m0 0h9m-9 0v9"/>`), g.Group(children),
	)
}

func ArrowUpLeftCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M15.182 15.182L8.818 8.818m0 4.95v-4.95h4.95"/><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/></g>`), g.Group(children),
	)
}

func ArrowUpLeftCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12m5.818-3.182v4.95a.75.75 0 0 0 1.5 0v-3.14l5.084 5.084a.75.75 0 0 0 1.06-1.06L10.63 9.568h3.139a.75.75 0 0 0 0-1.5h-4.95a.75.75 0 0 0-.75.75"/>`), g.Group(children),
	)
}

func ArrowUpLeftSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M15.5 5.75a.75.75 0 0 1 .75.75l-4.345 4.345l6.125 6.125a.75.75 0 1 1-1.06 1.06l-6.125-6.125L6.5 16.25a.75.75 0 0 1-.75-.75v-9a.75.75 0 0 1 .75-.75z"/>`), g.Group(children),
	)
}

func ArrowUpLeftSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M15.182 15.182L8.818 8.818m0 4.95v-4.95h4.95"/><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/></g>`), g.Group(children),
	)
}

func ArrowUpLeftSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057M8.068 8.818v4.95a.75.75 0 0 0 1.5 0v-3.14l5.084 5.084a.75.75 0 0 0 1.06-1.06L10.63 9.568h3.139a.75.75 0 0 0 0-1.5h-4.95a.75.75 0 0 0-.75.75"/>`), g.Group(children),
	)
}

func ArrowUpLeftWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M15.182 15.182L8.818 8.818m0 4.95v-4.95h4.95"/><path d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83"/></g>`), g.Group(children),
	)
}

func ArrowUpLeftWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.565 2.075c-.394.189-.755.497-1.26.928l-.079.066a2.56 2.56 0 0 1-1.58.655l-.102.008c-.662.053-1.135.09-1.547.236a3.33 3.33 0 0 0-2.03 2.029c-.145.412-.182.885-.235 1.547l-.008.102a2.56 2.56 0 0 1-.655 1.58l-.066.078c-.431.506-.74.867-.928 1.261a3.33 3.33 0 0 0 0 2.87c.189.394.497.755.928 1.26l.066.079c.41.48.604.939.655 1.58l.008.102c.053.662.09 1.135.236 1.547a3.33 3.33 0 0 0 2.029 2.03c.412.145.885.182 1.547.235l.102.008c.629.05 1.09.238 1.58.655l.079.066c.505.431.866.74 1.26.928a3.33 3.33 0 0 0 2.87 0c.394-.189.755-.497 1.26-.928l.079-.066c.48-.41.939-.604 1.58-.655l.102-.008c.662-.053 1.135-.09 1.547-.236a3.33 3.33 0 0 0 2.03-2.029c.145-.412.182-.885.235-1.547l.008-.102c.05-.629.238-1.09.655-1.58l.066-.079c.431-.505.74-.866.928-1.26a3.33 3.33 0 0 0 0-2.87c-.189-.394-.497-.755-.928-1.26l-.066-.079a2.56 2.56 0 0 1-.655-1.58l-.008-.102c-.053-.662-.09-1.135-.236-1.547a3.33 3.33 0 0 0-2.029-2.03c-.412-.145-.885-.182-1.547-.235l-.102-.008a2.56 2.56 0 0 1-1.58-.655l-.079-.066c-.505-.431-.866-.74-1.26-.928a3.33 3.33 0 0 0-2.87 0M8.068 8.818a.75.75 0 0 1 .75-.75h4.95a.75.75 0 0 1 0 1.5h-3.14l5.084 5.084a.75.75 0 1 1-1.06 1.06L9.568 10.63v3.139a.75.75 0 0 1-1.5 0z"/>`), g.Group(children),
	)
}

func ArrowUpRight(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m6.5 17.5l11-11m0 0h-9m9 0v9"/>`), g.Group(children),
	)
}

func ArrowUpRightCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="m8.818 15.182l6.364-6.364m-4.95 0h4.95v4.95"/><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/></g>`), g.Group(children),
	)
}

func ArrowUpRightCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0 5.385 4.365 9.75 9.75 9.75s9.75-4.365 9.75-9.75S17.385 2.25 12 2.25S2.25 6.615 2.25 12m7.232-3.182a.75.75 0 0 1 .75-.75h4.95a.75.75 0 0 1 .75.75v4.95a.75.75 0 1 1-1.5 0v-3.14l-5.084 5.084a.75.75 0 1 1-1.06-1.06l5.083-5.084h-3.139a.75.75 0 0 1-.75-.75"/>`), g.Group(children),
	)
}

func ArrowUpRightSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.5 5.75a.75.75 0 0 0-.75.75l4.345 4.345L5.97 16.97a.75.75 0 1 0 1.06 1.06l6.125-6.125L17.5 16.25a.75.75 0 0 0 .75-.75v-9a.75.75 0 0 0-.75-.75z"/>`), g.Group(children),
	)
}

func ArrowUpRightSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="m8.818 15.182l6.364-6.364m-4.95 0h4.95v4.95"/><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/></g>`), g.Group(children),
	)
}

func ArrowUpRightSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057m.115 6.568c0 .414.336.75.75.75h3.14l-5.084 5.084a.75.75 0 0 0 1.06 1.06l5.084-5.083v3.139a.75.75 0 1 0 1.5 0v-4.95a.75.75 0 0 0-.75-.75h-4.95a.75.75 0 0 0-.75.75"/>`), g.Group(children),
	)
}

func ArrowUpRightWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="m8.818 15.182l6.364-6.364m-4.95 0h4.95v4.95"/><path d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83"/></g>`), g.Group(children),
	)
}

func ArrowUpRightWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.565 2.075c-.394.189-.755.497-1.26.928l-.079.066a2.56 2.56 0 0 1-1.58.655l-.102.008c-.662.053-1.135.09-1.547.236a3.33 3.33 0 0 0-2.03 2.029c-.145.412-.182.885-.235 1.547l-.008.102a2.56 2.56 0 0 1-.655 1.58l-.066.078c-.431.506-.74.867-.928 1.261a3.33 3.33 0 0 0 0 2.87c.189.394.497.755.928 1.26l.066.079c.41.48.604.939.655 1.58l.008.102c.053.662.09 1.135.236 1.547a3.33 3.33 0 0 0 2.029 2.03c.412.145.885.182 1.547.235l.102.008c.629.05 1.09.238 1.58.655l.079.066c.505.431.866.74 1.26.928a3.33 3.33 0 0 0 2.87 0c.394-.189.755-.497 1.26-.928l.079-.066c.48-.41.939-.604 1.58-.655l.102-.008c.662-.053 1.135-.09 1.547-.236a3.33 3.33 0 0 0 2.03-2.029c.145-.412.182-.885.235-1.547l.008-.102c.05-.629.238-1.09.655-1.58l.066-.079c.431-.505.74-.866.928-1.26a3.33 3.33 0 0 0 0-2.87c-.189-.394-.497-.755-.928-1.26l-.066-.079a2.56 2.56 0 0 1-.655-1.58l-.008-.102c-.053-.662-.09-1.135-.236-1.547a3.33 3.33 0 0 0-2.029-2.03c-.412-.145-.885-.182-1.547-.235l-.102-.008a2.56 2.56 0 0 1-1.58-.655l-.079-.066c-.505-.431-.866-.74-1.26-.928a3.33 3.33 0 0 0-2.87 0M9.482 8.818a.75.75 0 0 1 .75-.75h4.95a.75.75 0 0 1 .75.75v4.95a.75.75 0 1 1-1.5 0v-3.14l-5.084 5.084a.75.75 0 1 1-1.06-1.06l5.083-5.084h-3.139a.75.75 0 0 1-.75-.75"/>`), g.Group(children),
	)
}

func ArrowUpSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M18.513 9.578a.75.75 0 0 1 .034 1.06H12.75V19.5a.75.75 0 0 1-1.5 0v-8.862H5.453a.75.75 0 0 1 .034-1.06l6-5.625a.75.75 0 0 1 1.026 0z"/>`), g.Group(children),
	)
}

func ArrowUpSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M12 16.5v-9M8.5 11L12 7.5l3.5 3.5"/><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/></g>`), g.Group(children),
	)
}

func ArrowUpSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057m2.103 4.72l-3.5 3.5a.75.75 0 1 0 1.06 1.06l2.22-2.22v7.19a.75.75 0 0 0 1.5 0V9.31l2.22 2.22a.75.75 0 1 0 1.06-1.06l-3.5-3.5a.75.75 0 0 0-1.06 0"/>`), g.Group(children),
	)
}

func ArrowUpWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M12 16.5v-9M8.5 11L12 7.5l3.5 3.5"/><path d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83"/></g>`), g.Group(children),
	)
}

func ArrowUpWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.565 2.075c-.394.189-.755.497-1.26.928l-.079.066a2.56 2.56 0 0 1-1.58.655l-.102.008c-.662.053-1.135.09-1.547.236a3.33 3.33 0 0 0-2.03 2.029c-.145.412-.182.885-.235 1.547l-.008.102a2.56 2.56 0 0 1-.655 1.58l-.066.078c-.431.506-.74.867-.928 1.261a3.33 3.33 0 0 0 0 2.87c.189.394.497.755.928 1.26l.066.079c.41.48.604.939.655 1.58l.008.102c.053.662.09 1.135.236 1.547a3.33 3.33 0 0 0 2.029 2.03c.412.145.885.182 1.547.235l.102.008c.629.05 1.09.238 1.58.655l.079.066c.505.431.866.74 1.26.928a3.33 3.33 0 0 0 2.87 0c.394-.189.755-.497 1.26-.928l.079-.066c.48-.41.939-.604 1.58-.655l.102-.008c.662-.053 1.135-.09 1.547-.236a3.33 3.33 0 0 0 2.03-2.029c.145-.412.182-.885.235-1.547l.008-.102c.05-.629.238-1.09.655-1.58l.066-.079c.431-.505.74-.866.928-1.26a3.33 3.33 0 0 0 0-2.87c-.189-.394-.497-.755-.928-1.26l-.066-.079a2.56 2.56 0 0 1-.655-1.58l-.008-.102c-.053-.662-.09-1.135-.236-1.547a3.33 3.33 0 0 0-2.029-2.03c-.412-.145-.885-.182-1.547-.235l-.102-.008a2.56 2.56 0 0 1-1.58-.655l-.079-.066c-.505-.431-.866-.74-1.26-.928a3.33 3.33 0 0 0-2.87 0m.905 4.895a.75.75 0 0 1 1.06 0l3.5 3.5a.75.75 0 1 1-1.06 1.06l-2.22-2.22v7.19a.75.75 0 0 1-1.5 0V9.31l-2.22 2.22a.75.75 0 0 1-1.06-1.06z"/>`), g.Group(children),
	)
}

func AsteriskCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.5v7m-3-1.75l6-3.5m-6 0l6 3.5"/>`), g.Group(children),
	)
}

func AsteriskCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0 5.385 4.365 9.75 9.75 9.75s9.75-4.365 9.75-9.75S17.385 2.25 12 2.25S2.25 6.615 2.25 12M12 7.75a.75.75 0 0 1 .75.75v2.194l1.872-1.092a.75.75 0 0 1 .756 1.296L13.488 12l1.89 1.102a.75.75 0 1 1-.756 1.296l-1.872-1.092V15.5a.75.75 0 0 1-1.5 0v-2.194l-1.872 1.092a.75.75 0 1 1-.756-1.296L10.512 12l-1.89-1.102a.75.75 0 1 1 .756-1.296l1.872 1.092V8.5a.75.75 0 0 1 .75-.75"/>`), g.Group(children),
	)
}

func AsteriskDiamond(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M2.707 10.295a2.41 2.41 0 0 0 0 3.41l7.588 7.588a2.41 2.41 0 0 0 3.41 0l7.588-7.588a2.41 2.41 0 0 0 0-3.41l-7.588-7.588a2.41 2.41 0 0 0-3.41 0zM12 8.5v7m-3-1.75l6-3.5m-6 0l6 3.5"/>`), g.Group(children),
	)
}

func AsteriskDiamondSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.79 1.49a3.2 3.2 0 0 0-1.025.686L2.177 9.765a3.16 3.16 0 0 0 0 4.47l7.588 7.588a3.16 3.16 0 0 0 4.47 0l7.588-7.588a3.16 3.16 0 0 0 0-4.47l-7.588-7.588a3.16 3.16 0 0 0-3.445-.686M12 7.75a.75.75 0 0 1 .75.75v2.194l1.872-1.092a.75.75 0 0 1 .756 1.296L13.488 12l1.89 1.102a.75.75 0 1 1-.756 1.296l-1.872-1.092V15.5a.75.75 0 0 1-1.5 0v-2.194l-1.872 1.092a.75.75 0 1 1-.756-1.296L10.512 12l-1.89-1.102a.75.75 0 1 1 .756-1.296l1.872 1.092V8.5a.75.75 0 0 1 .75-.75"/>`), g.Group(children),
	)
}

func AsteriskHexagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M20.5 15.8V8.2a1.91 1.91 0 0 0-.944-1.645l-6.612-3.8a1.88 1.88 0 0 0-1.888 0l-6.612 3.8A1.9 1.9 0 0 0 3.5 8.2v7.602a1.91 1.91 0 0 0 .944 1.644l6.612 3.8a1.88 1.88 0 0 0 1.888 0l6.612-3.8A1.9 1.9 0 0 0 20.5 15.8M12 8.5v7m-3-1.75l6-3.5m-6 0l6 3.5"/>`), g.Group(children),
	)
}

func AsteriskHexagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="m10.68 2.105l-6.61 3.8l-.002.002A2.65 2.65 0 0 0 2.75 8.198v7.603a2.64 2.64 0 0 0 1.318 2.292l.003.002l6.608 3.799h.002a2.63 2.63 0 0 0 2.639 0h.001l6.608-3.8h.003A2.65 2.65 0 0 0 21.25 15.8V8.2a2.65 2.65 0 0 0-1.318-2.292l-6.61-3.8l-.002-.002a2.63 2.63 0 0 0-2.64 0M12 7.75a.75.75 0 0 1 .75.75v2.194l1.872-1.092a.75.75 0 0 1 .756 1.296L13.488 12l1.89 1.102a.75.75 0 1 1-.756 1.296l-1.872-1.092V15.5a.75.75 0 0 1-1.5 0v-2.194l-1.872 1.092a.75.75 0 1 1-.756-1.296L10.512 12l-1.89-1.102a.75.75 0 1 1 .756-1.296l1.872 1.092V8.5a.75.75 0 0 1 .75-.75"/>`), g.Group(children),
	)
}

func AsteriskOctagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M7.805 3.469C8.16 3.115 8.451 3 8.937 3h6.126c.486 0 .778.115 1.132.469l4.336 4.336c.354.354.469.646.469 1.132v6.126c0 .5-.125.788-.469 1.132l-4.336 4.336c-.354.354-.646.469-1.132.469H8.937c-.5 0-.788-.125-1.132-.469L3.47 16.195c-.355-.355-.47-.646-.47-1.132V8.937c0-.5.125-.788.469-1.132zM12 8.5v7m-3-1.75l6-3.5m-6 0l6 3.5"/>`), g.Group(children),
	)
}

func AsteriskOctagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.037 2.408c-.299.122-.54.31-.762.53L2.938 7.275c-.213.214-.4.45-.525.748a2.3 2.3 0 0 0-.163.914v6.126c0 .302.036.602.158.9s.31.54.53.762l4.337 4.337c.214.213.45.4.748.524c.298.125.601.164.914.164h6.126c.302 0 .602-.035.9-.158c.299-.122.54-.31.762-.53l4.337-4.337c.213-.214.4-.45.524-.748a2.3 2.3 0 0 0 .164-.914V8.937a2.3 2.3 0 0 0-.158-.9a2.3 2.3 0 0 0-.53-.762l-4.337-4.337a2.3 2.3 0 0 0-.762-.53a2.3 2.3 0 0 0-.9-.158H8.937a2.3 2.3 0 0 0-.9.158M12 7.75a.75.75 0 0 1 .75.75v2.194l1.872-1.092a.75.75 0 0 1 .756 1.296L13.488 12l1.89 1.102a.75.75 0 1 1-.756 1.296l-1.872-1.092V15.5a.75.75 0 0 1-1.5 0v-2.194l-1.872 1.092a.75.75 0 1 1-.756-1.296L10.512 12l-1.89-1.102a.75.75 0 1 1 .756-1.296l1.872 1.092V8.5a.75.75 0 0 1 .75-.75"/>`), g.Group(children),
	)
}

func AsteriskSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6zm9-.9v7m-3-1.75l6-3.5m-6 0l6 3.5"/>`), g.Group(children),
	)
}

func AsteriskSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25c-1.092 0-1.958 0-2.655.057c-.714.058-1.317.18-1.868.46a4.75 4.75 0 0 0-2.076 2.077c-.281.55-.403 1.154-.461 1.868c-.057.697-.057 1.563-.057 2.655v5.266c0 1.092 0 1.958.057 2.655c.058.714.18 1.317.46 1.869a4.75 4.75 0 0 0 2.077 2.075c.55.281 1.154.403 1.868.461c.697.057 1.563.057 2.655.057h5.266c1.092 0 1.958 0 2.655-.057c.714-.058 1.317-.18 1.869-.46a4.75 4.75 0 0 0 2.075-2.076c.281-.552.403-1.155.461-1.869c.057-.697.057-1.563.057-2.655V9.367c0-1.092 0-1.958-.057-2.655c-.058-.714-.18-1.317-.46-1.868a4.75 4.75 0 0 0-2.076-2.076c-.552-.281-1.155-.403-1.869-.461c-.697-.057-1.563-.057-2.655-.057zM12 7.75a.75.75 0 0 1 .75.75v2.194l1.872-1.092a.75.75 0 0 1 .756 1.296L13.488 12l1.89 1.102a.75.75 0 1 1-.756 1.296l-1.872-1.092V15.5a.75.75 0 0 1-1.5 0v-2.194l-1.872 1.092a.75.75 0 1 1-.756-1.296L10.512 12l-1.89-1.102a.75.75 0 1 1 .756-1.296l1.872 1.092V8.5a.75.75 0 0 1 .75-.75"/>`), g.Group(children),
	)
}

func AsteriskWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83M12 8.5v7m-3-1.75l6-3.5m-6 0l6 3.5"/>`), g.Group(children),
	)
}

func AsteriskWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.565 2.075c-.394.189-.755.497-1.26.928l-.079.066a2.56 2.56 0 0 1-1.58.655l-.102.008c-.662.053-1.135.09-1.547.236a3.33 3.33 0 0 0-2.03 2.029c-.145.412-.182.885-.235 1.547l-.008.102a2.56 2.56 0 0 1-.655 1.58l-.066.078c-.431.506-.74.867-.928 1.261a3.33 3.33 0 0 0 0 2.87c.189.394.497.755.928 1.26l.066.079c.41.48.604.939.655 1.58l.008.102c.053.662.09 1.135.236 1.547a3.33 3.33 0 0 0 2.029 2.03c.412.145.885.182 1.547.235l.102.008c.629.05 1.09.238 1.58.655l.079.066c.505.431.866.74 1.26.928a3.33 3.33 0 0 0 2.87 0c.394-.189.755-.497 1.26-.928l.079-.066c.48-.41.939-.604 1.58-.655l.102-.008c.662-.053 1.135-.09 1.547-.236a3.33 3.33 0 0 0 2.03-2.029c.145-.412.182-.885.235-1.547l.008-.102c.05-.629.238-1.09.655-1.58l.066-.079c.431-.505.74-.866.928-1.26a3.33 3.33 0 0 0 0-2.87c-.189-.394-.497-.755-.928-1.26l-.066-.079a2.56 2.56 0 0 1-.655-1.58l-.008-.102c-.053-.662-.09-1.135-.236-1.547a3.33 3.33 0 0 0-2.029-2.03c-.412-.145-.885-.182-1.547-.235l-.102-.008a2.56 2.56 0 0 1-1.58-.655l-.079-.066c-.505-.431-.866-.74-1.26-.928a3.33 3.33 0 0 0-2.87 0M12 7.75a.75.75 0 0 1 .75.75v2.194l1.872-1.092a.75.75 0 0 1 .756 1.296L13.488 12l1.89 1.102a.75.75 0 1 1-.756 1.296l-1.872-1.092V15.5a.75.75 0 0 1-1.5 0v-2.194l-1.872 1.092a.75.75 0 1 1-.756-1.296L10.512 12l-1.89-1.102a.75.75 0 1 1 .756-1.296l1.872 1.092V8.5a.75.75 0 0 1 .75-.75"/>`), g.Group(children),
	)
}

func At(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M16 11.996V7.998m0 3.998c0-5.157-8-5.157-8 0c0 5.167 8 5.11 8 0m0 0c0 5 5 5 5 0C21 7.027 16.97 3 12 3s-9 4.027-9 8.996c0 4.968 4.03 8.995 9 8.995c1.675.084 3.938-.421 5.776-1.831"/>`), g.Group(children),
	)
}

func AtSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M3.75 11.996A8.25 8.25 0 0 1 12 3.75a8.25 8.25 0 0 1 8.25 8.246c0 2.3-1.1 3-1.75 3s-1.75-.7-1.75-3V7.998a.75.75 0 0 0-1.5 0v.538l-.011-.01C14.334 7.75 13.153 7.378 12 7.378s-2.334.37-3.239 1.148c-.92.791-1.511 1.968-1.511 3.47c0 1.504.59 2.68 1.513 3.468c.905.775 2.087 1.14 3.24 1.136c1.152-.005 2.332-.378 3.235-1.153q.353-.301.636-.677c.582 1.087 1.524 1.726 2.626 1.726c1.85 0 3.25-1.8 3.25-4.5c0-5.383-4.366-9.746-9.75-9.746s-9.75 4.363-9.75 9.746c0 5.376 4.356 9.735 9.731 9.745c1.83.087 4.263-.46 6.251-1.986a.75.75 0 1 0-.913-1.19c-1.68 1.29-3.763 1.753-5.282 1.677H12a8.25 8.25 0 0 1-8.25-8.246"/>`), g.Group(children),
	)
}

func Atom(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M15.407 8.593c4.6 4.6 6.802 9.853 4.92 11.735c-1.88 1.881-7.135-.322-11.734-4.921S1.791 5.554 3.673 3.672c1.88-1.881 7.134.322 11.734 4.921"/><path d="M8.594 8.593c-4.6 4.6-6.803 9.853-4.921 11.735s7.135-.322 11.734-4.921s6.803-9.853 4.921-11.735s-7.135.322-11.734 4.921M11.75 12h.5"/></g>`), g.Group(children),
	)
}

func AtomSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.81 3.01c1.016.426 2.094 1.023 3.19 1.768c1.096-.745 2.175-1.342 3.19-1.767c1.115-.468 2.19-.744 3.145-.76c.96-.016 1.865.232 2.523.89c.66.66.908 1.565.892 2.524c-.016.956-.293 2.03-.76 3.145c-.426 1.016-1.023 2.095-1.768 3.19c.745 1.096 1.342 2.175 1.767 3.19c.468 1.115.744 2.189.76 3.145c.016.959-.232 1.864-.891 2.523s-1.564.907-2.523.891c-.956-.016-2.03-.292-3.145-.76c-1.015-.425-2.094-1.022-3.19-1.767c-1.095.745-2.174 1.342-3.19 1.767c-1.114.468-2.188.744-3.144.76c-.96.016-1.865-.232-2.524-.89c-.658-.66-.907-1.565-.891-2.524c.016-.956.293-2.03.76-3.145c.426-1.015 1.022-2.094 1.767-3.19c-.745-1.095-1.341-2.174-1.767-3.19c-.468-1.115-.744-2.189-.76-3.145c-.016-.959.232-1.864.89-2.523c.66-.659 1.565-.907 2.524-.891c.956.016 2.03.292 3.145.76M4.203 4.204c-.282.282-.464.738-.452 1.437c.011.702.22 1.582.643 2.59c.327.78.773 1.616 1.327 2.477c.694-.89 1.478-1.78 2.342-2.644a29 29 0 0 1 2.644-2.342c-.862-.554-1.697-1-2.477-1.327c-1.008-.423-1.888-.632-2.59-.643c-.699-.012-1.155.17-1.437.452m11.734 3.86a29 29 0 0 1 2.342 2.644c.554-.861 1-1.697 1.327-2.477c.423-1.008.632-1.888.644-2.59c.011-.699-.17-1.155-.452-1.437s-.739-.464-1.438-.452c-.702.011-1.581.22-2.59.643a16.3 16.3 0 0 0-2.477 1.327c.89.694 1.78 1.478 2.644 2.342m0 7.874a29 29 0 0 1-2.644 2.342c.862.554 1.697 1 2.477 1.327c1.008.423 1.888.632 2.59.643c.699.012 1.155-.17 1.437-.452s.464-.738.453-1.437c-.012-.702-.221-1.582-.644-2.59a16.3 16.3 0 0 0-1.327-2.477c-.693.89-1.478 1.78-2.342 2.644m-7.874 0a29 29 0 0 1-2.342-2.644c-.554.862-1 1.697-1.327 2.477c-.423 1.008-.631 1.888-.643 2.59c-.012.699.17 1.155.452 1.437s.739.464 1.438.453c.702-.012 1.581-.221 2.59-.644a16 16 0 0 0 2.476-1.327a29 29 0 0 1-2.644-2.342m3.687-4.687a.75.75 0 0 0 0 1.5h.5a.75.75 0 0 0 0-1.5z"/>`), g.Group(children),
	)
}

func Baby(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/><path d="M9 15c.85.63 1.885 1 3 1s2.15-.37 3-1M12.25 3a2.25 2.25 0 1 0 1.5 3.927m-4 3.373c-.214-.19-.473-.3-.75-.3s-.536.11-.75.3m7.5 0c-.214-.19-.473-.3-.75-.3s-.536.11-.75.3"/></g>`), g.Group(children),
	)
}

func BabySolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="m12.161 2.251l.089-.001q.048 0 .095.006C17.57 2.438 21.75 6.731 21.75 12c0 5.385-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12S6.615 2.25 12 2.25zM9.46 4.15a3 3 0 0 0 4.791 3.337a.75.75 0 1 0-1-1.118a1.5 1.5 0 1 1-1.074-2.616a8.3 8.3 0 0 0-2.717.397M9 9.25c-.486 0-.916.195-1.247.488a.75.75 0 1 0 .994 1.124A.38.38 0 0 1 9 10.75a.38.38 0 0 1 .253.112a.75.75 0 1 0 .994-1.124A1.88 1.88 0 0 0 9 9.25m6 0c-.486 0-.916.195-1.247.488a.75.75 0 1 0 .994 1.124a.38.38 0 0 1 .253-.112a.38.38 0 0 1 .253.112a.75.75 0 1 0 .994-1.124A1.88 1.88 0 0 0 15 9.25m-5.553 5.148a.75.75 0 1 0-.894 1.204A5.77 5.77 0 0 0 12 16.75a5.77 5.77 0 0 0 3.447-1.148a.75.75 0 1 0-.894-1.204A4.27 4.27 0 0 1 12 15.25a4.27 4.27 0 0 1-2.553-.852"/>`), g.Group(children),
	)
}

func Ban(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-3-6L6 18"/></g>`), g.Group(children),
	)
}

func BanSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12 3.75a8.25 8.25 0 0 0-6.34 13.53L17.28 5.66A8.22 8.22 0 0 0 12 3.75M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12"/>`), g.Group(children),
	)
}

func Bank(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M12 8.94V18m5-9.06V18M7 8.94V18m5.447-14.894l7.764 3.908c.944.475.608 1.907-.447 1.907H4.236c-1.055 0-1.391-1.432-.447-1.907l7.764-3.908a1 1 0 0 1 .894 0M19.5 21h-15a1.5 1.5 0 0 1 0-3h15a1.5 1.5 0 0 1 0 3"/>`), g.Group(children),
	)
}

func BankSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12.784 2.436a1.74 1.74 0 0 0-1.568 0L3.452 6.344c-1.64.825-1.074 3.327.784 3.327H6.25v7.579H4.5a2.25 2.25 0 0 0 0 4.5h15a2.25 2.25 0 0 0 0-4.5h-1.75V9.67h2.014c1.858 0 2.423-2.501.784-3.326zM7.75 17.25V9.67h3.5v7.58zm5 0V9.67h3.5v7.58z"/>`), g.Group(children),
	)
}

func Baseball(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/><path d="M3.804 9.804c5.022.94 7.697 5.573 6 10.392m10.392-6c-5.022-.94-7.697-5.573-6-10.392"/></g>`), g.Group(children),
	)
}

func BaseballSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M3.871 10.582a8.25 8.25 0 0 0 5.292 9.167c1.383-4.246-.923-8.241-5.292-9.167m10.966-6.331c-1.383 4.246.923 8.241 5.292 9.167a8.25 8.25 0 0 0-5.292-9.167M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12"/>`), g.Group(children),
	)
}

func BatteryCharging(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M14.5 7H18a1 1 0 0 1 1 1v8a1 1 0 0 1-1 1h-3.5m-7-10H4a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h3.5M21 11v2m-9.999-6L8.5 12h5.002L11 17"/>`), g.Group(children),
	)
}

func BatteryChargingFour(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M18 7H4a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h14a1 1 0 0 0 1-1V8a1 1 0 0 0-1-1m3 4v2M6.5 10v4m3-4v4m3-4v4m3-2v2"/>`), g.Group(children),
	)
}

func BatteryChargingFourSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 8c0-.967.784-1.75 1.75-1.75h14c.966 0 1.75.783 1.75 1.75v8A1.75 1.75 0 0 1 18 17.75H4A1.75 1.75 0 0 1 2.25 16zm5 2a.75.75 0 0 0-1.5 0v4a.75.75 0 0 0 1.5 0zm3 0a.75.75 0 0 0-1.5 0v4a.75.75 0 0 0 1.5 0zm3 0a.75.75 0 0 0-1.5 0v4a.75.75 0 0 0 1.5 0zm3 2a.75.75 0 0 0-1.5 0v2a.75.75 0 0 0 1.5 0zm5.5-1a.75.75 0 0 0-1.5 0v2a.75.75 0 0 0 1.5 0z"/>`), g.Group(children),
	)
}

func BatteryChargingOne(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M18 7H4a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h14a1 1 0 0 0 1-1V8a1 1 0 0 0-1-1m3 4v2M6.5 10v4"/>`), g.Group(children),
	)
}

func BatteryChargingOneSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 8c0-.967.784-1.75 1.75-1.75h14c.966 0 1.75.783 1.75 1.75v8A1.75 1.75 0 0 1 18 17.75H4A1.75 1.75 0 0 1 2.25 16zm5 2a.75.75 0 0 0-1.5 0v4a.75.75 0 0 0 1.5 0zm14.5 1a.75.75 0 0 0-1.5 0v2a.75.75 0 0 0 1.5 0z"/>`), g.Group(children),
	)
}

func BatteryChargingSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M10.989 6.25H4A1.75 1.75 0 0 0 2.25 8v8c0 .966.784 1.75 1.75 1.75h5.293a1 1 0 0 1 .036-.086l2.959-4.913H8.5a.75.75 0 0 1-.67-1.086z"/><path d="M11.013 17.75H18A1.75 1.75 0 0 0 19.75 16V8A1.75 1.75 0 0 0 18 6.25h-5.292a1 1 0 0 1-.036.085l-2.958 4.916h3.788a.75.75 0 0 1 .67 1.085zM21.75 11a.75.75 0 0 0-1.5 0v2a.75.75 0 0 0 1.5 0z"/></g>`), g.Group(children),
	)
}

func BatteryChargingThree(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M18 7H4a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h14a1 1 0 0 0 1-1V8a1 1 0 0 0-1-1m3 4v2M6.5 10v4m3-4v4m3-4v4"/>`), g.Group(children),
	)
}

func BatteryChargingThreeSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 8c0-.967.784-1.75 1.75-1.75h14c.966 0 1.75.783 1.75 1.75v8A1.75 1.75 0 0 1 18 17.75H4A1.75 1.75 0 0 1 2.25 16zm5 2a.75.75 0 0 0-1.5 0v4a.75.75 0 0 0 1.5 0zm3 0a.75.75 0 0 0-1.5 0v4a.75.75 0 0 0 1.5 0zm3 0a.75.75 0 0 0-1.5 0v4a.75.75 0 0 0 1.5 0zm8.5 1a.75.75 0 0 0-1.5 0v2a.75.75 0 0 0 1.5 0z"/>`), g.Group(children),
	)
}

func BatteryChargingTwo(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M18 7H4a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h14a1 1 0 0 0 1-1V8a1 1 0 0 0-1-1m3 4v2M6.5 10v4m3-4v4"/>`), g.Group(children),
	)
}

func BatteryChargingTwoSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 8c0-.967.784-1.75 1.75-1.75h14c.966 0 1.75.783 1.75 1.75v8A1.75 1.75 0 0 1 18 17.75H4A1.75 1.75 0 0 1 2.25 16zm5 2a.75.75 0 0 0-1.5 0v4a.75.75 0 0 0 1.5 0zm3 0a.75.75 0 0 0-1.5 0v4a.75.75 0 0 0 1.5 0zm11.5 1a.75.75 0 0 0-1.5 0v2a.75.75 0 0 0 1.5 0z"/>`), g.Group(children),
	)
}

func BatteryCheck(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M18 7H4a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h14a1 1 0 0 0 1-1V8a1 1 0 0 0-1-1m3 4v2"/><path d="m9.26 12.242l1.034 1.181c.095.109.266.1.35-.016l2.1-2.907"/></g>`), g.Group(children),
	)
}

func BatteryCheckSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 8c0-.967.784-1.75 1.75-1.75h14c.966 0 1.75.783 1.75 1.75v8A1.75 1.75 0 0 1 18 17.75H4A1.75 1.75 0 0 1 2.25 16zm11.102 2.94a.75.75 0 0 0-1.216-.88l-1.713 2.372l-.599-.684a.75.75 0 1 0-1.128.988l1.034 1.181a.974.974 0 0 0 1.522-.07zm8.398.06a.75.75 0 0 0-1.5 0v2a.75.75 0 0 0 1.5 0z"/>`), g.Group(children),
	)
}

func BatteryEmpty(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M18 7H4a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h14a1 1 0 0 0 1-1V8a1 1 0 0 0-1-1m3 4v2"/>`), g.Group(children),
	)
}

func BatteryEmptySolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M21 10.25a.75.75 0 0 1 .75.75v2a.75.75 0 0 1-1.5 0v-2a.75.75 0 0 1 .75-.75m-17-4A1.75 1.75 0 0 0 2.25 8v8c0 .966.784 1.75 1.75 1.75h14A1.75 1.75 0 0 0 19.75 16V8A1.75 1.75 0 0 0 18 6.25z"/>`), g.Group(children),
	)
}

func BatteryFull(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M18 7H4a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h14a1 1 0 0 0 1-1V8a1 1 0 0 0-1-1m3 4v2M6.5 10v4m3-4v4m3-4v4m3-4v4"/>`), g.Group(children),
	)
}

func BatteryFullSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 8c0-.967.784-1.75 1.75-1.75h14c.966 0 1.75.783 1.75 1.75v8A1.75 1.75 0 0 1 18 17.75H4A1.75 1.75 0 0 1 2.25 16zm5 2a.75.75 0 0 0-1.5 0v4a.75.75 0 0 0 1.5 0zm3 0a.75.75 0 0 0-1.5 0v4a.75.75 0 0 0 1.5 0zm3 0a.75.75 0 0 0-1.5 0v4a.75.75 0 0 0 1.5 0zm3 0a.75.75 0 0 0-1.5 0v4a.75.75 0 0 0 1.5 0zm5.5 1a.75.75 0 0 0-1.5 0v2a.75.75 0 0 0 1.5 0z"/>`), g.Group(children),
	)
}

func BatteryMinus(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M18 7H4a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h14a1 1 0 0 0 1-1V8a1 1 0 0 0-1-1m-9 5h4m8-1v2"/>`), g.Group(children),
	)
}

func BatteryMinusSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 8c0-.967.784-1.75 1.75-1.75h14c.966 0 1.75.783 1.75 1.75v8A1.75 1.75 0 0 1 18 17.75H4A1.75 1.75 0 0 1 2.25 16zM9 11.25a.75.75 0 0 0 0 1.5h4a.75.75 0 0 0 0-1.5zM21.75 11a.75.75 0 0 0-1.5 0v2a.75.75 0 0 0 1.5 0z"/>`), g.Group(children),
	)
}

func BatteryPlus(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M18 7H4a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h14a1 1 0 0 0 1-1V8a1 1 0 0 0-1-1m-9 5h4m-2-2v4m10-3v2"/>`), g.Group(children),
	)
}

func BatteryPlusSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 8c0-.967.784-1.75 1.75-1.75h14c.966 0 1.75.783 1.75 1.75v8A1.75 1.75 0 0 1 18 17.75H4A1.75 1.75 0 0 1 2.25 16zm9.5 2a.75.75 0 0 0-1.5 0v1.25H9a.75.75 0 0 0 0 1.5h1.25V14a.75.75 0 0 0 1.5 0v-1.25H13a.75.75 0 0 0 0-1.5h-1.25zm10 1a.75.75 0 0 0-1.5 0v2a.75.75 0 0 0 1.5 0z"/>`), g.Group(children),
	)
}

func BatteryX(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M18 7H4a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h14a1 1 0 0 0 1-1V8a1 1 0 0 0-1-1m-8.5 3.5l3 3m0-3l-3 3M21 11v2"/>`), g.Group(children),
	)
}

func BatteryXSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 8c0-.967.784-1.75 1.75-1.75h14c.966 0 1.75.783 1.75 1.75v8A1.75 1.75 0 0 1 18 17.75H4A1.75 1.75 0 0 1 2.25 16zm7.78 1.97a.75.75 0 1 0-1.06 1.06l.97.97l-.97.97a.75.75 0 1 0 1.06 1.06l.97-.97l.97.97a.75.75 0 1 0 1.06-1.06l-.97-.97l.97-.97a.75.75 0 1 0-1.06-1.06l-.97.97zM21.75 11a.75.75 0 0 0-1.5 0v2a.75.75 0 0 0 1.5 0z"/>`), g.Group(children),
	)
}

func Bell(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M15.019 17h-6.04m6.04 0h3.614c1.876 0 1.559-1.86.61-2.804C15.825 10.801 20.68 3 11.999 3s-3.825 7.8-7.243 11.196c-.913.908-1.302 2.804.61 2.804H8.98m6.039 0c0 1.925-.648 4-3.02 4s-3.02-2.075-3.02-4"/>`), g.Group(children),
	)
}

func BellCheck(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="m9.6 10.323l1.379 1.575a.3.3 0 0 0 .466-.022L14.245 8"/><path d="M15.019 17h-6.04m6.04 0h3.614c1.876 0 1.559-1.86.61-2.804C15.825 10.801 20.68 3 11.999 3s-3.825 7.8-7.243 11.196c-.913.908-1.302 2.804.61 2.804H8.98m6.039 0c0 1.925-.648 4-3.02 4s-3.02-2.075-3.02-4"/></g>`), g.Group(children),
	)
}

func BellCheckSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M7.168 3.73c1.014-.971 2.562-1.48 4.831-1.48s3.818.509 4.832 1.48c1.008.965 1.352 2.26 1.508 3.501c.075.602.11 1.226.144 1.822l.003.066c.036.627.07 1.225.147 1.796c.153 1.147.458 2.073 1.138 2.75c.588.584 1.028 1.485.975 2.334c-.028.448-.2.916-.603 1.263c-.396.342-.923.488-1.51.488h-2.896c-.07.813-.27 1.654-.696 2.36c-.592.98-1.588 1.64-3.042 1.64s-2.449-.66-3.04-1.64c-.427-.706-.627-1.547-.697-2.36H5.366c-.596 0-1.129-.148-1.526-.497c-.403-.356-.566-.831-.588-1.28c-.04-.846.405-1.742.976-2.309c.68-.676.985-1.602 1.138-2.749c.076-.571.111-1.169.146-1.796l.004-.066c.034-.596.069-1.22.144-1.822c.156-1.241.5-2.536 1.508-3.5m7.685 4.71a.75.75 0 0 0-1.216-.88l-2.468 3.417l-1.005-1.148a.75.75 0 0 0-1.129.987l1.38 1.576c.443.507 1.244.47 1.638-.077z"/>`), g.Group(children),
	)
}

func BellHome(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M15.019 17h-6.04m6.04 0h3.614c1.876 0 1.559-1.86.61-2.804C15.825 10.801 20.68 3 11.999 3s-3.825 7.8-7.243 11.196c-.913.908-1.302 2.804.61 2.804H8.98m6.039 0c0 1.925-.648 4-3.02 4s-3.02-2.075-3.02-4"/><path d="M10.75 12.5a1 1 0 0 1-1-1V9.14L12 7.5l2.25 1.64v2.36a1 1 0 0 1-1 1z"/></g>`), g.Group(children),
	)
}

func BellHomeSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M10.5 11.5V9.522L12 8.428l1.5 1.094V11.5a.25.25 0 0 1-.25.25h-2.5a.25.25 0 0 1-.25-.25"/><path d="M7.168 3.73c1.014-.971 2.562-1.48 4.831-1.48s3.818.509 4.832 1.48c1.008.965 1.352 2.26 1.508 3.501c.075.602.11 1.226.144 1.822l.003.066c.036.627.07 1.225.147 1.796c.153 1.147.458 2.073 1.138 2.75c.588.584 1.028 1.485.975 2.334c-.028.448-.2.916-.603 1.263c-.396.342-.923.488-1.51.488h-2.896c-.07.813-.27 1.654-.696 2.36c-.592.98-1.588 1.64-3.042 1.64s-2.449-.66-3.04-1.64c-.427-.706-.627-1.547-.697-2.36H5.366c-.596 0-1.129-.148-1.526-.497c-.403-.356-.566-.831-.588-1.28c-.04-.846.405-1.742.976-2.309c.68-.676.985-1.602 1.138-2.749c.076-.571.111-1.169.146-1.796l.004-.066c.034-.596.069-1.22.144-1.822c.156-1.241.5-2.536 1.508-3.5m5.274 3.164a.75.75 0 0 0-.884 0l-2.25 1.64A.75.75 0 0 0 9 9.14v2.36c0 .966.784 1.75 1.75 1.75h2.5A1.75 1.75 0 0 0 15 11.5V9.14a.75.75 0 0 0-.308-.606z"/></g>`), g.Group(children),
	)
}

func BellMinus(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9.5 10h5m.519 7h-6.04m6.04 0h3.614c1.876 0 1.559-1.86.61-2.804C15.825 10.801 20.68 3 11.999 3s-3.825 7.8-7.243 11.196c-.913.908-1.302 2.804.61 2.804H8.98m6.039 0c0 1.925-.648 4-3.02 4s-3.02-2.075-3.02-4"/>`), g.Group(children),
	)
}

func BellMinusSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M7.168 3.73c1.014-.971 2.562-1.48 4.831-1.48s3.818.509 4.832 1.48c1.008.965 1.352 2.26 1.508 3.501c.075.602.11 1.226.144 1.822l.003.066c.036.627.07 1.225.147 1.796c.153 1.147.458 2.073 1.138 2.75c.588.584 1.028 1.485.975 2.334c-.028.448-.2.916-.603 1.263c-.396.342-.923.488-1.51.488h-2.896c-.07.813-.27 1.654-.696 2.36c-.592.98-1.588 1.64-3.042 1.64s-2.449-.66-3.04-1.64c-.427-.706-.627-1.547-.697-2.36H5.366c-.596 0-1.129-.148-1.526-.497c-.403-.356-.566-.831-.588-1.28c-.04-.846.405-1.742.976-2.309c.68-.676.985-1.602 1.138-2.749c.076-.571.111-1.169.146-1.796l.004-.066c.034-.596.069-1.22.144-1.822c.156-1.241.5-2.536 1.508-3.5M9.5 9.25a.75.75 0 0 0 0 1.5h5a.75.75 0 0 0 0-1.5z"/>`), g.Group(children),
	)
}

func BellOn(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M12 12a2 2 0 1 0 0-4a2 2 0 0 0 0 4"/><path d="M15.019 17h-6.04m6.04 0h3.614c1.876 0 1.559-1.86.61-2.804C15.825 10.801 20.68 3 11.999 3s-3.825 7.8-7.243 11.196c-.913.908-1.302 2.804.61 2.804H8.98m6.039 0c0 1.925-.648 4-3.02 4s-3.02-2.075-3.02-4"/></g>`), g.Group(children),
	)
}

func BellOnSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M10.75 10a1.25 1.25 0 1 1 2.5 0a1.25 1.25 0 0 1-2.5 0"/><path d="M7.168 3.73c1.014-.971 2.562-1.48 4.831-1.48s3.818.509 4.832 1.48c1.008.965 1.352 2.26 1.508 3.501c.075.602.11 1.226.144 1.822l.003.066c.036.627.07 1.225.147 1.796c.153 1.147.458 2.073 1.138 2.75c.588.584 1.028 1.485.975 2.334c-.028.448-.2.916-.603 1.263c-.396.342-.923.488-1.51.488h-2.896c-.07.813-.27 1.654-.696 2.36c-.592.98-1.588 1.64-3.042 1.64s-2.449-.66-3.04-1.64c-.427-.706-.627-1.547-.697-2.36H5.366c-.596 0-1.129-.148-1.526-.497c-.403-.356-.566-.831-.588-1.28c-.04-.846.405-1.742.976-2.309c.68-.676.985-1.602 1.138-2.749c.076-.571.111-1.169.146-1.796l.004-.066c.034-.596.069-1.22.144-1.822c.156-1.241.5-2.536 1.508-3.5M12 7.25a2.75 2.75 0 1 0 0 5.5a2.75 2.75 0 0 0 0-5.5"/></g>`), g.Group(children),
	)
}

func BellPlus(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9.5 10h5M12 7.5v5m3.019 4.5h-6.04m6.04 0h3.614c1.876 0 1.559-1.86.61-2.804C15.825 10.801 20.68 3 11.999 3s-3.825 7.8-7.243 11.196c-.913.908-1.302 2.804.61 2.804H8.98m6.039 0c0 1.925-.648 4-3.02 4s-3.02-2.075-3.02-4"/>`), g.Group(children),
	)
}

func BellPlusSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M7.168 3.73c1.014-.971 2.562-1.48 4.831-1.48s3.818.509 4.832 1.48c1.008.965 1.352 2.26 1.508 3.501c.075.602.11 1.226.144 1.822l.003.066c.036.627.07 1.225.147 1.796c.153 1.147.458 2.073 1.138 2.75c.588.584 1.028 1.485.975 2.334c-.028.448-.2.916-.603 1.263c-.396.342-.923.488-1.51.488h-2.896c-.07.813-.27 1.654-.696 2.36c-.592.98-1.588 1.64-3.042 1.64s-2.449-.66-3.04-1.64c-.427-.706-.627-1.547-.697-2.36H5.366c-.596 0-1.129-.148-1.526-.497c-.403-.356-.566-.831-.588-1.28c-.04-.846.405-1.742.976-2.309c.68-.676.985-1.602 1.138-2.749c.076-.571.111-1.169.146-1.796l.004-.066c.034-.596.069-1.22.144-1.822c.156-1.241.5-2.536 1.508-3.5M12.75 7.5a.75.75 0 0 0-1.5 0v1.75H9.5a.75.75 0 0 0 0 1.5h1.75v1.75a.75.75 0 0 0 1.5 0v-1.75h1.75a.75.75 0 0 0 0-1.5h-1.75z"/>`), g.Group(children),
	)
}

func BellSlash(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M15.019 17h-6.04m6.04 0h3.614c1.876 0 1.559-1.86.61-2.804c-1.903-1.89-1.242-5.145-1.78-7.66M15.02 17c0 1.925-.648 4-3.02 4s-3.02-2.075-3.02-4m0 0H7m-4 4l4-4M21 3l-3.536 3.536m0 0L7 17m8.5-13.312C14.687 3.253 13.563 3 12 3c-8.68 0-3.826 7.8-7.244 11.196a2.7 2.7 0 0 0-.626.99"/>`), g.Group(children),
	)
}

func BellSlashSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M6.649 3.189C7.859 2.03 9.63 1.5 11.999 1.5s4.141.53 5.351 1.689c.44.421.77.892 1.017 1.383L20.47 2.47a.75.75 0 1 1 1.06 1.06l-2.616 2.617c.075.337.128.67.169.99c.079.628.115 1.274.148 1.862l.004.078c.036.63.07 1.2.141 1.74c.145 1.084.417 1.812.924 2.315c.701.697 1.264 1.799 1.194 2.914c-.038.604-.274 1.278-.861 1.784c-.573.494-1.295.67-2 .67h-2.237c-.119.678-.336 1.373-.713 1.997c-.726 1.201-1.963 2.003-3.684 2.003c-1.72 0-2.958-.802-3.683-2.003c-.377-.624-.595-1.319-.713-1.997H6.561l-3.03 3.03a.75.75 0 0 1-1.061-1.06l2.06-2.06a2.7 2.7 0 0 1-1.185-.594c-.59-.52-.813-1.206-.842-1.807c-.052-1.106.513-2.198 1.196-2.877c.507-.503.779-1.231.923-2.316c.072-.539.106-1.108.142-1.739L4.768 9c.033-.588.07-1.234.148-1.861c.163-1.296.536-2.803 1.733-3.95"/>`), g.Group(children),
	)
}

func BellSnooze(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M10.75 8h2.5l-2.5 4h2.5"/><path d="M15.019 17h-6.04m6.04 0h3.614c1.876 0 1.559-1.86.61-2.804C15.825 10.801 20.68 3 11.999 3s-3.825 7.8-7.243 11.196c-.913.908-1.302 2.804.61 2.804H8.98m6.039 0c0 1.925-.648 4-3.02 4s-3.02-2.075-3.02-4"/></g>`), g.Group(children),
	)
}

func BellSnoozeSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M7.168 3.73c1.014-.971 2.562-1.48 4.831-1.48s3.818.509 4.832 1.48c1.008.965 1.352 2.26 1.508 3.501c.075.602.11 1.226.144 1.822l.003.066c.036.627.07 1.225.147 1.796c.153 1.147.458 2.073 1.138 2.75c.588.584 1.028 1.485.975 2.334c-.028.448-.2.916-.603 1.263c-.396.342-.923.488-1.51.488h-2.896c-.07.813-.27 1.654-.696 2.36c-.592.98-1.588 1.64-3.042 1.64s-2.449-.66-3.04-1.64c-.427-.706-.627-1.547-.697-2.36H5.366c-.596 0-1.129-.148-1.526-.497c-.403-.356-.566-.831-.588-1.28c-.04-.846.405-1.742.976-2.309c.68-.676.985-1.602 1.138-2.749c.076-.571.111-1.169.146-1.796l.004-.066c.034-.596.069-1.22.144-1.822c.156-1.241.5-2.536 1.508-3.5m3.582 3.52a.75.75 0 0 0 0 1.5h1.147l-1.783 2.852a.75.75 0 0 0 .636 1.148h2.5a.75.75 0 0 0 0-1.5h-1.147l1.783-2.852a.75.75 0 0 0-.636-1.148z"/>`), g.Group(children),
	)
}

func BellSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M15.737 17.75c-.07.813-.27 1.654-.696 2.36c-.592.98-1.588 1.64-3.042 1.64s-2.449-.66-3.04-1.64c-.427-.706-.627-1.547-.697-2.36H5.366c-.596 0-1.129-.148-1.526-.497c-.403-.356-.566-.831-.588-1.28c-.04-.846.405-1.742.976-2.309c.68-.676.985-1.602 1.138-2.749c.076-.571.111-1.169.146-1.796l.004-.066c.034-.596.069-1.22.144-1.822c.156-1.241.5-2.536 1.508-3.5C8.182 2.758 9.73 2.25 11.999 2.25s3.818.509 4.832 1.48c1.008.965 1.352 2.26 1.508 3.501c.075.602.11 1.226.144 1.822l.003.066c.036.627.07 1.225.147 1.796c.153 1.147.458 2.073 1.138 2.75c.588.584 1.028 1.485.975 2.334c-.028.448-.2.916-.603 1.263c-.396.342-.923.488-1.51.488z"/>`), g.Group(children),
	)
}

func BellUser(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M15.019 17h-6.04m6.04 0h3.614c1.876 0 1.559-1.86.61-2.804C15.825 10.801 20.68 3 11.999 3s-3.825 7.8-7.243 11.196c-.913.908-1.302 2.804.61 2.804H8.98m6.039 0c0 1.925-.648 4-3.02 4s-3.02-2.075-3.02-4"/><path d="M15 13.5c0-3.861-6-3.861-6 0"/><path d="M12 10.5a2 2 0 1 0 0-4a2 2 0 0 0 0 4"/></g>`), g.Group(children),
	)
}

func BellUserSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M10.75 8.5a1.25 1.25 0 1 1 2.5 0a1.25 1.25 0 0 1-2.5 0"/><path d="M7.168 3.73c1.014-.971 2.562-1.48 4.831-1.48s3.818.509 4.832 1.48c1.008.965 1.352 2.26 1.508 3.501c.075.602.11 1.226.144 1.822l.003.066c.036.627.07 1.225.147 1.796c.153 1.147.458 2.073 1.138 2.75c.588.584 1.028 1.485.975 2.334c-.028.448-.2.916-.603 1.263c-.396.342-.923.488-1.51.488h-2.896c-.07.813-.27 1.654-.696 2.36c-.592.98-1.588 1.64-3.042 1.64s-2.449-.66-3.04-1.64c-.427-.706-.627-1.547-.697-2.36H5.366c-.596 0-1.129-.148-1.526-.497c-.403-.356-.566-.831-.588-1.28c-.04-.846.405-1.742.976-2.309c.68-.676.985-1.602 1.138-2.749c.076-.571.111-1.169.146-1.796l.004-.066c.034-.596.069-1.22.144-1.822c.156-1.241.5-2.536 1.508-3.5M12 5.75a2.75 2.75 0 0 0-2.01 4.627a3.5 3.5 0 0 0-.54.382c-.734.629-1.2 1.563-1.2 2.741a.75.75 0 0 0 1.5 0c0-.752.284-1.266.676-1.603c.408-.35.977-.543 1.574-.543s1.166.193 1.574.543c.392.337.676.85.676 1.603a.75.75 0 0 0 1.5 0c0-1.178-.466-2.112-1.2-2.741a3.6 3.6 0 0 0-.54-.382A2.75 2.75 0 0 0 12 5.75"/></g>`), g.Group(children),
	)
}

func BellX(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m10 8l4 4m0-4l-4 4m5.019 5h-6.04m6.04 0h3.614c1.876 0 1.559-1.86.61-2.804C15.825 10.801 20.68 3 11.999 3s-3.825 7.8-7.243 11.196c-.913.908-1.302 2.804.61 2.804H8.98m6.039 0c0 1.925-.648 4-3.02 4s-3.02-2.075-3.02-4"/>`), g.Group(children),
	)
}

func BellXSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M7.168 3.73c1.014-.971 2.562-1.48 4.831-1.48s3.818.509 4.832 1.48c1.008.965 1.352 2.26 1.508 3.501c.075.602.11 1.226.144 1.822l.003.066c.036.627.07 1.225.147 1.796c.153 1.147.458 2.073 1.138 2.75c.588.584 1.028 1.485.975 2.334c-.028.448-.2.916-.603 1.263c-.396.342-.923.488-1.51.488h-2.896c-.07.813-.27 1.654-.696 2.36c-.592.98-1.588 1.64-3.042 1.64s-2.449-.66-3.04-1.64c-.427-.706-.627-1.547-.697-2.36H5.366c-.596 0-1.129-.148-1.526-.497c-.403-.356-.566-.831-.588-1.28c-.04-.846.405-1.742.976-2.309c.68-.676.985-1.602 1.138-2.749c.076-.571.111-1.169.146-1.796l.004-.066c.034-.596.069-1.22.144-1.822c.156-1.241.5-2.536 1.508-3.5m3.362 3.74a.75.75 0 1 0-1.06 1.06L10.94 10l-1.47 1.47a.75.75 0 1 0 1.06 1.06L12 11.06l1.47 1.47a.75.75 0 1 0 1.06-1.06L13.06 10l1.47-1.47a.75.75 0 0 0-1.06-1.06L12 8.94z"/>`), g.Group(children),
	)
}

func Bitcoin(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9.273 5.25V3m0 2.25H8.182m1.09 0h4.364m0 0V3m0 2.25c1.808 0 3.273 1.511 3.273 3.375S15.444 12 13.636 12m-4.363 9v-2.25m0 0H8.182m1.09 0h4.364m0 2.25v-2.25m0 0h1.091c1.808 0 3.273-1.511 3.273-3.375S16.535 12 14.727 12h-1.09M6 5.25h2.182m0 0V12m5.454 0H8.182M6 18.75h2.182m0 0V12"/>`), g.Group(children),
	)
}

func BitcoinCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/><path d="M12 8V6m0 12v-2m-3-4h4a2 2 0 1 0 0-4H9zm0 0h5a2 2 0 1 1 0 4H9z"/></g>`), g.Group(children),
	)
}

func BitcoinCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M9.75 11.25v-2.5H13a1.25 1.25 0 1 1 0 2.5zm0 4v-2.5H14a1.25 1.25 0 1 1 0 2.5z"/><path d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12m10.5-6a.75.75 0 0 0-1.5 0v1.25H9a.75.75 0 0 0-.75.75v8c0 .414.336.75.75.75h2.25V18a.75.75 0 0 0 1.5 0v-1.25H14a2.75 2.75 0 0 0 1.266-5.192A2.75 2.75 0 0 0 13 7.25h-.25z"/></g>`), g.Group(children),
	)
}

func BitcoinDiamond(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M2.707 10.295a2.41 2.41 0 0 0 0 3.41l7.588 7.588a2.41 2.41 0 0 0 3.41 0l7.588-7.588a2.41 2.41 0 0 0 0-3.41l-7.588-7.588a2.41 2.41 0 0 0-3.41 0z"/><path d="M12 8V6m0 12v-2m-3-4h4a2 2 0 1 0 0-4H9zm0 0h5a2 2 0 1 1 0 4H9z"/></g>`), g.Group(children),
	)
}

func BitcoinDiamondSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M9.75 11.25v-2.5H13a1.25 1.25 0 1 1 0 2.5zm0 4v-2.5H14a1.25 1.25 0 1 1 0 2.5z"/><path d="M10.79 1.49a3.16 3.16 0 0 1 3.445.687l7.588 7.588a3.16 3.16 0 0 1 0 4.47l-7.588 7.588a3.16 3.16 0 0 1-4.47 0l-7.588-7.588a3.16 3.16 0 0 1 0-4.47l7.588-7.589a3.2 3.2 0 0 1 1.025-.685M12.75 6a.75.75 0 0 0-1.5 0v1.25H9a.75.75 0 0 0-.75.75v8c0 .414.336.75.75.75h2.25V18a.75.75 0 0 0 1.5 0v-1.25H14a2.75 2.75 0 0 0 1.266-5.192A2.75 2.75 0 0 0 13 7.25h-.25z"/></g>`), g.Group(children),
	)
}

func BitcoinHexagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M20.5 15.8V8.2a1.91 1.91 0 0 0-.944-1.645l-6.612-3.8a1.88 1.88 0 0 0-1.888 0l-6.612 3.8A1.9 1.9 0 0 0 3.5 8.2v7.602a1.91 1.91 0 0 0 .944 1.644l6.612 3.8a1.88 1.88 0 0 0 1.888 0l6.612-3.8A1.9 1.9 0 0 0 20.5 15.8"/><path d="M12 8V6m0 12v-2m-3-4h4a2 2 0 1 0 0-4H9zm0 0h5a2 2 0 1 1 0 4H9z"/></g>`), g.Group(children),
	)
}

func BitcoinHexagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M9.75 11.25v-2.5H13a1.25 1.25 0 1 1 0 2.5zm0 4v-2.5H14a1.25 1.25 0 1 1 0 2.5z"/><path d="M10.68 2.105a2.63 2.63 0 0 1 2.64 0l.001.001l6.611 3.8A2.65 2.65 0 0 1 21.25 8.2v7.603a2.66 2.66 0 0 1-1.318 2.291l-.003.002l-6.608 3.799h-.002a2.63 2.63 0 0 1-2.639 0h-.001l-6.608-3.8h-.003A2.64 2.64 0 0 1 2.75 15.8V8.198a2.66 2.66 0 0 1 1.318-2.291l.003-.002zM12.75 6a.75.75 0 0 0-1.5 0v1.25H9a.75.75 0 0 0-.75.75v8c0 .414.336.75.75.75h2.25V18a.75.75 0 0 0 1.5 0v-1.25H14a2.75 2.75 0 0 0 1.266-5.192A2.75 2.75 0 0 0 13 7.25h-.25z"/></g>`), g.Group(children),
	)
}

func BitcoinOctagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M7.805 3.469C8.16 3.115 8.451 3 8.937 3h6.126c.486 0 .778.115 1.132.469l4.336 4.336c.354.354.469.646.469 1.132v6.126c0 .5-.125.788-.469 1.132l-4.336 4.336c-.354.354-.646.469-1.132.469H8.937c-.5 0-.788-.125-1.132-.469L3.47 16.195c-.355-.355-.47-.646-.47-1.132V8.937c0-.5.125-.788.469-1.132z"/><path d="M12 8V6m0 12v-2m-3-4h4a2 2 0 1 0 0-4H9zm0 0h5a2 2 0 1 1 0 4H9z"/></g>`), g.Group(children),
	)
}

func BitcoinOctagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M9.75 11.25v-2.5H13a1.25 1.25 0 1 1 0 2.5zm0 4v-2.5H14a1.25 1.25 0 1 1 0 2.5z"/><path d="M8.037 2.408a2.3 2.3 0 0 1 .9-.158h6.126c.302 0 .602.036.9.158s.54.31.762.53l4.337 4.337c.22.221.408.463.53.762c.123.298.158.598.158.9v6.126c0 .313-.039.616-.163.914a2.3 2.3 0 0 1-.525.748l-4.337 4.337a2.3 2.3 0 0 1-.762.53a2.3 2.3 0 0 1-.9.158H8.937c-.313 0-.616-.039-.914-.163a2.3 2.3 0 0 1-.748-.525l-4.337-4.337a2.3 2.3 0 0 1-.53-.762a2.3 2.3 0 0 1-.158-.9V8.937c0-.313.039-.616.163-.914a2.3 2.3 0 0 1 .525-.748l4.337-4.337c.221-.22.463-.408.762-.53M12.75 6a.75.75 0 0 0-1.5 0v1.25H9a.75.75 0 0 0-.75.75v8c0 .414.336.75.75.75h2.25V18a.75.75 0 0 0 1.5 0v-1.25H14a2.75 2.75 0 0 0 1.266-5.192A2.75 2.75 0 0 0 13 7.25h-.25z"/></g>`), g.Group(children),
	)
}

func BitcoinSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.273 2.25a.75.75 0 0 1 .75.75v1.5h2.863V3a.75.75 0 0 1 1.5 0v1.571c1.878.362 3.273 2.056 3.273 4.054a4.17 4.17 0 0 1-1.258 2.997c1.393.654 2.349 2.1 2.349 3.753c0 2.256-1.78 4.125-4.023 4.125h-.34V21a.75.75 0 0 1-1.5 0v-1.5h-2.864V21a.75.75 0 1 1-1.5 0v-1.5H6A.75.75 0 0 1 6 18h1.432V6H6a.75.75 0 0 1 0-1.5h2.523V3a.75.75 0 0 1 .75-.75M8.932 6v5.25h4.704c1.372 0 2.523-1.153 2.523-2.625S15.008 6 13.636 6zm0 6.75V18h5.795c1.372 0 2.523-1.153 2.523-2.625s-1.151-2.625-2.523-2.625z"/>`), g.Group(children),
	)
}

func BitcoinSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/><path d="M12 8V6m0 12v-2m-3-4h4a2 2 0 1 0 0-4H9zm0 0h5a2 2 0 1 1 0 4H9z"/></g>`), g.Group(children),
	)
}

func BitcoinSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M9.75 11.25v-2.5H13a1.25 1.25 0 1 1 0 2.5zm0 4v-2.5H14a1.25 1.25 0 1 1 0 2.5z"/><path d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057M12.75 6a.75.75 0 0 0-1.5 0v1.25H9a.75.75 0 0 0-.75.75v8c0 .414.336.75.75.75h2.25V18a.75.75 0 0 0 1.5 0v-1.25H14a2.75 2.75 0 0 0 1.266-5.192A2.75 2.75 0 0 0 13 7.25h-.25z"/></g>`), g.Group(children),
	)
}

func BitcoinWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83"/><path d="M12 8V6m0 12v-2m-3-4h4a2 2 0 1 0 0-4H9zm0 0h5a2 2 0 1 1 0 4H9z"/></g>`), g.Group(children),
	)
}

func BitcoinWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M9.75 11.25v-2.5H13a1.25 1.25 0 1 1 0 2.5zm0 4v-2.5H14a1.25 1.25 0 1 1 0 2.5z"/><path d="M10.565 2.075a3.33 3.33 0 0 1 2.87 0c.394.189.755.497 1.26.928l.079.066c.48.41.939.604 1.58.655l.102.008c.662.053 1.135.09 1.547.236a3.33 3.33 0 0 1 2.03 2.029c.145.412.182.885.235 1.547l.008.102c.051.641.246 1.1.655 1.58l.066.078c.431.506.74.867.928 1.261a3.33 3.33 0 0 1 0 2.87c-.189.394-.497.755-.928 1.26l-.066.079c-.418.49-.605.951-.655 1.58l-.008.102c-.053.662-.09 1.135-.236 1.547a3.33 3.33 0 0 1-2.029 2.03c-.412.145-.885.182-1.547.235l-.102.008c-.641.051-1.1.246-1.58.655l-.079.066c-.505.431-.866.74-1.26.928a3.33 3.33 0 0 1-2.87 0c-.394-.189-.755-.497-1.26-.928l-.079-.066a2.56 2.56 0 0 0-1.58-.655l-.102-.008c-.662-.053-1.135-.09-1.547-.236a3.33 3.33 0 0 1-2.03-2.029c-.145-.412-.182-.885-.235-1.547l-.008-.102a2.56 2.56 0 0 0-.655-1.58l-.066-.079c-.431-.505-.74-.866-.928-1.26a3.33 3.33 0 0 1 0-2.87c.189-.394.497-.755.928-1.26l.066-.079a2.56 2.56 0 0 0 .655-1.58l.008-.102c.053-.662.09-1.135.236-1.547a3.33 3.33 0 0 1 2.029-2.03c.412-.145.885-.182 1.547-.235l.102-.008a2.56 2.56 0 0 0 1.58-.655l.078-.066c.506-.431.867-.74 1.261-.928M12.75 6a.75.75 0 0 0-1.5 0v1.25H9a.75.75 0 0 0-.75.75v8c0 .414.336.75.75.75h2.25V18a.75.75 0 0 0 1.5 0v-1.25H14a2.75 2.75 0 0 0 1.266-5.192A2.75 2.75 0 0 0 13 7.25h-.25z"/></g>`), g.Group(children),
	)
}

func Bluetooth(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m6.5 7.678l10.54 8.558c.242.196.363.294.408.41c.04.104.042.216.004.32c-.042.117-.16.218-.396.42l-3.57 3.05c-.432.37-.649.556-.833.564a.53.53 0 0 1-.416-.174c-.118-.133-.118-.408-.118-.958V4.132c0-.55 0-.825.118-.958A.53.53 0 0 1 12.653 3c.184.008.4.193.833.563l3.603 3.08c.226.192.339.289.382.402c.037.1.039.21.004.31c-.04.115-.15.214-.371.412L6.5 17.283"/>`), g.Group(children),
	)
}

func BluetoothSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="m11.37 10.665l-4.397-3.57a.75.75 0 0 0-.946 1.165l4.938 4.009l-4.966 4.456a.75.75 0 1 0 1.002 1.116l4.368-3.92V19.9c0 .247 0 .484.018.675c.018.181.062.492.288.748c.258.292.633.442 1.01.426c.322-.014.575-.176.727-.284c.158-.113.342-.27.54-.439l3.608-3.084c.103-.088.213-.182.3-.27a1.24 1.24 0 0 0 .298-.453a1.2 1.2 0 0 0-.011-.844a1.24 1.24 0 0 0-.309-.444a5 5 0 0 0-.308-.263l-4.256-3.456l4.347-3.901c.096-.087.2-.18.282-.267c.091-.097.21-.24.28-.442a1.2 1.2 0 0 0-.01-.821c-.076-.2-.198-.34-.291-.435a5 5 0 0 0-.29-.26l-3.64-3.112a9 9 0 0 0-.54-.439c-.152-.108-.405-.27-.727-.284a1.27 1.27 0 0 0-1.01.426c-.226.256-.27.567-.288.748c-.018.19-.018.428-.018.675z"/>`), g.Group(children),
	)
}

func Boat(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m4.8 17.194l-.597-3.343a2 2 0 0 1 1.326-2.246l.17-.058m0 0l5.659-1.92a2 2 0 0 1 1.284 0l5.658 1.92m-12.6 0v-3.8a2 2 0 0 1 2-2h2.5m8.1 5.8l.17.058a2 2 0 0 1 1.327 2.246l-.597 3.342m-.9-5.646v-3.8a2 2 0 0 0-2-2h-2.5m-3.6 0h3.6m-3.6 0V4.8a1.8 1.8 0 0 1 3.6 0v.947M3 20.399c.647.657 2.222.843 3.725.216c1.032-.43 2.336-.441 3.391-.071a5.83 5.83 0 0 0 3.768 0c1.055-.37 2.359-.36 3.39.07c1.504.628 3.08.442 3.726-.216"/>`), g.Group(children),
	)
}

func BoatSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M14.55 4.997V4.8a2.55 2.55 0 0 0-5.1 0v.197H7.7a2.75 2.75 0 0 0-2.75 2.75v3.288a2.75 2.75 0 0 0-1.486 2.947l.598 3.344a.75.75 0 0 0 1.476-.264l-.597-3.344a1.25 1.25 0 0 1 .829-1.403l5.829-1.977a1.25 1.25 0 0 1 .803 0l5.828 1.977c.585.198.938.795.83 1.404l-.598 3.343a.75.75 0 1 0 1.476.264l.598-3.344a2.75 2.75 0 0 0-1.486-2.947V7.747a2.75 2.75 0 0 0-2.75-2.75zM9.868 21.251c-.892-.312-2.004-.298-2.854.056a5.6 5.6 0 0 1-2.53.43c-.761-.058-1.52-.306-2.019-.813a.75.75 0 1 1 1.07-1.051c.148.15.5.325 1.063.367a4.1 4.1 0 0 0 1.839-.317c1.214-.506 2.709-.514 3.927-.087a5.08 5.08 0 0 0 3.272 0c1.218-.427 2.713-.42 3.927.087a4.1 4.1 0 0 0 1.84.318c.562-.043.914-.217 1.062-.368a.75.75 0 1 1 1.07 1.051c-.498.507-1.258.755-2.02.812a5.6 5.6 0 0 1-2.529-.429c-.85-.354-1.962-.368-2.854-.056a6.58 6.58 0 0 1-4.264 0"/>`), g.Group(children),
	)
}

func Book(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M5 20.25c0 .414.336.75.75.75h10.652C17.565 21 18 20.635 18 19.4v-1.445M5 20.25A2.25 2.25 0 0 1 7.25 18h10.152q.339 0 .598-.045M5 20.25V6.2c0-1.136-.072-2.389 1.092-2.982C6.52 3 7.08 3 8.2 3h9.2c1.236 0 1.6.437 1.6 1.6v11.8c0 .995-.282 1.425-1 1.555"/>`), g.Group(children),
	)
}

func BookCheck(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M5 20.25c0 .414.336.75.75.75h10.652C17.565 21 18 20.635 18 19.4v-1.445M5 20.25A2.25 2.25 0 0 1 7.25 18h10.152q.339 0 .598-.045M5 20.25V6.2c0-1.136-.072-2.389 1.092-2.982C6.52 3 7.08 3 8.2 3h9.2c1.236 0 1.6.437 1.6 1.6v11.8c0 .995-.282 1.425-1 1.555"/><path d="m9.6 10.323l1.379 1.575a.3.3 0 0 0 .466-.022L14.245 8"/></g>`), g.Group(children),
	)
}

func BookCheckSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M17.4 2.25c.667 0 1.336.109 1.803.593c.46.478.547 1.14.547 1.757v11.8c0 .543-.072 1.077-.35 1.509a1.65 1.65 0 0 1-.65.583v.908c0 .666-.108 1.335-.591 1.802c-.478.462-1.14.548-1.757.548H5.75a1.5 1.5 0 0 1-1.5-1.5V6.017c-.003-.498-.006-1.12.13-1.687c.167-.692.552-1.363 1.371-1.78c.338-.172.694-.24 1.074-.27c.365-.03.81-.03 1.345-.03zm-.998 18c.547 0 .683-.096.714-.126c.025-.024.134-.155.134-.724v-.65h-10a1.5 1.5 0 0 0-1.5 1.5zm-1.55-11.81a.75.75 0 0 0-1.215-.88l-2.468 3.417l-1.005-1.148a.75.75 0 0 0-1.129.987l1.38 1.576c.443.507 1.244.47 1.638-.077z"/>`), g.Group(children),
	)
}

func BookDot(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M5 20.25c0 .414.336.75.75.75h10.652C17.565 21 18 20.635 18 19.4v-1.445M5 20.25A2.25 2.25 0 0 1 7.25 18h10.152q.339 0 .598-.045M5 20.25V6.2c0-1.136-.072-2.389 1.092-2.982C6.52 3 7.08 3 8.2 3h9.2c1.236 0 1.6.437 1.6 1.6v11.8c0 .995-.282 1.425-1 1.555"/><path d="M12 12a2 2 0 1 0 0-4a2 2 0 0 0 0 4"/></g>`), g.Group(children),
	)
}

func BookDotSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M10.75 10a1.25 1.25 0 1 1 2.5 0a1.25 1.25 0 0 1-2.5 0"/><path d="M17.4 2.25H8.17c-.534 0-.98 0-1.345.03c-.38.03-.736.098-1.074.27c-.82.417-1.204 1.088-1.37 1.78c-.137.566-.134 1.189-.132 1.687l.001.183v14.05a1.5 1.5 0 0 0 1.5 1.5h10.652c.617 0 1.28-.086 1.756-.548c.484-.467.592-1.137.592-1.802v-.908a1.65 1.65 0 0 0 .65-.583c.278-.432.35-.966.35-1.509V4.6c0-.616-.086-1.28-.547-1.757c-.467-.484-1.136-.593-1.803-.593m-.998 18H5.75a1.5 1.5 0 0 1 1.5-1.5h10v.65c0 .57-.11.7-.134.724c-.031.03-.167.126-.714.126M12 7.25a2.75 2.75 0 1 1 0 5.5a2.75 2.75 0 0 1 0-5.5"/></g>`), g.Group(children),
	)
}

func BookHome(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M5 20.25c0 .414.336.75.75.75h10.652C17.565 21 18 20.635 18 19.4v-1.445M5 20.25A2.25 2.25 0 0 1 7.25 18h10.152q.339 0 .598-.045M5 20.25V6.2c0-1.136-.072-2.389 1.092-2.982C6.52 3 7.08 3 8.2 3h9.2c1.236 0 1.6.437 1.6 1.6v11.8c0 .995-.282 1.425-1 1.555"/><path d="M10.75 12.5a1 1 0 0 1-1-1V9.14L12 7.5l2.25 1.64v2.36a1 1 0 0 1-1 1z"/></g>`), g.Group(children),
	)
}

func BookHomeSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M10.5 11.5V9.522L12 8.428l1.5 1.094V11.5a.25.25 0 0 1-.25.25h-2.5a.25.25 0 0 1-.25-.25"/><path d="M17.4 2.25c.667 0 1.336.109 1.803.593c.46.478.547 1.14.547 1.757v11.8c0 .543-.072 1.077-.35 1.509a1.65 1.65 0 0 1-.65.583v.908c0 .666-.108 1.335-.591 1.802c-.478.462-1.14.548-1.757.548H5.75a1.5 1.5 0 0 1-1.5-1.5V6.017c-.003-.498-.006-1.12.13-1.687c.167-.692.552-1.363 1.371-1.78c.338-.172.694-.24 1.074-.27c.365-.03.81-.03 1.345-.03zm-.998 18c.547 0 .683-.096.714-.126c.025-.024.134-.155.134-.724v-.65h-10a1.5 1.5 0 0 0-1.5 1.5zm-3.96-13.356a.75.75 0 0 0-.884 0l-2.25 1.64A.75.75 0 0 0 9 9.14v2.36c0 .966.784 1.75 1.75 1.75h2.5A1.75 1.75 0 0 0 15 11.5V9.14a.75.75 0 0 0-.308-.606z"/></g>`), g.Group(children),
	)
}

func BookMinus(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M5 20.25c0 .414.336.75.75.75h10.652C17.565 21 18 20.635 18 19.4v-1.445M5 20.25A2.25 2.25 0 0 1 7.25 18h10.152q.339 0 .598-.045M5 20.25V6.2c0-1.136-.072-2.389 1.092-2.982C6.52 3 7.08 3 8.2 3h9.2c1.236 0 1.6.437 1.6 1.6v11.8c0 .995-.282 1.425-1 1.555M9.5 10h5"/>`), g.Group(children),
	)
}

func BookMinusSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M17.4 2.25H8.17c-.534 0-.98 0-1.345.03c-.38.03-.736.098-1.074.27c-.82.417-1.204 1.088-1.37 1.78c-.137.566-.134 1.189-.132 1.687l.001.183v14.05a1.5 1.5 0 0 0 1.5 1.5h10.652c.617 0 1.28-.086 1.756-.548c.484-.467.592-1.137.592-1.802v-.908a1.65 1.65 0 0 0 .65-.583c.278-.432.35-.966.35-1.509V4.6c0-.616-.086-1.28-.547-1.757c-.467-.484-1.136-.593-1.803-.593m-.998 18H5.75a1.5 1.5 0 0 1 1.5-1.5h10v.65c0 .57-.11.7-.134.724c-.031.03-.167.126-.714.126M9.5 9.25h5a.75.75 0 0 1 0 1.5h-5a.75.75 0 0 1 0-1.5"/>`), g.Group(children),
	)
}

func BookOpen(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M12 9.8V20m0-10.2c0-1.704.107-3.584-1.638-4.473C9.72 5 8.88 5 7.2 5H4.6C3.364 5 3 5.437 3 6.6v8.8c0 .568-.036 1.195.546 1.491c.214.109.493.109 1.052.109H7.43c2.377 0 3.26 1.036 4.569 3m0-10.2c0-1.704-.108-3.584 1.638-4.473C14.279 5 15.12 5 16.8 5h2.6c1.235 0 1.6.436 1.6 1.6v8.8c0 .567.035 1.195-.546 1.491c-.213.109-.493.109-1.052.109h-2.833c-2.377 0-3.26 1.036-4.57 3"/>`), g.Group(children),
	)
}

func BookOpenSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12 5.776a3.4 3.4 0 0 0-1.298-1.117c-.444-.227-.924-.321-1.47-.366c-.532-.043-1.187-.043-2-.043H4.6c-.667 0-1.337.109-1.803.593c-.461.478-.547 1.14-.547 1.757v8.887c-.002.244-.004.604.076.936c.103.427.35.867.88 1.136c.23.118.463.157.675.175c.198.016.434.016.69.016h2.86c1.066 0 1.714.228 2.239.616c.563.417 1.046 1.06 1.706 2.05a.75.75 0 0 0 1.248 0c.66-.99 1.144-1.633 1.706-2.05c.525-.388 1.173-.616 2.24-.616h2.858c.257 0 .493 0 .69-.016a1.8 1.8 0 0 0 .677-.175c.529-.269.777-.71.88-1.136c.08-.332.077-.693.075-.937V6.6c0-.617-.086-1.28-.547-1.757c-.467-.484-1.137-.593-1.803-.593h-2.632c-.813 0-1.469 0-2 .043c-.546.045-1.027.14-1.47.366A3.4 3.4 0 0 0 12 5.776"/>`), g.Group(children),
	)
}

func BookPlus(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M5 20.25c0 .414.336.75.75.75h10.652C17.565 21 18 20.635 18 19.4v-1.445M5 20.25A2.25 2.25 0 0 1 7.25 18h10.152q.339 0 .598-.045M5 20.25V6.2c0-1.136-.072-2.389 1.092-2.982C6.52 3 7.08 3 8.2 3h9.2c1.236 0 1.6.437 1.6 1.6v11.8c0 .995-.282 1.425-1 1.555M9.5 10h5M12 7.5v5"/>`), g.Group(children),
	)
}

func BookPlusSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M17.4 2.25H8.17c-.534 0-.98 0-1.345.03c-.38.03-.736.098-1.074.27c-.82.417-1.204 1.088-1.37 1.78c-.137.566-.134 1.189-.132 1.687l.001.183v14.05a1.5 1.5 0 0 0 1.5 1.5h10.652c.617 0 1.28-.086 1.756-.548c.484-.467.592-1.137.592-1.802v-.908a1.65 1.65 0 0 0 .65-.583c.278-.432.35-.966.35-1.509V4.6c0-.616-.086-1.28-.547-1.757c-.467-.484-1.136-.593-1.803-.593m-.998 18H5.75a1.5 1.5 0 0 1 1.5-1.5h10v.65c0 .57-.11.7-.134.724c-.031.03-.167.126-.714.126M12.75 7.5v1.75h1.75a.75.75 0 0 1 0 1.5h-1.75v1.75a.75.75 0 0 1-1.5 0v-1.75H9.5a.75.75 0 0 1 0-1.5h1.75V7.5a.75.75 0 0 1 1.5 0"/>`), g.Group(children),
	)
}

func BookSlash(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M5 20.25c0 .414.336.75.75.75h10.652C17.565 21 18 20.635 18 19.4v-1.445M5 20.25A2.25 2.25 0 0 1 7.25 18h10.152q.339 0 .598-.045M5 20.25V6.2c0-1.136-.072-2.389 1.092-2.982C6.52 3 7.08 3 8.2 3h9.2c1.236 0 1.6.437 1.6 1.6v11.8c0 .995-.282 1.425-1 1.555M21 3L3 21"/>`), g.Group(children),
	)
}

func BookSlashSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.17 2.25h9.23c.667 0 1.336.109 1.803.593c.157.162.27.346.351.542l.916-.915a.75.75 0 1 1 1.06 1.06l-1.78 1.78V16.4c0 .543-.072 1.077-.35 1.509a1.65 1.65 0 0 1-.65.583v.908c0 .666-.108 1.335-.591 1.802c-.478.462-1.14.548-1.757.548H5.75a1.5 1.5 0 0 1-1.421-1.018l-.799.798a.75.75 0 0 1-1.06-1.06l1.78-1.78V6.016c-.003-.498-.006-1.12.13-1.687c.167-.692.552-1.363 1.371-1.78c.338-.172.694-.24 1.074-.27c.365-.03.81-.03 1.345-.03m8.232 18c.547 0 .683-.096.714-.126c.025-.024.134-.155.134-.724v-.65h-10a1.5 1.5 0 0 0-1.5 1.5z"/>`), g.Group(children),
	)
}

func BookSnooze(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M5 20.25c0 .414.336.75.75.75h10.652C17.565 21 18 20.635 18 19.4v-1.445M5 20.25A2.25 2.25 0 0 1 7.25 18h10.152q.339 0 .598-.045M5 20.25V6.2c0-1.136-.072-2.389 1.092-2.982C6.52 3 7.08 3 8.2 3h9.2c1.236 0 1.6.437 1.6 1.6v11.8c0 .995-.282 1.425-1 1.555"/><path d="M10.75 8h2.5l-2.5 4h2.5"/></g>`), g.Group(children),
	)
}

func BookSnoozeSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M17.4 2.25c.667 0 1.336.109 1.803.593c.46.478.547 1.14.547 1.757v11.8c0 .543-.072 1.077-.35 1.509a1.65 1.65 0 0 1-.65.583v.908c0 .666-.108 1.335-.591 1.802c-.478.462-1.14.548-1.757.548H5.75a1.5 1.5 0 0 1-1.5-1.5V6.017c-.003-.498-.006-1.12.13-1.687c.167-.692.552-1.363 1.371-1.78c.338-.172.694-.24 1.074-.27c.365-.03.81-.03 1.345-.03zm-.998 18c.547 0 .683-.096.714-.126c.025-.024.134-.155.134-.724v-.65h-10a1.5 1.5 0 0 0-1.5 1.5zm-5.652-13a.75.75 0 0 0 0 1.5h1.147l-1.783 2.852a.75.75 0 0 0 .636 1.148h2.5a.75.75 0 0 0 0-1.5h-1.147l1.783-2.852a.75.75 0 0 0-.636-1.148z"/>`), g.Group(children),
	)
}

func BookSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.17 2.25h9.23c.667 0 1.336.109 1.803.593c.46.478.547 1.14.547 1.757v11.8c0 .543-.072 1.077-.35 1.509a1.65 1.65 0 0 1-.65.583v.908c0 .666-.108 1.335-.591 1.802c-.478.462-1.14.548-1.757.548H5.75a1.5 1.5 0 0 1-1.5-1.5V6.017c-.003-.498-.006-1.12.13-1.687c.167-.692.552-1.363 1.371-1.78c.338-.172.694-.24 1.074-.27c.365-.03.81-.03 1.345-.03m-2.42 18h10.652c.547 0 .683-.096.714-.126c.025-.024.134-.155.134-.724v-.65h-10a1.5 1.5 0 0 0-1.5 1.5"/>`), g.Group(children),
	)
}

func BookUser(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M5 20.25c0 .414.336.75.75.75h10.652C17.565 21 18 20.635 18 19.4v-1.445M5 20.25A2.25 2.25 0 0 1 7.25 18h10.152q.339 0 .598-.045M5 20.25V6.2c0-1.136-.072-2.389 1.092-2.982C6.52 3 7.08 3 8.2 3h9.2c1.236 0 1.6.437 1.6 1.6v11.8c0 .995-.282 1.425-1 1.555"/><path d="M15 14c0-3.861-6-3.861-6 0"/><path d="M12 11a2 2 0 1 0 0-4a2 2 0 0 0 0 4"/></g>`), g.Group(children),
	)
}

func BookUserSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M10.75 9a1.25 1.25 0 1 1 2.5 0a1.25 1.25 0 0 1-2.5 0"/><path d="M17.4 2.25H8.17c-.534 0-.98 0-1.345.03c-.38.03-.736.098-1.074.27c-.82.417-1.204 1.088-1.37 1.78c-.137.566-.134 1.189-.132 1.687l.001.183v14.05a1.5 1.5 0 0 0 1.5 1.5h10.652c.617 0 1.28-.086 1.756-.548c.484-.467.592-1.137.592-1.802v-.908a1.65 1.65 0 0 0 .65-.583c.278-.432.35-.966.35-1.509V4.6c0-.616-.086-1.28-.547-1.757c-.467-.484-1.136-.593-1.803-.593m-.998 18H5.75a1.5 1.5 0 0 1 1.5-1.5h10v.65c0 .57-.11.7-.134.724c-.031.03-.167.126-.714.126M12 6.25a2.75 2.75 0 0 1 2.01 4.627q.286.164.54.382c.734.629 1.2 1.563 1.2 2.741a.75.75 0 0 1-1.5 0c0-.752-.284-1.266-.676-1.603c-.408-.35-.977-.543-1.574-.543s-1.166.193-1.574.543c-.392.337-.676.85-.676 1.603a.75.75 0 0 1-1.5 0c0-1.178.466-2.112 1.2-2.741q.254-.219.54-.382A2.75 2.75 0 0 1 12 6.25"/></g>`), g.Group(children),
	)
}

func BookX(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M5 20.25c0 .414.336.75.75.75h10.652C17.565 21 18 20.635 18 19.4v-1.445M5 20.25A2.25 2.25 0 0 1 7.25 18h10.152q.339 0 .598-.045M5 20.25V6.2c0-1.136-.072-2.389 1.092-2.982C6.52 3 7.08 3 8.2 3h9.2c1.236 0 1.6.437 1.6 1.6v11.8c0 .995-.282 1.425-1 1.555M10 8l4 4m0-4l-4 4"/>`), g.Group(children),
	)
}

func BookXSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M17.4 2.25c.667 0 1.336.109 1.803.593c.46.478.547 1.14.547 1.757v11.8c0 .543-.072 1.077-.35 1.509a1.65 1.65 0 0 1-.65.583v.908c0 .666-.108 1.335-.591 1.802c-.478.462-1.14.548-1.757.548H5.75a1.5 1.5 0 0 1-1.5-1.5V6.017c-.003-.498-.006-1.12.13-1.687c.167-.692.552-1.363 1.371-1.78c.338-.172.694-.24 1.074-.27c.365-.03.81-.03 1.345-.03zm-.998 18c.547 0 .683-.096.714-.126c.025-.024.134-.155.134-.724v-.65h-10a1.5 1.5 0 0 0-1.5 1.5zM10.53 7.47a.75.75 0 1 0-1.06 1.06L10.94 10l-1.47 1.47a.75.75 0 1 0 1.06 1.06L12 11.06l1.47 1.47a.75.75 0 1 0 1.06-1.06L13.06 10l1.47-1.47a.75.75 0 0 0-1.06-1.06L12 8.94z"/>`), g.Group(children),
	)
}

func Bookmark(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M7.527 20.841C6.861 21.274 6 20.772 6 19.952V3.942c0-.52.336-.942.75-.942h10.5c.414 0 .75.422.75.942v16.01c0 .82-.861 1.322-1.527.89l-3.946-2.562a.96.96 0 0 0-1.054 0z"/>`), g.Group(children),
	)
}

func BookmarkCheck(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M7.527 20.841C6.861 21.274 6 20.772 6 19.952V3.942c0-.52.336-.942.75-.942h10.5c.414 0 .75.422.75.942v16.01c0 .82-.861 1.322-1.527.89l-3.946-2.562a.96.96 0 0 0-1.054 0z"/><path d="m9.7 9.822l1.379 1.576a.3.3 0 0 0 .466-.022l2.8-3.876"/></g>`), g.Group(children),
	)
}

func BookmarkCheckSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M5.25 3.942c0-.766.521-1.692 1.5-1.692h10.5c.979 0 1.5.926 1.5 1.692v16.01c0 1.352-1.469 2.308-2.686 1.518l-3.944-2.56a.21.21 0 0 0-.238 0l-3.946 2.56c-1.217.79-2.686-.165-2.686-1.518zm9.703 3.997a.75.75 0 0 0-1.216-.878l-2.467 3.416l-1.006-1.148a.75.75 0 0 0-1.128.987l1.378 1.576a1.05 1.05 0 0 0 1.64-.077z"/>`), g.Group(children),
	)
}

func BookmarkDot(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M7.527 20.841C6.861 21.274 6 20.772 6 19.952V3.942c0-.52.336-.942.75-.942h10.5c.414 0 .75.422.75.942v16.01c0 .82-.861 1.322-1.527.89l-3.946-2.562a.96.96 0 0 0-1.054 0z"/><path d="M12 12a2 2 0 1 0 0-4a2 2 0 0 0 0 4"/></g>`), g.Group(children),
	)
}

func BookmarkDotSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M10.75 10a1.25 1.25 0 1 1 2.5 0a1.25 1.25 0 0 1-2.5 0"/><path d="M5.25 3.942c0-.766.521-1.692 1.5-1.692h10.5c.979 0 1.5.926 1.5 1.692v16.01c0 1.352-1.469 2.308-2.686 1.518l-3.944-2.56a.21.21 0 0 0-.238 0l-3.946 2.56c-1.217.79-2.686-.165-2.686-1.518zM12 7.25a2.75 2.75 0 1 0 0 5.5a2.75 2.75 0 0 0 0-5.5"/></g>`), g.Group(children),
	)
}

func BookmarkHome(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M7.527 20.841C6.861 21.274 6 20.772 6 19.952V3.942c0-.52.336-.942.75-.942h10.5c.414 0 .75.422.75.942v16.01c0 .82-.861 1.322-1.527.89l-3.946-2.562a.96.96 0 0 0-1.054 0z"/><path d="M10.75 12.5a1 1 0 0 1-1-1V9.14L12 7.5l2.25 1.64v2.36a1 1 0 0 1-1 1z"/></g>`), g.Group(children),
	)
}

func BookmarkHomeSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M10.5 11.5V9.522L12 8.428l1.5 1.094V11.5a.25.25 0 0 1-.25.25h-2.5a.25.25 0 0 1-.25-.25"/><path d="M5.25 3.942c0-.766.521-1.692 1.5-1.692h10.5c.979 0 1.5.926 1.5 1.692v16.01c0 1.352-1.469 2.308-2.686 1.518l-3.944-2.56a.21.21 0 0 0-.238 0l-3.946 2.56c-1.217.79-2.686-.165-2.686-1.518zm7.192 2.952a.75.75 0 0 0-.884 0l-2.25 1.64A.75.75 0 0 0 9 9.14v2.36c0 .966.784 1.75 1.75 1.75h2.5A1.75 1.75 0 0 0 15 11.5V9.14a.75.75 0 0 0-.308-.606z"/></g>`), g.Group(children),
	)
}

func BookmarkMinus(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M7.527 20.841C6.861 21.274 6 20.772 6 19.952V3.942c0-.52.336-.942.75-.942h10.5c.414 0 .75.422.75.942v16.01c0 .82-.861 1.322-1.527.89l-3.946-2.562a.96.96 0 0 0-1.054 0zM9.5 9.5h5"/>`), g.Group(children),
	)
}

func BookmarkMinusSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M5.25 3.942c0-.766.521-1.692 1.5-1.692h10.5c.979 0 1.5.926 1.5 1.692v16.01c0 1.352-1.469 2.308-2.686 1.518l-3.944-2.56a.21.21 0 0 0-.238 0l-3.946 2.56c-1.217.79-2.686-.165-2.686-1.518zM9.5 8.75a.75.75 0 0 0 0 1.5h5a.75.75 0 0 0 0-1.5z"/>`), g.Group(children),
	)
}

func BookmarkPlus(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M7.527 20.841C6.861 21.274 6 20.772 6 19.952V3.942c0-.52.336-.942.75-.942h10.5c.414 0 .75.422.75.942v16.01c0 .82-.861 1.322-1.527.89l-3.946-2.562a.96.96 0 0 0-1.054 0zM9.5 9.5h5M12 7v5"/>`), g.Group(children),
	)
}

func BookmarkPlusSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M5.25 3.942c0-.766.521-1.692 1.5-1.692h10.5c.979 0 1.5.926 1.5 1.692v16.01c0 1.352-1.469 2.308-2.686 1.518l-3.944-2.56a.21.21 0 0 0-.238 0l-3.946 2.56c-1.217.79-2.686-.165-2.686-1.518zM12.75 7a.75.75 0 0 0-1.5 0v1.75H9.5a.75.75 0 0 0 0 1.5h1.75V12a.75.75 0 0 0 1.5 0v-1.75h1.75a.75.75 0 0 0 0-1.5h-1.75z"/>`), g.Group(children),
	)
}

func BookmarkSlash(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M7.527 20.841C6.861 21.274 6 20.772 6 19.952V3.942c0-.52.336-.942.75-.942h10.5c.414 0 .75.422.75.942v16.01c0 .82-.861 1.322-1.527.89l-3.946-2.562a.96.96 0 0 0-1.054 0zM21 3L3 21"/>`), g.Group(children),
	)
}

func BookmarkSlashSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M21.53 2.47a.75.75 0 0 1 0 1.06l-2.78 2.78v13.642c0 1.352-1.469 2.308-2.686 1.518l-3.944-2.56a.21.21 0 0 0-.238 0l-3.946 2.56c-1.217.79-2.686-.165-2.686-1.518v-.141l-1.72 1.72a.75.75 0 0 1-1.06-1.061l2.78-2.78V3.941c0-.766.521-1.692 1.5-1.692h10.5c.979 0 1.5.926 1.5 1.692v.247l1.72-1.72a.75.75 0 0 1 1.06 0"/>`), g.Group(children),
	)
}

func BookmarkSnooze(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M7.527 20.841C6.861 21.274 6 20.772 6 19.952V3.942c0-.52.336-.942.75-.942h10.5c.414 0 .75.422.75.942v16.01c0 .82-.861 1.322-1.527.89l-3.946-2.562a.96.96 0 0 0-1.054 0z"/><path d="M10.75 8h2.5l-2.5 4h2.5"/></g>`), g.Group(children),
	)
}

func BookmarkSnoozeSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M5.25 3.942c0-.766.521-1.692 1.5-1.692h10.5c.979 0 1.5.926 1.5 1.692v16.01c0 1.352-1.469 2.308-2.686 1.518l-3.944-2.56a.21.21 0 0 0-.238 0l-3.946 2.56c-1.217.79-2.686-.165-2.686-1.518zm5.5 3.308a.75.75 0 0 0 0 1.5h1.147l-1.783 2.852a.75.75 0 0 0 .636 1.148h2.5a.75.75 0 0 0 0-1.5h-1.147l1.783-2.852a.75.75 0 0 0-.636-1.148z"/>`), g.Group(children),
	)
}

func BookmarkSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M6.75 2.25c-.979 0-1.5.926-1.5 1.692v16.01c0 1.352 1.469 2.308 2.686 1.518l3.945-2.561a.21.21 0 0 1 .238 0l3.945 2.561c1.217.79 2.686-.165 2.686-1.518V3.942c0-.766-.521-1.692-1.5-1.692z"/>`), g.Group(children),
	)
}

func BookmarkUser(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M7.527 20.841C6.861 21.274 6 20.772 6 19.952V3.942c0-.52.336-.942.75-.942h10.5c.414 0 .75.422.75.942v16.01c0 .82-.861 1.322-1.527.89l-3.946-2.562a.96.96 0 0 0-1.054 0z"/><path d="M15 14c0-3.861-6-3.861-6 0"/><path d="M12 11a2 2 0 1 0 0-4a2 2 0 0 0 0 4"/></g>`), g.Group(children),
	)
}

func BookmarkUserSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M10.75 9a1.25 1.25 0 1 1 2.5 0a1.25 1.25 0 0 1-2.5 0"/><path d="M5.25 3.942c0-.766.521-1.692 1.5-1.692h10.5c.979 0 1.5.926 1.5 1.692v16.01c0 1.352-1.469 2.308-2.686 1.518l-3.944-2.56a.21.21 0 0 0-.238 0l-3.946 2.56c-1.217.79-2.686-.165-2.686-1.518zM12 6.25a2.75 2.75 0 0 0-2.01 4.627a3.5 3.5 0 0 0-.54.382c-.734.629-1.2 1.563-1.2 2.741a.75.75 0 0 0 1.5 0c0-.752.284-1.266.676-1.603c.408-.35.977-.543 1.574-.543s1.166.193 1.574.543c.392.337.676.85.676 1.603a.75.75 0 0 0 1.5 0c0-1.178-.466-2.112-1.2-2.741a3.6 3.6 0 0 0-.54-.382A2.75 2.75 0 0 0 12 6.25"/></g>`), g.Group(children),
	)
}

func BookmarkX(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M7.527 20.841C6.861 21.274 6 20.772 6 19.952V3.942c0-.52.336-.942.75-.942h10.5c.414 0 .75.422.75.942v16.01c0 .82-.861 1.322-1.527.89l-3.946-2.562a.96.96 0 0 0-1.054 0zM10 7.5l4 4m0-4l-4 4"/>`), g.Group(children),
	)
}

func BookmarkXSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M5.25 3.942c0-.766.521-1.692 1.5-1.692h10.5c.979 0 1.5.926 1.5 1.692v16.01c0 1.352-1.469 2.308-2.686 1.518l-3.944-2.56a.21.21 0 0 0-.238 0l-3.946 2.56c-1.217.79-2.686-.165-2.686-1.518zm5.28 3.028a.75.75 0 1 0-1.06 1.06l1.47 1.47l-1.47 1.47a.75.75 0 1 0 1.06 1.06L12 10.56l1.47 1.47a.75.75 0 1 0 1.06-1.06L13.06 9.5l1.47-1.47a.75.75 0 0 0-1.06-1.06L12 8.44z"/>`), g.Group(children),
	)
}

func BoundingBox(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M5 17V7m0 10a2 2 0 1 0 2 2m-2-2a2 2 0 0 1 2 2M5 7a2 2 0 0 0 2-2M5 7a2 2 0 1 1 2-2m0 0h10m0 0a2 2 0 0 0 2 2m-2-2a2 2 0 1 1 2 2m0 0v10m0 0a2 2 0 0 0-2 2m2-2a2 2 0 1 1-2 2M7 19h10"/>`), g.Group(children),
	)
}

func BoundingBoxSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M5 2.25a2.75 2.75 0 0 0-.75 5.396v8.708a2.751 2.751 0 1 0 3.396 3.396h8.708a2.751 2.751 0 1 0 3.396-3.396V7.646a2.751 2.751 0 1 0-3.396-3.396H7.646A2.75 2.75 0 0 0 5 2.25m.75 14.104V7.646A2.76 2.76 0 0 0 7.646 5.75h8.708c.259.916.98 1.637 1.896 1.896v8.708a2.76 2.76 0 0 0-1.896 1.896H7.646a2.76 2.76 0 0 0-1.896-1.896"/>`), g.Group(children),
	)
}

func Bowl(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M15.017 21c.555 0 1.005-.448 1.005-1v-.45c0-.307.164-.563.433-.715a9 9 0 0 0 1.944-1.471a8.95 8.95 0 0 0 2.595-5.366c.061-.549-.395-.998-.95-.998H3.956c-.555 0-1.011.45-.95.998A8.95 8.95 0 0 0 5.6 17.364a9 9 0 0 0 1.833 1.408c.33.193.55.537.548.918v.307A1.003 1.003 0 0 0 8.986 21zM6 5v2m12-2v2m-6-4v4"/>`), g.Group(children),
	)
}

func BowlSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M3.956 10.25c-.94 0-1.813.778-1.696 1.83a9.7 9.7 0 0 0 2.812 5.816a9.8 9.8 0 0 0 1.984 1.524c.126.073.177.184.176.268v.306a1.753 1.753 0 0 0 1.755 1.756h6.03c.965 0 1.755-.78 1.755-1.75v-.449l.002-.017l.003-.007a.1.1 0 0 1 .047-.038a9.8 9.8 0 0 0 2.104-1.593a9.7 9.7 0 0 0 2.812-5.815c.117-1.053-.756-1.831-1.696-1.831zM6 4.25a.75.75 0 0 1 .75.75v2a.75.75 0 0 1-1.5 0V5A.75.75 0 0 1 6 4.25m12 0a.75.75 0 0 1 .75.75v2a.75.75 0 0 1-1.5 0V5a.75.75 0 0 1 .75-.75m-6-2a.75.75 0 0 1 .75.75v4a.75.75 0 0 1-1.5 0V3a.75.75 0 0 1 .75-.75"/>`), g.Group(children),
	)
}

func Box(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m12 21l8.131-4.208c.316-.164.474-.245.589-.366a1 1 0 0 0 .226-.373c.054-.159.054-.336.054-.692V7.533M12 21l-8.131-4.208c-.316-.164-.474-.245-.589-.366a1 1 0 0 1-.226-.373C3 15.894 3 15.716 3 15.359V7.533M12 21v-9.063m9-4.404l-9 4.404m9-4.404l-8.27-4.28c-.267-.138-.4-.208-.541-.235a1 1 0 0 0-.378 0c-.14.027-.274.097-.542.235L3 7.533m0 0l9 4.404"/>`), g.Group(children),
	)
}

func BoxSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M11.669 2.282c.218-.043.443-.043.662 0c.251.048.479.167.691.277l.053.028l8.27 4.28a.75.75 0 0 1 .405.666v7.897c0 .283.002.583-.093.862a1.8 1.8 0 0 1-.395.652c-.205.214-.473.351-.723.48l-.063.033l-8.131 4.208a.75.75 0 0 1-.69 0l-8.131-4.208l-.063-.033c-.25-.129-.518-.266-.723-.48a1.8 1.8 0 0 1-.395-.652c-.095-.28-.094-.58-.093-.863V7.533a.75.75 0 0 1 .405-.666l8.269-4.28l.053-.027c.213-.111.44-.23.692-.278m.226 1.496a7 7 0 0 0-.282.141L4.668 7.514L12 11.102l7.332-3.588l-6.946-3.595a7 7 0 0 0-.282-.141l-.058-.024m-.796 16.013v-7.362l-7.5-3.67v6.624c0 .187 0 .294.005.375l.009.078a.3.3 0 0 0 .057.095c.005.004.021.017.064.042c.068.042.163.09.328.176zm.645-15.99l.06-.023z"/>`), g.Group(children),
	)
}

func BrandChrome(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="m10.992 20.946l4.122-7.146M4.755 6.654L8.886 13.8m11.367-5.4H12m0 7.2a3.6 3.6 0 1 0 0-7.2a3.6 3.6 0 0 0 0 7.2"/><path d="M12 21a9 9 0 1 0 0-18a9 9 0 0 0 0 18"/></g>`), g.Group(children),
	)
}

func BrandChromeSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M4.11 6.27a1 1 0 0 1 .089-.12A9.74 9.74 0 0 1 12 2.25a9.75 9.75 0 0 1 8.96 5.899A9.7 9.7 0 0 1 21.75 12A9.75 9.75 0 0 1 12 21.75a10 10 0 0 1-1.146-.067C6.009 21.116 2.25 16.997 2.25 12c0-2.142.69-4.122 1.86-5.73m.616 1.833a8.252 8.252 0 0 0 5.87 12.028l2.226-3.858a4.35 4.35 0 0 1-4.68-2.26zm.934-1.382l2.228 3.855A4.35 4.35 0 0 1 12 7.65h7.011A8.24 8.24 0 0 0 12 3.75a8.23 8.23 0 0 0-6.34 2.97m14.084 2.43h-4.458A4.33 4.33 0 0 1 16.35 12a4.33 4.33 0 0 1-.675 2.328l-3.413 5.918A8.25 8.25 0 0 0 19.744 9.15"/>`), g.Group(children),
	)
}

func BrandDribbble(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M12 21a9 9 0 1 0 0-18a9 9 0 0 0 0 18"/><path d="M3.07 10.875c1.7.102 6.2.195 9.08-1.035s5.358-3.492 6.208-4.21"/><path d="M8.625 3.654c1.409 1.3 4.482 4.61 5.625 7.896s1.566 7.326 1.827 8.476"/><path d="M21 12c-1.313 0-4.936-.495-8.178.928c-3.522 1.547-6.072 3.946-7.184 5.438"/></g>`), g.Group(children),
	)
}

func BrandDribbbleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12a10 10 0 0 1 .077-1.234C2.934 5.964 7.033 2.25 12 2.25a9.72 9.72 0 0 1 6.882 2.844l.01.01A9.72 9.72 0 0 1 21.75 12A9.75 9.75 0 0 1 12 21.75A9.75 9.75 0 0 1 2.25 12m4.97-.395c1.725-.12 3.669-.411 5.224-1.075q.231-.1.458-.206c.251.488.469.982.64 1.473l.018.051a11 11 0 0 0-1.04.394c-3.144 1.38-5.55 3.419-6.912 4.974L6.66 18.29c1.202-1.399 3.463-3.357 6.463-4.675a10 10 0 0 1 .875-.334a40 40 0 0 1 .757 3.44c.133.739.241 1.418.333 1.994l.013.081c.046.29.09.56.13.797l1.395-.761l-.057-.356c-.092-.574-.202-1.266-.337-2.02a42 42 0 0 0-.78-3.544c1.757-.328 3.433-.249 4.612-.194l.154.007l-.005-1.506c-1.18-.06-3.134-.154-5.198.254l-.057-.17a13 13 0 0 0-.73-1.676c1.746-1.011 3.211-2.223 4.069-2.957l-1.075-1.056c-.855.727-2.185 1.812-3.738 2.712c-1.087-1.732-2.424-3.28-3.451-4.34L8.47 4.54c1 .975 2.502 2.629 3.68 4.479q-.147.067-.295.13c-1.324.566-3.07.843-4.74.959a32 32 0 0 1-3.16.055l-.198 1.494c.899.032 2.135.04 3.462-.053"/>`), g.Group(children),
	)
}

func BrandFacebook(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M6.5 10v4h3v7h4v-7h3l1-4h-4V8c0-.545.455-1 1-1h3V3h-3c-2.723 0-5 2.277-5 5v2z"/>`), g.Group(children),
	)
}

func BrandFacebookSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M14.5 2.75c-2.861 0-5.25 2.389-5.25 5.25v1.75H6.5a.25.25 0 0 0-.25.25v4c0 .138.112.25.25.25h2.75V21c0 .138.112.25.25.25h4a.25.25 0 0 0 .25-.25v-6.75h2.75a.25.25 0 0 0 .242-.19l1-4a.25.25 0 0 0-.242-.31h-3.75V8a.76.76 0 0 1 .75-.75h3a.25.25 0 0 0 .25-.25V3a.25.25 0 0 0-.25-.25z"/>`), g.Group(children),
	)
}

func BrandFigma(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M6 12a3 3 0 0 1 3-3h3v6H9a3 3 0 0 1-3-3m0 6a3 3 0 0 1 3-3h3v3a3 3 0 0 1-6 0"/><path d="M12 12a3.001 3.001 0 0 1 5.121-2.121A3.001 3.001 0 1 1 12.001 12"/><path d="M12 3h3a3 3 0 0 1 0 6h-3zM6 6a3 3 0 0 1 3-3h3v6H9a3 3 0 0 1-3-3"/></g>`), g.Group(children),
	)
}

func BrandFigmaSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12.75 3.75v4.5H15a2.25 2.25 0 0 0 0-4.5zM17.25 9a3.76 3.76 0 0 1 1.215 1.565A3.751 3.751 0 0 1 12.75 15v3a3.75 3.75 0 1 1-6-3a3.76 3.76 0 0 1-1.5-3a3.75 3.75 0 0 1 1.5-3A3.75 3.75 0 0 1 9 2.25h6A3.75 3.75 0 0 1 17.25 9m-6 .75H9a2.25 2.25 0 1 0 0 4.5h2.25z"/>`), g.Group(children),
	)
}

func BrandFramer(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M12 15.6V21l-6.5-5.4zM5.5 3l13 12.6h-13V9.3h13V3z"/>`), g.Group(children),
	)
}

func BrandFramerSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M5.5 2.25a.75.75 0 0 0-.522 1.289l5.17 5.011H5.5a.75.75 0 0 0-.75.75v6.3c0 .235.108.445.278.583l6.493 5.394A.75.75 0 0 0 12.75 21v-4.65h5.75a.75.75 0 0 0 .522-1.289l-5.17-5.011H18.5a.75.75 0 0 0 .75-.75V3a.75.75 0 0 0-.75-.75z"/>`), g.Group(children),
	)
}

func BrandGithub(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M3.5 15.668q.675.081 1 .618c.326.537 1.537 2.526 2.913 2.526H9.5m5.672-3.513q.823 1.078.823 1.936V21m-5.625-5.609q-.87.955-.869 1.813V21"/><path d="M15.172 15.299c1.202-.25 2.293-.682 3.14-1.316c1.448-1.084 2.188-2.758 2.188-4.411c0-1.16-.44-2.243-1.204-3.16c-.425-.511.819-3.872-.286-3.359c-1.105.514-2.725 1.198-3.574.947c-.909-.268-1.9-.416-2.936-.416c-.9 0-1.766.111-2.574.317c-1.174.298-2.296-.363-3.426-.848c-1.13-.484-.513 3.008-.849 3.422C4.921 7.38 4.5 8.44 4.5 9.572c0 1.653.895 3.327 2.343 4.41c.965.722 2.174 1.183 3.527 1.41"/></g>`), g.Group(children),
	)
}

func BrandGithubSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M19.955 6.033a3 3 0 0 1 .019-.356c.024-.23.062-.472.103-.736q.037-.23.074-.487c.056-.397.119-.907.048-1.298c-.033-.185-.132-.554-.49-.77c-.39-.234-.789-.118-1.015-.013c-.546.254-1.191.536-1.791.725c-.3.094-.571.16-.8.188c-.238.03-.382.016-.454-.005c-.98-.29-2.041-.447-3.149-.447c-.962 0-1.89.119-2.758.34c-.394.1-.811.05-1.31-.115a11 11 0 0 1-1.054-.436q-.272-.125-.582-.26c-.285-.121-.65-.168-1.001.022c-.314.17-.472.457-.553.662c-.161.402-.2.929-.214 1.355c-.008.255-.008.56-.009.83c0 .172 0 .33-.002.452a4 4 0 0 1-.023.409v.005c-.78 1-1.244 2.188-1.244 3.474c0 1.917 1.03 3.803 2.644 5.011c.789.59 1.71 1.015 2.709 1.294a2.8 2.8 0 0 0-.352 1.327v.858H7.413c-.347 0-.801-.275-1.296-.817c-.462-.506-.814-1.082-.976-1.348c-.347-.572-.894-.894-1.55-.974a.75.75 0 1 0-.182 1.49c.243.029.363.12.45.263l.002.004c.166.272.581.956 1.148 1.576c.535.587 1.375 1.306 2.404 1.306H8.75L8.751 21c0 .414.336.75.75.75h6.497a.75.75 0 0 0 .748-.75v-3.765c0-.492-.142-.983-.388-1.468c.886-.275 1.708-.663 2.404-1.184c1.65-1.235 2.488-3.139 2.488-5.011c0-1.315-.485-2.527-1.295-3.54"/>`), g.Group(children),
	)
}

func BrandGitlab(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M11.981 21L21 13.708L18.498 3l-3.015 6.497H8.997L5.507 3L3 13.708z"/>`), g.Group(children),
	)
}

func BrandGitlabSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M6.168 2.645a.75.75 0 0 0-1.39.184L2.27 13.537a.75.75 0 0 0 .257.753l8.982 7.292a.75.75 0 0 0 .944.001l9.019-7.292a.75.75 0 0 0 .258-.754L19.228 2.829a.75.75 0 0 0-1.41-.145l-2.814 6.063H9.445z"/>`), g.Group(children),
	)
}

func BrandGoogle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M20.839 10.38h-8.656v3.33h5.065c-.092.81-.645 2.07-1.842 2.88c-.737.54-1.842.9-3.223.9c-3.079 0-5.525-2.572-5.525-5.58c0-2.923 2.585-5.49 5.525-5.49c1.75 0 2.855.72 3.591 1.35l2.579-2.52C16.787 3.9 14.669 3 12.183 3C8.592 3 5.461 4.98 3.987 7.95a8.8 8.8 0 0 0 0 8.1C5.461 19.02 8.592 21 12.183 21c2.486 0 4.604-.81 6.078-2.16c2.4-2.1 3.095-5.427 2.578-8.46"/>`), g.Group(children),
	)
}

func BrandGoogleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12.183 2.75c-3.683 0-6.902 2.031-8.419 5.088a9.05 9.05 0 0 0 0 8.325c1.517 3.056 4.736 5.087 8.419 5.087c2.54 0 4.72-.827 6.244-2.224c2.484-2.173 3.185-5.599 2.658-8.688a.25.25 0 0 0-.246-.208h-8.656a.25.25 0 0 0-.25.25v3.33c0 .138.112.25.25.25h4.768c-.166.74-.687 1.747-1.685 2.423l-.008.005c-.685.502-1.735.852-3.075.852c-2.936 0-5.275-2.455-5.275-5.33c0-2.783 2.472-5.24 5.275-5.24c1.67 0 2.72.683 3.429 1.29a.25.25 0 0 0 .337-.011l2.578-2.52a.25.25 0 0 0-.011-.368c-1.609-1.388-3.784-2.311-6.333-2.311"/>`), g.Group(children),
	)
}

func BrandInstagram(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6zm14-2.9h.5"/><path d="M15.462 11.487a3.5 3.5 0 1 1-6.925 1.026a3.5 3.5 0 0 1 6.925-1.026"/></g>`), g.Group(children),
	)
}

func BrandInstagramSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25c-1.092 0-1.958 0-2.655.057c-.714.058-1.317.18-1.868.46a4.75 4.75 0 0 0-2.076 2.077c-.281.55-.403 1.154-.461 1.868c-.057.697-.057 1.563-.057 2.655v5.266c0 1.092 0 1.958.057 2.655c.058.714.18 1.317.46 1.869a4.75 4.75 0 0 0 2.077 2.075c.55.281 1.154.403 1.868.461c.697.057 1.563.057 2.655.057h5.266c1.092 0 1.958 0 2.655-.057c.714-.058 1.317-.18 1.869-.46a4.75 4.75 0 0 0 2.075-2.076c.281-.552.403-1.155.461-1.869c.057-.697.057-1.563.057-2.655V9.367c0-1.092 0-1.958-.057-2.655c-.058-.714-.18-1.317-.46-1.868a4.75 4.75 0 0 0-2.076-2.076c-.552-.281-1.155-.403-1.869-.461c-.697-.057-1.563-.057-2.655-.057zM16.25 6.5a.75.75 0 0 1 .75-.75h.5a.75.75 0 0 1 0 1.5H17a.75.75 0 0 1-.75-.75m-6.207 1.728a4.25 4.25 0 1 1 3.914 7.544a4.25 4.25 0 0 1-3.914-7.544"/>`), g.Group(children),
	)
}

func BrandLinkedin(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6zm5-1.775v.5"/><path d="M8 16.375V10.75m4 5.625V13.5m0 0v-2.75m0 2.75c0-1.288 1.222-2 2.4-2c1.6 0 1.6 1.375 1.6 2.875v2"/></g>`), g.Group(children),
	)
}

func BrandLinkedinSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057M8.75 7.625a.75.75 0 0 0-1.5 0v.5a.75.75 0 0 0 1.5 0zm0 3.125a.75.75 0 0 0-1.5 0v5.625a.75.75 0 0 0 1.5 0zM12 10a.75.75 0 0 0-.75.75v5.625a.75.75 0 0 0 1.5 0V13.5c0-.377.168-.665.458-.883c.306-.229.743-.367 1.192-.367c.293 0 .435.062.505.11c.066.044.133.12.193.28c.141.374.152.935.152 1.735v2a.75.75 0 0 0 1.5 0v-2.08c0-.686 0-1.523-.248-2.184a2.03 2.03 0 0 0-.756-.994c-.381-.258-.84-.367-1.346-.367c-.56 0-1.14.129-1.65.392v-.392A.75.75 0 0 0 12 10"/>`), g.Group(children),
	)
}

func BrandPinterest(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/><path d="M7.452 13.18c-1.108-2.262.4-6.668 5.472-5.948c5.586.794 4.581 9.478-.077 9.138c-1.474-.107-2.031-1.328-2.177-2.576m0 0c-.11-.946.016-1.907.16-2.41c.244-.857.649-.74.353.393c-.144.552-.32 1.245-.513 2.017m0 0c-.514 2.06-1.15 4.685-1.63 6.708"/></g>`), g.Group(children),
	)
}

func BrandPinterestSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0 5.385 4.365 9.75 9.75 9.75s9.75-4.365 9.75-9.75S17.385 2.25 12 2.25S2.25 6.615 2.25 12m4.999-3.331c1.049-1.557 2.99-2.576 5.78-2.18c1.608.23 2.78 1.039 3.517 2.135c.726 1.08 1.006 2.398.93 3.647c-.076 1.247-.51 2.489-1.295 3.412c-.8.94-1.96 1.54-3.388 1.435c-.84-.06-1.483-.41-1.943-.923c-.375 1.53-.762 3.138-1.08 4.48a.75.75 0 1 1-1.46-.347a645 645 0 0 1 1.6-6.587c-.095-1.002.037-1.995.198-2.562a2.2 2.2 0 0 1 .317-.7c.068-.09.186-.227.368-.318a.83.83 0 0 1 .834.05c.237.16.325.391.36.51c.039.137.05.275.05.395c0 .243-.045.53-.129.85c-.134.516-.297 1.157-.476 1.872c.073.5.218.929.437 1.234c.217.301.526.514 1.033.55c.9.066 1.612-.293 2.136-.91c.54-.635.88-1.55.94-2.531c.06-.979-.165-1.959-.677-2.72c-.5-.745-1.297-1.318-2.483-1.486c-2.281-.324-3.63.5-4.326 1.532c-.736 1.092-.792 2.474-.367 3.342a.75.75 0 0 1-1.346.66c-.683-1.393-.54-3.344.47-4.84"/>`), g.Group(children),
	)
}

func BrandPocket(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="m9 10.25l3 3l3-3"/><path d="M4.8 3h14.4c.477 0 .935.199 1.273.553S21 4.388 21 4.889v6.667c0 2.504-.948 4.907-2.636 6.678S14.387 21 12 21a8.6 8.6 0 0 1-3.444-.719a9 9 0 0 1-2.92-2.047C3.948 16.463 3 14.06 3 11.556V4.889c0-.501.19-.982.527-1.336A1.76 1.76 0 0 1 4.8 3"/></g>`), g.Group(children),
	)
}

func BrandPocketSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.984 3.036A2.5 2.5 0 0 1 4.8 2.25h14.4c.688 0 1.34.287 1.816.786c.474.497.734 1.164.734 1.853v6.667c0 2.692-1.019 5.28-2.843 7.195c-1.826 1.916-4.31 2.999-6.907 2.999a9.4 9.4 0 0 1-3.743-.781a9.7 9.7 0 0 1-3.164-2.218C3.27 16.837 2.25 14.248 2.25 11.556V4.889c0-.689.26-1.356.734-1.853M9.53 9.72a.75.75 0 0 0-1.06 1.06l3 3a.75.75 0 0 0 1.06 0l3-3a.75.75 0 1 0-1.06-1.06L12 12.19z"/>`), g.Group(children),
	)
}

func BrandSlack(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M13.44 18.12v1.44c0 .81.63 1.44 1.44 1.44s1.44-.63 1.44-1.44s-.63-1.44-1.44-1.44zm7.56-3.6c0-.9-.72-1.71-1.71-1.71h-4.14c-.9 0-1.71.72-1.71 1.71c0 .9.72 1.71 1.71 1.71h4.14c.9 0 1.71-.81 1.71-1.71M6.06 13.26H4.62c-.81 0-1.44.63-1.44 1.44s.63 1.44 1.44 1.44s1.44-.63 1.44-1.44zm3.6 7.56c.9 0 1.71-.72 1.71-1.71v-4.14c0-.9-.72-1.71-1.71-1.71c-.9 0-1.71.72-1.71 1.71v4.14c.09.9.81 1.71 1.71 1.71m.9-16.38c0-.81-.63-1.44-1.44-1.44s-1.44.63-1.44 1.44s.63 1.44 1.44 1.44h1.44zM3 9.48c0 .9.72 1.71 1.71 1.71h4.14c.9 0 1.71-.72 1.71-1.71c0-.9-.72-1.71-1.71-1.71H4.71C3.72 7.86 3 8.58 3 9.48m14.94 1.26h1.44c.81 0 1.44-.63 1.44-1.44s-.63-1.44-1.44-1.44s-1.44.63-1.44 1.44zm-3.69-7.47c-.9 0-1.71.72-1.71 1.71v4.14c0 .9.72 1.71 1.71 1.71c.9 0 1.71-.72 1.71-1.71V4.89c0-.9-.72-1.62-1.71-1.62"/>`), g.Group(children),
	)
}

func BrandSlackSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M14.25 2.52c-1.288 0-2.46 1.03-2.46 2.46v4.14c0 1.288 1.03 2.46 2.46 2.46c1.288 0 2.46-1.03 2.46-2.46V4.89c0-1.34-1.083-2.37-2.46-2.37m5.13 4.59c-1.224 0-2.19.966-2.19 2.19v1.44c0 .414.336.75.75.75h1.44c1.224 0 2.19-.966 2.19-2.19s-.966-2.19-2.19-2.19M4.71 7.02l-.068.003c-1.314.12-2.392 1.11-2.392 2.457c0 1.288 1.03 2.46 2.46 2.46h4.14c1.288 0 2.46-1.03 2.46-2.46c0-1.288-1.03-2.46-2.46-2.46zm4.41-4.77c-1.224 0-2.19.966-2.19 2.19s.966 2.19 2.19 2.19h1.44a.75.75 0 0 0 .75-.75V4.44c0-1.224-.966-2.19-2.19-2.19m.54 10.26c-1.288 0-2.46 1.03-2.46 2.46v4.14q0 .038.004.075c.119 1.188 1.082 2.385 2.456 2.385c1.288 0 2.46-1.03 2.46-2.46v-4.14c0-1.288-1.03-2.46-2.46-2.46m-5.04 0c-1.224 0-2.19.966-2.19 2.19s.966 2.19 2.19 2.19s2.19-.966 2.19-2.19v-1.44a.75.75 0 0 0-.75-.75zm10.53-.45c-1.288 0-2.46 1.03-2.46 2.46c0 1.288 1.03 2.46 2.46 2.46h4.14c1.314 0 2.46-1.146 2.46-2.46c0-1.288-1.03-2.46-2.46-2.46zm-1.71 5.31a.75.75 0 0 0-.75.75v1.44c0 1.224.966 2.19 2.19 2.19s2.19-.966 2.19-2.19s-.966-2.19-2.19-2.19z"/>`), g.Group(children),
	)
}

func BrandSpotify(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M8.72 15.384c2.018-.8 4.239-.5 6.055.7m-6.963-3.7c2.725-1 5.752-.7 8.073 1M6.5 9.284c3.633-1.4 7.77-.9 11 1.3"/><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/></g>`), g.Group(children),
	)
}

func BrandSpotifySolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12m4.52-2.016c3.4-1.31 7.279-.844 10.308 1.22a.75.75 0 0 0 .844-1.24c-3.43-2.336-7.825-2.87-11.692-1.38a.75.75 0 1 0 .54 1.4m1.3 3.104c2.515-.923 5.275-.635 7.372.901a.75.75 0 0 0 .886-1.21c-2.544-1.864-5.84-2.176-8.775-1.1a.75.75 0 0 0 .517 1.41m6.292 3.622a.75.75 0 0 0 .826-1.252c-2.004-1.324-4.48-1.668-6.744-.771a.75.75 0 1 0 .552 1.394c1.773-.702 3.737-.447 5.366.629"/>`), g.Group(children),
	)
}

func BrandTelegram(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M20 5L4.672 11.373c-.395.164-.592.247-.643.354a.3.3 0 0 0 .016.29c.063.1.268.16.68.281L10.5 14M20 5l-2.065 13.049c-.04.254-.06.381-.127.45a.3.3 0 0 1-.223.097c-.097 0-.205-.072-.421-.216l-2.93-1.956M20 5l-9.5 9m0 0l.156 4.3c0 .334 0 .501.069.585c.06.074.15.116.246.115c.11-.001.24-.108.5-.32l2.764-2.256M10.5 14l3.735 2.424"/>`), g.Group(children),
	)
}

func BrandTelegramSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M20.464 4.41a.75.75 0 0 1 .277.707l-2.065 13.049a1.08 1.08 0 0 1-.327.853a1.06 1.06 0 0 1-.758.327a1.1 1.1 0 0 1-.53-.145a4 4 0 0 1-.296-.186l-.018-.011l-2.467-1.649l-2.353 1.921a5 5 0 0 1-.342.264a1.1 1.1 0 0 1-.605.21a1.06 1.06 0 0 1-.836-.39a1.1 1.1 0 0 1-.227-.605a5 5 0 0 1-.011-.43v-.01l-.136-3.748l-5.256-1.55l-.026-.007a7 7 0 0 1-.504-.16c-.11-.043-.402-.156-.577-.44a1.05 1.05 0 0 1-.056-1.003c.143-.303.42-.447.525-.501c.134-.07.308-.142.483-.215l15.353-6.384a.75.75 0 0 1 .752.104M10.298 13.16l5.23-4.903l-9.892 3.529zm7.617-5.097l-6.208 5.827l2.944 1.91l2.605 1.741z"/>`), g.Group(children),
	)
}

func BrandThreads(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9.77 8.515c2.23-1.812 5.444-.845 5.823 2.135c.403 3.163-.4 5.67-3.52 5.67c-2.895 0-2.806-2.52-2.806-2.52c0-2.7 4.589-3.06 7.262-1.71c4.9 3.15 1.336 8.91-4.01 8.91C8.09 21 4.5 18.75 4.5 12s3.59-9 8.02-9c3.125 0 5.944 1.626 6.98 4.879"/>`), g.Group(children),
	)
}

func BrandThreadsSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M5.25 12c0-3.247.861-5.272 2.12-6.493c1.265-1.225 3.052-1.757 5.15-1.757c2.856 0 5.345 1.467 6.265 4.356a.75.75 0 0 0 1.43-.455c-1.152-3.615-4.301-5.401-7.696-5.401c-2.332 0-4.554.593-6.192 2.18C4.684 6.022 3.75 8.497 3.75 12s.934 5.978 2.577 7.57c1.638 1.587 3.86 2.18 6.192 2.18c2.932 0 5.429-1.577 6.514-3.68c.547-1.06.74-2.269.411-3.459c-.33-1.192-1.16-2.284-2.51-3.152l-.067-.038a7 7 0 0 0-.463-.212q-.025-.326-.067-.654c-.225-1.77-1.314-2.998-2.718-3.48c-1.386-.475-3.016-.203-4.322.858a.75.75 0 1 0 .945 1.164c.926-.751 2.018-.902 2.89-.603c.856.294 1.563 1.04 1.717 2.25v.002c-1.033-.203-2.118-.227-3.083-.059c-.82.144-1.614.437-2.22.94c-.625.52-1.027 1.25-1.03 2.164v.004a2 2 0 0 0 .004.148a3.5 3.5 0 0 0 .405 1.473c.223.416.573.84 1.106 1.156s1.207.498 2.043.498c1.8 0 3.056-.749 3.743-2.049c.328-.62.511-1.34.584-2.111c.918.66 1.403 1.396 1.597 2.1c.215.777.101 1.598-.298 2.372c-.808 1.565-2.766 2.868-5.18 2.868c-2.098 0-3.885-.532-5.15-1.757c-1.259-1.22-2.12-3.246-2.12-6.493m6.774.165c.905-.158 1.958-.103 2.912.137c-.023.817-.171 1.5-.445 2.018c-.394.745-1.098 1.25-2.417 1.25c-.613 0-1.014-.132-1.278-.29a1.46 1.46 0 0 1-.551-.576a2 2 0 0 1-.227-.83l-.001-.074c0-.432.171-.756.488-1.02c.339-.28.858-.5 1.52-.615"/>`), g.Group(children),
	)
}

func BrandTrello(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/><path d="M17 7h-3v5h3zm-7 0H7v9h3z"/></g>`), g.Group(children),
	)
}

func BrandTrelloSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057M6.25 7v9c0 .414.336.75.75.75h3a.75.75 0 0 0 .75-.75V7a.75.75 0 0 0-.75-.75H7a.75.75 0 0 0-.75.75m7 0v5c0 .414.336.75.75.75h3a.75.75 0 0 0 .75-.75V7a.75.75 0 0 0-.75-.75h-3a.75.75 0 0 0-.75.75"/>`), g.Group(children),
	)
}

func BrandTwitch(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M15.556 11.1V7.5M20 3H4v14.4h4.444V21L12 17.4h4.444L20 13.8zm-8.889 8.1V7.5z"/>`), g.Group(children),
	)
}

func BrandTwitchSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M3.25 3A.75.75 0 0 1 4 2.25h16a.75.75 0 0 1 .75.75v10.8a.75.75 0 0 1-.216.527l-3.556 3.6a.75.75 0 0 1-.534.223h-4.13l-3.336 3.377A.75.75 0 0 1 7.694 21v-2.85H4a.75.75 0 0 1-.75-.75zm8.611 4.5a.75.75 0 0 0-1.5 0v3.6a.75.75 0 0 0 1.5 0zm3.695-.75a.75.75 0 0 0-.75.75v3.6a.75.75 0 1 0 1.5 0V7.5a.75.75 0 0 0-.75-.75"/>`), g.Group(children),
	)
}

func BrandTwitter(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M21 4.85c-.9.443-1.782.623-2.7.896c-1.009-1.145-2.505-1.208-3.942-.667C12.427 5.806 12 7.529 12 9.364c-2.92.075-5.521-1.262-7.2-3.618c0 0-3.764 6.723 3.6 9.95c-1.685 1.127-3.365 1.888-5.4 1.808c2.977 1.631 6.222 2.192 9.03 1.372c4.63-1.351 7.36-5.722 7.334-10.397c0-.225 1.359-2.506 1.636-3.629"/>`), g.Group(children),
	)
}

func BrandTwitterSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M18.517 4.903c-1.271-1.12-2.966-1.074-4.423-.526c-1.155.435-1.891 1.19-2.32 2.113c-.306.661-.446 1.389-.498 2.112C8.9 8.459 6.811 7.276 5.411 5.31a.75.75 0 0 0-.652-.313c-.307.016-.532.22-.666.481a10 10 0 0 0-.474 1.12c-.255.732-.519 1.757-.53 2.905c-.012 1.154.233 2.446 1.007 3.676c.599.95 1.494 1.832 2.769 2.578c-1.227.672-2.447 1.052-3.836.998a.75.75 0 0 0-.39 1.407c3.105 1.7 6.555 2.323 9.602 1.435c4.96-1.449 7.853-6.09 7.873-11.001a7 7 0 0 1 .137-.285q.105-.211.238-.467q.12-.23.258-.504c.364-.719.818-1.65.981-2.31a.75.75 0 0 0-1.06-.853c-.612.302-1.193.462-1.859.645z"/>`), g.Group(children),
	)
}

func BrandX(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m19 4l-5.93 6.93M5 20l5.93-6.93m0 0l5.795 6.587c.19.216.483.343.794.343h1.474c.836 0 1.307-.85.793-1.435L13.07 10.93m-2.14 2.14L4.214 5.435C3.7 4.85 4.17 4 5.007 4h1.474c.31 0 .604.127.794.343l5.795 6.587"/>`), g.Group(children),
	)
}

func BrandXSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M19.57 4.488a.75.75 0 0 0-1.14-.976l-5.368 6.274l-5.224-5.938a1.8 1.8 0 0 0-1.357-.598H5.007c-.68 0-1.264.352-1.56.885a1.55 1.55 0 0 0 .204 1.795l6.286 7.147l-5.507 6.435a.75.75 0 1 0 1.14.976l5.368-6.274l5.224 5.938c.345.392.85.598 1.357.598h1.474c.681 0 1.264-.352 1.56-.885a1.55 1.55 0 0 0-.203-1.795l-6.287-7.146z"/>`), g.Group(children),
	)
}

func BrandYoutube(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M2 12c0-3.3 0-4.95 1.464-5.975C4.93 5 7.286 5 12 5s7.071 0 8.535 1.025S22 8.7 22 12s0 4.95-1.465 5.975C19.072 19 16.714 19 12 19s-7.071 0-8.536-1.025S2 15.3 2 12"/><path d="M10.5 9.908v4.184a.41.41 0 0 0 .412.408a.4.4 0 0 0 .228-.068l3.175-2.074a.405.405 0 0 0 .003-.678l-3.175-2.11a.415.415 0 0 0-.573.11a.4.4 0 0 0-.07.228"/></g>`), g.Group(children),
	)
}

func BrandYoutubeSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M6.443 4.381C7.84 4.25 9.637 4.25 11.96 4.25h.082c2.322 0 4.119 0 5.516.131c1.407.133 2.517.406 3.409 1.03c.928.65 1.377 1.511 1.587 2.607c.197 1.024.197 2.321.197 3.907v.15c0 1.586 0 2.883-.197 3.907c-.21 1.096-.659 1.957-1.587 2.607c-.892.624-2.002.897-3.41 1.03c-1.396.131-3.193.131-5.515.131h-.082c-2.322 0-4.119 0-5.516-.131c-1.407-.133-2.517-.406-3.409-1.03c-.928-.65-1.377-1.511-1.587-2.607c-.197-1.024-.197-2.321-.197-3.907v-.15c0-1.586 0-2.883.197-3.907c.21-1.096.659-1.957 1.587-2.607c.892-.624 2.002-.897 3.41-1.03m5.115 4.564a1.166 1.166 0 0 0-1.608.313c-.13.191-.2.418-.2.65v4.184a1.16 1.16 0 0 0 1.8.968l3.175-2.074a1.155 1.155 0 0 0 .008-1.931z"/>`), g.Group(children),
	)
}

func Briefcase(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M8.308 21h7.384c3.71 0 4.375-1.45 4.569-3.213l.692-7.2c.25-2.196-.397-3.987-4.338-3.987h-9.23c-3.941 0-4.587 1.791-4.338 3.987l.692 7.2C3.933 19.55 4.598 21 8.308 21m0-14.4v-.72c0-1.593 0-2.88 2.954-2.88h1.476c2.954 0 2.954 1.287 2.954 2.88v.72"/><path d="M9.812 13.331A15.26 15.26 0 0 1 3.234 11m11 2.331A15.26 15.26 0 0 0 20.812 11M14 13.5a2 2 0 1 1-4 0a2 2 0 0 1 4 0"/></g>`), g.Group(children),
	)
}

func BriefcaseSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.3 7.35h-.915c-1.888 0-2.761.433-3.173.91c-.408.473-.534 1.188-.424 2.203a14.5 14.5 0 0 0 5.639 2.064a2.75 2.75 0 0 1 5.148.006c1.966-.274 3.89-.96 5.634-2.04c.116-1.03-.01-1.755-.421-2.233c-.412-.477-1.285-.91-3.173-.91zm-6 3.315c-.13-1.158-.054-2.422.777-3.385c.834-.968 2.254-1.43 4.308-1.43h.173c0-.378 0-.798.053-1.192c.055-.41.174-.853.454-1.25c.589-.83 1.655-1.158 3.197-1.158h1.476c1.542 0 2.608.329 3.197 1.159c.28.396.4.838.454 1.25c.053.393.053.813.053 1.191h.173c2.054 0 3.474.462 4.308 1.43c.831.963.907 2.227.776 3.385l-.693 7.204c-.102.933-.344 1.973-1.212 2.746c-.856.763-2.174 1.135-4.102 1.135H8.308c-1.929 0-3.246-.372-4.102-1.135c-.868-.773-1.11-1.812-1.212-2.746l-.002-.01zM14.943 5.85c0-.396-.002-.714-.04-.993c-.037-.278-.103-.456-.191-.58c-.15-.212-.56-.527-1.973-.527h-1.476c-1.412 0-1.823.315-1.973.526c-.088.125-.154.303-.191.581c-.038.28-.04.597-.04.993zM12 12.25a1.25 1.25 0 1 0 0 2.5a1.25 1.25 0 0 0 0-2.5"/>`), g.Group(children),
	)
}

func BrightnessHigh(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3 12h3M5 5l2.121 2.121M19 5l-2.121 2.121M5 19l2.121-2.121M19 19l-2.121-2.121M12 3v3m0 15v-3m6-6h3m-6 0a3 3 0 1 1-6 0a3 3 0 0 1 6 0"/>`), g.Group(children),
	)
}

func BrightnessHighSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12a.75.75 0 0 1 .75-.75h3a.75.75 0 0 1 0 1.5H3a.75.75 0 0 1-.75-.75m2.22-7.53a.75.75 0 0 1 1.06 0l2.122 2.12a.75.75 0 0 1-1.061 1.06L4.47 5.532a.75.75 0 0 1 0-1.061m15.06-.001a.75.75 0 0 1 0 1.06l-2.12 2.122a.75.75 0 0 1-1.06-1.061l2.12-2.121a.75.75 0 0 1 1.061 0M7.652 16.348a.75.75 0 0 1 0 1.061L5.53 19.53a.75.75 0 0 1-1.06-1.06l2.121-2.122a.75.75 0 0 1 1.06 0m8.697 0a.75.75 0 0 1 1.061 0l2.121 2.122a.75.75 0 1 1-1.06 1.06l-2.122-2.121a.75.75 0 0 1 0-1.06M12 2.25a.75.75 0 0 1 .75.75v3a.75.75 0 0 1-1.5 0V3a.75.75 0 0 1 .75-.75m0 15a.75.75 0 0 1 .75.75v3a.75.75 0 0 1-1.5 0v-3a.75.75 0 0 1 .75-.75M17.25 12a.75.75 0 0 1 .75-.75h3a.75.75 0 0 1 0 1.5h-3a.75.75 0 0 1-.75-.75M12 8.25a3.75 3.75 0 1 0 0 7.5a3.75 3.75 0 0 0 0-7.5"/>`), g.Group(children),
	)
}

func BrightnessLow(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M15 12a3 3 0 1 1-6 0a3 3 0 0 1 6 0M3 12h1m1-7l.707.707M19 5l-.707.707M5 19l.707-.707M19 19l-.707-.707M12 3v1m0 17v-1m8-8h1"/>`), g.Group(children),
	)
}

func BrightnessLowSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12a.75.75 0 0 1 .75-.75h1a.75.75 0 0 1 0 1.5H3a.75.75 0 0 1-.75-.75m2.22-7.53a.75.75 0 0 1 1.06 0l.707.707a.75.75 0 0 1-1.06 1.06L4.47 5.53a.75.75 0 0 1 0-1.06m15.06 0a.75.75 0 0 1 0 1.06l-.707.707a.75.75 0 1 1-1.06-1.06l.707-.707a.75.75 0 0 1 1.06 0M6.237 17.763a.75.75 0 0 1 0 1.06l-.707.707a.75.75 0 0 1-1.06-1.06l.707-.707a.75.75 0 0 1 1.06 0m11.526 0a.75.75 0 0 1 1.06 0l.707.707a.75.75 0 1 1-1.06 1.06l-.707-.707a.75.75 0 0 1 0-1.06M12 2.25a.75.75 0 0 1 .75.75v1a.75.75 0 0 1-1.5 0V3a.75.75 0 0 1 .75-.75m0 17a.75.75 0 0 1 .75.75v1a.75.75 0 0 1-1.5 0v-1a.75.75 0 0 1 .75-.75M19.25 12a.75.75 0 0 1 .75-.75h1a.75.75 0 0 1 0 1.5h-1a.75.75 0 0 1-.75-.75M12 8.25a3.75 3.75 0 1 0 0 7.5a3.75 3.75 0 0 0 0-7.5"/>`), g.Group(children),
	)
}

func Building(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M14.7 2c1.68 0 2.52 0 3.162.34a3.06 3.06 0 0 1 1.311 1.359c.327.665.327 1.536.327 3.279v10.044c0 1.743 0 2.614-.327 3.28a3.06 3.06 0 0 1-1.311 1.359C17.22 22 16.38 22 14.7 22H9.3c-1.68 0-2.52 0-3.162-.34a3.06 3.06 0 0 1-1.311-1.359c-.327-.665-.327-1.536-.327-3.279V6.978c0-1.743 0-2.614.327-3.28A3.06 3.06 0 0 1 6.138 2.34C6.78 2 7.62 2 9.3 2z"/><path d="M9.5 21v-5.5a2 2 0 0 1 2-2h1a2 2 0 0 1 2 2V21M10 6H8m2 4H8m8-4h-2m2 4h-2"/></g>`), g.Group(children),
	)
}

func BuildingOne(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M2.25 22h19.5M4 22V6.978c0-1.743 0-2.614.327-3.28A3.06 3.06 0 0 1 5.638 2.34C6.28 2 7.12 2 8.8 2h.4c1.68 0 2.52 0 3.162.34a3.06 3.06 0 0 1 1.311 1.359C14 4.364 14 5.235 14 6.978V22M10 6H8m2 4H8m2 4H8m11.8 8V11.444c0-2.305-.798-3.148-2.925-3.148H14"/>`), g.Group(children),
	)
}

func BuildingOneSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.233 1.25c.812 0 1.469 0 2 .045c.55.047 1.033.145 1.48.381a3.8 3.8 0 0 1 1.633 1.692c.223.454.316.944.36 1.507c.044.549.044 1.227.044 2.072v.599h2.125c1.135 0 2.13.22 2.809.948c.666.714.866 1.747.866 2.95v9.806h1.2a.75.75 0 0 1 0 1.5H2.25a.75.75 0 0 1 0-1.5h1V6.947c0-.845 0-1.523.043-2.072c.045-.563.138-1.053.36-1.507a3.8 3.8 0 0 1 1.635-1.692c.446-.236.93-.334 1.478-.38c.532-.046 1.189-.046 2-.046zM8 5.25a.75.75 0 0 0 0 1.5h2a.75.75 0 0 0 0-1.5zM7.25 10c0 .414.336.75.75.75h2a.75.75 0 0 0 0-1.5H8a.75.75 0 0 0-.75.75M8 13.25a.75.75 0 0 0 0 1.5h2a.75.75 0 0 0 0-1.5z"/>`), g.Group(children),
	)
}

func BuildingSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M14.733 1.25H9.267c-.812 0-1.469 0-2 .045c-.55.047-1.033.145-1.48.381a3.8 3.8 0 0 0-1.633 1.692c-.223.454-.316.944-.36 1.507c-.044.549-.044 1.227-.044 2.072v10.106c0 .845 0 1.523.043 2.072c.045.563.138 1.053.36 1.507a3.8 3.8 0 0 0 1.635 1.692c.446.236.93.334 1.478.38c.415.036.904.044 1.484.046V15.5a2.75 2.75 0 0 1 2.75-2.75h1a2.75 2.75 0 0 1 2.75 2.75v7.25a19 19 0 0 0 1.484-.045c.549-.047 1.032-.145 1.478-.381a3.8 3.8 0 0 0 1.634-1.692c.223-.454.316-.944.36-1.508c.044-.548.044-1.226.044-2.07V6.947c0-.845 0-1.523-.043-2.072c-.044-.563-.138-1.053-.36-1.507a3.8 3.8 0 0 0-1.635-1.692c-.446-.236-.93-.334-1.478-.38c-.532-.046-1.189-.046-2-.046M7.25 6A.75.75 0 0 1 8 5.25h2a.75.75 0 0 1 0 1.5H8A.75.75 0 0 1 7.25 6M8 9.25h2a.75.75 0 0 1 0 1.5H8a.75.75 0 0 1 0-1.5M13.25 6a.75.75 0 0 1 .75-.75h2a.75.75 0 0 1 0 1.5h-2a.75.75 0 0 1-.75-.75M14 9.25h2a.75.75 0 0 1 0 1.5h-2a.75.75 0 0 1 0-1.5"/><path d="M13.75 22.75V15.5c0-.69-.56-1.25-1.25-1.25h-1c-.69 0-1.25.56-1.25 1.25v7.25z"/></g>`), g.Group(children),
	)
}

func Cake(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9 11c1.162 3.722 4.667 4.269 6 0m-6 0c-1.053 3.373-3.462 3.74-5 1.91M15 11c.934 2.992 3.383 3.933 5 1.967"/><path d="M20 21v-8c0-1.09-.91-2-2-2H6c-1.09 0-2 .91-2 2v8m-2 0h20M7 7v4m5-4v4m5-4v4M7 4v.5m5-.5v.5m5-.5v.5"/></g>`), g.Group(children),
	)
}

func CakeSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M7 3.25a.75.75 0 0 1 .75.75v.5a.75.75 0 0 1-1.5 0V4A.75.75 0 0 1 7 3.25m5 0a.75.75 0 0 1 .75.75v.5a.75.75 0 0 1-1.5 0V4a.75.75 0 0 1 .75-.75m5 0a.75.75 0 0 1 .75.75v.5a.75.75 0 0 1-1.5 0V4a.75.75 0 0 1 .75-.75m-10 3a.75.75 0 0 1 .75.75v3.25h3.5V7a.75.75 0 0 1 1.5 0v3.25h3.5V7a.75.75 0 0 1 1.5 0v3.25H18a2.77 2.77 0 0 1 2.75 2.73v7.27H22a.75.75 0 0 1 0 1.5H2a.75.75 0 0 1 0-1.5h1.25V13a3 3 0 0 1 .007-.191A2.77 2.77 0 0 1 6 10.25h.25V7A.75.75 0 0 1 7 6.25m-1 5.5c-.56 0-1.052.396-1.203.917c.568.549 1.167.675 1.665.522c.453-.14.989-.559 1.434-1.439zm10.12 0c.408.758.922 1.209 1.397 1.394c.525.205 1.126.135 1.699-.428A1.275 1.275 0 0 0 18 11.75zm-2.222 0h-3.78c.546 1.016 1.276 1.464 1.86 1.498c.558.032 1.32-.307 1.92-1.498"/>`), g.Group(children),
	)
}

func Calendar(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M16.5 5V3m-9 2V3M3.25 8h17.5M3 10.044c0-2.115 0-3.173.436-3.981a3.9 3.9 0 0 1 1.748-1.651C6.04 4 7.16 4 9.4 4h5.2c2.24 0 3.36 0 4.216.412c.753.362 1.364.94 1.748 1.65c.436.81.436 1.868.436 3.983v4.912c0 2.115 0 3.173-.436 3.981a3.9 3.9 0 0 1-1.748 1.651C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.412a3.9 3.9 0 0 1-1.748-1.65C3 18.128 3 17.07 3 14.955z"/>`), g.Group(children),
	)
}

func CalendarCheck(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M16.5 5V3m-9 2V3M3.25 8h17.5m-10.492 6.242l1.034 1.181c.095.109.266.1.35-.016l2.1-2.907"/><path d="M3 10.044c0-2.115 0-3.173.436-3.981a3.9 3.9 0 0 1 1.748-1.651C6.04 4 7.16 4 9.4 4h5.2c2.24 0 3.36 0 4.216.412c.753.362 1.364.94 1.748 1.65c.436.81.436 1.868.436 3.983v4.912c0 2.115 0 3.173-.436 3.981a3.9 3.9 0 0 1-1.748 1.651C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.412a3.9 3.9 0 0 1-1.748-1.65C3 18.128 3 17.07 3 14.955z"/></g>`), g.Group(children),
	)
}

func CalendarCheckSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.25 3a.75.75 0 0 0-1.5 0v.301l-.035.003c-.71.054-1.309.169-1.856.432a4.65 4.65 0 0 0-2.083 1.97c-.287.532-.41 1.113-.469 1.793c-.057.662-.057 1.482-.057 2.51v4.981c0 1.029 0 1.85.057 2.511c.06.68.182 1.261.469 1.792a4.65 4.65 0 0 0 2.083 1.971c.547.263 1.146.378 1.856.432c.696.054 1.56.054 2.654.054h5.262c1.094 0 1.958 0 2.654-.054c.71-.055 1.309-.169 1.856-.432a4.65 4.65 0 0 0 2.083-1.97c.287-.532.41-1.113.469-1.793c.057-.662.057-1.482.057-2.51V10.01c0-1.029 0-1.85-.057-2.511c-.06-.68-.182-1.261-.469-1.792a4.65 4.65 0 0 0-2.083-1.971c-.547-.263-1.146-.378-1.856-.432L17.25 3.3V3a.75.75 0 0 0-1.5 0v.253q-.515-.004-1.119-.003H9.37q-.604 0-1.119.003zM5.51 5.088c.294-.142.663-.232 1.24-.282V5a.75.75 0 0 0 1.5 0v-.247A151 151 0 0 1 9.4 4.75h5.2q.639 0 1.15.003V5a.75.75 0 0 0 1.5 0v-.194c.577.05.946.14 1.24.282a3.15 3.15 0 0 1 1.414 1.33c.114.212.196.466.25.832H3.846c.055-.366.137-.62.251-.831A3.15 3.15 0 0 1 5.51 5.088m8.671 6.804a.75.75 0 0 1 .169 1.047l-2.1 2.907a.974.974 0 0 1-1.522.071l-1.034-1.181a.75.75 0 1 1 1.129-.988l.598.684l1.713-2.371a.75.75 0 0 1 1.047-.169"/>`), g.Group(children),
	)
}

func CalendarDown(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M16.5 5V3m-9 2V3M3.25 8h17.5m-8.747 3.5L12 16.78m2.5-1.933L12 17.5l-2.5-2.653"/><path d="M3 10.044c0-2.115 0-3.173.436-3.981a3.9 3.9 0 0 1 1.748-1.651C6.04 4 7.16 4 9.4 4h5.2c2.24 0 3.36 0 4.216.412c.753.362 1.364.94 1.748 1.65c.436.81.436 1.868.436 3.983v4.912c0 2.115 0 3.173-.436 3.981a3.9 3.9 0 0 1-1.748 1.651C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.412a3.9 3.9 0 0 1-1.748-1.65C3 18.128 3 17.07 3 14.955z"/></g>`), g.Group(children),
	)
}

func CalendarDownSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.25 3a.75.75 0 0 0-1.5 0v.301l-.035.003c-.71.054-1.309.169-1.856.432a4.65 4.65 0 0 0-2.083 1.97c-.287.532-.41 1.113-.469 1.793c-.057.662-.057 1.482-.057 2.51v4.981c0 1.029 0 1.85.057 2.511c.06.68.182 1.261.469 1.792a4.65 4.65 0 0 0 2.083 1.971c.547.263 1.146.378 1.856.432c.696.054 1.56.054 2.654.054h5.262c1.094 0 1.958 0 2.654-.054c.71-.055 1.309-.169 1.856-.432a4.65 4.65 0 0 0 2.083-1.97c.287-.532.41-1.113.469-1.793c.057-.662.057-1.482.057-2.51V10.01c0-1.029 0-1.85-.057-2.511c-.06-.68-.182-1.261-.469-1.792a4.65 4.65 0 0 0-2.083-1.971c-.547-.263-1.146-.378-1.856-.432L17.25 3.3V3a.75.75 0 0 0-1.5 0v.253q-.515-.004-1.119-.003H9.37q-.604 0-1.119.003zM5.51 5.088c.294-.142.663-.232 1.24-.282V5a.75.75 0 0 0 1.5 0v-.247A151 151 0 0 1 9.4 4.75h5.2q.639 0 1.15.003V5a.75.75 0 0 0 1.5 0v-.194c.577.05.946.14 1.24.282a3.15 3.15 0 0 1 1.414 1.33c.114.212.196.466.25.832H3.846c.055-.366.137-.62.251-.831A3.15 3.15 0 0 1 5.51 5.088m7.243 6.413l-.002 4.109l1.203-1.278a.75.75 0 1 1 1.092 1.029l-2.5 2.653a.75.75 0 0 1-1.092 0l-2.5-2.653a.75.75 0 0 1 1.092-1.029l1.205 1.279l.002-4.112a.75.75 0 1 1 1.5.002"/>`), g.Group(children),
	)
}

func CalendarMinus(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M16.5 5V3m-9 2V3M3.25 8h17.5M10 14h4M3 10.044c0-2.115 0-3.173.436-3.981a3.9 3.9 0 0 1 1.748-1.651C6.04 4 7.16 4 9.4 4h5.2c2.24 0 3.36 0 4.216.412c.753.362 1.364.94 1.748 1.65c.436.81.436 1.868.436 3.983v4.912c0 2.115 0 3.173-.436 3.981a3.9 3.9 0 0 1-1.748 1.651C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.412a3.9 3.9 0 0 1-1.748-1.65C3 18.128 3 17.07 3 14.955z"/>`), g.Group(children),
	)
}

func CalendarMinusSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.25 3a.75.75 0 0 0-1.5 0v.301l-.035.003c-.71.054-1.309.169-1.856.432a4.65 4.65 0 0 0-2.083 1.97c-.287.532-.41 1.113-.469 1.793c-.057.662-.057 1.482-.057 2.51v4.981c0 1.029 0 1.85.057 2.511c.06.68.182 1.261.469 1.792a4.65 4.65 0 0 0 2.083 1.971c.547.263 1.146.378 1.856.432c.696.054 1.56.054 2.654.054h5.262c1.094 0 1.958 0 2.654-.054c.71-.055 1.309-.169 1.856-.432a4.65 4.65 0 0 0 2.083-1.97c.287-.532.41-1.113.469-1.793c.057-.662.057-1.482.057-2.51V10.01c0-1.029 0-1.85-.057-2.511c-.06-.68-.182-1.261-.469-1.792a4.65 4.65 0 0 0-2.083-1.971c-.547-.263-1.146-.378-1.856-.432L17.25 3.3V3a.75.75 0 0 0-1.5 0v.253q-.515-.004-1.119-.003H9.37q-.604 0-1.119.003zM5.51 5.088c.294-.142.663-.232 1.24-.282V5a.75.75 0 0 0 1.5 0v-.247A151 151 0 0 1 9.4 4.75h5.2q.639 0 1.15.003V5a.75.75 0 0 0 1.5 0v-.194c.577.05.946.14 1.24.282a3.15 3.15 0 0 1 1.414 1.33c.114.212.196.466.25.832H3.846c.055-.366.137-.62.251-.831A3.15 3.15 0 0 1 5.51 5.088M10 13.25h4a.75.75 0 0 1 0 1.5h-4a.75.75 0 0 1 0-1.5"/>`), g.Group(children),
	)
}

func CalendarPlus(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M16.5 5V3m-9 2V3M3.25 8h17.5M10 14h4m-2-2v4m-9-5.956c0-2.115 0-3.173.436-3.981a3.9 3.9 0 0 1 1.748-1.651C6.04 4 7.16 4 9.4 4h5.2c2.24 0 3.36 0 4.216.412c.753.362 1.364.94 1.748 1.65c.436.81.436 1.868.436 3.983v4.912c0 2.115 0 3.173-.436 3.981a3.9 3.9 0 0 1-1.748 1.651C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.412a3.9 3.9 0 0 1-1.748-1.65C3 18.128 3 17.07 3 14.955z"/>`), g.Group(children),
	)
}

func CalendarPlusSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.25 3a.75.75 0 0 0-1.5 0v.301l-.035.003c-.71.054-1.309.169-1.856.432a4.65 4.65 0 0 0-2.083 1.97c-.287.532-.41 1.113-.469 1.793c-.057.662-.057 1.482-.057 2.51v4.981c0 1.029 0 1.85.057 2.511c.06.68.182 1.261.469 1.792a4.65 4.65 0 0 0 2.083 1.971c.547.263 1.146.378 1.856.432c.696.054 1.56.054 2.654.054h5.262c1.094 0 1.958 0 2.654-.054c.71-.055 1.309-.169 1.856-.432a4.65 4.65 0 0 0 2.083-1.97c.287-.532.41-1.113.469-1.793c.057-.662.057-1.482.057-2.51V10.01c0-1.029 0-1.85-.057-2.511c-.06-.68-.182-1.261-.469-1.792a4.65 4.65 0 0 0-2.083-1.971c-.547-.263-1.146-.378-1.856-.432L17.25 3.3V3a.75.75 0 0 0-1.5 0v.253q-.515-.004-1.119-.003H9.37q-.604 0-1.119.003zM5.51 5.088c.294-.142.663-.232 1.24-.282V5a.75.75 0 0 0 1.5 0v-.247A151 151 0 0 1 9.4 4.75h5.2q.639 0 1.15.003V5a.75.75 0 0 0 1.5 0v-.194c.577.05.946.14 1.24.282a3.15 3.15 0 0 1 1.414 1.33c.114.212.196.466.25.832H3.846c.055-.366.137-.62.251-.831A3.15 3.15 0 0 1 5.51 5.088M12 11.25a.75.75 0 0 1 .75.75v1.25H14a.75.75 0 0 1 0 1.5h-1.25V16a.75.75 0 0 1-1.5 0v-1.25H10a.75.75 0 0 1 0-1.5h1.25V12a.75.75 0 0 1 .75-.75"/>`), g.Group(children),
	)
}

func CalendarSlash(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M7.5 5V3M3.25 8H11m9.75 0H16m-1.4-4H9.4c-2.24 0-3.36 0-4.216.412a3.9 3.9 0 0 0-1.748 1.65C3 6.872 3 7.93 3 10.045v4.912c0 .827 0 1.492.026 2.044M3 21l1.138-1.138M21 3l-1.692 1.692m0 0c.528.352.96.822 1.256 1.37c.436.81.436 1.868.436 3.983v4.912c0 2.115 0 3.173-.436 3.981a3.9 3.9 0 0 1-1.748 1.651C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.412a4 4 0 0 1-1.046-.726m15.17-15.17L16 8m0 0L4.138 19.862"/>`), g.Group(children),
	)
}

func CalendarSlashSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M7.5 2.25a.75.75 0 0 1 .75.75v.253q.515-.004 1.119-.003H14.6a.75.75 0 0 1 0 1.5H9.4q-.639 0-1.15.003V5a.75.75 0 0 1-1.5 0v-.194c-.577.05-.946.14-1.24.282a3.15 3.15 0 0 0-1.414 1.33c-.114.212-.196.466-.25.832H11a.75.75 0 0 1 0 1.5H3.755c-.005.374-.005.8-.005 1.294v4.912c0 .833 0 1.478.025 2.009a.75.75 0 0 1-1.498.07c-.027-.57-.027-1.25-.027-2.063V10.01c0-1.029 0-1.85.057-2.511c.06-.68.182-1.261.469-1.792a4.65 4.65 0 0 1 2.083-1.971c.547-.263 1.146-.378 1.856-.432L6.75 3.3V3a.75.75 0 0 1 .75-.75m12.97.22a.75.75 0 1 1 1.06 1.06l-1.107 1.108c.317.314.588.674.801 1.069c.287.53.41 1.112.469 1.792c.057.662.057 1.482.057 2.51v4.981c0 1.029 0 1.85-.057 2.511c-.06.68-.182 1.261-.469 1.792a4.65 4.65 0 0 1-2.083 1.971c-.547.263-1.146.378-1.856.432c-.696.054-1.56.054-2.654.054H9.37c-1.094 0-1.958 0-2.654-.054c-.71-.055-1.309-.169-1.856-.432a5 5 0 0 1-.67-.392l-.659.658a.75.75 0 0 1-1.06-1.06z"/>`), g.Group(children),
	)
}

func CalendarSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M7.5 2.25a.75.75 0 0 1 .75.75v.253q.515-.004 1.119-.003h5.262q.604 0 1.119.003V3a.75.75 0 0 1 1.5 0v.301q.018 0 .035.003c.71.054 1.309.169 1.856.432a4.65 4.65 0 0 1 2.083 1.97c.287.532.41 1.113.469 1.793c.057.662.057 1.482.057 2.51v4.981c0 1.029 0 1.85-.057 2.511c-.06.68-.182 1.261-.469 1.792a4.65 4.65 0 0 1-2.083 1.971c-.547.263-1.146.378-1.856.432c-.696.054-1.56.054-2.654.054H9.37c-1.094 0-1.958 0-2.654-.054c-.71-.055-1.309-.169-1.856-.432a4.65 4.65 0 0 1-2.083-1.97c-.287-.532-.41-1.113-.469-1.793c-.057-.662-.057-1.482-.057-2.51V10.01c0-1.029 0-1.85.057-2.511c.06-.68.182-1.261.469-1.792A4.65 4.65 0 0 1 4.86 3.736c.547-.263 1.146-.378 1.856-.432L6.75 3.3V3a.75.75 0 0 1 .75-.75m-.75 2.556c-.577.05-.946.14-1.24.282a3.15 3.15 0 0 0-1.414 1.33c-.114.212-.196.466-.25.832h16.309c-.055-.366-.137-.62-.251-.831a3.15 3.15 0 0 0-1.413-1.331c-.295-.142-.664-.232-1.241-.282V5a.75.75 0 0 1-1.5 0v-.247q-.511-.004-1.15-.003H9.4q-.639 0-1.15.003V5a.75.75 0 0 1-1.5 0z"/>`), g.Group(children),
	)
}

func CalendarUp(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M16.5 5V3m-9 2V3M3.25 8h17.5m-8.747 9.5L12 12.22m2.5 1.933L12 11.5l-2.5 2.653"/><path d="M3 10.044c0-2.115 0-3.173.436-3.981a3.9 3.9 0 0 1 1.748-1.651C6.04 4 7.16 4 9.4 4h5.2c2.24 0 3.36 0 4.216.412c.753.362 1.364.94 1.748 1.65c.436.81.436 1.868.436 3.983v4.912c0 2.115 0 3.173-.436 3.981a3.9 3.9 0 0 1-1.748 1.651C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.412a3.9 3.9 0 0 1-1.748-1.65C3 18.128 3 17.07 3 14.955z"/></g>`), g.Group(children),
	)
}

func CalendarUpSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.25 3a.75.75 0 0 0-1.5 0v.301l-.035.003c-.71.054-1.309.169-1.856.432a4.65 4.65 0 0 0-2.083 1.97c-.287.532-.41 1.113-.469 1.793c-.057.662-.057 1.482-.057 2.51v4.981c0 1.029 0 1.85.057 2.511c.06.68.182 1.261.469 1.792a4.65 4.65 0 0 0 2.083 1.971c.547.263 1.146.378 1.856.432c.696.054 1.56.054 2.654.054h5.262c1.094 0 1.958 0 2.654-.054c.71-.055 1.309-.169 1.856-.432a4.65 4.65 0 0 0 2.083-1.97c.287-.532.41-1.113.469-1.793c.057-.662.057-1.482.057-2.51V10.01c0-1.029 0-1.85-.057-2.511c-.06-.68-.182-1.261-.469-1.792a4.65 4.65 0 0 0-2.083-1.971c-.547-.263-1.146-.378-1.856-.432L17.25 3.3V3a.75.75 0 0 0-1.5 0v.253q-.515-.004-1.119-.003H9.37q-.604 0-1.119.003zM5.51 5.088c.294-.142.663-.232 1.24-.282V5a.75.75 0 0 0 1.5 0v-.247A151 151 0 0 1 9.4 4.75h5.2q.639 0 1.15.003V5a.75.75 0 0 0 1.5 0v-.194c.577.05.946.14 1.24.282a3.15 3.15 0 0 1 1.414 1.33c.114.212.196.466.25.832H3.846c.055-.366.137-.62.251-.831A3.15 3.15 0 0 1 5.51 5.088m7.036 5.898l2.5 2.653a.75.75 0 0 1-1.092 1.029l-1.203-1.278l.002 4.11a.75.75 0 0 1-1.5 0l-.002-4.11l-1.205 1.278a.75.75 0 0 1-1.092-1.029l2.5-2.653a.75.75 0 0 1 1.092 0"/>`), g.Group(children),
	)
}

func CalendarX(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M16.5 5V3m-9 2V3M3.25 8h17.5M10.5 12.5l3 3m0-3l-3 3M3 10.044c0-2.115 0-3.173.436-3.981a3.9 3.9 0 0 1 1.748-1.651C6.04 4 7.16 4 9.4 4h5.2c2.24 0 3.36 0 4.216.412c.753.362 1.364.94 1.748 1.65c.436.81.436 1.868.436 3.983v4.912c0 2.115 0 3.173-.436 3.981a3.9 3.9 0 0 1-1.748 1.651C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.412a3.9 3.9 0 0 1-1.748-1.65C3 18.128 3 17.07 3 14.955z"/>`), g.Group(children),
	)
}

func CalendarXSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.25 3a.75.75 0 0 0-1.5 0v.301l-.035.003c-.71.054-1.309.169-1.856.432a4.65 4.65 0 0 0-2.083 1.97c-.287.532-.41 1.113-.469 1.793c-.057.662-.057 1.482-.057 2.51v4.981c0 1.029 0 1.85.057 2.511c.06.68.182 1.261.469 1.792a4.65 4.65 0 0 0 2.083 1.971c.547.263 1.146.378 1.856.432c.696.054 1.56.054 2.654.054h5.262c1.094 0 1.958 0 2.654-.054c.71-.055 1.309-.169 1.856-.432a4.65 4.65 0 0 0 2.083-1.97c.287-.532.41-1.113.469-1.793c.057-.662.057-1.482.057-2.51V10.01c0-1.029 0-1.85-.057-2.511c-.06-.68-.182-1.261-.469-1.792a4.65 4.65 0 0 0-2.083-1.971c-.547-.263-1.146-.378-1.856-.432L17.25 3.3V3a.75.75 0 0 0-1.5 0v.253q-.515-.004-1.119-.003H9.37q-.604 0-1.119.003zM5.51 5.088c.294-.142.663-.232 1.24-.282V5a.75.75 0 0 0 1.5 0v-.247A151 151 0 0 1 9.4 4.75h5.2q.639 0 1.15.003V5a.75.75 0 0 0 1.5 0v-.194c.577.05.946.14 1.24.282a3.15 3.15 0 0 1 1.414 1.33c.114.212.196.466.25.832H3.846c.055-.366.137-.62.251-.831A3.15 3.15 0 0 1 5.51 5.088m4.46 6.882a.75.75 0 0 1 1.06 0l.97.97l.97-.97a.75.75 0 1 1 1.06 1.06l-.97.97l.97.97a.75.75 0 1 1-1.06 1.06l-.97-.97l-.97.97a.75.75 0 1 1-1.06-1.06l.97-.97l-.97-.97a.75.75 0 0 1 0-1.06"/>`), g.Group(children),
	)
}

func Camera(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M20.52 20.414c.308-.375.48-.884.48-1.414V7c0-.53-.172-1.04-.48-1.414C20.215 5.21 19.799 5 19.365 5h-8.981C8.659 5 8.325 3.269 6.827 3.026C6.563 2.983 6.289 3 6.022 3c-.953 0-1.429 0-1.804.159a2 2 0 0 0-1.059 1.06C3 4.592 3 5.068 3 6.021V19c0 .53.172 1.04.48 1.414c.306.375.722.586 1.156.586h14.728c.434 0 .85-.21 1.157-.586M16 3h3"/><path d="M13.5 17a4 4 0 1 0 0-8a4 4 0 0 0 0 8"/></g>`), g.Group(children),
	)
}

func CameraSlash(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M16 3h1.5M3 21l.528-.528M21 3l-2 2M3.528 20.472c.302.339.697.528 1.108.528h14.728c.434 0 .85-.21 1.157-.586c.307-.375.479-.884.479-1.414V7c0-.53-.172-1.04-.48-1.414C20.215 5.21 19.799 5 19.365 5H19M3.528 20.472l6.184-6.184m0 0A4.002 4.002 0 0 0 17.5 13a4 4 0 0 0-2.712-3.788m-5.076 5.076l5.076-5.076m0 0L19 5m-4.308 0h-4.309C8.659 5 8.325 3.269 6.827 3.026C6.563 2.983 6.289 3 6.022 3c-.953 0-1.429 0-1.804.159a2 2 0 0 0-1.059 1.06C3 4.592 3 5.068 3 6.021v9.734"/>`), g.Group(children),
	)
}

func CameraSlashSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="m6.256 3.748l-.234.002c-.487 0-.813 0-1.066.018c-.246.017-.366.048-.444.081a1.25 1.25 0 0 0-.663.663c-.033.078-.064.198-.08.444c-.019.253-.019.58-.019 1.066v9.734a.75.75 0 0 1-1.5 0v-9.76c0-.454 0-.833.022-1.145c.022-.324.071-.63.197-.926A2.75 2.75 0 0 1 3.925 2.47c.296-.126.602-.175.926-.197c.312-.022.691-.022 1.146-.022h.025l.131-.001c.212-.004.515-.009.794.036c.933.152 1.54.743 1.969 1.158l.122.118c.463.441.792.689 1.345.689h4.309a.75.75 0 0 1 0 1.5h-4.309c-1.17 0-1.871-.618-2.38-1.103l-.079-.075c-.49-.468-.768-.733-1.217-.806c-.136-.022-.262-.02-.451-.018M15.25 3a.75.75 0 0 1 .75-.75h1.5a.75.75 0 0 1 0 1.5H16a.75.75 0 0 1-.75-.75m5.22-.53a.75.75 0 1 1 1.06 1.06l-1.042 1.042c.23.142.438.324.613.539c.427.522.649 1.203.649 1.889v12c0 .686-.222 1.367-.649 1.89c-.43.525-1.05.86-1.737.86H4.636c-.375 0-.732-.1-1.048-.277l-.058.057a.75.75 0 0 1-1.06-1.06zm-9.873 11.994a3.25 3.25 0 1 0 4.367-4.367z"/>`), g.Group(children),
	)
}

func CameraSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M6.153 2.249c.212-.004.515-.009.794.036c.933.152 1.54.743 1.969 1.158l.122.118c.463.441.792.689 1.345.689h8.98c.688 0 1.308.335 1.738.86c.427.523.649 1.204.649 1.89v12c0 .686-.222 1.367-.649 1.89c-.43.525-1.05.86-1.737.86H4.636c-.687 0-1.307-.335-1.737-.86c-.427-.523-.649-1.204-.649-1.89V5.997c0-.455 0-.834.022-1.146c.022-.324.071-.63.197-.926A2.75 2.75 0 0 1 3.925 2.47c.296-.126.602-.175.926-.197c.312-.022.691-.022 1.146-.022h.025zM15.25 3a.75.75 0 0 1 .75-.75h3a.75.75 0 0 1 0 1.5h-3a.75.75 0 0 1-.75-.75M13.5 9.75a3.25 3.25 0 1 0 0 6.5a3.25 3.25 0 0 0 0-6.5"/>`), g.Group(children),
	)
}

func Campfire(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m5.422 20.706l13.156-4.789m0 4.789L5.422 15.917m10.963-4.349A4.75 4.75 0 0 1 12 14.5c-2.623 0-4.75-2.134-4.75-4.767c0-2.632.998-3.709 2.558-6.233c2.923 1.283 2.923 5.133 2.923 5.133s.96-1.856 2.923-2.75c.63 1.86 1.478 3.89.731 5.685"/>`), g.Group(children),
	)
}

func CampfireSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M4.717 15.66a.75.75 0 0 1 .962-.447l6.321 2.3l6.321-2.3a.75.75 0 1 1 .513 1.41l-4.641 1.688l4.641 1.69a.75.75 0 0 1-.513 1.41L12 19.11l-6.321 2.3A.75.75 0 1 1 5.166 20l4.641-1.689l-4.641-1.689a.75.75 0 0 1-.449-.961"/><path d="M9.17 3.106a.75.75 0 0 1 .94-.293c1.735.762 2.57 2.275 2.969 3.503q.072.221.127.433a7 7 0 0 1 2.137-1.548a.75.75 0 0 1 1.021.442l.176.511c.266.766.56 1.611.73 2.445c.213 1.04.262 2.166-.192 3.257A5.5 5.5 0 0 1 12 15.25c-3.04 0-5.5-2.472-5.5-5.517c0-2.457.836-3.759 2.01-5.586c.21-.327.43-.67.66-1.041"/></g>`), g.Group(children),
	)
}

func Cart(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M16.5 21a1.5 1.5 0 1 0 0-3a1.5 1.5 0 0 0 0 3m-8 0a1.5 1.5 0 1 0 0-3a1.5 1.5 0 0 0 0 3M3.71 5.4h15.214c1.378 0 2.373 1.27 1.995 2.548l-1.654 5.6C19.01 14.408 18.196 15 17.27 15H8.112c-.927 0-1.742-.593-1.996-1.452zm0 0L3 3"/>`), g.Group(children),
	)
}

func CartCheck(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="m11 10.242l1.034 1.181c.095.109.266.1.35-.016l2.1-2.907M16.5 21a1.5 1.5 0 1 0 0-3a1.5 1.5 0 0 0 0 3m-8 0a1.5 1.5 0 1 0 0-3a1.5 1.5 0 0 0 0 3"/><path d="M3.71 5.4h15.214c1.378 0 2.373 1.27 1.995 2.548l-1.654 5.6C19.01 14.408 18.196 15 17.27 15H8.112c-.927 0-1.742-.593-1.996-1.452zm0 0L3 3"/></g>`), g.Group(children),
	)
}

func CartCheckSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="m3.72 2.788l.55 1.862h14.654c1.84 0 3.245 1.717 2.715 3.51l-1.655 5.6c-.352 1.194-1.471 1.99-2.715 1.99H8.113c-1.244 0-2.362-.796-2.715-1.99L2.281 3.213a.75.75 0 1 1 1.438-.425m11.372 6.151a.75.75 0 0 0-1.216-.878l-1.713 2.371l-.599-.684a.75.75 0 1 0-1.128.988l1.034 1.181a.974.974 0 0 0 1.522-.07zM8.5 17.25a2.25 2.25 0 1 0 0 4.5a2.25 2.25 0 0 0 0-4.5m8 0a2.25 2.25 0 1 0 0 4.5a2.25 2.25 0 0 0 0-4.5"/>`), g.Group(children),
	)
}

func CartMinus(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M16.5 21a1.5 1.5 0 1 0 0-3a1.5 1.5 0 0 0 0 3m-8 0a1.5 1.5 0 1 0 0-3a1.5 1.5 0 0 0 0 3M3.71 5.4h15.214c1.378 0 2.373 1.27 1.995 2.548l-1.654 5.6C19.01 14.408 18.196 15 17.27 15H8.112c-.927 0-1.742-.593-1.996-1.452zm0 0L3 3m7.5 7h4"/>`), g.Group(children),
	)
}

func CartMinusSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="m3.72 2.788l.55 1.862h14.654c1.84 0 3.245 1.717 2.715 3.51l-1.655 5.6c-.352 1.194-1.471 1.99-2.715 1.99H8.113c-1.244 0-2.362-.796-2.715-1.99L2.281 3.213a.75.75 0 1 1 1.438-.425M10.5 9.25a.75.75 0 0 0 0 1.5h4a.75.75 0 0 0 0-1.5zm-2 8a2.25 2.25 0 1 0 0 4.5a2.25 2.25 0 0 0 0-4.5m8 0a2.25 2.25 0 1 0 0 4.5a2.25 2.25 0 0 0 0-4.5"/>`), g.Group(children),
	)
}

func CartPlus(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M10.5 10h4m-2-2v4m4 9a1.5 1.5 0 1 0 0-3a1.5 1.5 0 0 0 0 3m-8 0a1.5 1.5 0 1 0 0-3a1.5 1.5 0 0 0 0 3M3.71 5.4h15.214c1.378 0 2.373 1.27 1.995 2.548l-1.654 5.6C19.01 14.408 18.196 15 17.27 15H8.112c-.927 0-1.742-.593-1.996-1.452zm0 0L3 3"/>`), g.Group(children),
	)
}

func CartPlusSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="m3.72 2.788l.55 1.862h14.654c1.84 0 3.245 1.717 2.715 3.51l-1.655 5.6c-.352 1.194-1.471 1.99-2.715 1.99H8.113c-1.244 0-2.362-.796-2.715-1.99L2.281 3.213a.75.75 0 1 1 1.438-.425M13.25 8a.75.75 0 0 0-1.5 0v1.25H10.5a.75.75 0 0 0 0 1.5h1.25V12a.75.75 0 0 0 1.5 0v-1.25h1.25a.75.75 0 0 0 0-1.5h-1.25zM8.5 17.25a2.25 2.25 0 1 0 0 4.5a2.25 2.25 0 0 0 0-4.5m8 0a2.25 2.25 0 1 0 0 4.5a2.25 2.25 0 0 0 0-4.5"/>`), g.Group(children),
	)
}

func CartSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.787 2.28a.75.75 0 0 1 .932.508l.55 1.862h14.655c1.84 0 3.245 1.717 2.715 3.51l-1.655 5.6c-.352 1.194-1.471 1.99-2.715 1.99H8.113c-1.244 0-2.362-.796-2.715-1.99L2.281 3.213a.75.75 0 0 1 .506-.932M6.25 19.5a2.25 2.25 0 1 1 4.5 0a2.25 2.25 0 0 1-4.5 0m8 0a2.25 2.25 0 1 1 4.5 0a2.25 2.25 0 0 1-4.5 0"/>`), g.Group(children),
	)
}

func CartX(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m11 8.5l3 3m0-3l-3 3m5.5 9.5a1.5 1.5 0 1 0 0-3a1.5 1.5 0 0 0 0 3m-8 0a1.5 1.5 0 1 0 0-3a1.5 1.5 0 0 0 0 3M3.71 5.4h15.214c1.378 0 2.373 1.27 1.995 2.548l-1.654 5.6C19.01 14.408 18.196 15 17.27 15H8.112c-.927 0-1.742-.593-1.996-1.452zm0 0L3 3"/>`), g.Group(children),
	)
}

func CartXSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="m3.72 2.788l.55 1.862h14.654c1.84 0 3.245 1.717 2.715 3.51l-1.655 5.6c-.352 1.194-1.471 1.99-2.715 1.99H8.113c-1.244 0-2.362-.796-2.715-1.99L2.281 3.213a.75.75 0 1 1 1.438-.425m7.81 5.182a.75.75 0 1 0-1.06 1.06l.97.97l-.97.97a.75.75 0 1 0 1.06 1.06l.97-.97l.97.97a.75.75 0 1 0 1.06-1.06l-.97-.97l.97-.97a.75.75 0 0 0-1.06-1.06l-.97.97zM8.5 17.25a2.25 2.25 0 1 0 0 4.5a2.25 2.25 0 0 0 0-4.5m8 0a2.25 2.25 0 1 0 0 4.5a2.25 2.25 0 0 0 0-4.5"/>`), g.Group(children),
	)
}

func CastScreen(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M3 8.028c0-.956 0-1.434.108-1.826a3 3 0 0 1 2.094-2.094C5.594 4 6.072 4 7.028 4H16.2c1.68 0 2.52 0 3.162.327a3 3 0 0 1 1.311 1.311C21 6.28 21 7.12 21 8.8v6.4c0 1.68 0 2.52-.327 3.162a3 3 0 0 1-1.311 1.311C18.72 20 17.88 20 16.2 20h-2.053"/><path d="M11 20a8 8 0 0 0-8-8m0 8.004l.354-.354M7 20a4 4 0 0 0-4-4"/></g>`), g.Group(children),
	)
}

func CastScreenSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M6.91 3.25h9.321c.813 0 1.469 0 2 .043c.546.045 1.026.14 1.47.366a3.75 3.75 0 0 1 1.64 1.639c.226.444.32.924.365 1.47c.043.531.043 1.187.043 2v6.464c0 .813 0 1.469-.043 2c-.045.546-.14 1.026-.366 1.47a3.75 3.75 0 0 1-1.639 1.64c-.444.226-.924.32-1.47.365c-.531.043-1.187.043-2 .043h-2.085a.75.75 0 0 1 0-1.5H16.2c.852 0 1.447 0 1.91-.038c.453-.038.714-.107.912-.207a2.25 2.25 0 0 0 .983-.983c.1-.198.17-.459.207-.913c.038-.462.038-1.057.038-1.909V8.8c0-.852 0-1.447-.038-1.91c-.037-.453-.107-.714-.207-.911a2.25 2.25 0 0 0-.983-.984c-.198-.1-.459-.17-.913-.207c-.462-.037-1.057-.038-1.909-.038H7.028c-1.006 0-1.357.007-1.626.081a2.25 2.25 0 0 0-1.57 1.57c-.075.27-.082.621-.082 1.627a.75.75 0 1 1-1.5 0V7.91c0-.84 0-1.415.135-1.906a3.75 3.75 0 0 1 2.618-2.618c.491-.136 1.065-.135 1.906-.135M2.25 12a.75.75 0 0 1 .75-.75A8.75 8.75 0 0 1 11.75 20a.75.75 0 0 1-.75.75l-8 .003a.75.75 0 0 1-.75-.75z"/>`), g.Group(children),
	)
}

func CenterFocus(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M15 12a3 3 0 1 0-6 0a3 3 0 0 0 6 0m-5.6 9c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6m18 0c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21m0-18c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4M9.4 3c-2.24 0-3.36 0-4.216.436a4 4 0 0 0-1.748 1.748C3 6.04 3 7.16 3 9.4"/>`), g.Group(children),
	)
}

func CenterFocusSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12 8.25a3.75 3.75 0 1 0 0 7.5a3.75 3.75 0 0 0 0-7.5m-2.6-6h-.033c-1.092 0-1.958 0-2.655.057c-.714.058-1.317.18-1.868.46a4.75 4.75 0 0 0-2.076 2.077c-.281.55-.403 1.154-.461 1.868c-.057.697-.057 1.563-.057 2.655V9.4a.75.75 0 0 0 1.5 0c0-1.132 0-1.937.052-2.566c.05-.62.147-1.005.302-1.31a3.25 3.25 0 0 1 1.42-1.42c.305-.155.69-.251 1.31-.302c.63-.051 1.434-.052 2.566-.052a.75.75 0 0 0 0-1.5m5.2 1.5c1.133 0 1.937 0 2.566.052c.62.05 1.005.147 1.31.302a3.25 3.25 0 0 1 1.42 1.42c.155.305.251.69.302 1.31c.051.63.052 1.434.052 2.566a.75.75 0 0 0 1.5 0v-.033c0-1.092 0-1.958-.057-2.655c-.058-.714-.18-1.317-.46-1.868a4.75 4.75 0 0 0-2.076-2.076c-.552-.281-1.155-.403-1.869-.461c-.697-.057-1.563-.057-2.655-.057H14.6a.75.75 0 0 0 0 1.5M3.75 14.6a.75.75 0 0 0-1.5 0v.033c0 1.092 0 1.958.057 2.655c.058.714.18 1.317.46 1.869a4.75 4.75 0 0 0 2.077 2.075c.55.281 1.154.403 1.868.461c.697.057 1.563.057 2.655.057H9.4a.75.75 0 0 0 0-1.5c-1.132 0-1.937 0-2.566-.052c-.62-.05-1.005-.147-1.31-.302a3.25 3.25 0 0 1-1.42-1.42c-.155-.305-.251-.69-.302-1.31c-.051-.63-.052-1.434-.052-2.566m18 0a.75.75 0 0 0-1.5 0c0 1.133 0 1.937-.052 2.566c-.05.62-.147 1.005-.302 1.31a3.25 3.25 0 0 1-1.42 1.42c-.305.155-.69.251-1.31.302c-.63.051-1.434.052-2.566.052a.75.75 0 0 0 0 1.5h.033c1.092 0 1.958 0 2.655-.057c.714-.058 1.317-.18 1.869-.46a4.75 4.75 0 0 0 2.075-2.076c.281-.552.403-1.155.461-1.869c.057-.697.057-1.563.057-2.655z"/>`), g.Group(children),
	)
}

func ChartBar(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M17 21V3m-5 18V9M7 21v-5"/>`), g.Group(children),
	)
}

func ChartBarOne(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M18 8v13M12 3v18m-6-9v9"/>`), g.Group(children),
	)
}

func ChartBarOneSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12 1.75c-.69 0-1.25.56-1.25 1.25v18a1.25 1.25 0 1 0 2.5 0V3c0-.69-.56-1.25-1.25-1.25m6 5c-.69 0-1.25.56-1.25 1.25v13a1.25 1.25 0 1 0 2.5 0V8c0-.69-.56-1.25-1.25-1.25m-12 4c-.69 0-1.25.56-1.25 1.25v9a1.25 1.25 0 1 0 2.5 0v-9c0-.69-.56-1.25-1.25-1.25"/>`), g.Group(children),
	)
}

func ChartBarSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M17 1.75c-.69 0-1.25.56-1.25 1.25v18a1.25 1.25 0 1 0 2.5 0V3c0-.69-.56-1.25-1.25-1.25m-5 6c-.69 0-1.25.56-1.25 1.25v12a1.25 1.25 0 1 0 2.5 0V9c0-.69-.56-1.25-1.25-1.25m-5 7c-.69 0-1.25.56-1.25 1.25v5a1.25 1.25 0 1 0 2.5 0v-5c0-.69-.56-1.25-1.25-1.25"/>`), g.Group(children),
	)
}

func ChartBarTwo(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M15 9.429V5a2 2 0 0 0-2-2h-2a2 2 0 0 0-2 2v8.286m6-3.857V21m0-11.571h4a2 2 0 0 1 2 2V19a2 2 0 0 1-2 2h-4m0 0H9m0 0v-7.714M9 21H5a2 2 0 0 1-2-2v-3.714a2 2 0 0 1 2-2h4"/>`), g.Group(children),
	)
}

func ChartBarTwoSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M11 2.25A2.75 2.75 0 0 0 8.25 5v7.536H5a2.75 2.75 0 0 0-2.75 2.75V19A2.75 2.75 0 0 0 5 21.75h14A2.75 2.75 0 0 0 21.75 19v-7.571A2.75 2.75 0 0 0 19 8.679h-3.25V5A2.75 2.75 0 0 0 13 2.25z"/>`), g.Group(children),
	)
}

func ChartBubble(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M21 8.863a2.5 2.5 0 1 1-5 0a2.5 2.5 0 0 1 5 0M13 8A5 5 0 1 1 3 8a5 5 0 0 1 10 0m5.969 9.5a3.5 3.5 0 1 1-7 0a3.5 3.5 0 0 1 7 0"/>`), g.Group(children),
	)
}

func ChartBubbleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M18.5 5.613a3.25 3.25 0 1 0 0 6.5a3.25 3.25 0 0 0 0-6.5M8 2.25a5.75 5.75 0 1 0 0 11.5a5.75 5.75 0 0 0 0-11.5m7.469 11a4.25 4.25 0 1 0 0 8.5a4.25 4.25 0 0 0 0-8.5"/>`), g.Group(children),
	)
}

func ChartGraph(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3 15.5v1.8c0 1.12 0 1.68.218 2.108a2 2 0 0 0 .874.874c.427.218.987.218 2.105.218H21m-18-5v-12m0 12l3.857-3.213c1.634-1.362 2.708-1.222 4.119.189l.006.006c1.538 1.538 2.64 1.474 4.172.133L21 7.5"/>`), g.Group(children),
	)
}

func ChartGraphSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M3.75 3.5a.75.75 0 0 0-1.5 0v13.83c0 .535 0 .98.03 1.345c.03.38.098.736.27 1.073a2.75 2.75 0 0 0 1.201 1.203c.337.171.694.238 1.073.27c.364.029.81.029 1.342.029H21a.75.75 0 0 0 0-1.5H6.197c-.571 0-.955 0-1.25-.025c-.287-.023-.424-.065-.515-.111a1.25 1.25 0 0 1-.546-.547c-.046-.09-.088-.228-.111-.515A17 17 0 0 1 3.75 17.3v-1.449l3.587-2.988c.764-.637 1.253-.796 1.615-.773c.37.023.826.249 1.493.916l.007.007c.817.817 1.656 1.353 2.608 1.365c.944.012 1.783-.494 2.588-1.199l5.846-5.115a.75.75 0 1 0-.988-1.128L14.66 12.05c-.726.635-1.205.832-1.58.827c-.366-.005-.847-.206-1.568-.926l-.006-.006c-.744-.744-1.53-1.294-2.459-1.353c-.935-.06-1.8.393-2.67 1.117L3.75 13.9z"/>`), g.Group(children),
	)
}

func ChartLine(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3 16.5L9 10l4 6l8-9.5"/>`), g.Group(children),
	)
}

func ChartLineSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M21.805 5.544a1.25 1.25 0 0 0-1.761.15l-6.928 8.227l-3.076-4.614a1.25 1.25 0 0 0-1.958-.155l-6 6.5a1.25 1.25 0 1 0 1.837 1.696l4.922-5.333l3.119 4.678a1.25 1.25 0 0 0 1.996.112l8-9.5a1.25 1.25 0 0 0-.15-1.761"/>`), g.Group(children),
	)
}

func ChartPie(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M12 21a9 9 0 0 0 9-9h-9V3a9 9 0 0 0 0 18"/>`), g.Group(children),
	)
}

func ChartPieOne(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M21 12a9 9 0 0 1-9 9m9-9a9 9 0 0 0-9-9m9 9h-9m0 9a9 9 0 1 1 0-18m0 18v-9m0-9v9"/>`), g.Group(children),
	)
}

func ChartPieOneSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12.75 3.784v7.466h7.466a8.25 8.25 0 0 0-7.466-7.466m7.466 8.966H12.75v7.466a8.25 8.25 0 0 0 7.466-7.466M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12"/>`), g.Group(children),
	)
}

func ChartPieSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12 2.25c-5.385 0-9.75 4.365-9.75 9.75s4.365 9.75 9.75 9.75s9.75-4.365 9.75-9.75a.75.75 0 0 0-.75-.75h-8.25V3a.75.75 0 0 0-.75-.75"/>`), g.Group(children),
	)
}

func ChartPieTwo(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M12 3a9 9 0 1 0 6.364 15.364M12 3a9 9 0 0 1 6.364 15.364M12 3v9l6.364 6.364"/>`), g.Group(children),
	)
}

func ChartPieTwoSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12.75 3.784v7.905l5.59 5.59a8.25 8.25 0 0 0-5.59-13.496M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75a9.72 9.72 0 0 1-2.856 6.894A9.72 9.72 0 0 1 12 21.75A9.75 9.75 0 0 1 2.25 12"/>`), g.Group(children),
	)
}

func Chat(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M12 21a9 9 0 1 0-9-9c0 1.44.338 2.8.94 4.007c.453.911-.177 2.14-.417 3.037a1.17 1.17 0 0 0 1.433 1.433c.897-.24 2.126-.87 3.037-.416A9 9 0 0 0 12 21"/>`), g.Group(children),
	)
}

func ChatCheck(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="m9.5 12.323l1.379 1.575a.3.3 0 0 0 .466-.022l2.8-3.876"/><path d="M12 21a9 9 0 1 0-9-9c0 1.44.338 2.8.94 4.007c.453.911-.177 2.14-.417 3.037a1.17 1.17 0 0 0 1.433 1.433c.897-.24 2.126-.87 3.037-.416A9 9 0 0 0 12 21"/></g>`), g.Group(children),
	)
}

func ChatCheckSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0 1.558.366 3.033 1.018 4.342c.104.21.114.523-.005 1.01a9 9 0 0 1-.22.729l-.03.086c-.074.22-.154.46-.214.683c-.382 1.427.924 2.733 2.35 2.351c.224-.06.463-.14.684-.214l.086-.03a9 9 0 0 1 .729-.22c.487-.12.8-.11 1.01-.005A9.7 9.7 0 0 0 12 21.75c5.385 0 9.75-4.365 9.75-9.75S17.385 2.25 12 2.25S2.25 6.615 2.25 12m12.334-2.608a.75.75 0 0 1 .169 1.047l-2.8 3.876a1.05 1.05 0 0 1-1.639.077l-1.378-1.576a.75.75 0 0 1 1.128-.987l1.005 1.148l2.468-3.416a.75.75 0 0 1 1.047-.169"/>`), g.Group(children),
	)
}

func ChatDots(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M12 12.75v-.5m4 .5v-.5m-8 .5v-.5M12 21a9 9 0 1 0-9-9c0 1.44.338 2.8.94 4.007c.453.911-.177 2.14-.417 3.037a1.17 1.17 0 0 0 1.433 1.433c.897-.24 2.126-.87 3.037-.416A9 9 0 0 0 12 21"/>`), g.Group(children),
	)
}

func ChatDotsSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75a9.7 9.7 0 0 1-4.342-1.018c-.21-.104-.523-.114-1.01.005a9 9 0 0 0-.729.22l-.086.03c-.22.074-.46.154-.683.214c-1.427.382-2.733-.924-2.351-2.35c.06-.224.14-.463.214-.684l.03-.086c.085-.255.163-.495.22-.729c.12-.487.11-.8.005-1.01A9.7 9.7 0 0 1 2.25 12m6.5.25a.75.75 0 0 0-1.5 0v.5a.75.75 0 0 0 1.5 0zm4 0a.75.75 0 0 0-1.5 0v.5a.75.75 0 0 0 1.5 0zm4 0a.75.75 0 0 0-1.5 0v.5a.75.75 0 0 0 1.5 0z"/>`), g.Group(children),
	)
}

func ChatMessages(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M5 12a5 5 0 0 1 7 7m-7-7a5 5 0 0 0-2 4a5 5 0 0 0 .224 1.483c.272.88.076 1.86-.099 2.784a.468.468 0 0 0 .592.539c.848-.232 1.691-.43 2.557-.112A5 5 0 0 0 8 21a4.99 4.99 0 0 0 4-2m-7-7c0-4.685 2.875-9 8-9a8 8 0 0 1 7.532 10.7c-.476 1.326.037 3.102.337 4.568a.451.451 0 0 1-.584.526c-1.312-.41-2.852-.986-4.085-.466c-1.334.562-2.736.672-4.2.672"/>`), g.Group(children),
	)
}

func ChatMessagesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12.36 19.748c1.378-.019 2.775-.157 4.132-.73c.421-.177.945-.187 1.585-.068c.531.098 1.066.268 1.622.445l.363.115a1.2 1.2 0 0 0 1.542-1.393q-.07-.337-.143-.669a20 20 0 0 1-.308-1.616c-.101-.753-.092-1.386.085-1.88c.33-.923.51-1.917.51-2.952A8.75 8.75 0 0 0 13 2.25c-2.794 0-5.005 1.186-6.502 3.019c-1.412 1.73-2.171 4.008-2.242 6.368A5.74 5.74 0 0 0 2.251 16c0 .593.09 1.166.257 1.706c.207.665.066 1.444-.119 2.422a1.218 1.218 0 0 0 1.527 1.401c.86-.235 1.485-.357 2.1-.13c.62.227 1.288.351 1.984.351a5.74 5.74 0 0 0 4.36-2.002M8 11.75a4.25 4.25 0 1 1-1.466 8.24c-.934-.343-1.831-.207-2.589-.02c.148-.806.281-1.789-.004-2.709A4.3 4.3 0 0 1 3.751 16a4.24 4.24 0 0 1 1.7-3.4A4.23 4.23 0 0 1 8 11.75"/>`), g.Group(children),
	)
}

func ChatMinus(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9.5 12h5M12 21a9 9 0 1 0-9-9c0 1.44.338 2.8.94 4.007c.453.911-.177 2.14-.417 3.037a1.17 1.17 0 0 0 1.433 1.433c.897-.24 2.126-.87 3.037-.416A9 9 0 0 0 12 21"/>`), g.Group(children),
	)
}

func ChatMinusSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0 1.558.366 3.033 1.018 4.342c.104.21.114.523-.005 1.01a9 9 0 0 1-.22.729l-.03.086c-.074.22-.154.46-.214.683c-.382 1.427.924 2.733 2.35 2.351c.224-.06.463-.14.684-.214l.086-.03a9 9 0 0 1 .729-.22c.487-.12.8-.11 1.01-.005A9.7 9.7 0 0 0 12 21.75c5.385 0 9.75-4.365 9.75-9.75S17.385 2.25 12 2.25S2.25 6.615 2.25 12m7.25-.75h5a.75.75 0 0 1 0 1.5h-5a.75.75 0 0 1 0-1.5"/>`), g.Group(children),
	)
}

func ChatPlus(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9.5 12h5M12 9.5v5m0 6.5a9 9 0 1 0-9-9c0 1.44.338 2.8.94 4.007c.453.911-.177 2.14-.417 3.037a1.17 1.17 0 0 0 1.433 1.433c.897-.24 2.126-.87 3.037-.416A9 9 0 0 0 12 21"/>`), g.Group(children),
	)
}

func ChatPlusSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0 1.558.366 3.033 1.018 4.342c.104.21.114.523-.005 1.01a9 9 0 0 1-.22.729l-.03.086c-.074.22-.154.46-.214.683c-.382 1.427.924 2.733 2.35 2.351c.224-.06.463-.14.684-.214l.086-.03a9 9 0 0 1 .729-.22c.487-.12.8-.11 1.01-.005A9.7 9.7 0 0 0 12 21.75c5.385 0 9.75-4.365 9.75-9.75S17.385 2.25 12 2.25S2.25 6.615 2.25 12M12 8.75a.75.75 0 0 1 .75.75v1.75h1.75a.75.75 0 0 1 0 1.5h-1.75v1.75a.75.75 0 0 1-1.5 0v-1.75H9.5a.75.75 0 0 1 0-1.5h1.75V9.5a.75.75 0 0 1 .75-.75"/>`), g.Group(children),
	)
}

func ChatSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12 2.25A9.75 9.75 0 0 0 2.25 12c0 1.558.366 3.033 1.018 4.342c.104.21.114.523-.005 1.01a9 9 0 0 1-.22.729l-.03.086c-.074.22-.154.46-.214.683c-.382 1.427.924 2.733 2.35 2.351c.224-.06.463-.14.684-.214l.086-.03a9 9 0 0 1 .729-.22c.487-.12.8-.11 1.01-.005A9.7 9.7 0 0 0 12 21.75c5.385 0 9.75-4.365 9.75-9.75S17.385 2.25 12 2.25"/>`), g.Group(children),
	)
}

func ChatX(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m10 10l4 4m0-4l-4 4m2 7a9 9 0 1 0-9-9c0 1.44.338 2.8.94 4.007c.453.911-.177 2.14-.417 3.037a1.17 1.17 0 0 0 1.433 1.433c.897-.24 2.126-.87 3.037-.416A9 9 0 0 0 12 21"/>`), g.Group(children),
	)
}

func ChatXSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0 1.558.366 3.033 1.018 4.342c.104.21.114.523-.005 1.01a9 9 0 0 1-.22.729l-.03.086c-.074.22-.154.46-.214.683c-.382 1.427.924 2.733 2.35 2.351c.224-.06.463-.14.684-.214l.086-.03a9 9 0 0 1 .729-.22c.487-.12.8-.11 1.01-.005A9.7 9.7 0 0 0 12 21.75c5.385 0 9.75-4.365 9.75-9.75S17.385 2.25 12 2.25S2.25 6.615 2.25 12m7.22-2.53a.75.75 0 0 1 1.06 0L12 10.94l1.47-1.47a.75.75 0 1 1 1.06 1.06L13.06 12l1.47 1.47a.75.75 0 1 1-1.06 1.06L12 13.06l-1.47 1.47a.75.75 0 1 1-1.06-1.06L10.94 12l-1.47-1.47a.75.75 0 0 1 0-1.06"/>`), g.Group(children),
	)
}

func Check(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m6 13.626l1.606 1.722c.886.95 1.329 1.424 1.825 1.574c.436.131.9.096 1.315-.1c.473-.224.852-.761 1.612-1.836L18 7"/>`), g.Group(children),
	)
}

func CheckCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/><path d="m8.667 12.633l1.505 1.721a1 1 0 0 0 1.564-.073L15.333 9.3"/></g>`), g.Group(children),
	)
}

func CheckCircleOne(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="m9 8.806l3.562 3.94a.788.788 0 0 0 1.206-.055L21 3"/><path d="M21 12a9 9 0 1 1-9-9"/></g>`), g.Group(children),
	)
}

func CheckCircleOneSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M21.449 2.399a.75.75 0 0 1 .152 1.05l-7.232 9.69a1.537 1.537 0 0 1-2.364.11l-3.561-3.94a.75.75 0 1 1 1.112-1.006l3.562 3.939l.007.005l.02.003l.017-.004l.004-.004l7.233-9.69a.75.75 0 0 1 1.05-.153M12 3.75A8.25 8.25 0 1 0 20.25 12a.75.75 0 0 1 1.5 0c0 5.385-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12S6.615 2.25 12 2.25a.75.75 0 0 1 0 1.5"/>`), g.Group(children),
	)
}

func CheckCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12m13.523-3.308a.75.75 0 0 0-1.048.169l-3.597 4.981a.25.25 0 0 1-.391.018l-1.506-1.72a.75.75 0 1 0-1.129.987l1.506 1.721a1.75 1.75 0 0 0 2.736-.128l3.597-4.98a.75.75 0 0 0-.168-1.048"/>`), g.Group(children),
	)
}

func CheckDiamond(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M2.707 10.295a2.41 2.41 0 0 0 0 3.41l7.588 7.588a2.41 2.41 0 0 0 3.41 0l7.588-7.588a2.41 2.41 0 0 0 0-3.41l-7.588-7.588a2.41 2.41 0 0 0-3.41 0z"/><path d="m8.667 12.633l1.505 1.721a1 1 0 0 0 1.564-.073L15.333 9.3"/></g>`), g.Group(children),
	)
}

func CheckDiamondSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.79 1.49a3.2 3.2 0 0 0-1.025.686L2.177 9.765a3.16 3.16 0 0 0 0 4.47l7.588 7.588a3.16 3.16 0 0 0 4.47 0l7.588-7.588a3.16 3.16 0 0 0 0-4.47l-7.588-7.588a3.16 3.16 0 0 0-3.445-.686m4.983 7.202a.75.75 0 0 1 .168 1.047l-3.597 4.981a1.75 1.75 0 0 1-2.736.128l-1.506-1.72a.75.75 0 1 1 1.13-.989l1.505 1.721a.25.25 0 0 0 .39-.018l3.598-4.981a.75.75 0 0 1 1.048-.169"/>`), g.Group(children),
	)
}

func CheckHexagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M20.5 15.8V8.2a1.91 1.91 0 0 0-.944-1.645l-6.612-3.8a1.88 1.88 0 0 0-1.888 0l-6.612 3.8A1.9 1.9 0 0 0 3.5 8.2v7.602a1.91 1.91 0 0 0 .944 1.644l6.612 3.8a1.88 1.88 0 0 0 1.888 0l6.612-3.8A1.9 1.9 0 0 0 20.5 15.8"/><path d="m8.667 12.633l1.505 1.721a1 1 0 0 0 1.564-.073L15.333 9.3"/></g>`), g.Group(children),
	)
}

func CheckHexagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="m10.68 2.105l-6.61 3.8l-.002.002A2.65 2.65 0 0 0 2.75 8.198v7.603a2.64 2.64 0 0 0 1.318 2.292l.003.002l6.608 3.799h.002a2.63 2.63 0 0 0 2.639 0h.001l6.608-3.8h.003A2.65 2.65 0 0 0 21.25 15.8V8.2a2.65 2.65 0 0 0-1.318-2.292l-6.61-3.8l-.002-.002a2.63 2.63 0 0 0-2.64 0m5.093 6.587a.75.75 0 0 1 .168 1.047l-3.597 4.981a1.75 1.75 0 0 1-2.736.128l-1.506-1.72a.75.75 0 1 1 1.13-.989l1.505 1.721a.25.25 0 0 0 .39-.018l3.598-4.981a.75.75 0 0 1 1.048-.169"/>`), g.Group(children),
	)
}

func CheckOctagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M7.805 3.469C8.16 3.115 8.451 3 8.937 3h6.126c.486 0 .778.115 1.132.469l4.336 4.336c.354.354.469.646.469 1.132v6.126c0 .5-.125.788-.469 1.132l-4.336 4.336c-.354.354-.646.469-1.132.469H8.937c-.5 0-.788-.125-1.132-.469L3.47 16.195c-.355-.355-.47-.646-.47-1.132V8.937c0-.5.125-.788.469-1.132z"/><path d="m8.667 12.633l1.505 1.721a1 1 0 0 0 1.564-.073L15.333 9.3"/></g>`), g.Group(children),
	)
}

func CheckOctagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M7.275 2.938c.221-.22.463-.408.762-.53a2.3 2.3 0 0 1 .9-.158h6.126c.302 0 .602.036.9.158s.54.31.762.53l4.337 4.337c.22.221.408.463.53.762c.123.298.158.598.158.9v6.126c0 .313-.039.616-.163.914a2.3 2.3 0 0 1-.525.748l-4.337 4.337a2.3 2.3 0 0 1-.762.53a2.3 2.3 0 0 1-.9.158H8.937c-.313 0-.616-.039-.914-.163a2.3 2.3 0 0 1-.748-.525l-4.337-4.337a2.3 2.3 0 0 1-.53-.762a2.3 2.3 0 0 1-.158-.9V8.937c0-.313.039-.616.163-.914a2.3 2.3 0 0 1 .525-.748zm7.45 5.923l-3.597 4.981a.25.25 0 0 1-.391.018l-1.506-1.72a.75.75 0 1 0-1.129.987l1.506 1.721a1.75 1.75 0 0 0 2.736-.128l3.597-4.98a.75.75 0 1 0-1.216-.88"/>`), g.Group(children),
	)
}

func CheckSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M18.577 6.183a1 1 0 0 1 .24 1.394l-5.666 8.02c-.36.508-.665.94-.94 1.269c-.287.34-.61.658-1.038.86a2.83 2.83 0 0 1-2.03.153c-.456-.137-.82-.406-1.149-.702c-.315-.285-.672-.668-1.09-1.116l-1.635-1.753a1 1 0 1 1 1.462-1.364l1.606 1.722c.455.487.754.806.998 1.027c.24.216.344.259.385.271c.196.06.405.045.598-.046c.046-.022.149-.085.36-.338c.216-.257.473-.62.863-1.171l5.642-7.986a1 1 0 0 1 1.394-.24"/>`), g.Group(children),
	)
}

func CheckSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/><path d="m8.667 12.633l1.505 1.721a1 1 0 0 0 1.564-.073L15.333 9.3"/></g>`), g.Group(children),
	)
}

func CheckSquareOne(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="m9 8.806l3.562 3.94a.788.788 0 0 0 1.206-.055L21 3"/><path d="M9.4 3c-2.24 0-3.36 0-4.216.436a4 4 0 0 0-1.748 1.748C3 6.04 3 7.16 3 9.4v5.2c0 2.24 0 3.36.436 4.216a4 4 0 0 0 1.748 1.748C6.04 21 7.16 21 9.4 21h5.2c2.24 0 3.36 0 4.216-.436a4 4 0 0 0 1.748-1.748C21 17.96 21 16.84 21 14.6v-1.1"/></g>`), g.Group(children),
	)
}

func CheckSquareOneSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M20.399 2.551a.75.75 0 0 1 1.202.898l-7.232 9.69a1.537 1.537 0 0 1-2.364.11l-3.561-3.94a.75.75 0 1 1 1.112-1.006l3.562 3.939l.007.005l.02.003l.017-.004l.004-.004zM9.367 2.25H9.4a.75.75 0 0 1 0 1.5c-1.132 0-1.937 0-2.566.052c-.62.05-1.005.147-1.31.302a3.25 3.25 0 0 0-1.42 1.42c-.155.305-.251.69-.302 1.31c-.051.63-.052 1.434-.052 2.566v5.2c0 1.133 0 1.937.052 2.566c.05.62.147 1.005.302 1.31a3.25 3.25 0 0 0 1.42 1.42c.305.155.69.251 1.31.302c.63.051 1.434.052 2.566.052h5.2c1.133 0 1.937 0 2.566-.052c.62-.05 1.005-.147 1.31-.302a3.25 3.25 0 0 0 1.42-1.42c.155-.305.251-.69.302-1.31c.051-.63.052-1.434.052-2.566v-1.1a.75.75 0 0 1 1.5 0v1.133c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.868a4.75 4.75 0 0 1-2.076 2.076c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.077c-.281-.55-.403-1.154-.461-1.868c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057"/>`), g.Group(children),
	)
}

func CheckSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057m6.406 6.442a.75.75 0 0 0-1.048.169l-3.597 4.981a.25.25 0 0 1-.391.018l-1.506-1.72a.75.75 0 1 0-1.129.987l1.506 1.721a1.75 1.75 0 0 0 2.736-.128l3.597-4.98a.75.75 0 0 0-.168-1.048"/>`), g.Group(children),
	)
}

func CheckWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83"/><path d="m8.667 12.633l1.505 1.721a1 1 0 0 0 1.564-.073L15.333 9.3"/></g>`), g.Group(children),
	)
}

func CheckWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.565 2.075c-.394.189-.755.497-1.26.928l-.079.066a2.56 2.56 0 0 1-1.58.655l-.102.008c-.662.053-1.135.09-1.547.236a3.33 3.33 0 0 0-2.03 2.029c-.145.412-.182.885-.235 1.547l-.008.102a2.56 2.56 0 0 1-.655 1.58l-.066.078c-.431.506-.74.867-.928 1.261a3.33 3.33 0 0 0 0 2.87c.189.394.497.755.928 1.26l.066.079c.41.48.604.939.655 1.58l.008.102c.053.662.09 1.135.236 1.547a3.33 3.33 0 0 0 2.029 2.03c.412.145.885.182 1.547.235l.102.008c.629.05 1.09.238 1.58.655l.079.066c.505.431.866.74 1.26.928a3.33 3.33 0 0 0 2.87 0c.394-.189.755-.497 1.26-.928l.079-.066c.48-.41.939-.604 1.58-.655l.102-.008c.662-.053 1.135-.09 1.547-.236a3.33 3.33 0 0 0 2.03-2.029c.145-.412.182-.885.235-1.547l.008-.102c.05-.629.238-1.09.655-1.58l.066-.079c.431-.505.74-.866.928-1.26a3.33 3.33 0 0 0 0-2.87c-.189-.394-.497-.755-.928-1.26l-.066-.079a2.56 2.56 0 0 1-.655-1.58l-.008-.102c-.053-.662-.09-1.135-.236-1.547a3.33 3.33 0 0 0-2.029-2.03c-.412-.145-.885-.182-1.547-.235l-.102-.008a2.56 2.56 0 0 1-1.58-.655l-.079-.066c-.505-.431-.866-.74-1.26-.928a3.33 3.33 0 0 0-2.87 0m5.208 6.617a.75.75 0 0 1 .168 1.047l-3.597 4.981a1.75 1.75 0 0 1-2.736.128l-1.506-1.72a.75.75 0 1 1 1.13-.989l1.505 1.721a.25.25 0 0 0 .39-.018l3.598-4.981a.75.75 0 0 1 1.048-.169"/>`), g.Group(children),
	)
}

func ChevronDoubleDown(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m6 6l6 6l6-6M6 12l6 6l6-6"/>`), g.Group(children),
	)
}

func ChevronDoubleDownLeft(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M6.257 9.257v8.486h8.486"/><path d="M10.257 5.257v8.486h8.486"/></g>`), g.Group(children),
	)
}

func ChevronDoubleDownLeftSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M14.745 18.5a.75.75 0 0 0 .75-.75l-3.253-3.254h6.507a.75.75 0 0 0 .751-.751L10.255 4.5a.75.75 0 0 0-.75.75v6.508L6.25 8.504a.75.75 0 0 0-.751.751v8.494a.75.75 0 0 0 .75.751z"/>`), g.Group(children),
	)
}

func ChevronDoubleDownRight(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9.257 17.743h8.486V9.257"/><path d="M5.257 13.743h8.486V5.257"/></g>`), g.Group(children),
	)
}

func ChevronDoubleDownRightSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.255 18.5a.75.75 0 0 1-.75-.75l3.253-3.254H5.25a.75.75 0 0 1-.751-.751L13.745 4.5a.75.75 0 0 1 .75.75v6.508l3.254-3.254a.75.75 0 0 1 .751.751v8.494a.75.75 0 0 1-.75.751z"/>`), g.Group(children),
	)
}

func ChevronDoubleDownSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M18.53 11.47a.75.75 0 0 1 0 1.06l-6 6a.75.75 0 0 1-1.06 0l-6-6a.75.75 0 0 1 0-1.06h4.939l-4.94-4.94a.75.75 0 0 1 0-1.06H18.53a.75.75 0 0 1 0 1.06l-4.939 4.94z"/>`), g.Group(children),
	)
}

func ChevronDoubleLeft(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m12 6l-6 6l6 6m6-12l-6 6l6 6"/>`), g.Group(children),
	)
}

func ChevronDoubleLeftSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12.5 5.47a.75.75 0 0 0-1.06 0l-6 6a.75.75 0 0 0 0 1.06l6 6a.75.75 0 0 0 1.06 0v-4.939l4.94 4.94a.75.75 0 0 0 1.06 0V5.47a.75.75 0 0 0-1.06 0l-4.94 4.939z"/>`), g.Group(children),
	)
}

func ChevronDoubleRight(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m12 18l6-6l-6-6M6 18l6-6l-6-6"/>`), g.Group(children),
	)
}

func ChevronDoubleRightSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M11.47 5.47a.75.75 0 0 1 1.06 0l6 6a.75.75 0 0 1 0 1.06l-6 6a.75.75 0 0 1-1.06 0v-4.939l-4.94 4.94a.75.75 0 0 1-1.06 0V5.47a.75.75 0 0 1 1.06 0l4.94 4.939z"/>`), g.Group(children),
	)
}

func ChevronDoubleUp(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m18 12l-6-6l-6 6m12 6l-6-6l-6 6"/>`), g.Group(children),
	)
}

func ChevronDoubleUpLeft(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M14.743 6.257H6.257v8.486"/><path d="M18.743 10.257h-8.486v8.486"/></g>`), g.Group(children),
	)
}

func ChevronDoubleUpLeftSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M14.745 5.5a.75.75 0 0 1 .75.75l-3.253 3.254h6.507a.75.75 0 0 1 .751.751L10.255 19.5a.75.75 0 0 1-.75-.75v-6.508L6.25 15.496a.75.75 0 0 1-.751-.751V6.251a.75.75 0 0 1 .75-.751z"/>`), g.Group(children),
	)
}

func ChevronDoubleUpRight(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M17.743 14.743V6.257H9.257"/><path d="M13.743 18.743v-8.486H5.257"/></g>`), g.Group(children),
	)
}

func ChevronDoubleUpRightSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.257 5.507a.75.75 0 0 0-.75.75l3.25 3.25h-6.5a.75.75 0 0 0-.75.75l9.236 9.236a.75.75 0 0 0 .75-.75v-6.5l3.25 3.25a.75.75 0 0 0 .75-.75V6.257a.75.75 0 0 0-.75-.75z"/>`), g.Group(children),
	)
}

func ChevronDoubleUpSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M18.53 12.53a.75.75 0 0 0 0-1.06l-6-6a.75.75 0 0 0-1.06 0l-6 6a.75.75 0 0 0 0 1.06h4.939l-4.94 4.94a.75.75 0 0 0 0 1.06H18.53a.75.75 0 0 0 0-1.06l-4.939-4.94z"/>`), g.Group(children),
	)
}

func ChevronDown(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m6 9l6 6l6-6"/>`), g.Group(children),
	)
}

func ChevronDownCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="m15.5 10.75l-3.5 3.5l-3.5-3.5"/><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/></g>`), g.Group(children),
	)
}

func ChevronDownCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12m6.78-1.78a.75.75 0 1 0-1.06 1.06l3.5 3.5a.75.75 0 0 0 1.06 0l3.5-3.5a.75.75 0 1 0-1.06-1.06L12 13.19z"/>`), g.Group(children),
	)
}

func ChevronDownLeft(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M7.879 7.636v8.485h8.485"/>`), g.Group(children),
	)
}

func ChevronDownLeftCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M14.95 13.95H10V9"/><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/></g>`), g.Group(children),
	)
}

func ChevronDownLeftCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12m8.5-3a.75.75 0 0 0-1.5 0v4.95a.75.75 0 0 0 .75.75h4.95a.75.75 0 1 0 0-1.5h-4.2z"/>`), g.Group(children),
	)
}

func ChevronDownLeftSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M16.364 16.871a.75.75 0 0 0 .75-.75L7.879 6.886a.75.75 0 0 0-.75.75v8.485c0 .415.335.75.75.75z"/>`), g.Group(children),
	)
}

func ChevronDownLeftSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M14.95 13.95H10V9"/><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/></g>`), g.Group(children),
	)
}

func ChevronDownLeftSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057M10.75 9a.75.75 0 0 0-1.5 0v4.95a.75.75 0 0 0 .75.75h4.95a.75.75 0 1 0 0-1.5h-4.2z"/>`), g.Group(children),
	)
}

func ChevronDownLeftWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M14.95 13.95H10V9"/><path d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83"/></g>`), g.Group(children),
	)
}

func ChevronDownLeftWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.565 2.075a3.33 3.33 0 0 1 2.87 0c.394.189.755.497 1.26.928l.079.066c.48.41.939.604 1.58.655l.102.008c.662.053 1.135.09 1.547.236a3.33 3.33 0 0 1 2.03 2.029c.145.412.182.885.235 1.547l.008.102c.051.641.246 1.1.655 1.58l.066.078c.431.506.74.867.928 1.261a3.33 3.33 0 0 1 0 2.87c-.189.394-.497.755-.928 1.26l-.066.079c-.418.49-.605.951-.655 1.58l-.008.102c-.053.662-.09 1.135-.236 1.547a3.33 3.33 0 0 1-2.029 2.03c-.412.145-.885.182-1.547.235l-.102.008c-.641.051-1.1.246-1.58.655l-.079.066c-.505.431-.866.74-1.26.928a3.33 3.33 0 0 1-2.87 0c-.394-.189-.755-.497-1.26-.928l-.079-.066a2.56 2.56 0 0 0-1.58-.655l-.102-.008c-.662-.053-1.135-.09-1.547-.236a3.33 3.33 0 0 1-2.03-2.029c-.145-.412-.182-.885-.235-1.547l-.008-.102a2.56 2.56 0 0 0-.655-1.58l-.066-.079c-.431-.505-.74-.866-.928-1.26a3.33 3.33 0 0 1 0-2.87c.189-.394.497-.755.928-1.26l.066-.079a2.56 2.56 0 0 0 .655-1.58l.008-.102c.053-.662.09-1.135.236-1.547a3.33 3.33 0 0 1 2.029-2.03c.412-.145.885-.182 1.547-.235l.102-.008a2.56 2.56 0 0 0 1.58-.655l.078-.066c.506-.431.867-.74 1.261-.928M10.75 9a.75.75 0 0 0-1.5 0v4.95a.75.75 0 0 0 .75.75h4.95a.75.75 0 1 0 0-1.5h-4.2z"/>`), g.Group(children),
	)
}

func ChevronDownRight(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M16.121 7.636v8.485H7.636"/>`), g.Group(children),
	)
}

func ChevronDownRightCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M13.95 9v4.95H9"/><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/></g>`), g.Group(children),
	)
}

func ChevronDownRightCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12M14.7 9a.75.75 0 1 0-1.5 0v4.2H9a.75.75 0 0 0 0 1.5h4.95a.75.75 0 0 0 .75-.75z"/>`), g.Group(children),
	)
}

func ChevronDownRightSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M16.871 7.636a.75.75 0 0 0-.75-.75l-9.235 9.235c0 .415.336.75.75.75h8.485a.75.75 0 0 0 .75-.75z"/>`), g.Group(children),
	)
}

func ChevronDownRightSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M13.95 9v4.95H9"/><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/></g>`), g.Group(children),
	)
}

func ChevronDownRightSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057M14.7 9a.75.75 0 1 0-1.5 0v4.2H9a.75.75 0 0 0 0 1.5h4.95a.75.75 0 0 0 .75-.75z"/>`), g.Group(children),
	)
}

func ChevronDownRightWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M13.95 9v4.95H9"/><path d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83"/></g>`), g.Group(children),
	)
}

func ChevronDownRightWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.565 2.075a3.33 3.33 0 0 1 2.87 0c.394.189.755.497 1.26.928l.079.066c.48.41.939.604 1.58.655l.102.008c.662.053 1.135.09 1.547.236a3.33 3.33 0 0 1 2.03 2.029c.145.412.182.885.235 1.547l.008.102c.051.641.246 1.1.655 1.58l.066.078c.431.506.74.867.928 1.261a3.33 3.33 0 0 1 0 2.87c-.189.394-.497.755-.928 1.26l-.066.079c-.418.49-.605.951-.655 1.58l-.008.102c-.053.662-.09 1.135-.236 1.547a3.33 3.33 0 0 1-2.029 2.03c-.412.145-.885.182-1.547.235l-.102.008c-.641.051-1.1.246-1.58.655l-.079.066c-.505.431-.866.74-1.26.928a3.33 3.33 0 0 1-2.87 0c-.394-.189-.755-.497-1.26-.928l-.079-.066a2.56 2.56 0 0 0-1.58-.655l-.102-.008c-.662-.053-1.135-.09-1.547-.236a3.33 3.33 0 0 1-2.03-2.029c-.145-.412-.182-.885-.235-1.547l-.008-.102a2.56 2.56 0 0 0-.655-1.58l-.066-.079c-.431-.505-.74-.866-.928-1.26a3.33 3.33 0 0 1 0-2.87c.189-.394.497-.755.928-1.26l.066-.079a2.56 2.56 0 0 0 .655-1.58l.008-.102c.053-.662.09-1.135.236-1.547a3.33 3.33 0 0 1 2.029-2.03c.412-.145.885-.182 1.547-.235l.102-.008a2.56 2.56 0 0 0 1.58-.655l.078-.066c.506-.431.867-.74 1.261-.928M14.7 9a.75.75 0 1 0-1.5 0v4.2H9a.75.75 0 0 0 0 1.5h4.95a.75.75 0 0 0 .75-.75z"/>`), g.Group(children),
	)
}

func ChevronDownSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M18.53 9.53a.75.75 0 0 0 0-1.06H5.47a.75.75 0 0 0 0 1.06l6 6a.75.75 0 0 0 1.06 0z"/>`), g.Group(children),
	)
}

func ChevronDownSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="m15.5 10.75l-3.5 3.5l-3.5-3.5"/><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/></g>`), g.Group(children),
	)
}

func ChevronDownSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057m-.337 7.97a.75.75 0 1 0-1.06 1.06l3.5 3.5a.75.75 0 0 0 1.06 0l3.5-3.5a.75.75 0 1 0-1.06-1.06L12 13.19z"/>`), g.Group(children),
	)
}

func ChevronDownWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="m15.5 10.75l-3.5 3.5l-3.5-3.5"/><path d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83"/></g>`), g.Group(children),
	)
}

func ChevronDownWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.565 2.075a3.33 3.33 0 0 1 2.87 0c.394.189.755.497 1.26.928l.079.066c.48.41.939.604 1.58.655l.102.008c.662.053 1.135.09 1.547.236a3.33 3.33 0 0 1 2.03 2.029c.145.412.182.885.235 1.547l.008.102c.051.641.246 1.1.655 1.58l.066.078c.431.506.74.867.928 1.261a3.33 3.33 0 0 1 0 2.87c-.189.394-.497.755-.928 1.26l-.066.079c-.418.49-.605.951-.655 1.58l-.008.102c-.053.662-.09 1.135-.236 1.547a3.33 3.33 0 0 1-2.029 2.03c-.412.145-.885.182-1.547.235l-.102.008c-.641.051-1.1.246-1.58.655l-.079.066c-.505.431-.866.74-1.26.928a3.33 3.33 0 0 1-2.87 0c-.394-.189-.755-.497-1.26-.928l-.079-.066a2.56 2.56 0 0 0-1.58-.655l-.102-.008c-.662-.053-1.135-.09-1.547-.236a3.33 3.33 0 0 1-2.03-2.029c-.145-.412-.182-.885-.235-1.547l-.008-.102a2.56 2.56 0 0 0-.655-1.58l-.066-.079c-.431-.505-.74-.866-.928-1.26a3.33 3.33 0 0 1 0-2.87c.189-.394.497-.755.928-1.26l.066-.079a2.56 2.56 0 0 0 .655-1.58l.008-.102c.053-.662.09-1.135.236-1.547a3.33 3.33 0 0 1 2.029-2.03c.412-.145.885-.182 1.547-.235l.102-.008a2.56 2.56 0 0 0 1.58-.655l.078-.066c.506-.431.867-.74 1.261-.928M9.03 10.22a.75.75 0 1 0-1.06 1.06l3.5 3.5a.75.75 0 0 0 1.06 0l3.5-3.5a.75.75 0 1 0-1.06-1.06L12 13.19z"/>`), g.Group(children),
	)
}

func ChevronLeft(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m15 6l-6 6l6 6"/>`), g.Group(children),
	)
}

func ChevronLeftCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M13.25 15.5L9.75 12l3.5-3.5"/><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/></g>`), g.Group(children),
	)
}

func ChevronLeftCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12m11.53-2.97a.75.75 0 0 0-1.06-1.06l-3.5 3.5a.75.75 0 0 0 0 1.06l3.5 3.5a.75.75 0 1 0 1.06-1.06L10.81 12z"/>`), g.Group(children),
	)
}

func ChevronLeftSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M14.47 18.53a.75.75 0 0 0 1.06 0V5.47a.75.75 0 0 0-1.06 0l-6 6a.75.75 0 0 0 0 1.06z"/>`), g.Group(children),
	)
}

func ChevronLeftSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M13.25 15.5L9.75 12l3.5-3.5"/><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/></g>`), g.Group(children),
	)
}

func ChevronLeftSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057m4.413 6.78a.75.75 0 0 0-1.06-1.06l-3.5 3.5a.75.75 0 0 0 0 1.06l3.5 3.5a.75.75 0 1 0 1.06-1.06L10.81 12z"/>`), g.Group(children),
	)
}

func ChevronLeftWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M13.25 15.5L9.75 12l3.5-3.5"/><path d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83"/></g>`), g.Group(children),
	)
}

func ChevronLeftWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.565 2.075a3.33 3.33 0 0 1 2.87 0c.394.189.755.497 1.26.928l.079.066c.48.41.939.604 1.58.655l.102.008c.662.053 1.135.09 1.547.236a3.33 3.33 0 0 1 2.03 2.029c.145.412.182.885.235 1.547l.008.102c.051.641.246 1.1.655 1.58l.066.078c.431.506.74.867.928 1.261a3.33 3.33 0 0 1 0 2.87c-.189.394-.497.755-.928 1.26l-.066.079c-.418.49-.605.951-.655 1.58l-.008.102c-.053.662-.09 1.135-.236 1.547a3.33 3.33 0 0 1-2.029 2.03c-.412.145-.885.182-1.547.235l-.102.008c-.641.051-1.1.246-1.58.655l-.079.066c-.505.431-.866.74-1.26.928a3.33 3.33 0 0 1-2.87 0c-.394-.189-.755-.497-1.26-.928l-.079-.066a2.56 2.56 0 0 0-1.58-.655l-.102-.008c-.662-.053-1.135-.09-1.547-.236a3.33 3.33 0 0 1-2.03-2.029c-.145-.412-.182-.885-.235-1.547l-.008-.102a2.56 2.56 0 0 0-.655-1.58l-.066-.079c-.431-.505-.74-.866-.928-1.26a3.33 3.33 0 0 1 0-2.87c.189-.394.497-.755.928-1.26l.066-.079a2.56 2.56 0 0 0 .655-1.58l.008-.102c.053-.662.09-1.135.236-1.547a3.33 3.33 0 0 1 2.029-2.03c.412-.145.885-.182 1.547-.235l.102-.008a2.56 2.56 0 0 0 1.58-.655l.078-.066c.506-.431.867-.74 1.261-.928M13.78 9.03a.75.75 0 0 0-1.06-1.06l-3.5 3.5a.75.75 0 0 0 0 1.06l3.5 3.5a.75.75 0 1 0 1.06-1.06L10.81 12z"/>`), g.Group(children),
	)
}

func ChevronRight(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m9 18l6-6l-6-6"/>`), g.Group(children),
	)
}

func ChevronRightCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="m10.75 8.5l3.5 3.5l-3.5 3.5"/><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/></g>`), g.Group(children),
	)
}

func ChevronRightCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12m9.03-4.03a.75.75 0 1 0-1.06 1.06L13.19 12l-2.97 2.97a.75.75 0 1 0 1.06 1.06l3.5-3.5a.75.75 0 0 0 0-1.06z"/>`), g.Group(children),
	)
}

func ChevronRightSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.53 5.47a.75.75 0 0 0-1.06 0v13.06a.75.75 0 0 0 1.06 0l6-6a.75.75 0 0 0 0-1.06z"/>`), g.Group(children),
	)
}

func ChevronRightSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="m10.75 8.5l3.5 3.5l-3.5 3.5"/><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/></g>`), g.Group(children),
	)
}

func ChevronRightSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057m1.913 5.72a.75.75 0 1 0-1.06 1.06L13.19 12l-2.97 2.97a.75.75 0 1 0 1.06 1.06l3.5-3.5a.75.75 0 0 0 0-1.06z"/>`), g.Group(children),
	)
}

func ChevronRightWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="m10.75 8.5l3.5 3.5l-3.5 3.5"/><path d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83"/></g>`), g.Group(children),
	)
}

func ChevronRightWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.565 2.075a3.33 3.33 0 0 1 2.87 0c.394.189.755.497 1.26.928l.079.066c.48.41.939.604 1.58.655l.102.008c.662.053 1.135.09 1.547.236a3.33 3.33 0 0 1 2.03 2.029c.145.412.182.885.235 1.547l.008.102c.051.641.246 1.1.655 1.58l.066.078c.431.506.74.867.928 1.261a3.33 3.33 0 0 1 0 2.87c-.189.394-.497.755-.928 1.26l-.066.079c-.418.49-.605.951-.655 1.58l-.008.102c-.053.662-.09 1.135-.236 1.547a3.33 3.33 0 0 1-2.029 2.03c-.412.145-.885.182-1.547.235l-.102.008c-.641.051-1.1.246-1.58.655l-.079.066c-.505.431-.866.74-1.26.928a3.33 3.33 0 0 1-2.87 0c-.394-.189-.755-.497-1.26-.928l-.079-.066a2.56 2.56 0 0 0-1.58-.655l-.102-.008c-.662-.053-1.135-.09-1.547-.236a3.33 3.33 0 0 1-2.03-2.029c-.145-.412-.182-.885-.235-1.547l-.008-.102a2.56 2.56 0 0 0-.655-1.58l-.066-.079c-.431-.505-.74-.866-.928-1.26a3.33 3.33 0 0 1 0-2.87c.189-.394.497-.755.928-1.26l.066-.079a2.56 2.56 0 0 0 .655-1.58l.008-.102c.053-.662.09-1.135.236-1.547a3.33 3.33 0 0 1 2.029-2.03c.412-.145.885-.182 1.547-.235l.102-.008a2.56 2.56 0 0 0 1.58-.655l.078-.066c.506-.431.867-.74 1.261-.928m.715 5.895a.75.75 0 1 0-1.06 1.06L13.19 12l-2.97 2.97a.75.75 0 1 0 1.06 1.06l3.5-3.5a.75.75 0 0 0 0-1.06z"/>`), g.Group(children),
	)
}

func ChevronUp(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m18 15l-6-6l-6 6"/>`), g.Group(children),
	)
}

func ChevronUpCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="m8.5 13.25l3.5-3.5l3.5 3.5"/><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/></g>`), g.Group(children),
	)
}

func ChevronUpCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12m13.78.72l-3.5-3.5a.75.75 0 0 0-1.06 0l-3.5 3.5a.75.75 0 1 0 1.06 1.06L12 10.81l2.97 2.97a.75.75 0 1 0 1.06-1.06"/>`), g.Group(children),
	)
}

func ChevronUpDown(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m8 16l4 4l4-4M8 8l4-4l4 4"/>`), g.Group(children),
	)
}

func ChevronUpDownSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12.53 3.47a.75.75 0 0 0-1.06 0l-4 4a.75.75 0 0 0 0 1.06h9.06a.75.75 0 0 0 0-1.06zm4 13.06a.75.75 0 0 0 0-1.06H7.47a.75.75 0 0 0 0 1.06l4 4a.75.75 0 0 0 1.06 0z"/>`), g.Group(children),
	)
}

func ChevronUpLeft(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M7.879 16.364V7.879h8.485"/>`), g.Group(children),
	)
}

func ChevronUpLeftCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M10 14.95V10h4.95"/><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/></g>`), g.Group(children),
	)
}

func ChevronUpLeftCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12M10 9.25a.75.75 0 0 0-.75.75v4.95a.75.75 0 1 0 1.5 0v-4.2h4.2a.75.75 0 1 0 0-1.5z"/>`), g.Group(children),
	)
}

func ChevronUpLeftSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M7.879 7.129a.75.75 0 0 0-.75.75v8.485c0 .414.335.75.75.75l9.235-9.235a.75.75 0 0 0-.75-.75z"/>`), g.Group(children),
	)
}

func ChevronUpLeftSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M10 14.95V10h4.95"/><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/></g>`), g.Group(children),
	)
}

func ChevronUpLeftSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057m.633 7a.75.75 0 0 0-.75.75v4.95a.75.75 0 1 0 1.5 0v-4.2h4.2a.75.75 0 1 0 0-1.5z"/>`), g.Group(children),
	)
}

func ChevronUpLeftWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M10 14.95V10h4.95"/><path d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83"/></g>`), g.Group(children),
	)
}

func ChevronUpLeftWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.565 2.075a3.33 3.33 0 0 1 2.87 0c.394.189.755.497 1.26.928l.079.066c.48.41.939.604 1.58.655l.102.008c.662.053 1.135.09 1.547.236a3.33 3.33 0 0 1 2.03 2.029c.145.412.182.885.235 1.547l.008.102c.051.641.246 1.1.655 1.58l.066.078c.431.506.74.867.928 1.261a3.33 3.33 0 0 1 0 2.87c-.189.394-.497.755-.928 1.26l-.066.079c-.418.49-.605.951-.655 1.58l-.008.102c-.053.662-.09 1.135-.236 1.547a3.33 3.33 0 0 1-2.029 2.03c-.412.145-.885.182-1.547.235l-.102.008c-.641.051-1.1.246-1.58.655l-.079.066c-.505.431-.866.74-1.26.928a3.33 3.33 0 0 1-2.87 0c-.394-.189-.755-.497-1.26-.928l-.079-.066a2.56 2.56 0 0 0-1.58-.655l-.102-.008c-.662-.053-1.135-.09-1.547-.236a3.33 3.33 0 0 1-2.03-2.029c-.145-.412-.182-.885-.235-1.547l-.008-.102a2.56 2.56 0 0 0-.655-1.58l-.066-.079c-.431-.505-.74-.866-.928-1.26a3.33 3.33 0 0 1 0-2.87c.189-.394.497-.755.928-1.26l.066-.079a2.56 2.56 0 0 0 .655-1.58l.008-.102c.053-.662.09-1.135.236-1.547a3.33 3.33 0 0 1 2.029-2.03c.412-.145.885-.182 1.547-.235l.102-.008a2.56 2.56 0 0 0 1.58-.655l.078-.066c.506-.431.867-.74 1.261-.928M10 9.25a.75.75 0 0 0-.75.75v4.95a.75.75 0 1 0 1.5 0v-4.2h4.2a.75.75 0 1 0 0-1.5z"/>`), g.Group(children),
	)
}

func ChevronUpRight(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M16.121 16.364V7.879H7.636"/>`), g.Group(children),
	)
}

func ChevronUpRightCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9 10h4.95v4.95"/><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/></g>`), g.Group(children),
	)
}

func ChevronUpRightCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12M9 9.25a.75.75 0 0 0 0 1.5h4.2v4.2a.75.75 0 1 0 1.5 0V10a.75.75 0 0 0-.75-.75z"/>`), g.Group(children),
	)
}

func ChevronUpRightSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M6.886 7.879a.75.75 0 0 1 .75-.75h8.485a.75.75 0 0 1 .75.75v8.485a.75.75 0 0 1-.75.75z"/>`), g.Group(children),
	)
}

func ChevronUpRightSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9 10h4.95v4.95"/><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/></g>`), g.Group(children),
	)
}

func ChevronUpRightSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057M9 9.25a.75.75 0 0 0 0 1.5h4.2v4.2a.75.75 0 1 0 1.5 0V10a.75.75 0 0 0-.75-.75z"/>`), g.Group(children),
	)
}

func ChevronUpRightWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9 10h4.95v4.95"/><path d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83"/></g>`), g.Group(children),
	)
}

func ChevronUpRightWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.565 2.075a3.33 3.33 0 0 1 2.87 0c.394.189.755.497 1.26.928l.079.066c.48.41.939.604 1.58.655l.102.008c.662.053 1.135.09 1.547.236a3.33 3.33 0 0 1 2.03 2.029c.145.412.182.885.235 1.547l.008.102c.051.641.246 1.1.655 1.58l.066.078c.431.506.74.867.928 1.261a3.33 3.33 0 0 1 0 2.87c-.189.394-.497.755-.928 1.26l-.066.079c-.418.49-.605.951-.655 1.58l-.008.102c-.053.662-.09 1.135-.236 1.547a3.33 3.33 0 0 1-2.029 2.03c-.412.145-.885.182-1.547.235l-.102.008c-.641.051-1.1.246-1.58.655l-.079.066c-.505.431-.866.74-1.26.928a3.33 3.33 0 0 1-2.87 0c-.394-.189-.755-.497-1.26-.928l-.079-.066a2.56 2.56 0 0 0-1.58-.655l-.102-.008c-.662-.053-1.135-.09-1.547-.236a3.33 3.33 0 0 1-2.03-2.029c-.145-.412-.182-.885-.235-1.547l-.008-.102a2.56 2.56 0 0 0-.655-1.58l-.066-.079c-.431-.505-.74-.866-.928-1.26a3.33 3.33 0 0 1 0-2.87c.189-.394.497-.755.928-1.26l.066-.079a2.56 2.56 0 0 0 .655-1.58l.008-.102c.053-.662.09-1.135.236-1.547a3.33 3.33 0 0 1 2.029-2.03c.412-.145.885-.182 1.547-.235l.102-.008a2.56 2.56 0 0 0 1.58-.655l.078-.066c.506-.431.867-.74 1.261-.928M9 9.25a.75.75 0 0 0 0 1.5h4.2v4.2a.75.75 0 1 0 1.5 0V10a.75.75 0 0 0-.75-.75z"/>`), g.Group(children),
	)
}

func ChevronUpSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12.53 8.47a.75.75 0 0 0-1.06 0l-6 6a.75.75 0 0 0 0 1.06h13.06a.75.75 0 0 0 0-1.06z"/>`), g.Group(children),
	)
}

func ChevronUpSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="m8.5 13.25l3.5-3.5l3.5 3.5"/><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/></g>`), g.Group(children),
	)
}

func ChevronUpSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057m3.163 6.97a.75.75 0 0 0-1.06 0l-3.5 3.5a.75.75 0 1 0 1.06 1.06L12 10.81l2.97 2.97a.75.75 0 1 0 1.06-1.06z"/>`), g.Group(children),
	)
}

func ChevronUpWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="m8.5 13.25l3.5-3.5l3.5 3.5"/><path d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83"/></g>`), g.Group(children),
	)
}

func ChevronUpWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.565 2.075a3.33 3.33 0 0 1 2.87 0c.394.189.755.497 1.26.928l.079.066c.48.41.939.604 1.58.655l.102.008c.662.053 1.135.09 1.547.236a3.33 3.33 0 0 1 2.03 2.029c.145.412.182.885.235 1.547l.008.102c.051.641.246 1.1.655 1.58l.066.078c.431.506.74.867.928 1.261a3.33 3.33 0 0 1 0 2.87c-.189.394-.497.755-.928 1.26l-.066.079c-.418.49-.605.951-.655 1.58l-.008.102c-.053.662-.09 1.135-.236 1.547a3.33 3.33 0 0 1-2.029 2.03c-.412.145-.885.182-1.547.235l-.102.008c-.641.051-1.1.246-1.58.655l-.079.066c-.505.431-.866.74-1.26.928a3.33 3.33 0 0 1-2.87 0c-.394-.189-.755-.497-1.26-.928l-.079-.066a2.56 2.56 0 0 0-1.58-.655l-.102-.008c-.662-.053-1.135-.09-1.547-.236a3.33 3.33 0 0 1-2.03-2.029c-.145-.412-.182-.885-.235-1.547l-.008-.102a2.56 2.56 0 0 0-.655-1.58l-.066-.079c-.431-.505-.74-.866-.928-1.26a3.33 3.33 0 0 1 0-2.87c.189-.394.497-.755.928-1.26l.066-.079a2.56 2.56 0 0 0 .655-1.58l.008-.102c.053-.662.09-1.135.236-1.547a3.33 3.33 0 0 1 2.029-2.03c.412-.145.885-.182 1.547-.235l.102-.008a2.56 2.56 0 0 0 1.58-.655l.078-.066c.506-.431.867-.74 1.261-.928M12.53 9.22a.75.75 0 0 0-1.06 0l-3.5 3.5a.75.75 0 1 0 1.06 1.06L12 10.81l2.97 2.97a.75.75 0 1 0 1.06-1.06z"/>`), g.Group(children),
	)
}

func Chip(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M17 3H7a1 1 0 0 0-1 1v16a1 1 0 0 0 1 1h10a1 1 0 0 0 1-1V4a1 1 0 0 0-1-1M6 6H3m3 4H3m3 4H3m3 4H3M21 6h-3m3 4h-3m3 4h-3m3 4h-3"/>`), g.Group(children),
	)
}

func ChipSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M5.25 4c0-.966.784-1.75 1.75-1.75h10c.966 0 1.75.784 1.75 1.75v1.25H21a.75.75 0 0 1 0 1.5h-2.25v2.5H21a.75.75 0 0 1 0 1.5h-2.25v2.5H21a.75.75 0 0 1 0 1.5h-2.25v2.5H21a.75.75 0 0 1 0 1.5h-2.25V20A1.75 1.75 0 0 1 17 21.75H7A1.75 1.75 0 0 1 5.25 20v-1.25H3a.75.75 0 0 1 0-1.5h2.25v-2.5H3a.75.75 0 0 1 0-1.5h2.25v-2.5H3a.75.75 0 0 1 0-1.5h2.25v-2.5H3a.75.75 0 0 1 0-1.5h2.25z"/>`), g.Group(children),
	)
}

func Circle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/>`), g.Group(children),
	)
}

func CircleDashed(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M21 12a9 9 0 0 1-.706 3.5M12 21a9 9 0 0 1-3.5-.706M3 12c0-1.241.251-2.424.706-3.5M12 3c1.241 0 2.424.251 3.5.706m-9.864 1.93A9 9 0 0 1 8.5 3.706m9.864 14.658a9 9 0 0 1-2.864 1.93m2.864-14.658a9 9 0 0 1 1.93 2.864M5.636 18.364a9 9 0 0 1-1.93-2.864"/>`), g.Group(children),
	)
}

func CircleDashedSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M11.25 3a.75.75 0 0 1 .75-.75a9.7 9.7 0 0 1 3.792.765a.75.75 0 1 1-.584 1.382A8.2 8.2 0 0 0 12 3.75a.75.75 0 0 1-.75-.75m-2.06.414a.75.75 0 0 1-.398.983a8.3 8.3 0 0 0-2.626 1.77a.75.75 0 0 1-1.06-1.061a9.8 9.8 0 0 1 3.102-2.091a.75.75 0 0 1 .983.399m8.644 1.692a.75.75 0 0 1 1.06 0a9.8 9.8 0 0 1 2.091 3.102a.75.75 0 0 1-1.382.584a8.3 8.3 0 0 0-1.77-2.626a.75.75 0 0 1 0-1.06M3.998 7.809a.75.75 0 0 1 .399.983A8.2 8.2 0 0 0 3.75 12a.75.75 0 0 1-1.5 0a9.7 9.7 0 0 1 .765-3.792a.75.75 0 0 1 .983-.399M21 11.25a.75.75 0 0 1 .75.75a9.7 9.7 0 0 1-.765 3.792a.75.75 0 0 1-1.382-.584A8.2 8.2 0 0 0 20.25 12a.75.75 0 0 1 .75-.75M3.414 14.81a.75.75 0 0 1 .983.398a8.3 8.3 0 0 0 1.77 2.626a.75.75 0 0 1-1.061 1.06a9.8 9.8 0 0 1-2.091-3.102a.75.75 0 0 1 .399-.983m15.48 3.024a.75.75 0 0 1 0 1.06a9.8 9.8 0 0 1-3.102 2.091a.75.75 0 0 1-.584-1.382a8.3 8.3 0 0 0 2.626-1.77a.75.75 0 0 1 1.06 0M7.81 20.002a.75.75 0 0 1 .983-.399A8.2 8.2 0 0 0 12 20.25a.75.75 0 0 1 0 1.5a9.7 9.7 0 0 1-3.792-.765a.75.75 0 0 1-.399-.983"/>`), g.Group(children),
	)
}

func CircleHalf(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M12 21a9 9 0 1 0 0-18m0 18a9 9 0 1 1 0-18m0 18V3"/>`), g.Group(children),
	)
}

func CircleHalfCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<defs><path id="mynauiCircleHalfCircle0" d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/></defs><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><use href="#mynauiCircleHalfCircle0"/><use href="#mynauiCircleHalfCircle0"/><path d="M12 17a5 5 0 0 0 0-10z"/></g>`), g.Group(children),
	)
}

func CircleHalfCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12 3.75a8.25 8.25 0 1 0 0 16.5a8.25 8.25 0 0 0 0-16.5M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12m9-5a.75.75 0 0 1 .75-.75a5.75 5.75 0 0 1 0 11.5a.75.75 0 0 1-.75-.75z"/>`), g.Group(children),
	)
}

func CircleHalfSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M11.25 3.784a8.25 8.25 0 0 0 0 16.432zM2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12"/>`), g.Group(children),
	)
}

func CircleNotch(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M7.717 4A9.05 9.05 0 0 0 3 11.956C3 16.951 7.03 21 12 21s9-4.05 9-9.044A9.05 9.05 0 0 0 16.283 4"/>`), g.Group(children),
	)
}

func CircleNotchSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M15.625 3.641a.75.75 0 0 1 1.017-.3a9.8 9.8 0 0 1 5.108 8.615c0 5.406-4.362 9.794-9.75 9.794s-9.75-4.388-9.75-9.794a9.8 9.8 0 0 1 5.108-8.615a.75.75 0 1 1 .717 1.318a8.3 8.3 0 0 0-4.325 7.297c0 4.584 3.697 8.294 8.25 8.294s8.25-3.71 8.25-8.294a8.3 8.3 0 0 0-4.325-7.297a.75.75 0 0 1-.3-1.018"/>`), g.Group(children),
	)
}

func CircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12 2.25c-5.385 0-9.75 4.365-9.75 9.75s4.365 9.75 9.75 9.75s9.75-4.365 9.75-9.75S17.385 2.25 12 2.25"/>`), g.Group(children),
	)
}

func Click(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M6.92 6.956L5.45 5.473m9.309 1.483l1.47-1.483m-10.78 10.88l1.47-1.484m3.92-9.89V3m-5.88 7.913H3m13.875 5.923l3.814-1.506a.496.496 0 0 0 0-.921l-9.165-3.615a.492.492 0 0 0-.635.64l3.582 9.251c.162.42.75.42.912 0z"/>`), g.Group(children),
	)
}

func ClickSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M11.589 3a.75.75 0 0 0-1.5 0v1.978a.75.75 0 0 0 1.5 0zM5.983 4.945A.75.75 0 0 0 4.917 6l1.47 1.483A.75.75 0 1 0 7.452 6.43zM16.761 6a.75.75 0 0 0-1.065-1.055l-1.47 1.484a.75.75 0 1 0 1.065 1.055zM11.8 10.096c-1.025-.404-1.994.617-1.61 1.61l3.581 9.25c.41 1.058 1.901 1.059 2.311 0l1.374-3.543l3.508-1.385c1.048-.414 1.048-1.903 0-2.317zm-6.84.067H3a.75.75 0 0 0 0 1.5h1.96a.75.75 0 0 0 0-1.5m2.492 5.234a.75.75 0 0 0-1.065-1.056l-1.47 1.484a.75.75 0 1 0 1.066 1.056z"/>`), g.Group(children),
	)
}

func Clipboard(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9 5a2 2 0 0 1 2-2h2a2 2 0 0 1 2 2v2H9z"/><path d="M9 5H7a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-2"/></g>`), g.Group(children),
	)
}

func ClipboardSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.354 4.25a2.75 2.75 0 0 1 2.646-2h2a2.75 2.75 0 0 1 2.646 2H17A2.75 2.75 0 0 1 19.75 7v12A2.75 2.75 0 0 1 17 21.75H7A2.75 2.75 0 0 1 4.25 19V7A2.75 2.75 0 0 1 7 4.25zM11 3.75c-.69 0-1.25.56-1.25 1.25v1.25h4.5V5c0-.69-.56-1.25-1.25-1.25z"/>`), g.Group(children),
	)
}

func ClockCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/><path d="M12 6v6l4 2"/></g>`), g.Group(children),
	)
}

func ClockCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12m10.5-6a.75.75 0 0 0-1.5 0v6c0 .284.16.544.415.67l4 2a.75.75 0 1 0 .67-1.34l-3.585-1.793z"/>`), g.Group(children),
	)
}

func ClockDiamond(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M2.707 10.295a2.41 2.41 0 0 0 0 3.41l7.588 7.588a2.41 2.41 0 0 0 3.41 0l7.588-7.588a2.41 2.41 0 0 0 0-3.41l-7.588-7.588a2.41 2.41 0 0 0-3.41 0z"/><path d="M12 6v6l4 2"/></g>`), g.Group(children),
	)
}

func ClockDiamondSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.79 1.49a3.16 3.16 0 0 1 3.445.687l7.588 7.588a3.16 3.16 0 0 1 0 4.47l-7.588 7.588a3.16 3.16 0 0 1-4.47 0l-7.588-7.588a3.16 3.16 0 0 1 0-4.47l7.588-7.589a3.2 3.2 0 0 1 1.025-.685M12.75 6a.75.75 0 0 0-1.5 0v6c0 .284.16.544.415.67l4 2a.75.75 0 1 0 .67-1.34l-3.585-1.793z"/>`), g.Group(children),
	)
}

func ClockEight(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M12 6v6l-4 2"/><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/></g>`), g.Group(children),
	)
}

func ClockEightSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12m10.5-6a.75.75 0 0 0-1.5 0v5.537l-3.585 1.792a.75.75 0 1 0 .67 1.342l4-2A.75.75 0 0 0 12.75 12z"/>`), g.Group(children),
	)
}

func ClockEleven(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M12 6v6L9.5 8"/><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/></g>`), g.Group(children),
	)
}

func ClockElevenSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12m10.5-6a.75.75 0 0 0-1.5 0v3.385l-1.114-1.782a.75.75 0 0 0-1.272.795l2.5 4A.75.75 0 0 0 12.75 12z"/>`), g.Group(children),
	)
}

func ClockFive(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M12 6v6l2.5 4"/><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/></g>`), g.Group(children),
	)
}

func ClockFiveSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12m10.5-6a.75.75 0 0 0-1.5 0v6c0 .14.04.278.114.398l2.5 4a.75.75 0 1 0 1.272-.796l-2.386-3.817z"/>`), g.Group(children),
	)
}

func ClockFour(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M12 6v6l4 2"/><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/></g>`), g.Group(children),
	)
}

func ClockFourSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12m10.5-6a.75.75 0 0 0-1.5 0v6c0 .284.16.544.415.67l4 2a.75.75 0 1 0 .67-1.34l-3.585-1.793z"/>`), g.Group(children),
	)
}

func ClockHand(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M12.147 3v9l6 3"/>`), g.Group(children),
	)
}

func ClockHandSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12.147 2.25a.75.75 0 0 1 .75.75v8.537l5.585 2.792a.75.75 0 1 1-.67 1.342l-6-3a.75.75 0 0 1-.415-.671V3a.75.75 0 0 1 .75-.75"/>`), g.Group(children),
	)
}

func ClockHexagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M20.5 15.8V8.2a1.91 1.91 0 0 0-.944-1.645l-6.612-3.8a1.88 1.88 0 0 0-1.888 0l-6.612 3.8A1.9 1.9 0 0 0 3.5 8.2v7.602a1.91 1.91 0 0 0 .944 1.644l6.612 3.8a1.88 1.88 0 0 0 1.888 0l6.612-3.8A1.9 1.9 0 0 0 20.5 15.8"/><path d="M12 6v6l4 2"/></g>`), g.Group(children),
	)
}

func ClockHexagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.68 2.105a2.63 2.63 0 0 1 2.64 0l.001.001l6.611 3.8A2.65 2.65 0 0 1 21.25 8.2v7.603a2.66 2.66 0 0 1-1.318 2.291l-.003.002l-6.608 3.799h-.002a2.63 2.63 0 0 1-2.639 0h-.001l-6.608-3.8h-.003A2.64 2.64 0 0 1 2.75 15.8V8.198a2.66 2.66 0 0 1 1.318-2.291l.003-.002zM12.75 6a.75.75 0 0 0-1.5 0v6c0 .284.16.544.415.67l4 2a.75.75 0 1 0 .67-1.34l-3.585-1.793z"/>`), g.Group(children),
	)
}

func ClockNine(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M12 6v6H7.5"/><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/></g>`), g.Group(children),
	)
}

func ClockNineSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12m10.5-6a.75.75 0 0 0-1.5 0v5.25H7.5a.75.75 0 0 0 0 1.5H12a.75.75 0 0 0 .75-.75z"/>`), g.Group(children),
	)
}

func ClockOctagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M7.805 3.469C8.16 3.115 8.451 3 8.937 3h6.126c.486 0 .778.115 1.132.469l4.336 4.336c.354.354.469.646.469 1.132v6.126c0 .5-.125.788-.469 1.132l-4.336 4.336c-.354.354-.646.469-1.132.469H8.937c-.5 0-.788-.125-1.132-.469L3.47 16.195c-.355-.355-.47-.646-.47-1.132V8.937c0-.5.125-.788.469-1.132z"/><path d="M12 6v6l4 2"/></g>`), g.Group(children),
	)
}

func ClockOctagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.037 2.408a2.3 2.3 0 0 1 .9-.158h6.126c.302 0 .602.036.9.158s.54.31.762.53l4.337 4.337c.22.221.408.463.53.762c.123.298.158.598.158.9v6.126c0 .313-.039.616-.163.914a2.3 2.3 0 0 1-.525.748l-4.337 4.337a2.3 2.3 0 0 1-.762.53a2.3 2.3 0 0 1-.9.158H8.937c-.313 0-.616-.039-.914-.163a2.3 2.3 0 0 1-.748-.525l-4.337-4.337a2.3 2.3 0 0 1-.53-.762a2.3 2.3 0 0 1-.158-.9V8.937c0-.313.039-.616.163-.914a2.3 2.3 0 0 1 .525-.748l4.337-4.337c.221-.22.463-.408.762-.53M12.75 6a.75.75 0 0 0-1.5 0v6c0 .284.16.544.415.67l4 2a.75.75 0 1 0 .67-1.34l-3.585-1.793z"/>`), g.Group(children),
	)
}

func ClockOne(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M12 6v6l2.5-4"/><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/></g>`), g.Group(children),
	)
}

func ClockOneSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12m10.5-6a.75.75 0 0 0-1.5 0v6a.75.75 0 0 0 1.386.398l2.5-4a.75.75 0 1 0-1.272-.795L12.75 9.385z"/>`), g.Group(children),
	)
}

func ClockSeven(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M12 6v6l-2.5 4"/><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/></g>`), g.Group(children),
	)
}

func ClockSevenSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12m10.5-6a.75.75 0 0 0-1.5 0v5.785l-2.386 3.817a.75.75 0 1 0 1.272.796l2.5-4A.75.75 0 0 0 12.75 12z"/>`), g.Group(children),
	)
}

func ClockSix(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M12 6v10.5m9-4.5a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/>`), g.Group(children),
	)
}

func ClockSixSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12m10.5-6a.75.75 0 0 0-1.5 0v10.5a.75.75 0 0 0 1.5 0z"/>`), g.Group(children),
	)
}

func ClockSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/><path d="M12 6v6l4 2"/></g>`), g.Group(children),
	)
}

func ClockSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057M12.75 6a.75.75 0 0 0-1.5 0v6c0 .284.16.544.415.67l4 2a.75.75 0 1 0 .67-1.34l-3.585-1.793z"/>`), g.Group(children),
	)
}

func ClockTen(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M12 6v6l-4-2"/><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/></g>`), g.Group(children),
	)
}

func ClockTenSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12m10.5-6a.75.75 0 0 0-1.5 0v4.787L8.335 9.329a.75.75 0 0 0-.67 1.342l4 2A.75.75 0 0 0 12.75 12z"/>`), g.Group(children),
	)
}

func ClockThree(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M12 6v6h4.5"/><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/></g>`), g.Group(children),
	)
}

func ClockThreeSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12m10.5-6a.75.75 0 0 0-1.5 0v6c0 .414.336.75.75.75h4.5a.75.75 0 0 0 0-1.5h-3.75z"/>`), g.Group(children),
	)
}

func ClockTwelve(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M12 6v6m9 0a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/>`), g.Group(children),
	)
}

func ClockTwelveSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12m10.5-6a.75.75 0 0 0-1.5 0v6a.75.75 0 0 0 1.5 0z"/>`), g.Group(children),
	)
}

func ClockTwo(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M12 6v6l4-2"/><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/></g>`), g.Group(children),
	)
}

func ClockTwoSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12m10.5-6a.75.75 0 0 0-1.5 0v6a.75.75 0 0 0 1.085.67l4-2a.75.75 0 1 0-.67-1.34l-2.915 1.457z"/>`), g.Group(children),
	)
}

func ClockWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83"/><path d="M12 6v6l4 2"/></g>`), g.Group(children),
	)
}

func ClockWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.565 2.075a3.33 3.33 0 0 1 2.87 0c.394.189.755.497 1.26.928l.079.066c.48.41.939.604 1.58.655l.102.008c.662.053 1.135.09 1.547.236a3.33 3.33 0 0 1 2.03 2.029c.145.412.182.885.235 1.547l.008.102c.051.641.246 1.1.655 1.58l.066.078c.431.506.74.867.928 1.261a3.33 3.33 0 0 1 0 2.87c-.189.394-.497.755-.928 1.26l-.066.079c-.418.49-.605.951-.655 1.58l-.008.102c-.053.662-.09 1.135-.236 1.547a3.33 3.33 0 0 1-2.029 2.03c-.412.145-.885.182-1.547.235l-.102.008c-.641.051-1.1.246-1.58.655l-.079.066c-.505.431-.866.74-1.26.928a3.33 3.33 0 0 1-2.87 0c-.394-.189-.755-.497-1.26-.928l-.079-.066a2.56 2.56 0 0 0-1.58-.655l-.102-.008c-.662-.053-1.135-.09-1.547-.236a3.33 3.33 0 0 1-2.03-2.029c-.145-.412-.182-.885-.235-1.547l-.008-.102a2.56 2.56 0 0 0-.655-1.58l-.066-.079c-.431-.505-.74-.866-.928-1.26a3.33 3.33 0 0 1 0-2.87c.189-.394.497-.755.928-1.26l.066-.079a2.56 2.56 0 0 0 .655-1.58l.008-.102c.053-.662.09-1.135.236-1.547a3.33 3.33 0 0 1 2.029-2.03c.412-.145.885-.182 1.547-.235l.102-.008a2.56 2.56 0 0 0 1.58-.655l.078-.066c.506-.431.867-.74 1.261-.928M12.75 6a.75.75 0 0 0-1.5 0v6c0 .284.16.544.415.67l4 2a.75.75 0 1 0 .67-1.34l-3.585-1.793z"/>`), g.Group(children),
	)
}

func Cloud(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M20.278 17.497c3.678-3.154-.214-7.384-4.256-7.384C13.175-.969-3.526 8.197 3.875 16.55"/>`), g.Group(children),
	)
}

func CloudDownload(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m11.966 11.136l-.004 8M19.825 17c4.495-3.16.475-7.73-3.706-7.73C13.296-1.732-3.265 7.368 4.074 15.662m11.07 1.156L11.962 20L8.78 16.818"/>`), g.Group(children),
	)
}

func CloudDownloadSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M16.596 8.388c-.832-2.66-2.494-4.222-4.493-4.836c-2.087-.641-4.42-.215-6.354.832s-3.576 2.77-4.216 4.859c-.651 2.13-.228 4.533 1.773 6.796a6.14 6.14 0 0 0 4.72 2.211h1.125l2.28 2.28a.75.75 0 0 0 1.061 0l2.28-2.28h2.1c1.218 0 2.778-.227 3.894-1.184c1.036-.888 1.6-1.91 1.713-2.974c.112-1.057-.23-2.06-.82-2.9c-1.065-1.52-3.012-2.627-5.063-2.804m-1.823 9.862H9.15l-.901-.902a.75.75 0 0 1 1.06-1.06l1.902 1.902l.004-7.054a.75.75 0 0 1 1.5 0l-.004 7.053l1.902-1.901a.75.75 0 0 1 1.06 1.06z"/>`), g.Group(children),
	)
}

func CloudLightning(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M19.825 17c4.495-3.16.475-7.73-3.706-7.73C13.296-1.732-3.265 7.368 4.074 15.662"/><path d="M11.501 11L9 16h5.002L11.5 21"/></g>`), g.Group(children),
	)
}

func CloudLightningSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M16.596 8.388c-.832-2.66-2.494-4.222-4.493-4.836c-2.087-.641-4.42-.215-6.354.832s-3.576 2.77-4.216 4.859c-.651 2.13-.228 4.533 1.773 6.796a6.14 6.14 0 0 0 4.72 2.211h4.012l-1.209 2.414a.75.75 0 1 0 1.342.672l1.544-3.086h3.157c1.218 0 2.778-.227 3.894-1.184c1.036-.888 1.6-1.91 1.713-2.974c.112-1.057-.23-2.06-.82-2.9c-1.065-1.52-3.012-2.627-5.063-2.804m-2.881 9.862h-1.677l.75-1.5H9a.75.75 0 0 1-.67-1.085l2.5-5a.75.75 0 0 1 1.342.67l-1.958 3.916h3.788a.75.75 0 0 1 .67 1.085z"/>`), g.Group(children),
	)
}

func CloudRain(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M12.004 19L12 14m4.004 7L16 16m-7.996 1L8 12m11.825 5c4.495-3.16.475-7.73-3.706-7.73C13.296-1.732-3.265 7.368 4.074 15.662"/>`), g.Group(children),
	)
}

func CloudRainSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M16.596 8.388c-.832-2.66-2.494-4.222-4.493-4.836c-2.087-.641-4.42-.215-6.354.832s-3.576 2.77-4.216 4.859c-.651 2.13-.228 4.533 1.773 6.796a6.14 6.14 0 0 0 4.72 2.211h3.228V19a.75.75 0 0 0 1.5 0v-.75h2.498l.002 2.75a.75.75 0 0 0 1.5 0l-.002-2.75h.12c1.218 0 2.778-.227 3.894-1.184c1.036-.888 1.6-1.91 1.713-2.974c.112-1.057-.23-2.06-.82-2.9c-1.065-1.52-3.012-2.627-5.063-2.804m.156 9.862h-1.5L15.25 16a.75.75 0 0 1 1.5 0zm-3.998 0h-1.5L11.25 14a.75.75 0 0 1 1.5 0zm-4.755-7a.75.75 0 0 1 .751.75l.004 5a.75.75 0 1 1-1.5 0l-.004-5a.75.75 0 0 1 .75-.75"/>`), g.Group(children),
	)
}

func CloudSlash(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m2.875 21l2.793-2.793M20.875 3l-5.532 5.532m0 0q.413.803.68 1.831c4.041 0 7.933 4.23 4.255 7.384c-.91.78-2.245 1.003-3.406 1.003H8.026c-.827 0-1.632-.19-2.358-.543m9.675-9.675l-9.675 9.675M3.24 16C-1.307 9.542 7.728 3 13 6"/>`), g.Group(children),
	)
}

func CloudSlashSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M16.596 9.388c2.05.177 3.997 1.285 5.063 2.803c.59.842.932 1.844.82 2.9c-.113 1.066-.677 2.087-1.713 2.975c-1.116.957-2.676 1.184-3.894 1.184H8.026c-.656 0-1.3-.105-1.91-.305L3.53 21.53a.75.75 0 0 1-1.06-1.06l2.21-2.21a6.1 6.1 0 0 1-1.374-1.221c-2-2.263-2.424-4.666-1.773-6.796c.64-2.09 2.28-3.812 4.216-4.86c1.935-1.046 4.267-1.472 6.354-.831c1.403.431 2.64 1.328 3.54 2.745L20.47 2.47a.75.75 0 1 1 1.06 1.06l-5.175 5.176q.13.328.24.682"/>`), g.Group(children),
	)
}

func CloudSnow(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M12.004 17.5L12 17m4.004-1.5L16 15m-7.996.5L8 15m4.004 6L12 20.5m4.004-1.5L16 18.5m-7.996.5L8 18.5M19.825 17c4.495-3.16.475-7.73-3.706-7.73C13.296-1.732-3.265 7.368 4.074 15.662"/>`), g.Group(children),
	)
}

func CloudSnowSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M16.596 8.388c-.832-2.66-2.494-4.222-4.493-4.836c-2.087-.641-4.42-.215-6.354.832s-3.576 2.77-4.216 4.859c-.651 2.13-.228 4.533 1.773 6.796a6.14 6.14 0 0 0 4.003 2.169a.8.8 0 0 0-.059.298l.004.5a.75.75 0 1 0 1.5-.012l-.004-.5a.8.8 0 0 0-.043-.244H12a.75.75 0 0 1-.745-.744l-.004-.5a.75.75 0 0 1 1.5-.012l.004.5a.75.75 0 0 1-.743.756h-.002h3.284a.8.8 0 0 0-.043.256l.004.5a.75.75 0 0 0 1.5-.012l-.004-.5a.8.8 0 0 0-.043-.244h.165c1.218 0 2.778-.227 3.894-1.184c1.036-.888 1.6-1.91 1.713-2.974c.112-1.057-.23-2.06-.82-2.9c-1.065-1.52-3.012-2.627-5.063-2.804m.111 9.862a.75.75 0 0 0-1.414 0zm-8 0a.75.75 0 0 0-1.398-.042q.356.042.717.042zm4.043 2.244a.75.75 0 0 0-1.5.012l.004.5a.75.75 0 0 0 1.5-.012zM7.994 14.25a.75.75 0 0 1 .756.744l.004.5a.75.75 0 0 1-1.5.012l-.004-.5a.75.75 0 0 1 .744-.756m8 0a.75.75 0 0 1 .756.744l.004.5a.75.75 0 0 1-1.5.012l-.004-.5a.75.75 0 0 1 .744-.756"/>`), g.Group(children),
	)
}

func CloudSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12.103 4.552c2 .614 3.66 2.175 4.493 4.836c2.05.177 3.997 1.285 5.063 2.803c.59.842.932 1.844.82 2.9c-.113 1.066-.677 2.087-1.713 2.975c-1.116.957-2.676 1.184-3.894 1.184H8.026a6.14 6.14 0 0 1-4.72-2.211c-2-2.263-2.424-4.666-1.773-6.796c.64-2.09 2.28-3.812 4.216-4.86c1.935-1.046 4.267-1.472 6.354-.831"/>`), g.Group(children),
	)
}

func CloudUpload(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="m11.966 20l-.004-8m7.863 5c4.495-3.16.475-7.73-3.706-7.73C13.296-1.732-3.265 7.368 4.074 15.662"/><path d="m15.144 14.318l-3.182-3.182l-3.182 3.182"/></g>`), g.Group(children),
	)
}

func CloudUploadSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M16.596 8.388c-.832-2.66-2.494-4.222-4.493-4.836c-2.087-.641-4.42-.215-6.354.832s-3.576 2.77-4.216 4.859c-.651 2.13-.228 4.533 1.773 6.796a6.14 6.14 0 0 0 4.72 2.211h3.19V20a.75.75 0 0 0 1.5 0v-1.75h4.156c1.218 0 2.778-.227 3.894-1.184c1.036-.888 1.6-1.91 1.713-2.974c.112-1.057-.23-2.06-.82-2.9c-1.065-1.52-3.012-2.627-5.063-2.804m-3.88 9.862h-1.5l-.004-5.303l-1.902 1.902a.75.75 0 1 1-1.06-1.061l3.182-3.182a.75.75 0 0 1 1.06 0l3.182 3.182a.75.75 0 0 1-1.06 1.06l-1.902-1.9z"/>`), g.Group(children),
	)
}

func Cocktail(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m12 14.25l7.777-9.625C20.306 3.97 19.835 3 18.988 3H5.012c-.847 0-1.318.97-.789 1.625zm0 0V21M6.546 7.5h10.908M7.329 21h9.342"/>`), g.Group(children),
	)
}

func CocktailSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M5.012 2.25c-1.463 0-2.307 1.69-1.372 2.846l7.61 9.42v5.734H7.33a.75.75 0 0 0 0 1.5h9.341a.75.75 0 0 0 0-1.5h-3.92v-5.735l7.61-9.419c.934-1.157.09-2.846-1.373-2.846zm1.893 4.5L4.807 4.153a.25.25 0 0 1 .205-.403h13.976c.231 0 .33.25.206.403L17.096 6.75z"/>`), g.Group(children),
	)
}

func Code(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m17.09 7.974l.23.23c1.789 1.79 2.684 2.684 2.684 3.796s-.895 2.007-2.684 3.796l-.23.23M13.876 5l-3.751 14M6.91 7.974l-.23.23C4.892 9.994 3.997 10.888 3.997 12s.895 2.007 2.685 3.796l.23.23"/>`), g.Group(children),
	)
}

func CodeCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/><path d="m14.908 9.7l.132.131c1.022 1.022 1.534 1.534 1.534 2.169s-.512 1.146-1.534 2.169l-.132.132M13.072 8l-2.143 8M9.092 9.7l-.132.131C7.938 10.853 7.427 11.365 7.427 12s.51 1.146 1.533 2.169l.132.132"/></g>`), g.Group(children),
	)
}

func CodeCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12m11.547-3.806a.75.75 0 1 0-1.45-.388l-2.143 8a.75.75 0 0 0 1.449.388zm1.641.975a.75.75 0 1 0-1.06 1.06l.131.132c.527.526.867.869 1.085 1.155c.205.268.23.396.23.484s-.025.216-.23.484c-.218.286-.558.629-1.085 1.155l-.131.131a.75.75 0 1 0 1.06 1.06l.167-.166c.482-.48.895-.894 1.181-1.27c.307-.402.537-.846.537-1.394s-.23-.992-.537-1.394c-.286-.376-.7-.79-1.18-1.27zm-5.816 0a.75.75 0 0 0-1.06 0l-.167.167c-.481.48-.895.894-1.181 1.27c-.307.402-.537.846-.537 1.394s.23.992.537 1.394c.286.376.7.79 1.18 1.27l.168.167a.75.75 0 0 0 1.06-1.06l-.131-.132c-.527-.526-.867-.869-1.085-1.155c-.205-.268-.23-.396-.23-.484s.025-.216.23-.484c.218-.286.558-.629 1.085-1.155l.131-.131a.75.75 0 0 0 0-1.061"/>`), g.Group(children),
	)
}

func CodeDiamond(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M2.707 10.295a2.41 2.41 0 0 0 0 3.41l7.588 7.588a2.41 2.41 0 0 0 3.41 0l7.588-7.588a2.41 2.41 0 0 0 0-3.41l-7.588-7.588a2.41 2.41 0 0 0-3.41 0z"/><path d="m14.908 9.7l.132.131c1.022 1.023 1.534 1.534 1.534 2.169s-.512 1.147-1.534 2.17l-.132.13M13.072 8l-2.143 8M9.092 9.7l-.132.131C7.938 10.854 7.427 11.365 7.427 12s.51 1.147 1.533 2.17l.132.13"/></g>`), g.Group(children),
	)
}

func CodeDiamondSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.79 1.49a3.16 3.16 0 0 1 3.445.687l7.588 7.588a3.16 3.16 0 0 1 0 4.47l-7.588 7.588a3.16 3.16 0 0 1-4.47 0l-7.588-7.588a3.16 3.16 0 0 1 0-4.47l7.588-7.589a3.2 3.2 0 0 1 1.025-.685m3.007 6.704a.75.75 0 1 0-1.45-.388l-2.143 8a.75.75 0 0 0 1.449.388zm1.641.975a.75.75 0 1 0-1.06 1.06l.131.132c.527.526.867.869 1.085 1.155c.205.268.23.396.23.484s-.025.216-.23.484c-.218.286-.558.629-1.085 1.155l-.131.131a.75.75 0 0 0 1.06 1.061l.167-.167c.482-.48.895-.894 1.181-1.27c.307-.402.537-.846.537-1.394s-.23-.992-.537-1.394c-.286-.376-.7-.789-1.18-1.27zm-5.816 0a.75.75 0 0 0-1.06 0l-.167.167c-.481.48-.895.894-1.181 1.27c-.307.402-.537.846-.537 1.394s.23.992.537 1.394c.286.376.7.79 1.18 1.27l.168.167a.75.75 0 1 0 1.06-1.06l-.131-.132c-.527-.526-.867-.869-1.085-1.155c-.205-.268-.23-.396-.23-.484s.025-.216.23-.484c.218-.286.558-.629 1.085-1.155l.131-.131a.75.75 0 0 0 0-1.06"/>`), g.Group(children),
	)
}

func CodeHexagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M20.5 15.8V8.2a1.91 1.91 0 0 0-.944-1.645l-6.612-3.8a1.88 1.88 0 0 0-1.888 0l-6.612 3.8A1.9 1.9 0 0 0 3.5 8.2v7.602a1.91 1.91 0 0 0 .944 1.644l6.612 3.8a1.88 1.88 0 0 0 1.888 0l6.612-3.8A1.9 1.9 0 0 0 20.5 15.8"/><path d="m14.908 9.7l.132.131c1.022 1.023 1.534 1.534 1.534 2.169s-.512 1.147-1.534 2.17l-.132.13M13.072 8l-2.143 8M9.092 9.7l-.132.131C7.938 10.854 7.427 11.365 7.427 12s.51 1.147 1.533 2.17l.132.13"/></g>`), g.Group(children),
	)
}

func CodeHexagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.68 2.105a2.63 2.63 0 0 1 2.64 0l.001.001l6.611 3.8A2.65 2.65 0 0 1 21.25 8.2v7.603a2.66 2.66 0 0 1-1.318 2.291l-.003.002l-6.608 3.799h-.002a2.63 2.63 0 0 1-2.639 0h-.001l-6.608-3.8h-.003A2.64 2.64 0 0 1 2.75 15.8V8.198a2.66 2.66 0 0 1 1.318-2.291l.003-.002zm3.117 6.09a.75.75 0 1 0-1.45-.39l-2.143 8a.75.75 0 0 0 1.449.39zm1.641.974a.75.75 0 1 0-1.06 1.06l.131.132c.527.526.867.869 1.085 1.155c.205.268.23.396.23.484s-.025.216-.23.484c-.218.286-.558.629-1.085 1.155l-.131.131a.75.75 0 0 0 1.06 1.061l.167-.167c.482-.48.895-.894 1.181-1.27c.307-.402.537-.846.537-1.394s-.23-.992-.537-1.394c-.286-.376-.7-.789-1.18-1.27zm-5.816 0a.75.75 0 0 0-1.06 0l-.167.167c-.481.48-.895.894-1.181 1.27c-.307.402-.537.846-.537 1.394s.23.992.537 1.394c.286.376.7.79 1.18 1.27l.168.167a.75.75 0 1 0 1.06-1.06l-.131-.132c-.527-.526-.867-.869-1.085-1.155c-.205-.268-.23-.396-.23-.484s.025-.216.23-.484c.218-.286.558-.629 1.085-1.155l.131-.131a.75.75 0 0 0 0-1.06"/>`), g.Group(children),
	)
}

func CodeOctagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M7.805 3.469C8.16 3.115 8.451 3 8.937 3h6.126c.486 0 .778.115 1.132.469l4.336 4.336c.354.354.469.646.469 1.132v6.126c0 .5-.125.788-.469 1.132l-4.336 4.336c-.354.354-.646.469-1.132.469H8.937c-.5 0-.788-.125-1.132-.469L3.47 16.195c-.355-.355-.47-.646-.47-1.132V8.937c0-.5.125-.788.469-1.132z"/><path d="m14.908 9.7l.132.131c1.022 1.023 1.534 1.534 1.534 2.169s-.512 1.147-1.534 2.17l-.132.13M13.072 8l-2.143 8M9.092 9.7l-.132.131C7.938 10.854 7.427 11.365 7.427 12s.51 1.147 1.533 2.17l.132.13"/></g>`), g.Group(children),
	)
}

func CodeOctagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.037 2.408a2.3 2.3 0 0 1 .9-.158h6.126c.302 0 .602.036.9.158s.54.31.762.53l4.337 4.337c.22.221.408.463.53.762c.123.298.158.598.158.9v6.126c0 .313-.039.616-.163.914a2.3 2.3 0 0 1-.525.748l-4.337 4.337a2.3 2.3 0 0 1-.762.53a2.3 2.3 0 0 1-.9.158H8.937c-.313 0-.616-.039-.914-.163a2.3 2.3 0 0 1-.748-.525l-4.337-4.337a2.3 2.3 0 0 1-.53-.762a2.3 2.3 0 0 1-.158-.9V8.937c0-.313.039-.616.163-.914a2.3 2.3 0 0 1 .525-.748l4.337-4.337c.221-.22.463-.408.762-.53m5.76 5.786a.75.75 0 1 0-1.45-.388l-2.143 8a.75.75 0 0 0 1.449.388zm1.641.975a.75.75 0 1 0-1.06 1.06l.131.132c.527.526.867.869 1.085 1.155c.205.268.23.396.23.484s-.025.216-.23.484c-.218.286-.558.629-1.085 1.155l-.131.131a.75.75 0 0 0 1.06 1.061l.167-.167c.482-.48.895-.894 1.181-1.27c.307-.402.537-.846.537-1.394s-.23-.992-.537-1.394c-.286-.376-.7-.789-1.18-1.27zm-5.816 0a.75.75 0 0 0-1.06 0l-.167.167c-.481.48-.895.894-1.181 1.27c-.307.402-.537.846-.537 1.394s.23.992.537 1.394c.286.376.7.79 1.18 1.27l.168.167a.75.75 0 1 0 1.06-1.06l-.131-.132c-.527-.526-.867-.869-1.085-1.155c-.205-.268-.23-.396-.23-.484s.025-.216.23-.484c.218-.286.558-.629 1.085-1.155l.131-.131a.75.75 0 0 0 0-1.06"/>`), g.Group(children),
	)
}

func CodeSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M16.56 7.444a.75.75 0 0 1 1.06 0l.23.23l.038.038c.862.862 1.563 1.563 2.04 2.19c.5.652.826 1.312.826 2.098s-.327 1.446-.825 2.099c-.478.626-1.179 1.327-2.04 2.189l-.27.268a.75.75 0 1 1-1.06-1.06l.23-.23c.91-.91 1.538-1.54 1.947-2.077c.397-.52.518-.863.518-1.189s-.121-.67-.518-1.189c-.41-.537-1.037-1.167-1.947-2.076l-.23-.23a.75.75 0 0 1 0-1.061M14.07 4.276a.75.75 0 0 1 .53.918l-3.75 14a.75.75 0 1 1-1.45-.388l3.752-14a.75.75 0 0 1 .918-.53M7.441 7.444a.75.75 0 0 1 0 1.06l-.23.23c-.91.91-1.537 1.54-1.947 2.077c-.397.52-.517.863-.517 1.189s.12.67.517 1.189c.41.537 1.037 1.167 1.947 2.076l.23.23a.75.75 0 0 1-1.06 1.061l-.269-.268c-.862-.862-1.563-1.563-2.04-2.19c-.499-.652-.825-1.312-.825-2.098s.326-1.446.824-2.099c.478-.626 1.179-1.327 2.041-2.189l.269-.268a.75.75 0 0 1 1.06 0"/>`), g.Group(children),
	)
}

func CodeSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/><path d="m14.908 9.7l.132.131c1.022 1.022 1.534 1.534 1.534 2.169s-.512 1.146-1.534 2.169l-.132.132M13.072 8l-2.143 8M9.092 9.7l-.132.131C7.938 10.853 7.427 11.365 7.427 12s.51 1.146 1.533 2.169l.132.132"/></g>`), g.Group(children),
	)
}

func CodeSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057m4.43 5.944a.75.75 0 1 0-1.45-.388l-2.143 8a.75.75 0 0 0 1.449.388zm1.641.975a.75.75 0 1 0-1.06 1.06l.131.132c.527.526.867.869 1.085 1.155c.205.268.23.396.23.484s-.025.216-.23.484c-.218.286-.558.629-1.085 1.155l-.131.131a.75.75 0 1 0 1.06 1.06l.167-.166c.482-.48.895-.894 1.181-1.27c.307-.402.537-.846.537-1.394s-.23-.992-.537-1.394c-.286-.376-.7-.79-1.18-1.27zm-5.816 0a.75.75 0 0 0-1.06 0l-.167.167c-.481.48-.895.894-1.181 1.27c-.307.402-.537.846-.537 1.394s.23.992.537 1.394c.286.376.7.79 1.18 1.27l.168.167a.75.75 0 0 0 1.06-1.06l-.131-.132c-.527-.526-.867-.869-1.085-1.155c-.205-.268-.23-.396-.23-.484s.025-.216.23-.484c.218-.286.558-.629 1.085-1.155l.131-.131a.75.75 0 0 0 0-1.061"/>`), g.Group(children),
	)
}

func CodeWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83"/><path d="m14.908 9.7l.132.131c1.022 1.022 1.534 1.534 1.534 2.169s-.512 1.146-1.534 2.169l-.132.132M13.072 8l-2.143 8M9.092 9.7l-.132.131C7.938 10.853 7.427 11.365 7.427 12s.51 1.146 1.533 2.169l.132.132"/></g>`), g.Group(children),
	)
}

func CodeWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.565 2.075a3.33 3.33 0 0 1 2.87 0c.394.189.755.497 1.26.928l.079.066c.48.41.939.604 1.58.655l.102.008c.662.053 1.135.09 1.547.236a3.33 3.33 0 0 1 2.03 2.029c.145.412.182.885.235 1.547l.008.102c.051.641.246 1.1.655 1.58l.066.078c.431.506.74.867.928 1.261a3.33 3.33 0 0 1 0 2.87c-.189.394-.497.755-.928 1.26l-.066.079c-.418.49-.605.951-.655 1.58l-.008.102c-.053.662-.09 1.135-.236 1.547a3.33 3.33 0 0 1-2.029 2.03c-.412.145-.885.182-1.547.235l-.102.008c-.641.051-1.1.246-1.58.655l-.079.066c-.505.431-.866.74-1.26.928a3.33 3.33 0 0 1-2.87 0c-.394-.189-.755-.497-1.26-.928l-.079-.066a2.56 2.56 0 0 0-1.58-.655l-.102-.008c-.662-.053-1.135-.09-1.547-.236a3.33 3.33 0 0 1-2.03-2.029c-.145-.412-.182-.885-.235-1.547l-.008-.102a2.56 2.56 0 0 0-.655-1.58l-.066-.079c-.431-.505-.74-.866-.928-1.26a3.33 3.33 0 0 1 0-2.87c.189-.394.497-.755.928-1.26l.066-.079a2.56 2.56 0 0 0 .655-1.58l.008-.102c.053-.662.09-1.135.236-1.547a3.33 3.33 0 0 1 2.029-2.03c.412-.145.885-.182 1.547-.235l.102-.008a2.56 2.56 0 0 0 1.58-.655l.078-.066c.506-.431.867-.74 1.261-.928m3.232 6.12a.75.75 0 1 0-1.45-.39l-2.143 8a.75.75 0 0 0 1.449.39zm1.641.974a.75.75 0 1 0-1.06 1.06l.131.132c.527.526.867.869 1.085 1.155c.205.268.23.396.23.484s-.025.216-.23.484c-.218.286-.558.629-1.085 1.155l-.131.131a.75.75 0 1 0 1.06 1.06l.167-.166c.482-.48.895-.894 1.181-1.27c.307-.402.537-.846.537-1.394s-.23-.992-.537-1.394c-.286-.376-.7-.79-1.18-1.27zm-5.816 0a.75.75 0 0 0-1.06 0l-.167.167c-.481.48-.895.894-1.181 1.27c-.307.402-.537.846-.537 1.394s.23.992.537 1.394c.286.376.7.79 1.18 1.27l.168.167a.75.75 0 0 0 1.06-1.06l-.131-.132c-.527-.526-.867-.869-1.085-1.155c-.205-.268-.23-.396-.23-.484s.025-.216.23-.484c.218-.286.558-.629 1.085-1.155l.131-.131a.75.75 0 0 0 0-1.061"/>`), g.Group(children),
	)
}

func Coffee(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M18 10h1.5a2.5 2.5 0 0 1 0 5H18m0-5c0-.53-.36-1-.923-1H4.923A.923.923 0 0 0 4 9.923V17a4 4 0 0 0 4 4h6a4 4 0 0 0 4-4v-2m0-5v5M16 3l-2 3m-1-3l-2 3m-1-3L8 6"/>`), g.Group(children),
	)
}

func CoffeeSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.624 3.416a.75.75 0 1 0-1.248-.832l-2 3a.75.75 0 0 0 1.248.832zm3 0a.75.75 0 1 0-1.248-.832l-2 3a.75.75 0 1 0 1.248.832zm3 0a.75.75 0 1 0-1.248-.832l-2 3a.75.75 0 1 0 1.248.832zM4.923 8.25c-.924 0-1.673.749-1.673 1.673V17A4.75 4.75 0 0 0 8 21.75h6A4.75 4.75 0 0 0 18.75 17v-1.25h.75a3.25 3.25 0 0 0 0-6.5h-.91c-.244-.556-.765-1-1.513-1z"/>`), g.Group(children),
	)
}

func Cog(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M10.11 3.9a1 1 0 0 1 .995-.9h1.79a1 1 0 0 1 .995.9l.033.333a8 8 0 0 1 2.209.915l.259-.212a1 1 0 0 1 1.34.067l1.266 1.266a1 1 0 0 1 .067 1.34l-.212.26c.409.676.72 1.419.915 2.208l.332.033a1 1 0 0 1 .901.995v1.79a1 1 0 0 1-.9.995l-.333.033a8 8 0 0 1-.915 2.209l.212.259a1 1 0 0 1-.067 1.34l-1.266 1.266a1 1 0 0 1-1.34.067l-.26-.212a8 8 0 0 1-2.208.915l-.033.332a1 1 0 0 1-.995.901h-1.79a1 1 0 0 1-.995-.9l-.033-.333a8 8 0 0 1-2.209-.915l-.259.212a1 1 0 0 1-1.34-.067L5.003 17.73a1 1 0 0 1-.067-1.34l.212-.26a8 8 0 0 1-.915-2.208L3.9 13.89a1 1 0 0 1-.9-.995v-1.79a1 1 0 0 1 .9-.995l.333-.033a8 8 0 0 1 .915-2.209l-.212-.259a1 1 0 0 1 .067-1.34L6.27 5.003a1 1 0 0 1 1.34-.067l.26.212a8 8 0 0 1 2.208-.915z"/><path d="M14.5 12a2.5 2.5 0 1 0-5 0a2.5 2.5 0 0 0 5 0"/></g>`), g.Group(children),
	)
}

func CogFour(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M14.5 12a2.5 2.5 0 1 0-5 0a2.5 2.5 0 0 0 5 0"/><path d="M10 4.89c0 1.435-1.802 2.534-3.074 1.792c-2.271-1.223-3.996 2.145-1.99 3.496c1.224.714 1.225 2.88 0 3.595c-2.163 1.311-.189 4.66 1.99 3.486c1.379-.804 3.075.512 3.075 1.956c0 2.411 3.98 2.349 3.98 0c0-1.471 1.67-2.775 3.074-1.956c2.24 1.207 4.168-2.312 1.99-3.486c-1.226-.715-1.225-2.89 0-3.604c2.163-1.311.19-4.66-1.99-3.487c-1.243.726-3.073-.363-3.074-1.792c0-2.56-3.98-2.48-3.98 0"/></g>`), g.Group(children),
	)
}

func CogFourSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M13.841 2.887c-.53-.447-1.21-.643-1.858-.637c-.647.007-1.32.217-1.845.662c-.54.458-.887 1.136-.887 1.977c0 .394-.256.808-.694 1.068c-.435.258-.907.28-1.253.078l-.022-.013c-.743-.4-1.5-.448-2.165-.204c-.648.238-1.144.726-1.45 1.29c-.602 1.113-.546 2.751.85 3.692l.041.026c.318.185.546.612.547 1.15c0 .537-.23.964-.547 1.149l-.01.007c-.72.436-1.134 1.075-1.258 1.773c-.12.679.04 1.362.364 1.92s.835 1.035 1.478 1.273c.66.244 1.416.217 2.15-.178l.022-.013c.384-.224.838-.179 1.252.106c.429.293.695.768.695 1.202c0 .834.354 1.497.905 1.935c.53.421 1.204.605 1.84.6s1.306-.199 1.831-.62c.544-.434.904-1.09.904-1.915c0-.456.267-.932.685-1.219c.402-.276.856-.325 1.261-.089l.023.012c.75.405 1.52.428 2.188.17c.648-.252 1.157-.747 1.474-1.314c.316-.566.472-1.257.343-1.933c-.132-.694-.556-1.322-1.29-1.722c-.313-.188-.539-.613-.539-1.15c0-.54.23-.968.547-1.153l.01-.007c.721-.437 1.135-1.075 1.259-1.773c.12-.679-.041-1.362-.365-1.92c-.323-.557-.835-1.035-1.477-1.273c-.66-.244-1.417-.217-2.15.178l-.023.013c-.327.19-.8.174-1.245-.088s-.7-.674-.701-1.058c0-.854-.341-1.541-.89-2.002M8.75 12a3.25 3.25 0 1 1 6.5 0a3.25 3.25 0 0 1-6.5 0"/>`), g.Group(children),
	)
}

func CogOne(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M14.5 12a2.5 2.5 0 1 0-5 0a2.5 2.5 0 0 0 5 0"/><path d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83"/></g>`), g.Group(children),
	)
}

func CogOneSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.565 2.075c-.394.189-.755.497-1.26.928l-.079.066a2.56 2.56 0 0 1-1.58.655l-.102.008c-.662.053-1.135.09-1.547.236a3.33 3.33 0 0 0-2.03 2.029c-.145.412-.182.885-.235 1.547l-.008.102a2.56 2.56 0 0 1-.655 1.58l-.066.078c-.431.506-.74.867-.928 1.261a3.33 3.33 0 0 0 0 2.87c.189.394.497.755.928 1.26l.066.079c.41.48.604.939.655 1.58l.008.102c.053.662.09 1.135.236 1.547a3.33 3.33 0 0 0 2.029 2.03c.412.145.885.182 1.547.235l.102.008c.629.05 1.09.238 1.58.655l.079.066c.505.431.866.74 1.26.928a3.33 3.33 0 0 0 2.87 0c.394-.189.755-.497 1.26-.928l.079-.066c.48-.41.939-.604 1.58-.655l.102-.008c.662-.053 1.135-.09 1.547-.236a3.33 3.33 0 0 0 2.03-2.029c.145-.412.182-.885.235-1.547l.008-.102c.05-.629.238-1.09.655-1.58l.066-.079c.431-.505.74-.866.928-1.26a3.33 3.33 0 0 0 0-2.87c-.189-.394-.497-.755-.928-1.26l-.066-.079a2.56 2.56 0 0 1-.655-1.58l-.008-.102c-.053-.662-.09-1.135-.236-1.547a3.33 3.33 0 0 0-2.029-2.03c-.412-.145-.885-.182-1.547-.235l-.102-.008a2.56 2.56 0 0 1-1.58-.655l-.079-.066c-.505-.431-.866-.74-1.26-.928a3.33 3.33 0 0 0-2.87 0M8.75 12a3.25 3.25 0 1 1 6.5 0a3.25 3.25 0 0 1-6.5 0"/>`), g.Group(children),
	)
}

func CogSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.391 3.646a1.75 1.75 0 0 1 1.714-1.396h1.79a1.75 1.75 0 0 1 1.714 1.396a8.7 8.7 0 0 1 1.453.602a1.75 1.75 0 0 1 2.2.225l1.265 1.266a1.75 1.75 0 0 1 .225 2.199q.365.693.602 1.453a1.75 1.75 0 0 1 1.396 1.714v1.79a1.75 1.75 0 0 1-1.396 1.714q-.237.76-.602 1.453a1.75 1.75 0 0 1-.225 2.2l-1.266 1.265a1.75 1.75 0 0 1-2.199.225a8.7 8.7 0 0 1-1.453.602a1.75 1.75 0 0 1-1.714 1.396h-1.79a1.75 1.75 0 0 1-1.714-1.396a8.7 8.7 0 0 1-1.453-.602a1.75 1.75 0 0 1-2.2-.225l-1.265-1.266a1.75 1.75 0 0 1-.225-2.199a8.7 8.7 0 0 1-.602-1.453a1.75 1.75 0 0 1-1.396-1.714v-1.79a1.75 1.75 0 0 1 1.396-1.714a8.7 8.7 0 0 1 .602-1.453a1.75 1.75 0 0 1 .225-2.2l1.266-1.265a1.75 1.75 0 0 1 2.199-.225a8.7 8.7 0 0 1 1.453-.602M8.75 12a3.25 3.25 0 1 0 6.5 0a3.25 3.25 0 0 0-6.5 0"/>`), g.Group(children),
	)
}

func CogThree(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M8.4 18.235a7.2 7.2 0 0 0 7.2-12.47m-7.2 12.47A7.2 7.2 0 0 1 5.765 8.4M8.4 18.235l-.9 1.56m8.1-14.03A7.2 7.2 0 0 0 5.765 8.4M15.6 5.765l.9-1.56M5.765 8.4l-1.56-.9m10.295 6l5.294 3M12 21v-1.8M12 9V3m4.5 16.794l-.899-1.558m-8.1-14.03l.898 1.558M20.999 12h-1.798m-16.2 0h1.798m14.995-4.5l-1.558.899M9.5 13.5l-5.294 3"/><path d="M14.5 12a2.5 2.5 0 1 0-5 0a2.5 2.5 0 0 0 5 0"/></g>`), g.Group(children),
	)
}

func CogThreeSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12 2.25a.75.75 0 0 1 .75.75v1.085a8 8 0 0 1 2.558.686l.543-.94a.75.75 0 1 1 1.298.75l-.542.94a8 8 0 0 1 1.872 1.872l.94-.542a.75.75 0 0 1 .75 1.299l-.94.542a8 8 0 0 1 .686 2.558h1.084a.75.75 0 1 1 .001 1.5h-1.085a8 8 0 0 1-.69 2.566l.939.531a.75.75 0 1 1-.74 1.306l-.95-.539a8 8 0 0 1-1.867 1.865l.543.94a.75.75 0 1 1-1.3.75l-.542-.94a8 8 0 0 1-2.558.686v1.084a.75.75 0 1 1-1.5.001v-1.085a8 8 0 0 1-2.558-.686l-.542.94a.75.75 0 0 1-1.3-.75l.543-.94a8 8 0 0 1-1.867-1.865l-.95.538a.75.75 0 1 1-.74-1.305l.938-.531a8 8 0 0 1-.689-2.567l-1.084.001A.75.75 0 0 1 3 11.25h1.086a8 8 0 0 1 .685-2.558l-.94-.543a.75.75 0 1 1 .75-1.299l.94.543a8 8 0 0 1 1.872-1.872l-.542-.94a.75.75 0 0 1 1.299-.75l.542.94a8 8 0 0 1 2.558-.686V3a.75.75 0 0 1 .75-.75m-.75 3.344a6.45 6.45 0 0 0-5.165 8.979L8.9 12.978a3.25 3.25 0 0 1 2.35-4.141zm1.5 3.243a3.25 3.25 0 0 1 2.35 4.141l2.815 1.595a6.45 6.45 0 0 0-5.165-8.98zm4.41 7.033l-2.83-1.604a3.24 3.24 0 0 1-2.33.984a3.24 3.24 0 0 1-2.33-.984L6.84 15.87a6.45 6.45 0 0 0 10.32 0"/>`), g.Group(children),
	)
}

func CogTwo(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M14.5 12a2.5 2.5 0 1 0-5 0a2.5 2.5 0 0 0 5 0"/><path d="M20.5 15.8V8.2a1.91 1.91 0 0 0-.944-1.645l-6.612-3.8a1.88 1.88 0 0 0-1.888 0l-6.612 3.8A1.9 1.9 0 0 0 3.5 8.2v7.602a1.91 1.91 0 0 0 .944 1.644l6.612 3.8a1.88 1.88 0 0 0 1.888 0l6.612-3.8A1.9 1.9 0 0 0 20.5 15.8"/></g>`), g.Group(children),
	)
}

func CogTwoSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="m10.68 2.105l-6.61 3.8l-.002.002A2.65 2.65 0 0 0 2.75 8.198v7.603a2.64 2.64 0 0 0 1.318 2.292l.003.002l6.608 3.799h.002a2.63 2.63 0 0 0 2.639 0h.001l6.608-3.8h.003A2.65 2.65 0 0 0 21.25 15.8V8.2a2.65 2.65 0 0 0-1.318-2.292l-6.61-3.8l-.002-.002a2.63 2.63 0 0 0-2.64 0M8.75 12a3.25 3.25 0 1 1 6.5 0a3.25 3.25 0 0 1-6.5 0"/>`), g.Group(children),
	)
}

func Columns(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M17.5 3a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1h-3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1zm-8 0a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1h-3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1z"/>`), g.Group(children),
	)
}

func ColumnsSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M14.5 2.25A1.75 1.75 0 0 0 12.75 4v16c0 .966.784 1.75 1.75 1.75h3A1.75 1.75 0 0 0 19.25 20V4a1.75 1.75 0 0 0-1.75-1.75zm-8 0A1.75 1.75 0 0 0 4.75 4v16c0 .966.784 1.75 1.75 1.75h3A1.75 1.75 0 0 0 11.25 20V4A1.75 1.75 0 0 0 9.5 2.25z"/>`), g.Group(children),
	)
}

func Command(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M15.012 5.977v12.046c0 2.645 3.316 3.954 5.14 2.13c1.825-1.825.516-5.141-2.13-5.141H5.978c-2.645 0-3.953 3.316-2.13 5.14c1.825 1.825 5.142.516 5.142-2.13V5.978c0-2.645-3.317-3.953-5.141-2.13c-1.824 1.825-.516 5.142 2.13 5.142h12.045c2.645 0 3.954-3.317 2.13-5.141s-5.141-.516-5.141 2.13"/>`), g.Group(children),
	)
}

func CommandSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M14.261 5.977c0-3.33 4.137-4.944 6.422-2.66c2.284 2.285.67 6.422-2.66 6.422H15.76v4.522h2.262c3.33 0 4.944 4.137 2.66 6.422c-2.285 2.284-6.422.67-6.422-2.66v-2.261H9.738v2.26c0 3.331-4.136 4.945-6.42 2.66c-2.285-2.284-.671-6.42 2.659-6.42h2.261V9.739H5.977c-3.33 0-4.944-4.137-2.66-6.422c2.285-2.284 6.421-.67 6.421 2.66V8.24h4.523zm0 3.762H9.738v4.522h4.523z"/>`), g.Group(children),
	)
}

func Compass(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/><path d="m9 15l1.5-4.5L15 9l-1.5 4.5z"/></g>`), g.Group(children),
	)
}

func CompassSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="m10.186 13.814l.907-2.721l2.721-.907l-.907 2.721z"/><path d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12m13.462-2.763a.75.75 0 0 0-.95-.949l-4.5 1.5a.75.75 0 0 0-.473.475l-1.5 4.5a.75.75 0 0 0 .948.948l4.5-1.5a.75.75 0 0 0 .474-.474z"/></g>`), g.Group(children),
	)
}

func Components(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M8.85 6.15L12 3l3.15 3.15L12 9.3zm5.85 6.3l3.15-3.15L21 12.45l-3.15 3.15zm-5.85 5.4L12 14.7l3.15 3.15L12 21zM3 12l3.15-3.15L9.3 12l-3.15 3.15z"/>`), g.Group(children),
	)
}

func ComponentsSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12.53 2.47a.75.75 0 0 0-1.06 0L8.32 5.62a.75.75 0 0 0 0 1.06l3.15 3.15a.75.75 0 0 0 1.06 0l3.15-3.15a.75.75 0 0 0 0-1.06zm5.85 6.3a.75.75 0 0 0-1.06 0l-3.15 3.15a.75.75 0 0 0 0 1.06l3.15 3.15a.75.75 0 0 0 1.06 0l3.15-3.15a.75.75 0 0 0 0-1.06zm-5.85 5.4a.75.75 0 0 0-1.06 0l-3.15 3.15a.75.75 0 0 0 0 1.06l3.15 3.15a.75.75 0 0 0 1.06 0l3.15-3.15a.75.75 0 0 0 0-1.06zM6.68 8.32a.75.75 0 0 0-1.06 0l-3.15 3.15a.75.75 0 0 0 0 1.06l3.15 3.15a.75.75 0 0 0 1.06 0l3.15-3.15a.75.75 0 0 0 0-1.06z"/>`), g.Group(children),
	)
}

func Confetti(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3.675 20.971a.508.508 0 0 1-.65-.637L5.615 9.21c.12-.374.6-.475.862-.183l7.756 7.544a.51.51 0 0 1-.212.82zm7.219-11.695L13.3 6.66q1.925-2.092.481-3.661M8 5.25v-.5m12-.25V4m0 9.5V13m-2 5.5V18m-4.219-5.586l2.406-2.615q2.407-2.616 4.813 0"/>`), g.Group(children),
	)
}

func ConfettiSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M13.273 2.448a.75.75 0 0 1 1.06.044c.606.658.907 1.44.793 2.305c-.108.826-.58 1.618-1.274 2.372l-2.406 2.615a.75.75 0 1 1-1.104-1.016l2.406-2.615c.59-.64.84-1.157.891-1.551c.047-.354-.053-.706-.41-1.094a.75.75 0 0 1 .044-1.06M8 4a.75.75 0 0 1 .75.75v.5a.75.75 0 1 1-1.5 0v-.5A.75.75 0 0 1 8 4m12-.75a.75.75 0 0 1 .75.75v.5a.75.75 0 0 1-1.5 0V4a.75.75 0 0 1 .75-.75m0 9a.75.75 0 0 1 .75.75v.5a.75.75 0 0 1-1.5 0V13a.75.75 0 0 1 .75-.75m-2 5a.75.75 0 0 1 .75.75v.5a.75.75 0 0 1-1.5 0V18a.75.75 0 0 1 .75-.75m.594-8.009c-.51 0-1.126.274-1.855 1.066l-2.406 2.614a.75.75 0 1 1-1.104-1.015l2.407-2.615c.876-.952 1.863-1.55 2.958-1.55s2.082.598 2.958 1.55a.75.75 0 0 1-1.104 1.016c-.728-.792-1.345-1.066-1.854-1.066M4.901 8.98a1.258 1.258 0 0 1 2.114-.477l7.741 7.53a1.26 1.26 0 0 1-.49 2.066L3.92 21.68c-.97.337-1.904-.566-1.62-1.54l2.585-11.1q.006-.03.016-.06"/>`), g.Group(children),
	)
}

func Config(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M21 5h-3m-4.25-2v4M13 5H3m4 7H3m7.75-2v4M21 12H11m10 7h-3m-4.25-2v4M13 19H3"/>`), g.Group(children),
	)
}

func ConfigSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M13.75 2.25a.75.75 0 0 1 .75.75v4A.75.75 0 0 1 13 7V5.75H3a.75.75 0 0 1 0-1.5h10V3a.75.75 0 0 1 .75-.75M17.25 5a.75.75 0 0 1 .75-.75h3a.75.75 0 0 1 0 1.5h-3a.75.75 0 0 1-.75-.75m-6.5 4.25a.75.75 0 0 1 .75.75v1.25H21a.75.75 0 0 1 0 1.5h-9.5V14a.75.75 0 0 1-1.5 0v-4a.75.75 0 0 1 .75-.75M2.25 12a.75.75 0 0 1 .75-.75h4a.75.75 0 0 1 0 1.5H3a.75.75 0 0 1-.75-.75m11.5 4.25a.75.75 0 0 1 .75.75v4a.75.75 0 0 1-1.5 0v-1.25H3a.75.75 0 0 1 0-1.5h10V17a.75.75 0 0 1 .75-.75m3.5 2.75a.75.75 0 0 1 .75-.75h3a.75.75 0 0 1 0 1.5h-3a.75.75 0 0 1-.75-.75"/>`), g.Group(children),
	)
}

func ConfigVertical(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M5 3v3m-2 4.25h4M5 11v10m7-4v4m-2-7.75h4M12 3v10m7-10v3m-2 4.25h4M19 11v10"/>`), g.Group(children),
	)
}

func ConfigVerticalSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M19 2.25a.75.75 0 0 1 .75.75v3a.75.75 0 0 1-1.5 0V3a.75.75 0 0 1 .75-.75m-7 0a.75.75 0 0 1 .75.75v9.5H14a.75.75 0 0 1 0 1.5h-4a.75.75 0 0 1 0-1.5h1.25V3a.75.75 0 0 1 .75-.75m-7 0a.75.75 0 0 1 .75.75v3a.75.75 0 0 1-1.5 0V3A.75.75 0 0 1 5 2.25m-2.75 8A.75.75 0 0 1 3 9.5h4A.75.75 0 0 1 7 11H5.75v10a.75.75 0 0 1-1.5 0V11H3a.75.75 0 0 1-.75-.75m14 0A.75.75 0 0 1 17 9.5h4a.75.75 0 0 1 0 1.5h-1.25v10a.75.75 0 0 1-1.5 0V11H17a.75.75 0 0 1-.75-.75m-4.25 6a.75.75 0 0 1 .75.75v4a.75.75 0 0 1-1.5 0v-4a.75.75 0 0 1 .75-.75"/>`), g.Group(children),
	)
}

func Contactless(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M17.46 21c1.32-2.76 2.04-5.76 2.04-9s-.72-6.36-2.04-9m-4.32 15.96C14.1 16.8 14.7 14.4 14.7 12s-.6-4.92-1.56-7.08m-4.32 12C9.54 15.36 9.9 13.68 9.9 12s-.36-3.48-1.08-4.92M4.5 14.76c.36-.84.6-1.8.6-2.76s-.24-2.04-.6-2.88"/>`), g.Group(children),
	)
}

func ContactlessCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M8 9.99a9 9 0 0 1 0 4.02m2.975-5.59a13 13 0 0 1 .5 3.58a13 13 0 0 1-.5 3.58m3.25-8.72a17 17 0 0 1 .79 5.14a17 17 0 0 1-.79 5.14"/><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/></g>`), g.Group(children),
	)
}

func ContactlessCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12m12.69-5.367a.75.75 0 0 0-1.43.453c.49 1.55.755 3.2.755 4.914s-.265 3.365-.756 4.914a.75.75 0 0 0 1.43.453c.537-1.694.826-3.498.826-5.367c0-1.87-.289-3.673-.826-5.367m-3.244 1.581a.75.75 0 1 0-1.442.412c.306 1.071.47 2.203.47 3.374c0 1.17-.164 2.302-.47 3.373a.75.75 0 1 0 1.442.412A13.8 13.8 0 0 0 12.223 12c0-1.312-.184-2.582-.528-3.786M7.833 9.258a.75.75 0 0 0-.564.899a8.3 8.3 0 0 1 0 3.687a.75.75 0 0 0 1.462.333a9.8 9.8 0 0 0 0-4.354a.75.75 0 0 0-.898-.565"/>`), g.Group(children),
	)
}

func ContactlessSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M17.125 2.33a.75.75 0 0 1 1.006.335C19.506 5.415 20.25 8.652 20.25 12c0 3.355-.746 6.465-2.113 9.324a.75.75 0 1 1-1.354-.648A19.9 19.9 0 0 0 18.75 12c0-3.132-.697-6.136-1.96-8.665a.75.75 0 0 1 .335-1.006m-4.29 1.905a.75.75 0 0 1 .99.38C14.823 6.86 15.45 9.483 15.45 12c0 2.522-.63 5.026-1.625 7.265a.75.75 0 1 1-1.37-.61c.925-2.08 1.495-4.377 1.495-6.655c0-2.283-.573-4.7-1.495-6.775a.75.75 0 0 1 .38-.99m-4.35 2.174a.75.75 0 0 1 1.006.335c.781 1.563 1.16 3.482 1.16 5.256a12.5 12.5 0 0 1-1.15 5.234a.75.75 0 0 1-1.362-.628A11 11 0 0 0 9.15 12c0-1.586-.342-3.267-1-4.585a.75.75 0 0 1 .335-1.006m-4.28 2.022a.75.75 0 0 1 .984.394c.398.927.66 2.107.66 3.175c0 1.08-.268 2.142-.66 3.056a.75.75 0 1 1-1.378-.591c.328-.766.539-1.626.539-2.465c0-.852-.217-1.832-.54-2.584a.75.75 0 0 1 .395-.985"/>`), g.Group(children),
	)
}

func Controller(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M7.5 11.5v3M6 13h3m3-4.653c2.005 0 3.7-1.888 5.786-1.212c2.264.733 3.82 3.413 3.708 9.492c-.022 1.224-.336 2.578-1.546 3.106c-2.797 1.221-4.397-2.328-7-2.328h-1.897c-2.605 0-4.213 3.545-6.998 2.328c-1.21-.528-1.525-1.882-1.547-3.107c-.113-6.078 1.444-8.758 3.708-9.491C8.299 6.459 9.994 8.347 12 8.347m0-4.565v4.342M14.874 13h3"/>`), g.Group(children),
	)
}

func ControllerSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12 3.032a.75.75 0 0 1 .75.75v3.715c.428-.109.867-.296 1.371-.51q.219-.094.455-.192c.952-.395 2.122-.801 3.441-.374c1.37.444 2.474 1.472 3.203 3.157c.718 1.66 1.081 3.97 1.024 7.062c-.023 1.255-.34 3.057-1.996 3.78c-1.789.782-3.198-.024-4.296-.774a41 41 0 0 1-.483-.337c-.376-.265-.72-.507-1.089-.714c-.499-.28-.957-.44-1.431-.44H11.05c-.475 0-.935.16-1.435.44c-.37.207-.716.45-1.094.716q-.229.162-.48.334c-1.097.748-2.506 1.555-4.29.776c-1.656-.724-1.973-2.526-1.996-3.78c-.057-3.093.306-5.403 1.024-7.063c.73-1.685 1.833-2.713 3.203-3.157c1.32-.427 2.489-.02 3.441.374q.237.098.455.192c.504.214.943.401 1.371.51V3.782a.75.75 0 0 1 .75-.75M8.25 11.5a.75.75 0 0 0-1.5 0v.75H6a.75.75 0 0 0 0 1.5h.75v.75a.75.75 0 0 0 1.5 0v-.75H9a.75.75 0 0 0 0-1.5h-.75zm6.624.75a.75.75 0 0 0 0 1.5h3a.75.75 0 0 0 0-1.5z"/>`), g.Group(children),
	)
}

func Cookie(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M12.003 21a9.003 9.003 0 0 0 8.996-8.658c.006-.153-.16-.25-.298-.181c-2.476 1.247-4.006-.077-3.757-1.854a.23.23 0 0 0-.252-.257c-2.171.303-3.086-1.014-2.744-2.804a.225.225 0 0 0-.201-.261c-2.043-.182-2.212-2.54-1.861-3.69c.043-.142-.059-.3-.207-.295a9.003 9.003 0 0 0 .324 18M15 16.354l.354-.354M10 17.354l.354-.354M8 8.354L8.353 8M7 13.354L7.353 13M12 12.354l.354-.354"/>`), g.Group(children),
	)
}

func CookieSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M11.652 2.25c.759-.026 1.116.724.951 1.264a3.14 3.14 0 0 0 .027 1.75c.182.544.526.915 1.183.973c.554.05.983.569.872 1.15c-.145.758.004 1.267.254 1.548c.236.266.718.502 1.649.372c.66-.092 1.185.488 1.098 1.104c-.091.655.15 1.103.501 1.314c.363.219 1.075.321 2.177-.234c.592-.298 1.414.095 1.385.88c-.197 5.213-4.485 9.379-9.746 9.379a9.75 9.75 0 0 1-9.753-9.753c0-5.269 4.178-9.561 9.402-9.746M8.884 8.53a.75.75 0 1 0-1.06-1.06l-.354.353a.75.75 0 0 0 1.06 1.06zm4 4a.75.75 0 1 0-1.06-1.06l-.354.353a.75.75 0 0 0 1.06 1.06zm-5 1a.75.75 0 1 0-1.06-1.06l-.354.353a.75.75 0 0 0 1.06 1.06zm8 3a.75.75 0 1 0-1.06-1.06l-.354.353a.75.75 0 0 0 1.06 1.06zm-5 1a.75.75 0 1 0-1.06-1.06l-.354.353a.75.75 0 0 0 1.06 1.06z"/>`), g.Group(children),
	)
}

func Copy(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M20.829 12.861c.171-.413.171-.938.171-1.986s0-1.573-.171-1.986a2.25 2.25 0 0 0-1.218-1.218c-.413-.171-.938-.171-1.986-.171H11.1c-1.26 0-1.89 0-2.371.245a2.25 2.25 0 0 0-.984.984C7.5 9.209 7.5 9.839 7.5 11.1v6.525c0 1.048 0 1.573.171 1.986c.229.551.667.99 1.218 1.218c.413.171.938.171 1.986.171s1.573 0 1.986-.171m7.968-7.968a2.25 2.25 0 0 1-1.218 1.218c-.413.171-.938.171-1.986.171s-1.573 0-1.986.171a2.25 2.25 0 0 0-1.218 1.218c-.171.413-.171.938-.171 1.986s0 1.573-.171 1.986a2.25 2.25 0 0 1-1.218 1.218m7.968-7.968a11.68 11.68 0 0 1-7.75 7.9l-.218.068M16.5 7.5v-.9c0-1.26 0-1.89-.245-2.371a2.25 2.25 0 0 0-.983-.984C14.79 3 14.16 3 12.9 3H6.6c-1.26 0-1.89 0-2.371.245a2.25 2.25 0 0 0-.984.984C3 4.709 3 5.339 3 6.6v6.3c0 1.26 0 1.89.245 2.371c.216.424.56.768.984.984c.48.245 1.111.245 2.372.245H7.5"/>`), g.Group(children),
	)
}

func CopySolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M6.569 2.25h6.362c.604 0 1.102 0 1.508.033c.421.035.809.109 1.173.294a3 3 0 0 1 1.311 1.311c.186.364.26.752.294 1.173c.033.406.033.904.033 1.508v.181h.4c.503 0 .918 0 1.257.023c.352.024.678.076.991.205a3 3 0 0 1 1.624 1.624c.13.313.18.639.205.99c.023.34.023.755.023 1.257v.052c0 .502 0 .917-.023 1.256a3.2 3.2 0 0 1-.189.95a12.43 12.43 0 0 1-8.236 8.37l-.189.059a3.1 3.1 0 0 1-.956.19c-.34.024-.754.024-1.256.024h-.052c-.502 0-.917 0-1.256-.023c-.352-.024-.678-.076-.991-.205a3 3 0 0 1-1.624-1.624c-.13-.313-.18-.639-.205-.99c-.023-.34-.023-.755-.023-1.257v-.401h-.18c-.604 0-1.103 0-1.509-.033c-.421-.035-.809-.108-1.173-.294a3 3 0 0 1-1.311-1.311c-.185-.364-.26-.752-.294-1.173c-.033-.406-.033-.904-.033-1.508V6.569c0-.604 0-1.102.033-1.508c.035-.421.109-.809.294-1.173a3 3 0 0 1 1.311-1.311c.364-.185.752-.26 1.173-.294c.406-.033.904-.033 1.508-.033M8.25 17.625c0 .534 0 .898.02 1.18c.018.276.053.419.094.519a1.5 1.5 0 0 0 .812.812c.1.041.243.076.519.094c.282.02.646.02 1.18.02s.898 0 1.18-.02c.276-.018.419-.053.519-.094a1.5 1.5 0 0 0 .812-.812c.041-.1.075-.243.094-.519c.02-.282.02-.646.02-1.18v-.026c0-.502 0-.917.023-1.256c.024-.352.076-.678.205-.991a3 3 0 0 1 1.624-1.624c.313-.13.639-.18.99-.205c.34-.023.755-.023 1.257-.023h.026c.534 0 .898 0 1.18-.02c.276-.019.419-.053.519-.094a1.5 1.5 0 0 0 .812-.812c.041-.1.076-.243.094-.519c.02-.282.02-.646.02-1.18s0-.898-.02-1.18c-.018-.276-.053-.419-.094-.519a1.5 1.5 0 0 0-.812-.812c-.1-.041-.243-.076-.519-.094c-.282-.02-.646-.02-1.18-.02H11.1c-.642 0-1.08 0-1.417.028c-.329.027-.497.076-.614.135a1.5 1.5 0 0 0-.656.656c-.06.117-.108.285-.135.614c-.027.338-.028.775-.028 1.417z"/>`), g.Group(children),
	)
}

func Copyleft(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/><path d="M9.75 9c.48-.6 1.07-1 2-1c4.172 0 4.172 8 0 8c-.93 0-1.52-.4-2-1"/></g>`), g.Group(children),
	)
}

func CopyleftSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12m8.085-2.53c.373-.466.763-.72 1.415-.72c.766 0 1.33.353 1.73.928c.416.598.649 1.44.649 2.322s-.233 1.724-.648 2.322c-.4.575-.965.928-1.731.928c-.652 0-1.042-.254-1.415-.72a.75.75 0 1 0-1.17.94c.587.732 1.377 1.28 2.585 1.28c1.32 0 2.32-.647 2.962-1.572c.627-.902.917-2.06.917-3.178s-.29-2.276-.917-3.178c-.643-.925-1.642-1.572-2.962-1.572c-1.208 0-1.998.548-2.585 1.28a.75.75 0 0 0 1.17.94"/>`), g.Group(children),
	)
}

func Copyright(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/><path d="M14 9c-.48-.6-1.07-1-2-1c-4.172 0-4.172 8 0 8c.93 0 1.52-.4 2-1"/></g>`), g.Group(children),
	)
}

func CopyrightSlash(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="m3 21l2.636-2.636M21 3l-2.636 2.636m0 0A9 9 0 1 1 5.636 18.364M18.364 5.636L5.636 18.364m-2.02-3.087A9 9 0 0 1 15.277 3.615"/><path d="M14 9c-.48-.6-1.07-1-2-1c-4.172 0-4.172 8 0 8c.93 0 1.52-.4 2-1"/></g>`), g.Group(children),
	)
}

func CopyrightSlashSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12A9.75 9.75 0 0 1 12 2.25a9.7 9.7 0 0 1 6.344 2.346L20.47 2.47a.75.75 0 1 1 1.06 1.06l-2.126 2.126A9.7 9.7 0 0 1 21.75 12A9.75 9.75 0 0 1 12 21.75a9.7 9.7 0 0 1-6.344-2.346L3.53 21.53a.75.75 0 0 1-1.06-1.06l2.126-2.126A9.7 9.7 0 0 1 2.25 12M12 7.25c-1.32 0-2.32.647-2.962 1.572c-.628.902-.917 2.06-.917 3.178c0 .8.149 1.622.463 2.355l1.18-1.18A4.8 4.8 0 0 1 9.622 12c0-.883.233-1.724.648-2.322c.4-.575.965-.928 1.73-.928c.652 0 1.043.254 1.416.72l.025.03l1.065-1.066C13.927 7.75 13.155 7.25 12 7.25m2.585 8.22a.75.75 0 0 0-1.17-.94c-.373.466-.763.72-1.415.72a1.98 1.98 0 0 1-1.523-.666l-1.061 1.06A3.47 3.47 0 0 0 12 16.75c1.208 0 1.998-.548 2.585-1.28"/>`), g.Group(children),
	)
}

func CopyrightSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12M12 7.25c-1.32 0-2.32.647-2.962 1.572c-.628.902-.917 2.06-.917 3.178s.29 2.276.917 3.178c.643.925 1.642 1.572 2.962 1.572c1.208 0 1.998-.548 2.585-1.28a.75.75 0 0 0-1.17-.94c-.373.466-.763.72-1.415.72c-.766 0-1.33-.353-1.73-.928c-.416-.598-.649-1.44-.649-2.322s.233-1.724.648-2.322c.4-.575.965-.928 1.73-.928c.652 0 1.043.254 1.416.72a.75.75 0 0 0 1.17-.94c-.587-.732-1.377-1.28-2.585-1.28"/>`), g.Group(children),
	)
}

func CornerDownLeft(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M5 13.973h10a4 4 0 0 0 4-4V5M5 13.973l4.78-5.027M5 13.973L9.78 19"/>`), g.Group(children),
	)
}

func CornerDownLeftSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.237 19.517a.75.75 0 0 0 1.06.027v-4.821H15a4.75 4.75 0 0 0 4.75-4.75V5a.75.75 0 0 0-1.5 0v4.973a3.25 3.25 0 0 1-3.25 3.25h-4.703V8.402a.75.75 0 0 0-1.06.027l-4.78 5.027a.75.75 0 0 0 0 1.034z"/>`), g.Group(children),
	)
}

func CornerDownRight(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M19 13.973H9a4 4 0 0 1-4-4V5m14 8.973l-4.78-5.027M19 13.973L14.22 19"/>`), g.Group(children),
	)
}

func CornerDownRightSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M14.763 19.517a.75.75 0 0 1-1.06.027v-4.821H9a4.75 4.75 0 0 1-4.75-4.75V5a.75.75 0 0 1 1.5 0v4.973A3.25 3.25 0 0 0 9 13.223h4.703V8.402a.75.75 0 0 1 1.06.027l4.78 5.027a.75.75 0 0 1 0 1.034z"/>`), g.Group(children),
	)
}

func CornerLeftDown(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M10.027 19V9a4 4 0 0 1 4-4H19m-8.973 14l5.028-4.78M10.027 19L5 14.22"/>`), g.Group(children),
	)
}

func CornerLeftDownSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M4.483 14.763a.75.75 0 0 1-.026-1.06h4.82V9a4.75 4.75 0 0 1 4.75-4.75H19a.75.75 0 0 1 0 1.5h-4.973A3.25 3.25 0 0 0 10.777 9v4.703h4.821a.75.75 0 0 1-.027 1.06l-5.027 4.78a.75.75 0 0 1-1.034 0z"/>`), g.Group(children),
	)
}

func CornerLeftUp(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M10.027 5v10a4 4 0 0 0 4 4H19M10.027 5l5.028 4.78M10.027 5L5 9.78"/>`), g.Group(children),
	)
}

func CornerLeftUpSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M4.483 9.237a.75.75 0 0 0-.026 1.06h4.82V15a4.75 4.75 0 0 0 4.75 4.75H19a.75.75 0 0 0 0-1.5h-4.973a3.25 3.25 0 0 1-3.25-3.25v-4.703h4.821a.75.75 0 0 0-.027-1.06l-5.027-4.78a.75.75 0 0 0-1.034 0z"/>`), g.Group(children),
	)
}

func CornerRightDown(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M13.973 19V9a4 4 0 0 0-4-4H5m8.973 14l-5.027-4.78M13.973 19L19 14.22"/>`), g.Group(children),
	)
}

func CornerRightDownSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M19.517 14.763a.75.75 0 0 0 .027-1.06h-4.821V9a4.75 4.75 0 0 0-4.75-4.75H5a.75.75 0 0 0 0 1.5h4.973A3.25 3.25 0 0 1 13.223 9v4.703H8.402a.75.75 0 0 0 .027 1.06l5.027 4.78a.75.75 0 0 0 1.034 0z"/>`), g.Group(children),
	)
}

func CornerRightUp(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M13.973 5v10a4 4 0 0 1-4 4H5m8.973-14L8.946 9.78M13.973 5L19 9.78"/>`), g.Group(children),
	)
}

func CornerRightUpSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M19.517 9.237c.3.285.312.76.027 1.06h-4.821V15a4.75 4.75 0 0 1-4.75 4.75H5a.75.75 0 0 1 0-1.5h4.973a3.25 3.25 0 0 0 3.25-3.25v-4.703H8.402a.75.75 0 0 1 .027-1.06l5.027-4.78a.75.75 0 0 1 1.034 0z"/>`), g.Group(children),
	)
}

func CornerUpLeft(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M5 10.027h10a4 4 0 0 1 4 4V19M5 10.027l4.78 5.028M5 10.027L9.78 5"/>`), g.Group(children),
	)
}

func CornerUpLeftSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.237 4.483a.75.75 0 0 1 1.06-.026v4.82H15a4.75 4.75 0 0 1 4.75 4.75V19a.75.75 0 0 1-1.5 0v-4.973a3.25 3.25 0 0 0-3.25-3.25h-4.703v4.821a.75.75 0 0 1-1.06-.027l-4.78-5.027a.75.75 0 0 1 0-1.034z"/>`), g.Group(children),
	)
}

func CornerUpRight(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M19 10.027H9a4 4 0 0 0-4 4V19m14-8.973l-4.78 5.028M19 10.027L14.22 5"/>`), g.Group(children),
	)
}

func CornerUpRightSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M14.763 4.483a.75.75 0 0 0-1.06-.026v4.82H9a4.75 4.75 0 0 0-4.75 4.75V19a.75.75 0 0 0 1.5 0v-4.973A3.25 3.25 0 0 1 9 10.777h4.703v4.821a.75.75 0 0 0 1.06-.027l4.78-5.027a.75.75 0 0 0 0-1.034z"/>`), g.Group(children),
	)
}

func CreditCard(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3 9v-.8c0-1.12 0-1.68.218-2.108c.192-.377.497-.682.874-.874C4.52 5 5.08 5 6.2 5h11.6c1.12 0 1.68 0 2.107.218c.377.192.683.497.875.874c.218.427.218.987.218 2.105V9M3 9h18M3 9v6.8c0 1.12 0 1.68.218 2.108a2 2 0 0 0 .874.874c.427.218.987.218 2.105.218h11.606c1.118 0 1.677 0 2.104-.218c.377-.192.683-.498.875-.874c.218-.428.218-.986.218-2.104V9M6 15h4"/>`), g.Group(children),
	)
}

func CreditCardCheck(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3 9v-.8c0-1.12 0-1.68.218-2.108c.192-.377.497-.682.874-.874C4.52 5 5.08 5 6.2 5h6.3M3 9h9.5M3 9v6.8c0 1.12 0 1.68.218 2.108a2 2 0 0 0 .874.874c.427.218.987.218 2.105.218h11.606c1.118 0 1.677 0 2.104-.218c.377-.192.683-.498.875-.874c.218-.428.218-.986.218-2.104V11m-5-3.678l1.484 1.576a.337.337 0 0 0 .502-.022L21 5M6 15h4"/>`), g.Group(children),
	)
}

func CreditCardCheckSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M21.46 4.408a.75.75 0 0 1 .132 1.052L18.58 9.337a1.087 1.087 0 0 1-1.64.075l-1.485-1.575a.75.75 0 1 1 1.092-1.029l1.15 1.22l2.712-3.488a.75.75 0 0 1 1.052-.132"/><path d="M6.17 4.25h6.33a.75.75 0 0 1 0 1.5H6.2c-.572 0-.957 0-1.253.025c-.287.023-.424.065-.515.111c-.235.12-.426.311-.546.546c-.046.09-.088.228-.111.515c-.024.296-.025.68-.025 1.253v.05h8.75a.75.75 0 0 1 0 1.5H3.75v6.05c0 .573 0 .957.025 1.252c.023.288.065.425.111.515c.12.236.312.427.546.547c.09.046.228.088.515.111c.295.024.679.025 1.25.025h11.606c.571 0 .955 0 1.25-.025c.287-.023.424-.065.514-.111c.235-.12.427-.312.547-.547c.046-.09.088-.227.111-.514c.024-.295.025-.678.025-1.25V11a.75.75 0 0 1 1.5 0v4.834c0 .533 0 .978-.03 1.342c-.03.38-.098.735-.27 1.072a2.75 2.75 0 0 1-1.202 1.203c-.337.171-.693.238-1.073.27c-.363.029-.808.029-1.341.029H6.166c-.533 0-.978 0-1.342-.03c-.38-.03-.736-.098-1.073-.27a2.75 2.75 0 0 1-1.201-1.202c-.172-.337-.24-.693-.27-1.073c-.03-.364-.03-.81-.03-1.344V8.17c0-.534 0-.98.03-1.345c.03-.38.098-.736.27-1.074a2.75 2.75 0 0 1 1.2-1.201c.338-.172.694-.24 1.074-.27c.365-.03.81-.03 1.345-.03"/><path d="M5.25 15c0 .414.336.75.75.75h4a.75.75 0 0 0 0-1.5H6a.75.75 0 0 0-.75.75"/></g>`), g.Group(children),
	)
}

func CreditCardMinus(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3 9v6.8c0 1.12 0 1.68.218 2.108a2 2 0 0 0 .874.874c.427.218.987.218 2.105.218h11.606c1.118 0 1.677 0 2.104-.218c.377-.192.683-.498.875-.874c.218-.428.218-.986.218-2.104V11M3 9v-.8c0-1.12 0-1.68.218-2.108c.192-.377.497-.682.874-.874C4.52 5 5.08 5 6.2 5h6.3M3 9h9.5M6 15h4m5.5-7.5h5"/>`), g.Group(children),
	)
}

func CreditCardMinusSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M6.17 4.25h6.33a.75.75 0 0 1 0 1.5H6.2c-.572 0-.957 0-1.253.025c-.287.023-.424.065-.515.111c-.235.12-.426.311-.546.546c-.046.09-.088.228-.111.515c-.024.296-.025.68-.025 1.253v.05h8.75a.75.75 0 0 1 0 1.5H3.75v6.05c0 .573 0 .957.025 1.253c.023.287.065.424.111.514c.12.236.312.427.546.547c.09.046.228.088.515.111c.295.024.679.025 1.25.025h11.606c.571 0 .955 0 1.25-.025c.287-.023.424-.065.514-.111c.235-.12.427-.312.547-.547c.046-.09.088-.227.111-.514c.024-.295.025-.678.025-1.25V11a.75.75 0 0 1 1.5 0v4.834c0 .533 0 .978-.03 1.342c-.03.38-.098.735-.27 1.072a2.75 2.75 0 0 1-1.202 1.203c-.337.171-.693.238-1.073.27c-.363.029-.808.029-1.341.029H6.166c-.533 0-.978 0-1.342-.03c-.38-.03-.736-.098-1.073-.27a2.75 2.75 0 0 1-1.201-1.202c-.172-.337-.24-.693-.27-1.073c-.03-.364-.03-.81-.03-1.344V8.17c0-.534 0-.98.03-1.345c.03-.38.098-.736.27-1.074a2.75 2.75 0 0 1 1.2-1.201c.338-.172.694-.24 1.074-.27c.365-.03.81-.03 1.345-.03m8.58 3.25a.75.75 0 0 1 .75-.75h5a.75.75 0 0 1 0 1.5h-5a.75.75 0 0 1-.75-.75M5.25 15a.75.75 0 0 1 .75-.75h4a.75.75 0 0 1 0 1.5H6a.75.75 0 0 1-.75-.75"/>`), g.Group(children),
	)
}

func CreditCardPlus(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3 9v6.8c0 1.12 0 1.68.218 2.108a2 2 0 0 0 .874.874c.427.218.987.218 2.105.218h11.606c1.118 0 1.677 0 2.104-.218c.377-.192.683-.498.875-.874c.218-.428.218-.986.218-2.104V11M3 9v-.8c0-1.12 0-1.68.218-2.108c.192-.377.497-.682.874-.874C4.52 5 5.08 5 6.2 5h6.3M3 9h9.5M6 15h4m5.5-7.5h5M18 5v5"/>`), g.Group(children),
	)
}

func CreditCardPlusSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M6.17 4.25h6.33a.75.75 0 0 1 0 1.5H6.2c-.572 0-.957 0-1.253.025c-.287.023-.424.065-.515.111c-.235.12-.426.311-.546.546c-.046.09-.088.228-.111.515c-.024.296-.025.68-.025 1.253v.05h8.75a.75.75 0 0 1 0 1.5H3.75v6.05c0 .573 0 .957.025 1.253c.023.287.065.424.111.514c.12.236.312.427.546.547c.09.046.228.088.515.111c.295.024.679.025 1.25.025h11.606c.571 0 .955 0 1.25-.025c.287-.023.424-.065.514-.111c.235-.12.427-.312.547-.547c.046-.09.088-.227.111-.514c.024-.295.025-.678.025-1.25V11a.75.75 0 0 1 1.5 0v4.834c0 .533 0 .978-.03 1.342c-.03.38-.098.735-.27 1.072a2.75 2.75 0 0 1-1.202 1.203c-.337.171-.693.238-1.073.27c-.363.029-.808.029-1.341.029H6.166c-.533 0-.978 0-1.342-.03c-.38-.03-.736-.098-1.073-.27a2.75 2.75 0 0 1-1.201-1.202c-.172-.337-.24-.693-.27-1.073c-.03-.364-.03-.81-.03-1.344V8.17c0-.534 0-.98.03-1.345c.03-.38.098-.736.27-1.074a2.75 2.75 0 0 1 1.2-1.201c.338-.172.694-.24 1.074-.27c.365-.03.81-.03 1.345-.03m11.83 0a.75.75 0 0 1 .75.75v1.75h1.75a.75.75 0 0 1 0 1.5h-1.75V10a.75.75 0 0 1-1.5 0V8.25H15.5a.75.75 0 0 1 0-1.5h1.75V5a.75.75 0 0 1 .75-.75M5.25 15a.75.75 0 0 1 .75-.75h4a.75.75 0 0 1 0 1.5H6a.75.75 0 0 1-.75-.75"/>`), g.Group(children),
	)
}

func CreditCardSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M17.83 4.25H6.17c-.534 0-.98 0-1.345.03c-.38.03-.736.098-1.074.27a2.75 2.75 0 0 0-1.201 1.2c-.172.338-.24.694-.27 1.074c-.03.365-.03.81-.03 1.345v7.66c0 .535 0 .98.03 1.345c.03.38.098.736.27 1.073a2.75 2.75 0 0 0 1.201 1.203c.337.171.694.238 1.073.27c.364.029.81.029 1.342.029h11.668c.533 0 .978 0 1.341-.03c.38-.03.736-.098 1.073-.27a2.75 2.75 0 0 0 1.203-1.202c.171-.337.238-.693.27-1.072c.029-.364.029-.809.029-1.342V8.166c0-.533 0-.978-.03-1.342c-.03-.38-.098-.736-.27-1.073a2.75 2.75 0 0 0-1.202-1.201c-.337-.172-.694-.24-1.074-.27c-.363-.03-.81-.03-1.343-.03M4.433 5.886c.09-.046.228-.088.515-.111c.296-.024.68-.025 1.253-.025h11.6c.573 0 .957 0 1.252.025c.287.023.424.065.515.111c.236.12.427.312.547.546c.046.09.088.228.111.515c.024.295.025.679.025 1.25v.053H3.75V8.2c0-.572 0-.957.025-1.253c.023-.287.065-.424.111-.515c.12-.235.311-.426.546-.546M6 14.25h4a.75.75 0 0 1 0 1.5H6a.75.75 0 0 1 0-1.5"/>`), g.Group(children),
	)
}

func CreditCardX(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3 9v-.8c0-1.12 0-1.68.218-2.108c.192-.377.497-.682.874-.874C4.52 5 5.08 5 6.2 5h6.3M3 9h9.5M3 9v6.8c0 1.12 0 1.68.218 2.108a2 2 0 0 0 .874.874c.427.218.987.218 2.105.218h11.606c1.118 0 1.677 0 2.104-.218c.377-.192.683-.498.875-.874c.218-.428.218-.986.218-2.104V11M6 15h4m6.5-10l4 4m0-4l-4 4"/>`), g.Group(children),
	)
}

func CreditCardXSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M6.17 4.25h6.33a.75.75 0 0 1 0 1.5H6.2c-.572 0-.957 0-1.253.025c-.287.023-.424.065-.515.111c-.235.12-.426.311-.546.546c-.046.09-.088.228-.111.515c-.024.296-.025.68-.025 1.253v.05h8.75a.75.75 0 0 1 0 1.5H3.75v6.05c0 .573 0 .957.025 1.253c.023.287.065.424.111.514c.12.236.312.427.546.547c.09.046.228.088.515.111c.295.024.679.025 1.25.025h11.606c.571 0 .955 0 1.25-.025c.287-.023.424-.065.514-.111c.235-.12.427-.312.547-.547c.046-.09.088-.227.111-.514c.024-.295.025-.678.025-1.25V11a.75.75 0 0 1 1.5 0v4.834c0 .533 0 .978-.03 1.342c-.03.38-.098.735-.27 1.072a2.75 2.75 0 0 1-1.202 1.203c-.337.171-.693.238-1.073.27c-.363.029-.808.029-1.341.029H6.166c-.533 0-.978 0-1.342-.03c-.38-.03-.736-.098-1.073-.27a2.75 2.75 0 0 1-1.201-1.202c-.172-.337-.24-.693-.27-1.073c-.03-.364-.03-.81-.03-1.344V8.17c0-.534 0-.98.03-1.345c.03-.38.098-.736.27-1.074a2.75 2.75 0 0 1 1.2-1.201c.338-.172.694-.24 1.074-.27c.365-.03.81-.03 1.345-.03m9.8.22a.75.75 0 0 1 1.06 0l1.47 1.47l1.47-1.47a.75.75 0 1 1 1.06 1.06L19.56 7l1.47 1.47a.75.75 0 0 1-1.06 1.06L18.5 8.06l-1.47 1.47a.75.75 0 1 1-1.06-1.06L17.44 7l-1.47-1.47a.75.75 0 0 1 0-1.06M5.25 15a.75.75 0 0 1 .75-.75h4a.75.75 0 0 1 0 1.5H6a.75.75 0 0 1-.75-.75"/>`), g.Group(children),
	)
}

func Croissant(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M10.803 9.997L9.75 7.69C9.48 7.032 9.12 6.6 8.4 6.6m0 0H5.25C3.711 6.6 3 7.05 3 8.85c.075 1.614.827 3.266 1.915 4.462M8.4 6.6c0-1.395.216-3.6-1.8-3.6c-1.8 0-2.25 2.029-2.25 3.676M14 13.21l2.311 1.04c.657.27 1.089.63 1.089 1.35m0 0v3.15c0 1.539-.45 2.25-2.25 2.25c-1.614-.076-3.264-.824-4.459-1.912M17.4 15.6c1.395 0 3.6-.216 3.6 1.8c0 1.8-2.029 2.25-3.676 2.25M5.34 13l5.211-2.89c1.701-.945 4.311 1.602 3.339 3.34l-2.898 5.228C9.12 22.044 1.911 14.908 5.34 13"/>`), g.Group(children),
	)
}

func CroissantSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M5.046 2.737A2.58 2.58 0 0 1 6.6 2.25c.649 0 1.199.181 1.623.55c.413.358.634.83.757 1.28c.166.609.181 1.32.177 1.902q.322.122.585.356c.334.297.544.685.696 1.052l.805 1.765c.957-.042 1.89.475 2.507 1.086c.624.617 1.154 1.557 1.1 2.53l1.758.79c.368.152.757.362 1.054.697q.234.262.356.585c.582-.005 1.293.011 1.902.177c.45.123.922.344 1.28.757c.369.424.55.974.55 1.623c0 .6-.173 1.123-.487 1.553c-.309.422-.725.718-1.162.925c-.684.323-1.487.463-2.225.506c-.092.206-.213.4-.372.573c-.554.609-1.389.793-2.354.793h-.035c-1.6-.076-3.201-.734-4.456-1.71a2.3 2.3 0 0 1-.35.15c-.545.182-1.12.152-1.657.016c-1.06-.27-2.143-1.001-3.003-1.858s-1.595-1.938-1.863-3c-.136-.539-.161-1.116.026-1.663q.06-.178.15-.342c-.976-1.255-1.636-2.859-1.711-4.458L2.25 8.85c0-.965.184-1.8.793-2.354a2.1 2.1 0 0 1 .573-.372c.043-.738.183-1.541.506-2.225c.207-.437.503-.853.924-1.162m-.555 4.675c-.225.048-.356.117-.438.192c-.13.12-.3.407-.303 1.228c.06 1.205.554 2.458 1.303 3.468l4.77-2.644L9.068 8l-.012-.026c-.117-.286-.221-.436-.31-.515C8.68 7.4 8.59 7.35 8.4 7.35H5.25a4 4 0 0 0-.759.062M11.7 18.948c1.01.75 2.262 1.241 3.468 1.302c.82-.002 1.108-.172 1.228-.303c.075-.082.144-.213.192-.438a4 4 0 0 0 .062-.759V15.6c0-.191-.05-.28-.108-.345c-.08-.09-.23-.194-.516-.311l-.023-.01l-1.663-.749z"/>`), g.Group(children),
	)
}

func Crop(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M6.6 3v9.6c0 1.68 0 2.52.327 3.162a3 3 0 0 0 1.311 1.311c.642.327 1.482.327 3.162.327H21"/><path d="M9.2 6.6h3.4c1.68 0 2.52 0 3.162.327a3 3 0 0 1 1.311 1.311c.327.642.327 1.482.327 3.162v3.4M6.6 6.6H3M17.4 21v-3.6"/></g>`), g.Group(children),
	)
}

func CropSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M7.35 3a.75.75 0 0 0-1.5 0v2.85H3a.75.75 0 1 0 0 1.5h2.85v5.282c0 .813 0 1.469.043 2c.045.546.14 1.026.366 1.47a3.75 3.75 0 0 0 1.639 1.64c.444.226.924.32 1.47.365c.531.043 1.187.043 2 .043h5.282V21a.75.75 0 1 0 1.5 0v-2.85H21a.75.75 0 1 0 0-1.5h-2.85v-5.282c0-.813 0-1.469-.043-2c-.045-.546-.14-1.026-.366-1.47a3.75 3.75 0 0 0-1.639-1.64c-.444-.226-.924-.32-1.47-.365c-.531-.043-1.187-.043-2-.043H7.35z"/>`), g.Group(children),
	)
}

func Crosshair(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M21 12h-3M6 12H3m9-6V3m0 18v-3m9-6a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/>`), g.Group(children),
	)
}

func CrosshairSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M6 11.25a.75.75 0 0 1 0 1.5H2.278a9.75 9.75 0 0 0 8.972 8.971V18a.75.75 0 0 1 1.5 0v3.721a9.75 9.75 0 0 0 8.971-8.971H18a.75.75 0 1 1 0-1.5h3.721a9.75 9.75 0 0 0-8.971-8.972V6a.75.75 0 0 1-1.5 0V2.278a9.75 9.75 0 0 0-8.972 8.972z"/>`), g.Group(children),
	)
}

func Cupcake(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m5 14l.804 5.626C5.948 20.636 6.308 21 7.385 21H10m-5-7h4m-4 0c-1.303-.604-2-2.236-2-3.666c0-1.536 1.03-2.85 2.49-3.397A.79.79 0 0 0 6 6.208c0-1.265 1.12-2.291 2.5-2.291c.668 0 1.31.322 1.941-.066A5.83 5.83 0 0 1 13.5 3C16.538 3 19 5.257 19 8.042c0 1.256 2 1.594 2 3.208c0 1.277-.712 2.44-2 2.75m0 0h-4m4 0l-.804 5.628C18.044 20.693 17.635 21 16.615 21H14m1-7H9m6 0l-1 7m-5-7l1 7m0 0h4"/>`), g.Group(children),
	)
}

func CupcakeSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M18.135 14.75H15.65l-.785 5.5h1.75c.466 0 .594-.078.632-.11c.034-.029.139-.141.207-.619zm-4.786 5.5l.786-5.5h-4.27l.785 5.5zm-4.214 0l-.786-5.5H5.865l.681 4.77c.066.462.16.58.199.613c.033.03.158.117.64.117zm-4.824-5.772c-1.407-.876-2.061-2.671-2.061-4.144c0-1.89 1.265-3.46 2.978-4.1a.04.04 0 0 0 .016-.013l.005-.011l.001-.002c0-1.74 1.518-3.041 3.25-3.041c.224 0 .433.026.605.052l.151.023c.113.017.204.031.302.04c.247.025.374.001.49-.07A6.6 6.6 0 0 1 13.5 2.25c3.389 0 6.25 2.533 6.25 5.792c0 .091.029.187.147.335c.121.15.28.29.505.49q.046.039.095.084c.496.439 1.253 1.127 1.253 2.3c0 1.382-.705 2.754-2.073 3.317l-.738 5.166c-.084.588-.261 1.162-.724 1.553c-.46.387-1.046.463-1.6.463h-9.23c-.595 0-1.188-.094-1.64-.5c-.448-.4-.605-.97-.684-1.518z"/>`), g.Group(children),
	)
}

func Danger(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M12 19v-.5M12 5v10"/>`), g.Group(children),
	)
}

func DangerCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-4.373v5.5m0 3.246v-.5"/>`), g.Group(children),
	)
}

func DangerCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12 2.25c-5.385 0-9.75 4.365-9.75 9.75s4.365 9.75 9.75 9.75s9.75-4.365 9.75-9.75S17.385 2.25 12 2.25m0 4.627a.75.75 0 0 1 .75.75v5.5a.75.75 0 0 1-1.5 0v-5.5a.75.75 0 0 1 .75-.75m.75 8.996v.5a.75.75 0 0 1-1.5 0v-.5a.75.75 0 0 1 1.5 0"/>`), g.Group(children),
	)
}

func DangerDiamond(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M2.707 10.295a2.41 2.41 0 0 0 0 3.41l7.588 7.588a2.41 2.41 0 0 0 3.41 0l7.588-7.588a2.41 2.41 0 0 0 0-3.41l-7.588-7.588a2.41 2.41 0 0 0-3.41 0zM12 7.627v5.5m0 3.246v-.5"/>`), g.Group(children),
	)
}

func DangerDiamondSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12 1.25a3.16 3.16 0 0 0-2.235.926L2.177 9.765a3.16 3.16 0 0 0 0 4.47l7.588 7.588a3.16 3.16 0 0 0 4.47 0l7.588-7.588a3.16 3.16 0 0 0 0-4.47l-7.588-7.588A3.16 3.16 0 0 0 12 1.25m0 5.627a.75.75 0 0 1 .75.75v5.5a.75.75 0 0 1-1.5 0v-5.5a.75.75 0 0 1 .75-.75m.75 8.996v.5a.75.75 0 0 1-1.5 0v-.5a.75.75 0 0 1 1.5 0"/>`), g.Group(children),
	)
}

func DangerHexagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M20.5 15.8V8.2a1.91 1.91 0 0 0-.944-1.645l-6.612-3.8a1.88 1.88 0 0 0-1.888 0l-6.612 3.8A1.9 1.9 0 0 0 3.5 8.2v7.602a1.91 1.91 0 0 0 .944 1.644l6.612 3.8a1.88 1.88 0 0 0 1.888 0l6.612-3.8A1.9 1.9 0 0 0 20.5 15.8M12 7.627v5.5m0 3.246v-.5"/>`), g.Group(children),
	)
}

func DangerHexagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12 1.75a2.63 2.63 0 0 0-1.32.355l-6.61 3.8l-.002.002A2.65 2.65 0 0 0 2.75 8.198v7.603a2.64 2.64 0 0 0 1.318 2.292l.003.002l6.608 3.799h.002a2.63 2.63 0 0 0 2.639 0h.001l6.608-3.8h.003A2.65 2.65 0 0 0 21.25 15.8V8.2a2.65 2.65 0 0 0-1.318-2.292l-6.61-3.8l-.002-.002A2.63 2.63 0 0 0 12 1.75m0 5.127a.75.75 0 0 1 .75.75v5.5a.75.75 0 0 1-1.5 0v-5.5a.75.75 0 0 1 .75-.75m.75 8.996v.5a.75.75 0 0 1-1.5 0v-.5a.75.75 0 0 1 1.5 0"/>`), g.Group(children),
	)
}

func DangerOctagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M7.805 3.469C8.16 3.115 8.451 3 8.937 3h6.126c.486 0 .778.115 1.132.469l4.336 4.336c.354.354.469.646.469 1.132v6.126c0 .5-.125.788-.469 1.132l-4.336 4.336c-.354.354-.646.469-1.132.469H8.937c-.5 0-.788-.125-1.132-.469L3.47 16.195c-.355-.355-.47-.646-.47-1.132V8.937c0-.5.125-.788.469-1.132zM12 7.627v5.5m0 3.246v-.5"/>`), g.Group(children),
	)
}

func DangerOctagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.937 2.25a2.3 2.3 0 0 0-.9.158c-.299.122-.54.31-.762.53L2.938 7.275c-.213.214-.4.45-.525.748a2.3 2.3 0 0 0-.163.914v6.126c0 .302.036.602.158.9s.31.54.53.762l4.337 4.337c.214.213.45.4.748.524c.298.125.601.164.914.164h6.126c.302 0 .602-.035.9-.158c.299-.122.54-.31.762-.53l4.337-4.337c.213-.214.4-.45.524-.748a2.3 2.3 0 0 0 .164-.914V8.937a2.3 2.3 0 0 0-.158-.9a2.3 2.3 0 0 0-.53-.762l-4.337-4.337a2.3 2.3 0 0 0-.762-.53a2.3 2.3 0 0 0-.9-.158zM12 6.877a.75.75 0 0 1 .75.75v5.5a.75.75 0 0 1-1.5 0v-5.5a.75.75 0 0 1 .75-.75m.75 8.996v.5a.75.75 0 0 1-1.5 0v-.5a.75.75 0 0 1 1.5 0"/>`), g.Group(children),
	)
}

func DangerSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12 4.25a.75.75 0 0 1 .75.75v10a.75.75 0 0 1-1.5 0V5a.75.75 0 0 1 .75-.75m0 13.5a.75.75 0 0 1 .75.75v.5a.75.75 0 0 1-1.5 0v-.5a.75.75 0 0 1 .75-.75"/>`), g.Group(children),
	)
}

func DangerSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6zm9-1.773v5.5m0 3.246v-.5"/>`), g.Group(children),
	)
}

func DangerSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25c-1.092 0-1.958 0-2.655.057c-.714.058-1.317.18-1.868.46a4.75 4.75 0 0 0-2.076 2.077c-.281.55-.403 1.154-.461 1.868c-.057.697-.057 1.563-.057 2.655v5.266c0 1.092 0 1.958.057 2.655c.058.714.18 1.317.46 1.869a4.75 4.75 0 0 0 2.077 2.075c.55.281 1.154.403 1.868.461c.697.057 1.563.057 2.655.057h5.266c1.092 0 1.958 0 2.655-.057c.714-.058 1.317-.18 1.869-.46a4.75 4.75 0 0 0 2.075-2.076c.281-.552.403-1.155.461-1.869c.057-.697.057-1.563.057-2.655V9.367c0-1.092 0-1.958-.057-2.655c-.058-.714-.18-1.317-.46-1.868a4.75 4.75 0 0 0-2.076-2.076c-.552-.281-1.155-.403-1.869-.461c-.697-.057-1.563-.057-2.655-.057zM12 6.877a.75.75 0 0 1 .75.75v5.5a.75.75 0 0 1-1.5 0v-5.5a.75.75 0 0 1 .75-.75m.75 8.996v.5a.75.75 0 0 1-1.5 0v-.5a.75.75 0 0 1 1.5 0"/>`), g.Group(children),
	)
}

func DangerTriangle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M12 8.5V14m0 3.247v-.5m-6.02-5.985C8.608 5.587 9.92 3 12 3s3.393 2.587 6.02 7.762l.327.644c2.182 4.3 3.274 6.45 2.287 8.022C19.648 21 17.208 21 12.327 21h-.654c-4.88 0-7.321 0-8.307-1.572s.105-3.722 2.287-8.022z"/>`), g.Group(children),
	)
}

func DangerTriangleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.583 4.507C9.538 3.159 10.582 2.25 12 2.25s2.462.91 3.417 2.257c.948 1.338 1.953 3.318 3.24 5.852l.39.769c1.065 2.098 1.904 3.75 2.344 5.076c.448 1.348.55 2.552-.121 3.623c-.67 1.066-1.801 1.511-3.22 1.719c-1.398.204-3.272.204-5.656.204h-.788c-2.384 0-4.258 0-5.656-.204c-1.419-.208-2.55-.653-3.22-1.72c-.671-1.07-.569-2.274-.12-3.622c.44-1.325 1.278-2.978 2.344-5.076l.39-.768c1.286-2.535 2.29-4.515 3.24-5.853M12.75 8.5a.75.75 0 0 0-1.5 0V14a.75.75 0 0 0 1.5 0zm0 8.247a.75.75 0 0 0-1.5 0v.5a.75.75 0 0 0 1.5 0z"/>`), g.Group(children),
	)
}

func DangerWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83M12 7.627v5.5m0 3.246v-.5"/>`), g.Group(children),
	)
}

func DangerWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M13.435 2.075a3.33 3.33 0 0 0-2.87 0c-.394.189-.755.497-1.26.928l-.079.066a2.56 2.56 0 0 1-1.58.655l-.102.008c-.662.053-1.135.09-1.547.236a3.33 3.33 0 0 0-2.03 2.029c-.145.412-.182.885-.235 1.547l-.008.102a2.56 2.56 0 0 1-.655 1.58l-.066.078c-.431.506-.74.867-.928 1.261a3.33 3.33 0 0 0 0 2.87c.189.394.497.755.928 1.26l.066.079c.41.48.604.939.655 1.58l.008.102c.053.662.09 1.135.236 1.547a3.33 3.33 0 0 0 2.029 2.03c.412.145.885.182 1.547.235l.102.008c.629.05 1.09.238 1.58.655l.078.066c.506.431.867.74 1.261.928a3.33 3.33 0 0 0 2.87 0c.394-.189.755-.497 1.26-.928l.079-.066c.48-.41.939-.604 1.58-.655l.102-.008c.662-.053 1.135-.09 1.547-.236a3.33 3.33 0 0 0 2.03-2.029c.145-.412.182-.885.235-1.547l.008-.102c.05-.629.238-1.09.655-1.58l.066-.079c.431-.505.74-.866.928-1.26a3.33 3.33 0 0 0 0-2.87c-.189-.394-.497-.755-.928-1.26l-.066-.079a2.56 2.56 0 0 1-.655-1.58l-.008-.102c-.053-.662-.09-1.135-.236-1.547a3.33 3.33 0 0 0-2.029-2.03c-.412-.145-.885-.182-1.547-.235l-.102-.008a2.56 2.56 0 0 1-1.58-.655l-.079-.066c-.505-.431-.866-.74-1.26-.928M12 6.877a.75.75 0 0 1 .75.75v5.5a.75.75 0 0 1-1.5 0v-5.5a.75.75 0 0 1 .75-.75m.75 8.996v.5a.75.75 0 0 1-1.5 0v-.5a.75.75 0 0 1 1.5 0"/>`), g.Group(children),
	)
}

func Database(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M12 3C7.582 3 4 4.29 4 5.88c0 4.16 16 4.16 16 0C20 4.29 16.418 3 12 3m8 8.75c0 4.667-16 4.667-16 0"/><path d="M4 6v12.165c0 3.78 16 3.78 16 0V6"/></g>`), g.Group(children),
	)
}

func DatabaseSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M6.09 3.138C7.637 2.58 9.727 2.25 12 2.25c2.272 0 4.362.33 5.91.888c.772.277 1.449.626 1.947 1.05c.496.421.893.99.893 1.692l-.001.077l.001.043v12.165c0 .772-.418 1.38-.965 1.823c-.54.438-1.265.768-2.06 1.019c-1.597.503-3.679.743-5.725.743s-4.128-.24-5.725-.743c-.795-.25-1.52-.581-2.06-1.019c-.547-.443-.965-1.051-.965-1.823V6l.001-.043l-.001-.077c0-.702.397-1.27.893-1.692c.498-.424 1.175-.773 1.946-1.05M4.75 8.226v3.524c0 .664.574 1.363 2.022 1.926c1.386.54 3.287.824 5.228.824s3.842-.285 5.228-.824c1.448-.563 2.022-1.262 2.022-1.926V8.226a7.2 7.2 0 0 1-1.504.703c-1.605.556-3.694.821-5.746.821s-4.141-.265-5.746-.821a7.2 7.2 0 0 1-1.504-.703"/>`), g.Group(children),
	)
}

func DazeCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="m8 12l2-1.5L8 9m8 3l-2-1.5L16 9m0 7.25l-1.333-1l-1.334 1l-1.333-1l-1.333 1l-1.334-1l-1.333 1"/><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/></g>`), g.Group(children),
	)
}

func DazeCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0 5.385 4.365 9.75 9.75 9.75s9.75-4.365 9.75-9.75S17.385 2.25 12 2.25S2.25 6.615 2.25 12M7.4 8.55a.75.75 0 0 1 1.05-.15l2 1.5a.75.75 0 0 1 0 1.2l-2 1.5a.75.75 0 1 1-.9-1.2l1.2-.9l-1.2-.9a.75.75 0 0 1-.15-1.05m9.05 1.05l-1.2.9l1.2.9a.75.75 0 1 1-.9 1.2l-2-1.5a.75.75 0 0 1 0-1.2l2-1.5a.75.75 0 1 1 .9 1.2m-7.567 5.05a.75.75 0 0 1 .9 0l.884.662l.883-.662a.75.75 0 0 1 .9 0l.883.662l.884-.662a.75.75 0 0 1 .9 0l1.333 1a.75.75 0 1 1-.9 1.2l-.883-.663l-.884.663a.75.75 0 0 1-.9 0L12 16.187l-.883.663a.75.75 0 0 1-.9 0l-.884-.663l-.883.663a.75.75 0 1 1-.9-1.2z"/>`), g.Group(children),
	)
}

func DazeGhost(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="m8 12l2-1.5L8 9m8 3l-2-1.5L16 9m0 7.25l-1.333-1l-1.334 1l-1.333-1l-1.333 1l-1.334-1l-1.333 1"/><path d="M3 18.562v-6.518C3 7.05 7.03 3 12 3s9 4.05 9 9.044v6.517c0 1.162-.967 2.519-2 2c-.835-.42-2.223-.52-3 0c-.874.585-2.126.585-3 0c-.885-.593-1.649-.57-2.5 0c-.874.585-2.126.585-3 0c-.777-.52-1.665-.42-2.5 0c-1.033.519-2-.838-2-2"/></g>`), g.Group(children),
	)
}

func DazeGhostSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12.044v6.517c0 .764.308 1.57.8 2.127c.501.567 1.354 1.012 2.287.543c.696-.35 1.275-.363 1.746-.047c1.126.755 2.708.755 3.834 0c.345-.23.607-.308.825-.31c.218-.001.485.072.84.31c1.127.755 2.709.755 3.835 0c.213-.142.58-.237 1.044-.226c.454.01.898.12 1.202.273c.933.469 1.786.024 2.287-.543c.492-.557.8-1.363.8-2.126v-6.518c0-5.405-4.362-9.794-9.75-9.794s-9.75 4.389-9.75 9.794m6.633 2.606a.75.75 0 0 1 .9 0l.884.662l.883-.662a.75.75 0 0 1 .9 0l.883.662l.884-.662a.75.75 0 0 1 .9 0l1.333 1a.75.75 0 1 1-.9 1.2l-.883-.663l-.884.663a.75.75 0 0 1-.9 0L12 16.187l-.883.663a.75.75 0 0 1-.9 0l-.884-.663l-.883.663a.75.75 0 1 1-.9-1.2zM8.45 8.4l2 1.5a.75.75 0 0 1 0 1.2l-2 1.5a.75.75 0 1 1-.9-1.2l1.2-.9l-1.2-.9a.75.75 0 0 1 .9-1.2m8.15.15a.75.75 0 0 1-.15 1.05l-1.2.9l1.2.9a.75.75 0 1 1-.9 1.2l-2-1.5a.75.75 0 0 1 0-1.2l2-1.5a.75.75 0 0 1 1.05.15"/>`), g.Group(children),
	)
}

func DazeSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="m8 12l2-1.5L8 9m8 3l-2-1.5L16 9m0 7.25l-1.333-1l-1.334 1l-1.333-1l-1.333 1l-1.334-1l-1.333 1"/><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/></g>`), g.Group(children),
	)
}

func DazeSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25c-1.092 0-1.958 0-2.655.057c-.714.058-1.317.18-1.868.46a4.75 4.75 0 0 0-2.076 2.077c-.281.55-.403 1.154-.461 1.868c-.057.697-.057 1.563-.057 2.655v5.266c0 1.092 0 1.958.057 2.655c.058.714.18 1.317.46 1.869a4.75 4.75 0 0 0 2.077 2.075c.55.281 1.154.403 1.868.461c.697.057 1.563.057 2.655.057h5.266c1.092 0 1.958 0 2.655-.057c.714-.058 1.317-.18 1.869-.46a4.75 4.75 0 0 0 2.075-2.076c.281-.552.403-1.155.461-1.869c.057-.697.057-1.563.057-2.655V9.367c0-1.092 0-1.958-.057-2.655c-.058-.714-.18-1.317-.46-1.868a4.75 4.75 0 0 0-2.076-2.076c-.552-.281-1.155-.403-1.869-.461c-.697-.057-1.563-.057-2.655-.057zm-.484 12.4a.75.75 0 0 1 .9 0l.884.662l.883-.662a.75.75 0 0 1 .9 0l.883.662l.884-.662a.75.75 0 0 1 .9 0l1.333 1a.75.75 0 1 1-.9 1.2l-.883-.663l-.884.663a.75.75 0 0 1-.9 0L12 16.187l-.883.663a.75.75 0 0 1-.9 0l-.884-.663l-.883.663a.75.75 0 1 1-.9-1.2zM8.45 8.4l2 1.5a.75.75 0 0 1 0 1.2l-2 1.5a.75.75 0 1 1-.9-1.2l1.2-.9l-1.2-.9a.75.75 0 0 1 .9-1.2m8.15.15a.75.75 0 0 1-.15 1.05l-1.2.9l1.2.9a.75.75 0 1 1-.9 1.2l-2-1.5a.75.75 0 0 1 0-1.2l2-1.5a.75.75 0 0 1 1.05.15"/>`), g.Group(children),
	)
}

func Delete(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m13.5 10l4 4m0-4l-4 4m6.095 4.5H9.298a2 2 0 0 1-1.396-.568l-5.35-5.216a1 1 0 0 1 0-1.432l5.35-5.216A2 2 0 0 1 9.298 5.5h10.297c.95 0 2.223.541 2.223 1.625v9.75c0 1.084-1.273 1.625-2.223 1.625"/>`), g.Group(children),
	)
}

func DeleteSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M7.378 5.531a2.75 2.75 0 0 1 1.92-.781h10.297c.598 0 1.294.166 1.863.519c.579.358 1.11.974 1.11 1.856v9.75c0 .882-.531 1.497-1.11 1.856a3.65 3.65 0 0 1-1.863.519H9.298a2.75 2.75 0 0 1-1.92-.781l-5.35-5.216a1.75 1.75 0 0 1 0-2.506zM14.03 9.47a.75.75 0 1 0-1.06 1.06L14.44 12l-1.47 1.47a.75.75 0 1 0 1.06 1.06l1.47-1.47l1.47 1.47a.75.75 0 1 0 1.06-1.06L16.56 12l1.47-1.47a.75.75 0 1 0-1.06-1.06l-1.47 1.47z"/>`), g.Group(children),
	)
}

func Desktop(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9 20h3m3 0h-3m0 0v-3m0 0h7a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v9a2 2 0 0 0 2 2z"/>`), g.Group(children),
	)
}

func DesktopSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M5 3.25A2.75 2.75 0 0 0 2.25 6v9A2.75 2.75 0 0 0 5 17.75h6.25v1.5H9a.75.75 0 0 0 0 1.5h6a.75.75 0 0 0 0-1.5h-2.25v-1.5H19A2.75 2.75 0 0 0 21.75 15V6A2.75 2.75 0 0 0 19 3.25z"/>`), g.Group(children),
	)
}

func Diamond(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M2.707 10.295a2.41 2.41 0 0 0 0 3.41l7.588 7.588a2.41 2.41 0 0 0 3.41 0l7.588-7.588a2.41 2.41 0 0 0 0-3.41l-7.588-7.588a2.41 2.41 0 0 0-3.41 0z"/>`), g.Group(children),
	)
}

func DiamondSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12 1.25a3.16 3.16 0 0 0-2.235.926L2.177 9.765a3.16 3.16 0 0 0 0 4.47l7.588 7.588a3.16 3.16 0 0 0 4.47 0l7.588-7.588a3.16 3.16 0 0 0 0-4.47l-7.588-7.588A3.16 3.16 0 0 0 12 1.25"/>`), g.Group(children),
	)
}

func DiceFive(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M8.25 8h-.5m.5 8h-.5m8.5-8h-.5m.5 8h-.5m-3.5-4h-.5M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/>`), g.Group(children),
	)
}

func DiceFiveSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057m-1.617 5a.75.75 0 0 0 0 1.5h.5a.75.75 0 0 0 0-1.5zm8 0a.75.75 0 0 0 0 1.5h.5a.75.75 0 0 0 0-1.5zm-4 4a.75.75 0 0 0 0 1.5h.5a.75.75 0 0 0 0-1.5zm-4 4a.75.75 0 0 0 0 1.5h.5a.75.75 0 0 0 0-1.5zm8 0a.75.75 0 0 0 0 1.5h.5a.75.75 0 0 0 0-1.5z"/>`), g.Group(children),
	)
}

func DiceFour(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M8.25 8h-.5m.5 8h-.5m8.5-8h-.5m.5 8h-.5M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/>`), g.Group(children),
	)
}

func DiceFourSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057m-1.617 5a.75.75 0 0 0 0 1.5h.5a.75.75 0 0 0 0-1.5zm8 0a.75.75 0 0 0 0 1.5h.5a.75.75 0 0 0 0-1.5zm-8 8a.75.75 0 0 0 0 1.5h.5a.75.75 0 0 0 0-1.5zm8 0a.75.75 0 0 0 0 1.5h.5a.75.75 0 0 0 0-1.5z"/>`), g.Group(children),
	)
}

func DiceOne(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M11.75 12h.5M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/>`), g.Group(children),
	)
}

func DiceOneSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057m2.383 9a.75.75 0 0 0 0 1.5h.5a.75.75 0 0 0 0-1.5z"/>`), g.Group(children),
	)
}

func DiceSix(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M8.25 12h-.5m.5-4h-.5m.5 8h-.5m8.5-4h-.5m.5-4h-.5m.5 8h-.5M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/>`), g.Group(children),
	)
}

func DiceSixSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057m-1.617 5a.75.75 0 0 0 0 1.5h.5a.75.75 0 0 0 0-1.5zm8 0a.75.75 0 0 0 0 1.5h.5a.75.75 0 0 0 0-1.5zm-8 4a.75.75 0 0 0 0 1.5h.5a.75.75 0 0 0 0-1.5zm8 0a.75.75 0 0 0 0 1.5h.5a.75.75 0 0 0 0-1.5zm-8 4a.75.75 0 0 0 0 1.5h.5a.75.75 0 0 0 0-1.5zm8 0a.75.75 0 0 0 0 1.5h.5a.75.75 0 0 0 0-1.5z"/>`), g.Group(children),
	)
}

func DiceThree(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M8.25 8h-.5m4.5 4h-.5m4.5 4h-.5M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/>`), g.Group(children),
	)
}

func DiceThreeSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057m-1.617 5a.75.75 0 0 0 0 1.5h.5a.75.75 0 0 0 0-1.5zm4 4a.75.75 0 0 0 0 1.5h.5a.75.75 0 0 0 0-1.5zm4 4a.75.75 0 0 0 0 1.5h.5a.75.75 0 0 0 0-1.5z"/>`), g.Group(children),
	)
}

func DiceTwo(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M8.25 8h-.5m8.5 8h-.5M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/>`), g.Group(children),
	)
}

func DiceTwoSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057m-1.617 5a.75.75 0 0 0 0 1.5h.5a.75.75 0 0 0 0-1.5zm8 8a.75.75 0 0 0 0 1.5h.5a.75.75 0 0 0 0-1.5z"/>`), g.Group(children),
	)
}

func Dislike(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M10.46 13.895H4.927C2.381 13.895 5.691 3 7.515 3h12.521c.532 0 .964.424.964.947v9.385a.95.95 0 0 1-.502.832c-2.062 1.106-4.481 2.012-5.678 4.129l-1.28 2.266a.87.87 0 0 1-.762.441c-3.18 0-2.237-4.63-1.805-6.47a.52.52 0 0 0-.513-.635"/>`), g.Group(children),
	)
}

func DislikeSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M14.193 20.928a1.62 1.62 0 0 1-1.415.822c-1.005 0-1.773-.38-2.282-1.048c-.477-.628-.664-1.43-.723-2.189c-.106-1.37.188-2.908.404-3.868h-5.25c-.661 0-1.117-.389-1.364-.882c-.225-.446-.301-1.004-.312-1.556c-.021-1.124.23-2.564.607-3.956c.38-1.4.902-2.813 1.459-3.893c.276-.536.577-1.02.894-1.383c.28-.321.725-.725 1.304-.725h12.521c.935 0 1.714.748 1.714 1.697v9.385c0 .628-.349 1.199-.898 1.493m0 0c-.39.21-.773.402-1.148.591c-.68.343-1.335.673-1.973 1.07c-.958.596-1.746 1.27-2.258 2.176l-1.28 2.266"/>`), g.Group(children),
	)
}

func Divide(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3 12h18m-9-6.256V5m0 14v-.744"/>`), g.Group(children),
	)
}

func DivideSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12a.75.75 0 0 1 .75-.75h18a.75.75 0 0 1 0 1.5H3a.75.75 0 0 1-.75-.75M12 4.25a.75.75 0 0 1 .75.75v.744a.75.75 0 0 1-1.5 0V5a.75.75 0 0 1 .75-.75m0 13.256a.75.75 0 0 1 .75.75V19a.75.75 0 0 1-1.5 0v-.744a.75.75 0 0 1 .75-.75"/>`), g.Group(children),
	)
}

func Dollar(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M17 5h-5m0 0H9.5a3.5 3.5 0 1 0 0 7H12m0-7V3m0 2v7m0 0h2.5a3.5 3.5 0 1 1 0 7H12m0-7v7m0 0H6m6 0v2"/>`), g.Group(children),
	)
}

func DollarCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/><path d="M15.333 7.722H12m0 0h-1.667C9.045 7.722 8 8.68 8 9.862C8 11.041 9.045 12 10.333 12H12m0-4.278V6.5m0 1.222V12m0 0h1.667c1.288 0 2.333.958 2.333 2.139s-1.045 2.139-2.333 2.139H12M12 12v4.278m0 0H8m4 0V17.5"/></g>`), g.Group(children),
	)
}

func DollarCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M10.333 8.472h.917v2.778h-.917c-.937 0-1.583-.682-1.583-1.389s.646-1.389 1.583-1.389m2.417 7.056V12.75h.917c.937 0 1.583.682 1.583 1.389s-.646 1.389-1.583 1.389z"/><path d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12m10.5-5.5a.75.75 0 0 0-1.5 0v.472h-.917c-1.64 0-3.083 1.234-3.083 2.89c0 1.655 1.443 2.888 3.083 2.888h.917v2.778H8a.75.75 0 0 0 0 1.5h3.25v.472a.75.75 0 0 0 1.5 0v-.472h.917c1.64 0 3.083-1.233 3.083-2.89c0-1.655-1.443-2.888-3.083-2.888h-.917V8.472h2.583a.75.75 0 0 0 0-1.5H12.75z"/></g>`), g.Group(children),
	)
}

func DollarDiamond(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M2.707 10.295a2.41 2.41 0 0 0 0 3.41l7.588 7.588a2.41 2.41 0 0 0 3.41 0l7.588-7.588a2.41 2.41 0 0 0 0-3.41l-7.588-7.588a2.41 2.41 0 0 0-3.41 0z"/><path d="M15.333 7.722H12m0 0h-1.667C9.045 7.722 8 8.68 8 9.862C8 11.041 9.045 12 10.333 12H12m0-4.278V6.5m0 1.222V12m0 0h1.667c1.288 0 2.333.958 2.333 2.139s-1.045 2.139-2.333 2.139H12M12 12v4.278m0 0H8m4 0V17.5"/></g>`), g.Group(children),
	)
}

func DollarDiamondSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M10.333 8.472h.917v2.778h-.917c-.937 0-1.583-.682-1.583-1.389s.646-1.389 1.583-1.389m2.417 7.056V12.75h.917c.937 0 1.583.682 1.583 1.389s-.646 1.389-1.583 1.389z"/><path d="M10.79 1.49a3.16 3.16 0 0 1 3.445.687l7.588 7.588a3.16 3.16 0 0 1 0 4.47l-7.588 7.588a3.16 3.16 0 0 1-4.47 0l-7.588-7.588a3.16 3.16 0 0 1 0-4.47l7.588-7.589a3.2 3.2 0 0 1 1.025-.685m1.96 5.01a.75.75 0 0 0-1.5 0v.472h-.917c-1.64 0-3.083 1.234-3.083 2.89c0 1.655 1.443 2.888 3.083 2.888h.917v2.778H8a.75.75 0 0 0 0 1.5h3.25v.472a.75.75 0 0 0 1.5 0v-.472h.917c1.64 0 3.083-1.233 3.083-2.89c0-1.655-1.443-2.888-3.083-2.888h-.917V8.472h2.583a.75.75 0 0 0 0-1.5H12.75z"/></g>`), g.Group(children),
	)
}

func DollarHexagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M20.5 15.8V8.2a1.91 1.91 0 0 0-.944-1.645l-6.612-3.8a1.88 1.88 0 0 0-1.888 0l-6.612 3.8A1.9 1.9 0 0 0 3.5 8.2v7.602a1.91 1.91 0 0 0 .944 1.644l6.612 3.8a1.88 1.88 0 0 0 1.888 0l6.612-3.8A1.9 1.9 0 0 0 20.5 15.8"/><path d="M15.333 7.722H12m0 0h-1.667C9.045 7.722 8 8.68 8 9.862C8 11.041 9.045 12 10.333 12H12m0-4.278V6.5m0 1.222V12m0 0h1.667c1.288 0 2.333.958 2.333 2.139s-1.045 2.139-2.333 2.139H12M12 12v4.278m0 0H8m4 0V17.5"/></g>`), g.Group(children),
	)
}

func DollarHexagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M10.333 8.472h.917v2.778h-.917c-.937 0-1.583-.682-1.583-1.389s.646-1.389 1.583-1.389m2.417 7.056V12.75h.917c.937 0 1.583.682 1.583 1.389s-.646 1.389-1.583 1.389z"/><path d="M10.68 2.105a2.63 2.63 0 0 1 2.64 0l.001.001l6.611 3.8A2.65 2.65 0 0 1 21.25 8.2v7.603a2.66 2.66 0 0 1-1.318 2.291l-.003.002l-6.608 3.799h-.002a2.63 2.63 0 0 1-2.639 0h-.001l-6.608-3.8h-.003A2.64 2.64 0 0 1 2.75 15.8V8.198a2.66 2.66 0 0 1 1.318-2.291l.003-.002zM12.75 6.5a.75.75 0 0 0-1.5 0v.472h-.917c-1.64 0-3.083 1.234-3.083 2.89c0 1.655 1.443 2.888 3.083 2.888h.917v2.778H8a.75.75 0 0 0 0 1.5h3.25v.472a.75.75 0 0 0 1.5 0v-.472h.917c1.64 0 3.083-1.233 3.083-2.89c0-1.655-1.443-2.888-3.083-2.888h-.917V8.472h2.583a.75.75 0 0 0 0-1.5H12.75z"/></g>`), g.Group(children),
	)
}

func DollarOctagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M7.805 3.469C8.16 3.115 8.451 3 8.937 3h6.126c.486 0 .778.115 1.132.469l4.336 4.336c.354.354.469.646.469 1.132v6.126c0 .5-.125.788-.469 1.132l-4.336 4.336c-.354.354-.646.469-1.132.469H8.937c-.5 0-.788-.125-1.132-.469L3.47 16.195c-.355-.355-.47-.646-.47-1.132V8.937c0-.5.125-.788.469-1.132z"/><path d="M15.333 7.722H12m0 0h-1.667C9.045 7.722 8 8.68 8 9.862C8 11.041 9.045 12 10.333 12H12m0-4.278V6.5m0 1.222V12m0 0h1.667c1.288 0 2.333.958 2.333 2.139s-1.045 2.139-2.333 2.139H12M12 12v4.278m0 0H8m4 0V17.5"/></g>`), g.Group(children),
	)
}

func DollarOctagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M10.333 8.472h.917v2.778h-.917c-.937 0-1.583-.682-1.583-1.389s.646-1.389 1.583-1.389m2.417 7.056V12.75h.917c.937 0 1.583.682 1.583 1.389s-.646 1.389-1.583 1.389z"/><path d="M8.037 2.408a2.3 2.3 0 0 1 .9-.158h6.126c.302 0 .602.036.9.158s.54.31.762.53l4.337 4.337c.22.221.408.463.53.762c.123.298.158.598.158.9v6.126c0 .313-.039.616-.163.914a2.3 2.3 0 0 1-.525.748l-4.337 4.337a2.3 2.3 0 0 1-.762.53a2.3 2.3 0 0 1-.9.158H8.937c-.313 0-.616-.039-.914-.163a2.3 2.3 0 0 1-.748-.525l-4.337-4.337a2.3 2.3 0 0 1-.53-.762a2.3 2.3 0 0 1-.158-.9V8.937c0-.313.039-.616.163-.914a2.3 2.3 0 0 1 .525-.748l4.337-4.337c.221-.22.463-.408.762-.53M12.75 6.5a.75.75 0 0 0-1.5 0v.472h-.917c-1.64 0-3.083 1.234-3.083 2.89c0 1.655 1.443 2.888 3.083 2.888h.917v2.778H8a.75.75 0 0 0 0 1.5h3.25v.472a.75.75 0 0 0 1.5 0v-.472h.917c1.64 0 3.083-1.233 3.083-2.89c0-1.655-1.443-2.888-3.083-2.888h-.917V8.472h2.583a.75.75 0 0 0 0-1.5H12.75z"/></g>`), g.Group(children),
	)
}

func DollarSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12 2.25a.75.75 0 0 1 .75.75v1.25H17a.75.75 0 0 1 0 1.5h-4.25v5.5h1.75a4.25 4.25 0 0 1 0 8.5h-1.75V21a.75.75 0 0 1-1.5 0v-1.25H6a.75.75 0 0 1 0-1.5h5.25v-5.5H9.5a4.25 4.25 0 0 1 0-8.5h1.75V3a.75.75 0 0 1 .75-.75m-.75 3.5H9.5a2.75 2.75 0 0 0 0 5.5h1.75zm1.5 7v5.5h1.75a2.75 2.75 0 1 0 0-5.5z"/>`), g.Group(children),
	)
}

func DollarSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/><path d="M15.333 7.722H12m0 0h-1.667C9.045 7.722 8 8.68 8 9.862C8 11.041 9.045 12 10.333 12H12m0-4.278V6.5m0 1.222V12m0 0h1.667c1.288 0 2.333.958 2.333 2.139s-1.045 2.139-2.333 2.139H12M12 12v4.278m0 0H8m4 0V17.5"/></g>`), g.Group(children),
	)
}

func DollarSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M10.333 8.472h.917v2.778h-.917c-.937 0-1.583-.682-1.583-1.389s.646-1.389 1.583-1.389m2.417 7.056V12.75h.917c.937 0 1.583.682 1.583 1.389s-.646 1.389-1.583 1.389z"/><path d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057M12.75 6.5a.75.75 0 0 0-1.5 0v.472h-.917c-1.64 0-3.083 1.234-3.083 2.89c0 1.655 1.443 2.888 3.083 2.888h.917v2.778H8a.75.75 0 0 0 0 1.5h3.25v.472a.75.75 0 0 0 1.5 0v-.472h.917c1.64 0 3.083-1.233 3.083-2.89c0-1.655-1.443-2.888-3.083-2.888h-.917V8.472h2.583a.75.75 0 0 0 0-1.5H12.75z"/></g>`), g.Group(children),
	)
}

func DollarWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83"/><path d="M15.333 7.722H12m0 0h-1.667C9.045 7.722 8 8.68 8 9.862C8 11.041 9.045 12 10.333 12H12m0-4.278V6.5m0 1.222V12m0 0h1.667c1.288 0 2.333.958 2.333 2.139s-1.045 2.139-2.333 2.139H12M12 12v4.278m0 0H8m4 0V17.5"/></g>`), g.Group(children),
	)
}

func DollarWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M10.333 8.472h.917v2.778h-.917c-.937 0-1.583-.682-1.583-1.389s.646-1.389 1.583-1.389m2.417 7.056V12.75h.917c.937 0 1.583.682 1.583 1.389s-.646 1.389-1.583 1.389z"/><path d="M10.565 2.075a3.33 3.33 0 0 1 2.87 0c.394.189.755.497 1.26.928l.079.066c.48.41.939.604 1.58.655l.102.008c.662.053 1.135.09 1.547.236a3.33 3.33 0 0 1 2.03 2.029c.145.412.182.885.235 1.547l.008.102c.051.641.246 1.1.655 1.58l.066.078c.431.506.74.867.928 1.261a3.33 3.33 0 0 1 0 2.87c-.189.394-.497.755-.928 1.26l-.066.079c-.418.49-.605.951-.655 1.58l-.008.102c-.053.662-.09 1.135-.236 1.547a3.33 3.33 0 0 1-2.029 2.03c-.412.145-.885.182-1.547.235l-.102.008c-.641.051-1.1.246-1.58.655l-.079.066c-.505.431-.866.74-1.26.928a3.33 3.33 0 0 1-2.87 0c-.394-.189-.755-.497-1.26-.928l-.079-.066a2.56 2.56 0 0 0-1.58-.655l-.102-.008c-.662-.053-1.135-.09-1.547-.236a3.33 3.33 0 0 1-2.03-2.029c-.145-.412-.182-.885-.235-1.547l-.008-.102a2.56 2.56 0 0 0-.655-1.58l-.066-.079c-.431-.505-.74-.866-.928-1.26a3.33 3.33 0 0 1 0-2.87c.189-.394.497-.755.928-1.26l.066-.079a2.56 2.56 0 0 0 .655-1.58l.008-.102c.053-.662.09-1.135.236-1.547a3.33 3.33 0 0 1 2.029-2.03c.412-.145.885-.182 1.547-.235l.102-.008a2.56 2.56 0 0 0 1.58-.655l.078-.066c.506-.431.867-.74 1.261-.928M12.75 6.5a.75.75 0 0 0-1.5 0v.472h-.917c-1.64 0-3.083 1.234-3.083 2.89c0 1.655 1.443 2.888 3.083 2.888h.917v2.778H8a.75.75 0 0 0 0 1.5h3.25v.472a.75.75 0 0 0 1.5 0v-.472h.917c1.64 0 3.083-1.233 3.083-2.89c0-1.655-1.443-2.888-3.083-2.888h-.917V8.472h2.583a.75.75 0 0 0 0-1.5H12.75z"/></g>`), g.Group(children),
	)
}

func Dots(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M12 12.25v-.5m4 .5v-.5m-8 .5v-.5"/>`), g.Group(children),
	)
}

func DotsCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9 .25v-.5m4 .5v-.5m-8 .5v-.5"/>`), g.Group(children),
	)
}

func DotsCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12m10.5-.25a.75.75 0 0 0-1.5 0v.5a.75.75 0 0 0 1.5 0zM16 11a.75.75 0 0 0-.75.75v.5a.75.75 0 0 0 1.5 0v-.5A.75.75 0 0 0 16 11m-7.25.75a.75.75 0 0 0-1.5 0v.5a.75.75 0 0 0 1.5 0z"/>`), g.Group(children),
	)
}

func DotsDiamond(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M2.707 10.295a2.41 2.41 0 0 0 0 3.41l7.588 7.588a2.41 2.41 0 0 0 3.41 0l7.588-7.588a2.41 2.41 0 0 0 0-3.41l-7.588-7.588a2.41 2.41 0 0 0-3.41 0zM12 12.25v-.5m4 .5v-.5m-8 .5v-.5"/>`), g.Group(children),
	)
}

func DotsDiamondSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.79 1.49a3.16 3.16 0 0 1 3.445.687l7.588 7.588a3.16 3.16 0 0 1 0 4.47l-7.588 7.588a3.16 3.16 0 0 1-4.47 0l-7.588-7.588a3.16 3.16 0 0 1 0-4.47l7.588-7.589a3.2 3.2 0 0 1 1.025-.685m1.96 10.26a.75.75 0 0 0-1.5 0v.5a.75.75 0 0 0 1.5 0zM16 11a.75.75 0 0 0-.75.75v.5a.75.75 0 0 0 1.5 0v-.5A.75.75 0 0 0 16 11m-7.25.75a.75.75 0 0 0-1.5 0v.5a.75.75 0 0 0 1.5 0z"/>`), g.Group(children),
	)
}

func DotsHexagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M20.5 15.8V8.2a1.91 1.91 0 0 0-.944-1.645l-6.612-3.8a1.88 1.88 0 0 0-1.888 0l-6.612 3.8A1.9 1.9 0 0 0 3.5 8.2v7.602a1.91 1.91 0 0 0 .944 1.644l6.612 3.8a1.88 1.88 0 0 0 1.888 0l6.612-3.8A1.9 1.9 0 0 0 20.5 15.8M12 12.25v-.5m4 .5v-.5m-8 .5v-.5"/>`), g.Group(children),
	)
}

func DotsHexagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.68 2.105a2.63 2.63 0 0 1 2.64 0l.001.001l6.611 3.8A2.65 2.65 0 0 1 21.25 8.2v7.603a2.66 2.66 0 0 1-1.318 2.291l-.003.002l-6.608 3.799h-.002a2.63 2.63 0 0 1-2.639 0h-.001l-6.608-3.8h-.003A2.64 2.64 0 0 1 2.75 15.8V8.198a2.66 2.66 0 0 1 1.318-2.291l.003-.002zm2.07 9.645a.75.75 0 0 0-1.5 0v.5a.75.75 0 0 0 1.5 0zM16 11a.75.75 0 0 0-.75.75v.5a.75.75 0 0 0 1.5 0v-.5A.75.75 0 0 0 16 11m-7.25.75a.75.75 0 0 0-1.5 0v.5a.75.75 0 0 0 1.5 0z"/>`), g.Group(children),
	)
}

func DotsOctagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M7.805 3.469C8.16 3.115 8.451 3 8.937 3h6.126c.486 0 .778.115 1.132.469l4.336 4.336c.354.354.469.646.469 1.132v6.126c0 .5-.125.788-.469 1.132l-4.336 4.336c-.354.354-.646.469-1.132.469H8.937c-.5 0-.788-.125-1.132-.469L3.47 16.195c-.355-.355-.47-.646-.47-1.132V8.937c0-.5.125-.788.469-1.132zM12 12.25v-.5m4 .5v-.5m-8 .5v-.5"/>`), g.Group(children),
	)
}

func DotsOctagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.037 2.408a2.3 2.3 0 0 1 .9-.158h6.126c.302 0 .602.036.9.158s.54.31.762.53l4.337 4.337c.22.221.408.463.53.762c.123.298.158.598.158.9v6.126c0 .313-.039.616-.163.914a2.3 2.3 0 0 1-.525.748l-4.337 4.337a2.3 2.3 0 0 1-.762.53a2.3 2.3 0 0 1-.9.158H8.937c-.313 0-.616-.039-.914-.163a2.3 2.3 0 0 1-.748-.525l-4.337-4.337a2.3 2.3 0 0 1-.53-.762a2.3 2.3 0 0 1-.158-.9V8.937c0-.313.039-.616.163-.914a2.3 2.3 0 0 1 .525-.748l4.337-4.337c.221-.22.463-.408.762-.53m4.713 9.342a.75.75 0 0 0-1.5 0v.5a.75.75 0 0 0 1.5 0zM16 11a.75.75 0 0 0-.75.75v.5a.75.75 0 0 0 1.5 0v-.5A.75.75 0 0 0 16 11m-7.25.75a.75.75 0 0 0-1.5 0v.5a.75.75 0 0 0 1.5 0z"/>`), g.Group(children),
	)
}

func DotsSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12 11a.75.75 0 0 1 .75.75v.5a.75.75 0 0 1-1.5 0v-.5A.75.75 0 0 1 12 11m4 0a.75.75 0 0 1 .75.75v.5a.75.75 0 0 1-1.5 0v-.5A.75.75 0 0 1 16 11m-8 0a.75.75 0 0 1 .75.75v.5a.75.75 0 0 1-1.5 0v-.5A.75.75 0 0 1 8 11"/>`), g.Group(children),
	)
}

func DotsSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6zm9 2.85v-.5m4 .5v-.5m-8 .5v-.5"/>`), g.Group(children),
	)
}

func DotsSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057m3.383 9.5a.75.75 0 0 0-1.5 0v.5a.75.75 0 0 0 1.5 0zM16 11a.75.75 0 0 0-.75.75v.5a.75.75 0 0 0 1.5 0v-.5A.75.75 0 0 0 16 11m-7.25.75a.75.75 0 0 0-1.5 0v.5a.75.75 0 0 0 1.5 0z"/>`), g.Group(children),
	)
}

func DotsVertical(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M12.25 12h-.5m.5-4h-.5m.5 8h-.5"/>`), g.Group(children),
	)
}

func DotsVerticalCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-8.75 0h-.5m.5-4h-.5m.5 8h-.5"/>`), g.Group(children),
	)
}

func DotsVerticalCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12m9.5-.75a.75.75 0 0 0 0 1.5h.5a.75.75 0 0 0 0-1.5zM11 8c0 .414.336.75.75.75h.5a.75.75 0 0 0 0-1.5h-.5A.75.75 0 0 0 11 8m.75 7.25a.75.75 0 0 0 0 1.5h.5a.75.75 0 0 0 0-1.5z"/>`), g.Group(children),
	)
}

func DotsVerticalDiamond(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M2.707 10.295a2.41 2.41 0 0 0 0 3.41l7.588 7.588a2.41 2.41 0 0 0 3.41 0l7.588-7.588a2.41 2.41 0 0 0 0-3.41l-7.588-7.588a2.41 2.41 0 0 0-3.41 0zM12.25 12h-.5m.5-4h-.5m.5 8h-.5"/>`), g.Group(children),
	)
}

func DotsVerticalDiamondSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.79 1.49a3.16 3.16 0 0 1 3.445.687l7.588 7.588a3.16 3.16 0 0 1 0 4.47l-7.588 7.588a3.16 3.16 0 0 1-4.47 0l-7.588-7.588a3.16 3.16 0 0 1 0-4.47l7.588-7.589a3.2 3.2 0 0 1 1.025-.685m.96 9.76a.75.75 0 0 0 0 1.5h.5a.75.75 0 0 0 0-1.5zM11 8c0 .414.336.75.75.75h.5a.75.75 0 0 0 0-1.5h-.5A.75.75 0 0 0 11 8m.75 7.25a.75.75 0 0 0 0 1.5h.5a.75.75 0 0 0 0-1.5z"/>`), g.Group(children),
	)
}

func DotsVerticalHexagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M20.5 15.8V8.2a1.91 1.91 0 0 0-.944-1.645l-6.612-3.8a1.88 1.88 0 0 0-1.888 0l-6.612 3.8A1.9 1.9 0 0 0 3.5 8.2v7.602a1.91 1.91 0 0 0 .944 1.644l6.612 3.8a1.88 1.88 0 0 0 1.888 0l6.612-3.8A1.9 1.9 0 0 0 20.5 15.8M12.25 12h-.5m.5-4h-.5m.5 8h-.5"/>`), g.Group(children),
	)
}

func DotsVerticalHexagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.68 2.105a2.63 2.63 0 0 1 2.64 0l.001.001l6.611 3.8A2.65 2.65 0 0 1 21.25 8.2v7.603a2.66 2.66 0 0 1-1.318 2.291l-.003.002l-6.608 3.799h-.002a2.63 2.63 0 0 1-2.639 0h-.001l-6.608-3.8h-.003A2.64 2.64 0 0 1 2.75 15.8V8.198a2.66 2.66 0 0 1 1.318-2.291l.003-.002zm1.07 9.145a.75.75 0 0 0 0 1.5h.5a.75.75 0 0 0 0-1.5zM11 8c0 .414.336.75.75.75h.5a.75.75 0 0 0 0-1.5h-.5A.75.75 0 0 0 11 8m.75 7.25a.75.75 0 0 0 0 1.5h.5a.75.75 0 0 0 0-1.5z"/>`), g.Group(children),
	)
}

func DotsVerticalOctagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M7.805 3.469C8.16 3.115 8.451 3 8.937 3h6.126c.486 0 .778.115 1.132.469l4.336 4.336c.354.354.469.646.469 1.132v6.126c0 .5-.125.788-.469 1.132l-4.336 4.336c-.354.354-.646.469-1.132.469H8.937c-.5 0-.788-.125-1.132-.469L3.47 16.195c-.355-.355-.47-.646-.47-1.132V8.937c0-.5.125-.788.469-1.132zM12.25 12h-.5m.5-4h-.5m.5 8h-.5"/>`), g.Group(children),
	)
}

func DotsVerticalOctagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.037 2.408a2.3 2.3 0 0 1 .9-.158h6.126c.302 0 .602.036.9.158s.54.31.762.53l4.337 4.337c.22.221.408.463.53.762c.123.298.158.598.158.9v6.126c0 .313-.039.616-.163.914a2.3 2.3 0 0 1-.525.748l-4.337 4.337a2.3 2.3 0 0 1-.762.53a2.3 2.3 0 0 1-.9.158H8.937c-.313 0-.616-.039-.914-.163a2.3 2.3 0 0 1-.748-.525l-4.337-4.337a2.3 2.3 0 0 1-.53-.762a2.3 2.3 0 0 1-.158-.9V8.937c0-.313.039-.616.163-.914a2.3 2.3 0 0 1 .525-.748l4.337-4.337c.221-.22.463-.408.762-.53m3.713 8.842a.75.75 0 0 0 0 1.5h.5a.75.75 0 0 0 0-1.5zM11 8c0 .414.336.75.75.75h.5a.75.75 0 0 0 0-1.5h-.5A.75.75 0 0 0 11 8m.75 7.25a.75.75 0 0 0 0 1.5h.5a.75.75 0 0 0 0-1.5z"/>`), g.Group(children),
	)
}

func DotsVerticalSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M11 12a.75.75 0 0 1 .75-.75h.5a.75.75 0 0 1 0 1.5h-.5A.75.75 0 0 1 11 12m0-4a.75.75 0 0 1 .75-.75h.5a.75.75 0 0 1 0 1.5h-.5A.75.75 0 0 1 11 8m0 8a.75.75 0 0 1 .75-.75h.5a.75.75 0 0 1 0 1.5h-.5A.75.75 0 0 1 11 16"/>`), g.Group(children),
	)
}

func DotsVerticalSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6zm9.25 2.6h-.5m.5-4h-.5m.5 8h-.5"/>`), g.Group(children),
	)
}

func DotsVerticalSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057m2.383 9a.75.75 0 0 0 0 1.5h.5a.75.75 0 0 0 0-1.5zM11 8c0 .414.336.75.75.75h.5a.75.75 0 0 0 0-1.5h-.5A.75.75 0 0 0 11 8m.75 7.25a.75.75 0 0 0 0 1.5h.5a.75.75 0 0 0 0-1.5z"/>`), g.Group(children),
	)
}

func DotsVerticalWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83M12.25 12h-.5m.5-4h-.5m.5 8h-.5"/>`), g.Group(children),
	)
}

func DotsVerticalWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.565 2.075a3.33 3.33 0 0 1 2.87 0c.394.189.755.497 1.26.928l.079.066c.48.41.939.604 1.58.655l.102.008c.662.053 1.135.09 1.547.236a3.33 3.33 0 0 1 2.03 2.029c.145.412.182.885.235 1.547l.008.102c.051.641.246 1.1.655 1.58l.066.078c.431.506.74.867.928 1.261a3.33 3.33 0 0 1 0 2.87c-.189.394-.497.755-.928 1.26l-.066.079c-.418.49-.605.951-.655 1.58l-.008.102c-.053.662-.09 1.135-.236 1.547a3.33 3.33 0 0 1-2.029 2.03c-.412.145-.885.182-1.547.235l-.102.008c-.641.051-1.1.246-1.58.655l-.079.066c-.505.431-.866.74-1.26.928a3.33 3.33 0 0 1-2.87 0c-.394-.189-.755-.497-1.26-.928l-.079-.066a2.56 2.56 0 0 0-1.58-.655l-.102-.008c-.662-.053-1.135-.09-1.547-.236a3.33 3.33 0 0 1-2.03-2.029c-.145-.412-.182-.885-.235-1.547l-.008-.102a2.56 2.56 0 0 0-.655-1.58l-.066-.079c-.431-.505-.74-.866-.928-1.26a3.33 3.33 0 0 1 0-2.87c.189-.394.497-.755.928-1.26l.066-.079a2.56 2.56 0 0 0 .655-1.58l.008-.102c.053-.662.09-1.135.236-1.547a3.33 3.33 0 0 1 2.029-2.03c.412-.145.885-.182 1.547-.235l.102-.008a2.56 2.56 0 0 0 1.58-.655l.078-.066c.506-.431.867-.74 1.261-.928m1.185 9.175a.75.75 0 0 0 0 1.5h.5a.75.75 0 0 0 0-1.5zM11 8c0 .414.336.75.75.75h.5a.75.75 0 0 0 0-1.5h-.5A.75.75 0 0 0 11 8m.75 7.25a.75.75 0 0 0 0 1.5h.5a.75.75 0 0 0 0-1.5z"/>`), g.Group(children),
	)
}

func DotsWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83M12 12.25v-.5m4 .5v-.5m-8 .5v-.5"/>`), g.Group(children),
	)
}

func DotsWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.565 2.075a3.33 3.33 0 0 1 2.87 0c.394.189.755.497 1.26.928l.079.066c.48.41.939.604 1.58.655l.102.008c.662.053 1.135.09 1.547.236a3.33 3.33 0 0 1 2.03 2.029c.145.412.182.885.235 1.547l.008.102c.051.641.246 1.1.655 1.58l.066.078c.431.506.74.867.928 1.261a3.33 3.33 0 0 1 0 2.87c-.189.394-.497.755-.928 1.26l-.066.079c-.418.49-.605.951-.655 1.58l-.008.102c-.053.662-.09 1.135-.236 1.547a3.33 3.33 0 0 1-2.029 2.03c-.412.145-.885.182-1.547.235l-.102.008c-.641.051-1.1.246-1.58.655l-.079.066c-.505.431-.866.74-1.26.928a3.33 3.33 0 0 1-2.87 0c-.394-.189-.755-.497-1.26-.928l-.079-.066a2.56 2.56 0 0 0-1.58-.655l-.102-.008c-.662-.053-1.135-.09-1.547-.236a3.33 3.33 0 0 1-2.03-2.029c-.145-.412-.182-.885-.235-1.547l-.008-.102a2.56 2.56 0 0 0-.655-1.58l-.066-.079c-.431-.505-.74-.866-.928-1.26a3.33 3.33 0 0 1 0-2.87c.189-.394.497-.755.928-1.26l.066-.079a2.56 2.56 0 0 0 .655-1.58l.008-.102c.053-.662.09-1.135.236-1.547a3.33 3.33 0 0 1 2.029-2.03c.412-.145.885-.182 1.547-.235l.102-.008a2.56 2.56 0 0 0 1.58-.655l.078-.066c.506-.431.867-.74 1.261-.928m2.185 9.675a.75.75 0 0 0-1.5 0v.5a.75.75 0 0 0 1.5 0zM16 11a.75.75 0 0 0-.75.75v.5a.75.75 0 0 0 1.5 0v-.5A.75.75 0 0 0 16 11m-7.25.75a.75.75 0 0 0-1.5 0v.5a.75.75 0 0 0 1.5 0z"/>`), g.Group(children),
	)
}

func Download(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M4 16.004V17a3 3 0 0 0 3 3h10a3 3 0 0 0 3-3v-1M12 4.5v11m3.5-3.5L12 15.5L8.5 12"/>`), g.Group(children),
	)
}

func DownloadSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M20 15.25a.75.75 0 0 1 .75.75v1A3.75 3.75 0 0 1 17 20.75H7A3.75 3.75 0 0 1 3.25 17v-.996a.75.75 0 1 1 1.5 0V17A2.25 2.25 0 0 0 7 19.25h10A2.25 2.25 0 0 0 19.25 17v-1a.75.75 0 0 1 .75-.75"/><path d="M12.75 4.5a.75.75 0 0 0-1.5 0v6.97H7.97a.75.75 0 0 0 0 1.06l3.5 3.5a.75.75 0 0 0 1.06 0l3.5-3.5a.75.75 0 0 0 0-1.06h-3.28z"/></g>`), g.Group(children),
	)
}

func Drop(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M12.495 3c3.58 3.56 9.345 7.602 6.932 13.397C18.275 19.163 15.492 21 12.5 21s-5.775-1.837-6.927-4.603C3.161 10.607 8.92 6.561 12.495 3"/>`), g.Group(children),
	)
}

func DropSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M13.024 2.468a.75.75 0 0 0-1.058 0c-.508.506-1.04 1.002-1.594 1.52c-.428.4-.87.813-1.327 1.254c-1.015.98-2.032 2.036-2.863 3.18c-1.677 2.306-2.642 5.043-1.301 8.264C6.15 19.734 9.208 21.75 12.5 21.75s6.35-2.016 7.62-5.064c1.341-3.223.374-5.96-1.305-8.267c-.832-1.143-1.85-2.2-2.866-3.179c-.457-.44-.901-.854-1.33-1.254a68 68 0 0 1-1.595-1.518"/>`), g.Group(children),
	)
}

func Ear(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M7.555 16.46c0 1.68.86 3.04 2.415 3.04s2.819-1.14 3.221-3.04c.733-3.451 5.496-4.293 3.628-8.878C14.799 2.622 6.75 3.899 6.75 9.618"/><path d="M9.5 14c.46 0 .921-.29 1.295-.618c.572-.5.613-1.351.194-1.985c-.407-.619-1.336-1.173-1.156-2.018c.595-2.793 4.222-2.41 4.463.383"/></g>`), g.Group(children),
	)
}

func EarSlash(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M7.555 16.46c0 1.68.86 3.04 2.415 3.04s2.819-1.14 3.221-3.04c.733-3.451 5.496-4.293 3.628-8.878C14.799 2.622 6.75 3.899 6.75 9.618"/><path d="M9.5 14c.46 0 .921-.29 1.295-.618c.572-.5.613-1.351.194-1.985c-.407-.619-1.336-1.173-1.156-2.018c.595-2.793 4.222-2.41 4.463.383M21 3L3 21"/></g>`), g.Group(children),
	)
}

func EarSlashSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M21.53 2.47a.75.75 0 0 1 0 1.06l-3.946 3.947c.451 1.187.517 2.208.287 3.124c-.238.945-.77 1.694-1.323 2.335c-.243.282-.503.556-.75.817l-.1.105a17 17 0 0 0-.788.878c-.48.587-.836 1.179-.985 1.879c-.457 2.156-1.96 3.635-3.955 3.635a2.9 2.9 0 0 1-2.393-1.193a3.7 3.7 0 0 1-.533-1.04L3.53 21.53a.75.75 0 0 1-1.06-1.06l6.3-6.3a.752.752 0 0 1 .73-.92a.7.7 0 0 0 .252-.062l.757-.758a.87.87 0 0 0-.146-.62a3 3 0 0 0-.3-.36a8 8 0 0 1-.454-.505c-.305-.376-.672-.96-.51-1.722c.377-1.77 1.78-2.625 3.169-2.494a3.02 3.02 0 0 1 2.367 1.575l1.133-1.132c-.997-1.566-2.849-2.16-4.606-1.839C9.182 5.695 7.5 7.188 7.5 9.618a.75.75 0 0 1-1.5 0c0-3.289 2.342-5.294 4.892-5.76c2.139-.391 4.552.279 5.957 2.232l3.62-3.62a.75.75 0 0 1 1.061 0m-5.14 6.2l-1.42 1.42a.75.75 0 0 1-.347.346L11.82 13.24c-.12.258-.294.498-.53.705a4 4 0 0 1-.642.467l-2.333 2.332c.042.593.215 1.08.466 1.417c.274.368.658.588 1.19.588c1.115 0 2.138-.801 2.486-2.446c.218-1.025.732-1.833 1.292-2.518c.28-.34.577-.66.86-.958l.1-.106c.25-.264.485-.512.704-.766c.495-.573.85-1.11 1.003-1.72c.107-.427.126-.933-.027-1.565m-4.649 2.527l1.745-1.745c-.201-.783-.79-1.176-1.36-1.23c-.633-.06-1.341.29-1.56 1.312c-.017.083-.01.198.208.466c.087.108.183.21.298.333l.089.095c.141.152.315.343.455.555q.068.104.125.214"/>`), g.Group(children),
	)
}

func EarSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M10.892 3.858c2.532-.463 5.448.561 6.621 3.44c.515 1.265.599 2.341.358 3.303c-.238.945-.77 1.694-1.323 2.335c-.243.282-.503.556-.75.818l-.1.104a17 17 0 0 0-.788.878c-.48.587-.837 1.179-.985 1.88c-.457 2.155-1.96 3.634-3.955 3.634a2.9 2.9 0 0 1-2.393-1.193c-.528-.71-.772-1.64-.772-2.598a.75.75 0 0 1 1.5 0c0 .723.186 1.313.476 1.703c.274.368.658.588 1.19.588c1.115 0 2.138-.801 2.486-2.446c.218-1.025.732-1.833 1.292-2.518c.28-.34.577-.66.86-.958l.1-.106c.25-.264.485-.512.704-.766c.495-.573.85-1.11 1.003-1.72c.149-.594.128-1.342-.292-2.371c-.847-2.08-2.965-2.897-4.962-2.532C9.182 5.695 7.5 7.188 7.5 9.618a.75.75 0 0 1-1.5 0c0-3.289 2.342-5.294 4.892-5.76"/><path d="M12.126 8.223c-.633-.06-1.341.29-1.56 1.312c-.017.083-.01.198.208.466c.087.108.183.21.298.333l.089.095c.141.152.315.343.455.555c.585.888.576 2.17-.326 2.962c-.403.353-1.042.804-1.79.804a.75.75 0 0 1 0-1.5c.173 0 .455-.129.801-.432c.24-.21.313-.628.062-1.008a3 3 0 0 0-.3-.36a8 8 0 0 1-.454-.505c-.305-.376-.672-.96-.51-1.722c.377-1.77 1.78-2.625 3.169-2.494c1.37.13 2.623 1.21 2.775 2.97a.75.75 0 1 1-1.494.128c-.09-1.033-.77-1.542-1.423-1.604"/></g>`), g.Group(children),
	)
}

func Earth(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/><path d="M13 3.048a5 5 0 0 0 .982 8.3c2.018 1.013 2.789-.352 3.881.384c.71.478.897 1.44.42 2.149c-.501.742-1.283 1.119-1.148 2.336c.077.687.499 1.278 1.045 1.783M4 9.28a4.98 4.98 0 0 1 2.806 1.846a4.98 4.98 0 0 1 .992 3.424c-.052.626.356 1.258.881 1.603A2.71 2.71 0 0 1 9 20.44"/></g>`), g.Group(children),
	)
}

func EarthSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M4.467 8.63a5.73 5.73 0 0 1 2.938 2.044a5.73 5.73 0 0 1 1.14 3.939c-.023.275.178.672.546.912a3.46 3.46 0 0 1 1.15 4.537A8.3 8.3 0 0 0 12 20.25c2.054 0 3.932-.75 5.376-1.992c-.486-.518-.898-1.169-.986-1.958c-.09-.816.136-1.396.47-1.864a6 6 0 0 1 .42-.51l.033-.037c.142-.16.254-.289.347-.428a.8.8 0 0 0-.216-1.107c-.217-.146-.322-.124-.909 0l-.11.024c-.682.144-1.568.249-2.78-.36a5.75 5.75 0 0 1-2.267-8.246a8.26 8.26 0 0 0-6.91 4.858m8.51-6.332a.8.8 0 0 1 .209.023C18.01 2.906 21.75 7.017 21.75 12c0 5.385-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12a9.75 9.75 0 0 1 10.727-9.702"/>`), g.Group(children),
	)
}

func Eclipse(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M10.183 3.183A9 9 0 0 0 3 12a9 9 0 0 0 17.817 1.817M10.183 3.183a9 9 0 0 1 10.633 10.633M10.184 3.184c-1.268 6.188 4.533 11.884 10.634 10.634"/>`), g.Group(children),
	)
}

func EclipseSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.833 3.832c-.737 5.292 4.105 10.058 9.335 9.335a8.25 8.25 0 0 0-9.336-9.335m-.8-1.383A9.8 9.8 0 0 1 12 2.25a9.75 9.75 0 0 1 9.551 11.717c-.91 4.442-4.84 7.783-9.551 7.783A9.75 9.75 0 0 1 2.25 12c0-4.711 3.341-8.64 7.783-9.551"/>`), g.Group(children),
	)
}

func Edit(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M4 21h16M5.666 13.187A2.28 2.28 0 0 0 5 14.797V18h3.223c.604 0 1.183-.24 1.61-.668l9.5-9.505a2.28 2.28 0 0 0 0-3.22l-.938-.94a2.277 2.277 0 0 0-3.222.001z"/>`), g.Group(children),
	)
}

func EditOne(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9.533 11.15A1.82 1.82 0 0 0 9 12.438V15h2.578c.483 0 .947-.192 1.289-.534l7.6-7.604a1.82 1.82 0 0 0 0-2.577l-.751-.751a1.82 1.82 0 0 0-2.578 0z"/><path d="M21 12c0 4.243 0 6.364-1.318 7.682S16.242 21 12 21s-6.364 0-7.682-1.318S3 16.242 3 12s0-6.364 1.318-7.682S7.758 3 12 3"/></g>`), g.Group(children),
	)
}

func EditOneSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M16.607 3.005a2.57 2.57 0 0 1 3.64-.001l.75.751a2.57 2.57 0 0 1 0 3.637l-7.6 7.604a2.57 2.57 0 0 1-1.819.754H9a.75.75 0 0 1-.75-.75v-2.562c0-.682.27-1.336.752-1.818z"/><path d="M11.943 2.25H12a.75.75 0 0 1 0 1.5c-2.143 0-3.674.002-4.838.158c-1.142.154-1.817.444-2.314.94c-.496.497-.786 1.172-.94 2.314C3.752 8.326 3.75 9.857 3.75 12s.002 3.674.158 4.838c.154 1.142.444 1.817.94 2.314c.497.496 1.172.786 2.314.94c1.164.156 2.695.158 4.838.158s3.674-.002 4.838-.158c1.142-.154 1.817-.444 2.314-.94c.496-.497.786-1.172.94-2.314c.156-1.164.158-2.696.158-4.838a.75.75 0 0 1 1.5 0v.057c0 2.073 0 3.705-.171 4.98c-.176 1.31-.545 2.354-1.367 3.175c-.821.822-1.866 1.19-3.174 1.367c-1.276.171-2.908.171-4.981.171h-.114c-2.073 0-3.705 0-4.98-.171c-1.31-.176-2.354-.545-3.175-1.367c-.822-.821-1.19-1.866-1.367-3.174c-.171-1.276-.171-2.908-.171-4.981v-.114c0-2.073 0-3.705.171-4.98c.176-1.31.545-2.354 1.367-3.175c.821-.822 1.866-1.19 3.174-1.367c1.276-.171 2.908-.171 4.981-.171"/></g>`), g.Group(children),
	)
}

func EditSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M18.925 3.137a3.027 3.027 0 0 0-4.283.001l-9.507 9.52a3.03 3.03 0 0 0-.885 2.139V18c0 .414.336.75.75.75h3.223c.803 0 1.573-.32 2.14-.887l9.5-9.506a3.03 3.03 0 0 0 0-4.28zM4 20.25a.75.75 0 0 0 0 1.5h16a.75.75 0 0 0 0-1.5z"/>`), g.Group(children),
	)
}

func Egg(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M12 21c4.004 0 7.25-3.224 7.25-7.2S16.004 3 12 3S4.75 9.824 4.75 13.8S7.996 21 12 21"/>`), g.Group(children),
	)
}

func EggSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12 2.25c-1.223 0-2.337.521-3.294 1.295c-.955.773-1.79 1.827-2.477 2.98C4.864 8.817 4 11.65 4 13.8c0 4.395 3.587 7.95 8 7.95s8-3.555 8-7.95c0-2.151-.864-4.983-2.23-7.275c-.686-1.153-1.52-2.207-2.476-2.98C14.337 2.771 13.222 2.25 12 2.25"/>`), g.Group(children),
	)
}

func Eight(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M11.875 12S15 12.625 15 14.5S13.6 17 11.875 17s-3.125-.625-3.125-2.5s3.125-2.5 3.125-2.5m0 0S15 11.375 15 9.5S13.6 7 11.875 7S8.75 7.625 8.75 9.5s3.125 2.5 3.125 2.5"/>`), g.Group(children),
	)
}

func EightCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/><path d="M12 12s2.5.5 2.5 2s-1.12 2-2.5 2s-2.5-.5-2.5-2s2.5-2 2.5-2m0 0s2.5-.5 2.5-2s-1.12-2-2.5-2s-2.5.5-2.5 2s2.5 2 2.5 2"/></g>`), g.Group(children),
	)
}

func EightCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M10.008 9.935c0-.597.212-.91.496-1.104c.324-.22.83-.342 1.496-.342s1.172.122 1.496.342c.284.193.496.507.496 1.104c0 .388-.335.75-.963 1.06a5 5 0 0 1-1.029.369a5.5 5.5 0 0 1-1.03-.37c-.627-.31-.962-.67-.962-1.06m1.763 2.764c.091-.027.17-.047.229-.062a5.5 5.5 0 0 1 1.03.37c.627.31.962.67.962 1.06c0 .596-.212.91-.496 1.103c-.324.22-.83.342-1.496.342s-1.172-.122-1.496-.342c-.284-.193-.496-.507-.496-1.104c0-.388.335-.75.963-1.06a5 5 0 0 1 .8-.307"/><path d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12m6.5-2.065c0 1.053.803 1.702 1.462 2.065c-.66.363-1.462 1.012-1.462 2.065c0 .952.374 1.671 1.04 2.123c.624.426 1.428.562 2.21.562s1.586-.136 2.21-.562c.666-.452 1.04-1.17 1.04-2.123c0-1.053-.803-1.702-1.462-2.065c.66-.363 1.462-1.012 1.462-2.065c0-.952-.374-1.671-1.04-2.123c-.624-.426-1.428-.562-2.21-.562s-1.586.136-2.21.562c-.666.452-1.04 1.17-1.04 2.123"/></g>`), g.Group(children),
	)
}

func EightDiamond(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M12 12s2.5.5 2.5 2s-1.12 2-2.5 2s-2.5-.5-2.5-2s2.5-2 2.5-2m0 0s2.5-.5 2.5-2s-1.12-2-2.5-2s-2.5.5-2.5 2s2.5 2 2.5 2"/><path d="M2.707 10.295a2.41 2.41 0 0 0 0 3.41l7.588 7.588a2.41 2.41 0 0 0 3.41 0l7.588-7.588a2.41 2.41 0 0 0 0-3.41l-7.588-7.588a2.41 2.41 0 0 0-3.41 0z"/></g>`), g.Group(children),
	)
}

func EightDiamondSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M10.008 9.935c0-.597.212-.91.496-1.104c.324-.22.83-.342 1.496-.342s1.172.122 1.496.342c.284.193.496.507.496 1.104c0 .388-.335.75-.963 1.06a5 5 0 0 1-1.029.369a5.5 5.5 0 0 1-1.03-.37c-.627-.31-.962-.67-.962-1.06m1.763 2.764c.091-.027.17-.047.229-.062a5.5 5.5 0 0 1 1.03.37c.627.31.962.67.962 1.06c0 .596-.212.91-.496 1.103c-.324.22-.83.342-1.496.342s-1.172-.122-1.496-.342c-.284-.193-.496-.507-.496-1.104c0-.388.335-.75.963-1.06a5 5 0 0 1 .8-.307"/><path d="M10.79 1.49a3.16 3.16 0 0 1 3.445.687l7.588 7.588a3.16 3.16 0 0 1 0 4.47l-7.588 7.588a3.16 3.16 0 0 1-4.47 0l-7.588-7.588a3.16 3.16 0 0 1 0-4.47l7.588-7.589a3.2 3.2 0 0 1 1.025-.685M8.75 9.936c0 1.053.803 1.702 1.462 2.065c-.66.363-1.462 1.012-1.462 2.065c0 .952.374 1.671 1.04 2.123c.624.426 1.428.562 2.21.562s1.586-.136 2.21-.562c.666-.452 1.04-1.17 1.04-2.123c0-1.053-.803-1.702-1.462-2.065c.66-.363 1.462-1.012 1.462-2.065c0-.952-.374-1.671-1.04-2.123c-.624-.426-1.428-.562-2.21-.562s-1.586.136-2.21.562c-.666.452-1.04 1.17-1.04 2.123"/></g>`), g.Group(children),
	)
}

func EightHexagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M12 12s2.5.5 2.5 2s-1.12 2-2.5 2s-2.5-.5-2.5-2s2.5-2 2.5-2m0 0s2.5-.5 2.5-2s-1.12-2-2.5-2s-2.5.5-2.5 2s2.5 2 2.5 2"/><path d="M20.5 15.8V8.2a1.91 1.91 0 0 0-.944-1.645l-6.612-3.8a1.88 1.88 0 0 0-1.888 0l-6.612 3.8A1.9 1.9 0 0 0 3.5 8.2v7.602a1.91 1.91 0 0 0 .944 1.644l6.612 3.8a1.88 1.88 0 0 0 1.888 0l6.612-3.8A1.9 1.9 0 0 0 20.5 15.8"/></g>`), g.Group(children),
	)
}

func EightHexagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M10.008 9.935c0-.597.212-.91.496-1.104c.324-.22.83-.342 1.496-.342s1.172.122 1.496.342c.284.193.496.507.496 1.104c0 .388-.335.75-.963 1.06a5 5 0 0 1-1.029.369a5.5 5.5 0 0 1-1.03-.37c-.627-.31-.962-.67-.962-1.06m1.763 2.764c.091-.027.17-.047.229-.062a5.5 5.5 0 0 1 1.03.37c.627.31.962.67.962 1.06c0 .596-.212.91-.496 1.103c-.324.22-.83.342-1.496.342s-1.172-.122-1.496-.342c-.284-.193-.496-.507-.496-1.104c0-.388.335-.75.963-1.06a5 5 0 0 1 .8-.307"/><path d="M10.68 2.105a2.63 2.63 0 0 1 2.64 0l.001.001l6.611 3.8A2.65 2.65 0 0 1 21.25 8.2v7.603a2.66 2.66 0 0 1-1.318 2.291l-.003.002l-6.608 3.799h-.002a2.63 2.63 0 0 1-2.639 0h-.001l-6.608-3.8h-.003A2.64 2.64 0 0 1 2.75 15.8V8.198a2.66 2.66 0 0 1 1.318-2.291l.003-.002zm-1.93 7.83c0 1.053.803 1.702 1.462 2.065c-.66.363-1.462 1.012-1.462 2.065c0 .952.374 1.671 1.04 2.123c.624.426 1.428.562 2.21.562s1.586-.136 2.21-.562c.666-.452 1.04-1.17 1.04-2.123c0-1.053-.803-1.702-1.462-2.065c.66-.363 1.462-1.012 1.462-2.065c0-.952-.374-1.671-1.04-2.123c-.624-.426-1.428-.562-2.21-.562s-1.586.136-2.21.562c-.666.452-1.04 1.17-1.04 2.123"/></g>`), g.Group(children),
	)
}

func EightOctagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M12 12s2.5.5 2.5 2s-1.12 2-2.5 2s-2.5-.5-2.5-2s2.5-2 2.5-2m0 0s2.5-.5 2.5-2s-1.12-2-2.5-2s-2.5.5-2.5 2s2.5 2 2.5 2"/><path d="M7.805 3.469C8.16 3.115 8.451 3 8.937 3h6.126c.486 0 .778.115 1.132.469l4.336 4.336c.354.354.469.646.469 1.132v6.126c0 .5-.125.788-.469 1.132l-4.336 4.336c-.354.354-.646.469-1.132.469H8.937c-.5 0-.788-.125-1.132-.469L3.47 16.195c-.355-.355-.47-.646-.47-1.132V8.937c0-.5.125-.788.469-1.132z"/></g>`), g.Group(children),
	)
}

func EightOctagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M10.008 9.935c0-.597.212-.91.496-1.104c.324-.22.83-.342 1.496-.342s1.172.122 1.496.342c.284.193.496.507.496 1.104c0 .388-.335.75-.963 1.06a5 5 0 0 1-1.029.369a5.5 5.5 0 0 1-1.03-.37c-.627-.31-.962-.67-.962-1.06m1.763 2.764c.091-.027.17-.047.229-.062a5.5 5.5 0 0 1 1.03.37c.627.31.962.67.962 1.06c0 .596-.212.91-.496 1.103c-.324.22-.83.342-1.496.342s-1.172-.122-1.496-.342c-.284-.193-.496-.507-.496-1.104c0-.388.335-.75.963-1.06a5 5 0 0 1 .8-.307"/><path d="M8.037 2.408a2.3 2.3 0 0 1 .9-.158h6.126c.302 0 .602.036.9.158s.54.31.762.53l4.337 4.337c.22.221.408.463.53.762c.123.298.158.598.158.9v6.126c0 .313-.039.616-.163.914a2.3 2.3 0 0 1-.525.748l-4.337 4.337a2.3 2.3 0 0 1-.762.53a2.3 2.3 0 0 1-.9.158H8.937c-.313 0-.616-.039-.914-.163a2.3 2.3 0 0 1-.748-.525l-4.337-4.337a2.3 2.3 0 0 1-.53-.762a2.3 2.3 0 0 1-.158-.9V8.937c0-.313.039-.616.163-.914a2.3 2.3 0 0 1 .525-.748l4.337-4.337c.221-.22.463-.408.762-.53m.713 7.527c0 1.053.803 1.702 1.462 2.065c-.66.363-1.462 1.012-1.462 2.065c0 .952.374 1.671 1.04 2.123c.624.426 1.428.562 2.21.562s1.586-.136 2.21-.562c.666-.452 1.04-1.17 1.04-2.123c0-1.053-.803-1.702-1.462-2.065c.66-.363 1.462-1.012 1.462-2.065c0-.952-.374-1.671-1.04-2.123c-.624-.426-1.428-.562-2.21-.562s-1.586.136-2.21.562c-.666.452-1.04 1.17-1.04 2.123"/></g>`), g.Group(children),
	)
}

func EightSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.092 8.164c-.339.234-.592.614-.592 1.336c0 .47.4.908 1.148 1.282a6 6 0 0 0 1.227.448a6.4 6.4 0 0 0 1.227-.448c.749-.374 1.148-.812 1.148-1.282c0-.722-.253-1.102-.591-1.336c-.386-.267-.99-.414-1.784-.414s-1.398.147-1.783.414M9.742 12C8.958 11.561 8 10.774 8 9.5c0-1.153.446-2.023 1.239-2.57c.745-.515 1.704-.68 2.636-.68s1.89.165 2.636.68c.793.547 1.239 1.417 1.239 2.57c0 1.274-.957 2.061-1.743 2.5c.786.439 1.743 1.226 1.743 2.5c0 1.153-.446 2.023-1.239 2.57c-.745.515-1.704.68-2.636.68s-1.89-.165-2.636-.68C8.446 16.523 8 15.653 8 14.5c0-1.274.957-2.061 1.743-2.5m2.133.77a6.4 6.4 0 0 0-1.227.448c-.749.374-1.148.812-1.148 1.282c0 .722.253 1.102.591 1.336c.386.266.99.414 1.784.414s1.398-.148 1.784-.414c.338-.234.591-.614.591-1.336c0-.47-.4-.908-1.148-1.282a6 6 0 0 0-1.227-.448"/>`), g.Group(children),
	)
}

func EightSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M12 12s2.5.5 2.5 2s-1.12 2-2.5 2s-2.5-.5-2.5-2s2.5-2 2.5-2m0 0s2.5-.5 2.5-2s-1.12-2-2.5-2s-2.5.5-2.5 2s2.5 2 2.5 2"/><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/></g>`), g.Group(children),
	)
}

func EightSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M10.008 9.935c0-.597.212-.91.496-1.104c.324-.22.83-.342 1.496-.342s1.172.122 1.496.342c.284.193.496.507.496 1.104c0 .388-.335.75-.963 1.06a5 5 0 0 1-1.029.369a5.5 5.5 0 0 1-1.03-.37c-.627-.31-.962-.67-.962-1.06m1.763 2.764c.091-.027.17-.047.229-.062a5.5 5.5 0 0 1 1.03.37c.627.31.962.67.962 1.06c0 .596-.212.91-.496 1.103c-.324.22-.83.342-1.496.342s-1.172-.122-1.496-.342c-.284-.193-.496-.507-.496-1.104c0-.388.335-.75.963-1.06a5 5 0 0 1 .8-.307"/><path d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057M8.75 9.935c0 1.053.803 1.702 1.462 2.065c-.66.363-1.462 1.012-1.462 2.065c0 .952.374 1.671 1.04 2.123c.624.426 1.428.562 2.21.562s1.586-.136 2.21-.562c.666-.452 1.04-1.17 1.04-2.123c0-1.053-.803-1.702-1.462-2.065c.66-.363 1.462-1.012 1.462-2.065c0-.952-.374-1.671-1.04-2.123c-.624-.426-1.428-.562-2.21-.562s-1.586.136-2.21.562c-.666.452-1.04 1.17-1.04 2.123"/></g>`), g.Group(children),
	)
}

func EightWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M12 12s2.5.5 2.5 2s-1.12 2-2.5 2s-2.5-.5-2.5-2s2.5-2 2.5-2m0 0s2.5-.5 2.5-2s-1.12-2-2.5-2s-2.5.5-2.5 2s2.5 2 2.5 2"/><path d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83"/></g>`), g.Group(children),
	)
}

func EightWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M10.008 9.935c0-.597.212-.91.496-1.104c.324-.22.83-.342 1.496-.342s1.172.122 1.496.342c.284.193.496.507.496 1.104c0 .388-.335.75-.963 1.06a5 5 0 0 1-1.029.369a5.5 5.5 0 0 1-1.03-.37c-.627-.31-.962-.67-.962-1.06m1.763 2.764c.091-.027.17-.047.229-.062a5.5 5.5 0 0 1 1.03.37c.627.31.962.67.962 1.06c0 .596-.212.91-.496 1.103c-.324.22-.83.342-1.496.342s-1.172-.122-1.496-.342c-.284-.193-.496-.507-.496-1.104c0-.388.335-.75.963-1.06a5 5 0 0 1 .8-.307"/><path d="M10.565 2.075a3.33 3.33 0 0 1 2.87 0c.394.189.755.497 1.26.928l.079.066c.48.41.939.604 1.58.655l.102.008c.662.053 1.135.09 1.547.236a3.33 3.33 0 0 1 2.03 2.029c.145.412.182.885.235 1.547l.008.102c.051.641.246 1.1.655 1.58l.066.078c.431.506.74.867.928 1.261a3.33 3.33 0 0 1 0 2.87c-.189.394-.497.755-.928 1.26l-.066.079c-.418.49-.605.951-.655 1.58l-.008.102c-.053.662-.09 1.135-.236 1.547a3.33 3.33 0 0 1-2.029 2.03c-.412.145-.885.182-1.547.235l-.102.008c-.641.051-1.1.246-1.58.655l-.079.066c-.505.431-.866.74-1.26.928a3.33 3.33 0 0 1-2.87 0c-.394-.189-.755-.497-1.26-.928l-.079-.066a2.56 2.56 0 0 0-1.58-.655l-.102-.008c-.662-.053-1.135-.09-1.547-.236a3.33 3.33 0 0 1-2.03-2.029c-.145-.412-.182-.885-.235-1.547l-.008-.102a2.56 2.56 0 0 0-.655-1.58l-.066-.079c-.431-.505-.74-.866-.928-1.26a3.33 3.33 0 0 1 0-2.87c.189-.394.497-.755.928-1.26l.066-.079a2.56 2.56 0 0 0 .655-1.58l.008-.102c.053-.662.09-1.135.236-1.547a3.33 3.33 0 0 1 2.029-2.03c.412-.145.885-.182 1.547-.235l.102-.008a2.56 2.56 0 0 0 1.58-.655l.078-.066c.506-.431.867-.74 1.261-.928M8.75 9.935c0 1.053.803 1.702 1.462 2.065c-.66.363-1.462 1.012-1.462 2.065c0 .952.374 1.671 1.04 2.123c.624.426 1.428.562 2.21.562s1.586-.136 2.21-.562c.666-.452 1.04-1.17 1.04-2.123c0-1.053-.803-1.702-1.462-2.065c.66-.363 1.462-1.012 1.462-2.065c0-.952-.374-1.671-1.04-2.123c-.624-.426-1.428-.562-2.21-.562s-1.586.136-2.21.562c-.666.452-1.04 1.17-1.04 2.123"/></g>`), g.Group(children),
	)
}

func Elevator(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M12 8.294h4.5a2 2 0 0 1 2 2V19a2 2 0 0 1-2 2H12m0-12.706H7.5a2 2 0 0 0-2 2V19a2 2 0 0 0 2 2H12m0-12.706V21M7.125 4.588L8.75 3l1.625 1.588M13.625 3l1.625 1.588L16.875 3"/>`), g.Group(children),
	)
}

func ElevatorSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M14.15 2.464a.75.75 0 1 0-1.05 1.072l1.626 1.589a.75.75 0 0 0 1.048 0L17.4 3.536a.75.75 0 1 0-1.048-1.072L15.25 3.54zm-4.876 0a.75.75 0 0 0-1.048 0L6.6 4.052a.75.75 0 0 0 1.048 1.073L8.75 4.049l1.1 1.076a.75.75 0 0 0 1.05-1.073zM12.75 21.75h3.75A2.75 2.75 0 0 0 19.25 19v-8.706a2.75 2.75 0 0 0-2.75-2.75h-3.75zm-1.5-14.206H7.5a2.75 2.75 0 0 0-2.75 2.75V19a2.75 2.75 0 0 0 2.75 2.75h3.75z"/>`), g.Group(children),
	)
}

func Envelope(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m2.357 7.714l6.98 4.654c.963.641 1.444.962 1.964 1.087c.46.11.939.11 1.398 0c.52-.125 1.001-.446 1.964-1.087l6.98-4.654M7.157 19.5h9.686c1.68 0 2.52 0 3.162-.327a3 3 0 0 0 1.31-1.311c.328-.642.328-1.482.328-3.162V9.3c0-1.68 0-2.52-.327-3.162a3 3 0 0 0-1.311-1.311c-.642-.327-1.482-.327-3.162-.327H7.157c-1.68 0-2.52 0-3.162.327a3 3 0 0 0-1.31 1.311c-.328.642-.328 1.482-.328 3.162v5.4c0 1.68 0 2.52.327 3.162a3 3 0 0 0 1.311 1.311c.642.327 1.482.327 3.162.327"/>`), g.Group(children),
	)
}

func EnvelopeOpen(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M2.36 7.708v6.989c0 1.68 0 2.52.327 3.162a3 3 0 0 0 1.311 1.31c.642.328 1.482.328 3.162.328h9.68c1.68 0 2.52 0 3.162-.327a3 3 0 0 0 1.311-1.311c.327-.642.327-1.482.327-3.162V7.708m-19.28 0l7.308-4.062c.851-.473 1.277-.71 1.727-.802a3 3 0 0 1 1.21 0c.45.093.876.33 1.727.802l7.308 4.062m-19.28 0l6.978 4.655c.962.641 1.442.962 1.963 1.087c.46.11.939.11 1.398 0c.52-.125 1.002-.446 1.965-1.088l6.976-4.654"/>`), g.Group(children),
	)
}

func EnvelopeOpenSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12.453 3.578a2.25 2.25 0 0 0-.907 0c-.311.065-.62.227-1.514.724L3.8 7.767l5.955 3.972c1.01.674 1.362.895 1.721.981a2.25 2.25 0 0 0 1.05 0c.358-.086.71-.307 1.722-.982l5.954-3.971l-6.234-3.465c-.893-.497-1.202-.66-1.514-.724m-1.21-1.468a3.75 3.75 0 0 1 1.512 0c.565.117 1.086.406 1.84.826l.1.056l7.308 4.062a.75.75 0 0 1 .386.655v7.02c0 .814 0 1.47-.044 2c-.044.547-.139 1.027-.365 1.471a3.75 3.75 0 0 1-1.639 1.639c-.444.226-.924.32-1.47.365c-.532.044-1.187.044-2 .044H7.128c-.813 0-1.469 0-2-.044c-.546-.044-1.026-.139-1.47-.365a3.75 3.75 0 0 1-1.64-1.639c-.226-.444-.32-.924-.365-1.47c-.043-.532-.043-1.187-.043-2V7.71a.75.75 0 0 1 .385-.656L9.303 2.99q.051-.03.101-.056c.754-.42 1.275-.71 1.84-.826"/>`), g.Group(children),
	)
}

func EnvelopeSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M7.125 3.75h9.75c.813 0 1.468 0 2 .043c.546.045 1.026.14 1.47.366a3.75 3.75 0 0 1 1.64 1.639c.226.444.32.924.365 1.47q.01.12.016.247a.75.75 0 0 1 .014.336c.013.41.013.879.013 1.417v5.464c0 .813 0 1.469-.043 2c-.045.546-.14 1.026-.366 1.47a3.75 3.75 0 0 1-1.639 1.64c-.444.226-.924.32-1.47.365c-.532.043-1.187.043-2 .043h-9.75c-.813 0-1.468 0-2-.043c-.546-.045-1.026-.14-1.47-.366a3.75 3.75 0 0 1-1.639-1.639c-.226-.444-.32-.924-.365-1.47c-.044-.531-.044-1.187-.044-2V9.268c0-.538 0-1.007.013-1.417a.75.75 0 0 1 .014-.336q.007-.127.017-.246c.044-.547.139-1.027.365-1.471a3.75 3.75 0 0 1 1.639-1.64c.444-.226.924-.32 1.47-.365c.532-.043 1.187-.043 2-.043M20.85 7.341c-.038-.423-.105-.672-.202-.862a2.25 2.25 0 0 0-.983-.984c-.198-.1-.459-.17-.913-.207c-.462-.037-1.057-.038-1.909-.038H7.157c-.852 0-1.446 0-1.91.038c-.453.037-.714.107-.911.207a2.25 2.25 0 0 0-.984.984c-.096.19-.164.439-.202.862l6.604 4.403c1.01.674 1.363.895 1.722.981a2.25 2.25 0 0 0 1.048 0c.36-.086.711-.307 1.723-.981z"/>`), g.Group(children),
	)
}

func Euro(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M14 10H7.12m0 0H4m3.12 0c.55-4.254 3.01-6 7.38-6c2.418 0 4.251.535 5.5 1.733M7.12 10Q7 10.92 7 12c0 1.08.04 1.386.12 2M14 14H7.12m0 0H4m3.12 0c.55 4.254 3.01 6 7.38 6c2.418 0 4.251-.535 5.5-1.733"/>`), g.Group(children),
	)
}

func EuroCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/><path d="M12 12H8.5m0 0H7m1.5 0c0 2 1.565 4 3.75 4c1.209 0 2.126-.267 2.75-.867M8.5 12c0-2 1.25-4 3.75-4c1.209 0 2.126.267 2.75.866"/></g>`), g.Group(children),
	)
}

func EuroCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12m6.611-3.23c-.59.708-.937 1.583-1.06 2.48h-.8A.75.75 0 0 0 7 12.75h.812c.339 2.069 2.044 4 4.438 4c1.305 0 2.448-.287 3.27-1.075a.75.75 0 1 0-1.04-1.083c-.427.41-1.117.658-2.23.658c-1.432 0-2.593-1.134-2.913-2.5H12a.75.75 0 0 0 0-1.5H9.321c.11-.573.345-1.102.693-1.52c.481-.578 1.207-.98 2.236-.98c1.113 0 1.803.248 2.23.658a.75.75 0 1 0 1.04-1.083c-.822-.788-1.965-1.075-3.27-1.075c-1.471 0-2.62.598-3.389 1.52"/>`), g.Group(children),
	)
}

func EuroDiamond(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M2.707 10.295a2.41 2.41 0 0 0 0 3.41l7.588 7.588a2.41 2.41 0 0 0 3.41 0l7.588-7.588a2.41 2.41 0 0 0 0-3.41l-7.588-7.588a2.41 2.41 0 0 0-3.41 0z"/><path d="M12 12H8.5m0 0H7m1.5 0c0 2 1.565 4 3.75 4c1.209 0 2.126-.267 2.75-.867M8.5 12c0-2 1.25-4 3.75-4c1.209 0 2.126.267 2.75.866"/></g>`), g.Group(children),
	)
}

func EuroDiamondSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.79 1.49a3.16 3.16 0 0 1 3.445.687l7.588 7.588a3.16 3.16 0 0 1 0 4.47l-7.588 7.588a3.16 3.16 0 0 1-4.47 0l-7.588-7.588a3.16 3.16 0 0 1 0-4.47l7.588-7.589a3.2 3.2 0 0 1 1.025-.685M8.861 8.77c-.59.708-.937 1.583-1.06 2.48h-.8A.75.75 0 0 0 7 12.75h.812c.339 2.069 2.044 4 4.438 4c1.305 0 2.448-.287 3.27-1.075a.75.75 0 1 0-1.04-1.083c-.427.41-1.117.658-2.23.658c-1.432 0-2.593-1.134-2.913-2.5H12a.75.75 0 0 0 0-1.5H9.321c.11-.573.345-1.102.693-1.52c.481-.578 1.207-.98 2.236-.98c1.113 0 1.803.248 2.23.658a.75.75 0 1 0 1.04-1.083c-.822-.788-1.965-1.075-3.27-1.075c-1.471 0-2.62.598-3.389 1.52"/>`), g.Group(children),
	)
}

func EuroHexagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M20.5 15.8V8.2a1.91 1.91 0 0 0-.944-1.645l-6.612-3.8a1.88 1.88 0 0 0-1.888 0l-6.612 3.8A1.9 1.9 0 0 0 3.5 8.2v7.602a1.91 1.91 0 0 0 .944 1.644l6.612 3.8a1.88 1.88 0 0 0 1.888 0l6.612-3.8A1.9 1.9 0 0 0 20.5 15.8"/><path d="M12 12H8.5m0 0H7m1.5 0c0 2 1.565 4 3.75 4c1.209 0 2.126-.267 2.75-.867M8.5 12c0-2 1.25-4 3.75-4c1.209 0 2.126.267 2.75.866"/></g>`), g.Group(children),
	)
}

func EuroHexagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.68 2.105a2.63 2.63 0 0 1 2.64 0l.001.001l6.611 3.8A2.65 2.65 0 0 1 21.25 8.2v7.603a2.66 2.66 0 0 1-1.318 2.291l-.003.002l-6.608 3.799h-.002a2.63 2.63 0 0 1-2.639 0h-.001l-6.608-3.8h-.003A2.64 2.64 0 0 1 2.75 15.8V8.198a2.66 2.66 0 0 1 1.318-2.291l.003-.002zM8.861 8.77c-.59.708-.937 1.583-1.06 2.48h-.8A.75.75 0 0 0 7 12.75h.812c.339 2.069 2.044 4 4.438 4c1.305 0 2.448-.287 3.27-1.075a.75.75 0 1 0-1.04-1.083c-.427.41-1.117.658-2.23.658c-1.432 0-2.593-1.134-2.913-2.5H12a.75.75 0 0 0 0-1.5H9.321c.11-.573.345-1.102.693-1.52c.481-.578 1.207-.98 2.236-.98c1.113 0 1.803.248 2.23.658a.75.75 0 1 0 1.04-1.083c-.822-.788-1.965-1.075-3.27-1.075c-1.471 0-2.62.598-3.389 1.52"/>`), g.Group(children),
	)
}

func EuroOctagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M7.805 3.469C8.16 3.115 8.451 3 8.937 3h6.126c.486 0 .778.115 1.132.469l4.336 4.336c.354.354.469.646.469 1.132v6.126c0 .5-.125.788-.469 1.132l-4.336 4.336c-.354.354-.646.469-1.132.469H8.937c-.5 0-.788-.125-1.132-.469L3.47 16.195c-.355-.355-.47-.646-.47-1.132V8.937c0-.5.125-.788.469-1.132z"/><path d="M12 12H8.5m0 0H7m1.5 0c0 2 1.565 4 3.75 4c1.209 0 2.126-.267 2.75-.867M8.5 12c0-2 1.25-4 3.75-4c1.209 0 2.126.267 2.75.866"/></g>`), g.Group(children),
	)
}

func EuroOctagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.037 2.408a2.3 2.3 0 0 1 .9-.158h6.126c.302 0 .602.036.9.158s.54.31.762.53l4.337 4.337c.22.221.408.463.53.762c.123.298.158.598.158.9v6.126c0 .313-.039.616-.163.914a2.3 2.3 0 0 1-.525.748l-4.337 4.337a2.3 2.3 0 0 1-.762.53a2.3 2.3 0 0 1-.9.158H8.937c-.313 0-.616-.039-.914-.163a2.3 2.3 0 0 1-.748-.525l-4.337-4.337a2.3 2.3 0 0 1-.53-.762a2.3 2.3 0 0 1-.158-.9V8.937c0-.313.039-.616.163-.914a2.3 2.3 0 0 1 .525-.748l4.337-4.337c.221-.22.463-.408.762-.53M8.86 8.77c-.59.708-.937 1.583-1.06 2.48H7a.75.75 0 0 0 0 1.5h.812c.339 2.069 2.044 4 4.438 4c1.305 0 2.448-.287 3.27-1.075a.75.75 0 1 0-1.04-1.083c-.427.41-1.117.658-2.23.658c-1.432 0-2.593-1.134-2.913-2.5H12a.75.75 0 0 0 0-1.5H9.321c.11-.573.345-1.102.693-1.52c.481-.578 1.207-.98 2.236-.98c1.113 0 1.803.248 2.23.658a.75.75 0 1 0 1.04-1.083c-.822-.788-1.965-1.075-3.27-1.075c-1.471 0-2.62.598-3.389 1.52"/>`), g.Group(children),
	)
}

func EuroSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.914 4.815C10.328 3.702 12.229 3.25 14.5 3.25c2.514 0 4.573.554 6.02 1.942a.75.75 0 1 1-1.04 1.082c-1.05-1.01-2.658-1.524-4.98-1.524c-2.098 0-3.613.421-4.659 1.244c-.877.69-1.506 1.73-1.834 3.256H14a.75.75 0 0 1 0 1.5H7.796q-.045.59-.046 1.25q0 .66.046 1.25H14a.75.75 0 0 1 0 1.5H8.007c.328 1.526.957 2.566 1.834 3.256c1.046.823 2.56 1.244 4.659 1.244c2.322 0 3.93-.515 4.98-1.524a.75.75 0 0 1 1.04 1.082c-1.447 1.388-3.506 1.942-6.02 1.942c-2.271 0-4.172-.452-5.586-1.565c-1.289-1.014-2.079-2.5-2.436-4.435H4a.75.75 0 0 1 0-1.5h2.292q-.042-.6-.042-1.25t.042-1.25H4a.75.75 0 0 1 0-1.5h2.478c.357-1.934 1.147-3.42 2.436-4.435"/>`), g.Group(children),
	)
}

func EuroSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/><path d="M12 12H8.5m0 0H7m1.5 0c0 2 1.565 4 3.75 4c1.209 0 2.126-.267 2.75-.867M8.5 12c0-2 1.25-4 3.75-4c1.209 0 2.126.267 2.75.866"/></g>`), g.Group(children),
	)
}

func EuroSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057m-.506 6.52c-.59.708-.937 1.583-1.06 2.48h-.8A.75.75 0 0 0 7 12.75h.812c.339 2.069 2.044 4 4.438 4c1.305 0 2.448-.287 3.27-1.075a.75.75 0 1 0-1.04-1.083c-.427.41-1.117.658-2.23.658c-1.432 0-2.593-1.134-2.913-2.5H12a.75.75 0 0 0 0-1.5H9.321c.11-.573.345-1.102.693-1.52c.481-.578 1.207-.98 2.236-.98c1.113 0 1.803.248 2.23.658a.75.75 0 1 0 1.04-1.083c-.822-.788-1.965-1.075-3.27-1.075c-1.471 0-2.62.598-3.389 1.52"/>`), g.Group(children),
	)
}

func EuroWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83"/><path d="M12 12H8.5m0 0H7m1.5 0c0 2 1.565 4 3.75 4c1.209 0 2.126-.267 2.75-.867M8.5 12c0-2 1.25-4 3.75-4c1.209 0 2.126.267 2.75.866"/></g>`), g.Group(children),
	)
}

func EuroWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.565 2.075a3.33 3.33 0 0 1 2.87 0c.394.189.755.497 1.26.928l.079.066c.48.41.939.604 1.58.655l.102.008c.662.053 1.135.09 1.547.236a3.33 3.33 0 0 1 2.03 2.029c.145.412.182.885.235 1.547l.008.102c.051.641.246 1.1.655 1.58l.066.078c.431.506.74.867.928 1.261a3.33 3.33 0 0 1 0 2.87c-.189.394-.497.755-.928 1.26l-.066.079c-.418.49-.605.951-.655 1.58l-.008.102c-.053.662-.09 1.135-.236 1.547a3.33 3.33 0 0 1-2.029 2.03c-.412.145-.885.182-1.547.235l-.102.008c-.641.051-1.1.246-1.58.655l-.079.066c-.505.431-.866.74-1.26.928a3.33 3.33 0 0 1-2.87 0c-.394-.189-.755-.497-1.26-.928l-.079-.066a2.56 2.56 0 0 0-1.58-.655l-.102-.008c-.662-.053-1.135-.09-1.547-.236a3.33 3.33 0 0 1-2.03-2.029c-.145-.412-.182-.885-.235-1.547l-.008-.102a2.56 2.56 0 0 0-.655-1.58l-.066-.079c-.431-.505-.74-.866-.928-1.26a3.33 3.33 0 0 1 0-2.87c.189-.394.497-.755.928-1.26l.066-.079a2.56 2.56 0 0 0 .655-1.58l.008-.102c.053-.662.09-1.135.236-1.547a3.33 3.33 0 0 1 2.029-2.03c.412-.145.885-.182 1.547-.235l.102-.008a2.56 2.56 0 0 0 1.58-.655l.078-.066c.506-.431.867-.74 1.261-.928M8.861 8.77c-.59.708-.937 1.583-1.06 2.48h-.8A.75.75 0 0 0 7 12.75h.812c.339 2.069 2.044 4 4.438 4c1.305 0 2.448-.287 3.27-1.075a.75.75 0 1 0-1.04-1.083c-.427.41-1.117.658-2.23.658c-1.432 0-2.593-1.134-2.913-2.5H12a.75.75 0 0 0 0-1.5H9.321c.11-.573.345-1.102.693-1.52c.481-.578 1.207-.98 2.236-.98c1.113 0 1.803.248 2.23.658a.75.75 0 1 0 1.04-1.083c-.822-.788-1.965-1.075-3.27-1.075c-1.471 0-2.62.598-3.389 1.52"/>`), g.Group(children),
	)
}

func Exclude(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M8.4 15.6H6a3 3 0 0 1-3-3V6a3 3 0 0 1 3-3h6.6a3 3 0 0 1 3 3v2.4m-7.2 7.2V18a3 3 0 0 0 3 3H18a3 3 0 0 0 3-3v-6.6a3 3 0 0 0-3-3h-2.4m-7.2 7.2v-1.8m0 1.8h1.8m5.4-7.2h-1.8m1.8 0v1.8m-7.2 0a1.8 1.8 0 0 1 1.8-1.8m5.4 5.4a1.8 1.8 0 0 1-1.8 1.8"/>`), g.Group(children),
	)
}

func ExcludeSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 6A3.75 3.75 0 0 1 6 2.25h6.6A3.75 3.75 0 0 1 16.35 6v1.65H18a3.75 3.75 0 0 1 3.75 3.75V18A3.75 3.75 0 0 1 18 21.75h-6.6A3.75 3.75 0 0 1 7.65 18v-1.65H6a3.75 3.75 0 0 1-3.75-3.75zm6.9 8.85h1.05a.75.75 0 0 1 0 1.5H9.15V18a2.25 2.25 0 0 0 2.25 2.25H18A2.25 2.25 0 0 0 20.25 18v-6.6A2.25 2.25 0 0 0 18 9.15h-1.65v1.05a.75.75 0 0 1-1.5 0V9.15H13.8a.75.75 0 0 1 0-1.5h1.05V6a2.25 2.25 0 0 0-2.25-2.25H6A2.25 2.25 0 0 0 3.75 6v6.6A2.25 2.25 0 0 0 6 14.85h1.65V13.8a.75.75 0 0 1 1.5 0zm1.05-5.7c-.58 0-1.05.47-1.05 1.05a.75.75 0 0 1-1.5 0a2.55 2.55 0 0 1 2.55-2.55a.75.75 0 0 1 0 1.5m5.4 3.9a.75.75 0 0 1 .75.75a2.55 2.55 0 0 1-2.55 2.55a.75.75 0 0 1 0-1.5c.58 0 1.05-.47 1.05-1.05a.75.75 0 0 1 .75-.75"/>`), g.Group(children),
	)
}

func ExternalLink(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M21 3h-6.75M21 3v6.75M21 3l-8.25 8.25M9.4 3c-2.24 0-3.36 0-4.216.436a4 4 0 0 0-1.748 1.748C3 6.04 3 7.16 3 9.4v5.2c0 2.24 0 3.36.436 4.216a4 4 0 0 0 1.748 1.748C6.04 21 7.16 21 9.4 21h5.2c2.24 0 3.36 0 4.216-.436a4 4 0 0 0 1.748-1.748C21 17.96 21 16.84 21 14.6v-1.1"/>`), g.Group(children),
	)
}

func ExternalLinkSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25H9.4a.75.75 0 0 1 0 1.5c-1.132 0-1.937 0-2.566.052c-.62.05-1.005.147-1.31.302a3.25 3.25 0 0 0-1.42 1.42c-.155.305-.251.69-.302 1.31c-.051.63-.052 1.434-.052 2.566v5.2c0 1.133 0 1.937.052 2.566c.05.62.147 1.005.302 1.31a3.25 3.25 0 0 0 1.42 1.42c.305.155.69.251 1.31.302c.63.051 1.434.052 2.566.052h5.2c1.133 0 1.937 0 2.566-.052c.62-.05 1.005-.147 1.31-.302a3.25 3.25 0 0 0 1.42-1.42c.155-.305.251-.69.302-1.31c.051-.63.052-1.434.052-2.566v-1.1a.75.75 0 0 1 1.5 0v1.133c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057M13.5 3a.75.75 0 0 1 .75-.75H21a.75.75 0 0 1 .75.75v6.75a.75.75 0 0 1-1.5 0V4.81l-6.97 6.97a.75.75 0 1 1-1.06-1.06l6.97-6.97h-4.94A.75.75 0 0 1 13.5 3"/>`), g.Group(children),
	)
}

func Eye(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M2.55 13.406c-.272-.373-.408-.56-.502-.92a2.5 2.5 0 0 1 0-.971c.094-.361.23-.548.502-.92C4.039 8.55 7.303 5 12 5s7.961 3.55 9.45 5.594c.272.373.408.56.502.92a2.5 2.5 0 0 1 0 .971c-.094.361-.23.548-.502.92C19.961 15.45 16.697 19 12 19s-7.961-3.55-9.45-5.594"/><path d="M12 14a2 2 0 1 0 0-4a2 2 0 0 0 0 4"/></g>`), g.Group(children),
	)
}

func EyeSlash(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M2.55 13.406c-.272-.373-.408-.56-.502-.92a2.5 2.5 0 0 1 0-.971c.094-.361.23-.548.502-.92C4.039 8.55 7.303 5 12 5s7.961 3.55 9.45 5.594c.272.373.408.56.502.92a2.5 2.5 0 0 1 0 .971c-.094.361-.23.548-.502.92C19.961 15.45 16.697 19 12 19s-7.961-3.55-9.45-5.594"/><path d="M12 14a2 2 0 1 0 0-4a2 2 0 0 0 0 4m9-11L3 21"/></g>`), g.Group(children),
	)
}

func EyeSlashSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M21.53 2.47a.75.75 0 0 0-1.06 0l-3.227 3.227C15.762 4.847 14.007 4.25 12 4.25c-5.082 0-8.542 3.824-10.057 5.903l-.023.031c-.258.355-.468.643-.598 1.142A2.8 2.8 0 0 0 1.25 12c0 .21.017.462.072.674c.13.5.34.787.598 1.142l.023.031c.734 1.007 1.924 2.423 3.533 3.616L2.47 20.47a.75.75 0 1 0 1.06 1.06l3.227-3.227c1.481.85 3.236 1.447 5.243 1.447c5.082 0 8.542-3.824 10.057-5.903l.023-.031c.258-.355.468-.643.598-1.142A2.8 2.8 0 0 0 22.75 12c0-.21-.017-.462-.072-.674c-.13-.5-.34-.787-.598-1.142l-.023-.031c-.734-1.007-1.924-2.423-3.533-3.616L21.53 3.53a.75.75 0 0 0 0-1.06m-8.19 7.128l-3.742 3.743a2.75 2.75 0 0 1 3.742-3.742M14.75 12a2.75 2.75 0 0 1-4.09 2.402l3.742-3.743c.222.397.348.854.348 1.341"/>`), g.Group(children),
	)
}

func EyeSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M10.75 12a1.25 1.25 0 1 1 2.5 0a1.25 1.25 0 0 1-2.5 0"/><path d="M1.943 10.153C3.458 8.074 6.918 4.25 12 4.25s8.542 3.824 10.057 5.903l.023.031c.258.355.468.643.598 1.142c.055.212.072.464.072.674s-.017.462-.072.674c-.13.5-.34.787-.598 1.142l-.023.031C20.542 15.926 17.082 19.75 12 19.75s-8.542-3.824-10.057-5.903l-.023-.031c-.258-.355-.468-.643-.598-1.142A2.8 2.8 0 0 1 1.25 12c0-.21.017-.462.072-.674c.13-.5.34-.787.598-1.142zM9.25 12a2.75 2.75 0 1 0 5.5 0a2.75 2.75 0 0 0-5.5 0m1.5 0a1.25 1.25 0 1 1 2.5 0a1.25 1.25 0 0 1-2.5 0"/></g>`), g.Group(children),
	)
}

func FaceId(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M11 13.75h1v-4m4-.25V8m-7 8.5c1.5 1.5 4.5 1.5 6 0m-7-7V8m1.4 13c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6m18 0c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21m0-18c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4M9.4 3c-2.24 0-3.36 0-4.216.436a4 4 0 0 0-1.748 1.748C3 6.04 3 7.16 3 9.4"/>`), g.Group(children),
	)
}

func FaceIdSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25H9.4a.75.75 0 0 1 0 1.5c-1.132 0-1.937 0-2.566.052c-.62.05-1.005.147-1.31.302a3.25 3.25 0 0 0-1.42 1.42c-.155.305-.251.69-.302 1.31c-.051.63-.052 1.434-.052 2.566a.75.75 0 0 1-1.5 0v-.033c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057m7.8 1.552c-.63-.051-1.435-.052-2.567-.052a.75.75 0 0 1 0-1.5h.033c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655V9.4a.75.75 0 0 1-1.5 0c0-1.132 0-1.937-.052-2.566c-.05-.62-.147-1.005-.302-1.31a3.25 3.25 0 0 0-1.42-1.42c-.305-.155-.69-.251-1.31-.302M8 7.25a.75.75 0 0 1 .75.75v1.5a.75.75 0 0 1-1.5 0V8A.75.75 0 0 1 8 7.25m8 0a.75.75 0 0 1 .75.75v1.5a.75.75 0 0 1-1.5 0V8a.75.75 0 0 1 .75-.75M12 9a.75.75 0 0 1 .75.75v4a.75.75 0 0 1-.75.75h-1a.75.75 0 0 1 0-1.5h.25V9.75A.75.75 0 0 1 12 9m-9 4.85a.75.75 0 0 1 .75.75c0 1.133 0 1.937.052 2.566c.05.62.147 1.005.302 1.31a3.25 3.25 0 0 0 1.42 1.42c.305.155.69.251 1.31.302c.63.051 1.434.052 2.566.052a.75.75 0 0 1 0 1.5h-.033c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V14.6a.75.75 0 0 1 .75-.75m18 0a.75.75 0 0 1 .75.75v.033c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H14.6a.75.75 0 0 1 0-1.5c1.133 0 1.937 0 2.566-.052c.62-.05 1.005-.147 1.31-.302a3.25 3.25 0 0 0 1.42-1.42c.155-.305.251-.69.302-1.31c.051-.63.052-1.434.052-2.566a.75.75 0 0 1 .75-.75M8.47 15.97a.75.75 0 0 1 1.06 0c.578.577 1.494.905 2.47.905s1.892-.328 2.47-.905a.75.75 0 1 1 1.06 1.06c-.922.923-2.256 1.345-3.53 1.345s-2.608-.422-3.53-1.345a.75.75 0 0 1 0-1.06"/>`), g.Group(children),
	)
}

func FatArrowDown(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M4.483 13.105c-.43 0-.645.545-.34.863l7.516 6.884a.466.466 0 0 0 .682 0l7.517-6.884c.304-.318.088-.863-.341-.863H15.68a.495.495 0 0 1-.483-.506V3.506A.494.494 0 0 0 14.716 3H9.284a.494.494 0 0 0-.482.506v9.093c0 .28-.216.506-.483.506z"/>`), g.Group(children),
	)
}

func FatArrowDownLeft(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M15.932 18.963c.315.315-.062 1.026-.519 1.037H5.66c-.58 0-.871 0-1.093-.113a1.04 1.04 0 0 1-.454-.454C4 19.213 4 18.922 4 18.34V8.587c.01-.457.722-.834 1.038-.519l2.714 2.78c.195.195.52.187.725-.018l6.671-6.671a.513.513 0 0 1 .725-.017l3.985 3.985a.513.513 0 0 1-.017.725l-6.671 6.671a.513.513 0 0 0-.017.725z"/>`), g.Group(children),
	)
}

func FatArrowDownLeftSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M14.618 3.629c.474-.474 1.274-.53 1.785-.018l3.986 3.986c.512.511.456 1.311-.018 1.785l-6.51 6.51l2.601 2.54c.498.498.342 1.165.167 1.505c-.181.355-.591.798-1.198.813H5.633c-.267 0-.511 0-.715-.017a1.8 1.8 0 0 1-.692-.178a1.8 1.8 0 0 1-.781-.781a1.8 1.8 0 0 1-.178-.692c-.017-.204-.017-.448-.017-.716V8.57c.015-.607.458-1.017.813-1.198c.34-.175 1.007-.33 1.505.167l.006.006l2.534 2.594z"/>`), g.Group(children),
	)
}

func FatArrowDownRight(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M8.068 18.963c-.315.315.062 1.026.519 1.037h9.753c.58 0 .872 0 1.093-.113c.196-.1.354-.258.454-.454c.113-.221.113-.512.113-1.093V8.587c-.01-.457-.722-.834-1.038-.519l-2.714 2.78a.513.513 0 0 1-.725-.018L8.852 4.16a.513.513 0 0 0-.725-.017L4.142 8.127a.513.513 0 0 0 .017.725l6.671 6.671c.205.205.213.53.017.725z"/>`), g.Group(children),
	)
}

func FatArrowDownRightSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M7.596 3.611c.512-.512 1.312-.456 1.786.018l6.51 6.51l2.54-2.601c.498-.498 1.165-.342 1.505-.167c.355.181.798.591.813 1.198v9.798c0 .267 0 .511-.017.715c-.018.22-.059.458-.178.692c-.171.336-.445.61-.781.781c-.235.12-.472.16-.692.178c-.204.017-.448.017-.716.017H8.57c-.607-.015-1.017-.458-1.198-.813c-.175-.34-.331-1.007.167-1.505l.006-.006l2.594-2.534l-6.51-6.51c-.473-.474-.529-1.274-.017-1.785z"/>`), g.Group(children),
	)
}

func FatArrowDownSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M14.716 2.25H9.284c-.714 0-1.232.596-1.232 1.256v8.849H4.483c-1.161 0-1.592 1.387-.884 2.13l.037.036l7.502 6.87a1.216 1.216 0 0 0 1.724 0l7.502-6.87l.037-.035c.708-.744.277-2.131-.884-2.131h-3.569v-8.85c0-.659-.518-1.255-1.232-1.255"/>`), g.Group(children),
	)
}

func FatArrowLeft(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M10.895 4.483c0-.43-.545-.645-.863-.34l-6.884 7.516a.467.467 0 0 0 0 .682l6.884 7.517c.318.304.863.088.863-.341V15.68c0-.267.227-.483.506-.483h9.093c.28 0 .506-.216.506-.482V9.284a.494.494 0 0 0-.506-.482h-9.093a.494.494 0 0 1-.506-.483z"/>`), g.Group(children),
	)
}

func FatArrowLeftSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M11.645 4.483c0-1.16-1.387-1.592-2.13-.884l-.036.037l-6.87 7.502a1.216 1.216 0 0 0 0 1.724l6.87 7.502l.035.037c.744.708 2.131.277 2.131-.884v-3.569h8.85c.659 0 1.255-.518 1.255-1.232V9.284c0-.714-.596-1.232-1.256-1.232h-8.849z"/>`), g.Group(children),
	)
}

func FatArrowRight(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M13.105 4.483c0-.43.545-.645.863-.34l6.884 7.516a.466.466 0 0 1 0 .682l-6.884 7.517c-.318.304-.863.088-.863-.341V15.68a.495.495 0 0 0-.506-.483H3.506A.494.494 0 0 1 3 14.716V9.284c0-.266.226-.482.506-.482h9.093c.28 0 .506-.216.506-.483z"/>`), g.Group(children),
	)
}

func FatArrowRightSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M14.486 3.6c-.744-.71-2.131-.278-2.131.883v3.569h-8.85c-.659 0-1.255.518-1.255 1.232v5.432c0 .714.596 1.232 1.256 1.232h8.849v3.569c0 1.16 1.387 1.592 2.13.884l.036-.037l6.87-7.502a1.216 1.216 0 0 0 0-1.724l-6.87-7.502z"/>`), g.Group(children),
	)
}

func FatArrowUp(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M4.483 10.895c-.43 0-.645-.545-.34-.863l7.516-6.884a.467.467 0 0 1 .682 0l7.517 6.884c.304.318.088.863-.341.863H15.68a.495.495 0 0 0-.483.506v9.093c0 .28-.216.506-.482.506H9.284a.494.494 0 0 1-.482-.506v-9.093a.495.495 0 0 0-.483-.506z"/>`), g.Group(children),
	)
}

func FatArrowUpLeft(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M15.932 5.038c.315-.316-.062-1.027-.519-1.038H5.66c-.58 0-.871 0-1.093.113a1.04 1.04 0 0 0-.454.453C4 4.789 4 5.08 4 5.66v9.753c.01.457.722.834 1.038.519l2.714-2.78a.513.513 0 0 1 .725.018l6.671 6.671c.205.205.53.213.725.017l3.985-3.985a.513.513 0 0 0-.017-.725L13.17 8.477a.513.513 0 0 1-.017-.725z"/>`), g.Group(children),
	)
}

func FatArrowUpLeftSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M5.634 3.25h9.797c.607.015 1.017.458 1.198.813c.175.34.331 1.007-.167 1.505l-.006.006l-2.594 2.534l6.51 6.51c.473.474.529 1.274.017 1.786l-3.986 3.985c-.511.512-1.311.456-1.785-.018l-6.51-6.51l-2.54 2.601c-.498.498-1.165.342-1.505.167c-.355-.181-.798-.591-.813-1.198V5.634c0-.268 0-.513.017-.716c.018-.22.059-.458.178-.692c.171-.336.445-.61.781-.781a1.8 1.8 0 0 1 .692-.178a9 9 0 0 1 .716-.017"/>`), g.Group(children),
	)
}

func FatArrowUpRight(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M8.068 5.038C7.753 4.722 8.13 4.01 8.587 4h9.753c.581 0 .872 0 1.093.113c.196.1.354.258.454.453C20 4.789 20 5.08 20 5.66v9.753c-.01.457-.722.834-1.038.519l-2.714-2.78a.513.513 0 0 0-.725.018l-6.671 6.67a.513.513 0 0 1-.725.017l-3.985-3.985a.513.513 0 0 1 .017-.725l6.671-6.671a.513.513 0 0 0 .018-.725z"/>`), g.Group(children),
	)
}

func FatArrowUpRightSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M19.083 3.267a1.8 1.8 0 0 1 .691.178c.336.171.61.445.781.781c.12.234.16.472.178.692c.017.203.017.448.017.716v9.797c-.015.607-.458 1.017-.812 1.198c-.341.175-1.008.33-1.506-.167l-.006-.006l-2.534-2.594l-6.51 6.51c-.473.473-1.273.529-1.785.017L3.61 16.404c-.511-.512-.456-1.312.018-1.786l6.51-6.51l-2.601-2.54c-.498-.498-.342-1.165-.167-1.505c.181-.355.591-.798 1.198-.813h9.798c.267 0 .512 0 .715.017"/>`), g.Group(children),
	)
}

func FatArrowUpSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M11.138 2.608a1.216 1.216 0 0 1 1.724 0l7.502 6.87l.037.036c.708.744.277 2.131-.884 2.131h-3.569v8.85c0 .659-.518 1.255-1.232 1.255H9.284c-.714 0-1.232-.596-1.232-1.256v-8.849H4.483c-1.161 0-1.592-1.387-.884-2.13l.037-.036z"/>`), g.Group(children),
	)
}

func FatCornerDownLeft(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M21 4.077q-3.303 4.216-5.866 4.785q-2.564.569-4.88.172V4L3 12.214L10.253 20v-4.784Q14.539 15.18 17.54 12c3.001-3.18 3.153-4.761 3.46-7.923"/>`), g.Group(children),
	)
}

func FatCornerDownLeftSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M11.003 4a.75.75 0 0 0-1.312-.496l-7.253 8.214a.75.75 0 0 0 .013 1.007l7.253 7.786a.75.75 0 0 0 1.3-.511v-4.063c2.747-.194 5.118-1.342 7.08-3.422c2.126-2.253 3.341-5.054 3.663-8.365a.75.75 0 0 0-1.337-.535c-2.188 2.793-4.004 4.197-5.438 4.515c-1.393.309-2.714.39-3.969.252z"/>`), g.Group(children),
	)
}

func FatCornerDownRight(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3 4.077q3.303 4.216 5.866 4.785q2.564.569 4.88.172V4L21 12.214L13.747 20v-4.784Q9.461 15.18 6.46 12C3.459 8.82 3.307 7.239 3 4.077"/>`), g.Group(children),
	)
}

func FatCornerDownRightSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M14.309 3.504A.75.75 0 0 0 12.997 4v4.382c-1.255.138-2.576.057-3.969-.252c-1.434-.318-3.25-1.722-5.438-4.515a.75.75 0 0 0-1.336.535c.32 3.311 1.536 6.112 3.661 8.365c1.963 2.08 4.334 3.228 7.082 3.422V20a.75.75 0 0 0 1.299.511l7.253-7.786a.75.75 0 0 0 .013-1.008z"/>`), g.Group(children),
	)
}

func FatCornerLeftDown(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M19.923 3q-4.216 3.303-4.785 5.866q-.569 2.564-.172 4.88H20L11.786 21L4 13.747h4.784Q8.82 9.461 12 6.46c3.18-3.001 4.761-3.153 7.923-3.46"/>`), g.Group(children),
	)
}

func FatCornerLeftDownSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M20.62 2.721a.75.75 0 0 1-.235.87c-2.793 2.187-4.196 4.003-4.515 5.437c-.309 1.393-.39 2.714-.252 3.969H20a.75.75 0 0 1 .497 1.312l-8.214 7.253a.75.75 0 0 1-1.008-.013l-7.786-7.253a.75.75 0 0 1 .511-1.3h4.064c.193-2.747 1.341-5.118 3.421-7.08c2.253-2.126 5.054-3.341 8.366-3.663a.75.75 0 0 1 .768.468"/>`), g.Group(children),
	)
}

func FatCornerLeftUp(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M19.923 21q-4.216-3.303-4.785-5.866q-.569-2.564-.172-4.88H20L11.786 3L4 10.253h4.784Q8.82 14.539 12 17.54c3.18 3.001 4.761 3.154 7.923 3.461"/>`), g.Group(children),
	)
}

func FatCornerLeftUpSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12.283 2.438a.75.75 0 0 0-1.008.013L3.489 9.704a.75.75 0 0 0 .511 1.3h4.064c.193 2.747 1.341 5.118 3.421 7.08c2.253 2.126 5.054 3.341 8.366 3.663a.75.75 0 0 0 .534-1.337c-2.793-2.188-4.196-4.004-4.515-5.438c-.309-1.393-.39-2.714-.252-3.969H20a.75.75 0 0 0 .497-1.312z"/>`), g.Group(children),
	)
}

func FatCornerRightDown(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M4.077 3q4.216 3.303 4.785 5.866q.569 2.564.172 4.88H4L12.214 21L20 13.747h-4.784Q15.18 9.461 12 6.46C8.82 3.459 7.239 3.307 4.077 3"/>`), g.Group(children),
	)
}

func FatCornerRightDownSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M4.15 2.253a.75.75 0 0 0-.535 1.337C6.408 5.778 7.812 7.594 8.13 9.028c.309 1.393.39 2.714.252 3.969H4a.75.75 0 0 0-.496 1.312l8.214 7.253a.75.75 0 0 0 1.007-.013l7.786-7.253a.75.75 0 0 0-.511-1.3h-4.063c-.194-2.747-1.342-5.118-3.422-7.08C10.262 3.79 7.46 2.574 4.15 2.252"/>`), g.Group(children),
	)
}

func FatCornerRightUp(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M4.077 21q4.216-3.303 4.785-5.866q.569-2.564.172-4.88H4L12.214 3L20 10.253h-4.784Q15.18 14.539 12 17.54C8.82 20.541 7.239 20.693 4.077 21"/>`), g.Group(children),
	)
}

func FatCornerRightUpSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12.725 2.451a.75.75 0 0 0-1.007-.013L3.504 9.69A.75.75 0 0 0 4 11.003h4.382c.138 1.255.057 2.576-.252 3.969c-.318 1.434-1.722 3.25-4.515 5.438a.75.75 0 0 0 .535 1.337c3.311-.322 6.112-1.537 8.365-3.662c2.08-1.963 3.228-4.334 3.422-7.082H20a.75.75 0 0 0 .511-1.299z"/>`), g.Group(children),
	)
}

func FatCornerUpLeft(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M21 19.923q-3.303-4.216-5.866-4.785q-2.564-.569-4.88-.172V20L3 11.786L10.253 4v4.784Q14.539 8.82 17.54 12c3.001 3.18 3.154 4.761 3.461 7.923"/>`), g.Group(children),
	)
}

func FatCornerUpLeftSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M11.003 4a.75.75 0 0 0-1.299-.511l-7.253 7.786a.75.75 0 0 0-.013 1.008l7.253 8.213A.75.75 0 0 0 11.003 20v-4.382c1.255-.138 2.576-.057 3.969.252c1.434.319 3.25 1.722 5.438 4.515a.75.75 0 0 0 1.337-.535c-.322-3.311-1.537-6.113-3.662-8.365c-1.963-2.08-4.334-3.228-7.082-3.421z"/>`), g.Group(children),
	)
}

func FatCornerUpRight(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3 19.923q3.303-4.216 5.866-4.785q2.564-.569 4.88-.172V20L21 11.786L13.747 4v4.784Q9.461 8.82 6.46 12C3.459 15.18 3.307 16.761 3 19.923"/>`), g.Group(children),
	)
}

func FatCornerUpRightSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M14.296 3.489a.75.75 0 0 0-1.3.511v4.064c-2.747.193-5.118 1.341-7.08 3.421c-2.126 2.253-3.341 5.054-3.662 8.366a.75.75 0 0 0 1.336.534c2.188-2.793 4.004-4.196 5.438-4.515c1.393-.309 2.714-.39 3.969-.252V20a.75.75 0 0 0 1.312.496l7.253-8.213a.75.75 0 0 0-.013-1.008z"/>`), g.Group(children),
	)
}

func Female(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M12 15a6 6 0 1 0 0-12a6 6 0 0 0 0 12m0 0v6m-2-2h4"/>`), g.Group(children),
	)
}

func FemaleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12 2.25a6.75 6.75 0 0 0-.75 13.459v2.541H10a.75.75 0 0 0 0 1.5h1.25V21a.75.75 0 0 0 1.5 0v-1.25H14a.75.75 0 0 0 0-1.5h-1.25v-2.541A6.751 6.751 0 0 0 12 2.25"/>`), g.Group(children),
	)
}

func File(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9.728 3H7.5a2.25 2.25 0 0 0-2.25 2.25v13.5A2.25 2.25 0 0 0 7.5 21h9a2.25 2.25 0 0 0 2.25-2.25V12M9.728 3C10.971 3 12 4.007 12 5.25V7.5a2.25 2.25 0 0 0 2.25 2.25h2.25A2.25 2.25 0 0 1 18.75 12M9.728 3c3.69 0 9.022 5.36 9.022 9"/>`), g.Group(children),
	)
}

func FileCheck(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9.728 3H7.5a2.25 2.25 0 0 0-2.25 2.25v13.5A2.25 2.25 0 0 0 7.5 21h9a2.25 2.25 0 0 0 2.25-2.25V12M9.728 3C10.971 3 12 4.007 12 5.25V7.5a2.25 2.25 0 0 0 2.25 2.25h2.25A2.25 2.25 0 0 1 18.75 12M9.728 3c3.69 0 9.022 5.36 9.022 9"/><path d="m10 16.242l1.039 1.181c.095.109.267.1.351-.016L13.5 14.5"/></g>`), g.Group(children),
	)
}

func FileCheckSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M7.5 2.25a3 3 0 0 0-3 3v13.5a3 3 0 0 0 3 3h9a3 3 0 0 0 3-3V12c0-1.082-.392-2.226-.983-3.303c-.597-1.086-1.424-2.153-2.364-3.092s-2.008-1.77-3.098-2.368c-1.082-.594-2.234-.987-3.327-.987zm7.592 4.415a13 13 0 0 1 1.89 2.373A3 3 0 0 0 16.5 9h-2.25a1.5 1.5 0 0 1-1.5-1.5V5.25q0-.245-.039-.48c.822.5 1.64 1.154 2.381 1.895m-1.152 7.228a.75.75 0 0 1 .167 1.047l-2.11 2.908a.976.976 0 0 1-1.521.07l-1.04-1.18a.75.75 0 0 1 1.127-.991l.606.689l1.724-2.376a.75.75 0 0 1 1.047-.167"/>`), g.Group(children),
	)
}

func FileMinus(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M10 16h4M9.728 3H7.5a2.25 2.25 0 0 0-2.25 2.25v13.5A2.25 2.25 0 0 0 7.5 21h9a2.25 2.25 0 0 0 2.25-2.25V12M9.728 3C10.971 3 12 4.007 12 5.25V7.5a2.25 2.25 0 0 0 2.25 2.25h2.25A2.25 2.25 0 0 1 18.75 12M9.728 3c3.69 0 9.022 5.36 9.022 9"/>`), g.Group(children),
	)
}

func FileMinusSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M7.5 2.25a3 3 0 0 0-3 3v13.5a3 3 0 0 0 3 3h9a3 3 0 0 0 3-3V12c0-1.082-.392-2.226-.983-3.303c-.597-1.086-1.424-2.153-2.364-3.092s-2.008-1.77-3.098-2.368c-1.082-.594-2.234-.987-3.327-.987zm7.592 4.415a13 13 0 0 1 1.89 2.373A3 3 0 0 0 16.5 9h-2.25a1.5 1.5 0 0 1-1.5-1.5V5.25q0-.245-.039-.48c.822.5 1.64 1.154 2.381 1.895M10 15.25h4a.75.75 0 0 1 0 1.5h-4a.75.75 0 0 1 0-1.5"/>`), g.Group(children),
	)
}

func FilePlus(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M10 15.5h4m-2-2v4M9.728 3H7.5a2.25 2.25 0 0 0-2.25 2.25v13.5A2.25 2.25 0 0 0 7.5 21h9a2.25 2.25 0 0 0 2.25-2.25V12M9.728 3C10.971 3 12 4.007 12 5.25V7.5a2.25 2.25 0 0 0 2.25 2.25h2.25A2.25 2.25 0 0 1 18.75 12M9.728 3c3.69 0 9.022 5.36 9.022 9"/>`), g.Group(children),
	)
}

func FilePlusSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M7.5 2.25a3 3 0 0 0-3 3v13.5a3 3 0 0 0 3 3h9a3 3 0 0 0 3-3V12c0-1.082-.392-2.226-.983-3.303c-.597-1.086-1.424-2.153-2.364-3.092s-2.008-1.77-3.098-2.368c-1.082-.594-2.234-.987-3.327-.987zm7.592 4.415a13 13 0 0 1 1.89 2.373A3 3 0 0 0 16.5 9h-2.25a1.5 1.5 0 0 1-1.5-1.5V5.25q0-.245-.039-.48c.822.5 1.64 1.154 2.381 1.895M12 12.75a.75.75 0 0 1 .75.75v1.25H14a.75.75 0 0 1 0 1.5h-1.25v1.25a.75.75 0 0 1-1.5 0v-1.25H10a.75.75 0 0 1 0-1.5h1.25V13.5a.75.75 0 0 1 .75-.75"/>`), g.Group(children),
	)
}

func FileSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M4.5 5.25a3 3 0 0 1 3-3h2.228c1.093 0 2.245.393 3.327.987c1.09.598 2.159 1.428 3.098 2.368s1.767 2.006 2.364 3.092c.591 1.077.983 2.221.983 3.303v6.75a3 3 0 0 1-3 3h-9a3 3 0 0 1-3-3zm12.481 3.788a13 13 0 0 0-1.889-2.373a13 13 0 0 0-2.38-1.894q.038.234.038.479V7.5a1.5 1.5 0 0 0 1.5 1.5h2.25q.247 0 .481.038"/>`), g.Group(children),
	)
}

func FileText(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9.478 3H7.25A2.25 2.25 0 0 0 5 5.25v13.5A2.25 2.25 0 0 0 7.25 21h9a2.25 2.25 0 0 0 2.25-2.25V12M9.478 3c1.243 0 2.272 1.007 2.272 2.25V7.5A2.25 2.25 0 0 0 14 9.75h2.25A2.25 2.25 0 0 1 18.5 12M9.478 3c3.69 0 9.022 5.36 9.022 9M9 16.5h6m-6-3h4"/>`), g.Group(children),
	)
}

func FileTextSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M7.5 2.25h2.228c1.093 0 2.245.393 3.327.987c1.09.598 2.159 1.428 3.098 2.368s1.767 2.006 2.364 3.092c.591 1.077.983 2.221.983 3.303v6.75a3 3 0 0 1-3 3h-9a3 3 0 0 1-3-3V5.25a3 3 0 0 1 3-3m7.592 4.415a13 13 0 0 0-2.38-1.894q.038.234.038.479V7.5a1.5 1.5 0 0 0 1.5 1.5h2.25q.246 0 .481.038a13 13 0 0 0-1.889-2.373M9 12.75a.75.75 0 0 0 0 1.5h4a.75.75 0 0 0 0-1.5zm0 3a.75.75 0 0 0 0 1.5h6a.75.75 0 0 0 0-1.5z"/>`), g.Group(children),
	)
}

func FileX(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m10.5 14.5l2.828 2.828m0-2.828L10.5 17.328M9.728 3H7.5a2.25 2.25 0 0 0-2.25 2.25v13.5A2.25 2.25 0 0 0 7.5 21h9a2.25 2.25 0 0 0 2.25-2.25V12M9.728 3C10.971 3 12 4.007 12 5.25V7.5a2.25 2.25 0 0 0 2.25 2.25h2.25A2.25 2.25 0 0 1 18.75 12M9.728 3c3.69 0 9.022 5.36 9.022 9"/>`), g.Group(children),
	)
}

func FileXSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M7.5 2.25a3 3 0 0 0-3 3v13.5a3 3 0 0 0 3 3h9a3 3 0 0 0 3-3V12c0-1.082-.392-2.226-.983-3.303c-.597-1.086-1.424-2.153-2.364-3.092s-2.008-1.77-3.098-2.368c-1.082-.594-2.234-.987-3.327-.987zm7.592 4.415a13 13 0 0 1 1.89 2.373A3 3 0 0 0 16.5 9h-2.25a1.5 1.5 0 0 1-1.5-1.5V5.25q0-.245-.039-.48c.822.5 1.64 1.154 2.381 1.895M9.97 13.97a.75.75 0 0 1 1.06 0l.884.884l.884-.884a.75.75 0 0 1 1.06 1.06l-.883.884l.884.884a.75.75 0 0 1-1.06 1.06l-.885-.883l-.884.884a.75.75 0 1 1-1.06-1.06l.884-.885l-.884-.884a.75.75 0 0 1 0-1.06"/>`), g.Group(children),
	)
}

func Film(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M7.4 3.468v17.064m9-17.064v17.064M7.401 7.473H3.486M7.401 12H3.027m4.374 4.473H3.432m17.469-9h-3.915M20.901 12h-4.374m-.054 0h-9.9m14.328 4.473h-3.969M3 12c0-4.243 0-6.364 1.318-7.682S7.758 3 12 3s6.364 0 7.682 1.318S21 7.758 21 12s0 6.364-1.318 7.682S16.242 21 12 21s-6.364 0-7.682-1.318S3 16.242 3 12"/>`), g.Group(children),
	)
}

func FilmSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M11.943 2.25h.114c2.073 0 3.705 0 4.98.171c1.31.176 2.354.545 3.175 1.367c.822.821 1.19 1.866 1.367 3.174l.033.271a.75.75 0 0 1 .033.334c.105 1.175.105 2.617.105 4.376v.114c0 1.744 0 3.177-.102 4.347a.8.8 0 0 1-.027.28q-.02.18-.042.354c-.176 1.308-.545 2.353-1.367 3.174c-.821.822-1.866 1.19-3.174 1.367c-1.276.171-2.908.171-4.981.171h-.114c-2.073 0-3.705 0-4.98-.171c-1.31-.176-2.354-.545-3.175-1.367c-.822-.821-1.19-1.866-1.367-3.174c-.171-1.276-.171-2.908-.171-4.981v-.114c0-2.073 0-3.705.171-4.98c.176-1.31.545-2.354 1.367-3.175c.821-.822 1.866-1.19 3.174-1.367c1.276-.171 2.908-.171 4.981-.171m8.25 13.473c.047-.823.055-1.797.057-2.973h-3.1v2.973zm-3.042 1.5v2.821c.956-.163 1.551-.443 2-.892c.439-.438.716-1.015.88-1.929zm-10.5 2.785v-2.785H3.968c.165.914.442 1.49.88 1.929c.418.417.961.689 1.803.856m-2.844-4.285h2.844V12.75h-2.9c0 1.176.01 2.15.056 2.973M3.75 11.25h2.9V8.223H3.81c-.05.834-.058 1.825-.06 3.027m.228-4.527h2.673v-2.73c-.842.166-1.385.438-1.803.855c-.429.43-.704.992-.87 1.875m13.173-2.767v2.767h2.87c-.165-.883-.44-1.445-.87-1.875c-.449-.449-1.044-.73-2-.892m3.039 4.267h-3.04v3.027h3.1c-.002-1.202-.01-2.193-.06-3.027"/>`), g.Group(children),
	)
}

func Filter(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M4.5 7h15M7 12h10m-7 5h4"/>`), g.Group(children),
	)
}

func FilterOne(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M10.046 17.676v-3.918c0-.554 0-.832-.05-1.1a3 3 0 0 0-.219-.686c-.114-.247-.274-.474-.595-.926L5.935 6.467c-.566-.797-.849-1.196-.836-1.529a.98.98 0 0 1 .38-.735C5.743 4 6.232 4 7.21 4h9.581c.978 0 1.467 0 1.73.203a.97.97 0 0 1 .38.735c.014.333-.27.732-.835 1.53l-3.247 4.578c-.32.452-.481.679-.595.926a3 3 0 0 0-.22.687c-.05.267-.05.544-.05 1.1v5.871m-3.907-1.954c1.654-.732 3.908-.296 3.908 1.954m-3.908-1.954c-.033 2.235 2.262 2.792 3.908 1.954"/>`), g.Group(children),
	)
}

func FilterOneSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M7.175 3.25h9.65c.46 0 .855 0 1.167.028c.31.029.679.094.986.33c.406.313.652.79.672 1.3c.015.389-.145.727-.301.997c-.157.27-.386.593-.652.968L15.43 11.48c-.337.474-.448.636-.526.806a2.2 2.2 0 0 0-.163.51c-.034.184-.037.38-.037.962v5.872a.75.75 0 0 1-.41.668c-.99.505-2.203.608-3.205.202c-1.057-.427-1.812-1.401-1.793-2.829v-3.913c0-.582-.003-.778-.037-.961a2.2 2.2 0 0 0-.163-.511c-.078-.17-.19-.332-.526-.806L5.303 6.873a14 14 0 0 1-.652-.968c-.156-.27-.316-.608-.301-.996c.02-.512.266-.988.672-1.3c.307-.237.676-.302.986-.33c.312-.029.708-.029 1.167-.029m3.673 14.94c.119.485.427.767.804.92c.423.171.97.188 1.499.035a1.3 1.3 0 0 0-.194-.448a1.27 1.27 0 0 0-.608-.463c-.418-.162-.963-.178-1.5-.043"/>`), g.Group(children),
	)
}

func FilterSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M3.75 7a.75.75 0 0 1 .75-.75h15a.75.75 0 0 1 0 1.5h-15A.75.75 0 0 1 3.75 7m2.5 5a.75.75 0 0 1 .75-.75h10a.75.75 0 0 1 0 1.5H7a.75.75 0 0 1-.75-.75m3 5a.75.75 0 0 1 .75-.75h4a.75.75 0 0 1 0 1.5h-4a.75.75 0 0 1-.75-.75"/>`), g.Group(children),
	)
}

func FineTune(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M10 8.5h11m-18 0a2 2 0 1 0 4 0a2 2 0 0 0-4 0m0 7h11m3 0a2 2 0 1 0 4 0a2 2 0 0 0-4 0"/>`), g.Group(children),
	)
}

func FineTuneSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.25 8.5a.75.75 0 0 1 .75-.75h11a.75.75 0 0 1 0 1.5H10a.75.75 0 0 1-.75-.75m-7 7a.75.75 0 0 1 .75-.75h11a.75.75 0 0 1 0 1.5H3a.75.75 0 0 1-.75-.75M5 5.75a2.75 2.75 0 1 0 0 5.5a2.75 2.75 0 0 0 0-5.5m14 7a2.75 2.75 0 1 0 0 5.5a2.75 2.75 0 0 0 0-5.5"/>`), g.Group(children),
	)
}

func Fire(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M19.27 16.202A7.81 7.81 0 0 1 12.06 21c-4.313 0-7.81-3.492-7.81-7.8S5.89 7.13 8.455 3c4.806 2.1 4.806 8.4 4.806 8.4s1.579-3.038 4.807-4.5c1.034 3.042 2.43 6.365 1.202 9.302"/><path d="M12 18a5 5 0 0 1-5-5"/></g>`), g.Group(children),
	)
}

func FireSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M7.818 2.604a.75.75 0 0 1 .938-.291c2.676 1.17 3.982 3.498 4.618 5.441c.183.562.314 1.1.407 1.58l.1-.12c.844-.996 2.13-2.206 3.877-2.997a.75.75 0 0 1 1.02.441q.142.418.294.853c.437 1.252.906 2.597 1.18 3.928c.34 1.655.405 3.39-.29 5.053a8.56 8.56 0 0 1-7.902 5.258c-4.727 0-8.56-3.827-8.56-8.55c0-3.874 1.296-5.885 3.22-8.868c.346-.539.714-1.109 1.098-1.728M7.75 13a.75.75 0 0 0-1.5 0A5.75 5.75 0 0 0 12 18.75a.75.75 0 0 0 0-1.5A4.25 4.25 0 0 1 7.75 13"/>`), g.Group(children),
	)
}

func Five(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M14.375 7c-2.5.625-5.625 0-5.625 0v3.566h3.473c1.534 0 2.777 1.064 2.777 2.377v1.399c0 3.522-6.25 3.566-6.25 0"/>`), g.Group(children),
	)
}

func FiveCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/><path d="M14 8c-2 .5-4.5 0-4.5 0v2.852h2.778c1.227 0 2.222.852 2.222 1.902v1.12c0 2.818-5 2.852-5 0"/></g>`), g.Group(children),
	)
}

func FiveCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12 21.75c-5.385 0-9.75-4.365-9.75-9.75S6.615 2.25 12 2.25s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75M9.025 7.42A.75.75 0 0 0 8.75 8v2.852a.75.75 0 0 0 .75.75h2.778c.927 0 1.472.621 1.472 1.152v1.12c0 .453-.19.768-.484.992c-.316.239-.774.382-1.269.384s-.95-.139-1.264-.375c-.292-.22-.483-.537-.483-1.001a.75.75 0 0 0-1.5 0c0 .961.434 1.71 1.08 2.198c.624.471 1.417.68 2.173.678c.755-.003 1.547-.218 2.169-.689a2.67 2.67 0 0 0 1.078-2.187v-1.12c0-1.57-1.444-2.652-2.972-2.652H10.25V8.87c.206.024.441.047.697.066c.906.064 2.123.07 3.235-.208a.75.75 0 0 0-.364-1.456c-.749.188-1.601.22-2.356.19a13 13 0 0 1-1.431-.134a11 11 0 0 1-.364-.06a.77.77 0 0 0-.642.152"/>`), g.Group(children),
	)
}

func FiveDiamond(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M14 8c-2 .5-4.5 0-4.5 0v2.852h2.778c1.227 0 2.222.852 2.222 1.902v1.12c0 2.818-5 2.852-5 0"/><path d="M2.707 10.295a2.41 2.41 0 0 0 0 3.41l7.588 7.588a2.41 2.41 0 0 0 3.41 0l7.588-7.588a2.41 2.41 0 0 0 0-3.41l-7.588-7.588a2.41 2.41 0 0 0-3.41 0z"/></g>`), g.Group(children),
	)
}

func FiveDiamondSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.765 2.176a3.16 3.16 0 0 1 4.47 0l7.588 7.589a3.16 3.16 0 0 1 0 4.47l-7.588 7.588a3.16 3.16 0 0 1-4.47 0l-7.588-7.588a3.16 3.16 0 0 1 0-4.47zm-.74 5.244A.75.75 0 0 0 8.75 8v2.852a.75.75 0 0 0 .75.75h2.778c.927 0 1.472.621 1.472 1.152v1.12c0 .453-.19.768-.484.992c-.316.239-.774.382-1.269.384s-.95-.139-1.264-.375c-.292-.22-.483-.537-.483-1.001a.75.75 0 0 0-1.5 0c0 .961.434 1.71 1.08 2.198c.624.471 1.417.68 2.173.678c.755-.003 1.547-.218 2.169-.689a2.67 2.67 0 0 0 1.078-2.187v-1.12c0-1.57-1.444-2.652-2.972-2.652H10.25V8.87c.206.024.441.047.697.066c.906.064 2.123.07 3.235-.208a.75.75 0 0 0-.364-1.456c-.749.188-1.601.22-2.356.19a13 13 0 0 1-1.431-.134a11 11 0 0 1-.364-.06a.77.77 0 0 0-.642.152"/>`), g.Group(children),
	)
}

func FiveHexagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M14 8c-2 .5-4.5 0-4.5 0v2.852h2.778c1.227 0 2.222.852 2.222 1.902v1.12c0 2.818-5 2.852-5 0"/><path d="M20.5 15.8V8.2a1.91 1.91 0 0 0-.944-1.645l-6.612-3.8a1.88 1.88 0 0 0-1.888 0l-6.612 3.8A1.9 1.9 0 0 0 3.5 8.2v7.602a1.91 1.91 0 0 0 .944 1.644l6.612 3.8a1.88 1.88 0 0 0 1.888 0l6.612-3.8A1.9 1.9 0 0 0 20.5 15.8"/></g>`), g.Group(children),
	)
}

func FiveHexagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12 1.75c.463 0 .919.123 1.32.355l.001.001l6.611 3.8A2.65 2.65 0 0 1 21.25 8.2v7.603a2.66 2.66 0 0 1-1.318 2.291l-.003.002l-6.608 3.799h-.002a2.63 2.63 0 0 1-2.639 0h-.001l-6.608-3.8h-.003A2.64 2.64 0 0 1 2.75 15.8V8.198a2.66 2.66 0 0 1 1.318-2.291l.003-.002l6.61-3.8A2.63 2.63 0 0 1 12 1.75M9.025 7.42A.75.75 0 0 0 8.75 8v2.852a.75.75 0 0 0 .75.75h2.778c.927 0 1.472.621 1.472 1.152v1.12c0 .453-.19.768-.484.992c-.316.239-.774.382-1.269.384s-.95-.139-1.264-.375c-.292-.22-.483-.537-.483-1.001a.75.75 0 0 0-1.5 0c0 .961.434 1.71 1.08 2.198c.624.471 1.417.68 2.173.678c.755-.003 1.547-.218 2.169-.689a2.67 2.67 0 0 0 1.078-2.187v-1.12c0-1.57-1.444-2.652-2.972-2.652H10.25V8.87c.206.024.441.047.697.066c.906.064 2.123.07 3.235-.208a.75.75 0 0 0-.364-1.456c-.749.188-1.601.22-2.356.19a13 13 0 0 1-1.431-.134a11 11 0 0 1-.364-.06a.77.77 0 0 0-.642.152"/>`), g.Group(children),
	)
}

func FiveOctagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M14 8c-2 .5-4.5 0-4.5 0v2.852h2.778c1.227 0 2.222.852 2.222 1.902v1.12c0 2.818-5 2.852-5 0"/><path d="M7.805 3.469C8.16 3.115 8.451 3 8.937 3h6.126c.486 0 .778.115 1.132.469l4.336 4.336c.354.354.469.646.469 1.132v6.126c0 .5-.125.788-.469 1.132l-4.336 4.336c-.354.354-.646.469-1.132.469H8.937c-.5 0-.788-.125-1.132-.469L3.47 16.195c-.355-.355-.47-.646-.47-1.132V8.937c0-.5.125-.788.469-1.132z"/></g>`), g.Group(children),
	)
}

func FiveOctagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M7.275 2.938c.221-.22.463-.408.762-.53a2.3 2.3 0 0 1 .9-.158h6.126c.302 0 .602.036.9.158s.54.31.762.53l4.337 4.337c.22.221.408.463.53.762c.123.298.158.598.158.9v6.126c0 .313-.039.616-.163.914a2.3 2.3 0 0 1-.525.748l-4.337 4.337a2.3 2.3 0 0 1-.762.53a2.3 2.3 0 0 1-.9.158H8.937c-.313 0-.616-.039-.914-.163a2.3 2.3 0 0 1-.748-.525l-4.337-4.337a2.3 2.3 0 0 1-.53-.762a2.3 2.3 0 0 1-.158-.9V8.937c0-.313.039-.616.163-.914a2.3 2.3 0 0 1 .525-.748zm1.75 4.482A.75.75 0 0 0 8.75 8v2.852a.75.75 0 0 0 .75.75h2.778c.927 0 1.472.621 1.472 1.152v1.12c0 .453-.19.768-.484.992c-.316.239-.774.382-1.269.384s-.95-.139-1.264-.375c-.292-.22-.483-.537-.483-1.001a.75.75 0 0 0-1.5 0c0 .961.434 1.71 1.08 2.198c.624.471 1.417.68 2.173.678c.755-.003 1.547-.218 2.169-.689a2.67 2.67 0 0 0 1.078-2.187v-1.12c0-1.57-1.444-2.652-2.972-2.652H10.25V8.87c.206.024.441.047.697.066c.906.064 2.123.07 3.235-.208a.75.75 0 0 0-.364-1.456c-.749.188-1.601.22-2.356.19a13 13 0 0 1-1.431-.134a11 11 0 0 1-.364-.06a.77.77 0 0 0-.642.152"/>`), g.Group(children),
	)
}

func FiveSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8 7a.75.75 0 0 1 .75-.75h5.625a.75.75 0 0 1 0 1.5H9.5v2.066h2.723c1.834 0 3.527 1.295 3.527 3.127v1.399c0 1.132-.514 2.01-1.274 2.585c-.739.56-1.687.82-2.598.823c-.912.003-1.862-.25-2.603-.81C8.512 16.364 8 15.482 8 14.342a.75.75 0 0 1 1.5 0c0 .643.27 1.092.678 1.401c.43.325 1.043.51 1.694.507c.651-.002 1.266-.19 1.699-.518c.412-.313.679-.76.679-1.39v-1.4c0-.793-.794-1.626-2.027-1.626H8.75a.75.75 0 0 1-.75-.75z"/>`), g.Group(children),
	)
}

func FiveSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M14 8c-2 .5-4.5 0-4.5 0v2.852h2.778c1.227 0 2.222.852 2.222 1.902v1.12c0 2.818-5 2.852-5 0"/><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/></g>`), g.Group(children),
	)
}

func FiveSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M6.712 2.307c.697-.057 1.563-.057 2.655-.057h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461M9.025 7.42A.75.75 0 0 0 8.75 8v2.852a.75.75 0 0 0 .75.75h2.778c.927 0 1.472.621 1.472 1.152v1.12c0 .453-.19.768-.484.992c-.316.239-.774.382-1.269.384s-.95-.139-1.264-.375c-.292-.22-.483-.537-.483-1.001a.75.75 0 0 0-1.5 0c0 .961.434 1.71 1.08 2.198c.624.471 1.417.68 2.173.678c.755-.003 1.547-.218 2.169-.689a2.67 2.67 0 0 0 1.078-2.187v-1.12c0-1.57-1.444-2.652-2.972-2.652H10.25V8.87c.206.024.441.047.697.066c.906.064 2.123.07 3.235-.208a.75.75 0 0 0-.364-1.456c-.749.188-1.601.22-2.356.19a13 13 0 0 1-1.431-.134a11 11 0 0 1-.364-.06a.77.77 0 0 0-.642.152"/>`), g.Group(children),
	)
}

func FiveWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M14 8c-2 .5-4.5 0-4.5 0v2.852h2.778c1.227 0 2.222.852 2.222 1.902v1.12c0 2.818-5 2.852-5 0"/><path d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83"/></g>`), g.Group(children),
	)
}

func FiveWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.304 3.003c.506-.431.867-.74 1.261-.928a3.33 3.33 0 0 1 2.87 0c.394.189.755.497 1.26.928l.079.066c.48.41.939.604 1.58.655l.102.008c.662.053 1.135.09 1.547.236a3.33 3.33 0 0 1 2.03 2.029c.145.412.182.885.235 1.547l.008.102c.051.641.246 1.1.655 1.58l.066.078c.431.506.74.867.928 1.261a3.33 3.33 0 0 1 0 2.87c-.189.394-.497.755-.928 1.26l-.066.079c-.418.49-.605.951-.655 1.58l-.008.102c-.053.662-.09 1.135-.236 1.547a3.33 3.33 0 0 1-2.029 2.03c-.412.145-.885.182-1.547.235l-.102.008c-.641.051-1.1.246-1.58.655l-.079.066c-.505.431-.866.74-1.26.928a3.33 3.33 0 0 1-2.87 0c-.394-.189-.755-.497-1.26-.928l-.079-.066a2.56 2.56 0 0 0-1.58-.655l-.102-.008c-.662-.053-1.135-.09-1.547-.236a3.33 3.33 0 0 1-2.03-2.029c-.145-.412-.182-.885-.235-1.547l-.008-.102a2.56 2.56 0 0 0-.655-1.58l-.066-.079c-.431-.505-.74-.866-.928-1.26a3.33 3.33 0 0 1 0-2.87c.189-.394.497-.755.928-1.26l.066-.079a2.56 2.56 0 0 0 .655-1.58l.008-.102c.053-.662.09-1.135.236-1.547a3.33 3.33 0 0 1 2.029-2.03c.412-.145.885-.182 1.547-.235l.102-.008a2.56 2.56 0 0 0 1.58-.655zm-.28 4.417A.75.75 0 0 0 8.75 8v2.852a.75.75 0 0 0 .75.75h2.778c.927 0 1.472.621 1.472 1.152v1.12c0 .453-.19.768-.484.992c-.316.239-.774.382-1.269.384s-.95-.139-1.264-.375c-.292-.22-.483-.537-.483-1.001a.75.75 0 0 0-1.5 0c0 .961.434 1.71 1.08 2.198c.624.471 1.417.68 2.173.678c.755-.003 1.547-.218 2.169-.689a2.67 2.67 0 0 0 1.078-2.187v-1.12c0-1.57-1.444-2.652-2.972-2.652H10.25V8.87c.206.024.441.047.697.066c.906.064 2.123.07 3.235-.208a.75.75 0 0 0-.364-1.456c-.749.188-1.601.22-2.356.19a13 13 0 0 1-1.431-.134a11 11 0 0 1-.364-.06a.77.77 0 0 0-.642.152"/>`), g.Group(children),
	)
}

func Flag(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M4 21v-5.313m0 0c5.818-4.55 10.182 4.55 16 0V4.313c-5.818 4.55-10.182-4.55-16 0z"/>`), g.Group(children),
	)
}

func FlagOne(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m4.75 14l13.78-4.04c.96-.282.96-1.638 0-1.92L4.75 4m0 10V4m0 10v7m0-17V3"/>`), g.Group(children),
	)
}

func FlagOneSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M5.5 3A.75.75 0 0 0 4 3v18a.75.75 0 0 0 1.5 0v-6.438l13.241-3.883c1.679-.492 1.679-2.866 0-3.358L5.5 3.438z"/>`), g.Group(children),
	)
}

func FlagSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M19.538 3.723c-1.3 1.016-2.469 1.246-3.594 1.124c-1.18-.127-2.342-.64-3.638-1.218l-.053-.024c-1.235-.552-2.6-1.162-4.036-1.317c-1.511-.163-3.07.176-4.679 1.434a.75.75 0 0 0-.288.591V21a.75.75 0 0 0 1.5 0v-4.936c1.186-.835 2.264-1.023 3.306-.91c1.18.126 2.342.639 3.638 1.218l.053.023c1.235.553 2.6 1.162 4.036 1.317c1.511.163 3.07-.176 4.679-1.434a.75.75 0 0 0 .288-.591V4.313a.75.75 0 0 0-1.212-.59"/>`), g.Group(children),
	)
}

func Flask(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9.894 3.5v8l-3.66 3.965c-.932 1.265-2.795 3.276-.948 4.622c.568.413 1.615.413 3.71.413h6.009c2.094 0 3.141 0 3.709-.413c1.847-1.346-.016-3.357-.949-4.622l-3.66-3.965v-8m-4.21 0h4.21m-4.21 0H8.84m5.265 0h1.053"/>`), g.Group(children),
	)
}

func FlaskSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.841 2.75a.75.75 0 1 0 0 1.5h.303v6.957l-3.46 3.75l-.053.063q-.118.158-.268.354c-.43.559-1.013 1.319-1.335 2.079c-.207.488-.347 1.06-.242 1.653c.11.618.467 1.156 1.059 1.587c.456.333 1.034.448 1.658.502c.627.055 1.44.055 2.455.055h6.084c1.016 0 1.828 0 2.455-.055c.624-.054 1.202-.17 1.658-.502c.592-.431.95-.97 1.06-1.587c.105-.594-.036-1.165-.243-1.653c-.322-.76-.905-1.52-1.335-2.08q-.15-.194-.268-.353l-.053-.064l-3.46-3.75V4.25h.303a.75.75 0 0 0 0-1.5z"/>`), g.Group(children),
	)
}

func Folder(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3 6a2 2 0 0 1 2-2h1.745a2 2 0 0 1 1.322.5l2.272 2a2 2 0 0 0 1.322.5H19a2 2 0 0 1 2 2v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z"/>`), g.Group(children),
	)
}

func FolderCheck(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M3 6a2 2 0 0 1 2-2h1.745a2 2 0 0 1 1.322.5l2.272 2a2 2 0 0 0 1.322.5H19a2 2 0 0 1 2 2v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z"/><path d="m10.258 13.242l1.034 1.181c.095.109.266.1.35-.016l2.1-2.907"/></g>`), g.Group(children),
	)
}

func FolderCheckSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 6v12A2.75 2.75 0 0 0 5 20.75h14A2.75 2.75 0 0 0 21.75 18V9A2.75 2.75 0 0 0 19 6.25h-7.34a1.25 1.25 0 0 1-.826-.312L8.562 3.936a2.75 2.75 0 0 0-1.817-.686H5A2.75 2.75 0 0 0 2.25 6m11.931 4.892a.75.75 0 0 1 .169 1.047l-2.1 2.907a.974.974 0 0 1-1.522.072l-1.034-1.182a.75.75 0 0 1 1.129-.988l.598.684l1.713-2.371a.75.75 0 0 1 1.047-.169"/>`), g.Group(children),
	)
}

func FolderHeart(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M3 6a2 2 0 0 1 2-2h1.745a2 2 0 0 1 1.322.5l2.272 2a2 2 0 0 0 1.322.5H19a2 2 0 0 1 2 2v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z"/><path d="M8.62 12.024c0 1.972 3.38 4.226 3.38 4.226s3.38-2.254 3.38-4.226c0-1.88-2.55-2.454-3.38-.798c-.814-1.625-3.38-1.053-3.38.798"/></g>`), g.Group(children),
	)
}

func FolderHeartSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M5 3.25A2.75 2.75 0 0 0 2.25 6v12A2.75 2.75 0 0 0 5 20.75h14A2.75 2.75 0 0 0 21.75 18V9A2.75 2.75 0 0 0 19 6.25h-7.34a1.25 1.25 0 0 1-.826-.312L8.562 3.936a2.75 2.75 0 0 0-1.817-.686zm6.58 13.621l-.01-.006l-.032-.022a14 14 0 0 1-.521-.38a15 15 0 0 1-1.226-1.045c-.446-.427-.913-.938-1.273-1.494c-.354-.546-.649-1.201-.649-1.9c0-1.335.945-2.198 1.967-2.433c.713-.165 1.53-.038 2.158.458c1.506-1.229 4.137-.316 4.137 1.975c0 .699-.295 1.354-.65 1.9c-.36.556-.826 1.067-1.272 1.494a14.6 14.6 0 0 1-1.747 1.425l-.032.022l-.01.006l-.002.002h-.001a.75.75 0 0 1-.833 0h-.002z"/><path d="M14.63 12.024c0-1.068-1.475-1.43-1.96-.462a.75.75 0 0 1-1.34 0c-.225-.448-.687-.618-1.157-.51c-.465.107-.804.456-.804.972c0 .287.128.653.408 1.084c.274.422.652.844 1.052 1.227c.396.38.796.705 1.098.936l.073.055l.073-.055c.302-.23.702-.556 1.098-.936c.4-.383.778-.805 1.052-1.227c.28-.431.408-.797.408-1.084"/></g>`), g.Group(children),
	)
}

func FolderMinus(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3 6a2 2 0 0 1 2-2h1.745a2 2 0 0 1 1.322.5l2.272 2a2 2 0 0 0 1.322.5H19a2 2 0 0 1 2 2v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2zm7 7h4"/>`), g.Group(children),
	)
}

func FolderMinusSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 6v12A2.75 2.75 0 0 0 5 20.75h14A2.75 2.75 0 0 0 21.75 18V9A2.75 2.75 0 0 0 19 6.25h-7.34a1.25 1.25 0 0 1-.826-.312L8.562 3.936a2.75 2.75 0 0 0-1.817-.686H5A2.75 2.75 0 0 0 2.25 6M10 12.25h4a.75.75 0 0 1 0 1.5h-4a.75.75 0 0 1 0-1.5"/>`), g.Group(children),
	)
}

func FolderOne(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M11.661 7H19a2 2 0 0 1 2 2v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V7m8.661 0a2 2 0 0 1-1.322-.5l-2.272-2A2 2 0 0 0 6.745 4H5a2 2 0 0 0-2 2v1m8.661 0H3"/>`), g.Group(children),
	)
}

func FolderOneSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M5 4.75h1.745c.304 0 .598.11.826.312L8.92 6.25H3.75V6c0-.69.56-1.25 1.25-1.25m6.661 1.5a1.25 1.25 0 0 1-.826-.312L8.562 3.936a2.75 2.75 0 0 0-1.817-.686H5A2.75 2.75 0 0 0 2.25 6v12A2.75 2.75 0 0 0 5 20.75h14A2.75 2.75 0 0 0 21.75 18V9A2.75 2.75 0 0 0 19 6.25z"/>`), g.Group(children),
	)
}

func FolderPlus(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3 6a2 2 0 0 1 2-2h1.745a2 2 0 0 1 1.322.5l2.272 2a2 2 0 0 0 1.322.5H19a2 2 0 0 1 2 2v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2zm7 7.25h4m-2-2v4"/>`), g.Group(children),
	)
}

func FolderPlusSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 6v12A2.75 2.75 0 0 0 5 20.75h14A2.75 2.75 0 0 0 21.75 18V9A2.75 2.75 0 0 0 19 6.25h-7.34a1.25 1.25 0 0 1-.826-.312L8.562 3.936a2.75 2.75 0 0 0-1.817-.686H5A2.75 2.75 0 0 0 2.25 6M12 10.5a.75.75 0 0 1 .75.75v1.25H14a.75.75 0 0 1 0 1.5h-1.25v1.25a.75.75 0 0 1-1.5 0V14H10a.75.75 0 0 1 0-1.5h1.25v-1.25a.75.75 0 0 1 .75-.75"/>`), g.Group(children),
	)
}

func FolderSlash(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m3 21l1.177-1.177M21 3l-4 4m0 0h2a2 2 0 0 1 2 2v9a2 2 0 0 1-2 2H5c-.293 0-.572-.063-.823-.177M17 7L4.177 19.823M3 16.5V6a2 2 0 0 1 2-2h1.745a2 2 0 0 1 1.322.5l2.272 2a2 2 0 0 0 1.322.5H13"/>`), g.Group(children),
	)
}

func FolderSlashSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M5 3.25A2.75 2.75 0 0 0 2.25 6v12c0 .744.295 1.419.775 1.914l-.555.556a.75.75 0 1 0 1.06 1.06l.85-.85q.3.07.62.07h14A2.75 2.75 0 0 0 21.75 18V9A2.75 2.75 0 0 0 19 6.25h-.19l2.72-2.72a.75.75 0 0 0-1.06-1.06l-3.78 3.78h-5.03a1.25 1.25 0 0 1-.826-.312L8.562 3.936a2.75 2.75 0 0 0-1.817-.686z"/>`), g.Group(children),
	)
}

func FolderSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M5 3.25A2.75 2.75 0 0 0 2.25 6v12A2.75 2.75 0 0 0 5 20.75h14A2.75 2.75 0 0 0 21.75 18V9A2.75 2.75 0 0 0 19 6.25h-7.34a1.25 1.25 0 0 1-.826-.312L8.562 3.936a2.75 2.75 0 0 0-1.817-.686z"/>`), g.Group(children),
	)
}

func FolderTwo(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M19 7h-7.34a2 2 0 0 1-1.322-.5l-2.272-2M19 7a2 2 0 0 1 2 2v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h1.745a2 2 0 0 1 1.322.5M19 7a2.5 2.5 0 0 0-2.5-2.5H8.066"/>`), g.Group(children),
	)
}

func FolderTwoSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M5 3.25A2.75 2.75 0 0 0 2.25 6v12A2.75 2.75 0 0 0 5 20.75h14A2.75 2.75 0 0 0 21.75 18V9c0-1.283-.88-2.361-2.068-2.665a3.25 3.25 0 0 0-3.183-2.586H8.325a2.75 2.75 0 0 0-1.58-.499zm11.5 2c.698 0 1.3.408 1.582 1h-6.42a1.25 1.25 0 0 1-.827-.312l-.782-.689z"/>`), g.Group(children),
	)
}

func FolderX(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3 6a2 2 0 0 1 2-2h1.745a2 2 0 0 1 1.322.5l2.272 2a2 2 0 0 0 1.322.5H19a2 2 0 0 1 2 2v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2zm7.5 6l2.828 2.828m0-2.828L10.5 14.828"/>`), g.Group(children),
	)
}

func FolderXSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 6v12A2.75 2.75 0 0 0 5 20.75h14A2.75 2.75 0 0 0 21.75 18V9A2.75 2.75 0 0 0 19 6.25h-7.34a1.25 1.25 0 0 1-.826-.312L8.562 3.936a2.75 2.75 0 0 0-1.817-.686H5A2.75 2.75 0 0 0 2.25 6m7.72 5.47a.75.75 0 0 1 1.06 0l.884.884l.884-.884a.75.75 0 0 1 1.06 1.06l-.883.884l.884.884a.75.75 0 0 1-1.06 1.06l-.885-.883l-.884.884a.75.75 0 1 1-1.06-1.06l.884-.885l-.884-.884a.75.75 0 0 1 0-1.06"/>`), g.Group(children),
	)
}

func Forward(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9.985 9.419C11.328 10.515 12 11.063 12 12s-.672 1.485-2.015 2.582c-.371.302-.74.587-1.077.824a18 18 0 0 1-.98.635c-1.341.816-2.011 1.223-2.612.772c-.602-.451-.656-1.396-.766-3.285A27 27 0 0 1 4.5 12c0-.47.02-.993.05-1.528c.11-1.89.164-2.834.766-3.285c.6-.451 1.27-.044 2.611.771c.348.212.684.427.98.636c.339.237.707.522 1.078.825m7.5 0C18.828 10.515 19.5 11.063 19.5 12s-.672 1.485-2.015 2.582c-.371.302-.74.587-1.077.824c-.297.209-.633.424-.98.635c-1.341.816-2.011 1.223-2.613.772c-.6-.451-.655-1.396-.764-3.285A27 27 0 0 1 12 12c0-.47.02-.993.05-1.528c.11-1.89.164-2.834.765-3.285c.602-.451 1.272-.044 2.612.771c.348.212.684.427.98.636c.339.237.707.522 1.078.825"/>`), g.Group(children),
	)
}

func ForwardCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/><path d="M10.242 10.71c.672.547 1.008.821 1.008 1.29s-.336.743-1.008 1.29c-.185.152-.37.295-.538.413a9 9 0 0 1-.49.318c-.67.407-1.006.611-1.306.385s-.328-.697-.383-1.642A14 14 0 0 1 7.5 12c0-.235.01-.497.025-.764c.055-.945.082-1.417.383-1.642c.3-.226.635-.022 1.306.385c.174.106.342.214.49.318c.169.118.353.261.538.412m5.75.001c.672.546 1.008.82 1.008 1.29c0 .469-.336.743-1.008 1.29c-.185.152-.37.295-.538.413a9 9 0 0 1-.49.318c-.67.407-1.006.611-1.306.385s-.328-.697-.383-1.642A14 14 0 0 1 13.25 12c0-.235.01-.497.025-.764c.055-.945.082-1.417.383-1.642c.3-.226.636-.022 1.306.385c.174.106.341.214.49.318c.169.118.353.261.538.412"/></g>`), g.Group(children),
	)
}

func ForwardCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12 2.25c-5.385 0-9.75 4.365-9.75 9.75s4.365 9.75 9.75 9.75s9.75-4.365 9.75-9.75S17.385 2.25 12 2.25M9.603 9.338c.183.112.366.229.532.345c.189.133.388.287.581.445l.04.033c.301.245.599.488.811.735c.254.295.433.648.433 1.104s-.18.809-.433 1.104c-.212.247-.51.49-.81.736l-.04.032c-.194.158-.393.312-.582.445a10 10 0 0 1-.532.345l-.048.03c-.292.177-.6.365-.88.465a1.4 1.4 0 0 1-.586.09a1.2 1.2 0 0 1-.632-.24c-.368-.278-.504-.672-.569-1.01c-.061-.314-.084-.711-.109-1.144l-.003-.046A14 14 0 0 1 6.75 12c0-.254.01-.531.026-.807l.003-.046c.025-.433.048-.83.109-1.145c.065-.337.2-.731.57-1.008c.18-.136.392-.223.63-.24a1.4 1.4 0 0 1 .588.09c.278.1.587.287.879.465zm5.702-.03l.048.03c.183.112.366.229.532.345c.189.133.388.287.581.445l.04.033c.301.245.599.488.811.735c.254.295.433.648.433 1.104s-.18.809-.433 1.104c-.212.247-.51.49-.81.736l-.04.032c-.194.158-.393.312-.582.445a10 10 0 0 1-.532.345l-.048.03c-.292.177-.6.365-.88.465a1.4 1.4 0 0 1-.586.09a1.2 1.2 0 0 1-.632-.24c-.368-.278-.504-.672-.569-1.01c-.061-.314-.084-.711-.109-1.144l-.002-.046A14 14 0 0 1 12.5 12c0-.254.01-.531.027-.807l.002-.046c.025-.433.048-.83.109-1.145c.065-.337.2-.731.57-1.008c.18-.136.392-.223.63-.24a1.4 1.4 0 0 1 .588.09c.278.1.587.287.879.465"/>`), g.Group(children),
	)
}

func ForwardDiamond(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M2.707 10.295a2.41 2.41 0 0 0 0 3.41l7.588 7.588a2.41 2.41 0 0 0 3.41 0l7.588-7.588a2.41 2.41 0 0 0 0-3.41l-7.588-7.588a2.41 2.41 0 0 0-3.41 0z"/><path d="M10.242 10.71c.672.547 1.008.821 1.008 1.29s-.336.743-1.008 1.29c-.185.152-.37.295-.538.413a9 9 0 0 1-.49.318c-.67.407-1.006.611-1.306.385s-.328-.697-.383-1.642A14 14 0 0 1 7.5 12c0-.235.01-.497.025-.764c.055-.945.082-1.417.383-1.642c.3-.226.635-.022 1.306.385c.174.106.342.214.49.318c.169.118.353.261.538.412m5.75.001c.672.546 1.008.82 1.008 1.29c0 .469-.336.743-1.008 1.29c-.185.152-.37.295-.538.413a9 9 0 0 1-.49.318c-.67.407-1.006.611-1.306.385s-.328-.697-.383-1.642A14 14 0 0 1 13.25 12c0-.235.01-.497.025-.764c.055-.945.082-1.417.383-1.642c.3-.226.636-.022 1.306.385c.174.106.341.214.49.318c.169.118.353.261.538.412"/></g>`), g.Group(children),
	)
}

func ForwardDiamondSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12 1.25a3.16 3.16 0 0 0-2.235.926L2.177 9.765a3.16 3.16 0 0 0 0 4.47l7.588 7.588a3.16 3.16 0 0 0 4.47 0l7.588-7.588a3.16 3.16 0 0 0 0-4.47l-7.588-7.588A3.16 3.16 0 0 0 12 1.25M9.603 9.338c.183.112.366.229.532.345c.189.133.388.287.581.445l.04.033c.301.245.599.488.811.735c.254.295.433.648.433 1.104s-.18.809-.433 1.104c-.212.247-.51.49-.81.736l-.04.032c-.194.158-.393.312-.582.445a10 10 0 0 1-.532.345l-.048.03c-.292.177-.6.365-.88.465a1.4 1.4 0 0 1-.586.09a1.2 1.2 0 0 1-.632-.24c-.368-.278-.504-.672-.569-1.01c-.061-.314-.084-.711-.109-1.144l-.003-.046A14 14 0 0 1 6.75 12c0-.254.01-.531.026-.807l.003-.046c.025-.433.048-.83.109-1.145c.065-.337.2-.731.57-1.008c.18-.136.392-.223.63-.24a1.4 1.4 0 0 1 .588.09c.278.1.587.287.879.465zm5.702-.03l.048.03c.183.112.366.229.532.345c.189.133.388.287.581.445l.04.033c.301.245.599.488.811.735c.254.295.433.648.433 1.104s-.18.809-.433 1.104c-.212.247-.51.49-.81.736l-.04.032c-.194.158-.393.312-.582.445a10 10 0 0 1-.532.345l-.048.03c-.292.177-.6.365-.88.465a1.4 1.4 0 0 1-.586.09a1.2 1.2 0 0 1-.632-.24c-.368-.278-.504-.672-.569-1.01c-.061-.314-.084-.711-.109-1.144l-.002-.046A14 14 0 0 1 12.5 12c0-.254.01-.531.027-.807l.002-.046c.025-.433.048-.83.109-1.145c.065-.337.2-.731.57-1.008c.18-.136.392-.223.63-.24a1.4 1.4 0 0 1 .588.09c.278.1.587.287.879.465"/>`), g.Group(children),
	)
}

func ForwardHexagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M20.5 15.8V8.2a1.91 1.91 0 0 0-.944-1.645l-6.612-3.8a1.88 1.88 0 0 0-1.888 0l-6.612 3.8A1.9 1.9 0 0 0 3.5 8.2v7.602a1.91 1.91 0 0 0 .944 1.644l6.612 3.8a1.88 1.88 0 0 0 1.888 0l6.612-3.8A1.9 1.9 0 0 0 20.5 15.8"/><path d="M10.242 10.71c.672.547 1.008.821 1.008 1.29s-.336.743-1.008 1.29c-.185.152-.37.295-.538.413a9 9 0 0 1-.49.318c-.67.407-1.006.611-1.306.385s-.328-.697-.383-1.642A14 14 0 0 1 7.5 12c0-.235.01-.497.025-.764c.055-.945.082-1.417.383-1.642c.3-.226.635-.022 1.306.385c.174.106.342.214.49.318c.169.118.353.261.538.412m5.75.001c.672.546 1.008.82 1.008 1.29c0 .469-.336.743-1.008 1.29c-.185.152-.37.295-.538.413a9 9 0 0 1-.49.318c-.67.407-1.006.611-1.306.385s-.328-.697-.383-1.642A14 14 0 0 1 13.25 12c0-.235.01-.497.025-.764c.055-.945.082-1.417.383-1.642c.3-.226.636-.022 1.306.385c.174.106.341.214.49.318c.169.118.353.261.538.412"/></g>`), g.Group(children),
	)
}

func ForwardHexagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12 1.75a2.63 2.63 0 0 0-1.32.355l-6.61 3.8l-.002.002A2.65 2.65 0 0 0 2.75 8.198v7.603a2.64 2.64 0 0 0 1.318 2.292l.003.002l6.608 3.799h.002a2.63 2.63 0 0 0 2.639 0h.001l6.608-3.8h.003A2.65 2.65 0 0 0 21.25 15.8V8.2a2.65 2.65 0 0 0-1.318-2.292l-6.61-3.8l-.002-.002A2.63 2.63 0 0 0 12 1.75M9.603 9.338c.183.112.366.229.532.345c.189.133.388.287.581.445l.04.033c.301.245.599.488.811.735c.254.295.433.648.433 1.104s-.18.809-.433 1.104c-.212.247-.51.49-.81.736l-.04.032c-.194.158-.393.312-.582.445a10 10 0 0 1-.532.345l-.048.03c-.292.177-.6.365-.88.465a1.4 1.4 0 0 1-.586.09a1.2 1.2 0 0 1-.632-.24c-.368-.278-.504-.672-.569-1.01c-.061-.314-.084-.711-.109-1.144l-.003-.046A14 14 0 0 1 6.75 12c0-.254.01-.531.026-.807l.003-.046c.025-.433.048-.83.109-1.145c.065-.337.2-.731.57-1.008c.18-.136.392-.223.63-.24a1.4 1.4 0 0 1 .588.09c.278.1.587.287.879.465zm5.702-.03l.048.03c.183.112.366.229.532.345c.189.133.388.287.581.445l.04.033c.301.245.599.488.811.735c.254.295.433.648.433 1.104s-.18.809-.433 1.104c-.212.247-.51.49-.81.736l-.04.032c-.194.158-.393.312-.582.445a10 10 0 0 1-.532.345l-.048.03c-.292.177-.6.365-.88.465a1.4 1.4 0 0 1-.586.09a1.2 1.2 0 0 1-.632-.24c-.368-.278-.504-.672-.569-1.01c-.061-.314-.084-.711-.109-1.144l-.002-.046A14 14 0 0 1 12.5 12c0-.254.01-.531.027-.807l.002-.046c.025-.433.048-.83.109-1.145c.065-.337.2-.731.57-1.008c.18-.136.392-.223.63-.24a1.4 1.4 0 0 1 .588.09c.278.1.587.287.879.465"/>`), g.Group(children),
	)
}

func ForwardOctagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M7.805 3.469C8.16 3.115 8.451 3 8.937 3h6.126c.486 0 .778.115 1.132.469l4.336 4.336c.354.354.469.646.469 1.132v6.126c0 .5-.125.788-.469 1.132l-4.336 4.336c-.354.354-.646.469-1.132.469H8.937c-.5 0-.788-.125-1.132-.469L3.47 16.195c-.355-.355-.47-.646-.47-1.132V8.937c0-.5.125-.788.469-1.132z"/><path d="M10.242 10.71c.672.547 1.008.821 1.008 1.29s-.336.743-1.008 1.29c-.185.152-.37.295-.538.413a9 9 0 0 1-.49.318c-.67.407-1.006.611-1.306.385s-.328-.697-.383-1.642A14 14 0 0 1 7.5 12c0-.235.01-.497.025-.764c.055-.945.082-1.417.383-1.642c.3-.226.635-.022 1.306.385c.174.106.342.214.49.318c.169.118.353.261.538.412m5.75.001c.672.546 1.008.82 1.008 1.29c0 .469-.336.743-1.008 1.29c-.185.152-.37.295-.538.413a9 9 0 0 1-.49.318c-.67.407-1.006.611-1.306.385s-.328-.697-.383-1.642A14 14 0 0 1 13.25 12c0-.235.01-.497.025-.764c.055-.945.082-1.417.383-1.642c.3-.226.636-.022 1.306.385c.174.106.341.214.49.318c.169.118.353.261.538.412"/></g>`), g.Group(children),
	)
}

func ForwardOctagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.937 2.25a2.3 2.3 0 0 0-.9.158c-.299.122-.54.31-.762.53L2.938 7.275c-.213.214-.4.45-.525.748a2.3 2.3 0 0 0-.163.914v6.126c0 .302.036.602.158.9s.31.54.53.762l4.337 4.337c.214.213.45.4.748.524c.298.125.601.164.914.164h6.126c.302 0 .602-.035.9-.158c.299-.122.54-.31.762-.53l4.337-4.337c.213-.214.4-.45.524-.748a2.3 2.3 0 0 0 .164-.914V8.937a2.3 2.3 0 0 0-.158-.9a2.3 2.3 0 0 0-.53-.762l-4.337-4.337a2.3 2.3 0 0 0-.762-.53a2.3 2.3 0 0 0-.9-.158zm.666 7.088c.183.112.366.229.532.345c.189.133.388.287.581.445l.04.033c.301.245.599.488.811.735c.254.295.433.648.433 1.104s-.18.809-.433 1.104c-.212.247-.51.49-.81.736l-.04.032c-.194.158-.393.312-.582.445a10 10 0 0 1-.532.345l-.048.03c-.292.177-.6.365-.88.465a1.4 1.4 0 0 1-.586.09a1.2 1.2 0 0 1-.632-.24c-.368-.278-.504-.672-.569-1.01c-.061-.314-.084-.711-.109-1.144l-.003-.046A14 14 0 0 1 6.75 12c0-.254.01-.531.026-.807l.003-.046c.025-.433.048-.83.109-1.145c.065-.337.2-.731.57-1.008c.18-.136.392-.223.63-.24a1.4 1.4 0 0 1 .588.09c.278.1.587.287.879.465zm5.702-.03l.048.03c.183.112.366.229.532.345c.189.133.388.287.581.445l.04.033c.301.245.599.488.811.735c.254.295.433.648.433 1.104s-.18.809-.433 1.104c-.212.247-.51.49-.81.736l-.04.032c-.194.158-.393.312-.582.445a10 10 0 0 1-.532.345l-.048.03c-.292.177-.6.365-.88.465a1.4 1.4 0 0 1-.586.09a1.2 1.2 0 0 1-.632-.24c-.368-.278-.504-.672-.569-1.01c-.061-.314-.084-.711-.109-1.144l-.002-.046A14 14 0 0 1 12.5 12c0-.254.01-.531.027-.807l.002-.046c.025-.433.048-.83.109-1.145c.065-.337.2-.731.57-1.008c.18-.136.392-.223.63-.24a1.4 1.4 0 0 1 .588.09c.278.1.587.287.879.465"/>`), g.Group(children),
	)
}

func ForwardSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="m8.317 7.318l-.063-.039c-.616-.374-1.174-.714-1.656-.887a2.1 2.1 0 0 0-.865-.137c-.322.024-.612.14-.868.332c-.519.39-.736.959-.853 1.56c-.112.58-.155 1.33-.207 2.228l-.003.054A28 28 0 0 0 3.75 12c0 .489.02 1.028.052 1.571l.003.054c.052.899.095 1.649.207 2.227c.117.602.334 1.171.853 1.56c.256.193.546.31.868.333c.309.023.6-.042.865-.137c.482-.173 1.04-.513 1.656-.887l.063-.039c.357-.217.707-.441 1.022-.662c.357-.251.74-.548 1.12-.857l.048-.04c.63-.514 1.178-.96 1.558-1.403c.422-.491.685-1.03.685-1.72s-.263-1.229-.685-1.72c-.38-.442-.928-.889-1.558-1.403l-.048-.04c-.38-.309-.763-.606-1.12-.857c-.315-.22-.665-.445-1.022-.662"/><path d="m15.817 7.318l-.063-.039c-.616-.374-1.173-.714-1.656-.887a2.1 2.1 0 0 0-.865-.137c-.322.024-.612.14-.868.332c-.519.39-.736.959-.853 1.56c-.112.58-.155 1.33-.207 2.228l-.003.054A28 28 0 0 0 11.25 12c0 .489.02 1.028.052 1.571l.003.054c.052.899.095 1.649.207 2.227c.117.602.334 1.171.853 1.56c.256.193.546.31.868.333c.309.023.6-.042.865-.137c.482-.173 1.04-.513 1.656-.887l.063-.039c.357-.217.707-.441 1.022-.662c.358-.251.74-.548 1.12-.857l.048-.04c.63-.514 1.178-.96 1.558-1.403c.422-.491.685-1.03.685-1.72s-.263-1.229-.685-1.72c-.38-.442-.928-.889-1.558-1.403l-.048-.04c-.38-.309-.762-.606-1.12-.857c-.315-.22-.665-.445-1.022-.662"/></g>`), g.Group(children),
	)
}

func ForwardSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/><path d="M10.242 10.71c.672.547 1.008.821 1.008 1.29s-.336.743-1.008 1.29c-.185.152-.37.295-.538.413a9 9 0 0 1-.49.318c-.67.407-1.006.611-1.306.385s-.328-.697-.383-1.642A14 14 0 0 1 7.5 12c0-.235.01-.497.025-.764c.055-.945.082-1.417.383-1.642c.3-.226.635-.022 1.306.385c.174.106.342.214.49.318c.169.118.353.261.538.412m5.75.001c.672.546 1.008.82 1.008 1.29c0 .469-.336.743-1.008 1.29c-.185.152-.37.295-.538.413a9 9 0 0 1-.49.318c-.67.407-1.006.611-1.306.385s-.328-.697-.383-1.642A14 14 0 0 1 13.25 12c0-.235.01-.497.025-.764c.055-.945.082-1.417.383-1.642c.3-.226.636-.022 1.306.385c.174.106.341.214.49.318c.169.118.353.261.538.412"/></g>`), g.Group(children),
	)
}

func ForwardSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25c-1.092 0-1.958 0-2.655.057c-.714.058-1.317.18-1.868.46a4.75 4.75 0 0 0-2.076 2.077c-.281.55-.403 1.154-.461 1.868c-.057.697-.057 1.563-.057 2.655v5.266c0 1.092 0 1.958.057 2.655c.058.714.18 1.317.46 1.869a4.75 4.75 0 0 0 2.077 2.075c.55.281 1.154.403 1.868.461c.697.057 1.563.057 2.655.057h5.266c1.092 0 1.958 0 2.655-.057c.714-.058 1.317-.18 1.869-.46a4.75 4.75 0 0 0 2.075-2.076c.281-.552.403-1.155.461-1.869c.057-.697.057-1.563.057-2.655V9.367c0-1.092 0-1.958-.057-2.655c-.058-.714-.18-1.317-.46-1.868a4.75 4.75 0 0 0-2.076-2.076c-.552-.281-1.155-.403-1.869-.461c-.697-.057-1.563-.057-2.655-.057zm.236 7.088c.183.112.366.229.532.345c.189.133.388.287.581.445l.04.033c.301.245.599.488.811.735c.254.295.433.648.433 1.104s-.18.809-.433 1.104c-.212.247-.51.49-.81.736l-.04.032c-.194.158-.393.312-.582.445a10 10 0 0 1-.532.345l-.048.03c-.292.177-.6.365-.88.465a1.4 1.4 0 0 1-.586.09a1.2 1.2 0 0 1-.632-.24c-.368-.278-.504-.672-.569-1.01c-.061-.314-.084-.711-.109-1.144l-.003-.046A14 14 0 0 1 6.75 12c0-.254.01-.531.026-.807l.003-.046c.025-.433.048-.83.109-1.145c.065-.337.2-.731.57-1.008c.18-.136.392-.223.63-.24a1.4 1.4 0 0 1 .588.09c.278.1.587.287.879.465zm5.702-.03l.048.03c.183.112.366.229.532.345c.189.133.388.287.581.445l.04.033c.301.245.599.488.811.735c.254.295.433.648.433 1.104s-.18.809-.433 1.104c-.212.247-.51.49-.81.736l-.04.032c-.194.158-.393.312-.582.445a10 10 0 0 1-.532.345l-.048.03c-.292.177-.6.365-.88.465a1.4 1.4 0 0 1-.586.09a1.2 1.2 0 0 1-.632-.24c-.368-.278-.504-.672-.569-1.01c-.061-.314-.084-.711-.109-1.144l-.002-.046A14 14 0 0 1 12.5 12c0-.254.01-.531.027-.807l.002-.046c.025-.433.048-.83.109-1.145c.065-.337.2-.731.57-1.008c.18-.136.392-.223.63-.24a1.4 1.4 0 0 1 .588.09c.278.1.587.287.879.465"/>`), g.Group(children),
	)
}

func ForwardWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83"/><path d="M10.242 10.71c.672.547 1.008.821 1.008 1.29s-.336.743-1.008 1.29c-.185.152-.37.295-.538.413a9 9 0 0 1-.49.318c-.67.407-1.006.611-1.306.385s-.328-.697-.383-1.642A14 14 0 0 1 7.5 12c0-.235.01-.497.025-.764c.055-.945.082-1.417.383-1.642c.3-.226.635-.022 1.306.385c.174.106.342.214.49.318c.169.118.353.261.538.412m5.75.001c.672.546 1.008.82 1.008 1.29c0 .469-.336.743-1.008 1.29c-.185.152-.37.295-.538.413a9 9 0 0 1-.49.318c-.67.407-1.006.611-1.306.385s-.328-.697-.383-1.642A14 14 0 0 1 13.25 12c0-.235.01-.497.025-.764c.055-.945.082-1.417.383-1.642c.3-.226.636-.022 1.306.385c.174.106.341.214.49.318c.169.118.353.261.538.412"/></g>`), g.Group(children),
	)
}

func ForwardWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M13.435 2.075a3.33 3.33 0 0 0-2.87 0c-.394.189-.755.497-1.26.928l-.079.066a2.56 2.56 0 0 1-1.58.655l-.102.008c-.662.053-1.135.09-1.547.236a3.33 3.33 0 0 0-2.03 2.029c-.145.412-.182.885-.235 1.547l-.008.102a2.56 2.56 0 0 1-.655 1.58l-.066.078c-.431.506-.74.867-.928 1.261a3.33 3.33 0 0 0 0 2.87c.189.394.497.755.928 1.26l.066.079c.41.48.604.939.655 1.58l.008.102c.053.662.09 1.135.236 1.547a3.33 3.33 0 0 0 2.029 2.03c.412.145.885.182 1.547.235l.102.008c.629.05 1.09.238 1.58.655l.078.066c.506.431.867.74 1.261.928a3.33 3.33 0 0 0 2.87 0c.394-.189.755-.497 1.26-.928l.079-.066c.48-.41.939-.604 1.58-.655l.102-.008c.662-.053 1.135-.09 1.547-.236a3.33 3.33 0 0 0 2.03-2.029c.145-.412.182-.885.235-1.547l.008-.102c.05-.629.238-1.09.655-1.58l.066-.079c.431-.505.74-.866.928-1.26a3.33 3.33 0 0 0 0-2.87c-.189-.394-.497-.755-.928-1.26l-.066-.079a2.56 2.56 0 0 1-.655-1.58l-.008-.102c-.053-.662-.09-1.135-.236-1.547a3.33 3.33 0 0 0-2.029-2.03c-.412-.145-.885-.182-1.547-.235l-.102-.008a2.56 2.56 0 0 1-1.58-.655l-.079-.066c-.505-.431-.866-.74-1.26-.928M9.603 9.338c.183.112.366.229.532.345c.189.133.388.287.581.445l.04.033c.301.245.599.488.811.735c.254.295.433.648.433 1.104s-.18.809-.433 1.104c-.212.247-.51.49-.81.736l-.04.032c-.194.158-.393.312-.582.445a10 10 0 0 1-.532.345l-.048.03c-.292.177-.6.365-.88.465a1.4 1.4 0 0 1-.586.09a1.2 1.2 0 0 1-.632-.24c-.368-.278-.504-.672-.569-1.01c-.061-.314-.084-.711-.109-1.144l-.003-.046A14 14 0 0 1 6.75 12c0-.254.01-.531.026-.807l.003-.046c.025-.433.048-.83.109-1.145c.065-.337.2-.731.57-1.008c.18-.136.392-.223.63-.24a1.4 1.4 0 0 1 .588.09c.278.1.587.287.879.465zm5.702-.03l.048.03c.183.112.366.229.532.345c.189.133.388.287.581.445l.04.033c.301.245.599.488.811.735c.254.295.433.648.433 1.104s-.18.809-.433 1.104c-.212.247-.51.49-.81.736l-.04.032c-.194.158-.393.312-.582.445a10 10 0 0 1-.532.345l-.048.03c-.292.177-.6.365-.88.465a1.4 1.4 0 0 1-.586.09a1.2 1.2 0 0 1-.632-.24c-.368-.278-.504-.672-.569-1.01c-.061-.314-.084-.711-.109-1.144l-.002-.046A14 14 0 0 1 12.5 12c0-.254.01-.531.027-.807l.002-.046c.025-.433.048-.83.109-1.145c.065-.337.2-.731.57-1.008c.18-.136.392-.223.63-.24a1.4 1.4 0 0 1 .588.09c.278.1.587.287.879.465"/>`), g.Group(children),
	)
}

func Four(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M12.917 7c-1.042 3.75-4.167 6.875-4.167 6.875H15M13.438 17v-5"/>`), g.Group(children),
	)
}

func FourCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/><path d="M12.583 8c-.833 3-3.333 5.5-3.333 5.5h5M13 16v-4"/></g>`), g.Group(children),
	)
}

func FourCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12m11.056-3.8a.75.75 0 1 0-1.445-.4c-.383 1.377-1.16 2.668-1.863 3.633a16 16 0 0 1-1.185 1.44l-.072.075l-.018.018l-.004.004a.75.75 0 0 0 .531 1.28h3V16a.75.75 0 0 0 1.5 0v-1.75h.5a.75.75 0 0 0 0-1.5h-.5V12a.75.75 0 0 0-1.5 0v.75h-1.366q.158-.203.326-.433c.755-1.035 1.645-2.494 2.096-4.116"/>`), g.Group(children),
	)
}

func FourDiamond(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M12.583 8c-.833 3-3.333 5.5-3.333 5.5h5M13 16v-4"/><path d="M2.707 10.295a2.41 2.41 0 0 0 0 3.41l7.588 7.588a2.41 2.41 0 0 0 3.41 0l7.588-7.588a2.41 2.41 0 0 0 0-3.41l-7.588-7.588a2.41 2.41 0 0 0-3.41 0z"/></g>`), g.Group(children),
	)
}

func FourDiamondSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.79 1.49a3.16 3.16 0 0 1 3.445.687l7.588 7.588a3.16 3.16 0 0 1 0 4.47l-7.588 7.588a3.16 3.16 0 0 1-4.47 0l-7.588-7.588a3.16 3.16 0 0 1 0-4.47l7.588-7.589a3.2 3.2 0 0 1 1.025-.685m2.516 6.71a.75.75 0 1 0-1.445-.4c-.383 1.377-1.16 2.668-1.863 3.633a16 16 0 0 1-1.185 1.44l-.072.075l-.018.018l-.004.004a.75.75 0 0 0 .531 1.28h3V16a.75.75 0 0 0 1.5 0v-1.75h.5a.75.75 0 0 0 0-1.5h-.5V12a.75.75 0 0 0-1.5 0v.75h-1.366q.159-.203.326-.433c.755-1.035 1.645-2.494 2.096-4.116"/>`), g.Group(children),
	)
}

func FourHexagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M12.583 8c-.833 3-3.333 5.5-3.333 5.5h5M13 16v-4"/><path d="M20.5 15.8V8.2a1.91 1.91 0 0 0-.944-1.645l-6.612-3.8a1.88 1.88 0 0 0-1.888 0l-6.612 3.8A1.9 1.9 0 0 0 3.5 8.2v7.602a1.91 1.91 0 0 0 .944 1.644l6.612 3.8a1.88 1.88 0 0 0 1.888 0l6.612-3.8A1.9 1.9 0 0 0 20.5 15.8"/></g>`), g.Group(children),
	)
}

func FourHexagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.68 2.105a2.63 2.63 0 0 1 2.64 0l.001.001l6.611 3.8A2.65 2.65 0 0 1 21.25 8.2v7.603a2.66 2.66 0 0 1-1.318 2.291l-.003.002l-6.608 3.799h-.002a2.63 2.63 0 0 1-2.639 0h-.001l-6.608-3.8h-.003A2.64 2.64 0 0 1 2.75 15.8V8.198a2.66 2.66 0 0 1 1.318-2.291l.003-.002zm2.626 6.096a.75.75 0 1 0-1.445-.402c-.383 1.378-1.16 2.67-1.863 3.634a16 16 0 0 1-1.185 1.44l-.072.075l-.018.018l-.004.004a.75.75 0 0 0 .531 1.28h3V16a.75.75 0 0 0 1.5 0v-1.75h.5a.75.75 0 0 0 0-1.5h-.5V12a.75.75 0 0 0-1.5 0v.75h-1.366q.158-.203.326-.433c.755-1.035 1.645-2.494 2.096-4.116"/>`), g.Group(children),
	)
}

func FourOctagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M12.583 8c-.833 3-3.333 5.5-3.333 5.5h5M13 16v-4"/><path d="M7.805 3.469C8.16 3.115 8.451 3 8.937 3h6.126c.486 0 .778.115 1.132.469l4.336 4.336c.354.354.469.646.469 1.132v6.126c0 .5-.125.788-.469 1.132l-4.336 4.336c-.354.354-.646.469-1.132.469H8.937c-.5 0-.788-.125-1.132-.469L3.47 16.195c-.355-.355-.47-.646-.47-1.132V8.937c0-.5.125-.788.469-1.132z"/></g>`), g.Group(children),
	)
}

func FourOctagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.037 2.408a2.3 2.3 0 0 1 .9-.158h6.126c.302 0 .602.036.9.158s.54.31.762.53l4.337 4.337c.22.221.408.463.53.762c.123.298.158.598.158.9v6.126c0 .313-.039.616-.163.914a2.3 2.3 0 0 1-.525.748l-4.337 4.337a2.3 2.3 0 0 1-.762.53a2.3 2.3 0 0 1-.9.158H8.937c-.313 0-.616-.039-.914-.163a2.3 2.3 0 0 1-.748-.525l-4.337-4.337a2.3 2.3 0 0 1-.53-.762a2.3 2.3 0 0 1-.158-.9V8.937c0-.313.039-.616.163-.914a2.3 2.3 0 0 1 .525-.748l4.337-4.337c.221-.22.463-.408.762-.53M13.306 8.2a.75.75 0 1 0-1.445-.402c-.383 1.378-1.16 2.67-1.863 3.634a16 16 0 0 1-1.185 1.44l-.072.075l-.018.018l-.004.004a.75.75 0 0 0 .531 1.28h3V16a.75.75 0 0 0 1.5 0v-1.75h.5a.75.75 0 0 0 0-1.5h-.5V12a.75.75 0 0 0-1.5 0v.75h-1.366q.158-.203.326-.433c.755-1.035 1.645-2.494 2.096-4.116"/>`), g.Group(children),
	)
}

func FourSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M13.117 6.277a.75.75 0 0 1 .522.924c-.555 1.997-1.653 3.8-2.59 5.085c-.225.309-.443.59-.644.839h2.283V12a.75.75 0 0 1 1.5 0v1.125H15a.75.75 0 0 1 0 1.5h-.812V17a.75.75 0 0 1-1.5 0v-2.375H8.75a.75.75 0 0 1-.53-1.28l.005-.006l.023-.023l.093-.097a20 20 0 0 0 1.496-1.817c.886-1.215 1.87-2.85 2.357-4.603a.75.75 0 0 1 .923-.522"/>`), g.Group(children),
	)
}

func FourSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M12.583 8c-.833 3-3.333 5.5-3.333 5.5h5M13 16v-4"/><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/></g>`), g.Group(children),
	)
}

func FourSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057m3.939 5.95a.75.75 0 1 0-1.445-.4c-.383 1.377-1.16 2.668-1.863 3.633a16 16 0 0 1-1.185 1.44l-.072.075l-.018.018l-.004.004a.75.75 0 0 0 .531 1.28h3V16a.75.75 0 0 0 1.5 0v-1.75h.5a.75.75 0 0 0 0-1.5h-.5V12a.75.75 0 0 0-1.5 0v.75h-1.366q.159-.203.326-.433c.755-1.035 1.645-2.494 2.096-4.116"/>`), g.Group(children),
	)
}

func FourWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83"/><path d="M12.583 8c-.833 3-3.333 5.5-3.333 5.5h5M13 16v-4"/></g>`), g.Group(children),
	)
}

func FourWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.565 2.075a3.33 3.33 0 0 1 2.87 0c.394.189.755.497 1.26.928l.079.066c.48.41.939.604 1.58.655l.102.008c.662.053 1.135.09 1.547.236a3.33 3.33 0 0 1 2.03 2.029c.145.412.182.885.235 1.547l.008.102c.051.641.246 1.1.655 1.58l.066.078c.431.506.74.867.928 1.261a3.33 3.33 0 0 1 0 2.87c-.189.394-.497.755-.928 1.26l-.066.079c-.418.49-.605.951-.655 1.58l-.008.102c-.053.662-.09 1.135-.236 1.547a3.33 3.33 0 0 1-2.029 2.03c-.412.145-.885.182-1.547.235l-.102.008c-.641.051-1.1.246-1.58.655l-.079.066c-.505.431-.866.74-1.26.928a3.33 3.33 0 0 1-2.87 0c-.394-.189-.755-.497-1.26-.928l-.079-.066a2.56 2.56 0 0 0-1.58-.655l-.102-.008c-.662-.053-1.135-.09-1.547-.236a3.33 3.33 0 0 1-2.03-2.029c-.145-.412-.182-.885-.235-1.547l-.008-.102a2.56 2.56 0 0 0-.655-1.58l-.066-.079c-.431-.505-.74-.866-.928-1.26a3.33 3.33 0 0 1 0-2.87c.189-.394.497-.755.928-1.26l.066-.079a2.56 2.56 0 0 0 .655-1.58l.008-.102c.053-.662.09-1.135.236-1.547a3.33 3.33 0 0 1 2.029-2.03c.412-.145.885-.182 1.547-.235l.102-.008a2.56 2.56 0 0 0 1.58-.655l.078-.066c.506-.431.867-.74 1.261-.928m2.741 6.126a.75.75 0 1 0-1.445-.402c-.383 1.378-1.16 2.67-1.863 3.634a16 16 0 0 1-1.185 1.44l-.072.075l-.018.018l-.004.004a.75.75 0 0 0 .531 1.28h3V16a.75.75 0 0 0 1.5 0v-1.75h.5a.75.75 0 0 0 0-1.5h-.5V12a.75.75 0 0 0-1.5 0v.75h-1.366q.159-.203.326-.433c.755-1.035 1.645-2.494 2.096-4.116"/>`), g.Group(children),
	)
}

func Frame(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M21 6.6H3m18 10.8H3M6.6 3v18M17.4 3v18"/>`), g.Group(children),
	)
}

func FrameSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M7.35 3a.75.75 0 0 0-1.5 0v2.85H3a.75.75 0 0 0 0 1.5h2.85v9.3H3a.75.75 0 0 0 0 1.5h2.85V21a.75.75 0 0 0 1.5 0v-2.85h9.3V21a.75.75 0 0 0 1.5 0v-2.85H21a.75.75 0 0 0 0-1.5h-2.85v-9.3H21a.75.75 0 0 0 0-1.5h-2.85V3a.75.75 0 0 0-1.5 0v2.85h-9.3z"/>`), g.Group(children),
	)
}

func FunnyCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="m8.699 10.646l-.104-.49m4.995-.55l-.104-.49M8.5 15.57c1.258.316 2.686.316 4.123-.069c1.436-.385 2.672-1.099 3.604-2.001"/><path d="m12.587 15.637l.478.974a1.5 1.5 0 1 0 2.693-1.322l-.46-.935"/><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/></g>`), g.Group(children),
	)
}

func FunnyCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M12 2.25c-5.385 0-9.75 4.365-9.75 9.75s4.365 9.75 9.75 9.75s9.75-4.365 9.75-9.75S17.385 2.25 12 2.25m1.33 6.133a.75.75 0 0 1 .89.578l.103.489a.75.75 0 1 1-1.467.312l-.104-.49a.75.75 0 0 1 .578-.889m-4.891 1.04a.75.75 0 0 1 .89.578l.103.489a.75.75 0 1 1-1.467.311l-.104-.489a.75.75 0 0 1 .578-.89m8.327 3.555a.75.75 0 0 1-.017 1.06a8 8 0 0 1-.536.476l.218.445a2.25 2.25 0 0 1-4.039 1.983l-.273-.557a8.9 8.9 0 0 1-3.801-.087a.75.75 0 0 1 .364-1.455c1.13.283 2.429.287 3.746-.066s2.44-1.005 3.278-1.816a.75.75 0 0 1 1.06.017"/><path d="M13.592 15.982q.721-.26 1.366-.62l.127.258a.75.75 0 0 1-1.346.66z"/></g>`), g.Group(children),
	)
}

func FunnyGhost(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="m8.699 10.646l-.104-.49m4.995-.55l-.104-.49M8.5 15.57c1.258.316 2.686.316 4.123-.069c1.436-.385 2.672-1.099 3.604-2.001"/><path d="m12.587 15.637l.478.974a1.5 1.5 0 1 0 2.693-1.322l-.46-.935"/><path d="M3 18.562v-6.518C3 7.05 7.03 3 12 3s9 4.05 9 9.044v6.517c0 1.162-.967 2.519-2 2c-.835-.42-2.223-.52-3 0c-.874.585-2.126.585-3 0c-.885-.593-1.649-.57-2.5 0c-.874.585-2.126.585-3 0c-.777-.52-1.665-.42-2.5 0c-1.033.519-2-.838-2-2"/></g>`), g.Group(children),
	)
}

func FunnyGhostSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12.044v6.517c0 .764.308 1.57.8 2.127c.501.567 1.354 1.012 2.287.543c.696-.35 1.275-.363 1.746-.047c1.126.755 2.708.755 3.834 0c.345-.23.607-.308.825-.31c.218-.001.485.072.84.31c1.127.755 2.709.755 3.835 0c.213-.142.58-.237 1.044-.226c.454.01.898.12 1.202.273c.933.469 1.786.024 2.287-.543c.492-.557.8-1.363.8-2.126v-6.518c0-5.405-4.362-9.794-9.75-9.794s-9.75 4.389-9.75 9.794m14.516.934a.75.75 0 0 1-.017 1.06a8 8 0 0 1-.536.476l.218.445a2.25 2.25 0 0 1-4.039 1.983l-.273-.557a8.9 8.9 0 0 1-3.801-.087a.75.75 0 0 1 .364-1.455c1.13.283 2.429.287 3.746-.066s2.44-1.005 3.278-1.816a.75.75 0 0 1 1.06.017m-3.027 3.303l-.147-.299q.721-.26 1.366-.62l.127.258a.75.75 0 0 1-1.346.66M9.329 10l.103.489a.75.75 0 1 1-1.467.311l-.104-.489A.75.75 0 1 1 9.328 10m4-1.618a.75.75 0 0 1 .89.578l.104.489a.75.75 0 1 1-1.467.312l-.104-.49a.75.75 0 0 1 .578-.889"/>`), g.Group(children),
	)
}

func FunnySquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="m8.699 10.646l-.104-.49m4.995-.55l-.104-.49M8.5 15.57c1.258.316 2.686.316 4.123-.069c1.436-.385 2.672-1.099 3.604-2.001"/><path d="m12.587 15.637l.478.974a1.5 1.5 0 1 0 2.693-1.322l-.46-.935"/><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/></g>`), g.Group(children),
	)
}

func FunnySquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25c-1.092 0-1.958 0-2.655.057c-.714.058-1.317.18-1.868.46a4.75 4.75 0 0 0-2.076 2.077c-.281.55-.403 1.154-.461 1.868c-.057.697-.057 1.563-.057 2.655v5.266c0 1.092 0 1.958.057 2.655c.058.714.18 1.317.46 1.869a4.75 4.75 0 0 0 2.077 2.075c.55.281 1.154.403 1.868.461c.697.057 1.563.057 2.655.057h5.266c1.092 0 1.958 0 2.655-.057c.714-.058 1.317-.18 1.869-.46a4.75 4.75 0 0 0 2.075-2.076c.281-.552.403-1.155.461-1.869c.057-.697.057-1.563.057-2.655V9.367c0-1.092 0-1.958-.057-2.655c-.058-.714-.18-1.317-.46-1.868a4.75 4.75 0 0 0-2.076-2.076c-.552-.281-1.155-.403-1.869-.461c-.697-.057-1.563-.057-2.655-.057zm7.4 10.728a.75.75 0 0 1-.018 1.06a8 8 0 0 1-.536.476l.218.445a2.25 2.25 0 0 1-4.039 1.983l-.273-.557a8.9 8.9 0 0 1-3.801-.087a.75.75 0 0 1 .364-1.455c1.13.283 2.429.287 3.746-.066s2.44-1.005 3.278-1.816a.75.75 0 0 1 1.06.017m-3.028 3.303l-.147-.299q.721-.26 1.366-.62l.127.258a.75.75 0 0 1-1.346.66M9.329 10l.103.489a.75.75 0 1 1-1.467.311l-.104-.489A.75.75 0 1 1 9.328 10m4-1.618a.75.75 0 0 1 .89.578l.104.489a.75.75 0 1 1-1.467.312l-.104-.49a.75.75 0 0 1 .578-.889"/>`), g.Group(children),
	)
}

func GhostDaze(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="m8 12l2-1.5L8 9m8 3l-2-1.5L16 9m0 7.25l-1.333-1l-1.334 1l-1.333-1l-1.333 1l-1.334-1l-1.333 1"/><path d="M3 18.561v-6.517C3 7.05 7.03 3 12 3s9 4.05 9 9.044v6.517c0 1.162-.967 2.519-2 2c-.835-.42-2.223-.52-3 0c-.874.585-2.126.585-3 0c-.885-.593-1.649-.57-2.5 0c-.874.585-2.126.585-3 0c-.777-.52-1.665-.42-2.5 0c-1.033.519-2-.838-2-2"/></g>`), g.Group(children),
	)
}

func GhostFunny(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="m8.699 10.646l-.104-.49m4.995-.55l-.104-.49M8.5 15.57c1.258.316 2.686.316 4.123-.069c1.436-.385 2.672-1.099 3.604-2.001"/><path d="m12.587 15.637l.478.974a1.5 1.5 0 1 0 2.693-1.322l-.46-.935"/><path d="M3 18.561v-6.517C3 7.05 7.03 3 12 3s9 4.05 9 9.044v6.517c0 1.162-.967 2.519-2 2c-.835-.42-2.223-.52-3 0c-.874.585-2.126.585-3 0c-.885-.593-1.649-.57-2.5 0c-.874.585-2.126.585-3 0c-.777-.52-1.665-.42-2.5 0c-1.033.519-2-.838-2-2"/></g>`), g.Group(children),
	)
}

func GhostIndifferent(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9 15.5h6m-5.5-5V10m5 .5V10M3 18.561v-6.517C3 7.05 7.03 3 12 3s9 4.05 9 9.044v6.517c0 1.162-.967 2.519-2 2c-.835-.42-2.223-.52-3 0c-.874.585-2.126.585-3 0c-.885-.593-1.649-.57-2.5 0c-.874.585-2.126.585-3 0c-.777-.52-1.665-.42-2.5 0c-1.033.519-2-.838-2-2"/>`), g.Group(children),
	)
}

func GhostSad(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9 16c.85-.63 1.885-1 3-1s2.15.37 3 1m-5.5-5.5V10m5 .5V10"/><path d="M3 18.561v-6.517C3 7.05 7.03 3 12 3s9 4.05 9 9.044v6.517c0 1.162-.967 2.519-2 2c-.835-.42-2.223-.52-3 0c-.874.585-2.126.585-3 0c-.885-.593-1.649-.57-2.5 0c-.874.585-2.126.585-3 0c-.777-.52-1.665-.42-2.5 0c-1.033.519-2-.838-2-2"/></g>`), g.Group(children),
	)
}

func GhostSmile(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9 15c.85.63 1.885 1 3 1s2.15-.37 3-1m-5.5-4.5V10m5 .5V10"/><path d="M3 18.561v-6.517C3 7.05 7.03 3 12 3s9 4.05 9 9.044v6.517c0 1.162-.967 2.519-2 2c-.835-.42-2.223-.52-3 0c-.874.585-2.126.585-3 0c-.885-.593-1.649-.57-2.5 0c-.874.585-2.126.585-3 0c-.777-.52-1.665-.42-2.5 0c-1.033.519-2-.838-2-2"/></g>`), g.Group(children),
	)
}

func Gift(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M12 21v-9m0-5H7.95c-2.77 0-2.94-4 0-4C11.1 3 12 7 12 7m0 0h4.05c2.896 0 2.896-4 0-4C12.9 3 12 7 12 7"/><path d="M20 12v7a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2v-7m17 0V9a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v3z"/></g>`), g.Group(children),
	)
}

func GiftSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M6.559 4.984c.013.637.457 1.266 1.391 1.266h3.007a6 6 0 0 0-.439-.855C9.964 4.498 9.152 3.75 7.95 3.75c-.555 0-.89.183-1.085.39a1.18 1.18 0 0 0-.306.844m6.484 1.266h3.007c.541 0 .882-.181 1.09-.396c.215-.223.332-.531.332-.854s-.117-.63-.333-.854c-.207-.215-.548-.396-1.089-.396c-1.202 0-2.014.748-2.568 1.645c-.182.293-.327.59-.44.855m7.707 6.5V19A2.75 2.75 0 0 1 18 21.75H6A2.75 2.75 0 0 1 3.25 19v-6.25H3a.75.75 0 0 1-.75-.75V9A2.75 2.75 0 0 1 5 6.25h.37a2.85 2.85 0 0 1-.311-1.234a2.68 2.68 0 0 1 .716-1.906c.513-.543 1.26-.86 2.175-.86c1.948 0 3.161 1.252 3.844 2.355q.11.18.206.356q.096-.177.206-.356c.683-1.103 1.896-2.355 3.844-2.355c.907 0 1.651.319 2.168.854c.509.527.754 1.219.754 1.896c0 .426-.097.857-.295 1.25H19A2.75 2.75 0 0 1 21.75 9v3a.75.75 0 0 1-.75.75zm-1.5 0h-6.5v7.5H18c.69 0 1.25-.56 1.25-1.25zm-8 7.5v-7.5h-6.5V19c0 .69.56 1.25 1.25 1.25z"/>`), g.Group(children),
	)
}

func GitBranch(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M6 15a3 3 0 1 1 0 6a3 3 0 0 1 0-6"/><path d="M18 9a3 3 0 1 1 0-6a3 3 0 0 1 0 6m0 0a9 9 0 0 1-9 9m-3-3V3"/></g>`), g.Group(children),
	)
}

func GitBranchSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M6.75 3a.75.75 0 0 0-1.5 0v11.325a3.751 3.751 0 1 0 4.43 4.402a9.75 9.75 0 0 0 9.047-9.047a3.751 3.751 0 1 0-1.504-.01a8.25 8.25 0 0 1-7.554 7.553a3.76 3.76 0 0 0-2.919-2.898z"/>`), g.Group(children),
	)
}

func GitCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/><path d="M14 12a2 2 0 1 1-4 0m4 0a2 2 0 1 0-4 0m4 0h3m-7 0H7"/></g>`), g.Group(children),
	)
}

func GitCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M12 10.75a1.25 1.25 0 1 0 0 2.5a1.25 1.25 0 0 0 0-2.5"/><path d="M2.25 12c0 5.385 4.365 9.75 9.75 9.75s9.75-4.365 9.75-9.75S17.385 2.25 12 2.25S2.25 6.615 2.25 12m7.104-.75a2.751 2.751 0 0 1 5.293 0H17a.75.75 0 0 1 0 1.5h-2.354a2.751 2.751 0 0 1-5.292 0H7a.75.75 0 0 1 0-1.5z"/></g>`), g.Group(children),
	)
}

func GitCommit(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M12 15a3 3 0 1 0 0-6a3 3 0 0 0 0 6m-9-3h6m6 0h6"/>`), g.Group(children),
	)
}

func GitCommitSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12 8.25a3.75 3.75 0 0 0-3.675 3H3a.75.75 0 0 0 0 1.5h5.325a3.751 3.751 0 0 0 7.35 0H21a.75.75 0 0 0 0-1.5h-5.325a3.75 3.75 0 0 0-3.675-3"/>`), g.Group(children),
	)
}

func GitDiamond(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M2.707 10.295a2.41 2.41 0 0 0 0 3.41l7.588 7.588a2.41 2.41 0 0 0 3.41 0l7.588-7.588a2.41 2.41 0 0 0 0-3.41l-7.588-7.588a2.41 2.41 0 0 0-3.41 0z"/><path d="M14 12a2 2 0 1 1-4 0m4 0a2 2 0 1 0-4 0m4 0h3m-7 0H7"/></g>`), g.Group(children),
	)
}

func GitDiamondSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M12 10.75a1.25 1.25 0 1 0 0 2.5a1.25 1.25 0 0 0 0-2.5"/><path d="M10.79 1.49a3.2 3.2 0 0 0-1.025.686L2.177 9.765a3.16 3.16 0 0 0 0 4.47l7.588 7.588a3.16 3.16 0 0 0 4.47 0l7.588-7.588a3.16 3.16 0 0 0 0-4.47l-7.588-7.588a3.16 3.16 0 0 0-3.445-.686m-1.436 9.76a2.751 2.751 0 0 1 5.293 0H17a.75.75 0 0 1 0 1.5h-2.354a2.751 2.751 0 0 1-5.292 0H7a.75.75 0 0 1 0-1.5z"/></g>`), g.Group(children),
	)
}

func GitDiff(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M18 21a3 3 0 1 0 0-6a3 3 0 0 0 0 6m0-6V7.5a2 2 0 0 0-2-2h-2.5"/><path d="M14.5 8L12 5.5L14.5 3M6 3a3 3 0 1 0 0 6a3 3 0 0 0 0-6m0 6v7.5a2 2 0 0 0 2 2h2.5"/><path d="m9.5 16l2.5 2.5L9.5 21"/></g>`), g.Group(children),
	)
}

func GitDiffSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 6a3.75 3.75 0 1 1 4.5 3.675V16.5c0 .69.56 1.25 1.25 1.25h2.19l-1.22-1.22a.75.75 0 1 1 1.06-1.06l2.5 2.5a.75.75 0 0 1 0 1.06l-2.5 2.5a.75.75 0 1 1-1.06-1.06l1.22-1.22H8a2.75 2.75 0 0 1-2.75-2.75V9.675A3.75 3.75 0 0 1 2.25 6m12.78-3.53a.75.75 0 0 1 0 1.06l-1.22 1.22H16a2.75 2.75 0 0 1 2.75 2.75v6.825A3.751 3.751 0 0 1 18 21.75a3.75 3.75 0 0 1-.75-7.425V7.5c0-.69-.56-1.25-1.25-1.25h-2.19l1.22 1.22a.75.75 0 0 1-1.06 1.06l-2.5-2.5a.75.75 0 0 1 0-1.06l2.5-2.5a.75.75 0 0 1 1.06 0"/>`), g.Group(children),
	)
}

func GitHexagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M20.5 15.8V8.2a1.91 1.91 0 0 0-.944-1.645l-6.612-3.8a1.88 1.88 0 0 0-1.888 0l-6.612 3.8A1.9 1.9 0 0 0 3.5 8.2v7.602a1.91 1.91 0 0 0 .944 1.644l6.612 3.8a1.88 1.88 0 0 0 1.888 0l6.612-3.8A1.9 1.9 0 0 0 20.5 15.8"/><path d="M14 12a2 2 0 1 1-4 0m4 0a2 2 0 1 0-4 0m4 0h3m-7 0H7"/></g>`), g.Group(children),
	)
}

func GitHexagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M12 10.75a1.25 1.25 0 1 0 0 2.5a1.25 1.25 0 0 0 0-2.5"/><path d="m10.68 2.105l-6.61 3.8l-.002.002A2.65 2.65 0 0 0 2.75 8.198v7.603a2.64 2.64 0 0 0 1.318 2.292l.003.002l6.608 3.799h.002a2.63 2.63 0 0 0 2.639 0h.001l6.608-3.8h.003A2.65 2.65 0 0 0 21.25 15.8V8.2a2.65 2.65 0 0 0-1.318-2.292l-6.61-3.8l-.002-.002a2.63 2.63 0 0 0-2.64 0M9.354 11.25a2.751 2.751 0 0 1 5.293 0H17a.75.75 0 0 1 0 1.5h-2.354a2.751 2.751 0 0 1-5.292 0H7a.75.75 0 0 1 0-1.5z"/></g>`), g.Group(children),
	)
}

func GitMerge(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M6 9a3 3 0 1 0 0-6a3 3 0 0 0 0 6m9 9a3 3 0 1 0 6 0a3 3 0 0 0-6 0m0 0a9 9 0 0 1-9-9m0 0v12"/>`), g.Group(children),
	)
}

func GitMergeSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 6a3.75 3.75 0 1 1 4.527 3.67a8.25 8.25 0 0 0 7.554 7.553A3.751 3.751 0 0 1 21.75 18a3.75 3.75 0 0 1-7.43.727a9.75 9.75 0 0 1-7.57-4.529V21a.75.75 0 0 1-1.5 0V9.675A3.75 3.75 0 0 1 2.25 6"/>`), g.Group(children),
	)
}

func GitOctagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M7.805 3.469C8.16 3.115 8.451 3 8.937 3h6.126c.486 0 .778.115 1.132.469l4.336 4.336c.354.354.469.646.469 1.132v6.126c0 .5-.125.788-.469 1.132l-4.336 4.336c-.354.354-.646.469-1.132.469H8.937c-.5 0-.788-.125-1.132-.469L3.47 16.195c-.355-.355-.47-.646-.47-1.132V8.937c0-.5.125-.788.469-1.132z"/><path d="M14 12a2 2 0 1 1-4 0m4 0a2 2 0 1 0-4 0m4 0h3m-7 0H7"/></g>`), g.Group(children),
	)
}

func GitOctagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M12 10.75a1.25 1.25 0 1 0 0 2.5a1.25 1.25 0 0 0 0-2.5"/><path d="M8.037 2.408c-.299.122-.54.31-.762.53L2.938 7.275c-.213.214-.4.45-.525.748a2.3 2.3 0 0 0-.163.914v6.126c0 .302.036.602.158.9s.31.54.53.762l4.337 4.337c.214.213.45.4.748.524c.298.125.601.164.914.164h6.126c.302 0 .602-.035.9-.158c.299-.122.54-.31.762-.53l4.337-4.337c.213-.214.4-.45.524-.748a2.3 2.3 0 0 0 .164-.914V8.937a2.3 2.3 0 0 0-.158-.9a2.3 2.3 0 0 0-.53-.762l-4.337-4.337a2.3 2.3 0 0 0-.762-.53a2.3 2.3 0 0 0-.9-.158H8.937a2.3 2.3 0 0 0-.9.158m1.317 8.842a2.751 2.751 0 0 1 5.293 0H17a.75.75 0 0 1 0 1.5h-2.354a2.751 2.751 0 0 1-5.292 0H7a.75.75 0 0 1 0-1.5z"/></g>`), g.Group(children),
	)
}

func GitPullRequest(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M6 9a3 3 0 1 0 0-6a3 3 0 0 0 0 6m12 12a3 3 0 1 0 0-6a3 3 0 0 0 0 6M6 9v12m12-6V7.5a2 2 0 0 0-2-2h-2.5"/><path d="M14.5 8L12 5.5L14.5 3"/></g>`), g.Group(children),
	)
}

func GitPullRequestSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 6a3.75 3.75 0 1 1 4.5 3.675V21a.75.75 0 0 1-1.5 0V9.675A3.75 3.75 0 0 1 2.25 6m12.78-3.53a.75.75 0 0 1 0 1.06l-1.22 1.22H16a2.75 2.75 0 0 1 2.75 2.75v6.825A3.751 3.751 0 0 1 18 21.75a3.75 3.75 0 0 1-.75-7.425V7.5c0-.69-.56-1.25-1.25-1.25h-2.19l1.22 1.22a.75.75 0 0 1-1.06 1.06l-2.5-2.5a.75.75 0 0 1 0-1.06l2.5-2.5a.75.75 0 0 1 1.06 0"/>`), g.Group(children),
	)
}

func GitSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/><path d="M14 12a2 2 0 1 1-4 0m4 0a2 2 0 1 0-4 0m4 0h3m-7 0H7"/></g>`), g.Group(children),
	)
}

func GitSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M12 10.75a1.25 1.25 0 1 0 0 2.5a1.25 1.25 0 0 0 0-2.5"/><path d="M9.367 2.25c-1.092 0-1.958 0-2.655.057c-.714.058-1.317.18-1.868.46a4.75 4.75 0 0 0-2.076 2.077c-.281.55-.403 1.154-.461 1.868c-.057.697-.057 1.563-.057 2.655v5.266c0 1.092 0 1.958.057 2.655c.058.714.18 1.317.46 1.869a4.75 4.75 0 0 0 2.077 2.075c.55.281 1.154.403 1.868.461c.697.057 1.563.057 2.655.057h5.266c1.092 0 1.958 0 2.655-.057c.714-.058 1.317-.18 1.869-.46a4.75 4.75 0 0 0 2.075-2.076c.281-.552.403-1.155.461-1.869c.057-.697.057-1.563.057-2.655V9.367c0-1.092 0-1.958-.057-2.655c-.058-.714-.18-1.317-.46-1.868a4.75 4.75 0 0 0-2.076-2.076c-.552-.281-1.155-.403-1.869-.461c-.697-.057-1.563-.057-2.655-.057zm-.013 9a2.751 2.751 0 0 1 5.293 0H17a.75.75 0 0 1 0 1.5h-2.354a2.751 2.751 0 0 1-5.292 0H7a.75.75 0 0 1 0-1.5z"/></g>`), g.Group(children),
	)
}

func GitWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83"/><path d="M14 12a2 2 0 1 1-4 0m4 0a2 2 0 1 0-4 0m4 0h3m-7 0H7"/></g>`), g.Group(children),
	)
}

func GitWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M12 10.75a1.25 1.25 0 1 0 0 2.5a1.25 1.25 0 0 0 0-2.5"/><path d="M10.565 2.075c-.394.189-.755.497-1.26.928l-.079.066a2.56 2.56 0 0 1-1.58.655l-.102.008c-.662.053-1.135.09-1.547.236a3.33 3.33 0 0 0-2.03 2.029c-.145.412-.182.885-.235 1.547l-.008.102a2.56 2.56 0 0 1-.655 1.58l-.066.078c-.431.506-.74.867-.928 1.261a3.33 3.33 0 0 0 0 2.87c.189.394.497.755.928 1.26l.066.079c.41.48.604.939.655 1.58l.008.102c.053.662.09 1.135.236 1.547a3.33 3.33 0 0 0 2.029 2.03c.412.145.885.182 1.547.235l.102.008c.629.05 1.09.238 1.58.655l.079.066c.505.431.866.74 1.26.928a3.33 3.33 0 0 0 2.87 0c.394-.189.755-.497 1.26-.928l.079-.066c.48-.41.939-.604 1.58-.655l.102-.008c.662-.053 1.135-.09 1.547-.236a3.33 3.33 0 0 0 2.03-2.029c.145-.412.182-.885.235-1.547l.008-.102c.05-.629.238-1.09.655-1.58l.066-.079c.431-.505.74-.866.928-1.26a3.33 3.33 0 0 0 0-2.87c-.189-.394-.497-.755-.928-1.26l-.066-.079a2.56 2.56 0 0 1-.655-1.58l-.008-.102c-.053-.662-.09-1.135-.236-1.547a3.33 3.33 0 0 0-2.029-2.03c-.412-.145-.885-.182-1.547-.235l-.102-.008a2.56 2.56 0 0 1-1.58-.655l-.079-.066c-.505-.431-.866-.74-1.26-.928a3.33 3.33 0 0 0-2.87 0M9.354 11.25a2.751 2.751 0 0 1 5.293 0H17a.75.75 0 0 1 0 1.5h-2.354a2.751 2.751 0 0 1-5.292 0H7a.75.75 0 0 1 0-1.5z"/></g>`), g.Group(children),
	)
}

func Glasses(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M16.5 18a3 3 0 1 0 0-6a3 3 0 0 0 0 6m-9 0a3 3 0 1 0 0-6a3 3 0 0 0 0 6"/><path d="M13.5 15.16c-1.042-.371-1.937-.379-3 0m9-.16l-.572-6.296c-.166-1.825-.73-2.14-2.428-2.704m-12 9l.572-6.296C5.238 6.88 5.802 6.564 7.5 6"/></g>`), g.Group(children),
	)
}

func GlassesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.212 5.764a.75.75 0 0 1-.476.948c-.88.292-1.265.466-1.492.695c-.186.189-.347.505-.425 1.365L5.544 11.8a3.75 3.75 0 0 1 5.622 2.405a4.6 4.6 0 0 1 1.668 0a3.75 3.75 0 0 1 5.622-2.405l-.275-3.028c-.078-.86-.239-1.177-.425-1.365c-.227-.229-.61-.402-1.492-.695a.75.75 0 1 1 .472-1.424c.817.272 1.564.537 2.085 1.063c.562.567.766 1.32.854 2.285l.52 5.716a3.75 3.75 0 0 1-7.372 1.385a3.2 3.2 0 0 0-1.645 0a3.751 3.751 0 0 1-7.372-1.385l.52-5.716c.087-.965.292-1.718.853-2.285c.521-.526 1.268-.792 2.085-1.063a.75.75 0 0 1 .948.476"/>`), g.Group(children),
	)
}

func Globe(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M12 21a9 9 0 1 0 0-18m0 18a9 9 0 1 1 0-18m0 18c2.761 0 3.941-5.163 3.941-9S14.761 3 12 3m0 18c-2.761 0-3.941-5.163-3.941-9S9.239 3 12 3M3.5 9h17m-17 6h17"/>`), g.Group(children),
	)
}

func GlobeSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M4.06 9.75A8.3 8.3 0 0 0 3.75 12c0 .78.108 1.535.31 2.25h3.371A21 21 0 0 1 7.309 12c0-.716.04-1.479.122-2.25zm-1.3-.867a.8.8 0 0 1 .09-.257a9.754 9.754 0 0 1 18.302.001a.8.8 0 0 1 .09.254c.33.98.509 2.028.509 3.119c0 1.09-.18 2.14-.51 3.119a.8.8 0 0 1-.089.254a9.754 9.754 0 0 1-18.302 0a.8.8 0 0 1-.09-.256A9.7 9.7 0 0 1 2.25 12c0-1.09.179-2.139.509-3.117M12 3.75c-.428 0-.832.192-1.228.624c-.407.443-.77 1.107-1.073 1.942c-.215.594-.39 1.25-.525 1.934h5.652a13.5 13.5 0 0 0-.525-1.934c-.302-.835-.666-1.499-1.073-1.942c-.396-.432-.8-.624-1.228-.624m4.57 10.5h3.37c.202-.715.31-1.47.31-2.25s-.108-1.535-.31-2.25h-3.37c.082.771.121 1.534.121 2.25s-.04 1.479-.122 2.25m-1.744 1.5H9.174c.136.683.31 1.34.525 1.934c.302.835.666 1.499 1.073 1.942c.396.432.8.624 1.228.624s.832-.192 1.228-.624c.407-.443.771-1.107 1.073-1.942c.215-.594.39-1.25.525-1.934m-5.86 3.925a9 9 0 0 1-.677-1.481a15.4 15.4 0 0 1-.642-2.444H4.65a8.28 8.28 0 0 0 4.317 3.925M19.35 8.25a8.28 8.28 0 0 0-4.317-3.925c.265.454.489.957.678 1.481c.274.757.487 1.59.643 2.444z"/>`), g.Group(children),
	)
}

func Grid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3 6.75c0-1.768 0-2.652.55-3.2C4.097 3 4.981 3 6.75 3c1.768 0 2.652 0 3.2.55c.55.548.55 1.432.55 3.2s0 2.652-.55 3.2c-.548.55-1.432.55-3.2.55s-2.652 0-3.2-.55C3 9.403 3 8.519 3 6.75m0 10.507c0-1.768 0-2.652.55-3.2c.548-.55 1.432-.55 3.2-.55s2.652 0 3.2.55c.55.548.55 1.432.55 3.2s0 2.652-.55 3.2c-.548.55-1.432.55-3.2.55s-2.652 0-3.2-.55C3 19.91 3 19.026 3 17.258M13.5 6.75c0-1.768 0-2.652.55-3.2c.548-.55 1.432-.55 3.2-.55s2.652 0 3.2.55c.55.548.55 1.432.55 3.2s0 2.652-.55 3.2c-.548.55-1.432.55-3.2.55s-2.652 0-3.2-.55c-.55-.548-.55-1.432-.55-3.2m0 10.507c0-1.768 0-2.652.55-3.2c.548-.55 1.432-.55 3.2-.55s2.652 0 3.2.55c.55.548.55 1.432.55 3.2s0 2.652-.55 3.2c-.548.55-1.432.55-3.2.55s-2.652 0-3.2-.55c-.55-.548-.55-1.432-.55-3.2"/>`), g.Group(children),
	)
}

func GridOne(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9.4 21h5.2m-5.2 0c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6M9.4 21V3M3 14.6V9.4m0 5.2h18m0 0V9.4m0 5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21m0 0V3m0 0H9.4m5.2 0c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4m0 0H3M9.4 3c-2.24 0-3.36 0-4.216.436a4 4 0 0 0-1.748 1.748C3 6.04 3 7.16 3 9.4"/>`), g.Group(children),
	)
}

func GridOneSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057M6.834 3.802c-.62.05-1.005.147-1.31.302a3.25 3.25 0 0 0-1.42 1.42c-.155.305-.251.69-.302 1.31c-.04.48-.049 1.063-.051 1.816H8.65v-4.9a25 25 0 0 0-1.816.052m3.316-.052v4.9h3.7v-4.9zm5.2 0v4.9h4.9a24 24 0 0 0-.052-1.816c-.05-.62-.147-1.005-.302-1.31a3.25 3.25 0 0 0-1.42-1.42c-.305-.155-.69-.251-1.31-.302c-.48-.04-1.063-.049-1.816-.051m4.9 6.4h-4.9v3.7h4.9zm0 5.2h-4.9v4.9a24 24 0 0 0 1.816-.052c.62-.05 1.005-.147 1.31-.302a3.25 3.25 0 0 0 1.42-1.42c.155-.305.251-.69.302-1.31c.04-.48.049-1.063.051-1.816m-6.4 4.9v-4.9h-3.7v4.9zm-5.2 0v-4.9h-4.9c.003.753.013 1.336.052 1.816c.05.62.147 1.005.302 1.31a3.25 3.25 0 0 0 1.42 1.42c.305.155.69.251 1.31.302c.48.04 1.063.049 1.816.051m-4.9-6.4h4.9v-3.7h-4.9zm6.4-3.7v3.7h3.7v-3.7z"/>`), g.Group(children),
	)
}

func GridSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M6.699 2.25c-.84 0-1.546 0-2.106.075c-.594.08-1.137.257-1.574.694s-.614.98-.694 1.574c-.075.56-.075 1.266-.075 2.106V6.8c0 .84 0 1.546.075 2.106c.08.594.257 1.137.694 1.574s.98.614 1.574.694c.56.075 1.266.075 2.106.075H6.8c.84 0 1.546 0 2.106-.075c.594-.08 1.137-.257 1.574-.694s.614-.98.694-1.574c.075-.56.075-1.266.075-2.106v-.1c0-.84 0-1.546-.075-2.106c-.08-.594-.257-1.137-.694-1.574s-.98-.614-1.574-.694c-.56-.075-1.266-.075-2.106-.075zm10.5 0c-.84 0-1.546 0-2.106.075c-.594.08-1.137.257-1.574.694s-.614.98-.694 1.574c-.075.56-.075 1.266-.075 2.106V6.8c0 .84 0 1.546.075 2.106c.08.594.257 1.137.694 1.574s.98.614 1.574.694c.56.075 1.266.075 2.106.075h.102c.84 0 1.546 0 2.106-.075c.594-.08 1.137-.257 1.574-.694s.614-.98.694-1.574c.075-.56.075-1.266.075-2.106v-.1c0-.84 0-1.546-.075-2.106c-.08-.594-.257-1.137-.694-1.574s-.98-.614-1.574-.694c-.56-.075-1.265-.075-2.105-.075zm-10.5 10.507c-.84 0-1.546 0-2.106.075c-.594.08-1.137.257-1.574.694s-.614.98-.694 1.574c-.075.56-.075 1.266-.075 2.106v.102c0 .84 0 1.546.075 2.106c.08.594.257 1.137.694 1.574s.98.614 1.574.694c.56.075 1.266.075 2.106.075H6.8c.84 0 1.546 0 2.106-.075c.594-.08 1.137-.257 1.574-.694s.614-.98.694-1.574c.075-.56.075-1.266.075-2.106v-.102c0-.84 0-1.545-.075-2.106c-.08-.594-.257-1.137-.694-1.574s-.98-.614-1.574-.694c-.56-.075-1.266-.075-2.106-.075zm10.5 0c-.84 0-1.546 0-2.106.075c-.594.08-1.137.257-1.574.694s-.614.98-.694 1.574c-.075.56-.075 1.266-.075 2.106v.102c0 .84 0 1.546.075 2.106c.08.594.257 1.137.694 1.574s.98.614 1.574.694c.56.075 1.266.075 2.106.075h.102c.84 0 1.546 0 2.106-.075c.594-.08 1.137-.257 1.574-.694s.614-.98.694-1.574c.075-.56.075-1.266.075-2.106v-.102c0-.84 0-1.545-.075-2.106c-.08-.594-.257-1.137-.694-1.574s-.98-.614-1.574-.694c-.56-.075-1.266-.075-2.105-.075z"/>`), g.Group(children),
	)
}

func Hand(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M17.428 11.212v-4.5c0-2.213-3.572-2.35-3.572 0"/><path d="M13.857 10V4.712c0-2.213-3.572-2.35-3.572 0v1.8m-.001 4.25v-4.05c0-2.213-3.747-2.35-3.747 0V13"/><path d="M17.428 9.312c0-2.35 3.572-2.213 3.572 0v4.4c0 6.843-9.799 9.578-14.278 5.094l-3.215-3.24C2.018 13.904 4.044 10.5 6.537 13l1 1"/></g>`), g.Group(children),
	)
}

func HandSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M14.594 4.44a2.8 2.8 0 0 1 1.063-.19c1.176.023 2.521.832 2.521 2.462v.323c.34-.133.701-.191 1.05-.184c1.177.022 2.522.83 2.522 2.46v4.4c0 3.843-2.761 6.463-5.977 7.509c-3.202 1.041-7.092.609-9.582-1.884l-.002-.002l-3.214-3.24l-.027-.028c-1.038-1.16-.82-2.85.009-3.828c.435-.515 1.078-.885 1.855-.875q.491.006.976.21V6.711c0-.81.332-1.458.864-1.887c.513-.413 1.162-.586 1.773-.574c.375.006.76.083 1.118.236c.053-.693.352-1.259.816-1.65c.495-.42 1.128-.598 1.726-.586c1.109.02 2.368.74 2.509 2.19"/>`), g.Group(children),
	)
}

func HardDrive(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3.25 13h17.5M5.45 4.11l-2.162 7.847A8 8 0 0 0 3 14.082V19a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-4.918a8 8 0 0 0-.288-2.125L18.55 4.11A2 2 0 0 0 16.76 3H7.24a2 2 0 0 0-1.79 1.11M17 17h1m-5 0h1"/>`), g.Group(children),
	)
}

func HardDriveSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M7.24 2.25h9.52a2.75 2.75 0 0 1 2.462 1.526a1 1 0 0 1 .051.135l2.163 7.846a8.8 8.8 0 0 1 .314 2.325V19A2.75 2.75 0 0 1 19 21.75H5A2.75 2.75 0 0 1 2.25 19v-4.918c0-.785.106-1.567.314-2.325l2.163-7.846a1 1 0 0 1 .051-.135A2.75 2.75 0 0 1 7.24 2.25m13.002 11.5H3.758a7 7 0 0 0-.008.332V19A1.25 1.25 0 0 0 5 20.25h14A1.25 1.25 0 0 0 20.25 19v-4.918q0-.165-.008-.332"/><path d="M16.25 17a.75.75 0 0 1 .75-.75h1a.75.75 0 0 1 0 1.5h-1a.75.75 0 0 1-.75-.75m-4 0a.75.75 0 0 1 .75-.75h1a.75.75 0 0 1 0 1.5h-1a.75.75 0 0 1-.75-.75"/></g>`), g.Group(children),
	)
}

func Hash(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9.697 4L6.678 21M17.054 4l-3.019 17M21 8.781H3m18 7.438H3"/>`), g.Group(children),
	)
}

func HashCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0M10.905 8l-1.437 8m4.937-8l-1.437 8m3.314-5.75H7.718m8.564 3.5H7.718"/>`), g.Group(children),
	)
}

func HashCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M10.769 13h1.976l.359-2h-1.976z"/><path d="M12 2.25c-5.385 0-9.75 4.365-9.75 9.75s4.365 9.75 9.75 9.75s9.75-4.365 9.75-9.75S17.385 2.25 12 2.25m-.963 5.012a.75.75 0 0 1 .606.87L11.397 9.5h1.976l.293-1.633a.75.75 0 0 1 1.477.266L14.897 9.5h1.385a.75.75 0 0 1 0 1.5h-1.654l-.36 2h2.014a.75.75 0 0 1 0 1.5H14l-.293 1.633a.75.75 0 0 1-1.477-.265l.246-1.368H10.5l-.293 1.633a.75.75 0 0 1-1.477-.265l.246-1.368H7.718a.75.75 0 0 1 0-1.5h1.527l.359-2H7.718a.75.75 0 0 1 0-1.5h2.155l.293-1.633a.75.75 0 0 1 .871-.605"/></g>`), g.Group(children),
	)
}

func HashDiamond(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M2.707 10.295a2.41 2.41 0 0 0 0 3.41l7.588 7.588a2.41 2.41 0 0 0 3.41 0l7.588-7.588a2.41 2.41 0 0 0 0-3.41l-7.588-7.588a2.41 2.41 0 0 0-3.41 0zM10.905 8l-1.437 8m4.937-8l-1.437 8m3.314-5.75H7.718m8.564 3.5H7.718"/>`), g.Group(children),
	)
}

func HashDiamondSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M10.769 13h1.976l.359-2h-1.976z"/><path d="M12 1.25a3.16 3.16 0 0 0-2.235.926L2.177 9.765a3.16 3.16 0 0 0 0 4.47l7.588 7.588a3.16 3.16 0 0 0 4.47 0l7.588-7.588a3.16 3.16 0 0 0 0-4.47l-7.588-7.588A3.16 3.16 0 0 0 12 1.25m-.963 6.012a.75.75 0 0 1 .606.87L11.397 9.5h1.976l.293-1.633a.75.75 0 0 1 1.477.266L14.897 9.5h1.385a.75.75 0 0 1 0 1.5h-1.654l-.36 2h2.014a.75.75 0 0 1 0 1.5H14l-.293 1.633a.75.75 0 0 1-1.477-.265l.246-1.368H10.5l-.293 1.633a.75.75 0 0 1-1.477-.265l.246-1.368H7.718a.75.75 0 0 1 0-1.5h1.527l.359-2H7.718a.75.75 0 0 1 0-1.5h2.155l.293-1.633a.75.75 0 0 1 .871-.605"/></g>`), g.Group(children),
	)
}

func HashHexagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M20.5 15.8V8.2a1.91 1.91 0 0 0-.944-1.645l-6.612-3.8a1.88 1.88 0 0 0-1.888 0l-6.612 3.8A1.9 1.9 0 0 0 3.5 8.2v7.602a1.91 1.91 0 0 0 .944 1.644l6.612 3.8a1.88 1.88 0 0 0 1.888 0l6.612-3.8A1.9 1.9 0 0 0 20.5 15.8M10.905 8l-1.437 8m4.937-8l-1.437 8m3.314-5.75H7.718m8.564 3.5H7.718"/>`), g.Group(children),
	)
}

func HashHexagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M10.769 13h1.976l.359-2h-1.976z"/><path d="M12 1.75a2.63 2.63 0 0 0-1.32.355l-6.61 3.8l-.002.002A2.65 2.65 0 0 0 2.75 8.198v7.603a2.64 2.64 0 0 0 1.318 2.292l.003.002l6.608 3.799h.002a2.63 2.63 0 0 0 2.639 0h.001l6.608-3.8h.003A2.65 2.65 0 0 0 21.25 15.8V8.2a2.65 2.65 0 0 0-1.318-2.292l-6.61-3.8l-.002-.002A2.63 2.63 0 0 0 12 1.75m-.963 5.512a.75.75 0 0 1 .606.87L11.397 9.5h1.976l.293-1.633a.75.75 0 0 1 1.477.266L14.897 9.5h1.385a.75.75 0 0 1 0 1.5h-1.654l-.36 2h2.014a.75.75 0 0 1 0 1.5H14l-.293 1.633a.75.75 0 0 1-1.477-.265l.246-1.368H10.5l-.293 1.633a.75.75 0 0 1-1.477-.265l.246-1.368H7.718a.75.75 0 0 1 0-1.5h1.527l.359-2H7.718a.75.75 0 0 1 0-1.5h2.155l.293-1.633a.75.75 0 0 1 .871-.605"/></g>`), g.Group(children),
	)
}

func HashOctagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M7.805 3.469C8.16 3.115 8.451 3 8.937 3h6.126c.486 0 .778.115 1.132.469l4.336 4.336c.354.354.469.646.469 1.132v6.126c0 .5-.125.788-.469 1.132l-4.336 4.336c-.354.354-.646.469-1.132.469H8.937c-.5 0-.788-.125-1.132-.469L3.47 16.195c-.355-.355-.47-.646-.47-1.132V8.937c0-.5.125-.788.469-1.132zM10.905 8l-1.437 8m4.937-8l-1.437 8m3.314-5.75H7.718m8.564 3.5H7.718"/>`), g.Group(children),
	)
}

func HashOctagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M10.769 13h1.976l.359-2h-1.976z"/><path d="M8.937 2.25a2.3 2.3 0 0 0-.9.158c-.299.122-.54.31-.762.53L2.938 7.275c-.213.214-.4.45-.525.748a2.3 2.3 0 0 0-.163.914v6.126c0 .302.036.602.158.9s.31.54.53.762l4.337 4.337c.214.213.45.4.748.524c.298.125.601.164.914.164h6.126c.302 0 .602-.035.9-.158c.299-.122.54-.31.762-.53l4.337-4.337c.213-.214.4-.45.524-.748a2.3 2.3 0 0 0 .164-.914V8.937a2.3 2.3 0 0 0-.158-.9a2.3 2.3 0 0 0-.53-.762l-4.337-4.337a2.3 2.3 0 0 0-.762-.53a2.3 2.3 0 0 0-.9-.158zm2.1 5.012a.75.75 0 0 1 .606.87L11.397 9.5h1.976l.293-1.633a.75.75 0 0 1 1.477.266L14.897 9.5h1.385a.75.75 0 0 1 0 1.5h-1.654l-.36 2h2.014a.75.75 0 0 1 0 1.5H14l-.293 1.633a.75.75 0 0 1-1.477-.265l.246-1.368H10.5l-.293 1.633a.75.75 0 0 1-1.477-.265l.246-1.368H7.718a.75.75 0 0 1 0-1.5h1.527l.359-2H7.718a.75.75 0 0 1 0-1.5h2.155l.293-1.633a.75.75 0 0 1 .871-.605"/></g>`), g.Group(children),
	)
}

func HashSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.436 4.131a.75.75 0 0 0-1.477-.262l-.74 4.162H3a.75.75 0 0 0 0 1.5h4.953L6.9 15.47H3a.75.75 0 1 0 0 1.5h3.632l-.692 3.9a.75.75 0 0 0 1.477.262l.739-4.162h5.833l-.692 3.9a.75.75 0 1 0 1.476.262l.74-4.162H21a.75.75 0 0 0 0-1.5h-5.221l1.054-5.938H21a.75.75 0 0 0 0-1.5h-3.9l.692-3.9a.75.75 0 0 0-1.477-.262l-.739 4.162H9.743z"/>`), g.Group(children),
	)
}

func HashSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6zM10.905 8l-1.437 8m4.937-8l-1.437 8m3.314-5.75H7.718m8.564 3.5H7.718"/>`), g.Group(children),
	)
}

func HashSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M10.769 13h1.976l.359-2h-1.976z"/><path d="M9.367 2.25c-1.092 0-1.958 0-2.655.057c-.714.058-1.317.18-1.868.46a4.75 4.75 0 0 0-2.076 2.077c-.281.55-.403 1.154-.461 1.868c-.057.697-.057 1.563-.057 2.655v5.266c0 1.092 0 1.958.057 2.655c.058.714.18 1.317.46 1.869a4.75 4.75 0 0 0 2.077 2.075c.55.281 1.154.403 1.868.461c.697.057 1.563.057 2.655.057h5.266c1.092 0 1.958 0 2.655-.057c.714-.058 1.317-.18 1.869-.46a4.75 4.75 0 0 0 2.075-2.076c.281-.552.403-1.155.461-1.869c.057-.697.057-1.563.057-2.655V9.367c0-1.092 0-1.958-.057-2.655c-.058-.714-.18-1.317-.46-1.868a4.75 4.75 0 0 0-2.076-2.076c-.552-.281-1.155-.403-1.869-.461c-.697-.057-1.563-.057-2.655-.057zm1.67 5.012a.75.75 0 0 1 .606.87L11.397 9.5h1.976l.293-1.633a.75.75 0 0 1 1.477.266L14.897 9.5h1.385a.75.75 0 0 1 0 1.5h-1.654l-.36 2h2.014a.75.75 0 0 1 0 1.5H14l-.293 1.633a.75.75 0 0 1-1.477-.265l.246-1.368H10.5l-.293 1.633a.75.75 0 0 1-1.477-.265l.246-1.368H7.718a.75.75 0 0 1 0-1.5h1.527l.359-2H7.718a.75.75 0 0 1 0-1.5h2.155l.293-1.633a.75.75 0 0 1 .871-.605"/></g>`), g.Group(children),
	)
}

func HashWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83M10.905 8l-1.437 8m4.937-8l-1.437 8m3.314-5.75H7.718m8.564 3.5H7.718"/>`), g.Group(children),
	)
}

func HashWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M10.769 13h1.976l.359-2h-1.976z"/><path d="M13.435 2.075a3.33 3.33 0 0 0-2.87 0c-.394.189-.755.497-1.26.928l-.079.066a2.56 2.56 0 0 1-1.58.655l-.102.008c-.662.053-1.135.09-1.547.236a3.33 3.33 0 0 0-2.03 2.029c-.145.412-.182.885-.235 1.547l-.008.102a2.56 2.56 0 0 1-.655 1.58l-.066.078c-.431.506-.74.867-.928 1.261a3.33 3.33 0 0 0 0 2.87c.189.394.497.755.928 1.26l.066.079c.41.48.604.939.655 1.58l.008.102c.053.662.09 1.135.236 1.547a3.33 3.33 0 0 0 2.029 2.03c.412.145.885.182 1.547.235l.102.008c.629.05 1.09.238 1.58.655l.078.066c.506.431.867.74 1.261.928a3.33 3.33 0 0 0 2.87 0c.394-.189.755-.497 1.26-.928l.079-.066c.48-.41.939-.604 1.58-.655l.102-.008c.662-.053 1.135-.09 1.547-.236a3.33 3.33 0 0 0 2.03-2.029c.145-.412.182-.885.235-1.547l.008-.102c.05-.629.238-1.09.655-1.58l.066-.079c.431-.505.74-.866.928-1.26a3.33 3.33 0 0 0 0-2.87c-.189-.394-.497-.755-.928-1.26l-.066-.079a2.56 2.56 0 0 1-.655-1.58l-.008-.102c-.053-.662-.09-1.135-.236-1.547a3.33 3.33 0 0 0-2.029-2.03c-.412-.145-.885-.182-1.547-.235l-.102-.008a2.56 2.56 0 0 1-1.58-.655l-.079-.066c-.505-.431-.866-.74-1.26-.928m-2.398 5.187a.75.75 0 0 1 .606.87L11.397 9.5h1.976l.293-1.633a.75.75 0 0 1 1.477.266L14.897 9.5h1.385a.75.75 0 0 1 0 1.5h-1.654l-.36 2h2.014a.75.75 0 0 1 0 1.5H14l-.293 1.633a.75.75 0 0 1-1.477-.265l.246-1.368H10.5l-.293 1.633a.75.75 0 0 1-1.477-.265l.246-1.368H7.718a.75.75 0 0 1 0-1.5h1.527l.359-2H7.718a.75.75 0 0 1 0-1.5h2.155l.293-1.633a.75.75 0 0 1 .871-.605"/></g>`), g.Group(children),
	)
}

func Heading(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M7.25 4.5v15m9.5-15v15M7.25 12h9.5"/>`), g.Group(children),
	)
}

func HeadingFive(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3.75 4.5v15m9.5-15v15M3.75 12h9.5m7.25-2.5c-2 .625-4.5 0-4.5 0v3.566h2.778c1.227 0 2.222 1.064 2.222 2.377v1.399c0 3.522-5 3.566-5 0"/>`), g.Group(children),
	)
}

func HeadingFiveSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M3.75 3.75a.75.75 0 0 1 .75.75v6.75h8V4.5a.75.75 0 0 1 1.5 0v15a.75.75 0 0 1-1.5 0v-6.75h-8v6.75a.75.75 0 0 1-1.5 0v-15a.75.75 0 0 1 .75-.75m17.466 5.526a.75.75 0 0 1-.492.94c-1.137.355-2.375.347-3.29.265q-.376-.034-.684-.08v1.915h2.028c1.689 0 2.972 1.448 2.972 3.127v1.399c0 1.07-.386 1.936-1.016 2.532a3.26 3.26 0 0 1-2.23.876a3.23 3.23 0 0 1-2.238-.863c-.632-.597-1.016-1.467-1.016-2.545a.75.75 0 0 1 1.5 0c0 .705.241 1.167.546 1.454c.315.297.749.456 1.2.454a1.77 1.77 0 0 0 1.207-.465c.308-.291.547-.752.547-1.443v-1.4c0-.946-.706-1.626-1.472-1.626H16a.75.75 0 0 1-.75-.75V9.5a.75.75 0 0 1 .931-.728m0 0h.003l.016.005l.072.016q.099.022.286.057c.247.046.599.1 1.009.137c.834.075 1.846.067 2.71-.203a.75.75 0 0 1 .939.492"/>`), g.Group(children),
	)
}

func HeadingFour(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3.75 4.5v15m9.5-15v15M3.75 12h9.5m5.833-2.5c-.833 3.75-3.333 6.875-3.333 6.875h5M19.5 19.5v-5"/>`), g.Group(children),
	)
}

func HeadingFourSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M3.75 3.75a.75.75 0 0 1 .75.75v6.75h8V4.5a.75.75 0 0 1 1.5 0v15a.75.75 0 0 1-1.5 0v-6.75h-8v6.75a.75.75 0 0 1-1.5 0v-15a.75.75 0 0 1 .75-.75m16.066 5.913a.75.75 0 0 0-1.465-.326c-.173.78-.423 1.534-.71 2.238l-2.477 4.332a.75.75 0 0 0 .586 1.218h3V19.5a.75.75 0 0 0 1.5 0v-2.375h.5a.75.75 0 0 0 0-1.5h-.5V14.5a.75.75 0 0 0-1.5 0v1.125h-1.554c.172-.265.36-.568.556-.903c.75-1.287 1.624-3.08 2.064-5.06"/>`), g.Group(children),
	)
}

func HeadingOne(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3.75 4.5v15m9.5-15v15M3.75 12h9.5m3.25-.125l3-2.375v10"/>`), g.Group(children),
	)
}

func HeadingOneSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M3.75 3.75a.75.75 0 0 1 .75.75v6.75h8V4.5a.75.75 0 0 1 1.5 0v15a.75.75 0 0 1-1.5 0v-6.75h-8v6.75a.75.75 0 0 1-1.5 0v-15a.75.75 0 0 1 .75-.75m16.077 5.075a.75.75 0 0 1 .423.675v10a.75.75 0 0 1-1.5 0v-8.45l-1.785 1.413a.75.75 0 1 1-.93-1.176l3-2.375a.75.75 0 0 1 .792-.087"/>`), g.Group(children),
	)
}

func HeadingSix(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3.75 4.5v15m9.5-15v15M3.75 12h9.5M20 9.5h-1c-1.657 0-3 1.679-3 3.75v3.125m0 0c0 1.726 1.12 3.125 2.5 3.125s2.5-1.4 2.5-3.125s-1.12-2.5-2.5-2.5s-2.5.774-2.5 2.5"/>`), g.Group(children),
	)
}

func HeadingSixSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M3.75 3.75a.75.75 0 0 1 .75.75v6.75h8V4.5a.75.75 0 0 1 1.5 0v15a.75.75 0 0 1-1.5 0v-6.75h-8v6.75a.75.75 0 0 1-1.5 0v-15a.75.75 0 0 1 .75-.75m11.5 9.5c0-2.32 1.531-4.5 3.75-4.5h1a.75.75 0 0 1 0 1.5h-1c-1.095 0-2.25 1.178-2.25 3v.298c.53-.296 1.14-.423 1.75-.423c.824 0 1.646.231 2.27.797c.639.576.98 1.42.98 2.453c0 1.975-1.308 3.875-3.25 3.875s-3.25-1.9-3.25-3.875zm1.5 3.125c0 1.477.931 2.375 1.75 2.375s1.75-.898 1.75-2.375c0-.692-.218-1.1-.485-1.341c-.28-.253-.708-.409-1.265-.409s-.985.156-1.265.409c-.267.242-.485.649-.485 1.341"/>`), g.Group(children),
	)
}

func HeadingSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M7.25 3.75A.75.75 0 0 1 8 4.5v6.75h8V4.5a.75.75 0 0 1 1.5 0v15a.75.75 0 0 1-1.5 0v-6.75H8v6.75a.75.75 0 0 1-1.5 0v-15a.75.75 0 0 1 .75-.75"/>`), g.Group(children),
	)
}

func HeadingThree(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3.75 4.5v15m9.5-15v15M3.75 12h9.5M16 9.5h5l-3.5 4.507c2 0 3.5 1.001 3.5 3.004c0 2.744-3.408 3.206-5 1.452"/>`), g.Group(children),
	)
}

func HeadingThreeSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M3.75 3.75a.75.75 0 0 1 .75.75v6.75h8V4.5a.75.75 0 0 1 1.5 0v15a.75.75 0 0 1-1.5 0v-6.75h-8v6.75a.75.75 0 0 1-1.5 0v-15a.75.75 0 0 1 .75-.75m11.5 5.75a.75.75 0 0 1 .75-.75h5a.75.75 0 0 1 .592 1.21l-2.687 3.461c.58.145 1.114.391 1.564.752c.818.655 1.281 1.63 1.281 2.838c0 .85-.268 1.57-.738 2.12c-.465.541-1.091.874-1.749 1.024c-1.294.294-2.827-.095-3.818-1.187a.75.75 0 1 1 1.11-1.009c.6.661 1.568.917 2.375.733c.394-.09.719-.277.943-.538c.219-.255.377-.621.377-1.143c0-.794-.287-1.322-.719-1.668c-.454-.364-1.146-.586-2.031-.586a.75.75 0 0 1-.592-1.21l2.56-3.297H16a.75.75 0 0 1-.75-.75"/>`), g.Group(children),
	)
}

func HeadingTwo(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M16 11.939c0-3.252 5-3.252 5 0c0 2.873-5 5.007-5 7.561h5M3.75 4.5v15m9.5-15v15M3.75 12h9.5"/>`), g.Group(children),
	)
}

func HeadingTwoSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M3.75 3.75a.75.75 0 0 1 .75.75v6.75h8V4.5a.75.75 0 0 1 1.5 0v15a.75.75 0 0 1-1.5 0v-6.75h-8v6.75a.75.75 0 0 1-1.5 0v-15a.75.75 0 0 1 .75-.75m13.523 6.926c-.3.26-.523.66-.523 1.263a.75.75 0 0 1-1.5 0c0-1.023.401-1.842 1.04-2.396c.623-.54 1.43-.793 2.21-.793s1.587.253 2.21.793c.639.554 1.04 1.373 1.04 2.396c0 .942-.41 1.769-.925 2.476c-.513.704-1.184 1.363-1.803 1.963l-.096.093c-.601.583-1.145 1.11-1.552 1.634a4 4 0 0 0-.42.645H21a.75.75 0 0 1 0 1.5h-5a.75.75 0 0 1-.75-.75c0-.885.432-1.661.939-2.315c.475-.612 1.091-1.209 1.668-1.767l.121-.117c.631-.613 1.21-1.185 1.634-1.769c.423-.581.638-1.098.638-1.593c0-.603-.224-1.003-.523-1.263c-.314-.272-.757-.426-1.227-.426s-.913.154-1.227.426"/>`), g.Group(children),
	)
}

func Headphones(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M21 17v-5a9 9 0 1 0-18 0v5"/><path d="M16 14.958c0-.511 0-.767.059-.97c.135-.468.49-.824.93-.934c1.272-.318 1.53.864 2.443 1.232l.069.028c.992.417 1.497 1.478 1.495 2.554v.357c-.003.95-.51 1.835-1.353 2.272c-.939.485-1.252 1.752-2.615 1.46c-.437-.094-.797-.429-.95-.883C16 19.843 16 19.54 16 18.938zm-8 4.084c0 .511 0 .766-.059.97c-.135.468-.49.824-.93.934c-1.272.318-1.53-.865-2.443-1.232l-.062-.025c-.998-.418-1.504-1.48-1.502-2.557v-.364c.003-.946.509-1.828 1.353-2.265c.939-.485 1.252-1.752 2.615-1.46c.437.094.797.429.95.883c.078.231.078.533.078 1.136z"/></g>`), g.Group(children),
	)
}

func HeadphonesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12 2.25A9.75 9.75 0 0 0 2.25 12v5q0 .04.004.08v.05c-.003 1.278.602 2.682 1.963 3.25l.071.03c.11.044.22.12.362.25c.07.064.138.132.22.213l.008.008c.08.08.175.175.277.265c.204.183.474.388.83.506c.37.122.77.131 1.208.022c.723-.18 1.266-.752 1.469-1.454c.089-.309.089-.668.088-1.084v-4.094c0-.285 0-.528-.01-.728a2.3 2.3 0 0 0-.107-.627c-.23-.683-.786-1.223-1.504-1.377a2.25 2.25 0 0 0-1.264.065c-.37.133-.652.354-.87.558c-.12.11-.269.267-.391.396l-.164.17a1.8 1.8 0 0 1-.427.338q-.136.07-.263.152V12a8.25 8.25 0 1 1 16.5 0v1.864a3 3 0 0 0-.538-.274a1.2 1.2 0 0 1-.362-.25c-.07-.064-.138-.132-.22-.213l-.008-.008a7 7 0 0 0-.277-.265a2.4 2.4 0 0 0-.83-.506c-.37-.122-.77-.131-1.208-.022c-.723.18-1.266.752-1.469 1.454c-.089.309-.088.668-.088 1.085v4.093c0 .285 0 .528.01.728c.012.208.037.418.107.627c.23.683.786 1.223 1.504 1.377c.463.1.883.073 1.264-.065c.37-.133.652-.354.87-.558c.12-.11.269-.267.391-.395c.065-.069.123-.13.164-.17a1.8 1.8 0 0 1 .427-.34c1.11-.573 1.755-1.724 1.758-2.936v-.143L21.75 17v-5A9.75 9.75 0 0 0 12 2.25"/>`), g.Group(children),
	)
}

func Heart(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M7.75 3.5C5.127 3.5 3 5.76 3 8.547C3 14.125 12 20.5 12 20.5s9-6.375 9-11.953C21 5.094 18.873 3.5 16.25 3.5c-1.86 0-3.47 1.136-4.25 2.79c-.78-1.654-2.39-2.79-4.25-2.79"/>`), g.Group(children),
	)
}

func HeartBroken(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M7.75 3.5C5.127 3.5 3 5.76 3 8.547C3 14.125 12 20.5 12 20.5s9-6.375 9-11.953C21 5.094 18.873 3.5 16.25 3.5c-1.86 0-3.47 1.136-4.25 2.79c-.78-1.654-2.39-2.79-4.25-2.79"/><path d="m12.15 6l-2 4l4 1l-2 3"/></g>`), g.Group(children),
	)
}

func HeartBrokenSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12 4.867C10.998 3.583 9.474 2.75 7.75 2.75c-3.08 0-5.5 2.639-5.5 5.797c0 1.588.637 3.171 1.516 4.612c.884 1.448 2.051 2.813 3.199 3.982a38.5 38.5 0 0 0 4.6 3.97l.002.001a.75.75 0 0 0 .867 0l.008-.006l.021-.015l.08-.058A36 36 0 0 0 13.879 20a39 39 0 0 0 3.156-2.858c1.148-1.169 2.315-2.534 3.199-3.982c.88-1.44 1.516-3.024 1.516-4.612c0-1.885-.585-3.358-1.62-4.358c-1.03-.994-2.42-1.439-3.88-1.439c-.513 0-1.007.074-1.476.21l-1.947 3.362l-.006.013L11.239 9.5l3.093.774a.75.75 0 0 1 .442 1.143l-2 3a.75.75 0 1 1-1.248-.832l1.41-2.114l-2.968-.742a.75.75 0 0 1-.489-1.063L11.161 6.3z"/>`), g.Group(children),
	)
}

func HeartCheck(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M7.75 3.5C5.127 3.5 3 5.76 3 8.547C3 14.125 12 20.5 12 20.5s9-6.375 9-11.953C21 5.094 18.873 3.5 16.25 3.5c-1.86 0-3.47 1.136-4.25 2.79c-.78-1.654-2.39-2.79-4.25-2.79"/><path d="m10.25 12.492l1.039 1.181c.095.109.267.1.351-.016l2.11-2.907"/></g>`), g.Group(children),
	)
}

func HeartCheckSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="m12.434 21.112l.008-.006l.021-.015l.08-.058A36 36 0 0 0 13.879 20a39 39 0 0 0 3.156-2.858c1.148-1.169 2.315-2.534 3.199-3.982c.88-1.44 1.516-3.024 1.516-4.612c0-1.885-.585-3.358-1.62-4.358c-1.03-.994-2.42-1.439-3.88-1.439c-1.725 0-3.248.833-4.25 2.117C10.998 3.583 9.474 2.75 7.75 2.75c-3.08 0-5.5 2.639-5.5 5.797c0 1.588.637 3.171 1.516 4.612c.884 1.448 2.051 2.813 3.199 3.982a38.5 38.5 0 0 0 4.492 3.892l.08.058l.021.015l.008.006a.75.75 0 0 0 .867 0m1.757-10.969a.75.75 0 0 1 .166 1.047l-2.11 2.908a.976.976 0 0 1-1.521.07l-1.04-1.18a.75.75 0 0 1 1.127-.991l.606.689l1.724-2.376a.75.75 0 0 1 1.047-.167"/>`), g.Group(children),
	)
}

func HeartCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/><path d="M10.291 9.5a1.78 1.78 0 0 0-1.781 1.781c0 1.969 3.375 4.219 3.375 4.219s3.375-2.25 3.375-4.219c0-1.219-.797-1.781-1.781-1.781c-.698 0-1.302.4-1.594.985a1.78 1.78 0 0 0-1.594-.985"/></g>`), g.Group(children),
	)
}

func HeartCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12m10.051 4.124l.005-.003l.009-.006l.032-.022l.117-.081a15 15 0 0 0 1.628-1.341c.444-.427.91-.938 1.27-1.492c.354-.545.648-1.2.648-1.898c0-.782-.262-1.443-.767-1.902c-.494-.449-1.136-.629-1.764-.629a2.52 2.52 0 0 0-1.594.565A2.531 2.531 0 0 0 7.76 11.28c0 .698.294 1.353.648 1.898c.36.554.826 1.065 1.27 1.491a15 15 0 0 0 1.745 1.423l.032.022l.01.006l.004.003a.75.75 0 0 0 .832 0"/>`), g.Group(children),
	)
}

func HeartDiamond(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M2.707 10.295a2.41 2.41 0 0 0 0 3.41l7.588 7.588a2.41 2.41 0 0 0 3.41 0l7.588-7.588a2.41 2.41 0 0 0 0-3.41l-7.588-7.588a2.41 2.41 0 0 0-3.41 0z"/><path d="M10.291 9.5a1.78 1.78 0 0 0-1.781 1.781c0 1.969 3.375 4.219 3.375 4.219s3.375-2.25 3.375-4.219c0-1.219-.797-1.781-1.781-1.781c-.698 0-1.302.4-1.594.985a1.78 1.78 0 0 0-1.594-.985"/></g>`), g.Group(children),
	)
}

func HeartDiamondSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.79 1.49a3.2 3.2 0 0 0-1.025.686L2.177 9.765a3.16 3.16 0 0 0 0 4.47l7.588 7.588a3.16 3.16 0 0 0 4.47 0l7.588-7.588a3.16 3.16 0 0 0 0-4.47l-7.588-7.588a3.16 3.16 0 0 0-3.445-.686m1.511 14.634a.75.75 0 0 1-.832 0l-.005-.003l-.009-.006l-.032-.022a14 14 0 0 1-.52-.379a15 15 0 0 1-1.224-1.044c-.445-.426-.911-.937-1.27-1.49c-.355-.546-.649-1.2-.649-1.899a2.531 2.531 0 0 1 4.125-1.966a2.52 2.52 0 0 1 1.594-.565c.628 0 1.27.18 1.764.629c.505.459.767 1.12.767 1.902c0 .698-.295 1.353-.648 1.898c-.36.554-.826 1.065-1.27 1.491a15 15 0 0 1-1.745 1.423l-.032.022l-.01.006z"/>`), g.Group(children),
	)
}

func HeartDot(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M7.75 3.5C5.127 3.5 3 5.76 3 8.547C3 14.125 12 20.5 12 20.5s9-6.375 9-11.953C21 5.094 18.873 3.5 16.25 3.5c-1.86 0-3.47 1.136-4.25 2.79c-.78-1.654-2.39-2.79-4.25-2.79"/><path d="M12 14a2 2 0 1 0 0-4a2 2 0 0 0 0 4"/></g>`), g.Group(children),
	)
}

func HeartDotSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M10.75 12a1.25 1.25 0 1 1 2.5 0a1.25 1.25 0 0 1-2.5 0"/><path d="M12.434 21.112a.75.75 0 0 1-.868 0l-.008-.006l-.021-.015l-.08-.058A36 36 0 0 1 10.121 20a39 39 0 0 1-3.156-2.858c-1.148-1.169-2.315-2.534-3.199-3.982c-.88-1.44-1.516-3.024-1.516-4.612c0-3.158 2.42-5.797 5.5-5.797c1.724 0 3.248.833 4.25 2.117c1.002-1.284 2.525-2.117 4.25-2.117c1.46 0 2.85.445 3.88 1.439c1.035 1 1.62 2.473 1.62 4.358c0 1.588-.637 3.171-1.516 4.612c-.884 1.448-2.051 2.813-3.199 3.982a38.5 38.5 0 0 1-4.492 3.892l-.047.034l-.033.024l-.021.015zM12 9.25a2.75 2.75 0 1 0 0 5.5a2.75 2.75 0 0 0 0-5.5"/></g>`), g.Group(children),
	)
}

func HeartHexagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M20.5 15.8V8.2a1.91 1.91 0 0 0-.944-1.645l-6.612-3.8a1.88 1.88 0 0 0-1.888 0l-6.612 3.8A1.9 1.9 0 0 0 3.5 8.2v7.602a1.91 1.91 0 0 0 .944 1.644l6.612 3.8a1.88 1.88 0 0 0 1.888 0l6.612-3.8A1.9 1.9 0 0 0 20.5 15.8"/><path d="M10.291 9.5a1.78 1.78 0 0 0-1.781 1.781c0 1.969 3.375 4.219 3.375 4.219s3.375-2.25 3.375-4.219c0-1.219-.797-1.781-1.781-1.781c-.698 0-1.302.4-1.594.985a1.78 1.78 0 0 0-1.594-.985"/></g>`), g.Group(children),
	)
}

func HeartHexagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.68 2.105a2.63 2.63 0 0 1 2.64 0l.001.001l6.611 3.8A2.65 2.65 0 0 1 21.25 8.2v7.603a2.66 2.66 0 0 1-1.318 2.291l-.003.002l-6.608 3.799h-.002a2.63 2.63 0 0 1-2.639 0h-.001l-6.608-3.8h-.003A2.64 2.64 0 0 1 2.75 15.8V8.198a2.66 2.66 0 0 1 1.318-2.291l.003-.002zm1.621 14.019l.005-.003l.009-.006l.032-.022l.117-.081a15 15 0 0 0 1.628-1.341c.444-.427.91-.938 1.27-1.492c.354-.545.648-1.2.648-1.898c0-.782-.262-1.443-.767-1.902c-.494-.449-1.136-.629-1.764-.629a2.52 2.52 0 0 0-1.594.565A2.531 2.531 0 0 0 7.76 11.28c0 .698.294 1.353.648 1.898c.36.554.826 1.065 1.27 1.491a15 15 0 0 0 1.745 1.423l.032.022l.01.006l.004.003a.75.75 0 0 0 .832 0"/>`), g.Group(children),
	)
}

func HeartHome(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M7.75 3.5C5.127 3.5 3 5.76 3 8.547C3 14.125 12 20.5 12 20.5s9-6.375 9-11.953C21 5.094 18.873 3.5 16.25 3.5c-1.86 0-3.47 1.136-4.25 2.79c-.78-1.654-2.39-2.79-4.25-2.79"/><path d="M10.75 14.5a1 1 0 0 1-1-1v-2.36L12 9.5l2.25 1.64v2.36a1 1 0 0 1-1 1z"/></g>`), g.Group(children),
	)
}

func HeartHomeSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M10.5 13.5v-1.978l1.5-1.094l1.5 1.094V13.5a.25.25 0 0 1-.25.25h-2.5a.25.25 0 0 1-.25-.25"/><path d="M12.434 21.112a.75.75 0 0 1-.868 0l-.008-.006l-.021-.015l-.08-.058A36 36 0 0 1 10.121 20a39 39 0 0 1-3.156-2.858c-1.148-1.169-2.315-2.534-3.199-3.982c-.88-1.44-1.516-3.024-1.516-4.612c0-3.158 2.42-5.797 5.5-5.797c1.724 0 3.248.833 4.25 2.117c1.002-1.284 2.525-2.117 4.25-2.117c1.46 0 2.85.445 3.88 1.439c1.035 1 1.62 2.473 1.62 4.358c0 1.588-.637 3.171-1.516 4.612c-.884 1.448-2.051 2.813-3.199 3.982a38.5 38.5 0 0 1-4.492 3.892l-.047.034l-.033.024l-.021.015zm2.258-10.578l-2.25-1.64a.75.75 0 0 0-.884 0l-2.25 1.64A.75.75 0 0 0 9 11.14v2.36c0 .966.784 1.75 1.75 1.75h2.5A1.75 1.75 0 0 0 15 13.5v-2.36a.75.75 0 0 0-.308-.606"/></g>`), g.Group(children),
	)
}

func HeartMinus(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M7.75 3.5C5.127 3.5 3 5.76 3 8.547C3 14.125 12 20.5 12 20.5s9-6.375 9-11.953C21 5.094 18.873 3.5 16.25 3.5c-1.86 0-3.47 1.136-4.25 2.79c-.78-1.654-2.39-2.79-4.25-2.79M10 12h4"/>`), g.Group(children),
	)
}

func HeartMinusSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12.434 21.112a.75.75 0 0 1-.868 0l-.008-.006l-.021-.015l-.08-.058A36 36 0 0 1 10.121 20a39 39 0 0 1-3.156-2.858c-1.148-1.169-2.315-2.534-3.199-3.982c-.88-1.44-1.516-3.024-1.516-4.612c0-3.158 2.42-5.797 5.5-5.797c1.724 0 3.248.833 4.25 2.117c1.002-1.284 2.525-2.117 4.25-2.117c1.46 0 2.85.445 3.88 1.439c1.035 1 1.62 2.473 1.62 4.358c0 1.588-.637 3.171-1.516 4.612c-.884 1.448-2.051 2.813-3.199 3.982a38.5 38.5 0 0 1-4.492 3.892l-.08.058l-.021.015zM10 11.25a.75.75 0 0 0 0 1.5h4a.75.75 0 0 0 0-1.5z"/>`), g.Group(children),
	)
}

func HeartOctagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M7.805 3.469C8.16 3.115 8.451 3 8.937 3h6.126c.486 0 .778.115 1.132.469l4.336 4.336c.354.354.469.646.469 1.132v6.126c0 .5-.125.788-.469 1.132l-4.336 4.336c-.354.354-.646.469-1.132.469H8.937c-.5 0-.788-.125-1.132-.469L3.47 16.195c-.355-.355-.47-.646-.47-1.132V8.937c0-.5.125-.788.469-1.132z"/><path d="M10.291 9.5a1.78 1.78 0 0 0-1.781 1.781c0 1.969 3.375 4.219 3.375 4.219s3.375-2.25 3.375-4.219c0-1.219-.797-1.781-1.781-1.781c-.698 0-1.302.4-1.594.985a1.78 1.78 0 0 0-1.594-.985"/></g>`), g.Group(children),
	)
}

func HeartOctagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.037 2.408a2.3 2.3 0 0 1 .9-.158h6.126c.302 0 .602.036.9.158s.54.31.762.53l4.337 4.337c.22.221.408.463.53.762c.123.298.158.598.158.9v6.126c0 .313-.039.616-.163.914a2.3 2.3 0 0 1-.525.748l-4.337 4.337a2.3 2.3 0 0 1-.762.53a2.3 2.3 0 0 1-.9.158H8.937c-.313 0-.616-.039-.914-.163a2.3 2.3 0 0 1-.748-.525l-4.337-4.337a2.3 2.3 0 0 1-.53-.762a2.3 2.3 0 0 1-.158-.9V8.937c0-.313.039-.616.163-.914a2.3 2.3 0 0 1 .525-.748l4.337-4.337c.221-.22.463-.408.762-.53M12.3 16.124l.005-.003l.009-.006l.032-.022l.117-.081a15 15 0 0 0 1.628-1.341c.444-.427.91-.938 1.27-1.492c.354-.545.648-1.2.648-1.898c0-.782-.262-1.443-.767-1.902c-.494-.449-1.136-.629-1.764-.629a2.52 2.52 0 0 0-1.594.565A2.531 2.531 0 0 0 7.76 11.28c0 .698.294 1.353.648 1.898c.36.554.826 1.065 1.27 1.491a15 15 0 0 0 1.745 1.423l.032.022l.01.006l.004.003a.75.75 0 0 0 .832 0"/>`), g.Group(children),
	)
}

func HeartPlus(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M7.75 3.5C5.127 3.5 3 5.76 3 8.547C3 14.125 12 20.5 12 20.5s9-6.375 9-11.953C21 5.094 18.873 3.5 16.25 3.5c-1.86 0-3.47 1.136-4.25 2.79c-.78-1.654-2.39-2.79-4.25-2.79M10 12h4m-2-2v4"/>`), g.Group(children),
	)
}

func HeartPlusSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="m12.434 21.112l.008-.006l.021-.015l.08-.058A36 36 0 0 0 13.879 20a39 39 0 0 0 3.156-2.858c1.148-1.169 2.315-2.534 3.199-3.982c.88-1.44 1.516-3.024 1.516-4.612c0-1.885-.585-3.358-1.62-4.358c-1.03-.994-2.42-1.439-3.88-1.439c-1.725 0-3.248.833-4.25 2.117C10.998 3.583 9.474 2.75 7.75 2.75c-3.08 0-5.5 2.639-5.5 5.797c0 1.588.637 3.171 1.516 4.612c.884 1.448 2.051 2.813 3.199 3.982a38.5 38.5 0 0 0 4.492 3.892l.08.058l.021.015l.008.006a.75.75 0 0 0 .867 0M12 9.25a.75.75 0 0 1 .75.75v1.25H14a.75.75 0 0 1 0 1.5h-1.25V14a.75.75 0 0 1-1.5 0v-1.25H10a.75.75 0 0 1 0-1.5h1.25V10a.75.75 0 0 1 .75-.75"/>`), g.Group(children),
	)
}

func HeartSlash(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M7.75 3.5C5.127 3.5 3 5.76 3 8.547C3 14.125 12 20.5 12 20.5s9-6.375 9-11.953C21 5.094 18.873 3.5 16.25 3.5c-1.86 0-3.47 1.136-4.25 2.79c-.78-1.654-2.39-2.79-4.25-2.79M21 3L3 21"/>`), g.Group(children),
	)
}

func HeartSlashSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12.434 21.112a.75.75 0 0 1-.868 0l-.008-.006l-.021-.015l-.08-.058A36 36 0 0 1 10.121 20c-.74-.6-1.693-1.418-2.678-2.381L3.53 21.53a.75.75 0 0 1-1.06-1.06l3.925-3.925c-.956-1.027-1.891-2.178-2.629-3.386c-.88-1.44-1.516-3.024-1.516-4.612c0-3.158 2.42-5.797 5.5-5.797c1.724 0 3.248.833 4.25 2.117c1.002-1.284 2.525-2.117 4.25-2.117c1.12 0 2.2.262 3.106.833L20.47 2.47a.75.75 0 1 1 1.06 1.06l-1.043 1.044c.812.979 1.263 2.317 1.263 3.973c0 1.588-.637 3.171-1.516 4.612c-.884 1.448-2.051 2.813-3.199 3.982a38.5 38.5 0 0 1-4.492 3.892l-.08.058l-.021.015z"/>`), g.Group(children),
	)
}

func HeartSnooze(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M7.75 3.5C5.127 3.5 3 5.76 3 8.547C3 14.125 12 20.5 12 20.5s9-6.375 9-11.953C21 5.094 18.873 3.5 16.25 3.5c-1.86 0-3.47 1.136-4.25 2.79c-.78-1.654-2.39-2.79-4.25-2.79"/><path d="M10.75 10.5h2.5l-2.5 4h2.5"/></g>`), g.Group(children),
	)
}

func HeartSnoozeSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12.434 21.112a.75.75 0 0 1-.868 0l-.008-.006l-.021-.015l-.08-.058A36 36 0 0 1 10.121 20a39 39 0 0 1-3.156-2.858c-1.148-1.169-2.315-2.534-3.199-3.982c-.88-1.44-1.516-3.024-1.516-4.612c0-3.158 2.42-5.797 5.5-5.797c1.724 0 3.248.833 4.25 2.117c1.002-1.284 2.525-2.117 4.25-2.117c1.46 0 2.85.445 3.88 1.439c1.035 1 1.62 2.473 1.62 4.358c0 1.588-.637 3.171-1.516 4.612c-.884 1.448-2.051 2.813-3.199 3.982a38.5 38.5 0 0 1-4.492 3.892l-.047.034l-.033.024l-.021.015zM10.75 9.75a.75.75 0 0 0 0 1.5h1.147l-1.783 2.852a.75.75 0 0 0 .636 1.148h2.5a.75.75 0 0 0 0-1.5h-1.147l1.783-2.852a.75.75 0 0 0-.636-1.148z"/>`), g.Group(children),
	)
}

func HeartSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M11.566 21.112L12 20.5za.75.75 0 0 0 .867 0L12 20.5l.434.612l.008-.006l.021-.015l.08-.058A36 36 0 0 0 13.879 20a39 39 0 0 0 3.156-2.858c1.148-1.169 2.315-2.534 3.199-3.982c.88-1.44 1.516-3.024 1.516-4.612c0-1.885-.585-3.358-1.62-4.358c-1.03-.994-2.42-1.439-3.88-1.439c-1.725 0-3.248.833-4.25 2.117C10.998 3.583 9.474 2.75 7.75 2.75c-3.08 0-5.5 2.639-5.5 5.797c0 1.588.637 3.171 1.516 4.612c.884 1.448 2.051 2.813 3.199 3.982a38.5 38.5 0 0 0 4.492 3.892l.08.058l.021.015z"/>`), g.Group(children),
	)
}

func HeartSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/><path d="M10.291 9.5a1.78 1.78 0 0 0-1.781 1.781c0 1.969 3.375 4.219 3.375 4.219s3.375-2.25 3.375-4.219c0-1.219-.797-1.781-1.781-1.781c-.698 0-1.302.4-1.594.985a1.78 1.78 0 0 0-1.594-.985"/></g>`), g.Group(children),
	)
}

func HeartSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057m2.934 13.874l.005-.003l.009-.006l.032-.022l.117-.081a15 15 0 0 0 1.628-1.341c.444-.427.91-.938 1.27-1.492c.354-.545.648-1.2.648-1.898c0-.782-.262-1.443-.767-1.902c-.494-.449-1.136-.629-1.764-.629a2.52 2.52 0 0 0-1.594.565A2.531 2.531 0 0 0 7.76 11.28c0 .698.294 1.353.648 1.898c.36.554.826 1.065 1.27 1.491a15 15 0 0 0 1.745 1.423l.032.022l.01.006l.004.003a.75.75 0 0 0 .832 0"/>`), g.Group(children),
	)
}

func HeartUser(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M7.75 3.5C5.127 3.5 3 5.76 3 8.547C3 14.125 12 20.5 12 20.5s9-6.375 9-11.953C21 5.094 18.873 3.5 16.25 3.5c-1.86 0-3.47 1.136-4.25 2.79c-.78-1.654-2.39-2.79-4.25-2.79"/><path d="M15 15.5c0-3.861-6-3.861-6 0"/><path d="M12 12.5a2 2 0 1 0 0-4a2 2 0 0 0 0 4"/></g>`), g.Group(children),
	)
}

func HeartUserSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M10.75 10.5a1.25 1.25 0 1 1 2.5 0a1.25 1.25 0 0 1-2.5 0"/><path d="M12.434 21.112a.75.75 0 0 1-.868 0l-.008-.006l-.021-.015l-.08-.058A36 36 0 0 1 10.121 20a39 39 0 0 1-3.156-2.858c-1.148-1.169-2.315-2.534-3.199-3.982c-.88-1.44-1.516-3.024-1.516-4.612c0-3.158 2.42-5.797 5.5-5.797c1.724 0 3.248.833 4.25 2.117c1.002-1.284 2.525-2.117 4.25-2.117c1.46 0 2.85.445 3.88 1.439c1.035 1 1.62 2.473 1.62 4.358c0 1.588-.637 3.171-1.516 4.612c-.884 1.448-2.051 2.813-3.199 3.982a38.5 38.5 0 0 1-4.492 3.892l-.047.034l-.033.024l-.021.015zM12 7.75a2.75 2.75 0 0 0-2.01 4.627a3.5 3.5 0 0 0-.54.382c-.734.629-1.2 1.563-1.2 2.741a.75.75 0 0 0 1.5 0c0-.752.284-1.266.676-1.603c.408-.35.977-.543 1.574-.543s1.166.193 1.574.543c.392.337.676.85.676 1.603a.75.75 0 0 0 1.5 0c0-1.178-.466-2.112-1.2-2.741a3.6 3.6 0 0 0-.54-.382A2.75 2.75 0 0 0 12 7.75"/></g>`), g.Group(children),
	)
}

func HeartWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83"/><path d="M10.291 9.5a1.78 1.78 0 0 0-1.781 1.781c0 1.969 3.375 4.219 3.375 4.219s3.375-2.25 3.375-4.219c0-1.219-.797-1.781-1.781-1.781c-.698 0-1.302.4-1.594.985a1.78 1.78 0 0 0-1.594-.985"/></g>`), g.Group(children),
	)
}

func HeartWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.565 2.075a3.33 3.33 0 0 1 2.87 0c.394.189.755.497 1.26.928l.079.066c.48.41.939.604 1.58.655l.102.008c.662.053 1.135.09 1.547.236a3.33 3.33 0 0 1 2.03 2.029c.145.412.182.885.235 1.547l.008.102c.051.641.246 1.1.655 1.58l.066.078c.431.506.74.867.928 1.261a3.33 3.33 0 0 1 0 2.87c-.189.394-.497.755-.928 1.26l-.066.079c-.418.49-.605.951-.655 1.58l-.008.102c-.053.662-.09 1.135-.236 1.547a3.33 3.33 0 0 1-2.029 2.03c-.412.145-.885.182-1.547.235l-.102.008c-.641.051-1.1.246-1.58.655l-.079.066c-.505.431-.866.74-1.26.928a3.33 3.33 0 0 1-2.87 0c-.394-.189-.755-.497-1.26-.928l-.079-.066a2.56 2.56 0 0 0-1.58-.655l-.102-.008c-.662-.053-1.135-.09-1.547-.236a3.33 3.33 0 0 1-2.03-2.029c-.145-.412-.182-.885-.235-1.547l-.008-.102a2.56 2.56 0 0 0-.655-1.58l-.066-.079c-.431-.505-.74-.866-.928-1.26a3.33 3.33 0 0 1 0-2.87c.189-.394.497-.755.928-1.26l.066-.079a2.56 2.56 0 0 0 .655-1.58l.008-.102c.053-.662.09-1.135.236-1.547a3.33 3.33 0 0 1 2.029-2.03c.412-.145.885-.182 1.547-.235l.102-.008a2.56 2.56 0 0 0 1.58-.655l.078-.066c.506-.431.867-.74 1.261-.928m1.736 14.049l.005-.003l.009-.006l.032-.022l.117-.081a15 15 0 0 0 1.628-1.341c.444-.427.91-.938 1.27-1.492c.354-.545.648-1.2.648-1.898c0-.782-.262-1.443-.767-1.902c-.494-.449-1.136-.629-1.764-.629a2.52 2.52 0 0 0-1.594.565A2.531 2.531 0 0 0 7.76 11.28c0 .698.294 1.353.648 1.898c.36.554.826 1.065 1.27 1.491a15 15 0 0 0 1.745 1.423l.032.022l.01.006l.004.003a.75.75 0 0 0 .832 0"/>`), g.Group(children),
	)
}

func HeartX(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M7.75 3.5C5.127 3.5 3 5.76 3 8.547C3 14.125 12 20.5 12 20.5s9-6.375 9-11.953C21 5.094 18.873 3.5 16.25 3.5c-1.86 0-3.47 1.136-4.25 2.79c-.78-1.654-2.39-2.79-4.25-2.79M10.5 11l2.828 2.828m0-2.828L10.5 13.828"/>`), g.Group(children),
	)
}

func HeartXSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="m12.434 21.112l.008-.006l.021-.015l.08-.058A36 36 0 0 0 13.879 20a39 39 0 0 0 3.156-2.858c1.148-1.169 2.315-2.534 3.199-3.982c.88-1.44 1.516-3.024 1.516-4.612c0-1.885-.585-3.358-1.62-4.358c-1.03-.994-2.42-1.439-3.88-1.439c-1.725 0-3.248.833-4.25 2.117C10.998 3.583 9.474 2.75 7.75 2.75c-3.08 0-5.5 2.639-5.5 5.797c0 1.588.637 3.171 1.516 4.612c.884 1.448 2.051 2.813 3.199 3.982a38.5 38.5 0 0 0 4.492 3.892l.08.058l.021.015l.008.006a.75.75 0 0 0 .867 0M9.97 10.47a.75.75 0 0 1 1.06 0l.884.884l.884-.884a.75.75 0 0 1 1.06 1.06l-.883.884l.884.884a.75.75 0 0 1-1.06 1.06l-.885-.883l-.884.884a.75.75 0 1 1-1.06-1.06l.884-.885l-.884-.884a.75.75 0 0 1 0-1.06"/>`), g.Group(children),
	)
}

func Hexagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M20.5 15.8V8.2a1.91 1.91 0 0 0-.944-1.645l-6.612-3.8a1.88 1.88 0 0 0-1.888 0l-6.612 3.8A1.9 1.9 0 0 0 3.5 8.2v7.602a1.91 1.91 0 0 0 .944 1.644l6.612 3.8a1.88 1.88 0 0 0 1.888 0l6.612-3.8A1.9 1.9 0 0 0 20.5 15.8"/>`), g.Group(children),
	)
}

func HexagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12 1.75a2.63 2.63 0 0 0-1.32.355l-6.61 3.8l-.002.002A2.65 2.65 0 0 0 2.75 8.198v7.603a2.64 2.64 0 0 0 1.318 2.292l.003.002l6.608 3.799h.002a2.63 2.63 0 0 0 2.639 0h.001l6.608-3.8h.003A2.65 2.65 0 0 0 21.25 15.8V8.2a2.65 2.65 0 0 0-1.318-2.292l-6.61-3.8l-.002-.002A2.63 2.63 0 0 0 12 1.75"/>`), g.Group(children),
	)
}

func Home(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M6.133 21C4.955 21 4 20.02 4 18.81v-8.802c0-.665.295-1.295.8-1.71l5.867-4.818a2.09 2.09 0 0 1 2.666 0l5.866 4.818c.506.415.801 1.045.801 1.71v8.802c0 1.21-.955 2.19-2.133 2.19z"/><path d="M9.5 21v-5.5a2 2 0 0 1 2-2h1a2 2 0 0 1 2 2V21"/></g>`), g.Group(children),
	)
}

func HomeCheck(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="m9.68 13.323l1.379 1.575a.3.3 0 0 0 .466-.022l2.8-3.876"/><path d="M6.133 21C4.955 21 4 20.02 4 18.81v-8.802c0-.665.295-1.295.8-1.71l5.867-4.818a2.09 2.09 0 0 1 2.666 0l5.866 4.818c.506.415.801 1.045.801 1.71v8.802c0 1.21-.955 2.19-2.133 2.19z"/></g>`), g.Group(children),
	)
}

func HomeCheckSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.191 2.9L4.325 7.718a2.96 2.96 0 0 0-1.075 2.29v8.802c0 1.605 1.273 2.94 2.883 2.94h11.734c1.61 0 2.883-1.335 2.883-2.94v-8.802a2.96 2.96 0 0 0-1.075-2.29L13.81 2.9a2.84 2.84 0 0 0-3.618 0m4.573 7.492a.75.75 0 0 1 .17 1.047l-2.8 3.876a1.05 1.05 0 0 1-1.64.077l-1.378-1.576a.75.75 0 1 1 1.129-.987l1.005 1.148l2.467-3.416a.75.75 0 0 1 1.047-.169"/>`), g.Group(children),
	)
}

func HomeMinus(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9.5 13.5h5M6.133 21C4.955 21 4 20.02 4 18.81v-8.802c0-.665.295-1.295.8-1.71l5.867-4.818a2.09 2.09 0 0 1 2.666 0l5.866 4.818c.506.415.801 1.045.801 1.71v8.802c0 1.21-.955 2.19-2.133 2.19z"/>`), g.Group(children),
	)
}

func HomeMinusSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.191 2.9a2.84 2.84 0 0 1 3.618 0l5.866 4.818a2.96 2.96 0 0 1 1.075 2.29v8.802c0 1.605-1.273 2.94-2.883 2.94H6.133c-1.61 0-2.883-1.335-2.883-2.94v-8.802c0-.886.392-1.73 1.075-2.29zM9.5 12.75a.75.75 0 0 0 0 1.5h5a.75.75 0 0 0 0-1.5z"/>`), g.Group(children),
	)
}

func HomePlus(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9.5 13.5h5M12 11v5m-5.867 5C4.955 21 4 20.02 4 18.81v-8.802c0-.665.295-1.295.8-1.71l5.867-4.818a2.09 2.09 0 0 1 2.666 0l5.866 4.818c.506.415.801 1.045.801 1.71v8.802c0 1.21-.955 2.19-2.133 2.19z"/>`), g.Group(children),
	)
}

func HomePlusSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.191 2.9L4.325 7.718a2.96 2.96 0 0 0-1.075 2.29v8.802c0 1.605 1.273 2.94 2.883 2.94h11.734c1.61 0 2.883-1.335 2.883-2.94v-8.802a2.96 2.96 0 0 0-1.075-2.29L13.81 2.9a2.84 2.84 0 0 0-3.618 0M12 10.25a.75.75 0 0 1 .75.75v1.75h1.75a.75.75 0 0 1 0 1.5h-1.75V16a.75.75 0 0 1-1.5 0v-1.75H9.5a.75.75 0 0 1 0-1.5h1.75V11a.75.75 0 0 1 .75-.75"/>`), g.Group(children),
	)
}

func HomeSmile(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M6.133 21C4.955 21 4 20.02 4 18.81v-8.802c0-.665.295-1.295.8-1.71l5.867-4.818a2.09 2.09 0 0 1 2.666 0l5.866 4.818c.506.415.801 1.045.801 1.71v8.802c0 1.21-.955 2.19-2.133 2.19z"/><path d="M9 16c.85.63 1.885 1 3 1s2.15-.37 3-1m-5.5-4.5V11m5 .5V11"/></g>`), g.Group(children),
	)
}

func HomeSmileSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.191 2.9a2.84 2.84 0 0 1 3.618 0l5.866 4.818a2.96 2.96 0 0 1 1.075 2.29v8.802c0 1.605-1.273 2.94-2.883 2.94H6.133c-1.61 0-2.883-1.335-2.883-2.94v-8.802c0-.886.392-1.73 1.075-2.29zm.059 8.1a.75.75 0 1 0-1.5 0v.5a.75.75 0 0 0 1.5 0zm5 0a.75.75 0 1 0-1.5 0v.5a.75.75 0 0 0 1.5 0zm-5.803 4.398a.75.75 0 1 0-.894 1.204A5.77 5.77 0 0 0 12 17.75a5.77 5.77 0 0 0 3.447-1.148a.75.75 0 0 0-.894-1.204A4.27 4.27 0 0 1 12 16.25a4.27 4.27 0 0 1-2.553-.852"/>`), g.Group(children),
	)
}

func HomeSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="m12.857 4.06l5.866 4.817c.33.27.527.686.527 1.13v8.803c0 .814-.638 1.44-1.383 1.44H15.25V15.5a2.75 2.75 0 0 0-2.75-2.75h-1a2.75 2.75 0 0 0-2.75 2.75v4.75H6.133c-.745 0-1.383-.626-1.383-1.44v-8.802c0-.445.197-.86.527-1.13l5.866-4.819a1.34 1.34 0 0 1 1.714 0m5.01 17.69c1.61 0 2.883-1.335 2.883-2.94v-8.802a2.96 2.96 0 0 0-1.075-2.29L13.81 2.9a2.84 2.84 0 0 0-3.618 0L4.325 7.718a2.96 2.96 0 0 0-1.075 2.29v8.802c0 1.605 1.273 2.94 2.883 2.94z"/>`), g.Group(children),
	)
}

func HomeX(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m10 11.5l4 4m0-4l-4 4M6.133 21C4.955 21 4 20.02 4 18.81v-8.802c0-.665.295-1.295.8-1.71l5.867-4.818a2.09 2.09 0 0 1 2.666 0l5.866 4.818c.506.415.801 1.045.801 1.71v8.802c0 1.21-.955 2.19-2.133 2.19z"/>`), g.Group(children),
	)
}

func HomeXSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.191 2.9L4.325 7.718a2.96 2.96 0 0 0-1.075 2.29v8.802c0 1.605 1.273 2.94 2.883 2.94h11.734c1.61 0 2.883-1.335 2.883-2.94v-8.802a2.96 2.96 0 0 0-1.075-2.29L13.81 2.9a2.84 2.84 0 0 0-3.618 0m-.721 8.07a.75.75 0 0 1 1.06 0L12 12.44l1.47-1.47a.75.75 0 1 1 1.06 1.06l-1.47 1.47l1.47 1.47a.75.75 0 1 1-1.06 1.06L12 14.56l-1.47 1.47a.75.75 0 1 1-1.06-1.06l1.47-1.47l-1.47-1.47a.75.75 0 0 1 0-1.06"/>`), g.Group(children),
	)
}

func Image(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M6.5 8a2 2 0 1 0 4 0a2 2 0 0 0-4 0m14.427 1.99c-6.61-.908-12.31 4-11.927 10.51"/><path d="M3 13.066c2.78-.385 5.275.958 6.624 3.1"/><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/></g>`), g.Group(children),
	)
}

func ImageCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/><path d="M7 9a2 2 0 1 0 4 0a2 2 0 0 0-4 0m13.718 1.08c-6.38-.75-11.85 3.906-11.716 10.144"/><path d="M3.2 13.04c2.7-.294 5.107 1.036 6.424 3.126"/></g>`), g.Group(children),
	)
}

func ImageCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M7.75 9a1.25 1.25 0 1 1 2.5 0a1.25 1.25 0 0 1-2.5 0"/><path d="M20.16 10.78c-5.667-.42-10.375 3.7-10.41 9.16c.715.202 1.47.31 2.25.31a8.25 8.25 0 0 0 8.16-9.47M8.268 19.36c.06-1.046.268-2.043.603-2.974c-1.082-1.593-2.886-2.639-4.935-2.636a8.26 8.26 0 0 0 4.332 5.61M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12m4-3a2.75 2.75 0 1 0 5.5 0a2.75 2.75 0 0 0-5.5 0m1.5 0a1.25 1.25 0 1 1 2.5 0a1.25 1.25 0 0 1-2.5 0"/></g>`), g.Group(children),
	)
}

func ImageRectangle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M6 9a2 2 0 1 0 4 0a2 2 0 0 0-4 0m14.927-.01c-6.61-.908-11.31 4-10.927 10.51"/><path d="M3 13.066c2.78-.385 5.851 1.293 7.2 3.434"/><path d="M2.357 9.3c0-1.68 0-2.52.327-3.162a3 3 0 0 1 1.311-1.311C4.637 4.5 5.477 4.5 7.157 4.5h9.686c1.68 0 2.52 0 3.162.327a3 3 0 0 1 1.31 1.311c.328.642.328 1.482.328 3.162v5.4c0 1.68 0 2.52-.327 3.162a3 3 0 0 1-1.311 1.311c-.642.327-1.482.327-3.162.327H7.157c-1.68 0-2.52 0-3.162-.327a3 3 0 0 1-1.31-1.311c-.328-.642-.328-1.482-.328-3.162z"/></g>`), g.Group(children),
	)
}

func ImageRectangleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M6.75 9a1.25 1.25 0 1 1 2.5 0a1.25 1.25 0 0 1-2.5 0"/><path d="M7.125 3.75h9.75c.813 0 1.468 0 2 .043c.546.045 1.026.14 1.47.366a3.75 3.75 0 0 1 1.64 1.639c.226.444.32.924.364 1.47c.044.531.044 1.187.044 2v5.464c0 .813 0 1.469-.044 2c-.044.546-.139 1.026-.365 1.47a3.75 3.75 0 0 1-1.639 1.64c-.444.226-.924.32-1.47.365c-.532.043-1.187.043-2 .043h-9.75c-.813 0-1.468 0-2-.043c-.546-.045-1.026-.14-1.47-.366a3.75 3.75 0 0 1-1.64-1.639c-.225-.444-.32-.924-.364-1.47c-.044-.531-.044-1.187-.044-2V9.268c0-.813 0-1.469.044-2c.044-.546.139-1.026.365-1.47a3.75 3.75 0 0 1 1.639-1.64c.444-.226.924-.32 1.47-.365c.532-.043 1.187-.043 2-.043m3.603 15h6.115c.852 0 1.447 0 1.91-.038c.453-.038.714-.107.911-.207c.424-.216.768-.56.984-.983c.1-.198.17-.459.207-.913c.037-.462.038-1.057.038-1.909V9.74l-.068-.007c-3.09-.424-5.68.51-7.458 2.264c-1.194 1.178-2.043 2.749-2.42 4.577a1 1 0 0 1-.03.143a11 11 0 0 0-.189 2.033m-1.324-2.09c-.601-.845-1.523-1.616-2.602-2.153c-1.177-.586-2.486-.865-3.695-.7v.893c0 .853 0 1.447.039 1.91c.037.453.106.714.206.912c.216.423.56.767.984.983c.197.1.458.17.912.207c.462.037 1.057.038 1.91.038h2.07q.001-1.078.176-2.09M5.25 9a2.75 2.75 0 1 0 5.5 0a2.75 2.75 0 0 0-5.5 0m1.5 0a1.25 1.25 0 1 1 2.5 0a1.25 1.25 0 0 1-2.5 0"/></g>`), g.Group(children),
	)
}

func ImageSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M7.25 8a1.25 1.25 0 1 1 2.5 0a1.25 1.25 0 0 1-2.5 0"/><path d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.46-1.869c-.058-.697-.058-1.563-.058-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057M3.75 13.753v.847c0 1.133 0 1.937.052 2.566c.05.62.147 1.005.302 1.31a3.25 3.25 0 0 0 1.42 1.42c.305.155.69.251 1.31.302c.389.032.845.044 1.404.049c-.046-1.392.167-2.71.593-3.92c-1.12-1.606-2.98-2.641-5.08-2.574m16.5-3.084c-5.863-.493-10.727 3.874-10.511 9.581h4.86c1.133 0 1.937 0 2.566-.052c.62-.05 1.005-.147 1.31-.302a3.25 3.25 0 0 0 1.42-1.42c.155-.305.251-.69.302-1.31c.052-.63.052-1.434.052-2.566zM5.75 8a2.75 2.75 0 1 0 5.5 0a2.75 2.75 0 0 0-5.5 0m1.5 0a1.25 1.25 0 1 1 2.5 0a1.25 1.25 0 0 1-2.5 0"/></g>`), g.Group(children),
	)
}

func Inbox(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M3.25 13h3.68a2 2 0 0 1 1.664.89l.812 1.22a2 2 0 0 0 1.664.89h1.86a2 2 0 0 0 1.664-.89l.812-1.22A2 2 0 0 1 17.07 13h3.68"/><path d="m5.45 4.11l-2.162 7.847A8 8 0 0 0 3 14.082V19a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-4.918a8 8 0 0 0-.288-2.125L18.55 4.11A2 2 0 0 0 16.76 3H7.24a2 2 0 0 0-1.79 1.11"/></g>`), g.Group(children),
	)
}

func InboxArchive(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M3.25 13h3.68a2 2 0 0 1 1.664.89l.812 1.22a2 2 0 0 0 1.664.89h1.86a2 2 0 0 0 1.664-.89l.812-1.22A2 2 0 0 1 17.07 13h3.68"/><path d="m5.45 4.11l-2.162 7.847A8 8 0 0 0 3 14.082V19a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-4.918a8 8 0 0 0-.288-2.125L18.55 4.11A2 2 0 0 0 16.76 3H7.24a2 2 0 0 0-1.79 1.11M9 9.5h6m-4.5-3h3"/></g>`), g.Group(children),
	)
}

func InboxArchiveSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M16.76 2.25a2.75 2.75 0 0 1 2.462 1.526a1 1 0 0 1 .051.135l2.163 7.846a8.8 8.8 0 0 1 .314 2.325V19A2.75 2.75 0 0 1 19 21.75H5A2.75 2.75 0 0 1 2.25 19v-4.918c0-.785.106-1.567.314-2.325l2.163-7.846a1 1 0 0 1 .051-.135A2.75 2.75 0 0 1 7.24 2.25zm.31 11.5a1.25 1.25 0 0 0-1.04.557l-.812 1.218a2.75 2.75 0 0 1-2.288 1.225h-1.86a2.75 2.75 0 0 1-2.288-1.225l-.812-1.218a1.25 1.25 0 0 0-1.04-.557H3.758a7 7 0 0 0-.008.332V19A1.25 1.25 0 0 0 5 20.25h14A1.25 1.25 0 0 0 20.25 19v-4.918q0-.165-.008-.332zm-6.57-8a.75.75 0 0 0 0 1.5h3a.75.75 0 0 0 0-1.5zm-1.5 3a.75.75 0 0 0 0 1.5h6a.75.75 0 0 0 0-1.5z"/>`), g.Group(children),
	)
}

func InboxCheck(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M3.25 13h3.68a2 2 0 0 1 1.664.89l.812 1.22a2 2 0 0 0 1.664.89h1.86a2 2 0 0 0 1.664-.89l.812-1.22A2 2 0 0 1 17.07 13h3.68"/><path d="m5.45 4.11l-2.162 7.847A8 8 0 0 0 3 14.082V19a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-4.918a8 8 0 0 0-.288-2.125L18.55 4.11A2 2 0 0 0 16.76 3H7.24a2 2 0 0 0-1.79 1.11"/><path d="m10.3 8.742l1.034 1.182c.095.108.266.1.35-.017L13.784 7"/></g>`), g.Group(children),
	)
}

func InboxCheckSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M16.76 2.25H7.24a2.75 2.75 0 0 0-2.462 1.526a1 1 0 0 0-.051.135l-2.163 7.846a8.8 8.8 0 0 0-.314 2.325V19A2.75 2.75 0 0 0 5 21.75h14A2.75 2.75 0 0 0 21.75 19v-4.918a8.8 8.8 0 0 0-.314-2.325l-2.163-7.846a1 1 0 0 0-.051-.135A2.75 2.75 0 0 0 16.76 2.25m.31 11.5h3.172q.008.165.008.332V19A1.25 1.25 0 0 1 19 20.25H5A1.25 1.25 0 0 1 3.75 19v-4.918q0-.165.008-.332H6.93c.418 0 .808.209 1.04.557l.812 1.218a2.75 2.75 0 0 0 2.288 1.225h1.86c.92 0 1.778-.46 2.288-1.225l.812-1.218a1.25 1.25 0 0 1 1.04-.557m-2.678-6.31l-2.1 2.906a.974.974 0 0 1-1.522.071L9.736 9.236a.75.75 0 1 1 1.128-.988l.6.684l1.712-2.371a.75.75 0 1 1 1.216.878"/>`), g.Group(children),
	)
}

func InboxDown(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M3.25 13h3.68a2 2 0 0 1 1.664.89l.812 1.22a2 2 0 0 0 1.664.89h1.86a2 2 0 0 0 1.664-.89l.812-1.22A2 2 0 0 1 17.07 13h3.68"/><path d="m5.45 4.11l-2.162 7.847A8 8 0 0 0 3 14.082V19a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-4.918a8 8 0 0 0-.288-2.125L18.55 4.11A2 2 0 0 0 16.76 3H7.24a2 2 0 0 0-1.79 1.11M12.003 6L12 11.28"/><path d="M14.5 9.347L12 12L9.5 9.347"/></g>`), g.Group(children),
	)
}

func InboxDownSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M16.76 2.25a2.75 2.75 0 0 1 2.462 1.526a1 1 0 0 1 .051.135l2.163 7.846a8.8 8.8 0 0 1 .314 2.325V19A2.75 2.75 0 0 1 19 21.75H5A2.75 2.75 0 0 1 2.25 19v-4.918c0-.785.106-1.567.314-2.325l2.163-7.846a1 1 0 0 1 .051-.135A2.75 2.75 0 0 1 7.24 2.25zm.31 11.5a1.25 1.25 0 0 0-1.04.557l-.812 1.218a2.75 2.75 0 0 1-2.288 1.225h-1.86a2.75 2.75 0 0 1-2.288-1.225l-.812-1.218a1.25 1.25 0 0 0-1.04-.557H3.758a7 7 0 0 0-.008.332V19A1.25 1.25 0 0 0 5 20.25h14A1.25 1.25 0 0 0 20.25 19v-4.918q0-.165-.008-.332zM12.753 6a.75.75 0 0 0-1.5 0l-.002 4.11l-1.205-1.278a.75.75 0 0 0-1.092 1.029l2.5 2.653a.75.75 0 0 0 1.092 0l2.5-2.653a.75.75 0 0 0-1.092-1.029l-1.203 1.278z"/>`), g.Group(children),
	)
}

func InboxMinus(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M3.25 13h3.68a2 2 0 0 1 1.664.89l.812 1.22a2 2 0 0 0 1.664.89h1.86a2 2 0 0 0 1.664-.89l.812-1.22A2 2 0 0 1 17.07 13h3.68"/><path d="m5.45 4.11l-2.162 7.847A8 8 0 0 0 3 14.082V19a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-4.918a8 8 0 0 0-.288-2.125L18.55 4.11A2 2 0 0 0 16.76 3H7.24a2 2 0 0 0-1.79 1.11M10 8.5h4"/></g>`), g.Group(children),
	)
}

func InboxMinusSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M16.76 2.25H7.24a2.75 2.75 0 0 0-2.462 1.526a1 1 0 0 0-.051.135l-2.163 7.846a8.8 8.8 0 0 0-.314 2.325V19A2.75 2.75 0 0 0 5 21.75h14A2.75 2.75 0 0 0 21.75 19v-4.918a8.8 8.8 0 0 0-.314-2.325l-2.163-7.846a1 1 0 0 0-.051-.135A2.75 2.75 0 0 0 16.76 2.25m.31 11.5h3.172q.008.165.008.332V19A1.25 1.25 0 0 1 19 20.25H5A1.25 1.25 0 0 1 3.75 19v-4.918q0-.165.008-.332H6.93c.418 0 .808.209 1.04.557l.812 1.218a2.75 2.75 0 0 0 2.288 1.225h1.86c.92 0 1.778-.46 2.288-1.225l.812-1.218a1.25 1.25 0 0 1 1.04-.557m-7.07-6h4a.75.75 0 0 1 0 1.5h-4a.75.75 0 0 1 0-1.5"/>`), g.Group(children),
	)
}

func InboxPlus(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M3.25 13h3.68a2 2 0 0 1 1.664.89l.812 1.22a2 2 0 0 0 1.664.89h1.86a2 2 0 0 0 1.664-.89l.812-1.22A2 2 0 0 1 17.07 13h3.68"/><path d="m5.45 4.11l-2.162 7.847A8 8 0 0 0 3 14.082V19a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-4.918a8 8 0 0 0-.288-2.125L18.55 4.11A2 2 0 0 0 16.76 3H7.24a2 2 0 0 0-1.79 1.11M10 8.5h4m-2-2v4"/></g>`), g.Group(children),
	)
}

func InboxPlusSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M16.76 2.25H7.24a2.75 2.75 0 0 0-2.462 1.526a1 1 0 0 0-.051.135l-2.163 7.846a8.8 8.8 0 0 0-.314 2.325V19A2.75 2.75 0 0 0 5 21.75h14A2.75 2.75 0 0 0 21.75 19v-4.918a8.8 8.8 0 0 0-.314-2.325l-2.163-7.846a1 1 0 0 0-.051-.135A2.75 2.75 0 0 0 16.76 2.25m.31 11.5h3.172q.008.165.008.332V19A1.25 1.25 0 0 1 19 20.25H5A1.25 1.25 0 0 1 3.75 19v-4.918q0-.165.008-.332H6.93c.418 0 .808.209 1.04.557l.812 1.218a2.75 2.75 0 0 0 2.288 1.225h1.86c.92 0 1.778-.46 2.288-1.225l.812-1.218a1.25 1.25 0 0 1 1.04-.557M12.75 6.5v1.25H14a.75.75 0 0 1 0 1.5h-1.25v1.25a.75.75 0 0 1-1.5 0V9.25H10a.75.75 0 0 1 0-1.5h1.25V6.5a.75.75 0 0 1 1.5 0"/>`), g.Group(children),
	)
}

func InboxSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M7.24 2.25h9.52a2.75 2.75 0 0 1 2.462 1.526a1 1 0 0 1 .051.135l2.163 7.846a8.8 8.8 0 0 1 .314 2.325V19A2.75 2.75 0 0 1 19 21.75H5A2.75 2.75 0 0 1 2.25 19v-4.918c0-.785.106-1.567.314-2.325l2.163-7.846a1 1 0 0 1 .051-.135A2.75 2.75 0 0 1 7.24 2.25m13.002 11.5H17.07a1.25 1.25 0 0 0-1.04.557l-.812 1.218a2.75 2.75 0 0 1-2.288 1.225h-1.86a2.75 2.75 0 0 1-2.288-1.225l-.812-1.218a1.25 1.25 0 0 0-1.04-.557H3.758a7 7 0 0 0-.008.332V19A1.25 1.25 0 0 0 5 20.25h14A1.25 1.25 0 0 0 20.25 19v-4.918q0-.165-.008-.332"/>`), g.Group(children),
	)
}

func InboxUp(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M3.25 13h3.68a2 2 0 0 1 1.664.89l.812 1.22a2 2 0 0 0 1.664.89h1.86a2 2 0 0 0 1.664-.89l.812-1.22A2 2 0 0 1 17.07 13h3.68"/><path d="m5.45 4.11l-2.162 7.847A8 8 0 0 0 3 14.082V19a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-4.918a8 8 0 0 0-.288-2.125L18.55 4.11A2 2 0 0 0 16.76 3H7.24a2 2 0 0 0-1.79 1.11M12.003 12L12 6.72"/><path d="M14.5 8.653L12 6L9.5 8.653"/></g>`), g.Group(children),
	)
}

func InboxUpSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M16.76 2.25H7.24a2.75 2.75 0 0 0-2.462 1.526a1 1 0 0 0-.051.135l-2.163 7.846a8.8 8.8 0 0 0-.314 2.325V19A2.75 2.75 0 0 0 5 21.75h14A2.75 2.75 0 0 0 21.75 19v-4.918a8.8 8.8 0 0 0-.314-2.325l-2.163-7.846a1 1 0 0 0-.051-.135A2.75 2.75 0 0 0 16.76 2.25m.31 11.5h3.172q.008.165.008.332V19A1.25 1.25 0 0 1 19 20.25H5A1.25 1.25 0 0 1 3.75 19v-4.918q0-.165.008-.332H6.93c.418 0 .808.209 1.04.557l.812 1.218a2.75 2.75 0 0 0 2.288 1.225h1.86c.92 0 1.778-.46 2.288-1.225l.812-1.218a1.25 1.25 0 0 1 1.04-.557m-4.524-8.264l2.5 2.653a.75.75 0 0 1-1.092 1.029L12.751 7.89l.002 4.11a.75.75 0 0 1-1.5 0l-.002-4.11l-1.205 1.278a.75.75 0 0 1-1.092-1.029l2.5-2.653a.75.75 0 0 1 1.092 0"/>`), g.Group(children),
	)
}

func InboxX(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M3.25 13h3.68a2 2 0 0 1 1.664.89l.812 1.22a2 2 0 0 0 1.664.89h1.86a2 2 0 0 0 1.664-.89l.812-1.22A2 2 0 0 1 17.07 13h3.68"/><path d="m5.45 4.11l-2.162 7.847A8 8 0 0 0 3 14.082V19a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-4.918a8 8 0 0 0-.288-2.125L18.55 4.11A2 2 0 0 0 16.76 3H7.24a2 2 0 0 0-1.79 1.11M10.5 7l3 3m0-3l-3 3"/></g>`), g.Group(children),
	)
}

func InboxXSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M16.76 2.25H7.24a2.75 2.75 0 0 0-2.462 1.526a1 1 0 0 0-.051.135l-2.163 7.846a8.8 8.8 0 0 0-.314 2.325V19A2.75 2.75 0 0 0 5 21.75h14A2.75 2.75 0 0 0 21.75 19v-4.918a8.8 8.8 0 0 0-.314-2.325l-2.163-7.846a1 1 0 0 0-.051-.135A2.75 2.75 0 0 0 16.76 2.25m.31 11.5h3.172q.008.165.008.332V19A1.25 1.25 0 0 1 19 20.25H5A1.25 1.25 0 0 1 3.75 19v-4.918q0-.165.008-.332H6.93c.418 0 .808.209 1.04.557l.812 1.218a2.75 2.75 0 0 0 2.288 1.225h1.86c.92 0 1.778-.46 2.288-1.225l.812-1.218a1.25 1.25 0 0 1 1.04-.557m-6.04-7.28l.97.97l.97-.97a.75.75 0 1 1 1.06 1.06l-.97.97l.97.97a.75.75 0 1 1-1.06 1.06L12 9.56l-.97.97a.75.75 0 1 1-1.06-1.06l.97-.97l-.97-.97a.75.75 0 0 1 1.06-1.06"/>`), g.Group(children),
	)
}

func Incognito(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M21 17.5a3.5 3.5 0 1 1-7 0a3.5 3.5 0 0 1 7 0M3 10.412h18m-16-.189l.614-2.6c.545-2.31.818-3.466 1.632-4.139c.545-.45.81.073 1.601.468c1.004.502 2.177.103 3.186-.39c1.008-.494 2.973-.755 4.036-.393c.976.334.983.762 1.391 1.71c.733 1.703 1.114 3.54 1.54 5.344M10 17.5a3.5 3.5 0 1 1-7 0a3.5 3.5 0 0 1 7 0m0-1.206l.658-.349a2.85 2.85 0 0 1 2.684 0l.658.349"/>`), g.Group(children),
	)
}

func IncognitoSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="m19.58 9.405l.059.257H21a.75.75 0 0 1 0 1.5H3a.75.75 0 0 1 0-1.5h1.362l.532-2.255c.264-1.118.477-2.02.73-2.722c.261-.727.593-1.323 1.144-1.779c.213-.176.476-.32.794-.343c.312-.022.568.082.744.176c.136.072.28.17.393.247l.06.041c.136.092.27.177.423.254c.647.324 1.506.103 2.521-.393c.607-.297 1.442-.502 2.246-.59c.795-.086 1.68-.071 2.362.162c.598.204 1.003.478 1.294.923c.129.196.22.404.297.591l.09.224c.047.12.094.239.157.385c.673 1.564 1.061 3.236 1.43 4.822M6.5 13.25a4.25 4.25 0 1 0 4.189 3.528l.32-.17a2.1 2.1 0 0 1 1.982 0l.32.17a4.25 4.25 0 1 0 .519-1.422l-.137-.073a3.6 3.6 0 0 0-3.386 0l-.137.072A4.25 4.25 0 0 0 6.5 13.25"/>`), g.Group(children),
	)
}

func IndifferentCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9 15.5h6m-5.5-5V10m5 .5V10m6.5 2a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/>`), g.Group(children),
	)
}

func IndifferentCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0 5.385 4.365 9.75 9.75 9.75s9.75-4.365 9.75-9.75S17.385 2.25 12 2.25S2.25 6.615 2.25 12m6 3.5a.75.75 0 0 1 .75-.75h6a.75.75 0 0 1 0 1.5H9a.75.75 0 0 1-.75-.75m2-5.5v.5a.75.75 0 0 1-1.5 0V10a.75.75 0 0 1 1.5 0m4.25-.75a.75.75 0 0 1 .75.75v.5a.75.75 0 0 1-1.5 0V10a.75.75 0 0 1 .75-.75"/>`), g.Group(children),
	)
}

func IndifferentGhost(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9 15.5h6m-5.5-5V10m5 .5V10M3 18.562v-6.518C3 7.05 7.03 3 12 3s9 4.05 9 9.044v6.517c0 1.162-.967 2.519-2 2c-.835-.42-2.223-.52-3 0c-.874.585-2.126.585-3 0c-.885-.593-1.649-.57-2.5 0c-.874.585-2.126.585-3 0c-.777-.52-1.665-.42-2.5 0c-1.033.519-2-.838-2-2"/>`), g.Group(children),
	)
}

func IndifferentGhostSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12.044v6.517c0 .764.308 1.57.8 2.127c.501.567 1.354 1.012 2.287.543c.696-.35 1.275-.363 1.746-.047c1.126.755 2.708.755 3.834 0c.345-.23.607-.308.825-.31c.218-.001.485.072.84.31c1.127.755 2.709.755 3.835 0c.213-.142.58-.237 1.044-.226c.454.01.898.12 1.202.273c.933.469 1.786.024 2.287-.543c.492-.557.8-1.363.8-2.126v-6.518c0-5.405-4.362-9.794-9.75-9.794s-9.75 4.389-9.75 9.794m6 3.456a.75.75 0 0 1 .75-.75h6a.75.75 0 0 1 0 1.5H9a.75.75 0 0 1-.75-.75m2-5.5v.5a.75.75 0 0 1-1.5 0V10a.75.75 0 0 1 1.5 0m4.25-.75a.75.75 0 0 1 .75.75v.5a.75.75 0 0 1-1.5 0V10a.75.75 0 0 1 .75-.75"/>`), g.Group(children),
	)
}

func IndifferentSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9 15.5h6m-5.5-5V10m5 .5V10M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/>`), g.Group(children),
	)
}

func IndifferentSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25c-1.092 0-1.958 0-2.655.057c-.714.058-1.317.18-1.868.46a4.75 4.75 0 0 0-2.076 2.077c-.281.55-.403 1.154-.461 1.868c-.057.697-.057 1.563-.057 2.655v5.266c0 1.092 0 1.958.057 2.655c.058.714.18 1.317.46 1.869a4.75 4.75 0 0 0 2.077 2.075c.55.281 1.154.403 1.868.461c.697.057 1.563.057 2.655.057h5.266c1.092 0 1.958 0 2.655-.057c.714-.058 1.317-.18 1.869-.46a4.75 4.75 0 0 0 2.075-2.076c.281-.552.403-1.155.461-1.869c.057-.697.057-1.563.057-2.655V9.367c0-1.092 0-1.958-.057-2.655c-.058-.714-.18-1.317-.46-1.868a4.75 4.75 0 0 0-2.076-2.076c-.552-.281-1.155-.403-1.869-.461c-.697-.057-1.563-.057-2.655-.057zM8.25 15.5a.75.75 0 0 1 .75-.75h6a.75.75 0 0 1 0 1.5H9a.75.75 0 0 1-.75-.75m2-5.5v.5a.75.75 0 0 1-1.5 0V10a.75.75 0 0 1 1.5 0m4.25-.75a.75.75 0 0 1 .75.75v.5a.75.75 0 0 1-1.5 0V10a.75.75 0 0 1 .75-.75"/>`), g.Group(children),
	)
}

func Infinity(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M14 9.417C14.838 8.575 15.793 8 17 8a4 4 0 0 1 0 8c-4.5 0-5.5-8-10-8a4 4 0 1 0 0 8c1.207 0 2.162-.575 3-1.417"/>`), g.Group(children),
	)
}

func InfinitySolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M7 8.75a3.25 3.25 0 0 0 0 6.5c.935 0 1.71-.435 2.469-1.196a.75.75 0 0 1 1.063 1.058c-.92.923-2.054 1.638-3.532 1.638a4.75 4.75 0 1 1 0-9.5c1.376 0 2.457.621 3.342 1.454c.856.805 1.581 1.86 2.25 2.834l.026.037c.699 1.017 1.34 1.944 2.068 2.629c.709.667 1.44 1.046 2.314 1.046a3.25 3.25 0 0 0 0-6.5c-.935 0-1.71.435-2.469 1.196a.75.75 0 0 1-1.062-1.058C14.387 7.965 15.522 7.25 17 7.25a4.75 4.75 0 1 1 0 9.5c-1.376 0-2.457-.621-3.342-1.454c-.856-.805-1.581-1.86-2.25-2.834l-.026-.037c-.699-1.017-1.34-1.944-2.068-2.629C8.605 9.13 7.874 8.75 7 8.75"/>`), g.Group(children),
	)
}

func Info(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M12 19.5v-10h-.5m0 10h1m-.5-14V5"/>`), g.Group(children),
	)
}

func InfoCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/><path d="M12 16v-5h-.5m0 5h1M12 8.5V8"/></g>`), g.Group(children),
	)
}

func InfoCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12 2.25c-5.385 0-9.75 4.365-9.75 9.75s4.365 9.75 9.75 9.75s9.75-4.365 9.75-9.75S17.385 2.25 12 2.25m0 5a.75.75 0 0 1 .75.75v.5a.75.75 0 0 1-1.5 0V8a.75.75 0 0 1 .75-.75M10.75 16a.75.75 0 0 1 .5-.707v-3.586a.75.75 0 0 1 .25-1.457h.5a.75.75 0 0 1 .75.75v4.293a.75.75 0 0 1-.25 1.457h-1a.75.75 0 0 1-.75-.75"/>`), g.Group(children),
	)
}

func InfoDiamond(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M2.707 10.295a2.41 2.41 0 0 0 0 3.41l7.588 7.588a2.41 2.41 0 0 0 3.41 0l7.588-7.588a2.41 2.41 0 0 0 0-3.41l-7.588-7.588a2.41 2.41 0 0 0-3.41 0z"/><path d="M12 16v-5h-.5m0 5h1M12 8.5V8"/></g>`), g.Group(children),
	)
}

func InfoDiamondSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12 1.25a3.16 3.16 0 0 0-2.235.926L2.177 9.765a3.16 3.16 0 0 0 0 4.47l7.588 7.588a3.16 3.16 0 0 0 4.47 0l7.588-7.588a3.16 3.16 0 0 0 0-4.47l-7.588-7.588A3.16 3.16 0 0 0 12 1.25m0 6a.75.75 0 0 1 .75.75v.5a.75.75 0 0 1-1.5 0V8a.75.75 0 0 1 .75-.75M10.75 16a.75.75 0 0 1 .5-.707v-3.586a.75.75 0 0 1 .25-1.457h.5a.75.75 0 0 1 .75.75v4.293a.75.75 0 0 1-.25 1.457h-1a.75.75 0 0 1-.75-.75"/>`), g.Group(children),
	)
}

func InfoHexagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M20.5 15.8V8.2a1.91 1.91 0 0 0-.944-1.645l-6.612-3.8a1.88 1.88 0 0 0-1.888 0l-6.612 3.8A1.9 1.9 0 0 0 3.5 8.2v7.602a1.91 1.91 0 0 0 .944 1.644l6.612 3.8a1.88 1.88 0 0 0 1.888 0l6.612-3.8A1.9 1.9 0 0 0 20.5 15.8"/><path d="M12 16v-5h-.5m0 5h1M12 8.5V8"/></g>`), g.Group(children),
	)
}

func InfoHexagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12 1.75a2.63 2.63 0 0 0-1.32.355l-6.61 3.8l-.002.002A2.65 2.65 0 0 0 2.75 8.198v7.603a2.64 2.64 0 0 0 1.318 2.292l.003.002l6.608 3.799h.002a2.63 2.63 0 0 0 2.639 0h.001l6.608-3.8h.003A2.65 2.65 0 0 0 21.25 15.8V8.2a2.65 2.65 0 0 0-1.318-2.292l-6.61-3.8l-.002-.002A2.63 2.63 0 0 0 12 1.75m0 5.5a.75.75 0 0 1 .75.75v.5a.75.75 0 0 1-1.5 0V8a.75.75 0 0 1 .75-.75M10.75 16a.75.75 0 0 1 .5-.707v-3.586a.75.75 0 0 1 .25-1.457h.5a.75.75 0 0 1 .75.75v4.293a.75.75 0 0 1-.25 1.457h-1a.75.75 0 0 1-.75-.75"/>`), g.Group(children),
	)
}

func InfoOctagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M7.805 3.469C8.16 3.115 8.451 3 8.937 3h6.126c.486 0 .778.115 1.132.469l4.336 4.336c.354.354.469.646.469 1.132v6.126c0 .5-.125.788-.469 1.132l-4.336 4.336c-.354.354-.646.469-1.132.469H8.937c-.5 0-.788-.125-1.132-.469L3.47 16.195c-.355-.355-.47-.646-.47-1.132V8.937c0-.5.125-.788.469-1.132z"/><path d="M12 16v-5h-.5m0 5h1M12 8.5V8"/></g>`), g.Group(children),
	)
}

func InfoOctagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.937 2.25a2.3 2.3 0 0 0-.9.158c-.299.122-.54.31-.762.53L2.938 7.275c-.213.214-.4.45-.525.748a2.3 2.3 0 0 0-.163.914v6.126c0 .302.036.602.158.9s.31.54.53.762l4.337 4.337c.214.213.45.4.748.524c.298.125.601.164.914.164h6.126c.302 0 .602-.035.9-.158c.299-.122.54-.31.762-.53l4.337-4.337c.213-.214.4-.45.524-.748a2.3 2.3 0 0 0 .164-.914V8.937a2.3 2.3 0 0 0-.158-.9a2.3 2.3 0 0 0-.53-.762l-4.337-4.337a2.3 2.3 0 0 0-.762-.53a2.3 2.3 0 0 0-.9-.158zm3.063 5a.75.75 0 0 1 .75.75v.5a.75.75 0 0 1-1.5 0V8a.75.75 0 0 1 .75-.75M10.75 16a.75.75 0 0 1 .5-.707v-3.586a.75.75 0 0 1 .25-1.457h.5a.75.75 0 0 1 .75.75v4.293a.75.75 0 0 1-.25 1.457h-1a.75.75 0 0 1-.75-.75"/>`), g.Group(children),
	)
}

func InfoSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12 4.25a.75.75 0 0 1 .75.75v.5a.75.75 0 0 1-1.5 0V5a.75.75 0 0 1 .75-.75M10.75 9.5a.75.75 0 0 1 .75-.75h.5a.75.75 0 0 1 .75.75v9.293a.75.75 0 0 1-.25 1.457h-1a.75.75 0 0 1-.25-1.457v-8.586a.75.75 0 0 1-.5-.707"/>`), g.Group(children),
	)
}

func InfoSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/><path d="M12 16v-5h-.5m0 5h1M12 8.5V8"/></g>`), g.Group(children),
	)
}

func InfoSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25c-1.092 0-1.958 0-2.655.057c-.714.058-1.317.18-1.868.46a4.75 4.75 0 0 0-2.076 2.077c-.281.55-.403 1.154-.461 1.868c-.057.697-.057 1.563-.057 2.655v5.266c0 1.092 0 1.958.057 2.655c.058.714.18 1.317.46 1.869a4.75 4.75 0 0 0 2.077 2.075c.55.281 1.154.403 1.868.461c.697.057 1.563.057 2.655.057h5.266c1.092 0 1.958 0 2.655-.057c.714-.058 1.317-.18 1.869-.46a4.75 4.75 0 0 0 2.075-2.076c.281-.552.403-1.155.461-1.869c.057-.697.057-1.563.057-2.655V9.367c0-1.092 0-1.958-.057-2.655c-.058-.714-.18-1.317-.46-1.868a4.75 4.75 0 0 0-2.076-2.076c-.552-.281-1.155-.403-1.869-.461c-.697-.057-1.563-.057-2.655-.057zm2.633 5a.75.75 0 0 1 .75.75v.5a.75.75 0 0 1-1.5 0V8a.75.75 0 0 1 .75-.75M10.75 16a.75.75 0 0 1 .5-.707v-3.586a.75.75 0 0 1 .25-1.457h.5a.75.75 0 0 1 .75.75v4.293a.75.75 0 0 1-.25 1.457h-1a.75.75 0 0 1-.75-.75"/>`), g.Group(children),
	)
}

func InfoTriangle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M12 17v-5h-.5m0 5h1M12 9.5V9"/><path d="M5.98 10.762C8.608 5.587 9.92 3 12 3s3.393 2.587 6.02 7.762l.327.644c2.182 4.3 3.274 6.45 2.287 8.022C19.648 21 17.208 21 12.327 21h-.654c-4.88 0-7.321 0-8.307-1.572s.105-3.722 2.287-8.022z"/></g>`), g.Group(children),
	)
}

func InfoTriangleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.583 4.507C9.538 3.159 10.582 2.25 12 2.25s2.462.91 3.417 2.257c.948 1.338 1.953 3.318 3.24 5.852l.39.769c1.065 2.098 1.904 3.75 2.344 5.076c.448 1.348.55 2.552-.121 3.623c-.67 1.066-1.801 1.511-3.22 1.719c-1.398.204-3.272.204-5.656.204h-.788c-2.384 0-4.258 0-5.656-.204c-1.419-.208-2.55-.653-3.22-1.72c-.671-1.07-.569-2.274-.12-3.622c.44-1.325 1.278-2.978 2.344-5.076l.39-.768c1.286-2.535 2.29-4.515 3.24-5.853M12.75 9a.75.75 0 0 0-1.5 0v.5a.75.75 0 0 0 1.5 0zm-1.25 2.25a.75.75 0 0 0-.25 1.457v3.586a.75.75 0 0 0 .25 1.457h1a.75.75 0 0 0 .25-1.457V12a.75.75 0 0 0-.75-.75z"/>`), g.Group(children),
	)
}

func InfoWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83"/><path d="M12 16v-5h-.5m0 5h1M12 8.5V8"/></g>`), g.Group(children),
	)
}

func InfoWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M13.435 2.075a3.33 3.33 0 0 0-2.87 0c-.394.189-.755.497-1.26.928l-.079.066a2.56 2.56 0 0 1-1.58.655l-.102.008c-.662.053-1.135.09-1.547.236a3.33 3.33 0 0 0-2.03 2.029c-.145.412-.182.885-.235 1.547l-.008.102a2.56 2.56 0 0 1-.655 1.58l-.066.078c-.431.506-.74.867-.928 1.261a3.33 3.33 0 0 0 0 2.87c.189.394.497.755.928 1.26l.066.079c.41.48.604.939.655 1.58l.008.102c.053.662.09 1.135.236 1.547a3.33 3.33 0 0 0 2.029 2.03c.412.145.885.182 1.547.235l.102.008c.629.05 1.09.238 1.58.655l.078.066c.506.431.867.74 1.261.928a3.33 3.33 0 0 0 2.87 0c.394-.189.755-.497 1.26-.928l.079-.066c.48-.41.939-.604 1.58-.655l.102-.008c.662-.053 1.135-.09 1.547-.236a3.33 3.33 0 0 0 2.03-2.029c.145-.412.182-.885.235-1.547l.008-.102c.05-.629.238-1.09.655-1.58l.066-.079c.431-.505.74-.866.928-1.26a3.33 3.33 0 0 0 0-2.87c-.189-.394-.497-.755-.928-1.26l-.066-.079a2.56 2.56 0 0 1-.655-1.58l-.008-.102c-.053-.662-.09-1.135-.236-1.547a3.33 3.33 0 0 0-2.029-2.03c-.412-.145-.885-.182-1.547-.235l-.102-.008a2.56 2.56 0 0 1-1.58-.655l-.079-.066c-.505-.431-.866-.74-1.26-.928M12 7.25a.75.75 0 0 1 .75.75v.5a.75.75 0 0 1-1.5 0V8a.75.75 0 0 1 .75-.75M10.75 16a.75.75 0 0 1 .5-.707v-3.586a.75.75 0 0 1 .25-1.457h.5a.75.75 0 0 1 .75.75v4.293a.75.75 0 0 1-.25 1.457h-1a.75.75 0 0 1-.75-.75"/>`), g.Group(children),
	)
}

func Intersect(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M8.4 15.6h2.4c1.68 0 2.52 0 3.162-.327a3 3 0 0 0 1.311-1.311c.327-.642.327-1.482.327-3.162V8.4m-7.2 7.2v.9m0-.9v-2.4c0-1.68 0-2.52.327-3.162a3 3 0 0 1 1.311-1.311C10.68 8.4 11.52 8.4 13.2 8.4h2.4m-7.2 7.2h-.9m8.1-7.2h.9m-.9 0v-.9M8.4 19.65V21h1.8m5.4 0h-1.8m5.4 0H21v-1.8m0-5.4v1.8m0-5.4V8.4h-1.35M15.6 4.35V3h-1.8M8.4 3h1.8M4.8 3H3v1.8m0 5.4V8.4m0 5.4v1.8h1.35"/>`), g.Group(children),
	)
}

func IntersectSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M3 2.25a.75.75 0 0 0-.75.75v1.8a.75.75 0 0 0 1.5 0V3.75H4.8a.75.75 0 0 0 0-1.5zm5.4 0a.75.75 0 0 0 0 1.5h1.8a.75.75 0 0 0 0-1.5zm5.4 0a.75.75 0 0 0 0 1.5h1.05v.6a.75.75 0 0 0 1.5 0V3a.75.75 0 0 0-.75-.75zm2.55 5.25a.75.75 0 0 0-1.5 0v.15h-1.682c-.813 0-1.469 0-2 .043c-.546.045-1.026.14-1.47.366a3.75 3.75 0 0 0-1.64 1.639c-.226.444-.32.924-.365 1.47c-.043.531-.043 1.187-.043 2v1.682H7.5a.75.75 0 0 0 0 1.5h.15v.15a.75.75 0 0 0 1.5 0v-.15h1.682c.813 0 1.469 0 2-.043c.546-.045 1.026-.14 1.47-.366a3.75 3.75 0 0 0 1.64-1.639c.226-.444.32-.924.365-1.47c.043-.531.043-1.187.043-2V9.15h.15a.75.75 0 0 0 0-1.5h-.15zm-12.6.9a.75.75 0 0 0-1.5 0v1.8a.75.75 0 0 0 1.5 0zm15.9-.75a.75.75 0 0 0 0 1.5h.6v1.05a.75.75 0 0 0 1.5 0V8.4a.75.75 0 0 0-.75-.75zM3.75 13.8a.75.75 0 0 0-1.5 0v1.8c0 .414.336.75.75.75h1.35a.75.75 0 0 0 0-1.5h-.6zm18 0a.75.75 0 0 0-1.5 0v1.8a.75.75 0 0 0 1.5 0zm0 5.4a.75.75 0 0 0-1.5 0v1.05H19.2a.75.75 0 0 0 0 1.5H21a.75.75 0 0 0 .75-.75zm-12.6.45a.75.75 0 0 0-1.5 0V21c0 .414.336.75.75.75h1.8a.75.75 0 0 0 0-1.5H9.15zm4.65.6a.75.75 0 0 0 0 1.5h1.8a.75.75 0 0 0 0-1.5z"/>`), g.Group(children),
	)
}

func Key(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m15.362 9.065l1.32 1.32c.995.995 1.345-.84 2.734-1.07c.466-.078.877-.236 1.053-.752c.156-.456-.021-.885-.574-1.438L18.5 5.731M7.5 21a4.5 4.5 0 1 0 0-9a4.5 4.5 0 0 0 0 9m3.5-8L21 3"/>`), g.Group(children),
	)
}

func KeySolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M7.5 11.25a5.25 5.25 0 1 0 4.205 2.106l3.444-3.444l1.002 1.002c.344.344.788.59 1.317.493c.437-.08.763-.378.947-.552l.197-.188c.354-.34.577-.554.927-.612c.268-.045.602-.124.908-.315a1.73 1.73 0 0 0 .732-.934a1.7 1.7 0 0 0-.035-1.206c-.149-.368-.411-.698-.719-1.005l-.98-.98L21.53 3.53a.75.75 0 0 0-1.06-1.06l-9.826 9.825A5.23 5.23 0 0 0 7.5 11.25"/>`), g.Group(children),
	)
}

func Keyboard(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M2 11c0-2.828 0-4.243.879-5.121C3.757 5 5.172 5 8 5h8c2.828 0 4.243 0 5.121.879C22 6.757 22 8.172 22 11v2c0 2.828 0 4.243-.879 5.121C20.243 19 18.828 19 16 19H8c-2.828 0-4.243 0-5.121-.879C2 17.243 2 15.828 2 13zm5 5h10M5 9h3m3 0h3m3 0h2M5 12h2m3 0h3m3 0h3"/>`), g.Group(children),
	)
}

func KeyboardBrightnessHigh(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M10 17h4M3 17h3m6-9v3m6 6h3m-4.879-4.28L18.58 11M7.457 12.72L5 11"/>`), g.Group(children),
	)
}

func KeyboardBrightnessHighSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12 7.25a.75.75 0 0 1 .75.75v3a.75.75 0 0 1-1.5 0V8a.75.75 0 0 1 .75-.75m7.193 3.32a.75.75 0 0 1-.184 1.044l-2.457 1.721a.75.75 0 0 1-.86-1.229l2.457-1.72a.75.75 0 0 1 1.044.184m-14.807 0a.75.75 0 0 1 1.044-.184l2.458 1.72a.75.75 0 1 1-.86 1.23L4.57 11.613a.75.75 0 0 1-.184-1.044M2.25 17a.75.75 0 0 1 .75-.75h3a.75.75 0 0 1 0 1.5H3a.75.75 0 0 1-.75-.75m7 0a.75.75 0 0 1 .75-.75h4a.75.75 0 0 1 0 1.5h-4a.75.75 0 0 1-.75-.75m8 0a.75.75 0 0 1 .75-.75h3a.75.75 0 0 1 0 1.5h-3a.75.75 0 0 1-.75-.75"/>`), g.Group(children),
	)
}

func KeyboardBrightnessLow(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M8 17h8M3 17h1m8-8v1m6 2.207l.707-.707m-13 .707L5 11.5M20 17h1"/>`), g.Group(children),
	)
}

func KeyboardBrightnessLowSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12 8.25a.75.75 0 0 1 .75.75v1a.75.75 0 0 1-1.5 0V9a.75.75 0 0 1 .75-.75m-7.53 2.72a.75.75 0 0 1 1.06 0l.707.707a.75.75 0 1 1-1.06 1.06l-.707-.707a.75.75 0 0 1 0-1.06m14.767 0a.75.75 0 0 1 0 1.06l-.707.707a.75.75 0 1 1-1.06-1.06l.707-.707a.75.75 0 0 1 1.06 0M2.25 17a.75.75 0 0 1 .75-.75h1a.75.75 0 0 1 0 1.5H3a.75.75 0 0 1-.75-.75m5 0a.75.75 0 0 1 .75-.75h8a.75.75 0 0 1 0 1.5H8a.75.75 0 0 1-.75-.75m12 0a.75.75 0 0 1 .75-.75h1a.75.75 0 0 1 0 1.5h-1a.75.75 0 0 1-.75-.75"/>`), g.Group(children),
	)
}

func KeyboardSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M4.608 4.367c.867-.117 1.97-.117 3.337-.117h8.11c1.367 0 2.47 0 3.337.117c.9.12 1.658.38 2.26.981c.602.602.86 1.36.982 2.26c.116.867.116 1.97.116 3.337v2.11c0 1.367 0 2.47-.116 3.337c-.122.9-.38 1.658-.982 2.26s-1.36.86-2.26.982c-.867.116-1.97.116-3.337.116h-8.11c-1.367 0-2.47 0-3.337-.116c-.9-.122-1.658-.38-2.26-.982s-.86-1.36-.981-2.26c-.117-.867-.117-1.97-.117-3.337v-2.11c0-1.367 0-2.47.117-3.337c.12-.9.38-1.658.981-2.26c.602-.602 1.36-.86 2.26-.981M5 8.25a.75.75 0 0 0 0 1.5h3a.75.75 0 0 0 0-1.5zm6 0a.75.75 0 0 0 0 1.5h3a.75.75 0 1 0 0-1.5zm6 0a.75.75 0 0 0 0 1.5h2a.75.75 0 0 0 0-1.5zm-12 3a.75.75 0 0 0 0 1.5h2a.75.75 0 0 0 0-1.5zm5 0a.75.75 0 0 0 0 1.5h3a.75.75 0 0 0 0-1.5zm6 0a.75.75 0 0 0 0 1.5h3a.75.75 0 0 0 0-1.5zm-9 4a.75.75 0 0 0 0 1.5h10a.75.75 0 0 0 0-1.5z"/>`), g.Group(children),
	)
}

func Label(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m10.98 20.194l-7.298-7.298c-.37-.37-.58-.87-.587-1.392L3 4.015A1 1 0 0 1 4.015 3l7.489.095a2 2 0 0 1 1.392.587l7.298 7.298c.674.673 1.192 1.959.424 2.727l-6.91 6.91c-.769.769-2.055.25-2.728-.423M8.019 7.552l-.707-.707"/>`), g.Group(children),
	)
}

func LabelSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 4.025A1.75 1.75 0 0 1 4.025 2.25l7.488.095a2.75 2.75 0 0 1 1.913.807l7.299 7.298c.423.423.798 1.034.952 1.687c.156.664.096 1.476-.529 2.1l-6.91 6.911c-.625.625-1.437.685-2.101.529a3.66 3.66 0 0 1-1.687-.952l-7.298-7.299a2.76 2.76 0 0 1-.807-1.913zm5.592 2.29a.75.75 0 0 0-1.06 1.06l.707.708a.75.75 0 0 0 1.06-1.061z"/>`), g.Group(children),
	)
}

func Lamp(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M12 21v-9m0 9H9m3 0h3m-3-9h6l-2.513-7.702A2 2 0 0 0 13.614 3h-3.228a2 2 0 0 0-1.873 1.298L6 12z"/>`), g.Group(children),
	)
}

func LampSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.386 2.25A2.75 2.75 0 0 0 7.8 4.065l-2.513 7.702A.75.75 0 0 0 6 12.75h5.25v7.5H9a.75.75 0 0 0 0 1.5h6a.75.75 0 0 0 0-1.5h-2.25v-7.5H18a.75.75 0 0 0 .713-.983L16.2 4.065a2.75 2.75 0 0 0-2.586-1.815z"/>`), g.Group(children),
	)
}

func LayersOne(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m12 16l9-4l-9-4l-9 4z"/>`), g.Group(children),
	)
}

func LayersOneSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12.305 7.315a.75.75 0 0 0-.61 0l-9 4a.75.75 0 0 0 0 1.37l9 4a.75.75 0 0 0 .61 0l9-4a.75.75 0 0 0 0-1.37z"/>`), g.Group(children),
	)
}

func LayersThree(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m21 12l-9 4l-9-4m18 4l-9 4l-9-4m18-8l-9 4l-9-4l9-4z"/>`), g.Group(children),
	)
}

func LayersThreeSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M12.305 3.315a.75.75 0 0 0-.61 0l-9 4a.75.75 0 0 0 0 1.37l9 4a.75.75 0 0 0 .61 0l9-4a.75.75 0 0 0 0-1.37z"/><path d="M3.305 11.315a.75.75 0 0 0-.61 1.37l9 4a.75.75 0 0 0 .61 0l9-4a.75.75 0 0 0-.61-1.37L12 15.179z"/><path d="M3.305 15.315a.75.75 0 0 0-.61 1.37l9 4a.75.75 0 0 0 .61 0l9-4a.75.75 0 0 0-.61-1.37L12 19.179z"/></g>`), g.Group(children),
	)
}

func LayersTwo(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m21 14l-9 4l-9-4m18-4l-9 4l-9-4l9-4z"/>`), g.Group(children),
	)
}

func LayersTwoSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M12.305 5.315a.75.75 0 0 0-.61 0l-9 4a.75.75 0 0 0 0 1.37l9 4a.75.75 0 0 0 .61 0l9-4a.75.75 0 0 0 0-1.37z"/><path d="M3.305 13.315a.75.75 0 1 0-.61 1.37l9 4a.75.75 0 0 0 .61 0l9-4a.75.75 0 1 0-.61-1.37L12 17.179z"/></g>`), g.Group(children),
	)
}

func Layout(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9 10v10M20.5 9.5h-17M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/>`), g.Group(children),
	)
}

func LayoutSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M17.288 2.307c-.697-.057-1.563-.057-2.655-.057H9.367c-1.092 0-1.958 0-2.655.057c-.714.058-1.317.18-1.868.46a4.75 4.75 0 0 0-2.076 2.077c-.281.55-.403 1.154-.461 1.868c-.046.56-.055 1.23-.057 2.038h19.5c-.002-.808-.011-1.477-.057-2.038c-.058-.714-.18-1.317-.46-1.868a4.75 4.75 0 0 0-2.076-2.076c-.552-.281-1.155-.403-1.869-.461m4.405 14.981c.057-.697.057-1.563.057-2.655V10.25h-12v11.5h4.883c1.092 0 1.958 0 2.655-.057c.714-.058 1.317-.18 1.869-.46a4.75 4.75 0 0 0 2.075-2.076c.281-.552.403-1.155.461-1.869M4.844 21.232c.55.281 1.154.403 1.868.461c.44.036.948.05 1.538.054V10.25h-6v4.383c0 1.092 0 1.958.057 2.655c.058.714.18 1.317.46 1.869a4.75 4.75 0 0 0 2.077 2.075"/>`), g.Group(children),
	)
}

func Leaf(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M5.973 18.028c7.625 4.576 13.726-1.525 12.963-12.964C7.498 4.302 1.398 10.403 5.973 18.028m0 0L4 20m1.973-1.972L10.1 13.9"/>`), g.Group(children),
	)
}

func LeafSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M5.037 17.903c.126.238.514.783 1.06 1.06L4.53 20.53a.75.75 0 1 1-1.06-1.06z"/><path d="M6.097 18.964c1.828.997 3.611 1.435 5.275 1.326c1.826-.12 3.447-.897 4.758-2.208c2.599-2.599 3.943-7.24 3.555-13.067a.75.75 0 0 0-.699-.699C13.16 3.928 8.517 5.272 5.92 7.87c-1.31 1.311-2.088 2.933-2.208 4.76c-.11 1.662.329 3.446 1.326 5.273L9.57 13.37a.75.75 0 1 1 1.06 1.06z"/></g>`), g.Group(children),
	)
}

func Leaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M12 12.07V20m0-8.07c0-4.353 3.538-7.887 7.919-7.93q.08.556.081 1.132c0 4.353-3.538 7.886-7.919 7.93A8 8 0 0 1 12 11.928m0 0C12 7.576 8.462 4.042 4.081 4A8 8 0 0 0 4 5.132c0 4.353 3.538 7.886 7.919 7.93A8 8 0 0 0 12 11.928"/>`), g.Group(children),
	)
}

func LeavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M4.088 3.25a.75.75 0 0 0-.75.643a9 9 0 0 0-.088 1.24c0 4.548 3.524 8.27 8 8.647V20a.75.75 0 0 0 1.5 0v-6.22c4.476-.377 8-4.1 8-8.648q0-.63-.089-1.24a.75.75 0 0 0-.75-.642A8.76 8.76 0 0 0 12 8.407A8.76 8.76 0 0 0 4.088 3.25"/>`), g.Group(children),
	)
}

func LetterA(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M14.25 13.667L11.75 7l-2.5 6.667m5 0L15.5 17m-1.25-3.333h-5M8 17l1.25-3.333"/>`), g.Group(children),
	)
}

func LetterACircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/><path d="M14 12.833L12 7.5l-2 5.333m4 0l1 2.667m-1-2.667h-4M9 15.5l1-2.667"/></g>`), g.Group(children),
	)
}

func LetterACircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M12.918 12.083h-1.836L12 9.636z"/><path d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12m10.452-4.763a.75.75 0 0 0-1.404 0l-3 8a.75.75 0 1 0 1.404.526l.818-2.18h2.96l.818 2.18a.75.75 0 1 0 1.404-.526z"/></g>`), g.Group(children),
	)
}

func LetterADiamond(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M14 12.833L12 7.5l-2 5.333m4 0l1 2.667m-1-2.667h-4M9 15.5l1-2.667"/><path d="M2.707 10.295a2.41 2.41 0 0 0 0 3.41l7.588 7.588a2.41 2.41 0 0 0 3.41 0l7.588-7.588a2.41 2.41 0 0 0 0-3.41l-7.588-7.588a2.41 2.41 0 0 0-3.41 0z"/></g>`), g.Group(children),
	)
}

func LetterADiamondSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M12.918 12.083h-1.836L12 9.636z"/><path d="M10.79 1.49a3.16 3.16 0 0 1 3.445.687l7.588 7.588a3.16 3.16 0 0 1 0 4.47l-7.588 7.588a3.16 3.16 0 0 1-4.47 0l-7.588-7.588a3.16 3.16 0 0 1 0-4.47l7.588-7.589a3.2 3.2 0 0 1 1.025-.685m1.912 5.747a.75.75 0 0 0-1.404 0l-3 8a.75.75 0 1 0 1.404.526l.818-2.18h2.96l.818 2.18a.75.75 0 1 0 1.404-.526z"/></g>`), g.Group(children),
	)
}

func LetterAHexagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M14 12.833L12 7.5l-2 5.333m4 0l1 2.667m-1-2.667h-4M9 15.5l1-2.667"/><path d="M20.5 15.8V8.2a1.91 1.91 0 0 0-.944-1.645l-6.612-3.8a1.88 1.88 0 0 0-1.888 0l-6.612 3.8A1.9 1.9 0 0 0 3.5 8.2v7.602a1.91 1.91 0 0 0 .944 1.644l6.612 3.8a1.88 1.88 0 0 0 1.888 0l6.612-3.8A1.9 1.9 0 0 0 20.5 15.8"/></g>`), g.Group(children),
	)
}

func LetterAHexagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M12.918 12.083h-1.836L12 9.636z"/><path d="M10.68 2.105a2.63 2.63 0 0 1 2.64 0l.001.001l6.611 3.8A2.65 2.65 0 0 1 21.25 8.2v7.603a2.66 2.66 0 0 1-1.318 2.291l-.003.002l-6.608 3.799h-.002a2.63 2.63 0 0 1-2.639 0h-.001l-6.608-3.8h-.003A2.64 2.64 0 0 1 2.75 15.8V8.198a2.66 2.66 0 0 1 1.318-2.291l.003-.002zm2.022 5.132a.75.75 0 0 0-1.404 0l-3 8a.75.75 0 1 0 1.404.526l.818-2.18h2.96l.818 2.18a.75.75 0 1 0 1.404-.526z"/></g>`), g.Group(children),
	)
}

func LetterAOctagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M14 12.833L12 7.5l-2 5.333m4 0l1 2.667m-1-2.667h-4M9 15.5l1-2.667"/><path d="M7.805 3.469C8.16 3.115 8.451 3 8.937 3h6.126c.486 0 .778.115 1.132.469l4.336 4.336c.354.354.469.646.469 1.132v6.126c0 .5-.125.788-.469 1.132l-4.336 4.336c-.354.354-.646.469-1.132.469H8.937c-.5 0-.788-.125-1.132-.469L3.47 16.195c-.355-.355-.47-.646-.47-1.132V8.937c0-.5.125-.788.469-1.132z"/></g>`), g.Group(children),
	)
}

func LetterAOctagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M12.918 12.083h-1.836L12 9.636z"/><path d="M8.037 2.408a2.3 2.3 0 0 1 .9-.158h6.126c.302 0 .602.036.9.158s.54.31.762.53l4.337 4.337c.22.221.408.463.53.762c.123.298.158.598.158.9v6.126c0 .313-.039.616-.163.914a2.3 2.3 0 0 1-.525.748l-4.337 4.337a2.3 2.3 0 0 1-.762.53a2.3 2.3 0 0 1-.9.158H8.937c-.313 0-.616-.039-.914-.163a2.3 2.3 0 0 1-.748-.525l-4.337-4.337a2.3 2.3 0 0 1-.53-.762a2.3 2.3 0 0 1-.158-.9V8.937c0-.313.039-.616.163-.914a2.3 2.3 0 0 1 .525-.748l4.337-4.337c.221-.22.463-.408.762-.53m4.665 4.829a.75.75 0 0 0-1.404 0l-3 8a.75.75 0 1 0 1.404.526l.818-2.18h2.96l.818 2.18a.75.75 0 1 0 1.404-.526z"/></g>`), g.Group(children),
	)
}

func LetterASolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M11.75 6a1 1 0 0 0-.936.649l-3.75 10a1 1 0 1 0 1.872.702l1.007-2.684h3.614l1.007 2.684a1 1 0 0 0 1.872-.702l-3.75-10A1 1 0 0 0 11.75 6m0 3.848l1.057 2.819h-2.114z"/>`), g.Group(children),
	)
}

func LetterASquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M14 12.833L12 7.5l-2 5.333m4 0l1 2.667m-1-2.667h-4M9 15.5l1-2.667"/><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/></g>`), g.Group(children),
	)
}

func LetterASquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M12.918 12.083h-1.836L12 9.636z"/><path d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057m3.335 4.987a.75.75 0 0 0-1.404 0l-3 8a.75.75 0 1 0 1.404.526l.818-2.18h2.96l.818 2.18a.75.75 0 1 0 1.404-.526z"/></g>`), g.Group(children),
	)
}

func LetterAWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M14 12.833L12 7.5l-2 5.333m4 0l1 2.667m-1-2.667h-4M9 15.5l1-2.667"/><path d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83"/></g>`), g.Group(children),
	)
}

func LetterAWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M12.918 12.083h-1.836L12 9.636z"/><path d="M10.565 2.075a3.33 3.33 0 0 1 2.87 0c.394.189.755.497 1.26.928l.079.066c.48.41.939.604 1.58.655l.102.008c.662.053 1.135.09 1.547.236a3.33 3.33 0 0 1 2.03 2.029c.145.412.182.885.235 1.547l.008.102c.051.641.246 1.1.655 1.58l.066.078c.431.506.74.867.928 1.261a3.33 3.33 0 0 1 0 2.87c-.189.394-.497.755-.928 1.26l-.066.079c-.418.49-.605.951-.655 1.58l-.008.102c-.053.662-.09 1.135-.236 1.547a3.33 3.33 0 0 1-2.029 2.03c-.412.145-.885.182-1.547.235l-.102.008c-.641.051-1.1.246-1.58.655l-.079.066c-.505.431-.866.74-1.26.928a3.33 3.33 0 0 1-2.87 0c-.394-.189-.755-.497-1.26-.928l-.079-.066a2.56 2.56 0 0 0-1.58-.655l-.102-.008c-.662-.053-1.135-.09-1.547-.236a3.33 3.33 0 0 1-2.03-2.029c-.145-.412-.182-.885-.235-1.547l-.008-.102a2.56 2.56 0 0 0-.655-1.58l-.066-.079c-.431-.505-.74-.866-.928-1.26a3.33 3.33 0 0 1 0-2.87c.189-.394.497-.755.928-1.26l.066-.079a2.56 2.56 0 0 0 .655-1.58l.008-.102c.053-.662.09-1.135.236-1.547a3.33 3.33 0 0 1 2.029-2.03c.412-.145.885-.182 1.547-.235l.102-.008a2.56 2.56 0 0 0 1.58-.655l.078-.066c.506-.431.867-.74 1.261-.928m2.137 5.162a.75.75 0 0 0-1.404 0l-3 8a.75.75 0 1 0 1.404.526l.818-2.18h2.96l.818 2.18a.75.75 0 1 0 1.404-.526z"/></g>`), g.Group(children),
	)
}

func LetterB(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9 12V7h4.589c2.74 0 3.124 4.072.57 5M9 12v5h4.589c2.74 0 3.124-4.072.57-5M9 12h5.158"/>`), g.Group(children),
	)
}

func LetterBCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/><path d="M9.5 12V8h3.671c2.192 0 2.5 3.258.456 4M9.5 12v4h3.671c2.192 0 2.5-3.258.456-4M9.5 12h4.127"/></g>`), g.Group(children),
	)
}

func LetterBCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M14.241 9.8c.064.602-.204 1.191-.761 1.45h-3.23v-2.5h2.921c.62 0 1.005.425 1.07 1.05m-3.991 5.45v-2.5h3.23c.557.259.825.848.761 1.45c-.065.625-.45 1.05-1.07 1.05z"/><path d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12M9.5 7.25a.75.75 0 0 0-.75.75v8c0 .414.336.75.75.75h3.671c1.572 0 2.437-1.204 2.562-2.393c.085-.806-.153-1.706-.767-2.357c.614-.651.852-1.551.767-2.357c-.125-1.19-.99-2.393-2.562-2.393z"/></g>`), g.Group(children),
	)
}

func LetterBDiamond(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9.5 12V8h3.671c2.192 0 2.5 3.258.456 4M9.5 12v4h3.671c2.192 0 2.5-3.258.456-4M9.5 12h4.127"/><path d="M2.707 10.295a2.41 2.41 0 0 0 0 3.41l7.588 7.588a2.41 2.41 0 0 0 3.41 0l7.588-7.588a2.41 2.41 0 0 0 0-3.41l-7.588-7.588a2.41 2.41 0 0 0-3.41 0z"/></g>`), g.Group(children),
	)
}

func LetterBDiamondSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M14.241 9.8c.064.602-.204 1.191-.761 1.45h-3.23v-2.5h2.921c.62 0 1.005.425 1.07 1.05m-3.991 5.45v-2.5h3.23c.557.259.825.848.761 1.45c-.065.625-.45 1.05-1.07 1.05z"/><path d="M10.79 1.49a3.16 3.16 0 0 1 3.445.687l7.588 7.588a3.16 3.16 0 0 1 0 4.47l-7.588 7.588a3.16 3.16 0 0 1-4.47 0l-7.588-7.588a3.16 3.16 0 0 1 0-4.47l7.588-7.589a3.2 3.2 0 0 1 1.025-.685M9.5 7.25a.75.75 0 0 0-.75.75v8c0 .414.336.75.75.75h3.671c1.572 0 2.437-1.204 2.562-2.393c.085-.806-.153-1.706-.767-2.357c.614-.651.852-1.551.767-2.357c-.125-1.19-.99-2.393-2.562-2.393z"/></g>`), g.Group(children),
	)
}

func LetterBHexagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9.5 12V8h3.671c2.192 0 2.5 3.258.456 4M9.5 12v4h3.671c2.192 0 2.5-3.258.456-4M9.5 12h4.127"/><path d="M20.5 15.8V8.2a1.91 1.91 0 0 0-.944-1.645l-6.612-3.8a1.88 1.88 0 0 0-1.888 0l-6.612 3.8A1.9 1.9 0 0 0 3.5 8.2v7.602a1.91 1.91 0 0 0 .944 1.644l6.612 3.8a1.88 1.88 0 0 0 1.888 0l6.612-3.8A1.9 1.9 0 0 0 20.5 15.8"/></g>`), g.Group(children),
	)
}

func LetterBHexagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M14.241 9.8c.064.602-.204 1.191-.761 1.45h-3.23v-2.5h2.921c.62 0 1.005.425 1.07 1.05m-3.991 5.45v-2.5h3.23c.557.259.825.848.761 1.45c-.065.625-.45 1.05-1.07 1.05z"/><path d="M10.68 2.105a2.63 2.63 0 0 1 2.64 0l.001.001l6.611 3.8A2.65 2.65 0 0 1 21.25 8.2v7.603a2.66 2.66 0 0 1-1.318 2.291l-.003.002l-6.608 3.799h-.002a2.63 2.63 0 0 1-2.639 0h-.001l-6.608-3.8h-.003A2.64 2.64 0 0 1 2.75 15.8V8.198a2.66 2.66 0 0 1 1.318-2.291l.003-.002zM9.5 7.25a.75.75 0 0 0-.75.75v8c0 .414.336.75.75.75h3.671c1.572 0 2.437-1.204 2.562-2.393c.085-.806-.153-1.706-.767-2.357c.614-.651.852-1.551.767-2.357c-.125-1.19-.99-2.393-2.562-2.393z"/></g>`), g.Group(children),
	)
}

func LetterBOctagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9.5 12V8h3.671c2.192 0 2.5 3.258.456 4M9.5 12v4h3.671c2.192 0 2.5-3.258.456-4M9.5 12h4.127"/><path d="M7.805 3.469C8.16 3.115 8.451 3 8.937 3h6.126c.486 0 .778.115 1.132.469l4.336 4.336c.354.354.469.646.469 1.132v6.126c0 .5-.125.788-.469 1.132l-4.336 4.336c-.354.354-.646.469-1.132.469H8.937c-.5 0-.788-.125-1.132-.469L3.47 16.195c-.355-.355-.47-.646-.47-1.132V8.937c0-.5.125-.788.469-1.132z"/></g>`), g.Group(children),
	)
}

func LetterBOctagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M14.241 9.8c.064.602-.204 1.191-.761 1.45h-3.23v-2.5h2.921c.62 0 1.005.425 1.07 1.05m-3.991 5.45v-2.5h3.23c.557.259.825.848.761 1.45c-.065.625-.45 1.05-1.07 1.05z"/><path d="M8.037 2.408a2.3 2.3 0 0 1 .9-.158h6.126c.302 0 .602.036.9.158s.54.31.762.53l4.337 4.337c.22.221.408.463.53.762c.123.298.158.598.158.9v6.126c0 .313-.039.616-.163.914a2.3 2.3 0 0 1-.525.748l-4.337 4.337a2.3 2.3 0 0 1-.762.53a2.3 2.3 0 0 1-.9.158H8.937c-.313 0-.616-.039-.914-.163a2.3 2.3 0 0 1-.748-.525l-4.337-4.337a2.3 2.3 0 0 1-.53-.762a2.3 2.3 0 0 1-.158-.9V8.937c0-.313.039-.616.163-.914a2.3 2.3 0 0 1 .525-.748l4.337-4.337c.221-.22.463-.408.762-.53M9.5 7.25a.75.75 0 0 0-.75.75v8c0 .414.336.75.75.75h3.671c1.572 0 2.437-1.204 2.562-2.393c.085-.806-.153-1.706-.767-2.357c.614-.651.852-1.551.767-2.357c-.125-1.19-.99-2.393-2.562-2.393z"/></g>`), g.Group(children),
	)
}

func LetterBSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9 6a1 1 0 0 0-1 1v10a1 1 0 0 0 1 1h4.589c2.006 0 3.106-1.54 3.265-3.047c.105-1.006-.183-2.127-.937-2.953c.754-.826 1.042-1.947.937-2.953C16.694 7.54 15.595 6 13.589 6zm1 5V8h3.589c.384 0 .677.133.885.346c.211.216.35.53.39.91c.077.727-.243 1.431-.903 1.744zm0 5v-3h3.96c.66.313.98 1.017.904 1.743c-.04.382-.179.695-.39.911c-.208.213-.501.346-.885.346z"/>`), g.Group(children),
	)
}

func LetterBSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9.5 12V8h3.671c2.192 0 2.5 3.258.456 4M9.5 12v4h3.671c2.192 0 2.5-3.258.456-4M9.5 12h4.127"/><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/></g>`), g.Group(children),
	)
}

func LetterBSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M14.241 9.8c.064.602-.204 1.191-.761 1.45h-3.23v-2.5h2.921c.62 0 1.005.425 1.07 1.05m-3.991 5.45v-2.5h3.23c.557.259.825.848.761 1.45c-.065.625-.45 1.05-1.07 1.05z"/><path d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057m.133 5a.75.75 0 0 0-.75.75v8c0 .414.336.75.75.75h3.671c1.572 0 2.437-1.204 2.562-2.393c.085-.806-.153-1.706-.767-2.357c.614-.651.852-1.551.767-2.357c-.125-1.19-.99-2.393-2.562-2.393z"/></g>`), g.Group(children),
	)
}

func LetterBWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9.5 12V8h3.671c2.192 0 2.5 3.258.456 4M9.5 12v4h3.671c2.192 0 2.5-3.258.456-4M9.5 12h4.127"/><path d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83"/></g>`), g.Group(children),
	)
}

func LetterBWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M14.241 9.8c.064.602-.204 1.191-.761 1.45h-3.23v-2.5h2.921c.62 0 1.005.425 1.07 1.05m-3.991 5.45v-2.5h3.23c.557.259.825.848.761 1.45c-.065.625-.45 1.05-1.07 1.05z"/><path d="M10.565 2.075a3.33 3.33 0 0 1 2.87 0c.394.189.755.497 1.26.928l.079.066c.48.41.939.604 1.58.655l.102.008c.662.053 1.135.09 1.547.236a3.33 3.33 0 0 1 2.03 2.029c.145.412.182.885.235 1.547l.008.102c.051.641.246 1.1.655 1.58l.066.078c.431.506.74.867.928 1.261a3.33 3.33 0 0 1 0 2.87c-.189.394-.497.755-.928 1.26l-.066.079c-.418.49-.605.951-.655 1.58l-.008.102c-.053.662-.09 1.135-.236 1.547a3.33 3.33 0 0 1-2.029 2.03c-.412.145-.885.182-1.547.235l-.102.008c-.641.051-1.1.246-1.58.655l-.079.066c-.505.431-.866.74-1.26.928a3.33 3.33 0 0 1-2.87 0c-.394-.189-.755-.497-1.26-.928l-.079-.066a2.56 2.56 0 0 0-1.58-.655l-.102-.008c-.662-.053-1.135-.09-1.547-.236a3.33 3.33 0 0 1-2.03-2.029c-.145-.412-.182-.885-.235-1.547l-.008-.102a2.56 2.56 0 0 0-.655-1.58l-.066-.079c-.431-.505-.74-.866-.928-1.26a3.33 3.33 0 0 1 0-2.87c.189-.394.497-.755.928-1.26l.066-.079a2.56 2.56 0 0 0 .655-1.58l.008-.102c.053-.662.09-1.135.236-1.547a3.33 3.33 0 0 1 2.029-2.03c.412-.145.885-.182 1.547-.235l.102-.008a2.56 2.56 0 0 0 1.58-.655l.078-.066c.506-.431.867-.74 1.261-.928M9.5 7.25a.75.75 0 0 0-.75.75v8c0 .414.336.75.75.75h3.671c1.572 0 2.437-1.204 2.562-2.393c.085-.806-.153-1.706-.767-2.357c.614-.651.852-1.551.767-2.357c-.125-1.19-.99-2.393-2.562-2.393z"/></g>`), g.Group(children),
	)
}

func LetterC(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M15.5 9.5v-.312C15.5 7.979 14.52 7 13.313 7H10.5A2.5 2.5 0 0 0 8 9.5v5a2.5 2.5 0 0 0 2.5 2.5h2.813c1.208 0 2.187-.98 2.187-2.187V14.5"/>`), g.Group(children),
	)
}

func LetterCCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/><path d="M15 10v-.25A1.75 1.75 0 0 0 13.25 8H11a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h2.25A1.75 1.75 0 0 0 15 14.25V14"/></g>`), g.Group(children),
	)
}

func LetterCCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12m7.5-2c0-.69.56-1.25 1.25-1.25h2.25a1 1 0 0 1 1 1V10a.75.75 0 0 0 1.5 0v-.25a2.5 2.5 0 0 0-2.5-2.5H11A2.75 2.75 0 0 0 8.25 10v4A2.75 2.75 0 0 0 11 16.75h2.25a2.5 2.5 0 0 0 2.5-2.5V14a.75.75 0 0 0-1.5 0v.25a1 1 0 0 1-1 1H11c-.69 0-1.25-.56-1.25-1.25z"/>`), g.Group(children),
	)
}

func LetterCDiamond(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M15 10v-.25A1.75 1.75 0 0 0 13.25 8H11a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h2.25A1.75 1.75 0 0 0 15 14.25V14"/><path d="M2.707 10.295a2.41 2.41 0 0 0 0 3.41l7.588 7.588a2.41 2.41 0 0 0 3.41 0l7.588-7.588a2.41 2.41 0 0 0 0-3.41l-7.588-7.588a2.41 2.41 0 0 0-3.41 0z"/></g>`), g.Group(children),
	)
}

func LetterCDiamondSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.79 1.49a3.16 3.16 0 0 1 3.445.687l7.588 7.588a3.16 3.16 0 0 1 0 4.47l-7.588 7.588a3.16 3.16 0 0 1-4.47 0l-7.588-7.588a3.16 3.16 0 0 1 0-4.47l7.588-7.589a3.2 3.2 0 0 1 1.025-.685M9.75 10c0-.69.56-1.25 1.25-1.25h2.25a1 1 0 0 1 1 1V10a.75.75 0 0 0 1.5 0v-.25a2.5 2.5 0 0 0-2.5-2.5H11A2.75 2.75 0 0 0 8.25 10v4A2.75 2.75 0 0 0 11 16.75h2.25a2.5 2.5 0 0 0 2.5-2.5V14a.75.75 0 0 0-1.5 0v.25a1 1 0 0 1-1 1H11c-.69 0-1.25-.56-1.25-1.25z"/>`), g.Group(children),
	)
}

func LetterCHexagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M15 10v-.25A1.75 1.75 0 0 0 13.25 8H11a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h2.25A1.75 1.75 0 0 0 15 14.25V14"/><path d="M20.5 15.8V8.2a1.91 1.91 0 0 0-.944-1.645l-6.612-3.8a1.88 1.88 0 0 0-1.888 0l-6.612 3.8A1.9 1.9 0 0 0 3.5 8.2v7.602a1.91 1.91 0 0 0 .944 1.644l6.612 3.8a1.88 1.88 0 0 0 1.888 0l6.612-3.8A1.9 1.9 0 0 0 20.5 15.8"/></g>`), g.Group(children),
	)
}

func LetterCHexagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.68 2.105a2.63 2.63 0 0 1 2.64 0l.001.001l6.611 3.8A2.65 2.65 0 0 1 21.25 8.2v7.603a2.66 2.66 0 0 1-1.318 2.291l-.003.002l-6.608 3.799h-.002a2.63 2.63 0 0 1-2.639 0h-.001l-6.608-3.8h-.003A2.64 2.64 0 0 1 2.75 15.8V8.198a2.66 2.66 0 0 1 1.318-2.291l.003-.002zM9.75 10c0-.69.56-1.25 1.25-1.25h2.25a1 1 0 0 1 1 1V10a.75.75 0 0 0 1.5 0v-.25a2.5 2.5 0 0 0-2.5-2.5H11A2.75 2.75 0 0 0 8.25 10v4A2.75 2.75 0 0 0 11 16.75h2.25a2.5 2.5 0 0 0 2.5-2.5V14a.75.75 0 0 0-1.5 0v.25a1 1 0 0 1-1 1H11c-.69 0-1.25-.56-1.25-1.25z"/>`), g.Group(children),
	)
}

func LetterCOctagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M15 10v-.25A1.75 1.75 0 0 0 13.25 8H11a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h2.25A1.75 1.75 0 0 0 15 14.25V14"/><path d="M7.805 3.469C8.16 3.115 8.451 3 8.937 3h6.126c.486 0 .778.115 1.132.469l4.336 4.336c.354.354.469.646.469 1.132v6.126c0 .5-.125.788-.469 1.132l-4.336 4.336c-.354.354-.646.469-1.132.469H8.937c-.5 0-.788-.125-1.132-.469L3.47 16.195c-.355-.355-.47-.646-.47-1.132V8.937c0-.5.125-.788.469-1.132z"/></g>`), g.Group(children),
	)
}

func LetterCOctagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.037 2.408a2.3 2.3 0 0 1 .9-.158h6.126c.302 0 .602.036.9.158s.54.31.762.53l4.337 4.337c.22.221.408.463.53.762c.123.298.158.598.158.9v6.126c0 .313-.039.616-.163.914a2.3 2.3 0 0 1-.525.748l-4.337 4.337a2.3 2.3 0 0 1-.762.53a2.3 2.3 0 0 1-.9.158H8.937c-.313 0-.616-.039-.914-.163a2.3 2.3 0 0 1-.748-.525l-4.337-4.337a2.3 2.3 0 0 1-.53-.762a2.3 2.3 0 0 1-.158-.9V8.937c0-.313.039-.616.163-.914a2.3 2.3 0 0 1 .525-.748l4.337-4.337c.221-.22.463-.408.762-.53M9.75 10c0-.69.56-1.25 1.25-1.25h2.25a1 1 0 0 1 1 1V10a.75.75 0 0 0 1.5 0v-.25a2.5 2.5 0 0 0-2.5-2.5H11A2.75 2.75 0 0 0 8.25 10v4A2.75 2.75 0 0 0 11 16.75h2.25a2.5 2.5 0 0 0 2.5-2.5V14a.75.75 0 0 0-1.5 0v.25a1 1 0 0 1-1 1H11c-.69 0-1.25-.56-1.25-1.25z"/>`), g.Group(children),
	)
}

func LetterCSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.5 6A3.5 3.5 0 0 0 7 9.5v5a3.5 3.5 0 0 0 3.5 3.5h2.813a3.19 3.19 0 0 0 3.187-3.187V14.5a1 1 0 1 0-2 0v.313c0 .655-.532 1.187-1.187 1.187H10.5A1.5 1.5 0 0 1 9 14.5v-5A1.5 1.5 0 0 1 10.5 8h2.813c.655 0 1.187.532 1.187 1.188V9.5a1 1 0 1 0 2 0v-.312A3.19 3.19 0 0 0 13.313 6z"/>`), g.Group(children),
	)
}

func LetterCSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M15 10v-.25A1.75 1.75 0 0 0 13.25 8H11a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h2.25A1.75 1.75 0 0 0 15 14.25V14"/><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/></g>`), g.Group(children),
	)
}

func LetterCSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057M9.75 10c0-.69.56-1.25 1.25-1.25h2.25a1 1 0 0 1 1 1V10a.75.75 0 0 0 1.5 0v-.25a2.5 2.5 0 0 0-2.5-2.5H11A2.75 2.75 0 0 0 8.25 10v4A2.75 2.75 0 0 0 11 16.75h2.25a2.5 2.5 0 0 0 2.5-2.5V14a.75.75 0 0 0-1.5 0v.25a1 1 0 0 1-1 1H11c-.69 0-1.25-.56-1.25-1.25z"/>`), g.Group(children),
	)
}

func LetterCWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M15 10v-.25A1.75 1.75 0 0 0 13.25 8H11a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h2.25A1.75 1.75 0 0 0 15 14.25V14"/><path d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83"/></g>`), g.Group(children),
	)
}

func LetterCWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.565 2.075a3.33 3.33 0 0 1 2.87 0c.394.189.755.497 1.26.928l.079.066c.48.41.939.604 1.58.655l.102.008c.662.053 1.135.09 1.547.236a3.33 3.33 0 0 1 2.03 2.029c.145.412.182.885.235 1.547l.008.102c.051.641.246 1.1.655 1.58l.066.078c.431.506.74.867.928 1.261a3.33 3.33 0 0 1 0 2.87c-.189.394-.497.755-.928 1.26l-.066.079c-.418.49-.605.951-.655 1.58l-.008.102c-.053.662-.09 1.135-.236 1.547a3.33 3.33 0 0 1-2.029 2.03c-.412.145-.885.182-1.547.235l-.102.008c-.641.051-1.1.246-1.58.655l-.079.066c-.505.431-.866.74-1.26.928a3.33 3.33 0 0 1-2.87 0c-.394-.189-.755-.497-1.26-.928l-.079-.066a2.56 2.56 0 0 0-1.58-.655l-.102-.008c-.662-.053-1.135-.09-1.547-.236a3.33 3.33 0 0 1-2.03-2.029c-.145-.412-.182-.885-.235-1.547l-.008-.102a2.56 2.56 0 0 0-.655-1.58l-.066-.079c-.431-.505-.74-.866-.928-1.26a3.33 3.33 0 0 1 0-2.87c.189-.394.497-.755.928-1.26l.066-.079a2.56 2.56 0 0 0 .655-1.58l.008-.102c.053-.662.09-1.135.236-1.547a3.33 3.33 0 0 1 2.029-2.03c.412-.145.885-.182 1.547-.235l.102-.008a2.56 2.56 0 0 0 1.58-.655l.078-.066c.506-.431.867-.74 1.261-.928M9.75 10c0-.69.56-1.25 1.25-1.25h2.25a1 1 0 0 1 1 1V10a.75.75 0 0 0 1.5 0v-.25a2.5 2.5 0 0 0-2.5-2.5H11A2.75 2.75 0 0 0 8.25 10v4A2.75 2.75 0 0 0 11 16.75h2.25a2.5 2.5 0 0 0 2.5-2.5V14a.75.75 0 0 0-1.5 0v.25a1 1 0 0 1-1 1H11c-.69 0-1.25-.56-1.25-1.25z"/>`), g.Group(children),
	)
}

func LetterD(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M8 16.375v-8.75C8 7.28 8.28 7 8.625 7h2.5a4.375 4.375 0 0 1 4.375 4.375v1.25A4.375 4.375 0 0 1 11.125 17h-2.5A.625.625 0 0 1 8 16.375"/>`), g.Group(children),
	)
}

func LetterDCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/><path d="M9.5 15.5v-7A.5.5 0 0 1 10 8h2a3.5 3.5 0 0 1 3.5 3.5v1A3.5 3.5 0 0 1 12 16h-2a.5.5 0 0 1-.5-.5"/></g>`), g.Group(children),
	)
}

func LetterDCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M12 15.25h-1.75v-6.5H12a2.75 2.75 0 0 1 2.75 2.75v1A2.75 2.75 0 0 1 12 15.25"/><path d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12M10 7.25c-.69 0-1.25.56-1.25 1.25v7c0 .69.56 1.25 1.25 1.25h2a4.25 4.25 0 0 0 4.25-4.25v-1A4.25 4.25 0 0 0 12 7.25z"/></g>`), g.Group(children),
	)
}

func LetterDDiamond(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9.5 15.5v-7A.5.5 0 0 1 10 8h2a3.5 3.5 0 0 1 3.5 3.5v1A3.5 3.5 0 0 1 12 16h-2a.5.5 0 0 1-.5-.5"/><path d="M2.707 10.295a2.41 2.41 0 0 0 0 3.41l7.588 7.588a2.41 2.41 0 0 0 3.41 0l7.588-7.588a2.41 2.41 0 0 0 0-3.41l-7.588-7.588a2.41 2.41 0 0 0-3.41 0z"/></g>`), g.Group(children),
	)
}

func LetterDDiamondSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M12 15.25h-1.75v-6.5H12a2.75 2.75 0 0 1 2.75 2.75v1A2.75 2.75 0 0 1 12 15.25"/><path d="M10.79 1.49a3.16 3.16 0 0 1 3.445.687l7.588 7.588a3.16 3.16 0 0 1 0 4.47l-7.588 7.588a3.16 3.16 0 0 1-4.47 0l-7.588-7.588a3.16 3.16 0 0 1 0-4.47l7.588-7.589a3.2 3.2 0 0 1 1.025-.685M10 7.25c-.69 0-1.25.56-1.25 1.25v7c0 .69.56 1.25 1.25 1.25h2a4.25 4.25 0 0 0 4.25-4.25v-1A4.25 4.25 0 0 0 12 7.25z"/></g>`), g.Group(children),
	)
}

func LetterDHexagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9.5 15.5v-7A.5.5 0 0 1 10 8h2a3.5 3.5 0 0 1 3.5 3.5v1A3.5 3.5 0 0 1 12 16h-2a.5.5 0 0 1-.5-.5"/><path d="M20.5 15.8V8.2a1.91 1.91 0 0 0-.944-1.645l-6.612-3.8a1.88 1.88 0 0 0-1.888 0l-6.612 3.8A1.9 1.9 0 0 0 3.5 8.2v7.602a1.91 1.91 0 0 0 .944 1.644l6.612 3.8a1.88 1.88 0 0 0 1.888 0l6.612-3.8A1.9 1.9 0 0 0 20.5 15.8"/></g>`), g.Group(children),
	)
}

func LetterDHexagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M10.25 15.25v-6.5H12a2.75 2.75 0 0 1 2.75 2.75v1A2.75 2.75 0 0 1 12 15.25z"/><path d="M10.68 2.105a2.63 2.63 0 0 1 2.64 0l.001.001l6.611 3.8A2.65 2.65 0 0 1 21.25 8.2v7.603a2.66 2.66 0 0 1-1.318 2.291l-.003.002l-6.608 3.799h-.002a2.63 2.63 0 0 1-2.639 0h-.001l-6.608-3.8h-.003A2.64 2.64 0 0 1 2.75 15.8V8.198a2.66 2.66 0 0 1 1.318-2.291l.003-.002zM10 7.25c-.69 0-1.25.56-1.25 1.25v7c0 .69.56 1.25 1.25 1.25h2a4.25 4.25 0 0 0 4.25-4.25v-1A4.25 4.25 0 0 0 12 7.25z"/></g>`), g.Group(children),
	)
}

func LetterDOctagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9.5 15.5v-7A.5.5 0 0 1 10 8h2a3.5 3.5 0 0 1 3.5 3.5v1A3.5 3.5 0 0 1 12 16h-2a.5.5 0 0 1-.5-.5"/><path d="M7.805 3.469C8.16 3.115 8.451 3 8.937 3h6.126c.486 0 .778.115 1.132.469l4.336 4.336c.354.354.469.646.469 1.132v6.126c0 .5-.125.788-.469 1.132l-4.336 4.336c-.354.354-.646.469-1.132.469H8.937c-.5 0-.788-.125-1.132-.469L3.47 16.195c-.355-.355-.47-.646-.47-1.132V8.937c0-.5.125-.788.469-1.132z"/></g>`), g.Group(children),
	)
}

func LetterDOctagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M10.25 15.25v-6.5H12a2.75 2.75 0 0 1 2.75 2.75v1A2.75 2.75 0 0 1 12 15.25z"/><path d="M8.037 2.408a2.3 2.3 0 0 1 .9-.158h6.126c.302 0 .602.036.9.158s.54.31.762.53l4.337 4.337c.22.221.408.463.53.762c.123.298.158.598.158.9v6.126c0 .313-.039.616-.163.914a2.3 2.3 0 0 1-.525.748l-4.337 4.337a2.3 2.3 0 0 1-.762.53a2.3 2.3 0 0 1-.9.158H8.937c-.313 0-.616-.039-.914-.163a2.3 2.3 0 0 1-.748-.525l-4.337-4.337a2.3 2.3 0 0 1-.53-.762a2.3 2.3 0 0 1-.158-.9V8.937c0-.313.039-.616.163-.914a2.3 2.3 0 0 1 .525-.748l4.337-4.337c.221-.22.463-.408.762-.53M10 7.25c-.69 0-1.25.56-1.25 1.25v7c0 .69.56 1.25 1.25 1.25h2a4.25 4.25 0 0 0 4.25-4.25v-1A4.25 4.25 0 0 0 12 7.25z"/></g>`), g.Group(children),
	)
}

func LetterDSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.625 6C7.728 6 7 6.728 7 7.625v8.75C7 17.273 7.728 18 8.625 18h2.5a5.375 5.375 0 0 0 5.375-5.375v-1.25A5.375 5.375 0 0 0 11.125 6zM9 16V8h2.125a3.375 3.375 0 0 1 3.375 3.375v1.25A3.375 3.375 0 0 1 11.125 16z"/>`), g.Group(children),
	)
}

func LetterDSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9.5 15.5v-7A.5.5 0 0 1 10 8h2a3.5 3.5 0 0 1 3.5 3.5v1A3.5 3.5 0 0 1 12 16h-2a.5.5 0 0 1-.5-.5"/><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/></g>`), g.Group(children),
	)
}

func LetterDSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M10.25 15.25v-6.5H12a2.75 2.75 0 0 1 2.75 2.75v1A2.75 2.75 0 0 1 12 15.25z"/><path d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057m.633 5c-.69 0-1.25.56-1.25 1.25v7c0 .69.56 1.25 1.25 1.25h2a4.25 4.25 0 0 0 4.25-4.25v-1A4.25 4.25 0 0 0 12 7.25z"/></g>`), g.Group(children),
	)
}

func LetterDWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9.5 15.5v-7A.5.5 0 0 1 10 8h2a3.5 3.5 0 0 1 3.5 3.5v1A3.5 3.5 0 0 1 12 16h-2a.5.5 0 0 1-.5-.5"/><path d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83"/></g>`), g.Group(children),
	)
}

func LetterDWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M10.25 15.25v-6.5H12a2.75 2.75 0 0 1 2.75 2.75v1A2.75 2.75 0 0 1 12 15.25z"/><path d="M10.565 2.075a3.33 3.33 0 0 1 2.87 0c.394.189.755.497 1.26.928l.079.066c.48.41.939.604 1.58.655l.102.008c.662.053 1.135.09 1.547.236a3.33 3.33 0 0 1 2.03 2.029c.145.412.182.885.235 1.547l.008.102c.051.641.246 1.1.655 1.58l.066.078c.431.506.74.867.928 1.261a3.33 3.33 0 0 1 0 2.87c-.189.394-.497.755-.928 1.26l-.066.079c-.418.49-.605.951-.655 1.58l-.008.102c-.053.662-.09 1.135-.236 1.547a3.33 3.33 0 0 1-2.029 2.03c-.412.145-.885.182-1.547.235l-.102.008c-.641.051-1.1.246-1.58.655l-.079.066c-.505.431-.866.74-1.26.928a3.33 3.33 0 0 1-2.87 0c-.394-.189-.755-.497-1.26-.928l-.079-.066a2.56 2.56 0 0 0-1.58-.655l-.102-.008c-.662-.053-1.135-.09-1.547-.236a3.33 3.33 0 0 1-2.03-2.029c-.145-.412-.182-.885-.235-1.547l-.008-.102a2.56 2.56 0 0 0-.655-1.58l-.066-.079c-.431-.505-.74-.866-.928-1.26a3.33 3.33 0 0 1 0-2.87c.189-.394.497-.755.928-1.26l.066-.079a2.56 2.56 0 0 0 .655-1.58l.008-.102c.053-.662.09-1.135.236-1.547a3.33 3.33 0 0 1 2.029-2.03c.412-.145.885-.182 1.547-.235l.102-.008a2.56 2.56 0 0 0 1.58-.655l.078-.066c.506-.431.867-.74 1.261-.928M10 7.25c-.69 0-1.25.56-1.25 1.25v7c0 .69.56 1.25 1.25 1.25h2a4.25 4.25 0 0 0 4.25-4.25v-1A4.25 4.25 0 0 0 12 7.25z"/></g>`), g.Group(children),
	)
}

func LetterE(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M15.25 7H9v5m6.25 5H9v-5m0 0h5"/>`), g.Group(children),
	)
}

func LetterECircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/><path d="M14.5 8h-5v4m5 4h-5v-4m0 0h4"/></g>`), g.Group(children),
	)
}

func LetterECircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12M9.5 7.25a.75.75 0 0 0-.75.75v8c0 .414.336.75.75.75h5a.75.75 0 0 0 0-1.5h-4.25v-2.5h3.25a.75.75 0 0 0 0-1.5h-3.25v-2.5h4.25a.75.75 0 0 0 0-1.5z"/>`), g.Group(children),
	)
}

func LetterEDiamond(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M14.5 8h-5v4m5 4h-5v-4m0 0h4"/><path d="M2.707 10.295a2.41 2.41 0 0 0 0 3.41l7.588 7.588a2.41 2.41 0 0 0 3.41 0l7.588-7.588a2.41 2.41 0 0 0 0-3.41l-7.588-7.588a2.41 2.41 0 0 0-3.41 0z"/></g>`), g.Group(children),
	)
}

func LetterEDiamondSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.79 1.49a3.16 3.16 0 0 1 3.445.687l7.588 7.588a3.16 3.16 0 0 1 0 4.47l-7.588 7.588a3.16 3.16 0 0 1-4.47 0l-7.588-7.588a3.16 3.16 0 0 1 0-4.47l7.588-7.589a3.2 3.2 0 0 1 1.025-.685M9.5 7.25a.75.75 0 0 0-.75.75v8c0 .414.336.75.75.75h5a.75.75 0 0 0 0-1.5h-4.25v-2.5h3.25a.75.75 0 0 0 0-1.5h-3.25v-2.5h4.25a.75.75 0 0 0 0-1.5z"/>`), g.Group(children),
	)
}

func LetterEHexagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M14.5 8h-5v4m5 4h-5v-4m0 0h4"/><path d="M20.5 15.8V8.2a1.91 1.91 0 0 0-.944-1.645l-6.612-3.8a1.88 1.88 0 0 0-1.888 0l-6.612 3.8A1.9 1.9 0 0 0 3.5 8.2v7.602a1.91 1.91 0 0 0 .944 1.644l6.612 3.8a1.88 1.88 0 0 0 1.888 0l6.612-3.8A1.9 1.9 0 0 0 20.5 15.8"/></g>`), g.Group(children),
	)
}

func LetterEHexagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.68 2.105a2.63 2.63 0 0 1 2.64 0l.001.001l6.611 3.8A2.65 2.65 0 0 1 21.25 8.2v7.603a2.66 2.66 0 0 1-1.318 2.291l-.003.002l-6.608 3.799h-.002a2.63 2.63 0 0 1-2.639 0h-.001l-6.608-3.8h-.003A2.64 2.64 0 0 1 2.75 15.8V8.198a2.66 2.66 0 0 1 1.318-2.291l.003-.002zM9.5 7.25a.75.75 0 0 0-.75.75v8c0 .414.336.75.75.75h5a.75.75 0 0 0 0-1.5h-4.25v-2.5h3.25a.75.75 0 0 0 0-1.5h-3.25v-2.5h4.25a.75.75 0 0 0 0-1.5z"/>`), g.Group(children),
	)
}

func LetterEOctagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M14.5 8h-5v4m5 4h-5v-4m0 0h4"/><path d="M7.805 3.469C8.16 3.115 8.451 3 8.937 3h6.126c.486 0 .778.115 1.132.469l4.336 4.336c.354.354.469.646.469 1.132v6.126c0 .5-.125.788-.469 1.132l-4.336 4.336c-.354.354-.646.469-1.132.469H8.937c-.5 0-.788-.125-1.132-.469L3.47 16.195c-.355-.355-.47-.646-.47-1.132V8.937c0-.5.125-.788.469-1.132z"/></g>`), g.Group(children),
	)
}

func LetterEOctagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.037 2.408a2.3 2.3 0 0 1 .9-.158h6.126c.302 0 .602.036.9.158s.54.31.762.53l4.337 4.337c.22.221.408.463.53.762c.123.298.158.598.158.9v6.126c0 .313-.039.616-.163.914a2.3 2.3 0 0 1-.525.748l-4.337 4.337a2.3 2.3 0 0 1-.762.53a2.3 2.3 0 0 1-.9.158H8.937c-.313 0-.616-.039-.914-.163a2.3 2.3 0 0 1-.748-.525l-4.337-4.337a2.3 2.3 0 0 1-.53-.762a2.3 2.3 0 0 1-.158-.9V8.937c0-.313.039-.616.163-.914a2.3 2.3 0 0 1 .525-.748l4.337-4.337c.221-.22.463-.408.762-.53M9.5 7.25a.75.75 0 0 0-.75.75v8c0 .414.336.75.75.75h5a.75.75 0 0 0 0-1.5h-4.25v-2.5h3.25a.75.75 0 0 0 0-1.5h-3.25v-2.5h4.25a.75.75 0 0 0 0-1.5z"/>`), g.Group(children),
	)
}

func LetterESolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9 6a1 1 0 0 0-1 1v10a1 1 0 0 0 1 1h6.25a1 1 0 1 0 0-2H10v-3h4a1 1 0 1 0 0-2h-4V8h5.25a1 1 0 1 0 0-2z"/>`), g.Group(children),
	)
}

func LetterESquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M14.5 8h-5v4m5 4h-5v-4m0 0h4"/><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/></g>`), g.Group(children),
	)
}

func LetterESquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057m.133 5a.75.75 0 0 0-.75.75v8c0 .414.336.75.75.75h5a.75.75 0 0 0 0-1.5h-4.25v-2.5h3.25a.75.75 0 0 0 0-1.5h-3.25v-2.5h4.25a.75.75 0 0 0 0-1.5z"/>`), g.Group(children),
	)
}

func LetterEWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M14.5 8h-5v4m5 4h-5v-4m0 0h4"/><path d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83"/></g>`), g.Group(children),
	)
}

func LetterEWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.565 2.075a3.33 3.33 0 0 1 2.87 0c.394.189.755.497 1.26.928l.079.066c.48.41.939.604 1.58.655l.102.008c.662.053 1.135.09 1.547.236a3.33 3.33 0 0 1 2.03 2.029c.145.412.182.885.235 1.547l.008.102c.051.641.246 1.1.655 1.58l.066.078c.431.506.74.867.928 1.261a3.33 3.33 0 0 1 0 2.87c-.189.394-.497.755-.928 1.26l-.066.079c-.418.49-.605.951-.655 1.58l-.008.102c-.053.662-.09 1.135-.236 1.547a3.33 3.33 0 0 1-2.029 2.03c-.412.145-.885.182-1.547.235l-.102.008c-.641.051-1.1.246-1.58.655l-.079.066c-.505.431-.866.74-1.26.928a3.33 3.33 0 0 1-2.87 0c-.394-.189-.755-.497-1.26-.928l-.079-.066a2.56 2.56 0 0 0-1.58-.655l-.102-.008c-.662-.053-1.135-.09-1.547-.236a3.33 3.33 0 0 1-2.03-2.029c-.145-.412-.182-.885-.235-1.547l-.008-.102a2.56 2.56 0 0 0-.655-1.58l-.066-.079c-.431-.505-.74-.866-.928-1.26a3.33 3.33 0 0 1 0-2.87c.189-.394.497-.755.928-1.26l.066-.079a2.56 2.56 0 0 0 .655-1.58l.008-.102c.053-.662.09-1.135.236-1.547a3.33 3.33 0 0 1 2.029-2.03c.412-.145.885-.182 1.547-.235l.102-.008a2.56 2.56 0 0 0 1.58-.655l.078-.066c.506-.431.867-.74 1.261-.928M9.5 7.25a.75.75 0 0 0-.75.75v8c0 .414.336.75.75.75h5a.75.75 0 0 0 0-1.5h-4.25v-2.5h3.25a.75.75 0 0 0 0-1.5h-3.25v-2.5h4.25a.75.75 0 0 0 0-1.5z"/>`), g.Group(children),
	)
}

func LetterF(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M15.5 7H9.25v5m0 0v5m0-5h5"/>`), g.Group(children),
	)
}

func LetterFCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/><path d="M14.75 8h-5v4m0 0v4m0-4h4"/></g>`), g.Group(children),
	)
}

func LetterFCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12m7.5-4.75A.75.75 0 0 0 9 8v8a.75.75 0 0 0 1.5 0v-3.25h3.25a.75.75 0 0 0 0-1.5H10.5v-2.5h4.25a.75.75 0 0 0 0-1.5z"/>`), g.Group(children),
	)
}

func LetterFDiamond(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M14.75 8h-5v4m0 0v4m0-4h4"/><path d="M2.707 10.295a2.41 2.41 0 0 0 0 3.41l7.588 7.588a2.41 2.41 0 0 0 3.41 0l7.588-7.588a2.41 2.41 0 0 0 0-3.41l-7.588-7.588a2.41 2.41 0 0 0-3.41 0z"/></g>`), g.Group(children),
	)
}

func LetterFDiamondSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.79 1.49a3.16 3.16 0 0 1 3.445.687l7.588 7.588a3.16 3.16 0 0 1 0 4.47l-7.588 7.588a3.16 3.16 0 0 1-4.47 0l-7.588-7.588a3.16 3.16 0 0 1 0-4.47l7.588-7.589a3.2 3.2 0 0 1 1.025-.685M9.75 7.25A.75.75 0 0 0 9 8v8a.75.75 0 0 0 1.5 0v-3.25h3.25a.75.75 0 0 0 0-1.5H10.5v-2.5h4.25a.75.75 0 0 0 0-1.5z"/>`), g.Group(children),
	)
}

func LetterFHexagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M14.75 8h-5v4m0 0v4m0-4h4"/><path d="M20.5 15.8V8.2a1.91 1.91 0 0 0-.944-1.645l-6.612-3.8a1.88 1.88 0 0 0-1.888 0l-6.612 3.8A1.9 1.9 0 0 0 3.5 8.2v7.602a1.91 1.91 0 0 0 .944 1.644l6.612 3.8a1.88 1.88 0 0 0 1.888 0l6.612-3.8A1.9 1.9 0 0 0 20.5 15.8"/></g>`), g.Group(children),
	)
}

func LetterFHexagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.68 2.105a2.63 2.63 0 0 1 2.64 0l.001.001l6.611 3.8A2.65 2.65 0 0 1 21.25 8.2v7.603a2.66 2.66 0 0 1-1.318 2.291l-.003.002l-6.608 3.799h-.002a2.63 2.63 0 0 1-2.639 0h-.001l-6.608-3.8h-.003A2.64 2.64 0 0 1 2.75 15.8V8.198a2.66 2.66 0 0 1 1.318-2.291l.003-.002zM9.75 7.25A.75.75 0 0 0 9 8v8a.75.75 0 0 0 1.5 0v-3.25h3.25a.75.75 0 0 0 0-1.5H10.5v-2.5h4.25a.75.75 0 0 0 0-1.5z"/>`), g.Group(children),
	)
}

func LetterFOctagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M14.75 8h-5v4m0 0v4m0-4h4"/><path d="M7.805 3.469C8.16 3.115 8.451 3 8.937 3h6.126c.486 0 .778.115 1.132.469l4.336 4.336c.354.354.469.646.469 1.132v6.126c0 .5-.125.788-.469 1.132l-4.336 4.336c-.354.354-.646.469-1.132.469H8.937c-.5 0-.788-.125-1.132-.469L3.47 16.195c-.355-.355-.47-.646-.47-1.132V8.937c0-.5.125-.788.469-1.132z"/></g>`), g.Group(children),
	)
}

func LetterFOctagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.037 2.408a2.3 2.3 0 0 1 .9-.158h6.126c.302 0 .602.036.9.158s.54.31.762.53l4.337 4.337c.22.221.408.463.53.762c.123.298.158.598.158.9v6.126c0 .313-.039.616-.163.914a2.3 2.3 0 0 1-.525.748l-4.337 4.337a2.3 2.3 0 0 1-.762.53a2.3 2.3 0 0 1-.9.158H8.937c-.313 0-.616-.039-.914-.163a2.3 2.3 0 0 1-.748-.525l-4.337-4.337a2.3 2.3 0 0 1-.53-.762a2.3 2.3 0 0 1-.158-.9V8.937c0-.313.039-.616.163-.914a2.3 2.3 0 0 1 .525-.748l4.337-4.337c.221-.22.463-.408.762-.53M9.75 7.25A.75.75 0 0 0 9 8v8a.75.75 0 0 0 1.5 0v-3.25h3.25a.75.75 0 0 0 0-1.5H10.5v-2.5h4.25a.75.75 0 0 0 0-1.5z"/>`), g.Group(children),
	)
}

func LetterFSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.25 6a1 1 0 0 0-1 1v10a1 1 0 1 0 2 0v-4h4a1 1 0 1 0 0-2h-4V8h5.25a1 1 0 1 0 0-2z"/>`), g.Group(children),
	)
}

func LetterFSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M14.75 8h-5v4m0 0v4m0-4h4"/><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/></g>`), g.Group(children),
	)
}

func LetterFSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057m.383 5A.75.75 0 0 0 9 8v8a.75.75 0 0 0 1.5 0v-3.25h3.25a.75.75 0 0 0 0-1.5H10.5v-2.5h4.25a.75.75 0 0 0 0-1.5z"/>`), g.Group(children),
	)
}

func LetterFWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M14.75 8h-5v4m0 0v4m0-4h4"/><path d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83"/></g>`), g.Group(children),
	)
}

func LetterFWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.565 2.075a3.33 3.33 0 0 1 2.87 0c.394.189.755.497 1.26.928l.079.066c.48.41.939.604 1.58.655l.102.008c.662.053 1.135.09 1.547.236a3.33 3.33 0 0 1 2.03 2.029c.145.412.182.885.235 1.547l.008.102c.051.641.246 1.1.655 1.58l.066.078c.431.506.74.867.928 1.261a3.33 3.33 0 0 1 0 2.87c-.189.394-.497.755-.928 1.26l-.066.079c-.418.49-.605.951-.655 1.58l-.008.102c-.053.662-.09 1.135-.236 1.547a3.33 3.33 0 0 1-2.029 2.03c-.412.145-.885.182-1.547.235l-.102.008c-.641.051-1.1.246-1.58.655l-.079.066c-.505.431-.866.74-1.26.928a3.33 3.33 0 0 1-2.87 0c-.394-.189-.755-.497-1.26-.928l-.079-.066a2.56 2.56 0 0 0-1.58-.655l-.102-.008c-.662-.053-1.135-.09-1.547-.236a3.33 3.33 0 0 1-2.03-2.029c-.145-.412-.182-.885-.235-1.547l-.008-.102a2.56 2.56 0 0 0-.655-1.58l-.066-.079c-.431-.505-.74-.866-.928-1.26a3.33 3.33 0 0 1 0-2.87c.189-.394.497-.755.928-1.26l.066-.079a2.56 2.56 0 0 0 .655-1.58l.008-.102c.053-.662.09-1.135.236-1.547a3.33 3.33 0 0 1 2.029-2.03c.412-.145.885-.182 1.547-.235l.102-.008a2.56 2.56 0 0 0 1.58-.655l.078-.066c.506-.431.867-.74 1.261-.928M9.75 7.25A.75.75 0 0 0 9 8v8a.75.75 0 0 0 1.5 0v-3.25h3.25a.75.75 0 0 0 0-1.5H10.5v-2.5h4.25a.75.75 0 0 0 0-1.5z"/>`), g.Group(children),
	)
}

func LetterG(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M13.167 12h1.458c.345 0 .625.28.625.625v3.75c0 .345-.28.625-.625.625h-3.75A1.875 1.875 0 0 1 9 15.125v-6.25C9 7.839 9.84 7 10.875 7h2.5c1.036 0 1.875.84 1.875 1.875"/>`), g.Group(children),
	)
}

func LetterGCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/><path d="M12.833 12H14a.5.5 0 0 1 .5.5v3a.5.5 0 0 1-.5.5h-3a1.5 1.5 0 0 1-1.5-1.5v-5A1.5 1.5 0 0 1 11 8h2a1.5 1.5 0 0 1 1.5 1.5"/></g>`), g.Group(children),
	)
}

func LetterGCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12m8-2.5a.75.75 0 0 1 .75-.75h2a.75.75 0 0 1 .75.75a.75.75 0 0 0 1.5 0A2.25 2.25 0 0 0 13 7.25h-2A2.25 2.25 0 0 0 8.75 9.5v5A2.25 2.25 0 0 0 11 16.75h3c.69 0 1.25-.56 1.25-1.25v-3c0-.69-.56-1.25-1.25-1.25h-1.167a.75.75 0 0 0 0 1.5h.917v2.5H11a.75.75 0 0 1-.75-.75z"/>`), g.Group(children),
	)
}

func LetterGDiamond(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M12.833 12H14a.5.5 0 0 1 .5.5v3a.5.5 0 0 1-.5.5h-3a1.5 1.5 0 0 1-1.5-1.5v-5A1.5 1.5 0 0 1 11 8h2a1.5 1.5 0 0 1 1.5 1.5"/><path d="M2.707 10.295a2.41 2.41 0 0 0 0 3.41l7.588 7.588a2.41 2.41 0 0 0 3.41 0l7.588-7.588a2.41 2.41 0 0 0 0-3.41l-7.588-7.588a2.41 2.41 0 0 0-3.41 0z"/></g>`), g.Group(children),
	)
}

func LetterGDiamondSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.79 1.49a3.16 3.16 0 0 1 3.445.687l7.588 7.588a3.16 3.16 0 0 1 0 4.47l-7.588 7.588a3.16 3.16 0 0 1-4.47 0l-7.588-7.588a3.16 3.16 0 0 1 0-4.47l7.588-7.589a3.2 3.2 0 0 1 1.025-.685m-.54 8.01a.75.75 0 0 1 .75-.75h2a.75.75 0 0 1 .75.75a.75.75 0 0 0 1.5 0A2.25 2.25 0 0 0 13 7.25h-2A2.25 2.25 0 0 0 8.75 9.5v5A2.25 2.25 0 0 0 11 16.75h3c.69 0 1.25-.56 1.25-1.25v-3c0-.69-.56-1.25-1.25-1.25h-1.167a.75.75 0 0 0 0 1.5h.917v2.5H11a.75.75 0 0 1-.75-.75z"/>`), g.Group(children),
	)
}

func LetterGHexagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M12.833 12H14a.5.5 0 0 1 .5.5v3a.5.5 0 0 1-.5.5h-3a1.5 1.5 0 0 1-1.5-1.5v-5A1.5 1.5 0 0 1 11 8h2a1.5 1.5 0 0 1 1.5 1.5"/><path d="M20.5 15.8V8.2a1.91 1.91 0 0 0-.944-1.645l-6.612-3.8a1.88 1.88 0 0 0-1.888 0l-6.612 3.8A1.9 1.9 0 0 0 3.5 8.2v7.602a1.91 1.91 0 0 0 .944 1.644l6.612 3.8a1.88 1.88 0 0 0 1.888 0l6.612-3.8A1.9 1.9 0 0 0 20.5 15.8"/></g>`), g.Group(children),
	)
}

func LetterGHexagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.68 2.105a2.63 2.63 0 0 1 2.64 0l.001.001l6.611 3.8A2.65 2.65 0 0 1 21.25 8.2v7.603a2.66 2.66 0 0 1-1.318 2.291l-.003.002l-6.608 3.799h-.002a2.63 2.63 0 0 1-2.639 0h-.001l-6.608-3.8h-.003A2.64 2.64 0 0 1 2.75 15.8V8.198a2.66 2.66 0 0 1 1.318-2.291l.003-.002zM10.25 9.5a.75.75 0 0 1 .75-.75h2a.75.75 0 0 1 .75.75a.75.75 0 0 0 1.5 0A2.25 2.25 0 0 0 13 7.25h-2A2.25 2.25 0 0 0 8.75 9.5v5A2.25 2.25 0 0 0 11 16.75h3c.69 0 1.25-.56 1.25-1.25v-3c0-.69-.56-1.25-1.25-1.25h-1.167a.75.75 0 0 0 0 1.5h.917v2.5H11a.75.75 0 0 1-.75-.75z"/>`), g.Group(children),
	)
}

func LetterGOctagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M12.833 12H14a.5.5 0 0 1 .5.5v3a.5.5 0 0 1-.5.5h-3a1.5 1.5 0 0 1-1.5-1.5v-5A1.5 1.5 0 0 1 11 8h2a1.5 1.5 0 0 1 1.5 1.5"/><path d="M7.805 3.469C8.16 3.115 8.451 3 8.937 3h6.126c.486 0 .778.115 1.132.469l4.336 4.336c.354.354.469.646.469 1.132v6.126c0 .5-.125.788-.469 1.132l-4.336 4.336c-.354.354-.646.469-1.132.469H8.937c-.5 0-.788-.125-1.132-.469L3.47 16.195c-.355-.355-.47-.646-.47-1.132V8.937c0-.5.125-.788.469-1.132z"/></g>`), g.Group(children),
	)
}

func LetterGOctagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.037 2.408a2.3 2.3 0 0 1 .9-.158h6.126c.302 0 .602.036.9.158s.54.31.762.53l4.337 4.337c.22.221.408.463.53.762c.123.298.158.598.158.9v6.126c0 .313-.039.616-.163.914a2.3 2.3 0 0 1-.525.748l-4.337 4.337a2.3 2.3 0 0 1-.762.53a2.3 2.3 0 0 1-.9.158H8.937c-.313 0-.616-.039-.914-.163a2.3 2.3 0 0 1-.748-.525l-4.337-4.337a2.3 2.3 0 0 1-.53-.762a2.3 2.3 0 0 1-.158-.9V8.937c0-.313.039-.616.163-.914a2.3 2.3 0 0 1 .525-.748l4.337-4.337c.221-.22.463-.408.762-.53M10.25 9.5a.75.75 0 0 1 .75-.75h2a.75.75 0 0 1 .75.75a.75.75 0 0 0 1.5 0A2.25 2.25 0 0 0 13 7.25h-2A2.25 2.25 0 0 0 8.75 9.5v5A2.25 2.25 0 0 0 11 16.75h3c.69 0 1.25-.56 1.25-1.25v-3c0-.69-.56-1.25-1.25-1.25h-1.167a.75.75 0 0 0 0 1.5h.917v2.5H11a.75.75 0 0 1-.75-.75z"/>`), g.Group(children),
	)
}

func LetterGSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.875 6A2.875 2.875 0 0 0 8 8.875v6.25A2.875 2.875 0 0 0 10.875 18h3.75c.898 0 1.625-.727 1.625-1.625v-3.75c0-.898-.727-1.625-1.625-1.625h-1.458a1 1 0 1 0 0 2h1.083v3h-3.375a.875.875 0 0 1-.875-.875v-6.25c0-.483.392-.875.875-.875h2.5c.483 0 .875.392.875.875a1 1 0 1 0 2 0A2.875 2.875 0 0 0 13.375 6z"/>`), g.Group(children),
	)
}

func LetterGSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M12.833 12H14a.5.5 0 0 1 .5.5v3a.5.5 0 0 1-.5.5h-3a1.5 1.5 0 0 1-1.5-1.5v-5A1.5 1.5 0 0 1 11 8h2a1.5 1.5 0 0 1 1.5 1.5"/><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/></g>`), g.Group(children),
	)
}

func LetterGSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057m.883 7.25a.75.75 0 0 1 .75-.75h2a.75.75 0 0 1 .75.75a.75.75 0 0 0 1.5 0A2.25 2.25 0 0 0 13 7.25h-2A2.25 2.25 0 0 0 8.75 9.5v5A2.25 2.25 0 0 0 11 16.75h3c.69 0 1.25-.56 1.25-1.25v-3c0-.69-.56-1.25-1.25-1.25h-1.167a.75.75 0 0 0 0 1.5h.917v2.5H11a.75.75 0 0 1-.75-.75z"/>`), g.Group(children),
	)
}

func LetterGWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M12.833 12H14a.5.5 0 0 1 .5.5v3a.5.5 0 0 1-.5.5h-3a1.5 1.5 0 0 1-1.5-1.5v-5A1.5 1.5 0 0 1 11 8h2a1.5 1.5 0 0 1 1.5 1.5"/><path d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83"/></g>`), g.Group(children),
	)
}

func LetterGWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.565 2.075a3.33 3.33 0 0 1 2.87 0c.394.189.755.497 1.26.928l.079.066c.48.41.939.604 1.58.655l.102.008c.662.053 1.135.09 1.547.236a3.33 3.33 0 0 1 2.03 2.029c.145.412.182.885.235 1.547l.008.102c.051.641.246 1.1.655 1.58l.066.078c.431.506.74.867.928 1.261a3.33 3.33 0 0 1 0 2.87c-.189.394-.497.755-.928 1.26l-.066.079c-.418.49-.605.951-.655 1.58l-.008.102c-.053.662-.09 1.135-.236 1.547a3.33 3.33 0 0 1-2.029 2.03c-.412.145-.885.182-1.547.235l-.102.008c-.641.051-1.1.246-1.58.655l-.079.066c-.505.431-.866.74-1.26.928a3.33 3.33 0 0 1-2.87 0c-.394-.189-.755-.497-1.26-.928l-.079-.066a2.56 2.56 0 0 0-1.58-.655l-.102-.008c-.662-.053-1.135-.09-1.547-.236a3.33 3.33 0 0 1-2.03-2.029c-.145-.412-.182-.885-.235-1.547l-.008-.102a2.56 2.56 0 0 0-.655-1.58l-.066-.079c-.431-.505-.74-.866-.928-1.26a3.33 3.33 0 0 1 0-2.87c.189-.394.497-.755.928-1.26l.066-.079a2.56 2.56 0 0 0 .655-1.58l.008-.102c.053-.662.09-1.135.236-1.547a3.33 3.33 0 0 1 2.029-2.03c.412-.145.885-.182 1.547-.235l.102-.008a2.56 2.56 0 0 0 1.58-.655l.078-.066c.506-.431.867-.74 1.261-.928M10.25 9.5a.75.75 0 0 1 .75-.75h2a.75.75 0 0 1 .75.75a.75.75 0 0 0 1.5 0A2.25 2.25 0 0 0 13 7.25h-2A2.25 2.25 0 0 0 8.75 9.5v5A2.25 2.25 0 0 0 11 16.75h3c.69 0 1.25-.56 1.25-1.25v-3c0-.69-.56-1.25-1.25-1.25h-1.167a.75.75 0 0 0 0 1.5h.917v2.5H11a.75.75 0 0 1-.75-.75z"/>`), g.Group(children),
	)
}

func LetterH(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9 7v5m0 0v5m0-5h6.25m0-5v5m0 0v5"/>`), g.Group(children),
	)
}

func LetterHCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0M9.5 8v4m0 0v4m0-4h5m0-4v4m0 0v4"/>`), g.Group(children),
	)
}

func LetterHCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12m8-4a.75.75 0 0 0-1.5 0v8a.75.75 0 0 0 1.5 0v-3.25h3.5V16a.75.75 0 0 0 1.5 0V8a.75.75 0 0 0-1.5 0v3.25h-3.5z"/>`), g.Group(children),
	)
}

func LetterHDiamond(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9.5 8v4m0 0v4m0-4h5m0-4v4m0 0v4M2.707 10.295a2.41 2.41 0 0 0 0 3.41l7.588 7.588a2.41 2.41 0 0 0 3.41 0l7.588-7.588a2.41 2.41 0 0 0 0-3.41l-7.588-7.588a2.41 2.41 0 0 0-3.41 0z"/>`), g.Group(children),
	)
}

func LetterHDiamondSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.79 1.49a3.16 3.16 0 0 1 3.445.687l7.588 7.588a3.16 3.16 0 0 1 0 4.47l-7.588 7.588a3.16 3.16 0 0 1-4.47 0l-7.588-7.588a3.16 3.16 0 0 1 0-4.47l7.588-7.589a3.2 3.2 0 0 1 1.025-.685M10.25 8a.75.75 0 0 0-1.5 0v8a.75.75 0 0 0 1.5 0v-3.25h3.5V16a.75.75 0 0 0 1.5 0V8a.75.75 0 0 0-1.5 0v3.25h-3.5z"/>`), g.Group(children),
	)
}

func LetterHHexagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9.5 8v4m0 0v4m0-4h5m0-4v4m0 0v4m6-.2V8.2a1.91 1.91 0 0 0-.944-1.645l-6.612-3.8a1.88 1.88 0 0 0-1.888 0l-6.612 3.8A1.9 1.9 0 0 0 3.5 8.2v7.602a1.91 1.91 0 0 0 .944 1.644l6.612 3.8a1.88 1.88 0 0 0 1.888 0l6.612-3.8A1.9 1.9 0 0 0 20.5 15.8"/>`), g.Group(children),
	)
}

func LetterHHexagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.68 2.105a2.63 2.63 0 0 1 2.64 0l.001.001l6.611 3.8A2.65 2.65 0 0 1 21.25 8.2v7.603a2.66 2.66 0 0 1-1.318 2.291l-.003.002l-6.608 3.799h-.002a2.63 2.63 0 0 1-2.639 0h-.001l-6.608-3.8h-.003A2.64 2.64 0 0 1 2.75 15.8V8.198a2.66 2.66 0 0 1 1.318-2.291l.003-.002zM10.25 8a.75.75 0 0 0-1.5 0v8a.75.75 0 0 0 1.5 0v-3.25h3.5V16a.75.75 0 0 0 1.5 0V8a.75.75 0 0 0-1.5 0v3.25h-3.5z"/>`), g.Group(children),
	)
}

func LetterHOctagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9.5 8v4m0 0v4m0-4h5m0-4v4m0 0v4M7.805 3.469C8.16 3.115 8.451 3 8.937 3h6.126c.486 0 .778.115 1.132.469l4.336 4.336c.354.354.469.646.469 1.132v6.126c0 .5-.125.788-.469 1.132l-4.336 4.336c-.354.354-.646.469-1.132.469H8.937c-.5 0-.788-.125-1.132-.469L3.47 16.195c-.355-.355-.47-.646-.47-1.132V8.937c0-.5.125-.788.469-1.132z"/>`), g.Group(children),
	)
}

func LetterHOctagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.037 2.408a2.3 2.3 0 0 1 .9-.158h6.126c.302 0 .602.036.9.158s.54.31.762.53l4.337 4.337c.22.221.408.463.53.762c.123.298.158.598.158.9v6.126c0 .313-.039.616-.163.914a2.3 2.3 0 0 1-.525.748l-4.337 4.337a2.3 2.3 0 0 1-.762.53a2.3 2.3 0 0 1-.9.158H8.937c-.313 0-.616-.039-.914-.163a2.3 2.3 0 0 1-.748-.525l-4.337-4.337a2.3 2.3 0 0 1-.53-.762a2.3 2.3 0 0 1-.158-.9V8.937c0-.313.039-.616.163-.914a2.3 2.3 0 0 1 .525-.748l4.337-4.337c.221-.22.463-.408.762-.53M10.25 8a.75.75 0 0 0-1.5 0v8a.75.75 0 0 0 1.5 0v-3.25h3.5V16a.75.75 0 0 0 1.5 0V8a.75.75 0 0 0-1.5 0v3.25h-3.5z"/>`), g.Group(children),
	)
}

func LetterHSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9 6a1 1 0 0 0-1 1v10a1 1 0 1 0 2 0v-4h4.25v4a1 1 0 1 0 2 0V7a1 1 0 1 0-2 0v4H10V7a1 1 0 0 0-1-1"/>`), g.Group(children),
	)
}

func LetterHSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9.5 8v4m0 0v4m0-4h5m0-4v4m0 0v4M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/>`), g.Group(children),
	)
}

func LetterHSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057M10.25 8a.75.75 0 0 0-1.5 0v8a.75.75 0 0 0 1.5 0v-3.25h3.5V16a.75.75 0 0 0 1.5 0V8a.75.75 0 0 0-1.5 0v3.25h-3.5z"/>`), g.Group(children),
	)
}

func LetterHWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9.5 8v4m0 0v4m0-4h5m0-4v4m0 0v4M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83"/>`), g.Group(children),
	)
}

func LetterHWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.565 2.075a3.33 3.33 0 0 1 2.87 0c.394.189.755.497 1.26.928l.079.066c.48.41.939.604 1.58.655l.102.008c.662.053 1.135.09 1.547.236a3.33 3.33 0 0 1 2.03 2.029c.145.412.182.885.235 1.547l.008.102c.051.641.246 1.1.655 1.58l.066.078c.431.506.74.867.928 1.261a3.33 3.33 0 0 1 0 2.87c-.189.394-.497.755-.928 1.26l-.066.079c-.418.49-.605.951-.655 1.58l-.008.102c-.053.662-.09 1.135-.236 1.547a3.33 3.33 0 0 1-2.029 2.03c-.412.145-.885.182-1.547.235l-.102.008c-.641.051-1.1.246-1.58.655l-.079.066c-.505.431-.866.74-1.26.928a3.33 3.33 0 0 1-2.87 0c-.394-.189-.755-.497-1.26-.928l-.079-.066a2.56 2.56 0 0 0-1.58-.655l-.102-.008c-.662-.053-1.135-.09-1.547-.236a3.33 3.33 0 0 1-2.03-2.029c-.145-.412-.182-.885-.235-1.547l-.008-.102a2.56 2.56 0 0 0-.655-1.58l-.066-.079c-.431-.505-.74-.866-.928-1.26a3.33 3.33 0 0 1 0-2.87c.189-.394.497-.755.928-1.26l.066-.079a2.56 2.56 0 0 0 .655-1.58l.008-.102c.053-.662.09-1.135.236-1.547a3.33 3.33 0 0 1 2.029-2.03c.412-.145.885-.182 1.547-.235l.102-.008a2.56 2.56 0 0 0 1.58-.655l.078-.066c.506-.431.867-.74 1.261-.928M10.25 8a.75.75 0 0 0-1.5 0v8a.75.75 0 0 0 1.5 0v-3.25h3.5V16a.75.75 0 0 0 1.5 0V8a.75.75 0 0 0-1.5 0v3.25h-3.5z"/>`), g.Group(children),
	)
}

func LetterI(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9 7h3.125m0 0h3.125m-3.125 0v10m3.125 0h-3.125m0 0H9"/>`), g.Group(children),
	)
}

func LetterICircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0M9.5 8H12m0 0h2.5M12 8v8m2.5 0H12m0 0H9.5"/>`), g.Group(children),
	)
}

func LetterICircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12M9.5 7.25a.75.75 0 0 0 0 1.5h1.75v6.5H9.5a.75.75 0 0 0 0 1.5h5a.75.75 0 0 0 0-1.5h-1.75v-6.5h1.75a.75.75 0 0 0 0-1.5z"/>`), g.Group(children),
	)
}

func LetterIDiamond(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9.5 8H12m0 0h2.5M12 8v8m2.5 0H12m0 0H9.5m-6.793-5.705a2.41 2.41 0 0 0 0 3.41l7.588 7.588a2.41 2.41 0 0 0 3.41 0l7.588-7.588a2.41 2.41 0 0 0 0-3.41l-7.588-7.588a2.41 2.41 0 0 0-3.41 0z"/>`), g.Group(children),
	)
}

func LetterIDiamondSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.79 1.49a3.16 3.16 0 0 1 3.445.687l7.588 7.588a3.16 3.16 0 0 1 0 4.47l-7.588 7.588a3.16 3.16 0 0 1-4.47 0l-7.588-7.588a3.16 3.16 0 0 1 0-4.47l7.588-7.589a3.2 3.2 0 0 1 1.025-.685M9.5 7.25a.75.75 0 0 0 0 1.5h1.75v6.5H9.5a.75.75 0 0 0 0 1.5h5a.75.75 0 0 0 0-1.5h-1.75v-6.5h1.75a.75.75 0 0 0 0-1.5z"/>`), g.Group(children),
	)
}

func LetterIHexagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9.5 8H12m0 0h2.5M12 8v8m2.5 0H12m0 0H9.5m11-.2V8.2a1.91 1.91 0 0 0-.944-1.645l-6.612-3.8a1.88 1.88 0 0 0-1.888 0l-6.612 3.8A1.9 1.9 0 0 0 3.5 8.2v7.602a1.91 1.91 0 0 0 .944 1.644l6.612 3.8a1.88 1.88 0 0 0 1.888 0l6.612-3.8A1.9 1.9 0 0 0 20.5 15.8"/>`), g.Group(children),
	)
}

func LetterIHexagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.68 2.105a2.63 2.63 0 0 1 2.64 0l.001.001l6.611 3.8A2.65 2.65 0 0 1 21.25 8.2v7.603a2.66 2.66 0 0 1-1.318 2.291l-.003.002l-6.608 3.799h-.002a2.63 2.63 0 0 1-2.639 0h-.001l-6.608-3.8h-.003A2.64 2.64 0 0 1 2.75 15.8V8.198a2.66 2.66 0 0 1 1.318-2.291l.003-.002zM9.5 7.25a.75.75 0 0 0 0 1.5h1.75v6.5H9.5a.75.75 0 0 0 0 1.5h5a.75.75 0 0 0 0-1.5h-1.75v-6.5h1.75a.75.75 0 0 0 0-1.5z"/>`), g.Group(children),
	)
}

func LetterIOctagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9.5 8H12m0 0h2.5M12 8v8m2.5 0H12m0 0H9.5M7.805 3.469C8.16 3.115 8.451 3 8.937 3h6.126c.486 0 .778.115 1.132.469l4.336 4.336c.354.354.469.646.469 1.132v6.126c0 .5-.125.788-.469 1.132l-4.336 4.336c-.354.354-.646.469-1.132.469H8.937c-.5 0-.788-.125-1.132-.469L3.47 16.195c-.355-.355-.47-.646-.47-1.132V8.937c0-.5.125-.788.469-1.132z"/>`), g.Group(children),
	)
}

func LetterIOctagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.037 2.408a2.3 2.3 0 0 1 .9-.158h6.126c.302 0 .602.036.9.158s.54.31.762.53l4.337 4.337c.22.221.408.463.53.762c.123.298.158.598.158.9v6.126c0 .313-.039.616-.163.914a2.3 2.3 0 0 1-.525.748l-4.337 4.337a2.3 2.3 0 0 1-.762.53a2.3 2.3 0 0 1-.9.158H8.937c-.313 0-.616-.039-.914-.163a2.3 2.3 0 0 1-.748-.525l-4.337-4.337a2.3 2.3 0 0 1-.53-.762a2.3 2.3 0 0 1-.158-.9V8.937c0-.313.039-.616.163-.914a2.3 2.3 0 0 1 .525-.748l4.337-4.337c.221-.22.463-.408.762-.53M9.5 7.25a.75.75 0 0 0 0 1.5h1.75v6.5H9.5a.75.75 0 0 0 0 1.5h5a.75.75 0 0 0 0-1.5h-1.75v-6.5h1.75a.75.75 0 0 0 0-1.5z"/>`), g.Group(children),
	)
}

func LetterISolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9 6a1 1 0 0 0 0 2h2.125v8H9a1 1 0 1 0 0 2h6.25a1 1 0 1 0 0-2h-2.125V8h2.125a1 1 0 1 0 0-2z"/>`), g.Group(children),
	)
}

func LetterISquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9.5 8H12m0 0h2.5M12 8v8m2.5 0H12m0 0H9.5M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/>`), g.Group(children),
	)
}

func LetterISquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057m.133 5a.75.75 0 0 0 0 1.5h1.75v6.5H9.5a.75.75 0 0 0 0 1.5h5a.75.75 0 0 0 0-1.5h-1.75v-6.5h1.75a.75.75 0 0 0 0-1.5z"/>`), g.Group(children),
	)
}

func LetterIWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9.5 8H12m0 0h2.5M12 8v8m2.5 0H12m0 0H9.5m.213-12.36c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83"/>`), g.Group(children),
	)
}

func LetterIWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.565 2.075a3.33 3.33 0 0 1 2.87 0c.394.189.755.497 1.26.928l.079.066c.48.41.939.604 1.58.655l.102.008c.662.053 1.135.09 1.547.236a3.33 3.33 0 0 1 2.03 2.029c.145.412.182.885.235 1.547l.008.102c.051.641.246 1.1.655 1.58l.066.078c.431.506.74.867.928 1.261a3.33 3.33 0 0 1 0 2.87c-.189.394-.497.755-.928 1.26l-.066.079c-.418.49-.605.951-.655 1.58l-.008.102c-.053.662-.09 1.135-.236 1.547a3.33 3.33 0 0 1-2.029 2.03c-.412.145-.885.182-1.547.235l-.102.008c-.641.051-1.1.246-1.58.655l-.079.066c-.505.431-.866.74-1.26.928a3.33 3.33 0 0 1-2.87 0c-.394-.189-.755-.497-1.26-.928l-.079-.066a2.56 2.56 0 0 0-1.58-.655l-.102-.008c-.662-.053-1.135-.09-1.547-.236a3.33 3.33 0 0 1-2.03-2.029c-.145-.412-.182-.885-.235-1.547l-.008-.102a2.56 2.56 0 0 0-.655-1.58l-.066-.079c-.431-.505-.74-.866-.928-1.26a3.33 3.33 0 0 1 0-2.87c.189-.394.497-.755.928-1.26l.066-.079a2.56 2.56 0 0 0 .655-1.58l.008-.102c.053-.662.09-1.135.236-1.547a3.33 3.33 0 0 1 2.029-2.03c.412-.145.885-.182 1.547-.235l.102-.008a2.56 2.56 0 0 0 1.58-.655l.078-.066c.506-.431.867-.74 1.261-.928M9.5 7.25a.75.75 0 0 0 0 1.5h1.75v6.5H9.5a.75.75 0 0 0 0 1.5h5a.75.75 0 0 0 0-1.5h-1.75v-6.5h1.75a.75.75 0 0 0 0-1.5z"/>`), g.Group(children),
	)
}

func LetterJ(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M15.25 7v7.5a2.5 2.5 0 0 1-2.5 2.5H11.5A2.5 2.5 0 0 1 9 14.5"/>`), g.Group(children),
	)
}

func LetterJCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/><path d="M14.25 8v6a2 2 0 0 1-2 2h-1a2 2 0 0 1-2-2"/></g>`), g.Group(children),
	)
}

func LetterJCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12M15 8a.75.75 0 0 0-1.5 0v6c0 .69-.56 1.25-1.25 1.25h-1c-.69 0-1.25-.56-1.25-1.25a.75.75 0 0 0-1.5 0a2.75 2.75 0 0 0 2.75 2.75h1A2.75 2.75 0 0 0 15 14z"/>`), g.Group(children),
	)
}

func LetterJDiamond(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M14.25 8v6a2 2 0 0 1-2 2h-1a2 2 0 0 1-2-2"/><path d="M2.707 10.295a2.41 2.41 0 0 0 0 3.41l7.588 7.588a2.41 2.41 0 0 0 3.41 0l7.588-7.588a2.41 2.41 0 0 0 0-3.41l-7.588-7.588a2.41 2.41 0 0 0-3.41 0z"/></g>`), g.Group(children),
	)
}

func LetterJDiamondSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.79 1.49a3.16 3.16 0 0 1 3.445.687l7.588 7.588a3.16 3.16 0 0 1 0 4.47l-7.588 7.588a3.16 3.16 0 0 1-4.47 0l-7.588-7.588a3.16 3.16 0 0 1 0-4.47l7.588-7.589a3.2 3.2 0 0 1 1.025-.685M15 8a.75.75 0 0 0-1.5 0v6c0 .69-.56 1.25-1.25 1.25h-1c-.69 0-1.25-.56-1.25-1.25a.75.75 0 0 0-1.5 0a2.75 2.75 0 0 0 2.75 2.75h1A2.75 2.75 0 0 0 15 14z"/>`), g.Group(children),
	)
}

func LetterJHexagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M14.25 8v6a2 2 0 0 1-2 2h-1a2 2 0 0 1-2-2"/><path d="M20.5 15.8V8.2a1.91 1.91 0 0 0-.944-1.645l-6.612-3.8a1.88 1.88 0 0 0-1.888 0l-6.612 3.8A1.9 1.9 0 0 0 3.5 8.2v7.602a1.91 1.91 0 0 0 .944 1.644l6.612 3.8a1.88 1.88 0 0 0 1.888 0l6.612-3.8A1.9 1.9 0 0 0 20.5 15.8"/></g>`), g.Group(children),
	)
}

func LetterJHexagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.68 2.105a2.63 2.63 0 0 1 2.64 0l.001.001l6.611 3.8A2.65 2.65 0 0 1 21.25 8.2v7.603a2.66 2.66 0 0 1-1.318 2.291l-.003.002l-6.608 3.799h-.002a2.63 2.63 0 0 1-2.639 0h-.001l-6.608-3.8h-.003A2.64 2.64 0 0 1 2.75 15.8V8.198a2.66 2.66 0 0 1 1.318-2.291l.003-.002zM15 8a.75.75 0 0 0-1.5 0v6c0 .69-.56 1.25-1.25 1.25h-1c-.69 0-1.25-.56-1.25-1.25a.75.75 0 0 0-1.5 0a2.75 2.75 0 0 0 2.75 2.75h1A2.75 2.75 0 0 0 15 14z"/>`), g.Group(children),
	)
}

func LetterJOctagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M14.25 8v6a2 2 0 0 1-2 2h-1a2 2 0 0 1-2-2"/><path d="M7.805 3.469C8.16 3.115 8.451 3 8.937 3h6.126c.486 0 .778.115 1.132.469l4.336 4.336c.354.354.469.646.469 1.132v6.126c0 .5-.125.788-.469 1.132l-4.336 4.336c-.354.354-.646.469-1.132.469H8.937c-.5 0-.788-.125-1.132-.469L3.47 16.195c-.355-.355-.47-.646-.47-1.132V8.937c0-.5.125-.788.469-1.132z"/></g>`), g.Group(children),
	)
}

func LetterJOctagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.037 2.408a2.3 2.3 0 0 1 .9-.158h6.126c.302 0 .602.036.9.158s.54.31.762.53l4.337 4.337c.22.221.408.463.53.762c.123.298.158.598.158.9v6.126c0 .313-.039.616-.163.914a2.3 2.3 0 0 1-.525.748l-4.337 4.337a2.3 2.3 0 0 1-.762.53a2.3 2.3 0 0 1-.9.158H8.937c-.313 0-.616-.039-.914-.163a2.3 2.3 0 0 1-.748-.525l-4.337-4.337a2.3 2.3 0 0 1-.53-.762a2.3 2.3 0 0 1-.158-.9V8.937c0-.313.039-.616.163-.914a2.3 2.3 0 0 1 .525-.748l4.337-4.337c.221-.22.463-.408.762-.53M15 8a.75.75 0 0 0-1.5 0v6c0 .69-.56 1.25-1.25 1.25h-1c-.69 0-1.25-.56-1.25-1.25a.75.75 0 0 0-1.5 0a2.75 2.75 0 0 0 2.75 2.75h1A2.75 2.75 0 0 0 15 14z"/>`), g.Group(children),
	)
}

func LetterJSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M15.25 6a1 1 0 0 0-1 1v7.5a1.5 1.5 0 0 1-1.5 1.5H11.5a1.5 1.5 0 0 1-1.5-1.5a1 1 0 1 0-2 0a3.5 3.5 0 0 0 3.5 3.5h1.25a3.5 3.5 0 0 0 3.5-3.5V7a1 1 0 0 0-1-1"/>`), g.Group(children),
	)
}

func LetterJSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M14.25 8v6a2 2 0 0 1-2 2h-1a2 2 0 0 1-2-2"/><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/></g>`), g.Group(children),
	)
}

func LetterJSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057M15 8a.75.75 0 0 0-1.5 0v6c0 .69-.56 1.25-1.25 1.25h-1c-.69 0-1.25-.56-1.25-1.25a.75.75 0 0 0-1.5 0a2.75 2.75 0 0 0 2.75 2.75h1A2.75 2.75 0 0 0 15 14z"/>`), g.Group(children),
	)
}

func LetterJWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M14.25 8v6a2 2 0 0 1-2 2h-1a2 2 0 0 1-2-2"/><path d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83"/></g>`), g.Group(children),
	)
}

func LetterJWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.565 2.075a3.33 3.33 0 0 1 2.87 0c.394.189.755.497 1.26.928l.079.066c.48.41.939.604 1.58.655l.102.008c.662.053 1.135.09 1.547.236a3.33 3.33 0 0 1 2.03 2.029c.145.412.182.885.235 1.547l.008.102c.051.641.246 1.1.655 1.58l.066.078c.431.506.74.867.928 1.261a3.33 3.33 0 0 1 0 2.87c-.189.394-.497.755-.928 1.26l-.066.079c-.418.49-.605.951-.655 1.58l-.008.102c-.053.662-.09 1.135-.236 1.547a3.33 3.33 0 0 1-2.029 2.03c-.412.145-.885.182-1.547.235l-.102.008c-.641.051-1.1.246-1.58.655l-.079.066c-.505.431-.866.74-1.26.928a3.33 3.33 0 0 1-2.87 0c-.394-.189-.755-.497-1.26-.928l-.079-.066a2.56 2.56 0 0 0-1.58-.655l-.102-.008c-.662-.053-1.135-.09-1.547-.236a3.33 3.33 0 0 1-2.03-2.029c-.145-.412-.182-.885-.235-1.547l-.008-.102a2.56 2.56 0 0 0-.655-1.58l-.066-.079c-.431-.505-.74-.866-.928-1.26a3.33 3.33 0 0 1 0-2.87c.189-.394.497-.755.928-1.26l.066-.079a2.56 2.56 0 0 0 .655-1.58l.008-.102c.053-.662.09-1.135.236-1.547a3.33 3.33 0 0 1 2.029-2.03c.412-.145.885-.182 1.547-.235l.102-.008a2.56 2.56 0 0 0 1.58-.655l.078-.066c.506-.431.867-.74 1.261-.928M15 8a.75.75 0 0 0-1.5 0v6c0 .69-.56 1.25-1.25 1.25h-1c-.69 0-1.25-.56-1.25-1.25a.75.75 0 0 0-1.5 0a2.75 2.75 0 0 0 2.75 2.75h1A2.75 2.75 0 0 0 15 14z"/>`), g.Group(children),
	)
}

func LetterK(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9 7v5m0 0v5m0-5h.625m0 0l5.625 5m-5.625-5l5.625-5"/>`), g.Group(children),
	)
}

func LetterKCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0M9.75 8v4m0 0v4m0-4h.5m0 0l4.5 4m-4.5-4l4.5-4"/>`), g.Group(children),
	)
}

func LetterKCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12m12.998-3.44a.75.75 0 0 0-.996-1.12L10.5 10.773V8A.75.75 0 0 0 9 8v8a.75.75 0 0 0 1.5 0v-2.774l3.752 3.335a.75.75 0 0 0 .996-1.122L11.378 12z"/>`), g.Group(children),
	)
}

func LetterKDiamond(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9.75 8v4m0 0v4m0-4h.5m0 0l4.5 4m-4.5-4l4.5-4M2.707 10.295a2.41 2.41 0 0 0 0 3.41l7.588 7.588a2.41 2.41 0 0 0 3.41 0l7.588-7.588a2.41 2.41 0 0 0 0-3.41l-7.588-7.588a2.41 2.41 0 0 0-3.41 0z"/>`), g.Group(children),
	)
}

func LetterKDiamondSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.79 1.49a3.16 3.16 0 0 1 3.445.687l7.588 7.588a3.16 3.16 0 0 1 0 4.47l-7.588 7.588a3.16 3.16 0 0 1-4.47 0l-7.588-7.588a3.16 3.16 0 0 1 0-4.47l7.588-7.589a3.2 3.2 0 0 1 1.025-.685m4.458 7.07a.75.75 0 0 0-.996-1.12L10.5 10.773V8A.75.75 0 0 0 9 8v8a.75.75 0 0 0 1.5 0v-2.774l3.752 3.335a.75.75 0 0 0 .996-1.122L11.378 12z"/>`), g.Group(children),
	)
}

func LetterKHexagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9.75 8v4m0 0v4m0-4h.5m0 0l4.5 4m-4.5-4l4.5-4m5.75 7.8V8.2a1.91 1.91 0 0 0-.944-1.645l-6.612-3.8a1.88 1.88 0 0 0-1.888 0l-6.612 3.8A1.9 1.9 0 0 0 3.5 8.2v7.602a1.91 1.91 0 0 0 .944 1.644l6.612 3.8a1.88 1.88 0 0 0 1.888 0l6.612-3.8A1.9 1.9 0 0 0 20.5 15.8"/>`), g.Group(children),
	)
}

func LetterKHexagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.68 2.105a2.63 2.63 0 0 1 2.64 0l.001.001l6.611 3.8A2.65 2.65 0 0 1 21.25 8.2v7.603a2.66 2.66 0 0 1-1.318 2.291l-.003.002l-6.608 3.799h-.002a2.63 2.63 0 0 1-2.639 0h-.001l-6.608-3.8h-.003A2.64 2.64 0 0 1 2.75 15.8V8.198a2.66 2.66 0 0 1 1.318-2.291l.003-.002zm4.568 6.456a.75.75 0 0 0-.996-1.122L10.5 10.774V8A.75.75 0 0 0 9 8v8a.75.75 0 0 0 1.5 0v-2.774l3.752 3.335a.75.75 0 0 0 .996-1.122L11.378 12z"/>`), g.Group(children),
	)
}

func LetterKOctagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9.75 8v4m0 0v4m0-4h.5m0 0l4.5 4m-4.5-4l4.5-4M7.805 3.469C8.16 3.115 8.451 3 8.937 3h6.126c.486 0 .778.115 1.132.469l4.336 4.336c.354.354.469.646.469 1.132v6.126c0 .5-.125.788-.469 1.132l-4.336 4.336c-.354.354-.646.469-1.132.469H8.937c-.5 0-.788-.125-1.132-.469L3.47 16.195c-.355-.355-.47-.646-.47-1.132V8.937c0-.5.125-.788.469-1.132z"/>`), g.Group(children),
	)
}

func LetterKOctagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.037 2.408a2.3 2.3 0 0 1 .9-.158h6.126c.302 0 .602.036.9.158s.54.31.762.53l4.337 4.337c.22.221.408.463.53.762c.123.298.158.598.158.9v6.126c0 .313-.039.616-.163.914a2.3 2.3 0 0 1-.525.748l-4.337 4.337a2.3 2.3 0 0 1-.762.53a2.3 2.3 0 0 1-.9.158H8.937c-.313 0-.616-.039-.914-.163a2.3 2.3 0 0 1-.748-.525l-4.337-4.337a2.3 2.3 0 0 1-.53-.762a2.3 2.3 0 0 1-.158-.9V8.937c0-.313.039-.616.163-.914a2.3 2.3 0 0 1 .525-.748l4.337-4.337c.221-.22.463-.408.762-.53m7.211 6.153a.75.75 0 0 0-.996-1.122L10.5 10.774V8A.75.75 0 0 0 9 8v8a.75.75 0 0 0 1.5 0v-2.774l3.752 3.335a.75.75 0 0 0 .996-1.122L11.378 12z"/>`), g.Group(children),
	)
}

func LetterKSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M15.997 6.336a1 1 0 0 0-1.411-.083L10 10.329V7a1 1 0 0 0-2 0v10a1 1 0 1 0 2 0v-3.329l4.586 4.076a1 1 0 0 0 1.328-1.494L11.13 12l4.784-4.253a1 1 0 0 0 .083-1.411"/>`), g.Group(children),
	)
}

func LetterKSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9.75 8v4m0 0v4m0-4h.5m0 0l4.5 4m-4.5-4l4.5-4M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/>`), g.Group(children),
	)
}

func LetterKSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057m5.881 6.31a.75.75 0 0 0-.996-1.12L10.5 10.773V8A.75.75 0 0 0 9 8v8a.75.75 0 0 0 1.5 0v-2.774l3.752 3.335a.75.75 0 0 0 .996-1.122L11.378 12z"/>`), g.Group(children),
	)
}

func LetterKWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9.75 8v4m0 0v4m0-4h.5m0 0l4.5 4m-4.5-4l4.5-4M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83"/>`), g.Group(children),
	)
}

func LetterKWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.565 2.075a3.33 3.33 0 0 1 2.87 0c.394.189.755.497 1.26.928l.079.066c.48.41.939.604 1.58.655l.102.008c.662.053 1.135.09 1.547.236a3.33 3.33 0 0 1 2.03 2.029c.145.412.182.885.235 1.547l.008.102c.051.641.246 1.1.655 1.58l.066.078c.431.506.74.867.928 1.261a3.33 3.33 0 0 1 0 2.87c-.189.394-.497.755-.928 1.26l-.066.079c-.418.49-.605.951-.655 1.58l-.008.102c-.053.662-.09 1.135-.236 1.547a3.33 3.33 0 0 1-2.029 2.03c-.412.145-.885.182-1.547.235l-.102.008c-.641.051-1.1.246-1.58.655l-.079.066c-.505.431-.866.74-1.26.928a3.33 3.33 0 0 1-2.87 0c-.394-.189-.755-.497-1.26-.928l-.079-.066a2.56 2.56 0 0 0-1.58-.655l-.102-.008c-.662-.053-1.135-.09-1.547-.236a3.33 3.33 0 0 1-2.03-2.029c-.145-.412-.182-.885-.235-1.547l-.008-.102a2.56 2.56 0 0 0-.655-1.58l-.066-.079c-.431-.505-.74-.866-.928-1.26a3.33 3.33 0 0 1 0-2.87c.189-.394.497-.755.928-1.26l.066-.079a2.56 2.56 0 0 0 .655-1.58l.008-.102c.053-.662.09-1.135.236-1.547a3.33 3.33 0 0 1 2.029-2.03c.412-.145.885-.182 1.547-.235l.102-.008a2.56 2.56 0 0 0 1.58-.655l.078-.066c.506-.431.867-.74 1.261-.928m4.683 6.486a.75.75 0 0 0-.996-1.122L10.5 10.774V8A.75.75 0 0 0 9 8v8a.75.75 0 0 0 1.5 0v-2.774l3.752 3.335a.75.75 0 0 0 .996-1.122L11.378 12z"/>`), g.Group(children),
	)
}

func LetterL(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9 7v9.5h7"/>`), g.Group(children),
	)
}

func LetterLCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/><path d="M9.5 8v7.5H15"/></g>`), g.Group(children),
	)
}

func LetterLCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12m8-4a.75.75 0 0 0-1.5 0v7.5c0 .414.336.75.75.75H15a.75.75 0 0 0 0-1.5h-4.75z"/>`), g.Group(children),
	)
}

func LetterLDiamond(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9.5 8v7.5H15"/><path d="M2.707 10.295a2.41 2.41 0 0 0 0 3.41l7.588 7.588a2.41 2.41 0 0 0 3.41 0l7.588-7.588a2.41 2.41 0 0 0 0-3.41l-7.588-7.588a2.41 2.41 0 0 0-3.41 0z"/></g>`), g.Group(children),
	)
}

func LetterLDiamondSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.79 1.49a3.16 3.16 0 0 1 3.445.687l7.588 7.588a3.16 3.16 0 0 1 0 4.47l-7.588 7.588a3.16 3.16 0 0 1-4.47 0l-7.588-7.588a3.16 3.16 0 0 1 0-4.47l7.588-7.589a3.2 3.2 0 0 1 1.025-.685M10.25 8a.75.75 0 0 0-1.5 0v7.5c0 .414.336.75.75.75H15a.75.75 0 0 0 0-1.5h-4.75z"/>`), g.Group(children),
	)
}

func LetterLHexagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9.5 8v7.5H15"/><path d="M20.5 15.8V8.2a1.91 1.91 0 0 0-.944-1.645l-6.612-3.8a1.88 1.88 0 0 0-1.888 0l-6.612 3.8A1.9 1.9 0 0 0 3.5 8.2v7.602a1.91 1.91 0 0 0 .944 1.644l6.612 3.8a1.88 1.88 0 0 0 1.888 0l6.612-3.8A1.9 1.9 0 0 0 20.5 15.8"/></g>`), g.Group(children),
	)
}

func LetterLHexagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.68 2.105a2.63 2.63 0 0 1 2.64 0l.001.001l6.611 3.8A2.65 2.65 0 0 1 21.25 8.2v7.603a2.66 2.66 0 0 1-1.318 2.291l-.003.002l-6.608 3.799h-.002a2.63 2.63 0 0 1-2.639 0h-.001l-6.608-3.8h-.003A2.64 2.64 0 0 1 2.75 15.8V8.198a2.66 2.66 0 0 1 1.318-2.291l.003-.002zM10.25 8a.75.75 0 0 0-1.5 0v7.5c0 .414.336.75.75.75H15a.75.75 0 0 0 0-1.5h-4.75z"/>`), g.Group(children),
	)
}

func LetterLOctagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9.5 8v7.5H15"/><path d="M7.805 3.469C8.16 3.115 8.451 3 8.937 3h6.126c.486 0 .778.115 1.132.469l4.336 4.336c.354.354.469.646.469 1.132v6.126c0 .5-.125.788-.469 1.132l-4.336 4.336c-.354.354-.646.469-1.132.469H8.937c-.5 0-.788-.125-1.132-.469L3.47 16.195c-.355-.355-.47-.646-.47-1.132V8.937c0-.5.125-.788.469-1.132z"/></g>`), g.Group(children),
	)
}

func LetterLOctagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.037 2.408a2.3 2.3 0 0 1 .9-.158h6.126c.302 0 .602.036.9.158s.54.31.762.53l4.337 4.337c.22.221.408.463.53.762c.123.298.158.598.158.9v6.126c0 .313-.039.616-.163.914a2.3 2.3 0 0 1-.525.748l-4.337 4.337a2.3 2.3 0 0 1-.762.53a2.3 2.3 0 0 1-.9.158H8.937c-.313 0-.616-.039-.914-.163a2.3 2.3 0 0 1-.748-.525l-4.337-4.337a2.3 2.3 0 0 1-.53-.762a2.3 2.3 0 0 1-.158-.9V8.937c0-.313.039-.616.163-.914a2.3 2.3 0 0 1 .525-.748l4.337-4.337c.221-.22.463-.408.762-.53M10.25 8a.75.75 0 0 0-1.5 0v7.5c0 .414.336.75.75.75H15a.75.75 0 0 0 0-1.5h-4.75z"/>`), g.Group(children),
	)
}

func LetterLSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9 6a1 1 0 0 0-1 1v9.5a1 1 0 0 0 1 1h7a1 1 0 1 0 0-2h-6V7a1 1 0 0 0-1-1"/>`), g.Group(children),
	)
}

func LetterLSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9.5 8v7.5H15"/><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/></g>`), g.Group(children),
	)
}

func LetterLSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057M10.25 8a.75.75 0 0 0-1.5 0v7.5c0 .414.336.75.75.75H15a.75.75 0 0 0 0-1.5h-4.75z"/>`), g.Group(children),
	)
}

func LetterLWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9.5 8v7.5H15"/><path d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83"/></g>`), g.Group(children),
	)
}

func LetterLWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.565 2.075a3.33 3.33 0 0 1 2.87 0c.394.189.755.497 1.26.928l.079.066c.48.41.939.604 1.58.655l.102.008c.662.053 1.135.09 1.547.236a3.33 3.33 0 0 1 2.03 2.029c.145.412.182.885.235 1.547l.008.102c.051.641.246 1.1.655 1.58l.066.078c.431.506.74.867.928 1.261a3.33 3.33 0 0 1 0 2.87c-.189.394-.497.755-.928 1.26l-.066.079c-.418.49-.605.951-.655 1.58l-.008.102c-.053.662-.09 1.135-.236 1.547a3.33 3.33 0 0 1-2.029 2.03c-.412.145-.885.182-1.547.235l-.102.008c-.641.051-1.1.246-1.58.655l-.079.066c-.505.431-.866.74-1.26.928a3.33 3.33 0 0 1-2.87 0c-.394-.189-.755-.497-1.26-.928l-.079-.066a2.56 2.56 0 0 0-1.58-.655l-.102-.008c-.662-.053-1.135-.09-1.547-.236a3.33 3.33 0 0 1-2.03-2.029c-.145-.412-.182-.885-.235-1.547l-.008-.102a2.56 2.56 0 0 0-.655-1.58l-.066-.079c-.431-.505-.74-.866-.928-1.26a3.33 3.33 0 0 1 0-2.87c.189-.394.497-.755.928-1.26l.066-.079a2.56 2.56 0 0 0 .655-1.58l.008-.102c.053-.662.09-1.135.236-1.547a3.33 3.33 0 0 1 2.029-2.03c.412-.145.885-.182 1.547-.235l.102-.008a2.56 2.56 0 0 0 1.58-.655l.078-.066c.506-.431.867-.74 1.261-.928M10.25 8a.75.75 0 0 0-1.5 0v7.5c0 .414.336.75.75.75H15a.75.75 0 0 0 0-1.5h-4.75z"/>`), g.Group(children),
	)
}

func LetterM(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M8 17V7l3.75 5l3.75-5v10"/>`), g.Group(children),
	)
}

func LetterMCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/><path d="M9 16V8l3 4l3-4v8"/></g>`), g.Group(children),
	)
}

func LetterMCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12M9.6 7.55A.75.75 0 0 0 8.25 8v8a.75.75 0 0 0 1.5 0v-5.75l1.65 2.2a.75.75 0 0 0 1.2 0l1.65-2.2V16a.75.75 0 0 0 1.5 0V8a.75.75 0 0 0-1.35-.45l-2.4 3.2z"/>`), g.Group(children),
	)
}

func LetterMDiamond(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9 16V8l3 4l3-4v8"/><path d="M2.707 10.295a2.41 2.41 0 0 0 0 3.41l7.588 7.588a2.41 2.41 0 0 0 3.41 0l7.588-7.588a2.41 2.41 0 0 0 0-3.41l-7.588-7.588a2.41 2.41 0 0 0-3.41 0z"/></g>`), g.Group(children),
	)
}

func LetterMDiamondSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.79 1.49a3.16 3.16 0 0 1 3.445.687l7.588 7.588a3.16 3.16 0 0 1 0 4.47l-7.588 7.588a3.16 3.16 0 0 1-4.47 0l-7.588-7.588a3.16 3.16 0 0 1 0-4.47l7.588-7.589a3.2 3.2 0 0 1 1.025-.685M9.6 7.55A.75.75 0 0 0 8.25 8v8a.75.75 0 0 0 1.5 0v-5.75l1.65 2.2a.75.75 0 0 0 1.2 0l1.65-2.2V16a.75.75 0 0 0 1.5 0V8a.75.75 0 0 0-1.35-.45l-2.4 3.2z"/>`), g.Group(children),
	)
}

func LetterMHexagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9 16V8l3 4l3-4v8"/><path d="M20.5 15.8V8.2a1.91 1.91 0 0 0-.944-1.645l-6.612-3.8a1.88 1.88 0 0 0-1.888 0l-6.612 3.8A1.9 1.9 0 0 0 3.5 8.2v7.602a1.91 1.91 0 0 0 .944 1.644l6.612 3.8a1.88 1.88 0 0 0 1.888 0l6.612-3.8A1.9 1.9 0 0 0 20.5 15.8"/></g>`), g.Group(children),
	)
}

func LetterMHexagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.68 2.105a2.63 2.63 0 0 1 2.64 0l.001.001l6.611 3.8A2.65 2.65 0 0 1 21.25 8.2v7.603a2.66 2.66 0 0 1-1.318 2.291l-.003.002l-6.608 3.799h-.002a2.63 2.63 0 0 1-2.639 0h-.001l-6.608-3.8h-.003A2.64 2.64 0 0 1 2.75 15.8V8.198a2.66 2.66 0 0 1 1.318-2.291l.003-.002zM9.6 7.55A.75.75 0 0 0 8.25 8v8a.75.75 0 0 0 1.5 0v-5.75l1.65 2.2a.75.75 0 0 0 1.2 0l1.65-2.2V16a.75.75 0 0 0 1.5 0V8a.75.75 0 0 0-1.35-.45l-2.4 3.2z"/>`), g.Group(children),
	)
}

func LetterMOctagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9 16V8l3 4l3-4v8"/><path d="M7.805 3.469C8.16 3.115 8.451 3 8.937 3h6.126c.486 0 .778.115 1.132.469l4.336 4.336c.354.354.469.646.469 1.132v6.126c0 .5-.125.788-.469 1.132l-4.336 4.336c-.354.354-.646.469-1.132.469H8.937c-.5 0-.788-.125-1.132-.469L3.47 16.195c-.355-.355-.47-.646-.47-1.132V8.937c0-.5.125-.788.469-1.132z"/></g>`), g.Group(children),
	)
}

func LetterMOctagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.037 2.408a2.3 2.3 0 0 1 .9-.158h6.126c.302 0 .602.036.9.158s.54.31.762.53l4.337 4.337c.22.221.408.463.53.762c.123.298.158.598.158.9v6.126c0 .313-.039.616-.163.914a2.3 2.3 0 0 1-.525.748l-4.337 4.337a2.3 2.3 0 0 1-.762.53a2.3 2.3 0 0 1-.9.158H8.937c-.313 0-.616-.039-.914-.163a2.3 2.3 0 0 1-.748-.525l-4.337-4.337a2.3 2.3 0 0 1-.53-.762a2.3 2.3 0 0 1-.158-.9V8.937c0-.313.039-.616.163-.914a2.3 2.3 0 0 1 .525-.748l4.337-4.337c.221-.22.463-.408.762-.53M9.6 7.55A.75.75 0 0 0 8.25 8v8a.75.75 0 0 0 1.5 0v-5.75l1.65 2.2a.75.75 0 0 0 1.2 0l1.65-2.2V16a.75.75 0 0 0 1.5 0V8a.75.75 0 0 0-1.35-.45l-2.4 3.2z"/>`), g.Group(children),
	)
}

func LetterMSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.8 6.4A1 1 0 0 0 7 7v10a1 1 0 1 0 2 0v-7l1.95 2.6a1 1 0 0 0 1.6 0L14.5 10v7a1 1 0 1 0 2 0V7a1 1 0 0 0-1.8-.6l-2.95 3.933z"/>`), g.Group(children),
	)
}

func LetterMSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9 16V8l3 4l3-4v8"/><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/></g>`), g.Group(children),
	)
}

func LetterMSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057m.233 5.3A.75.75 0 0 0 8.25 8v8a.75.75 0 0 0 1.5 0v-5.75l1.65 2.2a.75.75 0 0 0 1.2 0l1.65-2.2V16a.75.75 0 0 0 1.5 0V8a.75.75 0 0 0-1.35-.45l-2.4 3.2z"/>`), g.Group(children),
	)
}

func LetterMWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9 16V8l3 4l3-4v8"/><path d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83"/></g>`), g.Group(children),
	)
}

func LetterMWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.565 2.075a3.33 3.33 0 0 1 2.87 0c.394.189.755.497 1.26.928l.079.066c.48.41.939.604 1.58.655l.102.008c.662.053 1.135.09 1.547.236a3.33 3.33 0 0 1 2.03 2.029c.145.412.182.885.235 1.547l.008.102c.051.641.246 1.1.655 1.58l.066.078c.431.506.74.867.928 1.261a3.33 3.33 0 0 1 0 2.87c-.189.394-.497.755-.928 1.26l-.066.079c-.418.49-.605.951-.655 1.58l-.008.102c-.053.662-.09 1.135-.236 1.547a3.33 3.33 0 0 1-2.029 2.03c-.412.145-.885.182-1.547.235l-.102.008c-.641.051-1.1.246-1.58.655l-.079.066c-.505.431-.866.74-1.26.928a3.33 3.33 0 0 1-2.87 0c-.394-.189-.755-.497-1.26-.928l-.079-.066a2.56 2.56 0 0 0-1.58-.655l-.102-.008c-.662-.053-1.135-.09-1.547-.236a3.33 3.33 0 0 1-2.03-2.029c-.145-.412-.182-.885-.235-1.547l-.008-.102a2.56 2.56 0 0 0-.655-1.58l-.066-.079c-.431-.505-.74-.866-.928-1.26a3.33 3.33 0 0 1 0-2.87c.189-.394.497-.755.928-1.26l.066-.079a2.56 2.56 0 0 0 .655-1.58l.008-.102c.053-.662.09-1.135.236-1.547a3.33 3.33 0 0 1 2.029-2.03c.412-.145.885-.182 1.547-.235l.102-.008a2.56 2.56 0 0 0 1.58-.655l.078-.066c.506-.431.867-.74 1.261-.928M9.6 7.55A.75.75 0 0 0 8.25 8v8a.75.75 0 0 0 1.5 0v-5.75l1.65 2.2a.75.75 0 0 0 1.2 0l1.65-2.2V16a.75.75 0 0 0 1.5 0V8a.75.75 0 0 0-1.35-.45l-2.4 3.2z"/>`), g.Group(children),
	)
}

func LetterN(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M8 17V7l7.5 10V7"/>`), g.Group(children),
	)
}

func LetterNCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/><path d="M9 16V8l6 8V8"/></g>`), g.Group(children),
	)
}

func LetterNCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12M9.6 7.55A.75.75 0 0 0 8.25 8v8a.75.75 0 0 0 1.5 0v-5.75l4.65 6.2a.75.75 0 0 0 1.35-.45V8a.75.75 0 0 0-1.5 0v5.75z"/>`), g.Group(children),
	)
}

func LetterNDiamond(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9 16V8l6 8V8"/><path d="M2.707 10.295a2.41 2.41 0 0 0 0 3.41l7.588 7.588a2.41 2.41 0 0 0 3.41 0l7.588-7.588a2.41 2.41 0 0 0 0-3.41l-7.588-7.588a2.41 2.41 0 0 0-3.41 0z"/></g>`), g.Group(children),
	)
}

func LetterNDiamondSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.79 1.49a3.16 3.16 0 0 1 3.445.687l7.588 7.588a3.16 3.16 0 0 1 0 4.47l-7.588 7.588a3.16 3.16 0 0 1-4.47 0l-7.588-7.588a3.16 3.16 0 0 1 0-4.47l7.588-7.589a3.2 3.2 0 0 1 1.025-.685M9.6 7.55A.75.75 0 0 0 8.25 8v8a.75.75 0 0 0 1.5 0v-5.75l4.65 6.2a.75.75 0 0 0 1.35-.45V8a.75.75 0 0 0-1.5 0v5.75z"/>`), g.Group(children),
	)
}

func LetterNHexagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9 16V8l6 8V8"/><path d="M20.5 15.8V8.2a1.91 1.91 0 0 0-.944-1.645l-6.612-3.8a1.88 1.88 0 0 0-1.888 0l-6.612 3.8A1.9 1.9 0 0 0 3.5 8.2v7.602a1.91 1.91 0 0 0 .944 1.644l6.612 3.8a1.88 1.88 0 0 0 1.888 0l6.612-3.8A1.9 1.9 0 0 0 20.5 15.8"/></g>`), g.Group(children),
	)
}

func LetterNHexagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.68 2.105a2.63 2.63 0 0 1 2.64 0l.001.001l6.611 3.8A2.65 2.65 0 0 1 21.25 8.2v7.603a2.66 2.66 0 0 1-1.318 2.291l-.003.002l-6.608 3.799h-.002a2.63 2.63 0 0 1-2.639 0h-.001l-6.608-3.8h-.003A2.64 2.64 0 0 1 2.75 15.8V8.198a2.66 2.66 0 0 1 1.318-2.291l.003-.002zM9.6 7.55A.75.75 0 0 0 8.25 8v8a.75.75 0 0 0 1.5 0v-5.75l4.65 6.2a.75.75 0 0 0 1.35-.45V8a.75.75 0 0 0-1.5 0v5.75z"/>`), g.Group(children),
	)
}

func LetterNOctagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9 16V8l6 8V8"/><path d="M7.805 3.469C8.16 3.115 8.451 3 8.937 3h6.126c.486 0 .778.115 1.132.469l4.336 4.336c.354.354.469.646.469 1.132v6.126c0 .5-.125.788-.469 1.132l-4.336 4.336c-.354.354-.646.469-1.132.469H8.937c-.5 0-.788-.125-1.132-.469L3.47 16.195c-.355-.355-.47-.646-.47-1.132V8.937c0-.5.125-.788.469-1.132z"/></g>`), g.Group(children),
	)
}

func LetterNOctagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.037 2.408a2.3 2.3 0 0 1 .9-.158h6.126c.302 0 .602.036.9.158s.54.31.762.53l4.337 4.337c.22.221.408.463.53.762c.123.298.158.598.158.9v6.126c0 .313-.039.616-.163.914a2.3 2.3 0 0 1-.525.748l-4.337 4.337a2.3 2.3 0 0 1-.762.53a2.3 2.3 0 0 1-.9.158H8.937c-.313 0-.616-.039-.914-.163a2.3 2.3 0 0 1-.748-.525l-4.337-4.337a2.3 2.3 0 0 1-.53-.762a2.3 2.3 0 0 1-.158-.9V8.937c0-.313.039-.616.163-.914a2.3 2.3 0 0 1 .525-.748l4.337-4.337c.221-.22.463-.408.762-.53M9.6 7.55A.75.75 0 0 0 8.25 8v8a.75.75 0 0 0 1.5 0v-5.75l4.65 6.2a.75.75 0 0 0 1.35-.45V8a.75.75 0 0 0-1.5 0v5.75z"/>`), g.Group(children),
	)
}

func LetterNSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.8 6.4A1 1 0 0 0 7 7v10a1 1 0 1 0 2 0v-7l5.7 7.6a1 1 0 0 0 1.8-.6V7a1 1 0 1 0-2 0v7z"/>`), g.Group(children),
	)
}

func LetterNSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9 16V8l6 8V8"/><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/></g>`), g.Group(children),
	)
}

func LetterNSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057m.233 5.3A.75.75 0 0 0 8.25 8v8a.75.75 0 0 0 1.5 0v-5.75l4.65 6.2a.75.75 0 0 0 1.35-.45V8a.75.75 0 0 0-1.5 0v5.75z"/>`), g.Group(children),
	)
}

func LetterNWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9 16V8l6 8V8"/><path d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83"/></g>`), g.Group(children),
	)
}

func LetterNWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.565 2.075a3.33 3.33 0 0 1 2.87 0c.394.189.755.497 1.26.928l.079.066c.48.41.939.604 1.58.655l.102.008c.662.053 1.135.09 1.547.236a3.33 3.33 0 0 1 2.03 2.029c.145.412.182.885.235 1.547l.008.102c.051.641.246 1.1.655 1.58l.066.078c.431.506.74.867.928 1.261a3.33 3.33 0 0 1 0 2.87c-.189.394-.497.755-.928 1.26l-.066.079c-.418.49-.605.951-.655 1.58l-.008.102c-.053.662-.09 1.135-.236 1.547a3.33 3.33 0 0 1-2.029 2.03c-.412.145-.885.182-1.547.235l-.102.008c-.641.051-1.1.246-1.58.655l-.079.066c-.505.431-.866.74-1.26.928a3.33 3.33 0 0 1-2.87 0c-.394-.189-.755-.497-1.26-.928l-.079-.066a2.56 2.56 0 0 0-1.58-.655l-.102-.008c-.662-.053-1.135-.09-1.547-.236a3.33 3.33 0 0 1-2.03-2.029c-.145-.412-.182-.885-.235-1.547l-.008-.102a2.56 2.56 0 0 0-.655-1.58l-.066-.079c-.431-.505-.74-.866-.928-1.26a3.33 3.33 0 0 1 0-2.87c.189-.394.497-.755.928-1.26l.066-.079a2.56 2.56 0 0 0 .655-1.58l.008-.102c.053-.662.09-1.135.236-1.547a3.33 3.33 0 0 1 2.029-2.03c.412-.145.885-.182 1.547-.235l.102-.008a2.56 2.56 0 0 0 1.58-.655l.078-.066c.506-.431.867-.74 1.261-.928M9.6 7.55A.75.75 0 0 0 8.25 8v8a.75.75 0 0 0 1.5 0v-5.75l4.65 6.2a.75.75 0 0 0 1.35-.45V8a.75.75 0 0 0-1.5 0v5.75z"/>`), g.Group(children),
	)
}

func LetterO(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M8 14.5v-5A2.5 2.5 0 0 1 10.5 7H13a2.5 2.5 0 0 1 2.5 2.5v5A2.5 2.5 0 0 1 13 17h-2.5A2.5 2.5 0 0 1 8 14.5"/>`), g.Group(children),
	)
}

func LetterOCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/><path d="M9 14v-4a2 2 0 0 1 2-2h2a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2h-2a2 2 0 0 1-2-2"/></g>`), g.Group(children),
	)
}

func LetterOCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M9.75 10c0-.69.56-1.25 1.25-1.25h2c.69 0 1.25.56 1.25 1.25v4c0 .69-.56 1.25-1.25 1.25h-2c-.69 0-1.25-.56-1.25-1.25z"/><path d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12M11 7.25A2.75 2.75 0 0 0 8.25 10v4A2.75 2.75 0 0 0 11 16.75h2A2.75 2.75 0 0 0 15.75 14v-4A2.75 2.75 0 0 0 13 7.25z"/></g>`), g.Group(children),
	)
}

func LetterODiamond(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9 14v-4a2 2 0 0 1 2-2h2a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2h-2a2 2 0 0 1-2-2"/><path d="M2.707 10.295a2.41 2.41 0 0 0 0 3.41l7.588 7.588a2.41 2.41 0 0 0 3.41 0l7.588-7.588a2.41 2.41 0 0 0 0-3.41l-7.588-7.588a2.41 2.41 0 0 0-3.41 0z"/></g>`), g.Group(children),
	)
}

func LetterODiamondSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M9.75 10c0-.69.56-1.25 1.25-1.25h2c.69 0 1.25.56 1.25 1.25v4c0 .69-.56 1.25-1.25 1.25h-2c-.69 0-1.25-.56-1.25-1.25z"/><path d="M10.79 1.49a3.16 3.16 0 0 1 3.445.687l7.588 7.588a3.16 3.16 0 0 1 0 4.47l-7.588 7.588a3.16 3.16 0 0 1-4.47 0l-7.588-7.588a3.16 3.16 0 0 1 0-4.47l7.588-7.589a3.2 3.2 0 0 1 1.025-.685M11 7.25A2.75 2.75 0 0 0 8.25 10v4A2.75 2.75 0 0 0 11 16.75h2A2.75 2.75 0 0 0 15.75 14v-4A2.75 2.75 0 0 0 13 7.25z"/></g>`), g.Group(children),
	)
}

func LetterOHexagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9 14v-4a2 2 0 0 1 2-2h2a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2h-2a2 2 0 0 1-2-2"/><path d="M20.5 15.8V8.2a1.91 1.91 0 0 0-.944-1.645l-6.612-3.8a1.88 1.88 0 0 0-1.888 0l-6.612 3.8A1.9 1.9 0 0 0 3.5 8.2v7.602a1.91 1.91 0 0 0 .944 1.644l6.612 3.8a1.88 1.88 0 0 0 1.888 0l6.612-3.8A1.9 1.9 0 0 0 20.5 15.8"/></g>`), g.Group(children),
	)
}

func LetterOHexagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M9.75 10c0-.69.56-1.25 1.25-1.25h2c.69 0 1.25.56 1.25 1.25v4c0 .69-.56 1.25-1.25 1.25h-2c-.69 0-1.25-.56-1.25-1.25z"/><path d="M10.68 2.105a2.63 2.63 0 0 1 2.64 0l.001.001l6.611 3.8A2.65 2.65 0 0 1 21.25 8.2v7.603a2.66 2.66 0 0 1-1.318 2.291l-.003.002l-6.608 3.799h-.002a2.63 2.63 0 0 1-2.639 0h-.001l-6.608-3.8h-.003A2.64 2.64 0 0 1 2.75 15.8V8.198a2.66 2.66 0 0 1 1.318-2.291l.003-.002zM11 7.25A2.75 2.75 0 0 0 8.25 10v4A2.75 2.75 0 0 0 11 16.75h2A2.75 2.75 0 0 0 15.75 14v-4A2.75 2.75 0 0 0 13 7.25z"/></g>`), g.Group(children),
	)
}

func LetterOOctagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9 14v-4a2 2 0 0 1 2-2h2a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2h-2a2 2 0 0 1-2-2"/><path d="M7.805 3.469C8.16 3.115 8.451 3 8.937 3h6.126c.486 0 .778.115 1.132.469l4.336 4.336c.354.354.469.646.469 1.132v6.126c0 .5-.125.788-.469 1.132l-4.336 4.336c-.354.354-.646.469-1.132.469H8.937c-.5 0-.788-.125-1.132-.469L3.47 16.195c-.355-.355-.47-.646-.47-1.132V8.937c0-.5.125-.788.469-1.132z"/></g>`), g.Group(children),
	)
}

func LetterOOctagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M9.75 10c0-.69.56-1.25 1.25-1.25h2c.69 0 1.25.56 1.25 1.25v4c0 .69-.56 1.25-1.25 1.25h-2c-.69 0-1.25-.56-1.25-1.25z"/><path d="M8.037 2.408a2.3 2.3 0 0 1 .9-.158h6.126c.302 0 .602.036.9.158s.54.31.762.53l4.337 4.337c.22.221.408.463.53.762c.123.298.158.598.158.9v6.126c0 .313-.039.616-.163.914a2.3 2.3 0 0 1-.525.748l-4.337 4.337a2.3 2.3 0 0 1-.762.53a2.3 2.3 0 0 1-.9.158H8.937c-.313 0-.616-.039-.914-.163a2.3 2.3 0 0 1-.748-.525l-4.337-4.337a2.3 2.3 0 0 1-.53-.762a2.3 2.3 0 0 1-.158-.9V8.937c0-.313.039-.616.163-.914a2.3 2.3 0 0 1 .525-.748l4.337-4.337c.221-.22.463-.408.762-.53M11 7.25A2.75 2.75 0 0 0 8.25 10v4A2.75 2.75 0 0 0 11 16.75h2A2.75 2.75 0 0 0 15.75 14v-4A2.75 2.75 0 0 0 13 7.25z"/></g>`), g.Group(children),
	)
}

func LetterOSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.5 6A3.5 3.5 0 0 0 7 9.5v5a3.5 3.5 0 0 0 3.5 3.5H13a3.5 3.5 0 0 0 3.5-3.5v-5A3.5 3.5 0 0 0 13 6zM9 9.5A1.5 1.5 0 0 1 10.5 8H13a1.5 1.5 0 0 1 1.5 1.5v5A1.5 1.5 0 0 1 13 16h-2.5A1.5 1.5 0 0 1 9 14.5z"/>`), g.Group(children),
	)
}

func LetterOSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9 14v-4a2 2 0 0 1 2-2h2a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2h-2a2 2 0 0 1-2-2"/><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/></g>`), g.Group(children),
	)
}

func LetterOSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M9.75 10c0-.69.56-1.25 1.25-1.25h2c.69 0 1.25.56 1.25 1.25v4c0 .69-.56 1.25-1.25 1.25h-2c-.69 0-1.25-.56-1.25-1.25z"/><path d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057m1.633 5A2.75 2.75 0 0 0 8.25 10v4A2.75 2.75 0 0 0 11 16.75h2A2.75 2.75 0 0 0 15.75 14v-4A2.75 2.75 0 0 0 13 7.25z"/></g>`), g.Group(children),
	)
}

func LetterOWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9 14v-4a2 2 0 0 1 2-2h2a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2h-2a2 2 0 0 1-2-2"/><path d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83"/></g>`), g.Group(children),
	)
}

func LetterOWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M9.75 10c0-.69.56-1.25 1.25-1.25h2c.69 0 1.25.56 1.25 1.25v4c0 .69-.56 1.25-1.25 1.25h-2c-.69 0-1.25-.56-1.25-1.25z"/><path d="M10.565 2.075a3.33 3.33 0 0 1 2.87 0c.394.189.755.497 1.26.928l.079.066c.48.41.939.604 1.58.655l.102.008c.662.053 1.135.09 1.547.236a3.33 3.33 0 0 1 2.03 2.029c.145.412.182.885.235 1.547l.008.102c.051.641.246 1.1.655 1.58l.066.078c.431.506.74.867.928 1.261a3.33 3.33 0 0 1 0 2.87c-.189.394-.497.755-.928 1.26l-.066.079c-.418.49-.605.951-.655 1.58l-.008.102c-.053.662-.09 1.135-.236 1.547a3.33 3.33 0 0 1-2.029 2.03c-.412.145-.885.182-1.547.235l-.102.008c-.641.051-1.1.246-1.58.655l-.079.066c-.505.431-.866.74-1.26.928a3.33 3.33 0 0 1-2.87 0c-.394-.189-.755-.497-1.26-.928l-.079-.066a2.56 2.56 0 0 0-1.58-.655l-.102-.008c-.662-.053-1.135-.09-1.547-.236a3.33 3.33 0 0 1-2.03-2.029c-.145-.412-.182-.885-.235-1.547l-.008-.102a2.56 2.56 0 0 0-.655-1.58l-.066-.079c-.431-.505-.74-.866-.928-1.26a3.33 3.33 0 0 1 0-2.87c.189-.394.497-.755.928-1.26l.066-.079a2.56 2.56 0 0 0 .655-1.58l.008-.102c.053-.662.09-1.135.236-1.547a3.33 3.33 0 0 1 2.029-2.03c.412-.145.885-.182 1.547-.235l.102-.008a2.56 2.56 0 0 0 1.58-.655l.078-.066c.506-.431.867-.74 1.261-.928M11 7.25A2.75 2.75 0 0 0 8.25 10v4A2.75 2.75 0 0 0 11 16.75h2A2.75 2.75 0 0 0 15.75 14v-4A2.75 2.75 0 0 0 13 7.25z"/></g>`), g.Group(children),
	)
}

func LetterP(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9 12V7.625C9 7.28 9.28 7 9.625 7h3.75c1.036 0 1.875.84 1.875 1.875v1.25c0 1.036-.84 1.875-1.875 1.875zm0 0v5"/>`), g.Group(children),
	)
}

func LetterPCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/><path d="M9.75 12V8.5a.5.5 0 0 1 .5-.5h3a1.5 1.5 0 0 1 1.5 1.5v1a1.5 1.5 0 0 1-1.5 1.5zm0 0v4"/></g>`), g.Group(children),
	)
}

func LetterPCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M13.25 11.25H10.5v-2.5h2.75a.75.75 0 0 1 .75.75v1a.75.75 0 0 1-.75.75"/><path d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12m8-4.75C9.56 7.25 9 7.81 9 8.5V16a.75.75 0 0 0 1.5 0v-3.25h2.75a2.25 2.25 0 0 0 2.25-2.25v-1a2.25 2.25 0 0 0-2.25-2.25z"/></g>`), g.Group(children),
	)
}

func LetterPDiamond(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9.75 12V8.5a.5.5 0 0 1 .5-.5h3a1.5 1.5 0 0 1 1.5 1.5v1a1.5 1.5 0 0 1-1.5 1.5zm0 0v4"/><path d="M2.707 10.295a2.41 2.41 0 0 0 0 3.41l7.588 7.588a2.41 2.41 0 0 0 3.41 0l7.588-7.588a2.41 2.41 0 0 0 0-3.41l-7.588-7.588a2.41 2.41 0 0 0-3.41 0z"/></g>`), g.Group(children),
	)
}

func LetterPDiamondSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M13.25 11.25H10.5v-2.5h2.75a.75.75 0 0 1 .75.75v1a.75.75 0 0 1-.75.75"/><path d="M10.79 1.49a3.16 3.16 0 0 1 3.445.687l7.588 7.588a3.16 3.16 0 0 1 0 4.47l-7.588 7.588a3.16 3.16 0 0 1-4.47 0l-7.588-7.588a3.16 3.16 0 0 1 0-4.47l7.588-7.589a3.2 3.2 0 0 1 1.025-.685m-.54 5.76A1.25 1.25 0 0 0 9 8.5V16a.75.75 0 0 0 1.5 0v-3.25h2.75a2.25 2.25 0 0 0 2.25-2.25v-1a2.25 2.25 0 0 0-2.25-2.25z"/></g>`), g.Group(children),
	)
}

func LetterPHexagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9.75 12V8.5a.5.5 0 0 1 .5-.5h3a1.5 1.5 0 0 1 1.5 1.5v1a1.5 1.5 0 0 1-1.5 1.5zm0 0v4"/><path d="M20.5 15.8V8.2a1.91 1.91 0 0 0-.944-1.645l-6.612-3.8a1.88 1.88 0 0 0-1.888 0l-6.612 3.8A1.9 1.9 0 0 0 3.5 8.2v7.602a1.91 1.91 0 0 0 .944 1.644l6.612 3.8a1.88 1.88 0 0 0 1.888 0l6.612-3.8A1.9 1.9 0 0 0 20.5 15.8"/></g>`), g.Group(children),
	)
}

func LetterPHexagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M13.25 11.25H10.5v-2.5h2.75a.75.75 0 0 1 .75.75v1a.75.75 0 0 1-.75.75"/><path d="M10.68 2.105a2.63 2.63 0 0 1 2.64 0l.001.001l6.611 3.8A2.65 2.65 0 0 1 21.25 8.2v7.603a2.66 2.66 0 0 1-1.318 2.291l-.003.002l-6.608 3.799h-.002a2.63 2.63 0 0 1-2.639 0h-.001l-6.608-3.8h-.003A2.64 2.64 0 0 1 2.75 15.8V8.198a2.66 2.66 0 0 1 1.318-2.291l.003-.002zm-.43 5.145C9.56 7.25 9 7.81 9 8.5V16a.75.75 0 0 0 1.5 0v-3.25h2.75a2.25 2.25 0 0 0 2.25-2.25v-1a2.25 2.25 0 0 0-2.25-2.25z"/></g>`), g.Group(children),
	)
}

func LetterPOctagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9.75 12V8.5a.5.5 0 0 1 .5-.5h3a1.5 1.5 0 0 1 1.5 1.5v1a1.5 1.5 0 0 1-1.5 1.5zm0 0v4"/><path d="M7.805 3.469C8.16 3.115 8.451 3 8.937 3h6.126c.486 0 .778.115 1.132.469l4.336 4.336c.354.354.469.646.469 1.132v6.126c0 .5-.125.788-.469 1.132l-4.336 4.336c-.354.354-.646.469-1.132.469H8.937c-.5 0-.788-.125-1.132-.469L3.47 16.195c-.355-.355-.47-.646-.47-1.132V8.937c0-.5.125-.788.469-1.132z"/></g>`), g.Group(children),
	)
}

func LetterPOctagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M13.25 11.25H10.5v-2.5h2.75a.75.75 0 0 1 .75.75v1a.75.75 0 0 1-.75.75"/><path d="M8.037 2.408a2.3 2.3 0 0 1 .9-.158h6.126c.302 0 .602.036.9.158s.54.31.762.53l4.337 4.337c.22.221.408.463.53.762c.123.298.158.598.158.9v6.126c0 .313-.039.616-.163.914a2.3 2.3 0 0 1-.525.748l-4.337 4.337a2.3 2.3 0 0 1-.762.53a2.3 2.3 0 0 1-.9.158H8.937c-.313 0-.616-.039-.914-.163a2.3 2.3 0 0 1-.748-.525l-4.337-4.337a2.3 2.3 0 0 1-.53-.762a2.3 2.3 0 0 1-.158-.9V8.937c0-.313.039-.616.163-.914a2.3 2.3 0 0 1 .525-.748l4.337-4.337c.221-.22.463-.408.762-.53M10.25 7.25C9.56 7.25 9 7.81 9 8.5V16a.75.75 0 0 0 1.5 0v-3.25h2.75a2.25 2.25 0 0 0 2.25-2.25v-1a2.25 2.25 0 0 0-2.25-2.25z"/></g>`), g.Group(children),
	)
}

func LetterPSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.625 6C8.728 6 8 6.728 8 7.625V17a1 1 0 1 0 2 0v-4h3.375a2.875 2.875 0 0 0 2.875-2.875v-1.25A2.875 2.875 0 0 0 13.375 6zM10 11V8h3.375c.483 0 .875.392.875.875v1.25a.875.875 0 0 1-.875.875z"/>`), g.Group(children),
	)
}

func LetterPSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9.75 12V8.5a.5.5 0 0 1 .5-.5h3a1.5 1.5 0 0 1 1.5 1.5v1a1.5 1.5 0 0 1-1.5 1.5zm0 0v4"/><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/></g>`), g.Group(children),
	)
}

func LetterPSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M13.25 11.25H10.5v-2.5h2.75a.75.75 0 0 1 .75.75v1a.75.75 0 0 1-.75.75"/><path d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057m.883 5C9.56 7.25 9 7.81 9 8.5V16a.75.75 0 0 0 1.5 0v-3.25h2.75a2.25 2.25 0 0 0 2.25-2.25v-1a2.25 2.25 0 0 0-2.25-2.25z"/></g>`), g.Group(children),
	)
}

func LetterPWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9.75 12V8.5a.5.5 0 0 1 .5-.5h3a1.5 1.5 0 0 1 1.5 1.5v1a1.5 1.5 0 0 1-1.5 1.5zm0 0v4"/><path d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83"/></g>`), g.Group(children),
	)
}

func LetterPWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M13.25 11.25H10.5v-2.5h2.75a.75.75 0 0 1 .75.75v1a.75.75 0 0 1-.75.75"/><path d="M10.565 2.075a3.33 3.33 0 0 1 2.87 0c.394.189.755.497 1.26.928l.079.066c.48.41.939.604 1.58.655l.102.008c.662.053 1.135.09 1.547.236a3.33 3.33 0 0 1 2.03 2.029c.145.412.182.885.235 1.547l.008.102c.051.641.246 1.1.655 1.58l.066.078c.431.506.74.867.928 1.261a3.33 3.33 0 0 1 0 2.87c-.189.394-.497.755-.928 1.26l-.066.079c-.418.49-.605.951-.655 1.58l-.008.102c-.053.662-.09 1.135-.236 1.547a3.33 3.33 0 0 1-2.029 2.03c-.412.145-.885.182-1.547.235l-.102.008c-.641.051-1.1.246-1.58.655l-.079.066c-.505.431-.866.74-1.26.928a3.33 3.33 0 0 1-2.87 0c-.394-.189-.755-.497-1.26-.928l-.079-.066a2.56 2.56 0 0 0-1.58-.655l-.102-.008c-.662-.053-1.135-.09-1.547-.236a3.33 3.33 0 0 1-2.03-2.029c-.145-.412-.182-.885-.235-1.547l-.008-.102a2.56 2.56 0 0 0-.655-1.58l-.066-.079c-.431-.505-.74-.866-.928-1.26a3.33 3.33 0 0 1 0-2.87c.189-.394.497-.755.928-1.26l.066-.079a2.56 2.56 0 0 0 .655-1.58l.008-.102c.053-.662.09-1.135.236-1.547a3.33 3.33 0 0 1 2.029-2.03c.412-.145.885-.182 1.547-.235l.102-.008a2.56 2.56 0 0 0 1.58-.655l.078-.066c.506-.431.867-.74 1.261-.928M10.25 7.25C9.56 7.25 9 7.81 9 8.5V16a.75.75 0 0 0 1.5 0v-3.25h2.75a2.25 2.25 0 0 0 2.25-2.25v-1a2.25 2.25 0 0 0-2.25-2.25z"/></g>`), g.Group(children),
	)
}

func LetterQ(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M15.385 16.882V9.471A2.466 2.466 0 0 0 12.923 7h-2.462A2.466 2.466 0 0 0 8 9.47v4.942a2.466 2.466 0 0 0 2.461 2.47zm0 0l-2.462-2.47m2.462 2.47L16 17.5"/>`), g.Group(children),
	)
}

func LetterQCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/><path d="M15 16v-6a2 2 0 0 0-2-2h-2a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2zm0 0l-2-2m2 2l.5.5"/></g>`), g.Group(children),
	)
}

func LetterQCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M9.75 10c0-.69.56-1.25 1.25-1.25h2c.69 0 1.25.56 1.25 1.25v4.19l-.72-.72a.75.75 0 1 0-1.06 1.06l.72.72H11c-.69 0-1.25-.56-1.25-1.25z"/><path d="M2.25 12c0 5.385 4.365 9.75 9.75 9.75s9.75-4.365 9.75-9.75S17.385 2.25 12 2.25S2.25 6.615 2.25 12m13.5-2v5.69l.28.28a.75.75 0 1 1-1.06 1.06l-.28-.28H11A2.75 2.75 0 0 1 8.25 14v-4A2.75 2.75 0 0 1 11 7.25h2A2.75 2.75 0 0 1 15.75 10"/></g>`), g.Group(children),
	)
}

func LetterQDiamond(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M15 16v-6a2 2 0 0 0-2-2h-2a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2zm0 0l-2-2m2 2l.5.5"/><path d="M2.707 10.295a2.41 2.41 0 0 0 0 3.41l7.588 7.588a2.41 2.41 0 0 0 3.41 0l7.588-7.588a2.41 2.41 0 0 0 0-3.41l-7.588-7.588a2.41 2.41 0 0 0-3.41 0z"/></g>`), g.Group(children),
	)
}

func LetterQDiamondSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M9.75 10c0-.69.56-1.25 1.25-1.25h2c.69 0 1.25.56 1.25 1.25v4.19l-.72-.72a.75.75 0 1 0-1.06 1.06l.72.72H11c-.69 0-1.25-.56-1.25-1.25z"/><path d="M10.79 1.49a3.2 3.2 0 0 0-1.025.686L2.177 9.765a3.16 3.16 0 0 0 0 4.47l7.588 7.588a3.16 3.16 0 0 0 4.47 0l7.588-7.588a3.16 3.16 0 0 0 0-4.47l-7.588-7.588a3.16 3.16 0 0 0-3.445-.686M15.75 10v5.69l.28.28a.75.75 0 1 1-1.06 1.06l-.28-.28H11A2.75 2.75 0 0 1 8.25 14v-4A2.75 2.75 0 0 1 11 7.25h2A2.75 2.75 0 0 1 15.75 10"/></g>`), g.Group(children),
	)
}

func LetterQHexagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M15 16v-6a2 2 0 0 0-2-2h-2a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2zm0 0l-2-2m2 2l.5.5"/><path d="M20.5 15.8V8.2a1.91 1.91 0 0 0-.944-1.645l-6.612-3.8a1.88 1.88 0 0 0-1.888 0l-6.612 3.8A1.9 1.9 0 0 0 3.5 8.2v7.602a1.91 1.91 0 0 0 .944 1.644l6.612 3.8a1.88 1.88 0 0 0 1.888 0l6.612-3.8A1.9 1.9 0 0 0 20.5 15.8"/></g>`), g.Group(children),
	)
}

func LetterQHexagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M9.75 10c0-.69.56-1.25 1.25-1.25h2c.69 0 1.25.56 1.25 1.25v4.19l-.72-.72a.75.75 0 1 0-1.06 1.06l.72.72H11c-.69 0-1.25-.56-1.25-1.25z"/><path d="m10.68 2.105l-6.61 3.8l-.002.002A2.65 2.65 0 0 0 2.75 8.198v7.603a2.64 2.64 0 0 0 1.318 2.292l.003.002l6.608 3.799h.002a2.63 2.63 0 0 0 2.639 0h.001l6.608-3.8h.003A2.65 2.65 0 0 0 21.25 15.8V8.2a2.65 2.65 0 0 0-1.318-2.292l-6.61-3.8l-.002-.002a2.63 2.63 0 0 0-2.64 0M15.75 10v5.69l.28.28a.75.75 0 1 1-1.06 1.06l-.28-.28H11A2.75 2.75 0 0 1 8.25 14v-4A2.75 2.75 0 0 1 11 7.25h2A2.75 2.75 0 0 1 15.75 10"/></g>`), g.Group(children),
	)
}

func LetterQOctagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M15 16v-6a2 2 0 0 0-2-2h-2a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2zm0 0l-2-2m2 2l.5.5"/><path d="M7.805 3.469C8.16 3.115 8.451 3 8.937 3h6.126c.486 0 .778.115 1.132.469l4.336 4.336c.354.354.469.646.469 1.132v6.126c0 .5-.125.788-.469 1.132l-4.336 4.336c-.354.354-.646.469-1.132.469H8.937c-.5 0-.788-.125-1.132-.469L3.47 16.195c-.355-.355-.47-.646-.47-1.132V8.937c0-.5.125-.788.469-1.132z"/></g>`), g.Group(children),
	)
}

func LetterQOctagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M9.75 10c0-.69.56-1.25 1.25-1.25h2c.69 0 1.25.56 1.25 1.25v4.19l-.72-.72a.75.75 0 1 0-1.06 1.06l.72.72H11c-.69 0-1.25-.56-1.25-1.25z"/><path d="M8.037 2.408c-.299.122-.54.31-.762.53L2.938 7.275c-.213.214-.4.45-.525.748a2.3 2.3 0 0 0-.163.914v6.126c0 .302.036.602.158.9s.31.54.53.762l4.337 4.337c.214.213.45.4.748.524c.298.125.601.164.914.164h6.126c.302 0 .602-.035.9-.158c.299-.122.54-.31.762-.53l4.337-4.337c.213-.214.4-.45.524-.748a2.3 2.3 0 0 0 .164-.914V8.937a2.3 2.3 0 0 0-.158-.9a2.3 2.3 0 0 0-.53-.762l-4.337-4.337a2.3 2.3 0 0 0-.762-.53a2.3 2.3 0 0 0-.9-.158H8.937a2.3 2.3 0 0 0-.9.158M15.75 10v5.69l.28.28a.75.75 0 1 1-1.06 1.06l-.28-.28H11A2.75 2.75 0 0 1 8.25 14v-4A2.75 2.75 0 0 1 11 7.25h2A2.75 2.75 0 0 1 15.75 10"/></g>`), g.Group(children),
	)
}

func LetterQSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.462 6A3.466 3.466 0 0 0 7 9.47v4.942a3.466 3.466 0 0 0 3.461 3.47h4.508l.323.324a1 1 0 0 0 1.416-1.412l-.323-.325V9.471A3.466 3.466 0 0 0 12.923 6zM9 9.47C9 8.656 9.658 8 10.461 8h2.462c.804 0 1.462.655 1.462 1.47v4.992l-.753-.756a1 1 0 1 0-1.417 1.412l.762.764H10.46A1.466 1.466 0 0 1 9 14.412z"/>`), g.Group(children),
	)
}

func LetterQSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M15 16v-6a2 2 0 0 0-2-2h-2a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2zm0 0l-2-2m2 2l.5.5"/><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/></g>`), g.Group(children),
	)
}

func LetterQSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M9.75 10c0-.69.56-1.25 1.25-1.25h2c.69 0 1.25.56 1.25 1.25v4.19l-.72-.72a.75.75 0 1 0-1.06 1.06l.72.72H11c-.69 0-1.25-.56-1.25-1.25z"/><path d="M9.367 2.25c-1.092 0-1.958 0-2.655.057c-.714.058-1.317.18-1.868.46a4.75 4.75 0 0 0-2.076 2.077c-.281.55-.403 1.154-.461 1.868c-.057.697-.057 1.563-.057 2.655v5.266c0 1.092 0 1.958.057 2.655c.058.714.18 1.317.46 1.869a4.75 4.75 0 0 0 2.077 2.075c.55.281 1.154.403 1.868.461c.697.057 1.563.057 2.655.057h5.266c1.092 0 1.958 0 2.655-.057c.714-.058 1.317-.18 1.869-.46a4.75 4.75 0 0 0 2.075-2.076c.281-.552.403-1.155.461-1.869c.057-.697.057-1.563.057-2.655V9.367c0-1.092 0-1.958-.057-2.655c-.058-.714-.18-1.317-.46-1.868a4.75 4.75 0 0 0-2.076-2.076c-.552-.281-1.155-.403-1.869-.461c-.697-.057-1.563-.057-2.655-.057zM15.75 10v5.69l.28.28a.75.75 0 1 1-1.06 1.06l-.28-.28H11A2.75 2.75 0 0 1 8.25 14v-4A2.75 2.75 0 0 1 11 7.25h2A2.75 2.75 0 0 1 15.75 10"/></g>`), g.Group(children),
	)
}

func LetterQWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M15 16v-6a2 2 0 0 0-2-2h-2a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2zm0 0l-2-2m2 2l.5.5"/><path d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83"/></g>`), g.Group(children),
	)
}

func LetterQWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M9.75 10c0-.69.56-1.25 1.25-1.25h2c.69 0 1.25.56 1.25 1.25v4.19l-.72-.72a.75.75 0 1 0-1.06 1.06l.72.72H11c-.69 0-1.25-.56-1.25-1.25z"/><path d="M10.565 2.075c-.394.189-.755.497-1.26.928l-.079.066a2.56 2.56 0 0 1-1.58.655l-.102.008c-.662.053-1.135.09-1.547.236a3.33 3.33 0 0 0-2.03 2.029c-.145.412-.182.885-.235 1.547l-.008.102a2.56 2.56 0 0 1-.655 1.58l-.066.078c-.431.506-.74.867-.928 1.261a3.33 3.33 0 0 0 0 2.87c.189.394.497.755.928 1.26l.066.079c.41.48.604.939.655 1.58l.008.102c.053.662.09 1.135.236 1.547a3.33 3.33 0 0 0 2.029 2.03c.412.145.885.182 1.547.235l.102.008c.629.05 1.09.238 1.58.655l.079.066c.505.431.866.74 1.26.928a3.33 3.33 0 0 0 2.87 0c.394-.189.755-.497 1.26-.928l.079-.066c.48-.41.939-.604 1.58-.655l.102-.008c.662-.053 1.135-.09 1.547-.236a3.33 3.33 0 0 0 2.03-2.029c.145-.412.182-.885.235-1.547l.008-.102c.05-.629.238-1.09.655-1.58l.066-.079c.431-.505.74-.866.928-1.26a3.33 3.33 0 0 0 0-2.87c-.189-.394-.497-.755-.928-1.26l-.066-.079a2.56 2.56 0 0 1-.655-1.58l-.008-.102c-.053-.662-.09-1.135-.236-1.547a3.33 3.33 0 0 0-2.029-2.03c-.412-.145-.885-.182-1.547-.235l-.102-.008a2.56 2.56 0 0 1-1.58-.655l-.079-.066c-.505-.431-.866-.74-1.26-.928a3.33 3.33 0 0 0-2.87 0M15.75 10v5.69l.28.28a.75.75 0 1 1-1.06 1.06l-.28-.28H11A2.75 2.75 0 0 1 8.25 14v-4A2.75 2.75 0 0 1 11 7.25h2A2.75 2.75 0 0 1 15.75 10"/></g>`), g.Group(children),
	)
}

func LetterR(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9 12V7.625C9 7.28 9.28 7 9.625 7h3.75c1.036 0 1.875.84 1.875 1.875v1.25c0 1.036-.84 1.875-1.875 1.875h-2.187M9 12v5m0-5h2.188m0 0l3.75 5"/>`), g.Group(children),
	)
}

func LetterRCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/><path d="M9.75 12V8.5a.5.5 0 0 1 .5-.5h3a1.5 1.5 0 0 1 1.5 1.5v1a1.5 1.5 0 0 1-1.5 1.5H11.5m-1.75 0v4m0-4h1.75m0 0l3 4"/></g>`), g.Group(children),
	)
}

func LetterRCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M13.25 11.25H10.5v-2.5h2.75a.75.75 0 0 1 .75.75v1a.75.75 0 0 1-.75.75"/><path d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12m8-4.75C9.56 7.25 9 7.81 9 8.5V16a.75.75 0 0 0 1.5 0v-3.25h.625l2.775 3.7a.75.75 0 1 0 1.2-.9l-2.1-2.8h.25a2.25 2.25 0 0 0 2.25-2.25v-1a2.25 2.25 0 0 0-2.25-2.25z"/></g>`), g.Group(children),
	)
}

func LetterRDiamond(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9.75 12V8.5a.5.5 0 0 1 .5-.5h3a1.5 1.5 0 0 1 1.5 1.5v1a1.5 1.5 0 0 1-1.5 1.5H11.5m-1.75 0v4m0-4h1.75m0 0l3 4"/><path d="M2.707 10.295a2.41 2.41 0 0 0 0 3.41l7.588 7.588a2.41 2.41 0 0 0 3.41 0l7.588-7.588a2.41 2.41 0 0 0 0-3.41l-7.588-7.588a2.41 2.41 0 0 0-3.41 0z"/></g>`), g.Group(children),
	)
}

func LetterRDiamondSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M13.25 11.25H10.5v-2.5h2.75a.75.75 0 0 1 .75.75v1a.75.75 0 0 1-.75.75"/><path d="M10.79 1.49a3.16 3.16 0 0 1 3.445.687l7.588 7.588a3.16 3.16 0 0 1 0 4.47l-7.588 7.588a3.16 3.16 0 0 1-4.47 0l-7.588-7.588a3.16 3.16 0 0 1 0-4.47l7.588-7.589a3.2 3.2 0 0 1 1.025-.685m-.54 5.76A1.25 1.25 0 0 0 9 8.5V16a.75.75 0 0 0 1.5 0v-3.25h.625l2.775 3.7a.75.75 0 1 0 1.2-.9l-2.1-2.8h.25a2.25 2.25 0 0 0 2.25-2.25v-1a2.25 2.25 0 0 0-2.25-2.25z"/></g>`), g.Group(children),
	)
}

func LetterRHexagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9.75 12V8.5a.5.5 0 0 1 .5-.5h3a1.5 1.5 0 0 1 1.5 1.5v1a1.5 1.5 0 0 1-1.5 1.5H11.5m-1.75 0v4m0-4h1.75m0 0l3 4"/><path d="M20.5 15.8V8.2a1.91 1.91 0 0 0-.944-1.645l-6.612-3.8a1.88 1.88 0 0 0-1.888 0l-6.612 3.8A1.9 1.9 0 0 0 3.5 8.2v7.602a1.91 1.91 0 0 0 .944 1.644l6.612 3.8a1.88 1.88 0 0 0 1.888 0l6.612-3.8A1.9 1.9 0 0 0 20.5 15.8"/></g>`), g.Group(children),
	)
}

func LetterRHexagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M13.25 11.25H10.5v-2.5h2.75a.75.75 0 0 1 .75.75v1a.75.75 0 0 1-.75.75"/><path d="M10.68 2.105a2.63 2.63 0 0 1 2.64 0l.001.001l6.611 3.8A2.65 2.65 0 0 1 21.25 8.2v7.603a2.66 2.66 0 0 1-1.318 2.291l-.003.002l-6.608 3.799h-.002a2.63 2.63 0 0 1-2.639 0h-.001l-6.608-3.8h-.003A2.64 2.64 0 0 1 2.75 15.8V8.198a2.66 2.66 0 0 1 1.318-2.291l.003-.002zm-.43 5.145C9.56 7.25 9 7.81 9 8.5V16a.75.75 0 0 0 1.5 0v-3.25h.625l2.775 3.7a.75.75 0 1 0 1.2-.9l-2.1-2.8h.25a2.25 2.25 0 0 0 2.25-2.25v-1a2.25 2.25 0 0 0-2.25-2.25z"/></g>`), g.Group(children),
	)
}

func LetterROctagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9.75 12V8.5a.5.5 0 0 1 .5-.5h3a1.5 1.5 0 0 1 1.5 1.5v1a1.5 1.5 0 0 1-1.5 1.5H11.5m-1.75 0v4m0-4h1.75m0 0l3 4"/><path d="M7.805 3.469C8.16 3.115 8.451 3 8.937 3h6.126c.486 0 .778.115 1.132.469l4.336 4.336c.354.354.469.646.469 1.132v6.126c0 .5-.125.788-.469 1.132l-4.336 4.336c-.354.354-.646.469-1.132.469H8.937c-.5 0-.788-.125-1.132-.469L3.47 16.195c-.355-.355-.47-.646-.47-1.132V8.937c0-.5.125-.788.469-1.132z"/></g>`), g.Group(children),
	)
}

func LetterROctagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M13.25 11.25H10.5v-2.5h2.75a.75.75 0 0 1 .75.75v1a.75.75 0 0 1-.75.75"/><path d="M8.037 2.408a2.3 2.3 0 0 1 .9-.158h6.126c.302 0 .602.036.9.158s.54.31.762.53l4.337 4.337c.22.221.408.463.53.762c.123.298.158.598.158.9v6.126c0 .313-.039.616-.163.914a2.3 2.3 0 0 1-.525.748l-4.337 4.337a2.3 2.3 0 0 1-.762.53a2.3 2.3 0 0 1-.9.158H8.937c-.313 0-.616-.039-.914-.163a2.3 2.3 0 0 1-.748-.525l-4.337-4.337a2.3 2.3 0 0 1-.53-.762a2.3 2.3 0 0 1-.158-.9V8.937c0-.313.039-.616.163-.914a2.3 2.3 0 0 1 .525-.748l4.337-4.337c.221-.22.463-.408.762-.53M10.25 7.25C9.56 7.25 9 7.81 9 8.5V16a.75.75 0 0 0 1.5 0v-3.25h.625l2.775 3.7a.75.75 0 1 0 1.2-.9l-2.1-2.8h.25a2.25 2.25 0 0 0 2.25-2.25v-1a2.25 2.25 0 0 0-2.25-2.25z"/></g>`), g.Group(children),
	)
}

func LetterRSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.625 6C8.728 6 8 6.728 8 7.625V17a1 1 0 1 0 2 0v-4h.688l3.45 4.6a1 1 0 0 0 1.6-1.2l-2.55-3.4h.187a2.875 2.875 0 0 0 2.875-2.875v-1.25A2.875 2.875 0 0 0 13.375 6zM10 11V8h3.375c.483 0 .875.392.875.875v1.25a.875.875 0 0 1-.875.875z"/>`), g.Group(children),
	)
}

func LetterRSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9.75 12V8.5a.5.5 0 0 1 .5-.5h3a1.5 1.5 0 0 1 1.5 1.5v1a1.5 1.5 0 0 1-1.5 1.5H11.5m-1.75 0v4m0-4h1.75m0 0l3 4"/><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/></g>`), g.Group(children),
	)
}

func LetterRSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M13.25 11.25H10.5v-2.5h2.75a.75.75 0 0 1 .75.75v1a.75.75 0 0 1-.75.75"/><path d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057m.883 5C9.56 7.25 9 7.81 9 8.5V16a.75.75 0 0 0 1.5 0v-3.25h.625l2.775 3.7a.75.75 0 1 0 1.2-.9l-2.1-2.8h.25a2.25 2.25 0 0 0 2.25-2.25v-1a2.25 2.25 0 0 0-2.25-2.25z"/></g>`), g.Group(children),
	)
}

func LetterRWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9.75 12V8.5a.5.5 0 0 1 .5-.5h3a1.5 1.5 0 0 1 1.5 1.5v1a1.5 1.5 0 0 1-1.5 1.5H11.5m-1.75 0v4m0-4h1.75m0 0l3 4"/><path d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83"/></g>`), g.Group(children),
	)
}

func LetterRWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M13.25 11.25H10.5v-2.5h2.75a.75.75 0 0 1 .75.75v1a.75.75 0 0 1-.75.75"/><path d="M10.565 2.075a3.33 3.33 0 0 1 2.87 0c.394.189.755.497 1.26.928l.079.066c.48.41.939.604 1.58.655l.102.008c.662.053 1.135.09 1.547.236a3.33 3.33 0 0 1 2.03 2.029c.145.412.182.885.235 1.547l.008.102c.051.641.246 1.1.655 1.58l.066.078c.431.506.74.867.928 1.261a3.33 3.33 0 0 1 0 2.87c-.189.394-.497.755-.928 1.26l-.066.079c-.418.49-.605.951-.655 1.58l-.008.102c-.053.662-.09 1.135-.236 1.547a3.33 3.33 0 0 1-2.029 2.03c-.412.145-.885.182-1.547.235l-.102.008c-.641.051-1.1.246-1.58.655l-.079.066c-.505.431-.866.74-1.26.928a3.33 3.33 0 0 1-2.87 0c-.394-.189-.755-.497-1.26-.928l-.079-.066a2.56 2.56 0 0 0-1.58-.655l-.102-.008c-.662-.053-1.135-.09-1.547-.236a3.33 3.33 0 0 1-2.03-2.029c-.145-.412-.182-.885-.235-1.547l-.008-.102a2.56 2.56 0 0 0-.655-1.58l-.066-.079c-.431-.505-.74-.866-.928-1.26a3.33 3.33 0 0 1 0-2.87c.189-.394.497-.755.928-1.26l.066-.079a2.56 2.56 0 0 0 .655-1.58l.008-.102c.053-.662.09-1.135.236-1.547a3.33 3.33 0 0 1 2.029-2.03c.412-.145.885-.182 1.547-.235l.102-.008a2.56 2.56 0 0 0 1.58-.655l.078-.066c.506-.431.867-.74 1.261-.928M10.25 7.25C9.56 7.25 9 7.81 9 8.5V16a.75.75 0 0 0 1.5 0v-3.25h.625l2.775 3.7a.75.75 0 1 0 1.2-.9l-2.1-2.8h.25a2.25 2.25 0 0 0 2.25-2.25v-1a2.25 2.25 0 0 0-2.25-2.25z"/></g>`), g.Group(children),
	)
}

func LetterS(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M15.25 8.563V8.25C15.25 7.56 14.69 7 14 7h-3.75C9.56 7 9 7.56 9 8.25v1.23c0 .767.467 1.457 1.179 1.742l3.892 1.556a1.875 1.875 0 0 1 1.179 1.741v1.231c0 .69-.56 1.25-1.25 1.25h-3.75C9.56 17 9 16.44 9 15.75v-.312"/>`), g.Group(children),
	)
}

func LetterSCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/><path d="M14.5 9.25V9a1 1 0 0 0-1-1h-3a1 1 0 0 0-1 1v.984a1.5 1.5 0 0 0 .943 1.393l3.114 1.246c.57.228.943.78.943 1.393V15a1 1 0 0 1-1 1h-3a1 1 0 0 1-1-1v-.25"/></g>`), g.Group(children),
	)
}

func LetterSCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12m8.25-4.75A1.75 1.75 0 0 0 8.75 9v.984c0 .92.56 1.748 1.414 2.09l3.114 1.245a.75.75 0 0 1 .472.696V15a.25.25 0 0 1-.25.25h-3a.25.25 0 0 1-.25-.25v-.25a.75.75 0 0 0-1.5 0V15c0 .966.784 1.75 1.75 1.75h3A1.75 1.75 0 0 0 15.25 15v-.985c0-.92-.56-1.747-1.414-2.088l-3.114-1.246a.75.75 0 0 1-.472-.697V9a.25.25 0 0 1 .25-.25h3a.25.25 0 0 1 .25.25v.25a.75.75 0 0 0 1.5 0V9a1.75 1.75 0 0 0-1.75-1.75z"/>`), g.Group(children),
	)
}

func LetterSDiamond(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M14.5 9.25V9a1 1 0 0 0-1-1h-3a1 1 0 0 0-1 1v.984a1.5 1.5 0 0 0 .943 1.393l3.114 1.246c.57.228.943.78.943 1.393V15a1 1 0 0 1-1 1h-3a1 1 0 0 1-1-1v-.25"/><path d="M2.707 10.295a2.41 2.41 0 0 0 0 3.41l7.588 7.588a2.41 2.41 0 0 0 3.41 0l7.588-7.588a2.41 2.41 0 0 0 0-3.41l-7.588-7.588a2.41 2.41 0 0 0-3.41 0z"/></g>`), g.Group(children),
	)
}

func LetterSDiamondSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.79 1.49a3.16 3.16 0 0 1 3.445.687l7.588 7.588a3.16 3.16 0 0 1 0 4.47l-7.588 7.588a3.16 3.16 0 0 1-4.47 0l-7.588-7.588a3.16 3.16 0 0 1 0-4.47l7.588-7.589a3.2 3.2 0 0 1 1.025-.685m-.29 5.76A1.75 1.75 0 0 0 8.75 9v.984c0 .92.56 1.748 1.414 2.09l3.114 1.245a.75.75 0 0 1 .472.696V15a.25.25 0 0 1-.25.25h-3a.25.25 0 0 1-.25-.25v-.25a.75.75 0 0 0-1.5 0V15c0 .966.784 1.75 1.75 1.75h3A1.75 1.75 0 0 0 15.25 15v-.985c0-.92-.56-1.747-1.414-2.088l-3.114-1.246a.75.75 0 0 1-.472-.697V9a.25.25 0 0 1 .25-.25h3a.25.25 0 0 1 .25.25v.25a.75.75 0 0 0 1.5 0V9a1.75 1.75 0 0 0-1.75-1.75z"/>`), g.Group(children),
	)
}

func LetterSHexagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M14.5 9.25V9a1 1 0 0 0-1-1h-3a1 1 0 0 0-1 1v.984a1.5 1.5 0 0 0 .943 1.393l3.114 1.246c.57.228.943.78.943 1.393V15a1 1 0 0 1-1 1h-3a1 1 0 0 1-1-1v-.25"/><path d="M20.5 15.8V8.2a1.91 1.91 0 0 0-.944-1.645l-6.612-3.8a1.88 1.88 0 0 0-1.888 0l-6.612 3.8A1.9 1.9 0 0 0 3.5 8.2v7.602a1.91 1.91 0 0 0 .944 1.644l6.612 3.8a1.88 1.88 0 0 0 1.888 0l6.612-3.8A1.9 1.9 0 0 0 20.5 15.8"/></g>`), g.Group(children),
	)
}

func LetterSHexagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.68 2.105a2.63 2.63 0 0 1 2.64 0l.001.001l6.611 3.8A2.65 2.65 0 0 1 21.25 8.2v7.603a2.66 2.66 0 0 1-1.318 2.291l-.003.002l-6.608 3.799h-.002a2.63 2.63 0 0 1-2.639 0h-.001l-6.608-3.8h-.003A2.64 2.64 0 0 1 2.75 15.8V8.198a2.66 2.66 0 0 1 1.318-2.291l.003-.002zM10.5 7.25A1.75 1.75 0 0 0 8.75 9v.984c0 .92.56 1.748 1.414 2.09l3.114 1.245a.75.75 0 0 1 .472.696V15a.25.25 0 0 1-.25.25h-3a.25.25 0 0 1-.25-.25v-.25a.75.75 0 0 0-1.5 0V15c0 .966.784 1.75 1.75 1.75h3A1.75 1.75 0 0 0 15.25 15v-.985c0-.92-.56-1.747-1.414-2.088l-3.114-1.246a.75.75 0 0 1-.472-.697V9a.25.25 0 0 1 .25-.25h3a.25.25 0 0 1 .25.25v.25a.75.75 0 0 0 1.5 0V9a1.75 1.75 0 0 0-1.75-1.75z"/>`), g.Group(children),
	)
}

func LetterSOctagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M14.5 9.25V9a1 1 0 0 0-1-1h-3a1 1 0 0 0-1 1v.984a1.5 1.5 0 0 0 .943 1.393l3.114 1.246c.57.228.943.78.943 1.393V15a1 1 0 0 1-1 1h-3a1 1 0 0 1-1-1v-.25"/><path d="M7.805 3.469C8.16 3.115 8.451 3 8.937 3h6.126c.486 0 .778.115 1.132.469l4.336 4.336c.354.354.469.646.469 1.132v6.126c0 .5-.125.788-.469 1.132l-4.336 4.336c-.354.354-.646.469-1.132.469H8.937c-.5 0-.788-.125-1.132-.469L3.47 16.195c-.355-.355-.47-.646-.47-1.132V8.937c0-.5.125-.788.469-1.132z"/></g>`), g.Group(children),
	)
}

func LetterSOctagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.037 2.408a2.3 2.3 0 0 1 .9-.158h6.126c.302 0 .602.036.9.158s.54.31.762.53l4.337 4.337c.22.221.408.463.53.762c.123.298.158.598.158.9v6.126c0 .313-.039.616-.163.914a2.3 2.3 0 0 1-.525.748l-4.337 4.337a2.3 2.3 0 0 1-.762.53a2.3 2.3 0 0 1-.9.158H8.937c-.313 0-.616-.039-.914-.163a2.3 2.3 0 0 1-.748-.525l-4.337-4.337a2.3 2.3 0 0 1-.53-.762a2.3 2.3 0 0 1-.158-.9V8.937c0-.313.039-.616.163-.914a2.3 2.3 0 0 1 .525-.748l4.337-4.337c.221-.22.463-.408.762-.53M10.5 7.25A1.75 1.75 0 0 0 8.75 9v.984c0 .92.56 1.748 1.414 2.09l3.114 1.245a.75.75 0 0 1 .472.696V15a.25.25 0 0 1-.25.25h-3a.25.25 0 0 1-.25-.25v-.25a.75.75 0 0 0-1.5 0V15c0 .966.784 1.75 1.75 1.75h3A1.75 1.75 0 0 0 15.25 15v-.985c0-.92-.56-1.747-1.414-2.088l-3.114-1.246a.75.75 0 0 1-.472-.697V9a.25.25 0 0 1 .25-.25h3a.25.25 0 0 1 .25.25v.25a.75.75 0 0 0 1.5 0V9a1.75 1.75 0 0 0-1.75-1.75z"/>`), g.Group(children),
	)
}

func LetterSSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.25 6A2.25 2.25 0 0 0 8 8.25v1.23c0 1.176.716 2.233 1.807 2.67l3.893 1.557c.332.133.55.455.55.812v1.231A.25.25 0 0 1 14 16h-3.75a.25.25 0 0 1-.25-.25v-.312a1 1 0 1 0-2 0v.312A2.25 2.25 0 0 0 10.25 18H14a2.25 2.25 0 0 0 2.25-2.25v-1.23a2.875 2.875 0 0 0-1.807-2.67l-3.893-1.557a.875.875 0 0 1-.55-.812V8.25a.25.25 0 0 1 .25-.25H14a.25.25 0 0 1 .25.25v.313a1 1 0 1 0 2 0V8.25A2.25 2.25 0 0 0 14 6z"/>`), g.Group(children),
	)
}

func LetterSSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M14.5 9.25V9a1 1 0 0 0-1-1h-3a1 1 0 0 0-1 1v.984a1.5 1.5 0 0 0 .943 1.393l3.114 1.246c.57.228.943.78.943 1.393V15a1 1 0 0 1-1 1h-3a1 1 0 0 1-1-1v-.25"/><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/></g>`), g.Group(children),
	)
}

func LetterSSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057m1.133 5A1.75 1.75 0 0 0 8.75 9v.984c0 .92.56 1.748 1.414 2.09l3.114 1.245a.75.75 0 0 1 .472.696V15a.25.25 0 0 1-.25.25h-3a.25.25 0 0 1-.25-.25v-.25a.75.75 0 0 0-1.5 0V15c0 .966.784 1.75 1.75 1.75h3A1.75 1.75 0 0 0 15.25 15v-.985c0-.92-.56-1.747-1.414-2.088l-3.114-1.246a.75.75 0 0 1-.472-.697V9a.25.25 0 0 1 .25-.25h3a.25.25 0 0 1 .25.25v.25a.75.75 0 0 0 1.5 0V9a1.75 1.75 0 0 0-1.75-1.75z"/>`), g.Group(children),
	)
}

func LetterSWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M14.5 9.25V9a1 1 0 0 0-1-1h-3a1 1 0 0 0-1 1v.984a1.5 1.5 0 0 0 .943 1.393l3.114 1.246c.57.228.943.78.943 1.393V15a1 1 0 0 1-1 1h-3a1 1 0 0 1-1-1v-.25"/><path d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83"/></g>`), g.Group(children),
	)
}

func LetterSWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.565 2.075a3.33 3.33 0 0 1 2.87 0c.394.189.755.497 1.26.928l.079.066c.48.41.939.604 1.58.655l.102.008c.662.053 1.135.09 1.547.236a3.33 3.33 0 0 1 2.03 2.029c.145.412.182.885.235 1.547l.008.102c.051.641.246 1.1.655 1.58l.066.078c.431.506.74.867.928 1.261a3.33 3.33 0 0 1 0 2.87c-.189.394-.497.755-.928 1.26l-.066.079c-.418.49-.605.951-.655 1.58l-.008.102c-.053.662-.09 1.135-.236 1.547a3.33 3.33 0 0 1-2.029 2.03c-.412.145-.885.182-1.547.235l-.102.008c-.641.051-1.1.246-1.58.655l-.079.066c-.505.431-.866.74-1.26.928a3.33 3.33 0 0 1-2.87 0c-.394-.189-.755-.497-1.26-.928l-.079-.066a2.56 2.56 0 0 0-1.58-.655l-.102-.008c-.662-.053-1.135-.09-1.547-.236a3.33 3.33 0 0 1-2.03-2.029c-.145-.412-.182-.885-.235-1.547l-.008-.102a2.56 2.56 0 0 0-.655-1.58l-.066-.079c-.431-.505-.74-.866-.928-1.26a3.33 3.33 0 0 1 0-2.87c.189-.394.497-.755.928-1.26l.066-.079a2.56 2.56 0 0 0 .655-1.58l.008-.102c.053-.662.09-1.135.236-1.547a3.33 3.33 0 0 1 2.029-2.03c.412-.145.885-.182 1.547-.235l.102-.008a2.56 2.56 0 0 0 1.58-.655l.078-.066c.506-.431.867-.74 1.261-.928M10.5 7.25A1.75 1.75 0 0 0 8.75 9v.984c0 .92.56 1.748 1.414 2.09l3.114 1.245a.75.75 0 0 1 .472.696V15a.25.25 0 0 1-.25.25h-3a.25.25 0 0 1-.25-.25v-.25a.75.75 0 0 0-1.5 0V15c0 .966.784 1.75 1.75 1.75h3A1.75 1.75 0 0 0 15.25 15v-.985c0-.92-.56-1.747-1.414-2.088l-3.114-1.246a.75.75 0 0 1-.472-.697V9a.25.25 0 0 1 .25-.25h3a.25.25 0 0 1 .25.25v.25a.75.75 0 0 0 1.5 0V9a1.75 1.75 0 0 0-1.75-1.75z"/>`), g.Group(children),
	)
}

func LetterT(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M8 7h3.75m0 0h3.75m-3.75 0v10"/>`), g.Group(children),
	)
}

func LetterTCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0M9 8.25h3m0 0h3m-3 0v8"/>`), g.Group(children),
	)
}

func LetterTCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12M9 7.5A.75.75 0 0 0 9 9h2.25v7.25a.75.75 0 0 0 1.5 0V9H15a.75.75 0 0 0 0-1.5z"/>`), g.Group(children),
	)
}

func LetterTDiamond(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9 8.25h3m0 0h3m-3 0v8m-9.293-5.955a2.41 2.41 0 0 0 0 3.41l7.588 7.588a2.41 2.41 0 0 0 3.41 0l7.588-7.588a2.41 2.41 0 0 0 0-3.41l-7.588-7.588a2.41 2.41 0 0 0-3.41 0z"/>`), g.Group(children),
	)
}

func LetterTDiamondSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.79 1.49a3.16 3.16 0 0 1 3.445.687l7.588 7.588a3.16 3.16 0 0 1 0 4.47l-7.588 7.588a3.16 3.16 0 0 1-4.47 0l-7.588-7.588a3.16 3.16 0 0 1 0-4.47l7.588-7.589a3.2 3.2 0 0 1 1.025-.685M9 7.5A.75.75 0 0 0 9 9h2.25v7.25a.75.75 0 0 0 1.5 0V9H15a.75.75 0 0 0 0-1.5z"/>`), g.Group(children),
	)
}

func LetterTHexagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9 8.25h3m0 0h3m-3 0v8m8.5-.45V8.2a1.91 1.91 0 0 0-.944-1.645l-6.612-3.8a1.88 1.88 0 0 0-1.888 0l-6.612 3.8A1.9 1.9 0 0 0 3.5 8.2v7.602a1.91 1.91 0 0 0 .944 1.644l6.612 3.8a1.88 1.88 0 0 0 1.888 0l6.612-3.8A1.9 1.9 0 0 0 20.5 15.8"/>`), g.Group(children),
	)
}

func LetterTHexagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.68 2.105a2.63 2.63 0 0 1 2.64 0l.001.001l6.611 3.8A2.65 2.65 0 0 1 21.25 8.2v7.603a2.66 2.66 0 0 1-1.318 2.291l-.003.002l-6.608 3.799h-.002a2.63 2.63 0 0 1-2.639 0h-.001l-6.608-3.8h-.003A2.64 2.64 0 0 1 2.75 15.8V8.198a2.66 2.66 0 0 1 1.318-2.291l.003-.002zM9 7.5A.75.75 0 0 0 9 9h2.25v7.25a.75.75 0 0 0 1.5 0V9H15a.75.75 0 0 0 0-1.5z"/>`), g.Group(children),
	)
}

func LetterTOctagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9 8.25h3m0 0h3m-3 0v8M7.805 3.469C8.16 3.115 8.451 3 8.937 3h6.126c.486 0 .778.115 1.132.469l4.336 4.336c.354.354.469.646.469 1.132v6.126c0 .5-.125.788-.469 1.132l-4.336 4.336c-.354.354-.646.469-1.132.469H8.937c-.5 0-.788-.125-1.132-.469L3.47 16.195c-.355-.355-.47-.646-.47-1.132V8.937c0-.5.125-.788.469-1.132z"/>`), g.Group(children),
	)
}

func LetterTOctagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.037 2.408a2.3 2.3 0 0 1 .9-.158h6.126c.302 0 .602.036.9.158s.54.31.762.53l4.337 4.337c.22.221.408.463.53.762c.123.298.158.598.158.9v6.126c0 .313-.039.616-.163.914a2.3 2.3 0 0 1-.525.748l-4.337 4.337a2.3 2.3 0 0 1-.762.53a2.3 2.3 0 0 1-.9.158H8.937c-.313 0-.616-.039-.914-.163a2.3 2.3 0 0 1-.748-.525l-4.337-4.337a2.3 2.3 0 0 1-.53-.762a2.3 2.3 0 0 1-.158-.9V8.937c0-.313.039-.616.163-.914a2.3 2.3 0 0 1 .525-.748l4.337-4.337c.221-.22.463-.408.762-.53M9 7.5A.75.75 0 0 0 9 9h2.25v7.25a.75.75 0 0 0 1.5 0V9H15a.75.75 0 0 0 0-1.5z"/>`), g.Group(children),
	)
}

func LetterTSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8 6a1 1 0 0 0 0 2h2.75v9a1 1 0 1 0 2 0V8h2.75a1 1 0 1 0 0-2z"/>`), g.Group(children),
	)
}

func LetterTSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9 8.25h3m0 0h3m-3 0v8M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/>`), g.Group(children),
	)
}

func LetterTSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057M9 7.5A.75.75 0 0 0 9 9h2.25v7.25a.75.75 0 0 0 1.5 0V9H15a.75.75 0 0 0 0-1.5z"/>`), g.Group(children),
	)
}

func LetterTWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9 8.25h3m0 0h3m-3 0v8M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83"/>`), g.Group(children),
	)
}

func LetterTWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.565 2.075a3.33 3.33 0 0 1 2.87 0c.394.189.755.497 1.26.928l.079.066c.48.41.939.604 1.58.655l.102.008c.662.053 1.135.09 1.547.236a3.33 3.33 0 0 1 2.03 2.029c.145.412.182.885.235 1.547l.008.102c.051.641.246 1.1.655 1.58l.066.078c.431.506.74.867.928 1.261a3.33 3.33 0 0 1 0 2.87c-.189.394-.497.755-.928 1.26l-.066.079c-.418.49-.605.951-.655 1.58l-.008.102c-.053.662-.09 1.135-.236 1.547a3.33 3.33 0 0 1-2.029 2.03c-.412.145-.885.182-1.547.235l-.102.008c-.641.051-1.1.246-1.58.655l-.079.066c-.505.431-.866.74-1.26.928a3.33 3.33 0 0 1-2.87 0c-.394-.189-.755-.497-1.26-.928l-.079-.066a2.56 2.56 0 0 0-1.58-.655l-.102-.008c-.662-.053-1.135-.09-1.547-.236a3.33 3.33 0 0 1-2.03-2.029c-.145-.412-.182-.885-.235-1.547l-.008-.102a2.56 2.56 0 0 0-.655-1.58l-.066-.079c-.431-.505-.74-.866-.928-1.26a3.33 3.33 0 0 1 0-2.87c.189-.394.497-.755.928-1.26l.066-.079a2.56 2.56 0 0 0 .655-1.58l.008-.102c.053-.662.09-1.135.236-1.547a3.33 3.33 0 0 1 2.029-2.03c.412-.145.885-.182 1.547-.235l.102-.008a2.56 2.56 0 0 0 1.58-.655l.078-.066c.506-.431.867-.74 1.261-.928M9 7.5A.75.75 0 0 0 9 9h2.25v7.25a.75.75 0 0 0 1.5 0V9H15a.75.75 0 0 0 0-1.5z"/>`), g.Group(children),
	)
}

func LetterU(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M8 7v7.5a2.5 2.5 0 0 0 2.5 2.5H13a2.5 2.5 0 0 0 2.5-2.5V7"/>`), g.Group(children),
	)
}

func LetterUCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/><path d="M9 8v6a2 2 0 0 0 2 2h2a2 2 0 0 0 2-2V8"/></g>`), g.Group(children),
	)
}

func LetterUCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12m7.5-4a.75.75 0 0 0-1.5 0v6A2.75 2.75 0 0 0 11 16.75h2A2.75 2.75 0 0 0 15.75 14V8a.75.75 0 0 0-1.5 0v6c0 .69-.56 1.25-1.25 1.25h-2c-.69 0-1.25-.56-1.25-1.25z"/>`), g.Group(children),
	)
}

func LetterUDiamond(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9 8v6a2 2 0 0 0 2 2h2a2 2 0 0 0 2-2V8"/><path d="M2.707 10.295a2.41 2.41 0 0 0 0 3.41l7.588 7.588a2.41 2.41 0 0 0 3.41 0l7.588-7.588a2.41 2.41 0 0 0 0-3.41l-7.588-7.588a2.41 2.41 0 0 0-3.41 0z"/></g>`), g.Group(children),
	)
}

func LetterUDiamondSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.79 1.49a3.16 3.16 0 0 1 3.445.687l7.588 7.588a3.16 3.16 0 0 1 0 4.47l-7.588 7.588a3.16 3.16 0 0 1-4.47 0l-7.588-7.588a3.16 3.16 0 0 1 0-4.47l7.588-7.589a3.2 3.2 0 0 1 1.025-.685M9.75 8a.75.75 0 0 0-1.5 0v6A2.75 2.75 0 0 0 11 16.75h2A2.75 2.75 0 0 0 15.75 14V8a.75.75 0 0 0-1.5 0v6c0 .69-.56 1.25-1.25 1.25h-2c-.69 0-1.25-.56-1.25-1.25z"/>`), g.Group(children),
	)
}

func LetterUHexagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9 8v6a2 2 0 0 0 2 2h2a2 2 0 0 0 2-2V8"/><path d="M20.5 15.8V8.2a1.91 1.91 0 0 0-.944-1.645l-6.612-3.8a1.88 1.88 0 0 0-1.888 0l-6.612 3.8A1.9 1.9 0 0 0 3.5 8.2v7.602a1.91 1.91 0 0 0 .944 1.644l6.612 3.8a1.88 1.88 0 0 0 1.888 0l6.612-3.8A1.9 1.9 0 0 0 20.5 15.8"/></g>`), g.Group(children),
	)
}

func LetterUHexagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.68 2.105a2.63 2.63 0 0 1 2.64 0l.001.001l6.611 3.8A2.65 2.65 0 0 1 21.25 8.2v7.603a2.66 2.66 0 0 1-1.318 2.291l-.003.002l-6.608 3.799h-.002a2.63 2.63 0 0 1-2.639 0h-.001l-6.608-3.8h-.003A2.64 2.64 0 0 1 2.75 15.8V8.198a2.66 2.66 0 0 1 1.318-2.291l.003-.002zM9.75 8a.75.75 0 0 0-1.5 0v6A2.75 2.75 0 0 0 11 16.75h2A2.75 2.75 0 0 0 15.75 14V8a.75.75 0 0 0-1.5 0v6c0 .69-.56 1.25-1.25 1.25h-2c-.69 0-1.25-.56-1.25-1.25z"/>`), g.Group(children),
	)
}

func LetterUOctagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9 8v6a2 2 0 0 0 2 2h2a2 2 0 0 0 2-2V8"/><path d="M7.805 3.469C8.16 3.115 8.451 3 8.937 3h6.126c.486 0 .778.115 1.132.469l4.336 4.336c.354.354.469.646.469 1.132v6.126c0 .5-.125.788-.469 1.132l-4.336 4.336c-.354.354-.646.469-1.132.469H8.937c-.5 0-.788-.125-1.132-.469L3.47 16.195c-.355-.355-.47-.646-.47-1.132V8.937c0-.5.125-.788.469-1.132z"/></g>`), g.Group(children),
	)
}

func LetterUOctagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.037 2.408a2.3 2.3 0 0 1 .9-.158h6.126c.302 0 .602.036.9.158s.54.31.762.53l4.337 4.337c.22.221.408.463.53.762c.123.298.158.598.158.9v6.126c0 .313-.039.616-.163.914a2.3 2.3 0 0 1-.525.748l-4.337 4.337a2.3 2.3 0 0 1-.762.53a2.3 2.3 0 0 1-.9.158H8.937c-.313 0-.616-.039-.914-.163a2.3 2.3 0 0 1-.748-.525l-4.337-4.337a2.3 2.3 0 0 1-.53-.762a2.3 2.3 0 0 1-.158-.9V8.937c0-.313.039-.616.163-.914a2.3 2.3 0 0 1 .525-.748l4.337-4.337c.221-.22.463-.408.762-.53M9.75 8a.75.75 0 0 0-1.5 0v6A2.75 2.75 0 0 0 11 16.75h2A2.75 2.75 0 0 0 15.75 14V8a.75.75 0 0 0-1.5 0v6c0 .69-.56 1.25-1.25 1.25h-2c-.69 0-1.25-.56-1.25-1.25z"/>`), g.Group(children),
	)
}

func LetterUSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8 6a1 1 0 0 0-1 1v7.5a3.5 3.5 0 0 0 3.5 3.5H13a3.5 3.5 0 0 0 3.5-3.5V7a1 1 0 1 0-2 0v7.5A1.5 1.5 0 0 1 13 16h-2.5A1.5 1.5 0 0 1 9 14.5V7a1 1 0 0 0-1-1"/>`), g.Group(children),
	)
}

func LetterUSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9 8v6a2 2 0 0 0 2 2h2a2 2 0 0 0 2-2V8"/><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/></g>`), g.Group(children),
	)
}

func LetterUSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057M9.75 8a.75.75 0 0 0-1.5 0v6A2.75 2.75 0 0 0 11 16.75h2A2.75 2.75 0 0 0 15.75 14V8a.75.75 0 0 0-1.5 0v6c0 .69-.56 1.25-1.25 1.25h-2c-.69 0-1.25-.56-1.25-1.25z"/>`), g.Group(children),
	)
}

func LetterUWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9 8v6a2 2 0 0 0 2 2h2a2 2 0 0 0 2-2V8"/><path d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83"/></g>`), g.Group(children),
	)
}

func LetterUWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.565 2.075a3.33 3.33 0 0 1 2.87 0c.394.189.755.497 1.26.928l.079.066c.48.41.939.604 1.58.655l.102.008c.662.053 1.135.09 1.547.236a3.33 3.33 0 0 1 2.03 2.029c.145.412.182.885.235 1.547l.008.102c.051.641.246 1.1.655 1.58l.066.078c.431.506.74.867.928 1.261a3.33 3.33 0 0 1 0 2.87c-.189.394-.497.755-.928 1.26l-.066.079c-.418.49-.605.951-.655 1.58l-.008.102c-.053.662-.09 1.135-.236 1.547a3.33 3.33 0 0 1-2.029 2.03c-.412.145-.885.182-1.547.235l-.102.008c-.641.051-1.1.246-1.58.655l-.079.066c-.505.431-.866.74-1.26.928a3.33 3.33 0 0 1-2.87 0c-.394-.189-.755-.497-1.26-.928l-.079-.066a2.56 2.56 0 0 0-1.58-.655l-.102-.008c-.662-.053-1.135-.09-1.547-.236a3.33 3.33 0 0 1-2.03-2.029c-.145-.412-.182-.885-.235-1.547l-.008-.102a2.56 2.56 0 0 0-.655-1.58l-.066-.079c-.431-.505-.74-.866-.928-1.26a3.33 3.33 0 0 1 0-2.87c.189-.394.497-.755.928-1.26l.066-.079a2.56 2.56 0 0 0 .655-1.58l.008-.102c.053-.662.09-1.135.236-1.547a3.33 3.33 0 0 1 2.029-2.03c.412-.145.885-.182 1.547-.235l.102-.008a2.56 2.56 0 0 0 1.58-.655l.078-.066c.506-.431.867-.74 1.261-.928M9.75 8a.75.75 0 0 0-1.5 0v6A2.75 2.75 0 0 0 11 16.75h2A2.75 2.75 0 0 0 15.75 14V8a.75.75 0 0 0-1.5 0v6c0 .69-.56 1.25-1.25 1.25h-2c-.69 0-1.25-.56-1.25-1.25z"/>`), g.Group(children),
	)
}

func LetterV(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m8 7l3.75 10L15.5 7"/>`), g.Group(children),
	)
}

func LetterVCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/><path d="m9 8.25l3 8l3-8"/></g>`), g.Group(children),
	)
}

func LetterVCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12m7.452-4.013a.75.75 0 0 0-1.404.526l3 8a.75.75 0 0 0 1.404 0l3-8a.75.75 0 0 0-1.404-.526L12 14.114z"/>`), g.Group(children),
	)
}

func LetterVDiamond(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="m9 8.25l3 8l3-8"/><path d="M2.707 10.295a2.41 2.41 0 0 0 0 3.41l7.588 7.588a2.41 2.41 0 0 0 3.41 0l7.588-7.588a2.41 2.41 0 0 0 0-3.41l-7.588-7.588a2.41 2.41 0 0 0-3.41 0z"/></g>`), g.Group(children),
	)
}

func LetterVDiamondSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.79 1.49a3.16 3.16 0 0 1 3.445.687l7.588 7.588a3.16 3.16 0 0 1 0 4.47l-7.588 7.588a3.16 3.16 0 0 1-4.47 0l-7.588-7.588a3.16 3.16 0 0 1 0-4.47l7.588-7.589a3.2 3.2 0 0 1 1.025-.685M9.702 7.988a.75.75 0 0 0-1.404.526l3 8a.75.75 0 0 0 1.404 0l3-8a.75.75 0 0 0-1.404-.526L12 14.114z"/>`), g.Group(children),
	)
}

func LetterVHexagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="m9 8.25l3 8l3-8"/><path d="M20.5 15.8V8.2a1.91 1.91 0 0 0-.944-1.645l-6.612-3.8a1.88 1.88 0 0 0-1.888 0l-6.612 3.8A1.9 1.9 0 0 0 3.5 8.2v7.602a1.91 1.91 0 0 0 .944 1.644l6.612 3.8a1.88 1.88 0 0 0 1.888 0l6.612-3.8A1.9 1.9 0 0 0 20.5 15.8"/></g>`), g.Group(children),
	)
}

func LetterVHexagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.68 2.105a2.63 2.63 0 0 1 2.64 0l.001.001l6.611 3.8A2.65 2.65 0 0 1 21.25 8.2v7.603a2.66 2.66 0 0 1-1.318 2.291l-.003.002l-6.608 3.799h-.002a2.63 2.63 0 0 1-2.639 0h-.001l-6.608-3.8h-.003A2.64 2.64 0 0 1 2.75 15.8V8.198a2.66 2.66 0 0 1 1.318-2.291l.003-.002zm-.978 5.882a.75.75 0 0 0-1.404.526l3 8a.75.75 0 0 0 1.404 0l3-8a.75.75 0 0 0-1.404-.526L12 14.114z"/>`), g.Group(children),
	)
}

func LetterVOctagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="m9 8.25l3 8l3-8"/><path d="M7.805 3.469C8.16 3.115 8.451 3 8.937 3h6.126c.486 0 .778.115 1.132.469l4.336 4.336c.354.354.469.646.469 1.132v6.126c0 .5-.125.788-.469 1.132l-4.336 4.336c-.354.354-.646.469-1.132.469H8.937c-.5 0-.788-.125-1.132-.469L3.47 16.195c-.355-.355-.47-.646-.47-1.132V8.937c0-.5.125-.788.469-1.132z"/></g>`), g.Group(children),
	)
}

func LetterVOctagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.037 2.408a2.3 2.3 0 0 1 .9-.158h6.126c.302 0 .602.036.9.158s.54.31.762.53l4.337 4.337c.22.221.408.463.53.762c.123.298.158.598.158.9v6.126c0 .313-.039.616-.163.914a2.3 2.3 0 0 1-.525.748l-4.337 4.337a2.3 2.3 0 0 1-.762.53a2.3 2.3 0 0 1-.9.158H8.937c-.313 0-.616-.039-.914-.163a2.3 2.3 0 0 1-.748-.525l-4.337-4.337a2.3 2.3 0 0 1-.53-.762a2.3 2.3 0 0 1-.158-.9V8.937c0-.313.039-.616.163-.914a2.3 2.3 0 0 1 .525-.748l4.337-4.337c.221-.22.463-.408.762-.53m1.665 5.579a.75.75 0 0 0-1.404.526l3 8a.75.75 0 0 0 1.404 0l3-8a.75.75 0 0 0-1.404-.526L12 14.114z"/>`), g.Group(children),
	)
}

func LetterVSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.936 6.649a1 1 0 0 0-1.872.702l3.75 10a1 1 0 0 0 1.872 0l3.75-10a1 1 0 0 0-1.872-.702l-2.814 7.503z"/>`), g.Group(children),
	)
}

func LetterVSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="m9 8.25l3 8l3-8"/><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/></g>`), g.Group(children),
	)
}

func LetterVSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057m.335 5.737a.75.75 0 0 0-1.404.526l3 8a.75.75 0 0 0 1.404 0l3-8a.75.75 0 0 0-1.404-.526L12 14.114z"/>`), g.Group(children),
	)
}

func LetterVWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="m9 8.25l3 8l3-8"/><path d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83"/></g>`), g.Group(children),
	)
}

func LetterVWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.565 2.075a3.33 3.33 0 0 1 2.87 0c.394.189.755.497 1.26.928l.079.066c.48.41.939.604 1.58.655l.102.008c.662.053 1.135.09 1.547.236a3.33 3.33 0 0 1 2.03 2.029c.145.412.182.885.235 1.547l.008.102c.051.641.246 1.1.655 1.58l.066.078c.431.506.74.867.928 1.261a3.33 3.33 0 0 1 0 2.87c-.189.394-.497.755-.928 1.26l-.066.079c-.418.49-.605.951-.655 1.58l-.008.102c-.053.662-.09 1.135-.236 1.547a3.33 3.33 0 0 1-2.029 2.03c-.412.145-.885.182-1.547.235l-.102.008c-.641.051-1.1.246-1.58.655l-.079.066c-.505.431-.866.74-1.26.928a3.33 3.33 0 0 1-2.87 0c-.394-.189-.755-.497-1.26-.928l-.079-.066a2.56 2.56 0 0 0-1.58-.655l-.102-.008c-.662-.053-1.135-.09-1.547-.236a3.33 3.33 0 0 1-2.03-2.029c-.145-.412-.182-.885-.235-1.547l-.008-.102a2.56 2.56 0 0 0-.655-1.58l-.066-.079c-.431-.505-.74-.866-.928-1.26a3.33 3.33 0 0 1 0-2.87c.189-.394.497-.755.928-1.26l.066-.079a2.56 2.56 0 0 0 .655-1.58l.008-.102c.053-.662.09-1.135.236-1.547a3.33 3.33 0 0 1 2.029-2.03c.412-.145.885-.182 1.547-.235l.102-.008a2.56 2.56 0 0 0 1.58-.655l.078-.066c.506-.431.867-.74 1.261-.928m-.863 5.912a.75.75 0 0 0-1.404.526l3 8a.75.75 0 0 0 1.404 0l3-8a.75.75 0 0 0-1.404-.526L12 14.114z"/>`), g.Group(children),
	)
}

func LetterW(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M8 7v10l3.75-5l3.75 5V7"/>`), g.Group(children),
	)
}

func LetterWCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/><path d="M9 8v8l3-4l3 4V8"/></g>`), g.Group(children),
	)
}

func LetterWCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12m7.5-4a.75.75 0 0 0-1.5 0v8a.75.75 0 0 0 1.35.45l2.4-3.2l2.4 3.2a.75.75 0 0 0 1.35-.45V8a.75.75 0 0 0-1.5 0v5.75l-1.65-2.2a.75.75 0 0 0-1.2 0l-1.65 2.2z"/>`), g.Group(children),
	)
}

func LetterWDiamond(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9 8v8l3-4l3 4V8"/><path d="M2.707 10.295a2.41 2.41 0 0 0 0 3.41l7.588 7.588a2.41 2.41 0 0 0 3.41 0l7.588-7.588a2.41 2.41 0 0 0 0-3.41l-7.588-7.588a2.41 2.41 0 0 0-3.41 0z"/></g>`), g.Group(children),
	)
}

func LetterWDiamondSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.79 1.49a3.16 3.16 0 0 1 3.445.687l7.588 7.588a3.16 3.16 0 0 1 0 4.47l-7.588 7.588a3.16 3.16 0 0 1-4.47 0l-7.588-7.588a3.16 3.16 0 0 1 0-4.47l7.588-7.589a3.2 3.2 0 0 1 1.025-.685M9.75 8a.75.75 0 0 0-1.5 0v8a.75.75 0 0 0 1.35.45l2.4-3.2l2.4 3.2a.75.75 0 0 0 1.35-.45V8a.75.75 0 0 0-1.5 0v5.75l-1.65-2.2a.75.75 0 0 0-1.2 0l-1.65 2.2z"/>`), g.Group(children),
	)
}

func LetterWHexagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9 8v8l3-4l3 4V8"/><path d="M20.5 15.8V8.2a1.91 1.91 0 0 0-.944-1.645l-6.612-3.8a1.88 1.88 0 0 0-1.888 0l-6.612 3.8A1.9 1.9 0 0 0 3.5 8.2v7.602a1.91 1.91 0 0 0 .944 1.644l6.612 3.8a1.88 1.88 0 0 0 1.888 0l6.612-3.8A1.9 1.9 0 0 0 20.5 15.8"/></g>`), g.Group(children),
	)
}

func LetterWHexagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.68 2.105a2.63 2.63 0 0 1 2.64 0l.001.001l6.611 3.8A2.65 2.65 0 0 1 21.25 8.2v7.603a2.66 2.66 0 0 1-1.318 2.291l-.003.002l-6.608 3.799h-.002a2.63 2.63 0 0 1-2.639 0h-.001l-6.608-3.8h-.003A2.64 2.64 0 0 1 2.75 15.8V8.198a2.66 2.66 0 0 1 1.318-2.291l.003-.002zM9.75 8a.75.75 0 0 0-1.5 0v8a.75.75 0 0 0 1.35.45l2.4-3.2l2.4 3.2a.75.75 0 0 0 1.35-.45V8a.75.75 0 0 0-1.5 0v5.75l-1.65-2.2a.75.75 0 0 0-1.2 0l-1.65 2.2z"/>`), g.Group(children),
	)
}

func LetterWOctagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9 8v8l3-4l3 4V8"/><path d="M7.805 3.469C8.16 3.115 8.451 3 8.937 3h6.126c.486 0 .778.115 1.132.469l4.336 4.336c.354.354.469.646.469 1.132v6.126c0 .5-.125.788-.469 1.132l-4.336 4.336c-.354.354-.646.469-1.132.469H8.937c-.5 0-.788-.125-1.132-.469L3.47 16.195c-.355-.355-.47-.646-.47-1.132V8.937c0-.5.125-.788.469-1.132z"/></g>`), g.Group(children),
	)
}

func LetterWOctagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.037 2.408a2.3 2.3 0 0 1 .9-.158h6.126c.302 0 .602.036.9.158s.54.31.762.53l4.337 4.337c.22.221.408.463.53.762c.123.298.158.598.158.9v6.126c0 .313-.039.616-.163.914a2.3 2.3 0 0 1-.525.748l-4.337 4.337a2.3 2.3 0 0 1-.762.53a2.3 2.3 0 0 1-.9.158H8.937c-.313 0-.616-.039-.914-.163a2.3 2.3 0 0 1-.748-.525l-4.337-4.337a2.3 2.3 0 0 1-.53-.762a2.3 2.3 0 0 1-.158-.9V8.937c0-.313.039-.616.163-.914a2.3 2.3 0 0 1 .525-.748l4.337-4.337c.221-.22.463-.408.762-.53M9.75 8a.75.75 0 0 0-1.5 0v8a.75.75 0 0 0 1.35.45l2.4-3.2l2.4 3.2a.75.75 0 0 0 1.35-.45V8a.75.75 0 0 0-1.5 0v5.75l-1.65-2.2a.75.75 0 0 0-1.2 0l-1.65 2.2z"/>`), g.Group(children),
	)
}

func LetterWSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8 6a1 1 0 0 0-1 1v10a1 1 0 0 0 1.8.6l2.95-3.933L14.7 17.6a1 1 0 0 0 1.8-.6V7a1 1 0 1 0-2 0v7l-1.95-2.6a1 1 0 0 0-1.6 0L9 14V7a1 1 0 0 0-1-1"/>`), g.Group(children),
	)
}

func LetterWSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9 8v8l3-4l3 4V8"/><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/></g>`), g.Group(children),
	)
}

func LetterWSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057M9.75 8a.75.75 0 0 0-1.5 0v8a.75.75 0 0 0 1.35.45l2.4-3.2l2.4 3.2a.75.75 0 0 0 1.35-.45V8a.75.75 0 0 0-1.5 0v5.75l-1.65-2.2a.75.75 0 0 0-1.2 0l-1.65 2.2z"/>`), g.Group(children),
	)
}

func LetterWWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9 8v8l3-4l3 4V8"/><path d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83"/></g>`), g.Group(children),
	)
}

func LetterWWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.565 2.075a3.33 3.33 0 0 1 2.87 0c.394.189.755.497 1.26.928l.079.066c.48.41.939.604 1.58.655l.102.008c.662.053 1.135.09 1.547.236a3.33 3.33 0 0 1 2.03 2.029c.145.412.182.885.235 1.547l.008.102c.051.641.246 1.1.655 1.58l.066.078c.431.506.74.867.928 1.261a3.33 3.33 0 0 1 0 2.87c-.189.394-.497.755-.928 1.26l-.066.079c-.418.49-.605.951-.655 1.58l-.008.102c-.053.662-.09 1.135-.236 1.547a3.33 3.33 0 0 1-2.029 2.03c-.412.145-.885.182-1.547.235l-.102.008c-.641.051-1.1.246-1.58.655l-.079.066c-.505.431-.866.74-1.26.928a3.33 3.33 0 0 1-2.87 0c-.394-.189-.755-.497-1.26-.928l-.079-.066a2.56 2.56 0 0 0-1.58-.655l-.102-.008c-.662-.053-1.135-.09-1.547-.236a3.33 3.33 0 0 1-2.03-2.029c-.145-.412-.182-.885-.235-1.547l-.008-.102a2.56 2.56 0 0 0-.655-1.58l-.066-.079c-.431-.505-.74-.866-.928-1.26a3.33 3.33 0 0 1 0-2.87c.189-.394.497-.755.928-1.26l.066-.079a2.56 2.56 0 0 0 .655-1.58l.008-.102c.053-.662.09-1.135.236-1.547a3.33 3.33 0 0 1 2.029-2.03c.412-.145.885-.182 1.547-.235l.102-.008a2.56 2.56 0 0 0 1.58-.655l.078-.066c.506-.431.867-.74 1.261-.928M9.75 8a.75.75 0 0 0-1.5 0v8a.75.75 0 0 0 1.35.45l2.4-3.2l2.4 3.2a.75.75 0 0 0 1.35-.45V8a.75.75 0 0 0-1.5 0v5.75l-1.65-2.2a.75.75 0 0 0-1.2 0l-1.65 2.2z"/>`), g.Group(children),
	)
}

func LetterX(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m8 7l7.5 10M8 17l7.5-10"/>`), g.Group(children),
	)
}

func LetterXCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0M9 8l6 8m-6 0l6-8"/>`), g.Group(children),
	)
}

func LetterXCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12M9.6 7.55a.75.75 0 1 0-1.2.9L11.062 12L8.4 15.55a.75.75 0 0 0 1.2.9l2.4-3.2l2.4 3.2a.75.75 0 0 0 1.2-.9L12.938 12L15.6 8.45a.75.75 0 1 0-1.2-.9l-2.4 3.2z"/>`), g.Group(children),
	)
}

func LetterXDiamond(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m9 8l6 8m-6 0l6-8M2.707 10.295a2.41 2.41 0 0 0 0 3.41l7.588 7.588a2.41 2.41 0 0 0 3.41 0l7.588-7.588a2.41 2.41 0 0 0 0-3.41l-7.588-7.588a2.41 2.41 0 0 0-3.41 0z"/>`), g.Group(children),
	)
}

func LetterXDiamondSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.79 1.49a3.16 3.16 0 0 1 3.445.687l7.588 7.588a3.16 3.16 0 0 1 0 4.47l-7.588 7.588a3.16 3.16 0 0 1-4.47 0l-7.588-7.588a3.16 3.16 0 0 1 0-4.47l7.588-7.589a3.2 3.2 0 0 1 1.025-.685M9.6 7.55a.75.75 0 1 0-1.2.9L11.062 12L8.4 15.55a.75.75 0 0 0 1.2.9l2.4-3.2l2.4 3.2a.75.75 0 0 0 1.2-.9L12.938 12L15.6 8.45a.75.75 0 1 0-1.2-.9l-2.4 3.2z"/>`), g.Group(children),
	)
}

func LetterXHexagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m9 8l6 8m-6 0l6-8m5.5 7.8V8.2a1.91 1.91 0 0 0-.944-1.645l-6.612-3.8a1.88 1.88 0 0 0-1.888 0l-6.612 3.8A1.9 1.9 0 0 0 3.5 8.2v7.602a1.91 1.91 0 0 0 .944 1.644l6.612 3.8a1.88 1.88 0 0 0 1.888 0l6.612-3.8A1.9 1.9 0 0 0 20.5 15.8"/>`), g.Group(children),
	)
}

func LetterXHexagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.68 2.105a2.63 2.63 0 0 1 2.64 0l.001.001l6.611 3.8A2.65 2.65 0 0 1 21.25 8.2v7.603a2.66 2.66 0 0 1-1.318 2.291l-.003.002l-6.608 3.799h-.002a2.63 2.63 0 0 1-2.639 0h-.001l-6.608-3.8h-.003A2.64 2.64 0 0 1 2.75 15.8V8.198a2.66 2.66 0 0 1 1.318-2.291l.003-.002zM9.6 7.55a.75.75 0 1 0-1.2.9L11.062 12L8.4 15.55a.75.75 0 0 0 1.2.9l2.4-3.2l2.4 3.2a.75.75 0 0 0 1.2-.9L12.938 12L15.6 8.45a.75.75 0 1 0-1.2-.9l-2.4 3.2z"/>`), g.Group(children),
	)
}

func LetterXOctagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m9 8l6 8m-6 0l6-8M7.805 3.469C8.16 3.115 8.451 3 8.937 3h6.126c.486 0 .778.115 1.132.469l4.336 4.336c.354.354.469.646.469 1.132v6.126c0 .5-.125.788-.469 1.132l-4.336 4.336c-.354.354-.646.469-1.132.469H8.937c-.5 0-.788-.125-1.132-.469L3.47 16.195c-.355-.355-.47-.646-.47-1.132V8.937c0-.5.125-.788.469-1.132z"/>`), g.Group(children),
	)
}

func LetterXOctagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.037 2.408a2.3 2.3 0 0 1 .9-.158h6.126c.302 0 .602.036.9.158s.54.31.762.53l4.337 4.337c.22.221.408.463.53.762c.123.298.158.598.158.9v6.126c0 .313-.039.616-.163.914a2.3 2.3 0 0 1-.525.748l-4.337 4.337a2.3 2.3 0 0 1-.762.53a2.3 2.3 0 0 1-.9.158H8.937c-.313 0-.616-.039-.914-.163a2.3 2.3 0 0 1-.748-.525l-4.337-4.337a2.3 2.3 0 0 1-.53-.762a2.3 2.3 0 0 1-.158-.9V8.937c0-.313.039-.616.163-.914a2.3 2.3 0 0 1 .525-.748l4.337-4.337c.221-.22.463-.408.762-.53M9.6 7.55a.75.75 0 1 0-1.2.9L11.062 12L8.4 15.55a.75.75 0 0 0 1.2.9l2.4-3.2l2.4 3.2a.75.75 0 0 0 1.2-.9L12.938 12L15.6 8.45a.75.75 0 1 0-1.2-.9l-2.4 3.2z"/>`), g.Group(children),
	)
}

func LetterXSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.8 6.4a1 1 0 1 0-1.6 1.2l3.3 4.4l-3.3 4.4a1 1 0 0 0 1.6 1.2l2.95-3.933L14.7 17.6a1 1 0 1 0 1.6-1.2L13 12l3.3-4.4a1 1 0 0 0-1.6-1.2l-2.95 3.933z"/>`), g.Group(children),
	)
}

func LetterXSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m9 8l6 8m-6 0l6-8M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/>`), g.Group(children),
	)
}

func LetterXSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057m.233 5.3a.75.75 0 1 0-1.2.9L11.062 12L8.4 15.55a.75.75 0 0 0 1.2.9l2.4-3.2l2.4 3.2a.75.75 0 0 0 1.2-.9L12.938 12L15.6 8.45a.75.75 0 1 0-1.2-.9l-2.4 3.2z"/>`), g.Group(children),
	)
}

func LetterXWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m9 8l6 8m-6 0l6-8M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83"/>`), g.Group(children),
	)
}

func LetterXWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.565 2.075a3.33 3.33 0 0 1 2.87 0c.394.189.755.497 1.26.928l.079.066c.48.41.939.604 1.58.655l.102.008c.662.053 1.135.09 1.547.236a3.33 3.33 0 0 1 2.03 2.029c.145.412.182.885.235 1.547l.008.102c.051.641.246 1.1.655 1.58l.066.078c.431.506.74.867.928 1.261a3.33 3.33 0 0 1 0 2.87c-.189.394-.497.755-.928 1.26l-.066.079c-.418.49-.605.951-.655 1.58l-.008.102c-.053.662-.09 1.135-.236 1.547a3.33 3.33 0 0 1-2.029 2.03c-.412.145-.885.182-1.547.235l-.102.008c-.641.051-1.1.246-1.58.655l-.079.066c-.505.431-.866.74-1.26.928a3.33 3.33 0 0 1-2.87 0c-.394-.189-.755-.497-1.26-.928l-.079-.066a2.56 2.56 0 0 0-1.58-.655l-.102-.008c-.662-.053-1.135-.09-1.547-.236a3.33 3.33 0 0 1-2.03-2.029c-.145-.412-.182-.885-.235-1.547l-.008-.102a2.56 2.56 0 0 0-.655-1.58l-.066-.079c-.431-.505-.74-.866-.928-1.26a3.33 3.33 0 0 1 0-2.87c.189-.394.497-.755.928-1.26l.066-.079a2.56 2.56 0 0 0 .655-1.58l.008-.102c.053-.662.09-1.135.236-1.547a3.33 3.33 0 0 1 2.029-2.03c.412-.145.885-.182 1.547-.235l.102-.008a2.56 2.56 0 0 0 1.58-.655l.078-.066c.506-.431.867-.74 1.261-.928M9.6 7.55a.75.75 0 1 0-1.2.9L11.062 12L8.4 15.55a.75.75 0 0 0 1.2.9l2.4-3.2l2.4 3.2a.75.75 0 0 0 1.2-.9L12.938 12L15.6 8.45a.75.75 0 1 0-1.2-.9l-2.4 3.2z"/>`), g.Group(children),
	)
}

func LetterY(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m8 7l3.75 5m3.75-5l-3.75 5m0 0v5"/>`), g.Group(children),
	)
}

func LetterYCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0M9 8.25l3 4m3-4l-3 4m0 0v4"/>`), g.Group(children),
	)
}

func LetterYCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12M9.6 7.8a.75.75 0 1 0-1.2.9l2.85 3.8v3.75a.75.75 0 0 0 1.5 0V12.5l2.85-3.8a.75.75 0 1 0-1.2-.9L12 11z"/>`), g.Group(children),
	)
}

func LetterYDiamond(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m9 8.25l3 4m3-4l-3 4m0 0v4m-9.293-5.955a2.41 2.41 0 0 0 0 3.41l7.588 7.588a2.41 2.41 0 0 0 3.41 0l7.588-7.588a2.41 2.41 0 0 0 0-3.41l-7.588-7.588a2.41 2.41 0 0 0-3.41 0z"/>`), g.Group(children),
	)
}

func LetterYDiamondSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.79 1.49a3.16 3.16 0 0 1 3.445.687l7.588 7.588a3.16 3.16 0 0 1 0 4.47l-7.588 7.588a3.16 3.16 0 0 1-4.47 0l-7.588-7.588a3.16 3.16 0 0 1 0-4.47l7.588-7.589a3.2 3.2 0 0 1 1.025-.685M9.6 7.8a.75.75 0 1 0-1.2.9l2.85 3.8v3.75a.75.75 0 0 0 1.5 0V12.5l2.85-3.8a.75.75 0 1 0-1.2-.9L12 11z"/>`), g.Group(children),
	)
}

func LetterYHexagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m9 8.25l3 4m3-4l-3 4m0 0v4m8.5-.45V8.2a1.91 1.91 0 0 0-.944-1.645l-6.612-3.8a1.88 1.88 0 0 0-1.888 0l-6.612 3.8A1.9 1.9 0 0 0 3.5 8.2v7.602a1.91 1.91 0 0 0 .944 1.644l6.612 3.8a1.88 1.88 0 0 0 1.888 0l6.612-3.8A1.9 1.9 0 0 0 20.5 15.8"/>`), g.Group(children),
	)
}

func LetterYHexagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.68 2.105a2.63 2.63 0 0 1 2.64 0l.001.001l6.611 3.8A2.65 2.65 0 0 1 21.25 8.2v7.603a2.66 2.66 0 0 1-1.318 2.291l-.003.002l-6.608 3.799h-.002a2.63 2.63 0 0 1-2.639 0h-.001l-6.608-3.8h-.003A2.64 2.64 0 0 1 2.75 15.8V8.198a2.66 2.66 0 0 1 1.318-2.291l.003-.002zM9.6 7.8a.75.75 0 1 0-1.2.9l2.85 3.8v3.75a.75.75 0 0 0 1.5 0V12.5l2.85-3.8a.75.75 0 1 0-1.2-.9L12 11z"/>`), g.Group(children),
	)
}

func LetterYOctagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m9 8.25l3 4m3-4l-3 4m0 0v4M7.805 3.469C8.16 3.115 8.451 3 8.937 3h6.126c.486 0 .778.115 1.132.469l4.336 4.336c.354.354.469.646.469 1.132v6.126c0 .5-.125.788-.469 1.132l-4.336 4.336c-.354.354-.646.469-1.132.469H8.937c-.5 0-.788-.125-1.132-.469L3.47 16.195c-.355-.355-.47-.646-.47-1.132V8.937c0-.5.125-.788.469-1.132z"/>`), g.Group(children),
	)
}

func LetterYOctagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.037 2.408a2.3 2.3 0 0 1 .9-.158h6.126c.302 0 .602.036.9.158s.54.31.762.53l4.337 4.337c.22.221.408.463.53.762c.123.298.158.598.158.9v6.126c0 .313-.039.616-.163.914a2.3 2.3 0 0 1-.525.748l-4.337 4.337a2.3 2.3 0 0 1-.762.53a2.3 2.3 0 0 1-.9.158H8.937c-.313 0-.616-.039-.914-.163a2.3 2.3 0 0 1-.748-.525l-4.337-4.337a2.3 2.3 0 0 1-.53-.762a2.3 2.3 0 0 1-.158-.9V8.937c0-.313.039-.616.163-.914a2.3 2.3 0 0 1 .525-.748l4.337-4.337c.221-.22.463-.408.762-.53M9.6 7.8a.75.75 0 1 0-1.2.9l2.85 3.8v3.75a.75.75 0 0 0 1.5 0V12.5l2.85-3.8a.75.75 0 1 0-1.2-.9L12 11z"/>`), g.Group(children),
	)
}

func LetterYSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.8 6.4a1 1 0 1 0-1.6 1.2l3.55 4.733V17a1 1 0 1 0 2 0v-4.667L16.3 7.6a1 1 0 0 0-1.6-1.2l-2.95 3.933z"/>`), g.Group(children),
	)
}

func LetterYSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m9 8.25l3 4m3-4l-3 4m0 0v4M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/>`), g.Group(children),
	)
}

func LetterYSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057M9.6 7.8a.75.75 0 1 0-1.2.9l2.85 3.8v3.75a.75.75 0 0 0 1.5 0V12.5l2.85-3.8a.75.75 0 1 0-1.2-.9L12 11z"/>`), g.Group(children),
	)
}

func LetterYWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m9 8.25l3 4m3-4l-3 4m0 0v4M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83"/>`), g.Group(children),
	)
}

func LetterYWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.565 2.075a3.33 3.33 0 0 1 2.87 0c.394.189.755.497 1.26.928l.079.066c.48.41.939.604 1.58.655l.102.008c.662.053 1.135.09 1.547.236a3.33 3.33 0 0 1 2.03 2.029c.145.412.182.885.235 1.547l.008.102c.051.641.246 1.1.655 1.58l.066.078c.431.506.74.867.928 1.261a3.33 3.33 0 0 1 0 2.87c-.189.394-.497.755-.928 1.26l-.066.079c-.418.49-.605.951-.655 1.58l-.008.102c-.053.662-.09 1.135-.236 1.547a3.33 3.33 0 0 1-2.029 2.03c-.412.145-.885.182-1.547.235l-.102.008c-.641.051-1.1.246-1.58.655l-.079.066c-.505.431-.866.74-1.26.928a3.33 3.33 0 0 1-2.87 0c-.394-.189-.755-.497-1.26-.928l-.079-.066a2.56 2.56 0 0 0-1.58-.655l-.102-.008c-.662-.053-1.135-.09-1.547-.236a3.33 3.33 0 0 1-2.03-2.029c-.145-.412-.182-.885-.235-1.547l-.008-.102a2.56 2.56 0 0 0-.655-1.58l-.066-.079c-.431-.505-.74-.866-.928-1.26a3.33 3.33 0 0 1 0-2.87c.189-.394.497-.755.928-1.26l.066-.079a2.56 2.56 0 0 0 .655-1.58l.008-.102c.053-.662.09-1.135.236-1.547a3.33 3.33 0 0 1 2.029-2.03c.412-.145.885-.182 1.547-.235l.102-.008a2.56 2.56 0 0 0 1.58-.655l.078-.066c.506-.431.867-.74 1.261-.928M9.6 7.8a.75.75 0 1 0-1.2.9l2.85 3.8v3.75a.75.75 0 0 0 1.5 0V12.5l2.85-3.8a.75.75 0 1 0-1.2-.9L12 11z"/>`), g.Group(children),
	)
}

func LetterZ(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M8 7h7.5L8 17h7.5"/>`), g.Group(children),
	)
}

func LetterZCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/><path d="M9 8h6l-6 8h6"/></g>`), g.Group(children),
	)
}

func LetterZCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12M9 7.25a.75.75 0 0 0 0 1.5h4.5l-5.1 6.8a.75.75 0 0 0 .6 1.2h6a.75.75 0 0 0 0-1.5h-4.5l5.1-6.8a.75.75 0 0 0-.6-1.2z"/>`), g.Group(children),
	)
}

func LetterZDiamond(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9 8h6l-6 8h6"/><path d="M2.707 10.295a2.41 2.41 0 0 0 0 3.41l7.588 7.588a2.41 2.41 0 0 0 3.41 0l7.588-7.588a2.41 2.41 0 0 0 0-3.41l-7.588-7.588a2.41 2.41 0 0 0-3.41 0z"/></g>`), g.Group(children),
	)
}

func LetterZDiamondSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.79 1.49a3.16 3.16 0 0 1 3.445.687l7.588 7.588a3.16 3.16 0 0 1 0 4.47l-7.588 7.588a3.16 3.16 0 0 1-4.47 0l-7.588-7.588a3.16 3.16 0 0 1 0-4.47l7.588-7.589a3.2 3.2 0 0 1 1.025-.685M9 7.25a.75.75 0 0 0 0 1.5h4.5l-5.1 6.8a.75.75 0 0 0 .6 1.2h6a.75.75 0 0 0 0-1.5h-4.5l5.1-6.8a.75.75 0 0 0-.6-1.2z"/>`), g.Group(children),
	)
}

func LetterZHexagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9 8h6l-6 8h6"/><path d="M20.5 15.8V8.2a1.91 1.91 0 0 0-.944-1.645l-6.612-3.8a1.88 1.88 0 0 0-1.888 0l-6.612 3.8A1.9 1.9 0 0 0 3.5 8.2v7.602a1.91 1.91 0 0 0 .944 1.644l6.612 3.8a1.88 1.88 0 0 0 1.888 0l6.612-3.8A1.9 1.9 0 0 0 20.5 15.8"/></g>`), g.Group(children),
	)
}

func LetterZHexagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.68 2.105a2.63 2.63 0 0 1 2.64 0l.001.001l6.611 3.8A2.65 2.65 0 0 1 21.25 8.2v7.603a2.66 2.66 0 0 1-1.318 2.291l-.003.002l-6.608 3.799h-.002a2.63 2.63 0 0 1-2.639 0h-.001l-6.608-3.8h-.003A2.64 2.64 0 0 1 2.75 15.8V8.198a2.66 2.66 0 0 1 1.318-2.291l.003-.002zM9 7.25a.75.75 0 0 0 0 1.5h4.5l-5.1 6.8a.75.75 0 0 0 .6 1.2h6a.75.75 0 0 0 0-1.5h-4.5l5.1-6.8a.75.75 0 0 0-.6-1.2z"/>`), g.Group(children),
	)
}

func LetterZOctagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9 8h6l-6 8h6"/><path d="M7.805 3.469C8.16 3.115 8.451 3 8.937 3h6.126c.486 0 .778.115 1.132.469l4.336 4.336c.354.354.469.646.469 1.132v6.126c0 .5-.125.788-.469 1.132l-4.336 4.336c-.354.354-.646.469-1.132.469H8.937c-.5 0-.788-.125-1.132-.469L3.47 16.195c-.355-.355-.47-.646-.47-1.132V8.937c0-.5.125-.788.469-1.132z"/></g>`), g.Group(children),
	)
}

func LetterZOctagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.037 2.408a2.3 2.3 0 0 1 .9-.158h6.126c.302 0 .602.036.9.158s.54.31.762.53l4.337 4.337c.22.221.408.463.53.762c.123.298.158.598.158.9v6.126c0 .313-.039.616-.163.914a2.3 2.3 0 0 1-.525.748l-4.337 4.337a2.3 2.3 0 0 1-.762.53a2.3 2.3 0 0 1-.9.158H8.937c-.313 0-.616-.039-.914-.163a2.3 2.3 0 0 1-.748-.525l-4.337-4.337a2.3 2.3 0 0 1-.53-.762a2.3 2.3 0 0 1-.158-.9V8.937c0-.313.039-.616.163-.914a2.3 2.3 0 0 1 .525-.748l4.337-4.337c.221-.22.463-.408.762-.53M9 7.25a.75.75 0 0 0 0 1.5h4.5l-5.1 6.8a.75.75 0 0 0 .6 1.2h6a.75.75 0 0 0 0-1.5h-4.5l5.1-6.8a.75.75 0 0 0-.6-1.2z"/>`), g.Group(children),
	)
}

func LetterZSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8 6a1 1 0 1 0 0 2h5.5l-6.3 8.4A1 1 0 0 0 8 18h7.5a1 1 0 1 0 0-2H10l6.3-8.4a1 1 0 0 0-.8-1.6z"/>`), g.Group(children),
	)
}

func LetterZSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9 8h6l-6 8h6"/><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/></g>`), g.Group(children),
	)
}

func LetterZSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057M9 7.25a.75.75 0 0 0 0 1.5h4.5l-5.1 6.8a.75.75 0 0 0 .6 1.2h6a.75.75 0 0 0 0-1.5h-4.5l5.1-6.8a.75.75 0 0 0-.6-1.2z"/>`), g.Group(children),
	)
}

func LetterZWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9 8h6l-6 8h6"/><path d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83"/></g>`), g.Group(children),
	)
}

func LetterZWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.565 2.075a3.33 3.33 0 0 1 2.87 0c.394.189.755.497 1.26.928l.079.066c.48.41.939.604 1.58.655l.102.008c.662.053 1.135.09 1.547.236a3.33 3.33 0 0 1 2.03 2.029c.145.412.182.885.235 1.547l.008.102c.051.641.246 1.1.655 1.58l.066.078c.431.506.74.867.928 1.261a3.33 3.33 0 0 1 0 2.87c-.189.394-.497.755-.928 1.26l-.066.079c-.418.49-.605.951-.655 1.58l-.008.102c-.053.662-.09 1.135-.236 1.547a3.33 3.33 0 0 1-2.029 2.03c-.412.145-.885.182-1.547.235l-.102.008c-.641.051-1.1.246-1.58.655l-.079.066c-.505.431-.866.74-1.26.928a3.33 3.33 0 0 1-2.87 0c-.394-.189-.755-.497-1.26-.928l-.079-.066a2.56 2.56 0 0 0-1.58-.655l-.102-.008c-.662-.053-1.135-.09-1.547-.236a3.33 3.33 0 0 1-2.03-2.029c-.145-.412-.182-.885-.235-1.547l-.008-.102a2.56 2.56 0 0 0-.655-1.58l-.066-.079c-.431-.505-.74-.866-.928-1.26a3.33 3.33 0 0 1 0-2.87c.189-.394.497-.755.928-1.26l.066-.079a2.56 2.56 0 0 0 .655-1.58l.008-.102c.053-.662.09-1.135.236-1.547a3.33 3.33 0 0 1 2.029-2.03c.412-.145.885-.182 1.547-.235l.102-.008a2.56 2.56 0 0 0 1.58-.655l.078-.066c.506-.431.867-.74 1.261-.928M9 7.25a.75.75 0 0 0 0 1.5h4.5l-5.1 6.8a.75.75 0 0 0 .6 1.2h6a.75.75 0 0 0 0-1.5h-4.5l5.1-6.8a.75.75 0 0 0-.6-1.2z"/>`), g.Group(children),
	)
}

func Lightning(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M12.748 3.572c.059-.503-.532-.777-.835-.388L4.111 13.197c-.258.33-.038.832.364.832h6.988c.285 0 .506.267.47.57l-.68 5.83c-.06.502.53.776.834.387l7.802-10.013c.258-.33.038-.832-.364-.832h-6.988c-.285 0-.506-.267-.47-.57z"/>`), g.Group(children),
	)
}

func LightningSlash(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m3 21l6.971-6.971M21 3l-6.971 6.971m-4.058 4.058h1.492c.285 0 .506.267.47.57l-.68 5.83c-.06.502.53.776.834.387l7.802-10.013c.258-.33.038-.832-.364-.832h-5.496m-4.058 4.058l4.058-4.058M5.5 14.029H4.475c-.402 0-.622-.502-.364-.832l7.802-10.013c.303-.389.894-.115.835.388l-.46 3.928"/>`), g.Group(children),
	)
}

func LightningSlashSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M13.493 3.659a1.25 1.25 0 0 0-.711-1.296a1.195 1.195 0 0 0-1.46.36L3.518 12.736a1.28 1.28 0 0 0-.16 1.302c.172.393.57.741 1.116.741H8.16l-5.69 5.69a.75.75 0 1 0 1.06 1.061l6.752-6.751h.875l-.65 5.562a1.25 1.25 0 0 0 .711 1.296a1.195 1.195 0 0 0 1.46-.36l7.803-10.013a1.28 1.28 0 0 0 .16-1.302a1.22 1.22 0 0 0-1.116-.741H15.84l5.69-5.69a.75.75 0 0 0-1.06-1.061l-6.752 6.75h-.875z"/>`), g.Group(children),
	)
}

func LightningSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M13.493 3.659a1.25 1.25 0 0 0-.711-1.296a1.195 1.195 0 0 0-1.46.36L3.518 12.736a1.28 1.28 0 0 0-.16 1.302c.172.393.57.741 1.116.741h6.682l-.65 5.562a1.25 1.25 0 0 0 .711 1.296a1.195 1.195 0 0 0 1.46-.36l7.803-10.013a1.28 1.28 0 0 0 .16-1.302a1.22 1.22 0 0 0-1.116-.741h-6.682z"/>`), g.Group(children),
	)
}

func Like(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M14.54 10.105h5.533c2.546 0-.764 10.895-2.588 10.895H4.964A.956.956 0 0 1 4 20.053v-9.385c0-.347.193-.666.502-.832C6.564 8.73 8.983 7.824 10.18 5.707l1.28-2.266A.87.87 0 0 1 12.222 3c3.18 0 2.237 4.63 1.805 6.47a.52.52 0 0 0 .513.635"/>`), g.Group(children),
	)
}

func LikeSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M4.148 9.175c-.55.294-.898.865-.898 1.493v9.385c0 .95.78 1.697 1.714 1.697h12.521c.579 0 1.024-.404 1.304-.725c.317-.362.618-.847.894-1.383c.557-1.08 1.08-2.494 1.459-3.893c.376-1.392.628-2.832.607-3.956c-.01-.552-.087-1.11-.312-1.556c-.247-.493-.703-.882-1.364-.882h-5.25c.216-.96.51-2.497.404-3.868c-.059-.758-.246-1.561-.723-2.189c-.509-.668-1.277-1.048-2.282-1.048c-.582 0-1.126.31-1.415.822m0 0l-1.28 2.266c-.512.906-1.3 1.58-2.258 2.176c-.638.397-1.294.727-1.973 1.07a50 50 0 0 0-1.148.591"/>`), g.Group(children),
	)
}

func LineChartCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/><path d="m16 10l-3.5 3.5l-2-2L8 14"/></g>`), g.Group(children),
	)
}

func LineChartCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12m14.28-1.47a.75.75 0 1 0-1.06-1.06l-2.97 2.97l-1.47-1.47a.75.75 0 0 0-1.06 0l-2.5 2.5a.75.75 0 1 0 1.06 1.06l1.97-1.97l1.47 1.47a.75.75 0 0 0 1.06 0z"/>`), g.Group(children),
	)
}

func LineChartDiamond(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M2.707 10.295a2.41 2.41 0 0 0 0 3.41l7.588 7.588a2.41 2.41 0 0 0 3.41 0l7.588-7.588a2.41 2.41 0 0 0 0-3.41l-7.588-7.588a2.41 2.41 0 0 0-3.41 0z"/><path d="m16 10l-3.5 3.5l-2-2L8 14"/></g>`), g.Group(children),
	)
}

func LineChartDiamondSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.79 1.49a3.16 3.16 0 0 1 3.445.687l7.588 7.588a3.16 3.16 0 0 1 0 4.47l-7.588 7.588a3.16 3.16 0 0 1-4.47 0l-7.588-7.588a3.16 3.16 0 0 1 0-4.47l7.588-7.589a3.2 3.2 0 0 1 1.025-.685m5.74 9.04a.75.75 0 1 0-1.06-1.06l-2.97 2.97l-1.47-1.47a.75.75 0 0 0-1.06 0l-2.5 2.5a.75.75 0 1 0 1.06 1.06l1.97-1.97l1.47 1.47a.75.75 0 0 0 1.06 0z"/>`), g.Group(children),
	)
}

func LineChartHexagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M20.5 15.8V8.2a1.91 1.91 0 0 0-.944-1.645l-6.612-3.8a1.88 1.88 0 0 0-1.888 0l-6.612 3.8A1.9 1.9 0 0 0 3.5 8.2v7.602a1.91 1.91 0 0 0 .944 1.644l6.612 3.8a1.88 1.88 0 0 0 1.888 0l6.612-3.8A1.9 1.9 0 0 0 20.5 15.8"/><path d="m16 10l-3.5 3.5l-2-2L8 14"/></g>`), g.Group(children),
	)
}

func LineChartHexagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.68 2.105a2.63 2.63 0 0 1 2.64 0l.001.001l6.611 3.8A2.65 2.65 0 0 1 21.25 8.2v7.603a2.66 2.66 0 0 1-1.318 2.291l-.003.002l-6.608 3.799h-.002a2.63 2.63 0 0 1-2.639 0h-.001l-6.608-3.8h-.003A2.64 2.64 0 0 1 2.75 15.8V8.198a2.66 2.66 0 0 1 1.318-2.291l.003-.002zm5.85 8.425a.75.75 0 1 0-1.06-1.06l-2.97 2.97l-1.47-1.47a.75.75 0 0 0-1.06 0l-2.5 2.5a.75.75 0 1 0 1.06 1.06l1.97-1.97l1.47 1.47a.75.75 0 0 0 1.06 0z"/>`), g.Group(children),
	)
}

func LineChartOctagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M7.805 3.469C8.16 3.115 8.451 3 8.937 3h6.126c.486 0 .778.115 1.132.469l4.336 4.336c.354.354.469.646.469 1.132v6.126c0 .5-.125.788-.469 1.132l-4.336 4.336c-.354.354-.646.469-1.132.469H8.937c-.5 0-.788-.125-1.132-.469L3.47 16.195c-.355-.355-.47-.646-.47-1.132V8.937c0-.5.125-.788.469-1.132z"/><path d="m16 10l-3.5 3.5l-2-2L8 14"/></g>`), g.Group(children),
	)
}

func LineChartOctagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.037 2.408a2.3 2.3 0 0 1 .9-.158h6.126c.302 0 .602.036.9.158s.54.31.762.53l4.337 4.337c.22.221.408.463.53.762c.123.298.158.598.158.9v6.126c0 .313-.039.616-.163.914a2.3 2.3 0 0 1-.525.748l-4.337 4.337a2.3 2.3 0 0 1-.762.53a2.3 2.3 0 0 1-.9.158H8.937c-.313 0-.616-.039-.914-.163a2.3 2.3 0 0 1-.748-.525l-4.337-4.337a2.3 2.3 0 0 1-.53-.762a2.3 2.3 0 0 1-.158-.9V8.937c0-.313.039-.616.163-.914a2.3 2.3 0 0 1 .525-.748l4.337-4.337c.221-.22.463-.408.762-.53m8.493 8.122a.75.75 0 1 0-1.06-1.06l-2.97 2.97l-1.47-1.47a.75.75 0 0 0-1.06 0l-2.5 2.5a.75.75 0 1 0 1.06 1.06l1.97-1.97l1.47 1.47a.75.75 0 0 0 1.06 0z"/>`), g.Group(children),
	)
}

func LineChartSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/><path d="m16 10l-3.5 3.5l-2-2L8 14"/></g>`), g.Group(children),
	)
}

func LineChartSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057m7.163 8.28a.75.75 0 1 0-1.06-1.06l-2.97 2.97l-1.47-1.47a.75.75 0 0 0-1.06 0l-2.5 2.5a.75.75 0 1 0 1.06 1.06l1.97-1.97l1.47 1.47a.75.75 0 0 0 1.06 0z"/>`), g.Group(children),
	)
}

func LineChartWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83"/><path d="m16 10l-3.5 3.5l-2-2L8 14"/></g>`), g.Group(children),
	)
}

func LineChartWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.565 2.075a3.33 3.33 0 0 1 2.87 0c.394.189.755.497 1.26.928l.079.066c.48.41.939.604 1.58.655l.102.008c.662.053 1.135.09 1.547.236a3.33 3.33 0 0 1 2.03 2.029c.145.412.182.885.235 1.547l.008.102c.051.641.246 1.1.655 1.58l.066.078c.431.506.74.867.928 1.261a3.33 3.33 0 0 1 0 2.87c-.189.394-.497.755-.928 1.26l-.066.079c-.418.49-.605.951-.655 1.58l-.008.102c-.053.662-.09 1.135-.236 1.547a3.33 3.33 0 0 1-2.029 2.03c-.412.145-.885.182-1.547.235l-.102.008c-.641.051-1.1.246-1.58.655l-.079.066c-.505.431-.866.74-1.26.928a3.33 3.33 0 0 1-2.87 0c-.394-.189-.755-.497-1.26-.928l-.079-.066a2.56 2.56 0 0 0-1.58-.655l-.102-.008c-.662-.053-1.135-.09-1.547-.236a3.33 3.33 0 0 1-2.03-2.029c-.145-.412-.182-.885-.235-1.547l-.008-.102a2.56 2.56 0 0 0-.655-1.58l-.066-.079c-.431-.505-.74-.866-.928-1.26a3.33 3.33 0 0 1 0-2.87c.189-.394.497-.755.928-1.26l.066-.079a2.56 2.56 0 0 0 .655-1.58l.008-.102c.053-.662.09-1.135.236-1.547a3.33 3.33 0 0 1 2.029-2.03c.412-.145.885-.182 1.547-.235l.102-.008a2.56 2.56 0 0 0 1.58-.655l.078-.066c.506-.431.867-.74 1.261-.928m5.965 8.455a.75.75 0 1 0-1.06-1.06l-2.97 2.97l-1.47-1.47a.75.75 0 0 0-1.06 0l-2.5 2.5a.75.75 0 1 0 1.06 1.06l1.97-1.97l1.47 1.47a.75.75 0 0 0 1.06 0z"/>`), g.Group(children),
	)
}

func Link(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m15.988 13l3.902-3.902c1.437-1.437 1.485-3.718.107-5.095c-1.377-1.378-3.658-1.33-5.095.107L11 8.012m2 7.95l-3.892 3.88c-1.432 1.43-3.64 1.615-5.082.107c-1.442-1.507-1.326-3.639.107-5.068L8.025 11M9 15l6-6"/>`), g.Group(children),
	)
}

func LinkOne(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m10.936 8.324l4.38-4.385c1.276-1.276 3.372-1.248 4.683.063c1.31 1.312 1.338 3.41.062 4.686l-3.803 3.807m-8.516-.99L3.94 15.312c-1.277 1.276-1.25 3.374.06 4.686s3.407 1.34 4.683.063l4.38-4.385m-2.065-2.666c-1.311-1.311-1.34-3.41-.063-4.686m2.128 2.603c1.312 1.311 1.34 3.41.063 4.686"/>`), g.Group(children),
	)
}

func LinkOneSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M19.468 4.532c-1.03-1.031-2.652-1.033-3.62-.062l-4.382 4.384c-.97.97-.97 2.594.063 3.626a.75.75 0 0 1-1.061 1.06c-1.59-1.59-1.646-4.163-.063-5.746l4.381-4.385c1.582-1.583 4.153-1.528 5.743.063s1.645 4.164.063 5.747l-3.803 3.806a.75.75 0 1 1-1.062-1.06l3.804-3.807c.97-.97.968-2.594-.063-3.626m-6.935 5.864a.75.75 0 0 1 1.06 0c1.592 1.591 1.646 4.164.064 5.747l-.027.026l-.035.037l-4.38 4.385c-1.583 1.583-4.154 1.528-5.744-.063s-1.644-4.164-.063-5.747l3.804-3.806a.75.75 0 0 1 1.06 1.06L4.47 15.842c-.97.97-.968 2.594.063 3.626c1.03 1.031 2.652 1.033 3.621.062l4.38-4.384l.028-.026l.035-.037c.97-.97.97-2.594-.063-3.626a.75.75 0 0 1 0-1.06"/>`), g.Group(children),
	)
}

func LinkSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M14.372 3.58c1.708-1.709 4.465-1.799 6.156-.108s1.601 4.448-.107 6.156l-3.902 3.902a.75.75 0 1 1-1.06-1.06l3.901-3.902c1.165-1.165 1.171-2.971.107-4.035c-1.063-1.064-2.87-1.058-4.035.107L11.53 8.542a.75.75 0 0 1-1.06-1.06zm1.158 4.89a.75.75 0 0 1 0 1.06l-6 6a.75.75 0 0 1-1.06-1.06l6-6a.75.75 0 0 1 1.06 0"/><path d="M8.555 11.531a.75.75 0 0 0-1.06-1.062L3.604 14.35c-1.703 1.698-1.862 4.296-.12 6.118c1.783 1.863 4.477 1.578 6.154-.094l3.892-3.881a.75.75 0 1 0-1.06-1.062L8.58 19.31c-1.189 1.186-2.908 1.272-4.01.12a3 3 0 0 1-.191-.217c-.939-1.172-.81-2.71.285-3.802z"/></g>`), g.Group(children),
	)
}

func LinkTwo(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M14 15.5h3.4c1.988 0 3.6-1.567 3.6-3.5s-1.612-3.5-3.6-3.5H14m-4 7l-3.397-.007c-1.987-.003-3.647-1.426-3.602-3.502S4.607 8.497 6.594 8.5l3.397.007M7.757 12h8.486"/>`), g.Group(children),
	)
}

func LinkTwoSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M13.997 7.75h3.401c2.384 0 4.352 1.883 4.352 4.25s-1.968 4.25-4.352 4.25h-3.4a.75.75 0 1 1 0-1.5h3.4c1.595 0 2.851-1.251 2.851-2.75s-1.256-2.75-2.85-2.75h-3.402a.75.75 0 1 1 0-1.5M7.002 12a.75.75 0 0 1 .75-.75h8.489a.75.75 0 1 1 0 1.5H7.752a.75.75 0 0 1-.75-.75"/><path d="M10.003 7.75H6.602C4.218 7.75 2.25 9.633 2.25 12s1.968 4.25 4.352 4.25h3.4a.75.75 0 1 0 0-1.5h-3.4c-1.595 0-2.851-1.251-2.851-2.75S5.007 9.25 6.6 9.25h3.402a.75.75 0 1 0 0-1.5M16.998 12a.75.75 0 0 0-.75-.75H7.759a.75.75 0 1 0 0 1.5h8.489a.75.75 0 0 0 .75-.75"/></g>`), g.Group(children),
	)
}

func List(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M8 6.5h12M8 12h12M8 17.5h12M4 6.5h1M4 12h1m-1 5.5h1"/>`), g.Group(children),
	)
}

func ListCheck(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M7.5 16.039L4.688 19.5L3 18.346m4.5-8.077l-2.812 3.462L3 12.577M7.5 4.5L4.688 7.962L3 6.808M11 17.5h10M11 12h10M11 6.5h10"/>`), g.Group(children),
	)
}

func ListCheckSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.082 4.973a.75.75 0 0 0-1.164-.946L4.541 6.953l-1.118-.764a.75.75 0 1 0-.846 1.238L4.264 8.58a.75.75 0 0 0 1.006-.146zm0 5.769a.75.75 0 0 0-1.164-.946l-2.377 2.926l-1.118-.764a.75.75 0 0 0-.846 1.238l1.687 1.154a.75.75 0 0 0 1.006-.146zm0 5.769a.75.75 0 0 0-1.164-.945L4.541 18.49l-1.118-.764a.75.75 0 1 0-.846 1.238l1.687 1.154a.75.75 0 0 0 1.006-.146zM11 5.75a.75.75 0 0 0 0 1.5h10a.75.75 0 0 0 0-1.5zm0 5.5a.75.75 0 0 0 0 1.5h10a.75.75 0 0 0 0-1.5zm0 5.5a.75.75 0 0 0 0 1.5h10a.75.75 0 0 0 0-1.5z"/>`), g.Group(children),
	)
}

func ListNumber(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M11 17.5h10M11 12h10M11 6.5h10M3.5 15.455v-.174c0-.777.672-1.406 1.5-1.406h.04c.807 0 1.46.613 1.46 1.368c0 .33-.114.65-.324.912L3.5 19.5h3m-3-14.063l2-.937v5.625"/>`), g.Group(children),
	)
}

func ListNumberSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M11 5.75a.75.75 0 0 0 0 1.5h10a.75.75 0 0 0 0-1.5zm0 5.5a.75.75 0 0 0 0 1.5h10a.75.75 0 0 0 0-1.5zm0 5.5a.75.75 0 0 0 0 1.5h10a.75.75 0 0 0 0-1.5zM6.25 4.5a.75.75 0 0 0-1.068-.68l-2 .938a.75.75 0 0 0 .636 1.359l.932-.437v4.445a.75.75 0 0 0 1.5 0zm-2 10.781c0-.317.29-.656.75-.656h.04c.439 0 .71.322.71.618a.7.7 0 0 1-.16.444l-2.676 3.345A.75.75 0 0 0 3.5 20.25h3a.75.75 0 1 0 0-1.5H5.06l1.701-2.126a2.2 2.2 0 0 0 .49-1.38c0-1.216-1.037-2.12-2.21-2.12H5c-1.196 0-2.25.921-2.25 2.157v.174a.75.75 0 0 0 1.5 0z"/>`), g.Group(children),
	)
}

func ListSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M3.25 6.5A.75.75 0 0 1 4 5.75h1a.75.75 0 0 1 0 1.5H4a.75.75 0 0 1-.75-.75m4 0A.75.75 0 0 1 8 5.75h12a.75.75 0 0 1 0 1.5H8a.75.75 0 0 1-.75-.75m-4 5.5a.75.75 0 0 1 .75-.75h1a.75.75 0 0 1 0 1.5H4a.75.75 0 0 1-.75-.75m4 0a.75.75 0 0 1 .75-.75h12a.75.75 0 0 1 0 1.5H8a.75.75 0 0 1-.75-.75m-4 5.5a.75.75 0 0 1 .75-.75h1a.75.75 0 0 1 0 1.5H4a.75.75 0 0 1-.75-.75m4 0a.75.75 0 0 1 .75-.75h12a.75.75 0 0 1 0 1.5H8a.75.75 0 0 1-.75-.75"/>`), g.Group(children),
	)
}

func Location(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M12.56 20.82a.96.96 0 0 1-1.12 0C6.611 17.378 1.486 10.298 6.667 5.182A7.6 7.6 0 0 1 12 3c2 0 3.919.785 5.333 2.181c5.181 5.116.056 12.196-4.773 15.64"/><path d="M12 12a2 2 0 1 0 0-4a2 2 0 0 0 0 4"/></g>`), g.Group(children),
	)
}

func LocationCheck(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M12.56 20.82a.96.96 0 0 1-1.12 0C6.611 17.378 1.486 10.298 6.667 5.182A7.6 7.6 0 0 1 12 3c2 0 3.919.785 5.333 2.181c5.181 5.116.056 12.196-4.773 15.64"/><path d="m9.6 10.323l1.379 1.575a.3.3 0 0 0 .466-.022L14.245 8"/></g>`), g.Group(children),
	)
}

func LocationCheckSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M6.14 4.648A8.34 8.34 0 0 1 12 2.25c2.196 0 4.304.861 5.86 2.398c1.409 1.39 2.143 2.946 2.337 4.562c.193 1.602-.152 3.21-.81 4.718c-1.306 3-3.902 5.728-6.392 7.503a1.71 1.71 0 0 1-1.99 0c-2.49-1.775-5.086-4.504-6.393-7.503c-.657-1.508-1.001-3.116-.809-4.719c.194-1.615.928-3.17 2.337-4.561m8.713 3.791a.75.75 0 0 0-1.216-.878l-2.467 3.416l-1.005-1.148a.75.75 0 1 0-1.13.987l1.38 1.576c.443.507 1.244.47 1.639-.077z"/>`), g.Group(children),
	)
}

func LocationHome(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M12.56 20.82a.96.96 0 0 1-1.12 0C6.611 17.378 1.486 10.298 6.667 5.182A7.6 7.6 0 0 1 12 3c2 0 3.919.785 5.333 2.181c5.181 5.116.056 12.196-4.773 15.64"/><path d="M10.75 12a1 1 0 0 1-1-1V8.64L12 7l2.25 1.64V11a1 1 0 0 1-1 1z"/></g>`), g.Group(children),
	)
}

func LocationHomeSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M10.5 11V9.022L12 7.928l1.5 1.094V11a.25.25 0 0 1-.25.25h-2.5a.25.25 0 0 1-.25-.25"/><path d="M6.14 4.648A8.34 8.34 0 0 1 12 2.25c2.196 0 4.304.861 5.86 2.398c1.409 1.39 2.143 2.946 2.337 4.562c.193 1.602-.152 3.21-.81 4.718c-1.306 3-3.902 5.728-6.392 7.503a1.71 1.71 0 0 1-1.99 0c-2.49-1.775-5.086-4.504-6.393-7.503c-.657-1.508-1.001-3.116-.809-4.719c.194-1.615.928-3.17 2.337-4.561m6.302 1.746a.75.75 0 0 0-.884 0l-2.25 1.64A.75.75 0 0 0 9 8.64V11c0 .966.784 1.75 1.75 1.75h2.5A1.75 1.75 0 0 0 15 11V8.64a.75.75 0 0 0-.308-.606z"/></g>`), g.Group(children),
	)
}

func LocationMinus(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M12.56 20.82a.96.96 0 0 1-1.12 0C6.611 17.378 1.486 10.298 6.667 5.182A7.6 7.6 0 0 1 12 3c2 0 3.919.785 5.333 2.181c5.181 5.116.056 12.196-4.773 15.64M9.5 10h5"/>`), g.Group(children),
	)
}

func LocationMinusSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M6.14 4.648A8.34 8.34 0 0 1 12 2.25c2.196 0 4.304.861 5.86 2.398c1.409 1.39 2.143 2.946 2.337 4.562c.193 1.602-.152 3.21-.81 4.718c-1.306 3-3.902 5.728-6.392 7.503a1.71 1.71 0 0 1-1.99 0c-2.49-1.775-5.086-4.504-6.393-7.503c-.657-1.508-1.001-3.116-.809-4.719c.194-1.615.928-3.17 2.337-4.561M9.5 9.25a.75.75 0 0 0 0 1.5h5a.75.75 0 0 0 0-1.5z"/>`), g.Group(children),
	)
}

func LocationPlus(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M12.56 20.82a.96.96 0 0 1-1.12 0C6.611 17.378 1.486 10.298 6.667 5.182A7.6 7.6 0 0 1 12 3c2 0 3.919.785 5.333 2.181c5.181 5.116.056 12.196-4.773 15.64M9.5 10h5M12 7.5v5"/>`), g.Group(children),
	)
}

func LocationPlusSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M6.14 4.648A8.34 8.34 0 0 1 12 2.25c2.196 0 4.304.861 5.86 2.398c1.409 1.39 2.143 2.946 2.337 4.562c.193 1.602-.152 3.21-.81 4.718c-1.306 3-3.902 5.728-6.392 7.503a1.71 1.71 0 0 1-1.99 0c-2.49-1.775-5.086-4.504-6.393-7.503c-.657-1.508-1.001-3.116-.809-4.719c.194-1.615.928-3.17 2.337-4.561M12.75 7.5a.75.75 0 0 0-1.5 0v1.75H9.5a.75.75 0 0 0 0 1.5h1.75v1.75a.75.75 0 0 0 1.5 0v-1.75h1.75a.75.75 0 0 0 0-1.5h-1.75z"/>`), g.Group(children),
	)
}

func LocationSelected(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M12.435 16.86a.75.75 0 0 1-.87 0C7.809 14.183 3.822 8.677 7.852 4.698A5.9 5.9 0 0 1 12 3c1.556 0 3.048.61 4.148 1.697c4.03 3.979.043 9.485-3.713 12.164"/><path d="m6.5 17l-2 4h15l-2-4M12 11a2 2 0 1 0 0-4a2 2 0 0 0 0 4"/></g>`), g.Group(children),
	)
}

func LocationSelectedSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M6.835 16.33a.75.75 0 0 1 .336 1.005L5.714 20.25h12.573l-1.458-2.915a.75.75 0 1 1 1.342-.67l2 4a.75.75 0 0 1-.671 1.085h-15a.75.75 0 0 1-.67-1.085l2-4a.75.75 0 0 1 1.005-.336M10.75 9a1.25 1.25 0 1 1 2.5 0a1.25 1.25 0 0 1-2.5 0"/><path d="M12 2.25a6.65 6.65 0 0 0-4.675 1.913c-1.12 1.107-1.71 2.35-1.866 3.647c-.154 1.283.123 2.564.642 3.756c1.032 2.368 3.076 4.513 5.028 5.905a1.5 1.5 0 0 0 1.742 0c1.953-1.392 3.996-3.537 5.028-5.905c.52-1.192.796-2.473.642-3.756c-.156-1.296-.745-2.54-1.866-3.647A6.66 6.66 0 0 0 12 2.25m0 4a2.75 2.75 0 1 1 0 5.5a2.75 2.75 0 0 1 0-5.5"/></g>`), g.Group(children),
	)
}

func LocationSlash(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M12.56 20.82a.96.96 0 0 1-1.12 0C6.611 17.378 1.486 10.298 6.667 5.182A7.6 7.6 0 0 1 12 3c2 0 3.919.785 5.333 2.181c5.181 5.116.056 12.196-4.773 15.64"/><path d="M14 10a2 2 0 1 0-2 2m9-9L3 21"/></g>`), g.Group(children),
	)
}

func LocationSlashSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M21.53 2.47a.75.75 0 0 0-1.06 0l-2.396 2.395A8.34 8.34 0 0 0 12 2.25a8.34 8.34 0 0 0-5.86 2.398C4.73 6.038 3.997 7.594 3.803 9.21c-.192 1.602.152 3.21.81 4.718c.42.964.973 1.9 1.613 2.786L2.47 20.47a.75.75 0 1 0 1.06 1.06l3.63-3.629a21.6 21.6 0 0 0 3.845 3.53a1.71 1.71 0 0 0 1.99 0c2.49-1.775 5.086-4.504 6.393-7.503c.657-1.508 1.002-3.116.809-4.719a7.2 7.2 0 0 0-1.179-3.166L21.53 3.53a.75.75 0 0 0 0-1.06m-7.173 6.112l-3.775 3.775a2.75 2.75 0 1 1 3.774-3.774"/>`), g.Group(children),
	)
}

func LocationSnooze(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M12.56 20.82a.96.96 0 0 1-1.12 0C6.611 17.378 1.486 10.298 6.667 5.182A7.6 7.6 0 0 1 12 3c2 0 3.919.785 5.333 2.181c5.181 5.116.056 12.196-4.773 15.64"/><path d="M10.75 8h2.5l-2.5 4h2.5"/></g>`), g.Group(children),
	)
}

func LocationSnoozeSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M6.14 4.648A8.34 8.34 0 0 1 12 2.25c2.196 0 4.304.861 5.86 2.398c1.409 1.39 2.143 2.946 2.337 4.562c.193 1.602-.152 3.21-.81 4.718c-1.306 3-3.902 5.728-6.392 7.503a1.71 1.71 0 0 1-1.99 0c-2.49-1.775-5.086-4.504-6.393-7.503c-.657-1.508-1.001-3.116-.809-4.719c.194-1.615.928-3.17 2.337-4.561m4.61 2.602a.75.75 0 0 0 0 1.5h1.147l-1.783 2.852a.75.75 0 0 0 .636 1.148h2.5a.75.75 0 0 0 0-1.5h-1.147l1.783-2.852a.75.75 0 0 0-.636-1.148z"/>`), g.Group(children),
	)
}

func LocationSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M6.14 4.648A8.34 8.34 0 0 1 12 2.25c2.196 0 4.304.861 5.86 2.398c1.409 1.39 2.143 2.946 2.337 4.562c.193 1.602-.152 3.21-.81 4.718c-1.306 3-3.902 5.728-6.392 7.503a1.71 1.71 0 0 1-1.99 0c-2.49-1.775-5.086-4.504-6.393-7.503c-.657-1.508-1.001-3.116-.809-4.719c.194-1.615.928-3.17 2.337-4.561M9.25 10a2.75 2.75 0 1 1 5.5 0a2.75 2.75 0 0 1-5.5 0"/>`), g.Group(children),
	)
}

func LocationUser(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M12.56 20.82a.96.96 0 0 1-1.12 0C6.611 17.378 1.486 10.298 6.667 5.182A7.6 7.6 0 0 1 12 3c2 0 3.919.785 5.333 2.181c5.181 5.116.056 12.196-4.773 15.64"/><path d="M15 14c0-3.861-6-3.861-6 0"/><path d="M12 11a2 2 0 1 0 0-4a2 2 0 0 0 0 4"/></g>`), g.Group(children),
	)
}

func LocationUserSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M10.75 9a1.25 1.25 0 1 1 2.5 0a1.25 1.25 0 0 1-2.5 0"/><path d="M6.14 4.648A8.34 8.34 0 0 1 12 2.25c2.196 0 4.304.861 5.86 2.398c1.409 1.39 2.143 2.946 2.337 4.562c.193 1.602-.152 3.21-.81 4.718c-1.306 3-3.902 5.728-6.392 7.503a1.71 1.71 0 0 1-1.99 0c-2.49-1.775-5.086-4.504-6.393-7.503c-.657-1.508-1.001-3.116-.809-4.719c.194-1.615.928-3.17 2.337-4.561M12 6.25a2.75 2.75 0 0 0-2.01 4.627a3.5 3.5 0 0 0-.54.382c-.734.629-1.2 1.563-1.2 2.741a.75.75 0 0 0 1.5 0c0-.752.284-1.266.676-1.603c.408-.35.977-.543 1.574-.543s1.166.193 1.574.543c.392.337.676.85.676 1.603a.75.75 0 0 0 1.5 0c0-1.178-.466-2.112-1.2-2.741a3.6 3.6 0 0 0-.54-.382A2.75 2.75 0 0 0 12 6.25"/></g>`), g.Group(children),
	)
}

func LocationX(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M12.56 20.82a.96.96 0 0 1-1.12 0C6.611 17.378 1.486 10.298 6.667 5.182A7.6 7.6 0 0 1 12 3c2 0 3.919.785 5.333 2.181c5.181 5.116.056 12.196-4.773 15.64M10 8l4 4m0-4l-4 4"/>`), g.Group(children),
	)
}

func LocationXSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M6.14 4.648A8.34 8.34 0 0 1 12 2.25c2.196 0 4.304.861 5.86 2.398c1.409 1.39 2.143 2.946 2.337 4.562c.193 1.602-.152 3.21-.81 4.718c-1.306 3-3.902 5.728-6.392 7.503a1.71 1.71 0 0 1-1.99 0c-2.49-1.775-5.086-4.504-6.393-7.503c-.657-1.508-1.001-3.116-.809-4.719c.194-1.615.928-3.17 2.337-4.561m4.39 2.822a.75.75 0 1 0-1.06 1.06L10.94 10l-1.47 1.47a.75.75 0 1 0 1.06 1.06L12 11.06l1.47 1.47a.75.75 0 1 0 1.06-1.06L13.06 10l1.47-1.47a.75.75 0 0 0-1.06-1.06L12 8.94z"/>`), g.Group(children),
	)
}

func Lock(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M8 10V8c0-2.761 1.239-5 4-5s4 2.239 4 5v2M3.5 17.8v-4.6c0-1.12 0-1.68.218-2.107a2 2 0 0 1 .874-.875c.428-.217.988-.217 2.108-.217h10.6c1.12 0 1.68 0 2.108.217a2 2 0 0 1 .874.874c.218.428.218.988.218 2.108v4.6c0 1.12 0 1.68-.218 2.108a2 2 0 0 1-.874.874C18.98 21 18.42 21 17.3 21H6.7c-1.12 0-1.68 0-2.108-.218a2 2 0 0 1-.874-.874C3.5 19.481 3.5 18.921 3.5 17.8"/>`), g.Group(children),
	)
}

func LockCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/><path d="M14.004 10.947V8.925c0-2.641-4.008-2.491-4.008 0v2.021m-.994 0h5.996c.553 0 1.002.453 1.002 1.011v3.032c0 .558-.449 1.011-1.002 1.011H9.002A1.006 1.006 0 0 1 8 14.99v-3.033c0-.558.449-1.01 1.002-1.01"/></g>`), g.Group(children),
	)
}

func LockCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M10.746 8.925v1.271h2.508v-1.27c0-.454-.163-.725-.36-.893c-.216-.182-.53-.29-.88-.283c-.717.014-1.268.451-1.268 1.175M8.75 11.957c0-.15.119-.26.252-.26h5.996c.133 0 .252.11.252.26v3.032c0 .15-.119.261-.252.261H9.002a.257.257 0 0 1-.252-.26z"/><path d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12m12.504-3.075c0-.868-.338-1.568-.891-2.037c-.537-.454-1.224-.65-1.877-.637c-1.287.024-2.74.906-2.74 2.674v1.271h-.244c-.974 0-1.752.795-1.752 1.761v3.032c0 .967.778 1.761 1.752 1.761h5.996c.974 0 1.752-.794 1.752-1.76v-3.033c0-.966-.778-1.76-1.752-1.76h-.244z"/></g>`), g.Group(children),
	)
}

func LockDiamond(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M2.707 10.295a2.41 2.41 0 0 0 0 3.41l7.588 7.588a2.41 2.41 0 0 0 3.41 0l7.588-7.588a2.41 2.41 0 0 0 0-3.41l-7.588-7.588a2.41 2.41 0 0 0-3.41 0z"/><path d="M14.004 10.947V8.925c0-2.641-4.008-2.491-4.008 0v2.021m-.994 0h5.996c.553 0 1.002.453 1.002 1.011v3.032c0 .558-.449 1.011-1.002 1.011H9.002A1.006 1.006 0 0 1 8 14.99v-3.033c0-.558.449-1.01 1.002-1.01"/></g>`), g.Group(children),
	)
}

func LockDiamondSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M10.746 8.925v1.271h2.508v-1.27c0-.454-.163-.725-.36-.893c-.216-.182-.53-.29-.88-.283c-.717.014-1.268.451-1.268 1.175M8.75 11.957c0-.15.119-.26.252-.26h5.996c.133 0 .252.11.252.26v3.032c0 .15-.119.261-.252.261H9.002a.257.257 0 0 1-.252-.26z"/><path d="M10.79 1.49a3.16 3.16 0 0 1 3.445.687l7.588 7.588a3.16 3.16 0 0 1 0 4.47l-7.588 7.588a3.16 3.16 0 0 1-4.47 0l-7.588-7.588a3.16 3.16 0 0 1 0-4.47l7.588-7.589a3.2 3.2 0 0 1 1.025-.685m3.964 7.435c0-.868-.338-1.568-.891-2.037c-.537-.454-1.224-.65-1.877-.637c-1.287.024-2.74.906-2.74 2.674v1.271h-.244c-.974 0-1.752.795-1.752 1.761v3.032c0 .967.778 1.761 1.752 1.761h5.996c.974 0 1.752-.794 1.752-1.76v-3.033c0-.966-.778-1.76-1.752-1.76h-.244z"/></g>`), g.Group(children),
	)
}

func LockHexagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M20.5 15.8V8.2a1.91 1.91 0 0 0-.944-1.645l-6.612-3.8a1.88 1.88 0 0 0-1.888 0l-6.612 3.8A1.9 1.9 0 0 0 3.5 8.2v7.602a1.91 1.91 0 0 0 .944 1.644l6.612 3.8a1.88 1.88 0 0 0 1.888 0l6.612-3.8A1.9 1.9 0 0 0 20.5 15.8"/><path d="M14.004 10.947V8.925c0-2.641-4.008-2.491-4.008 0v2.021m-.994 0h5.996c.553 0 1.002.453 1.002 1.011v3.032c0 .558-.449 1.011-1.002 1.011H9.002A1.006 1.006 0 0 1 8 14.99v-3.033c0-.558.449-1.01 1.002-1.01"/></g>`), g.Group(children),
	)
}

func LockHexagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M10.746 8.925v1.271h2.508v-1.27c0-.454-.163-.725-.36-.893c-.216-.182-.53-.29-.88-.283c-.717.014-1.268.451-1.268 1.175M8.75 11.957c0-.15.119-.26.252-.26h5.996c.133 0 .252.11.252.26v3.032c0 .15-.119.261-.252.261H9.002a.257.257 0 0 1-.252-.26z"/><path d="M10.68 2.105a2.63 2.63 0 0 1 2.64 0l.001.001l6.611 3.8A2.65 2.65 0 0 1 21.25 8.2v7.603a2.66 2.66 0 0 1-1.318 2.291l-.003.002l-6.608 3.799h-.002a2.63 2.63 0 0 1-2.639 0h-.001l-6.608-3.8h-.003A2.64 2.64 0 0 1 2.75 15.8V8.198a2.66 2.66 0 0 1 1.318-2.291l.003-.002zm4.074 6.82c0-.868-.338-1.568-.891-2.037c-.537-.454-1.224-.65-1.877-.637c-1.287.024-2.74.906-2.74 2.674v1.271h-.244c-.974 0-1.752.795-1.752 1.761v3.032c0 .967.778 1.761 1.752 1.761h5.996c.974 0 1.752-.794 1.752-1.76v-3.033c0-.966-.778-1.76-1.752-1.76h-.244z"/></g>`), g.Group(children),
	)
}

func LockKeyhole(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M8 10V8c0-2.761 1.239-5 4-5s4 2.239 4 5v2M3.5 17.8v-4.6c0-1.12 0-1.68.218-2.107a2 2 0 0 1 .874-.875c.428-.217.988-.217 2.108-.217h10.6c1.12 0 1.68 0 2.108.217a2 2 0 0 1 .874.874c.218.428.218.988.218 2.108v4.6c0 1.12 0 1.68-.218 2.108a2 2 0 0 1-.874.874C18.98 21 18.42 21 17.3 21H6.7c-1.12 0-1.68 0-2.108-.218a2 2 0 0 1-.874-.874C3.5 19.481 3.5 18.921 3.5 17.8M16 14v3"/>`), g.Group(children),
	)
}

func LockKeyholeSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M16.75 8v1.25h.58c.535 0 .98 0 1.345.03c.38.031.736.098 1.073.27a2.75 2.75 0 0 1 1.202 1.202c.172.337.24.694.27 1.074c.03.364.03.81.03 1.344v4.66c0 .535 0 .98-.03 1.345c-.03.38-.098.737-.27 1.074a2.75 2.75 0 0 1-1.201 1.202c-.338.172-.694.239-1.074.27c-.365.03-.81.03-1.344.03H6.67c-.535 0-.98 0-1.345-.03c-.38-.031-.736-.098-1.073-.27a2.75 2.75 0 0 1-1.202-1.202c-.172-.337-.24-.694-.27-1.074c-.03-.364-.03-.81-.03-1.344V13.17c0-.534 0-.98.03-1.344c.03-.38.098-.737.27-1.074A2.75 2.75 0 0 1 4.252 9.55c.337-.172.693-.239 1.073-.27c.365-.03.81-.03 1.345-.03h.58V8c0-1.478.33-2.901 1.107-3.975c.8-1.107 2.03-1.775 3.643-1.775s2.842.668 3.643 1.775C16.42 5.099 16.75 6.522 16.75 8m-8 0v1.25h6.5V8c0-1.283-.29-2.36-.822-3.096c-.51-.703-1.28-1.154-2.428-1.154s-1.919.45-2.428 1.154C9.04 5.64 8.75 6.717 8.75 8m8 6a.75.75 0 1 0-1.5 0v3a.75.75 0 0 0 1.5 0z"/>`), g.Group(children),
	)
}

func LockOctagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M7.805 3.469C8.16 3.115 8.451 3 8.937 3h6.126c.486 0 .778.115 1.132.469l4.336 4.336c.354.354.469.646.469 1.132v6.126c0 .5-.125.788-.469 1.132l-4.336 4.336c-.354.354-.646.469-1.132.469H8.937c-.5 0-.788-.125-1.132-.469L3.47 16.195c-.355-.355-.47-.646-.47-1.132V8.937c0-.5.125-.788.469-1.132z"/><path d="M14.004 10.947V8.925c0-2.641-4.008-2.491-4.008 0v2.021m-.994 0h5.996c.553 0 1.002.453 1.002 1.011v3.032c0 .558-.449 1.011-1.002 1.011H9.002A1.006 1.006 0 0 1 8 14.99v-3.033c0-.558.449-1.01 1.002-1.01"/></g>`), g.Group(children),
	)
}

func LockOctagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M10.746 8.925v1.271h2.508v-1.27c0-.454-.163-.725-.36-.893c-.216-.182-.53-.29-.88-.283c-.717.014-1.268.451-1.268 1.175M8.75 11.957c0-.15.119-.26.252-.26h5.996c.133 0 .252.11.252.26v3.032c0 .15-.119.261-.252.261H9.002a.257.257 0 0 1-.252-.26z"/><path d="M8.037 2.408a2.3 2.3 0 0 1 .9-.158h6.126c.302 0 .602.036.9.158s.54.31.762.53l4.337 4.337c.22.221.408.463.53.762c.123.298.158.598.158.9v6.126c0 .313-.039.616-.163.914a2.3 2.3 0 0 1-.525.748l-4.337 4.337a2.3 2.3 0 0 1-.762.53a2.3 2.3 0 0 1-.9.158H8.937c-.313 0-.616-.039-.914-.163a2.3 2.3 0 0 1-.748-.525l-4.337-4.337a2.3 2.3 0 0 1-.53-.762a2.3 2.3 0 0 1-.158-.9V8.937c0-.313.039-.616.163-.914a2.3 2.3 0 0 1 .525-.748l4.337-4.337c.221-.22.463-.408.762-.53m6.717 6.517c0-.868-.338-1.568-.891-2.037c-.537-.454-1.224-.65-1.877-.637c-1.287.024-2.74.906-2.74 2.674v1.271h-.244c-.974 0-1.752.795-1.752 1.761v3.032c0 .967.778 1.761 1.752 1.761h5.996c.974 0 1.752-.794 1.752-1.76v-3.033c0-.966-.778-1.76-1.752-1.76h-.244z"/></g>`), g.Group(children),
	)
}

func LockOpen(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M8 10V8c0-2.761 1.239-5 4-5c2.094 0 3.313 1.288 3.78 3.114M3.5 17.8v-4.6c0-1.12 0-1.68.218-2.107a2 2 0 0 1 .874-.875c.428-.217.988-.217 2.108-.217h10.6c1.12 0 1.68 0 2.108.217a2 2 0 0 1 .874.874c.218.428.218.988.218 2.108v4.6c0 1.12 0 1.68-.218 2.108a2 2 0 0 1-.874.874C18.98 21 18.42 21 17.3 21H6.7c-1.12 0-1.68 0-2.108-.218a2 2 0 0 1-.874-.874C3.5 19.481 3.5 18.921 3.5 17.8"/>`), g.Group(children),
	)
}

func LockOpenKeyhole(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M8 10V8c0-2.761 1.239-5 4-5c2.094 0 3.313 1.288 3.78 3.114M3.5 17.8v-4.6c0-1.12 0-1.68.218-2.107a2 2 0 0 1 .874-.875c.428-.217.988-.217 2.108-.217h10.6c1.12 0 1.68 0 2.108.217a2 2 0 0 1 .874.874c.218.428.218.988.218 2.108v4.6c0 1.12 0 1.68-.218 2.108a2 2 0 0 1-.874.874C18.98 21 18.42 21 17.3 21H6.7c-1.12 0-1.68 0-2.108-.218a2 2 0 0 1-.874-.874C3.5 19.481 3.5 18.921 3.5 17.8M16 14v3"/>`), g.Group(children),
	)
}

func LockOpenKeyholeSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.572 4.904C9.04 5.64 8.75 6.717 8.75 8v1.25h8.58c.535 0 .98 0 1.345.03c.38.031.736.098 1.073.27a2.75 2.75 0 0 1 1.202 1.202c.172.337.24.694.27 1.074c.03.364.03.81.03 1.344v4.66c0 .535 0 .98-.03 1.345c-.03.38-.098.737-.27 1.074a2.75 2.75 0 0 1-1.201 1.202c-.338.172-.694.239-1.074.27c-.365.03-.81.03-1.344.03H6.67c-.535 0-.98 0-1.345-.03c-.38-.031-.736-.098-1.073-.27a2.75 2.75 0 0 1-1.202-1.202c-.172-.337-.24-.694-.27-1.074c-.03-.364-.03-.81-.03-1.344V13.17c0-.534 0-.98.03-1.344c.03-.38.098-.737.27-1.074A2.75 2.75 0 0 1 4.252 9.55c.337-.172.693-.239 1.073-.27c.365-.03.81-.03 1.345-.03h.58V8c0-1.478.33-2.901 1.107-3.975c.8-1.107 2.03-1.775 3.643-1.775c1.212 0 2.221.377 2.996 1.06c.765.673 1.25 1.599 1.51 2.619a.75.75 0 1 1-1.453.371c-.207-.807-.564-1.438-1.049-1.865c-.474-.418-1.121-.685-2.004-.685c-1.148 0-1.919.45-2.428 1.154m7.178 9.097a.75.75 0 1 0-1.5 0v3a.75.75 0 0 0 1.5 0z"/>`), g.Group(children),
	)
}

func LockOpenPassword(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M8 10V8c0-2.761 1.239-5 4-5c2.094 0 3.313 1.288 3.78 3.114M3.5 17.8v-4.6c0-1.12 0-1.68.218-2.107a2 2 0 0 1 .874-.875c.428-.217.988-.217 2.108-.217h10.6c1.12 0 1.68 0 2.108.217a2 2 0 0 1 .874.874c.218.428.218.988.218 2.108v4.6c0 1.12 0 1.68-.218 2.108a2 2 0 0 1-.874.874C18.98 21 18.42 21 17.3 21H6.7c-1.12 0-1.68 0-2.108-.218a2 2 0 0 1-.874-.874C3.5 19.481 3.5 18.921 3.5 17.8m8.5-2.05v-.5m4 .5v-.5m-8 .5v-.5"/>`), g.Group(children),
	)
}

func LockOpenPasswordSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.572 4.904C9.04 5.64 8.75 6.717 8.75 8v1.25h8.58c.535 0 .98 0 1.345.03c.38.031.736.098 1.073.27a2.75 2.75 0 0 1 1.202 1.202c.172.337.24.694.27 1.074c.03.364.03.81.03 1.344v4.66c0 .535 0 .98-.03 1.345c-.03.38-.098.737-.27 1.074a2.75 2.75 0 0 1-1.201 1.202c-.338.172-.694.239-1.074.27c-.365.03-.81.03-1.344.03H6.67c-.535 0-.98 0-1.345-.03c-.38-.031-.736-.098-1.073-.27a2.75 2.75 0 0 1-1.202-1.202c-.172-.337-.24-.694-.27-1.074c-.03-.364-.03-.81-.03-1.344V13.17c0-.534 0-.98.03-1.344c.03-.38.098-.737.27-1.074A2.75 2.75 0 0 1 4.252 9.55c.337-.172.693-.239 1.073-.27c.365-.03.81-.03 1.345-.03h.58V8c0-1.478.33-2.901 1.107-3.975c.8-1.107 2.03-1.775 3.643-1.775c1.212 0 2.221.377 2.996 1.06c.765.673 1.25 1.599 1.51 2.619a.75.75 0 1 1-1.453.371c-.207-.807-.564-1.438-1.049-1.865c-.474-.418-1.121-.685-2.004-.685c-1.148 0-1.919.45-2.428 1.154M12.75 15.25a.75.75 0 0 0-1.5 0v.5a.75.75 0 0 0 1.5 0zM16 14.5a.75.75 0 0 0-.75.75v.5a.75.75 0 0 0 1.5 0v-.5a.75.75 0 0 0-.75-.75m-7.25.75a.75.75 0 0 0-1.5 0v.5a.75.75 0 0 0 1.5 0z"/>`), g.Group(children),
	)
}

func LockOpenSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.75 8c0-1.283.29-2.36.822-3.096c.51-.703 1.28-1.154 2.428-1.154c.883 0 1.53.267 2.004.685c.485.427.843 1.058 1.049 1.865a.75.75 0 1 0 1.453-.371c-.26-1.02-.745-1.946-1.51-2.62C14.22 2.627 13.212 2.25 12 2.25c-1.613 0-2.842.668-3.643 1.775C7.58 5.099 7.25 6.522 7.25 8v1.25h-.58c-.535 0-.98 0-1.345.03c-.38.031-.736.098-1.073.27a2.75 2.75 0 0 0-1.202 1.202c-.172.337-.24.694-.27 1.074c-.03.364-.03.81-.03 1.344v4.66c0 .535 0 .98.03 1.345c.03.38.098.737.27 1.074a2.75 2.75 0 0 0 1.202 1.202c.337.172.693.239 1.073.27c.365.03.81.03 1.345.03h10.66c.535 0 .98 0 1.345-.03c.38-.031.736-.098 1.073-.27a2.75 2.75 0 0 0 1.202-1.202c.172-.337.24-.694.27-1.074c.03-.364.03-.81.03-1.344V13.17c0-.534 0-.98-.03-1.344c-.03-.38-.098-.737-.27-1.074a2.75 2.75 0 0 0-1.2-1.202c-.338-.172-.694-.239-1.074-.27c-.365-.03-.81-.03-1.345-.03H8.75z"/>`), g.Group(children),
	)
}

func LockPassword(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M8 10V8c0-2.761 1.239-5 4-5s4 2.239 4 5v2M3.5 17.8v-4.6c0-1.12 0-1.68.218-2.107a2 2 0 0 1 .874-.875c.428-.217.988-.217 2.108-.217h10.6c1.12 0 1.68 0 2.108.217a2 2 0 0 1 .874.874c.218.428.218.988.218 2.108v4.6c0 1.12 0 1.68-.218 2.108a2 2 0 0 1-.874.874C18.98 21 18.42 21 17.3 21H6.7c-1.12 0-1.68 0-2.108-.218a2 2 0 0 1-.874-.874C3.5 19.481 3.5 18.921 3.5 17.8m8.5-2.05v-.5m4 .5v-.5m-8 .5v-.5"/>`), g.Group(children),
	)
}

func LockPasswordSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M16.75 8c0-1.478-.33-2.901-1.107-3.975c-.8-1.107-2.03-1.775-3.643-1.775s-2.842.668-3.643 1.775C7.58 5.099 7.25 6.522 7.25 8v1.25h-.58c-.535 0-.98 0-1.345.03c-.38.031-.736.098-1.073.27a2.75 2.75 0 0 0-1.202 1.202c-.172.337-.24.694-.27 1.074c-.03.364-.03.81-.03 1.344v4.66c0 .535 0 .98.03 1.345c.03.38.098.737.27 1.074a2.75 2.75 0 0 0 1.202 1.202c.337.172.693.239 1.073.27c.365.03.81.03 1.345.03h10.66c.535 0 .98 0 1.345-.03c.38-.031.736-.098 1.073-.27a2.75 2.75 0 0 0 1.202-1.202c.172-.337.24-.694.27-1.074c.03-.364.03-.81.03-1.344V13.17c0-.534 0-.98-.03-1.344c-.03-.38-.098-.737-.27-1.074a2.75 2.75 0 0 0-1.2-1.202c-.338-.172-.694-.239-1.074-.27c-.365-.03-.81-.03-1.345-.03h-.58zm-8 0c0-1.283.29-2.36.822-3.096c.51-.703 1.28-1.154 2.428-1.154s1.919.45 2.428 1.154c.532.736.822 1.813.822 3.096v1.25h-6.5zm4 7.25v.5a.75.75 0 0 1-1.5 0v-.5a.75.75 0 0 1 1.5 0M16 14.5a.75.75 0 0 1 .75.75v.5a.75.75 0 0 1-1.5 0v-.5a.75.75 0 0 1 .75-.75m-7.25.75v.5a.75.75 0 0 1-1.5 0v-.5a.75.75 0 0 1 1.5 0"/>`), g.Group(children),
	)
}

func LockSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.572 4.904c.51-.703 1.28-1.154 2.428-1.154s1.919.45 2.428 1.154c.532.736.822 1.813.822 3.096v1.25h-6.5V8c0-1.283.29-2.36.822-3.096M16.75 9.25V8c0-1.478-.33-2.901-1.107-3.975c-.8-1.107-2.03-1.775-3.643-1.775s-2.842.668-3.643 1.775C7.58 5.099 7.25 6.522 7.25 8v1.25h-.58c-.535 0-.98 0-1.345.03c-.38.031-.736.098-1.073.27a2.75 2.75 0 0 0-1.202 1.202c-.172.337-.24.694-.27 1.074c-.03.364-.03.81-.03 1.344v4.66c0 .535 0 .98.03 1.345c.03.38.098.737.27 1.074a2.75 2.75 0 0 0 1.202 1.202c.337.172.693.239 1.073.27c.365.03.81.03 1.345.03h10.66c.535 0 .98 0 1.345-.03c.38-.031.736-.098 1.073-.27a2.75 2.75 0 0 0 1.202-1.202c.172-.337.24-.694.27-1.074c.03-.364.03-.81.03-1.344V13.17c0-.534 0-.98-.03-1.344c-.03-.38-.098-.737-.27-1.074a2.75 2.75 0 0 0-1.2-1.202c-.338-.172-.694-.239-1.074-.27c-.365-.03-.81-.03-1.345-.03z"/>`), g.Group(children),
	)
}

func LockSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/><path d="M14.004 10.947V8.925c0-2.641-4.008-2.491-4.008 0v2.021m-.994 0h5.996c.553 0 1.002.453 1.002 1.011v3.032c0 .558-.449 1.011-1.002 1.011H9.002A1.006 1.006 0 0 1 8 14.99v-3.033c0-.558.449-1.01 1.002-1.01"/></g>`), g.Group(children),
	)
}

func LockSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M10.746 8.925v1.271h2.508v-1.27c0-.454-.163-.725-.36-.893c-.216-.182-.53-.29-.88-.283c-.717.014-1.268.451-1.268 1.175M8.75 11.957c0-.15.119-.26.252-.26h5.996c.133 0 .252.11.252.26v3.032c0 .15-.119.261-.252.261H9.002a.257.257 0 0 1-.252-.26z"/><path d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057m5.387 6.675c0-.868-.338-1.568-.891-2.037c-.537-.454-1.224-.65-1.877-.637c-1.287.024-2.74.906-2.74 2.674v1.271h-.244c-.974 0-1.752.795-1.752 1.761v3.032c0 .967.778 1.761 1.752 1.761h5.996c.974 0 1.752-.794 1.752-1.76v-3.033c0-.966-.778-1.76-1.752-1.76h-.244z"/></g>`), g.Group(children),
	)
}

func LockWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83"/><path d="M14.004 10.947V8.925c0-2.641-4.008-2.491-4.008 0v2.021m-.994 0h5.996c.553 0 1.002.453 1.002 1.011v3.032c0 .558-.449 1.011-1.002 1.011H9.002A1.006 1.006 0 0 1 8 14.99v-3.033c0-.558.449-1.01 1.002-1.01"/></g>`), g.Group(children),
	)
}

func LockWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M10.746 8.925v1.271h2.508v-1.27c0-.454-.163-.725-.36-.893c-.216-.182-.53-.29-.88-.283c-.717.014-1.268.451-1.268 1.175M8.75 11.957c0-.15.119-.26.252-.26h5.996c.133 0 .252.11.252.26v3.032c0 .15-.119.261-.252.261H9.002a.257.257 0 0 1-.252-.26z"/><path d="M10.565 2.075a3.33 3.33 0 0 1 2.87 0c.394.189.755.497 1.26.928l.079.066c.48.41.939.604 1.58.655l.102.008c.662.053 1.135.09 1.547.236a3.33 3.33 0 0 1 2.03 2.029c.145.412.182.885.235 1.547l.008.102c.051.641.246 1.1.655 1.58l.066.078c.431.506.74.867.928 1.261a3.33 3.33 0 0 1 0 2.87c-.189.394-.497.755-.928 1.26l-.066.079c-.418.49-.605.951-.655 1.58l-.008.102c-.053.662-.09 1.135-.236 1.547a3.33 3.33 0 0 1-2.029 2.03c-.412.145-.885.182-1.547.235l-.102.008c-.641.051-1.1.246-1.58.655l-.079.066c-.505.431-.866.74-1.26.928a3.33 3.33 0 0 1-2.87 0c-.394-.189-.755-.497-1.26-.928l-.079-.066a2.56 2.56 0 0 0-1.58-.655l-.102-.008c-.662-.053-1.135-.09-1.547-.236a3.33 3.33 0 0 1-2.03-2.029c-.145-.412-.182-.885-.235-1.547l-.008-.102a2.56 2.56 0 0 0-.655-1.58l-.066-.079c-.431-.505-.74-.866-.928-1.26a3.33 3.33 0 0 1 0-2.87c.189-.394.497-.755.928-1.26l.066-.079a2.56 2.56 0 0 0 .655-1.58l.008-.102c.053-.662.09-1.135.236-1.547a3.33 3.33 0 0 1 2.029-2.03c.412-.145.885-.182 1.547-.235l.102-.008a2.56 2.56 0 0 0 1.58-.655l.078-.066c.506-.431.867-.74 1.261-.928m4.19 6.85c0-.868-.339-1.568-.892-2.037c-.537-.454-1.224-.65-1.877-.637c-1.287.024-2.74.906-2.74 2.674v1.271h-.244c-.974 0-1.752.795-1.752 1.761v3.032c0 .967.778 1.761 1.752 1.761h5.996c.974 0 1.752-.794 1.752-1.76v-3.033c0-.966-.778-1.76-1.752-1.76h-.244z"/></g>`), g.Group(children),
	)
}

func Login(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M13.496 21H6.5c-1.105 0-2-1.151-2-2.571V5.57c0-1.419.895-2.57 2-2.57h7"/><path d="M13 15.5L9.5 12L13 8.5m6.5 3.496h-10"/></g>`), g.Group(children),
	)
}

func LoginSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M6.5 3.75c-.526 0-1.25.63-1.25 1.821V18.43c0 1.192.724 1.821 1.25 1.821h6.996a.75.75 0 1 1 0 1.5H6.5c-1.683 0-2.75-1.673-2.75-3.321V5.57c0-1.648 1.067-3.321 2.75-3.321h7a.75.75 0 0 1 0 1.5z"/><path d="M20.25 11.996a.75.75 0 0 0-.75-.75h-5.97V7.97a.75.75 0 0 0-1.06 0l-3.451 3.45a.75.75 0 0 0-.269.576v.002c0 .193.073.385.22.532l3.5 3.5a.75.75 0 0 0 1.06 0v-3.284h5.97a.75.75 0 0 0 .75-.75"/></g>`), g.Group(children),
	)
}

func Logout(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M13.496 21H6.5c-1.105 0-2-1.151-2-2.571V5.57c0-1.419.895-2.57 2-2.57h7M16 15.5l3.5-3.5L16 8.5m-6.5 3.496h10"/>`), g.Group(children),
	)
}

func LogoutSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M6.5 3.75c-.526 0-1.25.63-1.25 1.821V18.43c0 1.192.724 1.821 1.25 1.821h6.996a.75.75 0 1 1 0 1.5H6.5c-1.683 0-2.75-1.673-2.75-3.321V5.57c0-1.648 1.067-3.321 2.75-3.321h7a.75.75 0 0 1 0 1.5z"/><path d="M16.53 7.97a.75.75 0 0 0-1.06 0v3.276H9.5a.75.75 0 0 0 0 1.5h5.97v3.284a.75.75 0 0 0 1.06 0l3.5-3.5a.75.75 0 0 0 .22-.532v-.002a.75.75 0 0 0-.269-.575z"/></g>`), g.Group(children),
	)
}

func Magnet(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3 7.5V12a9 9 0 1 0 18 0V7.5m-18 0V5a2 2 0 0 1 2-2h1.625a2 2 0 0 1 2 2v2.5M3 7.5h5.625m0 0V12a3.375 3.375 0 1 0 6.75 0V7.5m0 0V5a2 2 0 0 1 2-2H19a2 2 0 0 1 2 2v2.5m-5.625 0H21"/>`), g.Group(children),
	)
}

func MagnetSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 5A2.75 2.75 0 0 1 5 2.25h1.625A2.75 2.75 0 0 1 9.375 5v7a2.625 2.625 0 0 0 5.25 0V5a2.75 2.75 0 0 1 2.75-2.75H19A2.75 2.75 0 0 1 21.75 5v7c0 5.385-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12zM5 3.75c-.69 0-1.25.56-1.25 1.25v1.75h4.125V5c0-.69-.56-1.25-1.25-1.25zm11.125 3h4.125V5c0-.69-.56-1.25-1.25-1.25h-1.625c-.69 0-1.25.56-1.25 1.25z"/>`), g.Group(children),
	)
}

func Male(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M14.232 9.747a6 6 0 1 0-8.465 8.506a6 6 0 0 0 8.465-8.506m0 0L20 4m0 0h-4m4 0v4"/>`), g.Group(children),
	)
}

func MaleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M16 3.25a.75.75 0 0 0 0 1.5h2.185l-3.982 3.968a6.75 6.75 0 1 0 1.063 1.059l3.984-3.97V8a.75.75 0 0 0 1.5 0V4a.75.75 0 0 0-.75-.75z"/>`), g.Group(children),
	)
}

func Map(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3 8.593c0-1.527 0-2.29.393-2.735c.139-.159.308-.285.497-.372c1.416-.653 3.272 1.066 4.77 1.013q.296-.011.587-.082c2.184-.535 3.552-3.08 5.798-3.39c1.287-.18 2.7.598 3.904 1.014c.99.342 1.485.513 1.768.92S21 5.91 21 6.99v8.422c0 1.526 0 2.29-.393 2.735a1.5 1.5 0 0 1-.497.371c-1.416.653-3.272-1.065-4.77-1.012a3 3 0 0 0-.587.081c-2.184.535-3.552 3.08-5.798 3.391c-1.281.178-4.847-.75-5.672-1.935C3 18.636 3 18.096 3 17.014zm6-2.052v14.255m6-17.615v14.255"/>`), g.Group(children),
	)
}

func MapSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M14.25 16.952V4.054c-.533.26-1.056.67-1.65 1.162l-.161.134c-.746.62-1.624 1.352-2.689 1.702v12.899c.534-.261 1.056-.671 1.65-1.162l.161-.135c.746-.62 1.624-1.351 2.689-1.702m4.092-13.946c.307.123.586.235.852.326l.037.013c.463.16.87.3 1.192.456c.351.169.668.385.91.732c.24.344.334.718.377 1.107c.04.363.04.804.04 1.311v8.504c0 .726 0 1.334-.054 1.813c-.055.495-.179.981-.526 1.375a2.3 2.3 0 0 1-.746.556c-.535.247-1.081.253-1.574.168c-.483-.083-.96-.263-1.38-.437q-.21-.087-.402-.169c-.28-.119-.536-.228-.799-.32c-.374-.133-.667-.194-.902-.186a2 2 0 0 0-.435.06c-.867.213-1.599.819-2.504 1.57l-.072.059c-.874.724-1.933 1.588-3.298 1.777c-.428.06-.975.022-1.527-.062a13 13 0 0 1-1.805-.42a10 10 0 0 1-1.742-.707c-.505-.269-1.008-.617-1.317-1.06c-.24-.345-.334-.719-.377-1.108c-.04-.363-.04-.803-.04-1.311V8.549c0-.726 0-1.334.054-1.813c.055-.495.179-.981.526-1.375c.208-.235.461-.425.746-.556c.535-.247 1.081-.253 1.574-.168c.483.084.96.263 1.38.437l.402.169c.28.12.536.228.799.32c.375.133.667.195.902.186q.22-.008.435-.06c.867-.213 1.599-.819 2.504-1.57l.072-.059c.874-.723 1.933-1.587 3.298-1.777c.818-.113 1.627.082 2.326.317c.354.12.702.258 1.022.386z"/>`), g.Group(children),
	)
}

func Mask(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m5.7 8.77l5.175-1.517a4 4 0 0 1 2.25 0L18.3 8.769m-12.6 0V7.35a1.35 1.35 0 0 0-2.7 0v2.188a2 2 0 0 0 2 2h.7m0-2.769v2.77m12.6-2.77v2.77m0-2.77V7.35a1.35 1.35 0 1 1 2.7 0v2.188a2 2 0 0 1-2 2h-.7m0 0v.162a6.3 6.3 0 1 1-12.6 0v-.161"/>`), g.Group(children),
	)
}

func MaskSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M4.35 6.75a.6.6 0 0 0-.6.6v2.188a1.25 1.25 0 0 0 1.2 1.25V7.35a.6.6 0 0 0-.6-.6m.624 5.538a2.75 2.75 0 0 1-2.724-2.75V7.35a2.1 2.1 0 1 1 4.2 0v.418l4.214-1.235a4.75 4.75 0 0 1 2.672 0l4.214 1.235V7.35a2.1 2.1 0 1 1 4.2 0v2.188a2.75 2.75 0 0 1-2.724 2.75a7.05 7.05 0 0 1-14.052 0m14.076-1.5a1.25 1.25 0 0 0 1.2-1.25V7.35a.6.6 0 1 0-1.2 0z"/>`), g.Group(children),
	)
}

func Math(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3.429 18.366h6M15 8.707h6m-6-4.39h6M3 6.512h3.429m0 0h3.428m-3.428 0V3m0 3.512v3.512M15.6 21l2.425-2.484m0 0l2.424-2.483m-2.424 2.483L15.6 16.033m2.425 2.483L20.449 21"/>`), g.Group(children),
	)
}

func MathSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M6.429 2.25a.75.75 0 0 1 .75.75v2.762h2.678a.75.75 0 1 1 0 1.5H7.18v2.762a.75.75 0 0 1-1.5 0V7.262H3a.75.75 0 0 1 0-1.5h2.679V3a.75.75 0 0 1 .75-.75m7.821 2.067a.75.75 0 0 1 .75-.75h6a.75.75 0 0 1 0 1.5h-6a.75.75 0 0 1-.75-.75m0 4.39a.75.75 0 0 1 .75-.75h6a.75.75 0 0 1 0 1.5h-6a.75.75 0 0 1-.75-.75m.826 6.789a.75.75 0 0 1 1.06.013l1.889 1.934l1.887-1.934a.75.75 0 0 1 1.074 1.048l-1.913 1.96l1.913 1.959a.75.75 0 0 1-1.074 1.048l-1.887-1.934l-1.888 1.934a.75.75 0 1 1-1.074-1.048l1.914-1.96l-1.914-1.96a.75.75 0 0 1 .013-1.06M2.68 18.366a.75.75 0 0 1 .75-.75h6a.75.75 0 1 1 0 1.5h-6a.75.75 0 0 1-.75-.75"/>`), g.Group(children),
	)
}

func MathSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M7 15.625h3.5m3.25-5.5h3.5m-3.5-2.5h3.5m-10.5 1.25h2m0 0h2m-2 0v-2m0 2v2m5.35 6.25l1.414-1.414m0 0l1.415-1.414m-1.415 1.414L14.1 14.296m1.414 1.415l1.415 1.414M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/>`), g.Group(children),
	)
}

func MathSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057M9.5 6.875a.75.75 0 0 0-1.5 0v1.25H6.75a.75.75 0 0 0 0 1.5H8v1.25a.75.75 0 0 0 1.5 0v-1.25h1.25a.75.75 0 0 0 0-1.5H9.5zm4.25 0a.75.75 0 0 0 0 1.5h3.5a.75.75 0 0 0 0-1.5zm-.75 3.25c0 .414.336.75.75.75h3.5a.75.75 0 0 0 0-1.5h-3.5a.75.75 0 0 0-.75.75m1.63 3.641a.75.75 0 1 0-1.06 1.06l.884.885l-.884.884a.75.75 0 1 0 1.06 1.06l.884-.884l.884.884a.75.75 0 0 0 1.06-1.06l-.883-.884l.884-.884a.75.75 0 0 0-1.06-1.06l-.885.883zm-8.38 1.859c0 .414.336.75.75.75h3.5a.75.75 0 0 0 0-1.5H7a.75.75 0 0 0-.75.75"/>`), g.Group(children),
	)
}

func Maximize(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9.4 21c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6m18 0c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21m0-18c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4M9.4 3c-2.24 0-3.36 0-4.216.436a4 4 0 0 0-1.748 1.748C3 6.04 3 7.16 3 9.4"/>`), g.Group(children),
	)
}

func MaximizeOne(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M14 4h6v6M10 20H4v-6M20 4l-6 6M4 20l6-6"/>`), g.Group(children),
	)
}

func MaximizeOneSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M14 3.25a.75.75 0 0 0-.75.75l2.845 2.845L13.47 9.47a.75.75 0 1 0 1.06 1.06l2.625-2.625L20 10.75a.75.75 0 0 0 .75-.75V4a.75.75 0 0 0-.75-.75zm-10 10a.75.75 0 0 0-.75.75v6c0 .414.336.75.75.75h6a.75.75 0 0 0 .75-.75l-2.845-2.845l2.625-2.625a.75.75 0 1 0-1.06-1.06l-2.625 2.625z"/>`), g.Group(children),
	)
}

func MaximizeSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25H9.4a.75.75 0 0 1 0 1.5c-1.132 0-1.937 0-2.566.052c-.62.05-1.005.147-1.31.302a3.25 3.25 0 0 0-1.42 1.42c-.155.305-.251.69-.302 1.31c-.051.63-.052 1.434-.052 2.566a.75.75 0 0 1-1.5 0v-.033c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057m7.8 1.552c-.63-.051-1.435-.052-2.567-.052a.75.75 0 0 1 0-1.5h.033c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655V9.4a.75.75 0 0 1-1.5 0c0-1.132 0-1.937-.052-2.566c-.05-.62-.147-1.005-.302-1.31a3.25 3.25 0 0 0-1.42-1.42c-.305-.155-.69-.251-1.31-.302M3 13.85a.75.75 0 0 1 .75.75c0 1.133 0 1.937.052 2.566c.05.62.147 1.005.302 1.31a3.25 3.25 0 0 0 1.42 1.42c.305.155.69.251 1.31.302c.63.051 1.434.052 2.566.052a.75.75 0 0 1 0 1.5h-.033c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V14.6a.75.75 0 0 1 .75-.75m18 0a.75.75 0 0 1 .75.75v.033c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H14.6a.75.75 0 0 1 0-1.5c1.133 0 1.937 0 2.566-.052c.62-.05 1.005-.147 1.31-.302a3.25 3.25 0 0 0 1.42-1.42c.155-.305.251-.69.302-1.31c.051-.63.052-1.434.052-2.566a.75.75 0 0 1 .75-.75"/>`), g.Group(children),
	)
}

func Menu(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M4.5 6.5h15M4.5 12h15m-15 5.5h15"/>`), g.Group(children),
	)
}

func MenuSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M3.75 6.5a.75.75 0 0 1 .75-.75h15a.75.75 0 0 1 0 1.5h-15a.75.75 0 0 1-.75-.75m0 5.5a.75.75 0 0 1 .75-.75h15a.75.75 0 0 1 0 1.5h-15a.75.75 0 0 1-.75-.75m0 5.5a.75.75 0 0 1 .75-.75h15a.75.75 0 0 1 0 1.5h-15a.75.75 0 0 1-.75-.75"/>`), g.Group(children),
	)
}

func Message(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3.464 16.828C2 15.657 2 14.771 2 11s0-5.657 1.464-6.828C4.93 3 7.286 3 12 3s7.071 0 8.535 1.172S22 7.229 22 11s0 4.657-1.465 5.828C19.072 18 16.714 18 12 18c-2.51 0-3.8 1.738-6 3v-3.212c-1.094-.163-1.899-.45-2.536-.96"/>`), g.Group(children),
	)
}

func MessageCheck(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="m9.7 10.823l1.379 1.575a.3.3 0 0 0 .466-.022l2.8-3.876"/><path d="M3.464 16.828C2 15.657 2 14.771 2 11s0-5.657 1.464-6.828C4.93 3 7.286 3 12 3s7.071 0 8.535 1.172S22 7.229 22 11s0 4.657-1.465 5.828C19.072 18 16.714 18 12 18c-2.51 0-3.8 1.738-6 3v-3.212c-1.094-.163-1.899-.45-2.536-.96"/></g>`), g.Group(children),
	)
}

func MessageCheckSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M11.953 2.25c-2.317 0-4.118 0-5.52.15c-1.418.153-2.541.47-3.437 1.186c-.92.736-1.35 1.693-1.553 2.9c-.193 1.152-.193 2.618-.193 4.446v.183c0 1.782 0 3.015.2 3.934c.108.495.278.925.545 1.323c.264.392.6.722 1.001 1.042c.631.505 1.375.81 2.254 1V21a.75.75 0 0 0 1.123.65c.586-.335 1.105-.7 1.58-1.044l.304-.221a22 22 0 0 1 1.036-.73c.844-.548 1.65-.905 2.707-.905h.047c2.317 0 4.118 0 5.52-.15c1.418-.153 2.541-.47 3.437-1.186c.4-.32.737-.65 1-1.042c.268-.398.438-.828.546-1.323c.2-.919.2-2.152.2-3.934v-.183c0-1.828 0-3.294-.193-4.445c-.203-1.208-.633-2.165-1.553-2.901c-.896-.717-2.019-1.033-3.437-1.185c-1.402-.151-3.203-.151-5.52-.151zm2.831 5.642a.75.75 0 0 1 .169 1.047l-2.8 3.876a1.05 1.05 0 0 1-1.639.077l-1.378-1.576a.75.75 0 1 1 1.128-.987l1.006 1.148l2.467-3.416a.75.75 0 0 1 1.047-.169"/>`), g.Group(children),
	)
}

func MessageDots(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M12 11v-.5m4 .5v-.5M8 11v-.5m-4.536 6.328C2 15.657 2 14.771 2 11s0-5.657 1.464-6.828C4.93 3 7.286 3 12 3s7.071 0 8.535 1.172S22 7.229 22 11s0 4.657-1.465 5.828C19.072 18 16.714 18 12 18c-2.51 0-3.8 1.738-6 3v-3.212c-1.094-.163-1.899-.45-2.536-.96"/>`), g.Group(children),
	)
}

func MessageDotsSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M6.433 2.4c1.402-.15 3.203-.15 5.52-.15h.094c2.317 0 4.118 0 5.52.15c1.418.153 2.541.47 3.437 1.186c.92.736 1.35 1.693 1.553 2.9c.193 1.152.193 2.618.193 4.446v.183c0 1.782 0 3.015-.2 3.934a3.7 3.7 0 0 1-.545 1.323c-.264.392-.6.722-1 1.042c-.897.717-2.02 1.033-3.438 1.185c-1.402.151-3.203.151-5.52.151H12c-1.056 0-1.863.357-2.707.906c-.342.221-.675.464-1.036.729l-.304.22c-.475.345-.994.71-1.58 1.046A.75.75 0 0 1 5.25 21v-2.585c-.879-.19-1.623-.496-2.254-1c-.4-.321-.737-.65-1-1.043a3.7 3.7 0 0 1-.546-1.323c-.2-.919-.2-2.152-.2-3.934v-.183c0-1.828 0-3.294.193-4.445c.203-1.208.633-2.165 1.553-2.901c.896-.717 2.019-1.033 3.437-1.185m2.317 8.1a.75.75 0 0 0-1.5 0v.5a.75.75 0 0 0 1.5 0zm4 0a.75.75 0 0 0-1.5 0v.5a.75.75 0 0 0 1.5 0zm4 0a.75.75 0 0 0-1.5 0v.5a.75.75 0 0 0 1.5 0z"/>`), g.Group(children),
	)
}

func MessageMinus(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3.464 16.828C2 15.657 2 14.771 2 11s0-5.657 1.464-6.828C4.93 3 7.286 3 12 3s7.071 0 8.535 1.172S22 7.229 22 11s0 4.657-1.465 5.828C19.072 18 16.714 18 12 18c-2.51 0-3.8 1.738-6 3v-3.212c-1.094-.163-1.899-.45-2.536-.96M9.5 10.5h5"/>`), g.Group(children),
	)
}

func MessageMinusSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M11.953 2.25h.094c2.317 0 4.118 0 5.52.15c1.418.153 2.541.47 3.437 1.186c.92.736 1.35 1.693 1.553 2.9c.193 1.152.193 2.618.193 4.446v.183c0 1.782 0 3.015-.2 3.934a3.7 3.7 0 0 1-.545 1.323c-.264.392-.6.722-1 1.042c-.897.717-2.02 1.033-3.438 1.185c-1.402.151-3.203.151-5.52.151H12c-1.056 0-1.863.357-2.707.906c-.342.221-.675.464-1.036.729l-.304.22c-.475.345-.994.71-1.58 1.046A.75.75 0 0 1 5.25 21v-2.585c-.879-.19-1.623-.496-2.254-1c-.4-.321-.737-.65-1-1.043a3.7 3.7 0 0 1-.546-1.323c-.2-.919-.2-2.152-.2-3.934v-.183c0-1.828 0-3.294.193-4.445c.203-1.208.633-2.165 1.553-2.901c.896-.717 2.019-1.033 3.437-1.185c1.402-.151 3.203-.151 5.52-.151M9.5 9.75a.75.75 0 0 0 0 1.5h5a.75.75 0 0 0 0-1.5z"/>`), g.Group(children),
	)
}

func MessagePlus(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9.5 10.5h5M12 8v5m-8.536 3.828C2 15.657 2 14.771 2 11s0-5.657 1.464-6.828C4.93 3 7.286 3 12 3s7.071 0 8.535 1.172S22 7.229 22 11s0 4.657-1.465 5.828C19.072 18 16.714 18 12 18c-2.51 0-3.8 1.738-6 3v-3.212c-1.094-.163-1.899-.45-2.536-.96"/>`), g.Group(children),
	)
}

func MessagePlusSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M11.953 2.25c-2.317 0-4.118 0-5.52.15c-1.418.153-2.541.47-3.437 1.186c-.92.736-1.35 1.693-1.553 2.9c-.193 1.152-.193 2.618-.193 4.446v.183c0 1.782 0 3.015.2 3.934c.108.495.278.925.545 1.323c.264.392.6.722 1.001 1.042c.631.505 1.375.81 2.254 1V21a.75.75 0 0 0 1.123.65c.586-.335 1.105-.7 1.58-1.044l.304-.221a22 22 0 0 1 1.036-.73c.844-.548 1.65-.905 2.707-.905h.047c2.317 0 4.118 0 5.52-.15c1.418-.153 2.541-.47 3.437-1.186c.4-.32.737-.65 1-1.042c.268-.398.438-.828.546-1.323c.2-.919.2-2.152.2-3.934v-.183c0-1.828 0-3.294-.193-4.445c-.203-1.208-.633-2.165-1.553-2.901c-.896-.717-2.019-1.033-3.437-1.185c-1.402-.151-3.203-.151-5.52-.151zm.047 5a.75.75 0 0 1 .75.75v1.75h1.75a.75.75 0 0 1 0 1.5h-1.75V13a.75.75 0 0 1-1.5 0v-1.75H9.5a.75.75 0 0 1 0-1.5h1.75V8a.75.75 0 0 1 .75-.75"/>`), g.Group(children),
	)
}

func MessageReply(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M3.464 16.828C2 15.657 2 14.771 2 11s0-5.657 1.464-6.828C4.93 3 7.286 3 12 3s7.071 0 8.535 1.172S22 7.229 22 11s0 4.657-1.465 5.828C19.072 18 16.714 18 12 18c-2.51 0-3.8 1.738-6 3v-3.212c-1.094-.163-1.899-.45-2.536-.96"/><path d="M8 9.514h6a2 2 0 0 1 2 2V14M8 9.514l2.39 2.513M8 9.514L10.39 7"/></g>`), g.Group(children),
	)
}

func MessageReplySolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M6.433 2.4c1.402-.15 3.203-.15 5.52-.15h.094c2.317 0 4.118 0 5.52.15c1.418.153 2.541.47 3.437 1.186c.92.736 1.35 1.693 1.553 2.9c.193 1.152.193 2.618.193 4.446v.183c0 1.782 0 3.015-.2 3.934a3.7 3.7 0 0 1-.545 1.323c-.264.392-.6.722-1 1.042c-.897.717-2.02 1.033-3.438 1.185c-1.402.151-3.203.151-5.52.151H12c-1.056 0-1.863.357-2.707.906c-.342.221-.675.464-1.036.729l-.304.22c-.475.345-.994.71-1.58 1.046A.75.75 0 0 1 5.25 21v-2.585c-.879-.19-1.623-.496-2.254-1c-.4-.321-.737-.65-1-1.043a3.7 3.7 0 0 1-.546-1.323c-.2-.919-.2-2.152-.2-3.934v-.183c0-1.828 0-3.294.193-4.445c.203-1.208.633-2.165 1.553-2.901c.896-.717 2.019-1.033 3.437-1.185m4.5 5.117a.75.75 0 0 0-1.086-1.034l-2.39 2.514a.75.75 0 0 0 0 1.033l2.39 2.514a.75.75 0 1 0 1.087-1.034l-1.186-1.246H14c.69 0 1.25.56 1.25 1.25V14a.75.75 0 0 0 1.5 0v-2.486A2.75 2.75 0 0 0 14 8.764H9.748z"/>`), g.Group(children),
	)
}

func MessageSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M11.953 2.25c-2.317 0-4.118 0-5.52.15c-1.418.153-2.541.47-3.437 1.186c-.92.736-1.35 1.693-1.553 2.9c-.193 1.152-.193 2.618-.193 4.446v.183c0 1.782 0 3.015.2 3.934c.108.495.278.925.545 1.323c.264.392.6.722 1.001 1.042c.631.505 1.375.81 2.254 1V21a.75.75 0 0 0 1.123.65c.586-.335 1.105-.7 1.58-1.044l.304-.221a22 22 0 0 1 1.036-.73c.844-.548 1.65-.905 2.707-.905h.047c2.317 0 4.118 0 5.52-.15c1.418-.153 2.541-.47 3.437-1.186c.4-.32.737-.65 1-1.042c.268-.398.438-.828.546-1.323c.2-.919.2-2.152.2-3.934v-.183c0-1.828 0-3.294-.193-4.445c-.203-1.208-.633-2.165-1.553-2.901c-.896-.717-2.019-1.033-3.437-1.185c-1.402-.151-3.203-.151-5.52-.151z"/>`), g.Group(children),
	)
}

func MessageX(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m10 8.5l4 4m0-4l-4 4m-6.536 4.328C2 15.657 2 14.771 2 11s0-5.657 1.464-6.828C4.93 3 7.286 3 12 3s7.071 0 8.535 1.172S22 7.229 22 11s0 4.657-1.465 5.828C19.072 18 16.714 18 12 18c-2.51 0-3.8 1.738-6 3v-3.212c-1.094-.163-1.899-.45-2.536-.96"/>`), g.Group(children),
	)
}

func MessageXSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M11.953 2.25c-2.317 0-4.118 0-5.52.15c-1.418.153-2.541.47-3.437 1.186c-.92.736-1.35 1.693-1.553 2.9c-.193 1.152-.193 2.618-.193 4.446v.183c0 1.782 0 3.015.2 3.934c.108.495.278.925.545 1.323c.264.392.6.722 1.001 1.042c.631.505 1.375.81 2.254 1V21a.75.75 0 0 0 1.123.65c.586-.335 1.105-.7 1.58-1.044l.304-.221a22 22 0 0 1 1.036-.73c.844-.548 1.65-.905 2.707-.905h.047c2.317 0 4.118 0 5.52-.15c1.418-.153 2.541-.47 3.437-1.186c.4-.32.737-.65 1-1.042c.268-.398.438-.828.546-1.323c.2-.919.2-2.152.2-3.934v-.183c0-1.828 0-3.294-.193-4.445c-.203-1.208-.633-2.165-1.553-2.901c-.896-.717-2.019-1.033-3.437-1.185c-1.402-.151-3.203-.151-5.52-.151zM9.47 7.97a.75.75 0 0 1 1.06 0L12 9.44l1.47-1.47a.75.75 0 1 1 1.06 1.06l-1.47 1.47l1.47 1.47a.75.75 0 1 1-1.06 1.06L12 11.56l-1.47 1.47a.75.75 0 1 1-1.06-1.06l1.47-1.47l-1.47-1.47a.75.75 0 0 1 0-1.06"/>`), g.Group(children),
	)
}

func Microphone(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M16 6.429C16 4.535 14.21 3 12 3S8 4.535 8 6.429v5.142C8 13.465 9.79 15 12 15s4-1.535 4-3.429z"/><path d="M5 11a7 7 0 1 0 14 0m-7 7v3m-4 0h8"/></g>`), g.Group(children),
	)
}

func MicrophoneSlash(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M12 18v3m-4 0h8m-8-9.429V6.43C8 4.535 9.79 3 12 3c1.309 0 2.47.539 3.2 1.371M5 11c0 1.046.23 2.039.641 2.93M19 11a7 7 0 0 1-11.425 5.425M3 21l4.575-4.575M21 3l-5 5m0 0v3.571C16 13.465 14.21 15 12 15a4.44 4.44 0 0 1-2.348-.652M16 8l-6.348 6.348m0 0l-2.077 2.077"/>`), g.Group(children),
	)
}

func MicrophoneSlashSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12 2.25c-2.51 0-4.75 1.767-4.75 4.179v5.142c0 1.13.49 2.117 1.27 2.848l-.97.97A6.23 6.23 0 0 1 5.75 11a.75.75 0 0 0-1.5 0c0 2.125.855 4.05 2.24 5.45l-4.02 4.02a.75.75 0 1 0 1.06 1.06l4.117-4.117a7.7 7.7 0 0 0 3.603 1.301v1.536H8a.75.75 0 0 0 0 1.5h8a.75.75 0 0 0 0-1.5h-3.25v-1.536a7.75 7.75 0 0 0 7-7.714a.75.75 0 0 0-1.5 0a6.25 6.25 0 0 1-9.518 5.329l1.06-1.06A5.3 5.3 0 0 0 12 15.75c2.51 0 4.75-1.767 4.75-4.179v-3.26l4.78-4.78a.75.75 0 0 0-1.06-1.061l-3.727 3.726C16.605 3.904 14.429 2.25 12 2.25"/>`), g.Group(children),
	)
}

func MicrophoneSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M12 2.25c-2.51 0-4.75 1.767-4.75 4.179v5.142c0 2.412 2.24 4.179 4.75 4.179s4.75-1.767 4.75-4.179V6.43c0-2.412-2.24-4.179-4.75-4.179"/><path d="M5.75 11a.75.75 0 0 0-1.5 0a7.75 7.75 0 0 0 7 7.714v1.536H8a.75.75 0 0 0 0 1.5h8a.75.75 0 0 0 0-1.5h-3.25v-1.536a7.75 7.75 0 0 0 7-7.714a.75.75 0 0 0-1.5 0a6.25 6.25 0 1 1-12.5 0"/></g>`), g.Group(children),
	)
}

func Minimize(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9.75 3.01c-.04 2.79-.247 4.37-1.308 5.432C7.38 9.502 5.799 9.71 3.01 9.75M9.75 21c-.04-2.79-.247-4.371-1.308-5.432S5.799 14.3 3.01 14.26M14.26 3.01c.04 2.79.247 4.37 1.308 5.432C16.629 9.502 18.211 9.71 21 9.75M14.26 21c.04-2.79.247-4.371 1.308-5.432S18.211 14.3 21 14.26"/>`), g.Group(children),
	)
}

func MinimizeOne(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M20 10h-6V4M4 14h6v6M20 4l-6 6m-4 4l-6 6"/>`), g.Group(children),
	)
}

func MinimizeOneSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M20.53 3.47a.75.75 0 0 0-1.06 0l-2.625 2.625L14 3.25a.75.75 0 0 0-.75.75v6c0 .414.336.75.75.75h6a.75.75 0 0 0 .75-.75l-2.845-2.845L20.53 4.53a.75.75 0 0 0 0-1.06M4 13.25a.75.75 0 0 0-.75.75l2.845 2.845L3.47 19.47a.75.75 0 1 0 1.06 1.06l2.625-2.625L10 20.75a.75.75 0 0 0 .75-.75v-6a.75.75 0 0 0-.75-.75z"/>`), g.Group(children),
	)
}

func MinimizeSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.5 3.02A.75.75 0 1 0 9 3c-.04 2.84-.275 4.098-1.089 4.91c-.813.815-2.07 1.05-4.911 1.091a.75.75 0 1 0 .02 1.499c2.737-.04 4.643-.22 5.951-1.528C10.28 7.664 10.46 5.758 10.5 3.021M3.02 13.51a.75.75 0 0 0-.02 1.5c2.842.04 4.099.274 4.912 1.088c.814.814 1.048 2.071 1.09 4.913a.75.75 0 1 0 1.499-.022c-.04-2.737-.22-4.643-1.528-5.951s-3.214-1.489-5.951-1.528M15.01 2.999a.75.75 0 0 0-1.5.022c.04 2.737.22 4.643 1.528 5.951s3.214 1.488 5.951 1.528a.75.75 0 1 0 .022-1.5c-2.842-.041-4.099-.275-4.913-1.089c-.813-.813-1.047-2.07-1.088-4.912m6 12.011a.75.75 0 1 0-.02-1.5c-2.738.04-4.644.22-5.952 1.528s-1.489 3.214-1.528 5.951a.75.75 0 0 0 1.5.022c.04-2.842.274-4.099 1.088-4.913c.814-.813 2.071-1.047 4.913-1.088"/>`), g.Group(children),
	)
}

func Minus(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M6 12h12"/>`), g.Group(children),
	)
}

func MinusCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0M8.5 12h7"/>`), g.Group(children),
	)
}

func MinusCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12m6.25-.75a.75.75 0 0 0 0 1.5h7a.75.75 0 0 0 0-1.5z"/>`), g.Group(children),
	)
}

func MinusDiamond(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M2.707 10.295a2.41 2.41 0 0 0 0 3.41l7.588 7.588a2.41 2.41 0 0 0 3.41 0l7.588-7.588a2.41 2.41 0 0 0 0-3.41l-7.588-7.588a2.41 2.41 0 0 0-3.41 0zM8.5 12h7"/>`), g.Group(children),
	)
}

func MinusDiamondSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.79 1.49a3.16 3.16 0 0 1 3.445.687l7.588 7.588a3.16 3.16 0 0 1 0 4.47l-7.588 7.588a3.16 3.16 0 0 1-4.47 0l-7.588-7.588a3.16 3.16 0 0 1 0-4.47l7.588-7.589a3.2 3.2 0 0 1 1.025-.685M8.5 11.25a.75.75 0 0 0 0 1.5h7a.75.75 0 0 0 0-1.5z"/>`), g.Group(children),
	)
}

func MinusHexagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M20.5 15.8V8.2a1.91 1.91 0 0 0-.944-1.645l-6.612-3.8a1.88 1.88 0 0 0-1.888 0l-6.612 3.8A1.9 1.9 0 0 0 3.5 8.2v7.602a1.91 1.91 0 0 0 .944 1.644l6.612 3.8a1.88 1.88 0 0 0 1.888 0l6.612-3.8A1.9 1.9 0 0 0 20.5 15.8M8.5 12h7"/>`), g.Group(children),
	)
}

func MinusHexagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.68 2.105a2.63 2.63 0 0 1 2.64 0l.001.001l6.611 3.8A2.65 2.65 0 0 1 21.25 8.2v7.603a2.66 2.66 0 0 1-1.318 2.291l-.003.002l-6.608 3.799h-.002a2.63 2.63 0 0 1-2.639 0h-.001l-6.608-3.8h-.003A2.64 2.64 0 0 1 2.75 15.8V8.198a2.66 2.66 0 0 1 1.318-2.291l.003-.002zM8.5 11.25a.75.75 0 0 0 0 1.5h7a.75.75 0 0 0 0-1.5z"/>`), g.Group(children),
	)
}

func MinusOctagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M7.805 3.469C8.16 3.115 8.451 3 8.937 3h6.126c.486 0 .778.115 1.132.469l4.336 4.336c.354.354.469.646.469 1.132v6.126c0 .5-.125.788-.469 1.132l-4.336 4.336c-.354.354-.646.469-1.132.469H8.937c-.5 0-.788-.125-1.132-.469L3.47 16.195c-.355-.355-.47-.646-.47-1.132V8.937c0-.5.125-.788.469-1.132zM8.5 12h7"/>`), g.Group(children),
	)
}

func MinusOctagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.037 2.408a2.3 2.3 0 0 1 .9-.158h6.126c.302 0 .602.036.9.158s.54.31.762.53l4.337 4.337c.22.221.408.463.53.762c.123.298.158.598.158.9v6.126c0 .313-.039.616-.163.914a2.3 2.3 0 0 1-.525.748l-4.337 4.337a2.3 2.3 0 0 1-.762.53a2.3 2.3 0 0 1-.9.158H8.937c-.313 0-.616-.039-.914-.163a2.3 2.3 0 0 1-.748-.525l-4.337-4.337a2.3 2.3 0 0 1-.53-.762a2.3 2.3 0 0 1-.158-.9V8.937c0-.313.039-.616.163-.914a2.3 2.3 0 0 1 .525-.748l4.337-4.337c.221-.22.463-.408.762-.53M8.5 11.25a.75.75 0 0 0 0 1.5h7a.75.75 0 0 0 0-1.5z"/>`), g.Group(children),
	)
}

func MinusSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M5 12a1 1 0 0 1 1-1h12a1 1 0 1 1 0 2H6a1 1 0 0 1-1-1"/>`), g.Group(children),
	)
}

func MinusSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6zM8.5 12h7"/>`), g.Group(children),
	)
}

func MinusSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057m-.867 9a.75.75 0 0 0 0 1.5h7a.75.75 0 0 0 0-1.5z"/>`), g.Group(children),
	)
}

func MinusWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83M8.5 12h7"/>`), g.Group(children),
	)
}

func MinusWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.565 2.075c-.394.189-.755.497-1.26.928l-.079.066a2.56 2.56 0 0 1-1.58.655l-.102.008c-.662.053-1.135.09-1.547.236a3.33 3.33 0 0 0-2.03 2.029c-.145.412-.182.885-.235 1.547l-.008.102a2.56 2.56 0 0 1-.655 1.58l-.066.078c-.431.506-.74.867-.928 1.261a3.33 3.33 0 0 0 0 2.87c.189.394.497.755.928 1.26l.066.079c.41.48.604.939.655 1.58l.008.102c.053.662.09 1.135.236 1.547a3.33 3.33 0 0 0 2.029 2.03c.412.145.885.182 1.547.235l.102.008c.629.05 1.09.238 1.58.655l.079.066c.505.431.866.74 1.26.928a3.33 3.33 0 0 0 2.87 0c.394-.189.755-.497 1.26-.928l.079-.066c.48-.41.939-.604 1.58-.655l.102-.008c.662-.053 1.135-.09 1.547-.236a3.33 3.33 0 0 0 2.03-2.029c.145-.412.182-.885.235-1.547l.008-.102c.05-.629.238-1.09.655-1.58l.066-.079c.431-.505.74-.866.928-1.26a3.33 3.33 0 0 0 0-2.87c-.189-.394-.497-.755-.928-1.26l-.066-.079a2.56 2.56 0 0 1-.655-1.58l-.008-.102c-.053-.662-.09-1.135-.236-1.547a3.33 3.33 0 0 0-2.029-2.03c-.412-.145-.885-.182-1.547-.235l-.102-.008a2.56 2.56 0 0 1-1.58-.655l-.079-.066c-.505-.431-.866-.74-1.26-.928a3.33 3.33 0 0 0-2.87 0M8.5 11.25h7a.75.75 0 0 1 0 1.5h-7a.75.75 0 0 1 0-1.5"/>`), g.Group(children),
	)
}

func Mobile(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M16.286 3H7.714C6.768 3 6 3.806 6 4.8v14.4c0 .994.768 1.8 1.714 1.8h8.572c.947 0 1.714-.806 1.714-1.8V4.8c0-.994-.767-1.8-1.714-1.8M10.5 6h3"/>`), g.Group(children),
	)
}

func MobileSignalFive(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3 21v-1m18 1V3m-9 18v-9m4.5 9V8m-9 13v-5"/>`), g.Group(children),
	)
}

func MobileSignalFiveSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M21 2.25a.75.75 0 0 1 .75.75v18a.75.75 0 0 1-1.5 0V3a.75.75 0 0 1 .75-.75m-4.5 5a.75.75 0 0 1 .75.75v13a.75.75 0 0 1-1.5 0V8a.75.75 0 0 1 .75-.75m-4.5 4a.75.75 0 0 1 .75.75v9a.75.75 0 0 1-1.5 0v-9a.75.75 0 0 1 .75-.75m-4.5 4a.75.75 0 0 1 .75.75v5a.75.75 0 0 1-1.5 0v-5a.75.75 0 0 1 .75-.75m-4.5 4a.75.75 0 0 1 .75.75v1a.75.75 0 0 1-1.5 0v-1a.75.75 0 0 1 .75-.75"/>`), g.Group(children),
	)
}

func MobileSignalFour(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3 21v-1m9 1v-9m4.5 9V8m-9 13v-5"/>`), g.Group(children),
	)
}

func MobileSignalFourSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M16.5 7.25a.75.75 0 0 1 .75.75v13a.75.75 0 0 1-1.5 0V8a.75.75 0 0 1 .75-.75m-4.5 4a.75.75 0 0 1 .75.75v9a.75.75 0 0 1-1.5 0v-9a.75.75 0 0 1 .75-.75m-4.5 4a.75.75 0 0 1 .75.75v5a.75.75 0 0 1-1.5 0v-5a.75.75 0 0 1 .75-.75m-4.5 4a.75.75 0 0 1 .75.75v1a.75.75 0 0 1-1.5 0v-1a.75.75 0 0 1 .75-.75"/>`), g.Group(children),
	)
}

func MobileSignalOne(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3 21v-1"/>`), g.Group(children),
	)
}

func MobileSignalOneSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M3 19.25a.75.75 0 0 1 .75.75v1a.75.75 0 0 1-1.5 0v-1a.75.75 0 0 1 .75-.75"/>`), g.Group(children),
	)
}

func MobileSignalThree(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3 21v-1m9 1v-9m-4.5 9v-5"/>`), g.Group(children),
	)
}

func MobileSignalThreeSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12 11.25a.75.75 0 0 1 .75.75v9a.75.75 0 0 1-1.5 0v-9a.75.75 0 0 1 .75-.75m-4.5 4a.75.75 0 0 1 .75.75v5a.75.75 0 0 1-1.5 0v-5a.75.75 0 0 1 .75-.75m-4.5 4a.75.75 0 0 1 .75.75v1a.75.75 0 0 1-1.5 0v-1a.75.75 0 0 1 .75-.75"/>`), g.Group(children),
	)
}

func MobileSignalTwo(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3 21v-1m4.5 1v-5"/>`), g.Group(children),
	)
}

func MobileSignalTwoSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M7.5 15.25a.75.75 0 0 1 .75.75v5a.75.75 0 0 1-1.5 0v-5a.75.75 0 0 1 .75-.75m-4.5 4a.75.75 0 0 1 .75.75v1a.75.75 0 0 1-1.5 0v-1a.75.75 0 0 1 .75-.75"/>`), g.Group(children),
	)
}

func MobileSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M5.25 4.8c0-1.373 1.07-2.55 2.464-2.55h8.572c1.395 0 2.464 1.177 2.464 2.55v14.4c0 1.373-1.07 2.55-2.464 2.55H7.714c-1.395 0-2.464-1.177-2.464-2.55zm5.25.45a.75.75 0 0 0 0 1.5h3a.75.75 0 0 0 0-1.5z"/>`), g.Group(children),
	)
}

func Moon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M21 12.808c-.5 5.347-5.849 9.14-11.107 7.983C-.078 18.6 1.15 3.909 11.11 3C6.395 9.296 14.619 17.462 21 12.808"/>`), g.Group(children),
	)
}

func MoonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M11.712 3.45a.75.75 0 0 0-.668-1.197c-5.414.494-8.436 4.752-8.764 9.105c-.328 4.361 2.037 8.975 7.451 10.166c5.686 1.25 11.472-2.837 12.016-8.646a.75.75 0 0 0-1.189-.676c-2.837 2.069-6.08 1.316-8.136-.724c-2.054-2.039-2.8-5.239-.71-8.028"/>`), g.Group(children),
	)
}

func MoonStar(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M21 12.808c-.5 5.347-5.849 9.14-11.107 7.983C-.078 18.6 1.15 3.909 11.11 3C6.395 9.296 14.619 17.462 21 12.808M17 5.5h3M18.5 4v3"/>`), g.Group(children),
	)
}

func MoonStarSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M18.5 3.25a.75.75 0 0 1 .75.75v.75H20a.75.75 0 0 1 0 1.5h-.75V7a.75.75 0 0 1-1.5 0v-.75H17a.75.75 0 0 1 0-1.5h.75V4a.75.75 0 0 1 .75-.75m-6.788.2a.75.75 0 0 0-.668-1.197c-5.414.494-8.436 4.752-8.764 9.105c-.328 4.361 2.037 8.975 7.451 10.166c5.686 1.25 11.472-2.837 12.016-8.646a.75.75 0 0 0-1.189-.676c-2.837 2.069-6.08 1.316-8.136-.724c-2.054-2.039-2.8-5.239-.71-8.028"/>`), g.Group(children),
	)
}

func Mountain(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m13.006 15.265l2.117-3.14m0 0l.251-.37a1.637 1.637 0 0 1 2.861.234l2.596 5.541c.536 1.142-.27 2.47-1.497 2.47H4.666c-1.224 0-2.03-1.32-1.501-2.462l5.808-12.56a1.641 1.641 0 0 1 3.015.03z"/>`), g.Group(children),
	)
}

func MountainSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="m12.674 4.705l2.654 6.025a2.39 2.39 0 0 1 3.587.94l2.596 5.542c.75 1.603-.36 3.538-2.177 3.538H4.665c-1.81 0-2.922-1.924-2.181-3.527l5.808-12.56c.88-1.905 3.537-1.877 4.382.042"/>`), g.Group(children),
	)
}

func MousePointer(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m12.866 12.866l5.628-2.412c.942-.404.886-1.758-.086-2.082L5.469 4.059c-.871-.29-1.7.539-1.41 1.41l4.313 12.939c.324.972 1.678 1.028 2.082.086zm0 0L20 20"/>`), g.Group(children),
	)
}

func MousePointerSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M3.348 5.706c-.486-1.457.9-2.844 2.358-2.358L18.645 7.66c1.627.543 1.72 2.808.145 3.483l-4.61 1.976l6.35 6.35a.75.75 0 1 1-1.06 1.061l-6.35-6.35l-1.977 4.61c-.675 1.576-2.94 1.481-3.482-.145z"/>`), g.Group(children),
	)
}

func Move(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M5.7 9.3L3 12m0 0l2.7 2.7M3 12h18M9.3 5.7L12 3m0 0l2.7 2.7M12 3v18m2.7-2.7L12 21m0 0l-2.7-2.7m9-9L21 12m0 0l-2.7 2.7"/>`), g.Group(children),
	)
}

func MoveDiagonal(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M13 5h6m0 0v6m0-6L5 19m6 0H5m0 0v-6"/>`), g.Group(children),
	)
}

func MoveDiagonalOne(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M5 11V5m0 0h6M5 5l14 14m0-6v6m0 0h-6"/>`), g.Group(children),
	)
}

func MoveDiagonalOneSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M11 4.25a.75.75 0 0 1 .75.75L8.905 7.845l7.25 7.25L19 12.25a.75.75 0 0 1 .75.75v6a.75.75 0 0 1-.75.75h-6a.75.75 0 0 1-.75-.75l2.845-2.845l-7.25-7.25L5 11.75a.75.75 0 0 1-.75-.75V5A.75.75 0 0 1 5 4.25z"/>`), g.Group(children),
	)
}

func MoveDiagonalSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M13 4.25a.75.75 0 0 0-.75.75l2.845 2.845l-7.25 7.25L5 12.25a.75.75 0 0 0-.75.75v6c0 .414.336.75.75.75h6a.75.75 0 0 0 .75-.75l-2.845-2.845l7.25-7.25L19 11.75a.75.75 0 0 0 .75-.75V5a.75.75 0 0 0-.75-.75z"/>`), g.Group(children),
	)
}

func MoveHorizontal(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m18 8l4 4m0 0l-4 4m4-4H2m4-4l-4 4m0 0l4 4"/>`), g.Group(children),
	)
}

func MoveHorizontalSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M5.47 7.47a.75.75 0 0 1 1.06 0v3.78h10.94V7.47a.75.75 0 0 1 1.06 0l4 4a.75.75 0 0 1 0 1.06l-4 4a.75.75 0 0 1-1.06 0v-3.78H6.53v3.78a.75.75 0 0 1-1.06 0l-4-4a.75.75 0 0 1 0-1.06z"/>`), g.Group(children),
	)
}

func MoveSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M11.47 2.47a.75.75 0 0 1 1.06 0l2.7 2.7a.75.75 0 0 1 0 1.06h-2.48v5.02h5.02V8.77a.75.75 0 0 1 1.06 0l2.7 2.7a.75.75 0 0 1 0 1.06l-2.7 2.7a.75.75 0 0 1-1.06 0v-2.48h-5.02v5.02h2.48a.75.75 0 0 1 0 1.06l-2.7 2.7a.75.75 0 0 1-1.06 0l-2.7-2.7a.75.75 0 0 1 0-1.06h2.48v-5.02H6.23v2.48a.75.75 0 0 1-1.06 0l-2.7-2.7a.75.75 0 0 1 0-1.06l2.7-2.7a.75.75 0 0 1 1.06 0v2.48h5.02V6.23H8.77a.75.75 0 0 1 0-1.06z"/>`), g.Group(children),
	)
}

func MoveVertical(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m8 18l4 4m0 0l4-4m-4 4V2M8 6l4-4m0 0l4 4"/>`), g.Group(children),
	)
}

func MoveVerticalSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M16.53 5.47a.75.75 0 0 1 0 1.06h-3.78v10.94h3.78a.75.75 0 0 1 0 1.06l-4 4a.75.75 0 0 1-1.06 0l-4-4a.75.75 0 0 1 0-1.06h3.78V6.53H7.47a.75.75 0 0 1 0-1.06l4-4a.75.75 0 0 1 1.06 0z"/>`), g.Group(children),
	)
}

func Music(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M8.625 17.65c0 1.574-1.26 2.85-2.812 2.85C4.259 20.5 3 19.224 3 17.65c0-1.573 1.26-2.849 2.813-2.849s2.812 1.276 2.812 2.85m0 0V5.462c0-.52.394-.954.909-1.001l10.375-.956A1 1 0 0 1 21 4.506V16.51m0 0c0 1.573-1.26 2.85-2.812 2.85c-1.554 0-2.813-1.277-2.813-2.85s1.26-2.85 2.813-2.85S21 14.936 21 16.51"/>`), g.Group(children),
	)
}

func MusicCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/><path d="M12.5 14.5V8.6a.6.6 0 0 1 .6-.6h1.4m-2 6.5a1.5 1.5 0 1 1-3 0a1.5 1.5 0 0 1 3 0"/></g>`), g.Group(children),
	)
}

func MusicCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M11 13.75a.75.75 0 1 1 0 1.5a.75.75 0 0 1 0-1.5"/><path d="M2.25 12c0 5.385 4.365 9.75 9.75 9.75s9.75-4.365 9.75-9.75S17.385 2.25 12 2.25S2.25 6.615 2.25 12M14.5 8.75h-1.25v5.75a2.25 2.25 0 1 1-1.5-2.122V8.6c0-.746.604-1.35 1.35-1.35h1.4a.75.75 0 0 1 0 1.5"/></g>`), g.Group(children),
	)
}

func MusicDiamond(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M2.707 10.295a2.41 2.41 0 0 0 0 3.41l7.588 7.588a2.41 2.41 0 0 0 3.41 0l7.588-7.588a2.41 2.41 0 0 0 0-3.41l-7.588-7.588a2.41 2.41 0 0 0-3.41 0z"/><path d="M12.5 14.5V8.6a.6.6 0 0 1 .6-.6h1.4m-2 6.5a1.5 1.5 0 1 1-3 0a1.5 1.5 0 0 1 3 0"/></g>`), g.Group(children),
	)
}

func MusicDiamondSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M11 13.75a.75.75 0 1 1 0 1.5a.75.75 0 0 1 0-1.5"/><path d="M10.79 1.49a3.2 3.2 0 0 0-1.025.686L2.177 9.765a3.16 3.16 0 0 0 0 4.47l7.588 7.588a3.16 3.16 0 0 0 4.47 0l7.588-7.588a3.16 3.16 0 0 0 0-4.47l-7.588-7.588a3.16 3.16 0 0 0-3.445-.686m3.71 7.26h-1.25v5.75a2.25 2.25 0 1 1-1.5-2.122V8.6c0-.746.604-1.35 1.35-1.35h1.4a.75.75 0 0 1 0 1.5"/></g>`), g.Group(children),
	)
}

func MusicHexagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M20.5 15.8V8.2a1.91 1.91 0 0 0-.944-1.645l-6.612-3.8a1.88 1.88 0 0 0-1.888 0l-6.612 3.8A1.9 1.9 0 0 0 3.5 8.2v7.602a1.91 1.91 0 0 0 .944 1.644l6.612 3.8a1.88 1.88 0 0 0 1.888 0l6.612-3.8A1.9 1.9 0 0 0 20.5 15.8"/><path d="M12.5 14.5V8.6a.6.6 0 0 1 .6-.6h1.4m-2 6.5a1.5 1.5 0 1 1-3 0a1.5 1.5 0 0 1 3 0"/></g>`), g.Group(children),
	)
}

func MusicHexagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M11 13.75a.75.75 0 1 1 0 1.5a.75.75 0 0 1 0-1.5"/><path d="m10.68 2.105l-6.61 3.8l-.002.002A2.65 2.65 0 0 0 2.75 8.198v7.603a2.64 2.64 0 0 0 1.318 2.292l.003.002l6.608 3.799h.002a2.63 2.63 0 0 0 2.639 0h.001l6.608-3.8h.003A2.65 2.65 0 0 0 21.25 15.8V8.2a2.65 2.65 0 0 0-1.318-2.292l-6.61-3.8l-.002-.002a2.63 2.63 0 0 0-2.64 0M14.5 8.75h-1.25v5.75a2.25 2.25 0 1 1-1.5-2.122V8.6c0-.746.604-1.35 1.35-1.35h1.4a.75.75 0 0 1 0 1.5"/></g>`), g.Group(children),
	)
}

func MusicOctagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M7.805 3.469C8.16 3.115 8.451 3 8.937 3h6.126c.486 0 .778.115 1.132.469l4.336 4.336c.354.354.469.646.469 1.132v6.126c0 .5-.125.788-.469 1.132l-4.336 4.336c-.354.354-.646.469-1.132.469H8.937c-.5 0-.788-.125-1.132-.469L3.47 16.195c-.355-.355-.47-.646-.47-1.132V8.937c0-.5.125-.788.469-1.132z"/><path d="M12.5 14.5V8.6a.6.6 0 0 1 .6-.6h1.4m-2 6.5a1.5 1.5 0 1 1-3 0a1.5 1.5 0 0 1 3 0"/></g>`), g.Group(children),
	)
}

func MusicOctagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M11 13.75a.75.75 0 1 1 0 1.5a.75.75 0 0 1 0-1.5"/><path d="M8.037 2.408c-.299.122-.54.31-.762.53L2.938 7.275c-.213.214-.4.45-.525.748a2.3 2.3 0 0 0-.163.914v6.126c0 .302.036.602.158.9s.31.54.53.762l4.337 4.337c.214.213.45.4.748.524c.298.125.601.164.914.164h6.126c.302 0 .602-.035.9-.158c.299-.122.54-.31.762-.53l4.337-4.337c.213-.214.4-.45.524-.748a2.3 2.3 0 0 0 .164-.914V8.937a2.3 2.3 0 0 0-.158-.9a2.3 2.3 0 0 0-.53-.762l-4.337-4.337a2.3 2.3 0 0 0-.762-.53a2.3 2.3 0 0 0-.9-.158H8.937a2.3 2.3 0 0 0-.9.158M14.5 8.75h-1.25v5.75a2.25 2.25 0 1 1-1.5-2.122V8.6c0-.746.604-1.35 1.35-1.35h1.4a.75.75 0 0 1 0 1.5"/></g>`), g.Group(children),
	)
}

func MusicSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M19.978 4.251c.141-.013.272.1.272.255v9.07a3.5 3.5 0 0 0-2.062-.665c-1.977 0-3.563 1.621-3.563 3.6s1.586 3.6 3.563 3.6c1.976 0 3.562-1.622 3.562-3.6V4.506c0-1.029-.88-1.843-1.91-1.749l-10.375.956a1.753 1.753 0 0 0-1.59 1.748v9.254a3.5 3.5 0 0 0-2.062-.664c-1.977 0-3.563 1.621-3.563 3.6c0 1.978 1.586 3.599 3.563 3.599c1.976 0 3.562-1.62 3.562-3.6V5.462c0-.135.102-.243.228-.254z"/>`), g.Group(children),
	)
}

func MusicSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/><path d="M12.5 14.5V8.6a.6.6 0 0 1 .6-.6h1.4m-2 6.5a1.5 1.5 0 1 1-3 0a1.5 1.5 0 0 1 3 0"/></g>`), g.Group(children),
	)
}

func MusicSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M11 13.75a.75.75 0 1 1 0 1.5a.75.75 0 0 1 0-1.5"/><path d="M9.367 2.25c-1.092 0-1.958 0-2.655.057c-.714.058-1.317.18-1.868.46a4.75 4.75 0 0 0-2.076 2.077c-.281.55-.403 1.154-.461 1.868c-.057.697-.057 1.563-.057 2.655v5.266c0 1.092 0 1.958.057 2.655c.058.714.18 1.317.46 1.869a4.75 4.75 0 0 0 2.077 2.075c.55.281 1.154.403 1.868.461c.697.057 1.563.057 2.655.057h5.266c1.092 0 1.958 0 2.655-.057c.714-.058 1.317-.18 1.869-.46a4.75 4.75 0 0 0 2.075-2.076c.281-.552.403-1.155.461-1.869c.057-.697.057-1.563.057-2.655V9.367c0-1.092 0-1.958-.057-2.655c-.058-.714-.18-1.317-.46-1.868a4.75 4.75 0 0 0-2.076-2.076c-.552-.281-1.155-.403-1.869-.461c-.697-.057-1.563-.057-2.655-.057zm5.133 6.5h-1.25v5.75a2.25 2.25 0 1 1-1.5-2.122V8.6c0-.746.604-1.35 1.35-1.35h1.4a.75.75 0 0 1 0 1.5"/></g>`), g.Group(children),
	)
}

func MusicWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83"/><path d="M12.5 14.5V8.6a.6.6 0 0 1 .6-.6h1.4m-2 6.5a1.5 1.5 0 1 1-3 0a1.5 1.5 0 0 1 3 0"/></g>`), g.Group(children),
	)
}

func MusicWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M11 13.75a.75.75 0 1 1 0 1.5a.75.75 0 0 1 0-1.5"/><path d="M10.565 2.075c-.394.189-.755.497-1.26.928l-.079.066a2.56 2.56 0 0 1-1.58.655l-.102.008c-.662.053-1.135.09-1.547.236a3.33 3.33 0 0 0-2.03 2.029c-.145.412-.182.885-.235 1.547l-.008.102a2.56 2.56 0 0 1-.655 1.58l-.066.078c-.431.506-.74.867-.928 1.261a3.33 3.33 0 0 0 0 2.87c.189.394.497.755.928 1.26l.066.079c.41.48.604.939.655 1.58l.008.102c.053.662.09 1.135.236 1.547a3.33 3.33 0 0 0 2.029 2.03c.412.145.885.182 1.547.235l.102.008c.629.05 1.09.238 1.58.655l.079.066c.505.431.866.74 1.26.928a3.33 3.33 0 0 0 2.87 0c.394-.189.755-.497 1.26-.928l.079-.066c.48-.41.939-.604 1.58-.655l.102-.008c.662-.053 1.135-.09 1.547-.236a3.33 3.33 0 0 0 2.03-2.029c.145-.412.182-.885.235-1.547l.008-.102c.05-.629.238-1.09.655-1.58l.066-.079c.431-.505.74-.866.928-1.26a3.33 3.33 0 0 0 0-2.87c-.189-.394-.497-.755-.928-1.26l-.066-.079a2.56 2.56 0 0 1-.655-1.58l-.008-.102c-.053-.662-.09-1.135-.236-1.547a3.33 3.33 0 0 0-2.029-2.03c-.412-.145-.885-.182-1.547-.235l-.102-.008a2.56 2.56 0 0 1-1.58-.655l-.079-.066c-.505-.431-.866-.74-1.26-.928a3.33 3.33 0 0 0-2.87 0M14.5 8.75h-1.25v5.75a2.25 2.25 0 1 1-1.5-2.122V8.6c0-.746.604-1.35 1.35-1.35h1.4a.75.75 0 0 1 0 1.5"/></g>`), g.Group(children),
	)
}

func Myna(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="m3.25 10.347l.705-.66l1.41-1.318c2.22-2.292 5.803-2.292 8.004 0l4.228 3.952a.29.29 0 0 1 0 .42l-8.67 8.105"/><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/></g>`), g.Group(children),
	)
}

func MynaSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057M6.834 3.802c-.62.05-1.005.147-1.31.302a3.25 3.25 0 0 0-1.42 1.42c-.155.305-.251.69-.302 1.31c-.043.523-.05 1.166-.052 2.018l1.09-1.019c2.51-2.576 6.561-2.58 9.056.001l4.213 3.939c.439.41.439 1.106 0 1.516l-7.446 6.961H14.6c1.133 0 1.937 0 2.566-.052c.62-.05 1.005-.147 1.31-.302a3.25 3.25 0 0 0 1.42-1.42c.155-.305.251-.69.302-1.31c.051-.63.052-1.434.052-2.566V9.4c0-1.132 0-1.937-.052-2.566c-.05-.62-.147-1.005-.302-1.31a3.25 3.25 0 0 0-1.42-1.42c-.305-.155-.69-.251-1.31-.302c-.63-.051-1.434-.052-2.566-.052H9.4c-1.132 0-1.937 0-2.566.052"/>`), g.Group(children),
	)
}

func Navigation(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M11.54 3.333a.485.485 0 0 1 .92 0l6.5 16.916c.178.464-.272.917-.685.69l-6.05-3.314a.46.46 0 0 0-.45 0l-6.05 3.315c-.413.226-.863-.227-.685-.69z"/>`), g.Group(children),
	)
}

func NavigationOne(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3.414 12.086a.546.546 0 0 1-.101-1.024l16.905-8.007a.546.546 0 0 1 .727.727l-8.007 16.905a.546.546 0 0 1-1.024-.1l-1.62-6.483a.55.55 0 0 0-.398-.397z"/>`), g.Group(children),
	)
}

func NavigationOneSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M21.623 4.103c.521-1.1-.626-2.248-1.726-1.726L2.99 10.385c-1.1.52-.94 2.133.24 2.429l6.364 1.59l1.591 6.364c.295 1.18 1.908 1.34 2.43.24z"/>`), g.Group(children),
	)
}

func NavigationSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M13.16 3.064a1.234 1.234 0 0 0-2.32 0L4.34 19.98a1.31 1.31 0 0 0 .288 1.402c.344.346.917.512 1.458.216L12 18.357l5.915 3.24c.54.297 1.113.13 1.457-.215c.336-.34.49-.877.288-1.402z"/>`), g.Group(children),
	)
}

func Nine(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M10 17h1.25A3.75 3.75 0 0 0 15 13.25v-3.125m0 0a3.125 3.125 0 1 0-6.25 0c0 1.726 1.4 2.5 3.125 2.5S15 11.851 15 10.125"/>`), g.Group(children),
	)
}

func NineCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/><path d="M10.5 16h1a3 3 0 0 0 3-3v-2.5m0 0a2.5 2.5 0 0 0-5 0c0 1.38 1.12 2 2.5 2s2.5-.62 2.5-2"/></g>`), g.Group(children),
	)
}

func NineCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M10.25 10.5a1.75 1.75 0 1 1 3.5 0c0 .458-.171.729-.422.91c-.283.205-.735.34-1.328.34s-1.045-.135-1.328-.34c-.251-.181-.422-.452-.422-.91"/><path d="M2.25 12c0 5.385 4.365 9.75 9.75 9.75s9.75-4.365 9.75-9.75S17.385 2.25 12 2.25S2.25 6.615 2.25 12m11.5 1v-.105c-.533.252-1.144.355-1.75.355c-.788 0-1.586-.175-2.207-.625c-.654-.473-1.043-1.202-1.043-2.125a3.25 3.25 0 0 1 6.5 0V13a3.75 3.75 0 0 1-3.75 3.75h-1a.75.75 0 0 1 0-1.5h1A2.25 2.25 0 0 0 13.75 13"/></g>`), g.Group(children),
	)
}

func NineDiamond(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M10.5 16h1a3 3 0 0 0 3-3v-2.5m0 0a2.5 2.5 0 0 0-5 0c0 1.38 1.12 2 2.5 2s2.5-.62 2.5-2"/><path d="M2.707 10.295a2.41 2.41 0 0 0 0 3.41l7.588 7.588a2.41 2.41 0 0 0 3.41 0l7.588-7.588a2.41 2.41 0 0 0 0-3.41l-7.588-7.588a2.41 2.41 0 0 0-3.41 0z"/></g>`), g.Group(children),
	)
}

func NineDiamondSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M10.25 10.5a1.75 1.75 0 1 1 3.5 0c0 .458-.171.729-.422.91c-.283.205-.735.34-1.328.34s-1.045-.135-1.328-.34c-.251-.181-.422-.452-.422-.91"/><path d="M10.79 1.49a3.2 3.2 0 0 0-1.025.686L2.177 9.765a3.16 3.16 0 0 0 0 4.47l7.588 7.588a3.16 3.16 0 0 0 4.47 0l7.588-7.588a3.16 3.16 0 0 0 0-4.47l-7.588-7.588a3.16 3.16 0 0 0-3.445-.686M13.75 13v-.105c-.533.252-1.144.355-1.75.355c-.788 0-1.586-.175-2.207-.625c-.654-.473-1.043-1.202-1.043-2.125a3.25 3.25 0 0 1 6.5 0V13a3.75 3.75 0 0 1-3.75 3.75h-1a.75.75 0 0 1 0-1.5h1A2.25 2.25 0 0 0 13.75 13"/></g>`), g.Group(children),
	)
}

func NineHexagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M10.5 16h1a3 3 0 0 0 3-3v-2.5m0 0a2.5 2.5 0 0 0-5 0c0 1.38 1.12 2 2.5 2s2.5-.62 2.5-2"/><path d="M20.5 15.8V8.2a1.91 1.91 0 0 0-.944-1.645l-6.612-3.8a1.88 1.88 0 0 0-1.888 0l-6.612 3.8A1.9 1.9 0 0 0 3.5 8.2v7.602a1.91 1.91 0 0 0 .944 1.644l6.612 3.8a1.88 1.88 0 0 0 1.888 0l6.612-3.8A1.9 1.9 0 0 0 20.5 15.8"/></g>`), g.Group(children),
	)
}

func NineHexagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M10.25 10.5a1.75 1.75 0 1 1 3.5 0c0 .458-.171.729-.422.91c-.283.205-.735.34-1.328.34s-1.045-.135-1.328-.34c-.251-.181-.422-.452-.422-.91"/><path d="m10.68 2.105l-6.61 3.8l-.002.002A2.65 2.65 0 0 0 2.75 8.198v7.603a2.64 2.64 0 0 0 1.318 2.292l.003.002l6.608 3.799h.002a2.63 2.63 0 0 0 2.639 0h.001l6.608-3.8h.003A2.65 2.65 0 0 0 21.25 15.8V8.2a2.65 2.65 0 0 0-1.318-2.292l-6.61-3.8l-.002-.002a2.63 2.63 0 0 0-2.64 0M13.75 13v-.105c-.533.252-1.144.355-1.75.355c-.788 0-1.586-.175-2.207-.625c-.654-.473-1.043-1.202-1.043-2.125a3.25 3.25 0 0 1 6.5 0V13a3.75 3.75 0 0 1-3.75 3.75h-1a.75.75 0 0 1 0-1.5h1A2.25 2.25 0 0 0 13.75 13"/></g>`), g.Group(children),
	)
}

func NineOctagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M10.5 16h1a3 3 0 0 0 3-3v-2.5m0 0a2.5 2.5 0 0 0-5 0c0 1.38 1.12 2 2.5 2s2.5-.62 2.5-2"/><path d="M7.805 3.469C8.16 3.115 8.451 3 8.937 3h6.126c.486 0 .778.115 1.132.469l4.336 4.336c.354.354.469.646.469 1.132v6.126c0 .5-.125.788-.469 1.132l-4.336 4.336c-.354.354-.646.469-1.132.469H8.937c-.5 0-.788-.125-1.132-.469L3.47 16.195c-.355-.355-.47-.646-.47-1.132V8.937c0-.5.125-.788.469-1.132z"/></g>`), g.Group(children),
	)
}

func NineOctagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M10.25 10.5a1.75 1.75 0 1 1 3.5 0c0 .458-.171.729-.422.91c-.283.205-.735.34-1.328.34s-1.045-.135-1.328-.34c-.251-.181-.422-.452-.422-.91"/><path d="M8.037 2.408c-.299.122-.54.31-.762.53L2.938 7.275c-.213.214-.4.45-.525.748a2.3 2.3 0 0 0-.163.914v6.126c0 .302.036.602.158.9s.31.54.53.762l4.337 4.337c.214.213.45.4.748.524c.298.125.601.164.914.164h6.126c.302 0 .602-.035.9-.158c.299-.122.54-.31.762-.53l4.337-4.337c.213-.214.4-.45.524-.748a2.3 2.3 0 0 0 .164-.914V8.937a2.3 2.3 0 0 0-.158-.9a2.3 2.3 0 0 0-.53-.762l-4.337-4.337a2.3 2.3 0 0 0-.762-.53a2.3 2.3 0 0 0-.9-.158H8.937a2.3 2.3 0 0 0-.9.158M13.75 13v-.105c-.533.252-1.144.355-1.75.355c-.788 0-1.586-.175-2.207-.625c-.654-.473-1.043-1.202-1.043-2.125a3.25 3.25 0 0 1 6.5 0V13a3.75 3.75 0 0 1-3.75 3.75h-1a.75.75 0 0 1 0-1.5h1A2.25 2.25 0 0 0 13.75 13"/></g>`), g.Group(children),
	)
}

func NineSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M11.875 7.75a2.375 2.375 0 0 1 2.375 2.375c0 .63-.24 1.026-.605 1.29c-.396.286-1.005.46-1.77.46s-1.374-.174-1.77-.46c-.364-.264-.605-.66-.605-1.29a2.375 2.375 0 0 1 2.375-2.375m2.375 5.058v.442a3 3 0 0 1-3 3H10a.75.75 0 0 0 0 1.5h1.25a4.5 4.5 0 0 0 4.5-4.5v-3.125a3.875 3.875 0 0 0-7.75 0c0 1.095.459 1.95 1.226 2.505c.734.532 1.688.745 2.649.745c.845 0 1.685-.165 2.375-.567"/>`), g.Group(children),
	)
}

func NineSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M10.5 16h1a3 3 0 0 0 3-3v-2.5m0 0a2.5 2.5 0 0 0-5 0c0 1.38 1.12 2 2.5 2s2.5-.62 2.5-2"/><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/></g>`), g.Group(children),
	)
}

func NineSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M10.25 10.5a1.75 1.75 0 1 1 3.5 0c0 .458-.171.729-.422.91c-.283.205-.735.34-1.328.34s-1.045-.135-1.328-.34c-.251-.181-.422-.452-.422-.91"/><path d="M9.367 2.25c-1.092 0-1.958 0-2.655.057c-.714.058-1.317.18-1.868.46a4.75 4.75 0 0 0-2.076 2.077c-.281.55-.403 1.154-.461 1.868c-.057.697-.057 1.563-.057 2.655v5.266c0 1.092 0 1.958.057 2.655c.058.714.18 1.317.46 1.869a4.75 4.75 0 0 0 2.077 2.075c.55.281 1.154.403 1.868.461c.697.057 1.563.057 2.655.057h5.266c1.092 0 1.958 0 2.655-.057c.714-.058 1.317-.18 1.869-.46a4.75 4.75 0 0 0 2.075-2.076c.281-.552.403-1.155.461-1.869c.057-.697.057-1.563.057-2.655V9.367c0-1.092 0-1.958-.057-2.655c-.058-.714-.18-1.317-.46-1.868a4.75 4.75 0 0 0-2.076-2.076c-.552-.281-1.155-.403-1.869-.461c-.697-.057-1.563-.057-2.655-.057zM13.75 13v-.105c-.533.252-1.144.355-1.75.355c-.788 0-1.586-.175-2.207-.625c-.654-.473-1.043-1.202-1.043-2.125a3.25 3.25 0 0 1 6.5 0V13a3.75 3.75 0 0 1-3.75 3.75h-1a.75.75 0 0 1 0-1.5h1A2.25 2.25 0 0 0 13.75 13"/></g>`), g.Group(children),
	)
}

func NineWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M10.5 16h1a3 3 0 0 0 3-3v-2.5m0 0a2.5 2.5 0 0 0-5 0c0 1.38 1.12 2 2.5 2s2.5-.62 2.5-2"/><path d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83"/></g>`), g.Group(children),
	)
}

func NineWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M10.25 10.5a1.75 1.75 0 1 1 3.5 0c0 .458-.171.729-.422.91c-.283.205-.735.34-1.328.34s-1.045-.135-1.328-.34c-.251-.181-.422-.452-.422-.91"/><path d="M10.565 2.075c-.394.189-.755.497-1.26.928l-.079.066a2.56 2.56 0 0 1-1.58.655l-.102.008c-.662.053-1.135.09-1.547.236a3.33 3.33 0 0 0-2.03 2.029c-.145.412-.182.885-.235 1.547l-.008.102a2.56 2.56 0 0 1-.655 1.58l-.066.078c-.431.506-.74.867-.928 1.261a3.33 3.33 0 0 0 0 2.87c.189.394.497.755.928 1.26l.066.079c.41.48.604.939.655 1.58l.008.102c.053.662.09 1.135.236 1.547a3.33 3.33 0 0 0 2.029 2.03c.412.145.885.182 1.547.235l.102.008c.629.05 1.09.238 1.58.655l.079.066c.505.431.866.74 1.26.928a3.33 3.33 0 0 0 2.87 0c.394-.189.755-.497 1.26-.928l.079-.066c.48-.41.939-.604 1.58-.655l.102-.008c.662-.053 1.135-.09 1.547-.236a3.33 3.33 0 0 0 2.03-2.029c.145-.412.182-.885.235-1.547l.008-.102c.05-.629.238-1.09.655-1.58l.066-.079c.431-.505.74-.866.928-1.26a3.33 3.33 0 0 0 0-2.87c-.189-.394-.497-.755-.928-1.26l-.066-.079a2.56 2.56 0 0 1-.655-1.58l-.008-.102c-.053-.662-.09-1.135-.236-1.547a3.33 3.33 0 0 0-2.029-2.03c-.412-.145-.885-.182-1.547-.235l-.102-.008a2.56 2.56 0 0 1-1.58-.655l-.079-.066c-.505-.431-.866-.74-1.26-.928a3.33 3.33 0 0 0-2.87 0M13.75 13v-.105c-.533.252-1.144.355-1.75.355c-.788 0-1.586-.175-2.207-.625c-.654-.473-1.043-1.202-1.043-2.125a3.25 3.25 0 0 1 6.5 0V13a3.75 3.75 0 0 1-3.75 3.75h-1a.75.75 0 0 1 0-1.5h1A2.25 2.25 0 0 0 13.75 13"/></g>`), g.Group(children),
	)
}

func Notification(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M21 5.75a2.75 2.75 0 1 1-5.5 0a2.75 2.75 0 0 1 5.5 0M11.5 3H9.4c-2.24 0-3.36 0-4.216.436a4 4 0 0 0-1.748 1.748C3 6.04 3 7.16 3 9.4v5.2c0 2.24 0 3.36.436 4.216a4 4 0 0 0 1.748 1.748C6.04 21 7.16 21 9.4 21h5.2c2.24 0 3.36 0 4.216-.436a4 4 0 0 0 1.748-1.748C21 17.96 21 16.84 21 14.6v-2.1"/>`), g.Group(children),
	)
}

func NotificationSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25H11.5a.75.75 0 0 1 0 1.5H9.4c-1.132 0-1.937 0-2.566.052c-.62.05-1.005.147-1.31.302a3.25 3.25 0 0 0-1.42 1.42c-.155.305-.251.69-.302 1.31c-.051.63-.052 1.434-.052 2.566v5.2c0 1.133 0 1.937.052 2.566c.05.62.147 1.005.302 1.31a3.25 3.25 0 0 0 1.42 1.42c.305.155.69.251 1.31.302c.63.051 1.434.052 2.566.052h5.2c1.133 0 1.937 0 2.566-.052c.62-.05 1.005-.147 1.31-.302a3.25 3.25 0 0 0 1.42-1.42c.155-.305.251-.69.302-1.31c.051-.63.052-1.434.052-2.566v-2.1a.75.75 0 0 1 1.5 0v2.133c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057m5.383 3.5a3.5 3.5 0 1 1 7 0a3.5 3.5 0 0 1-7 0"/>`), g.Group(children),
	)
}

func Octagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M7.805 3.469C8.16 3.115 8.451 3 8.937 3h6.126c.486 0 .778.115 1.132.469l4.336 4.336c.354.354.469.646.469 1.132v6.126c0 .5-.125.788-.469 1.132l-4.336 4.336c-.354.354-.646.469-1.132.469H8.937c-.5 0-.788-.125-1.132-.469L3.47 16.195c-.355-.355-.47-.646-.47-1.132V8.937c0-.5.125-.788.469-1.132z"/>`), g.Group(children),
	)
}

func OctagonCheck(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M7.805 3.469C8.16 3.115 8.451 3 8.937 3h6.126c.486 0 .778.115 1.132.469l4.336 4.336c.354.354.469.646.469 1.132v6.126c0 .5-.125.788-.469 1.132l-4.336 4.336c-.354.354-.646.469-1.132.469H8.937c-.5 0-.788-.125-1.132-.469L3.47 16.195c-.355-.355-.47-.646-.47-1.132V8.937c0-.5.125-.788.469-1.132L7.805 3.47Z"/><path d="m8.667 12.833l1.505 1.721a1 1 0 0 0 1.564-.073L15.333 9.5"/></g>`), g.Group(children),
	)
}

func OctagonDanger(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M7.805 3.469C8.16 3.115 8.451 3 8.937 3h6.126c.486 0 .778.115 1.132.469l4.336 4.336c.354.354.469.646.469 1.132v6.126c0 .5-.125.788-.469 1.132l-4.336 4.336c-.354.354-.646.469-1.132.469H8.937c-.5 0-.788-.125-1.132-.469L3.47 16.195c-.355-.355-.47-.646-.47-1.132V8.937c0-.5.125-.788.469-1.132L7.805 3.47ZM12 7.627v5.5m0 3.246v-.5"/>`), g.Group(children),
	)
}

func OctagonInfo(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M7.805 3.469C8.16 3.115 8.451 3 8.937 3h6.126c.486 0 .778.115 1.132.469l4.336 4.336c.354.354.469.646.469 1.132v6.126c0 .5-.125.788-.469 1.132l-4.336 4.336c-.354.354-.646.469-1.132.469H8.937c-.5 0-.788-.125-1.132-.469L3.47 16.195c-.355-.355-.47-.646-.47-1.132V8.937c0-.5.125-.788.469-1.132L7.805 3.47Z"/><path d="M12 16v-5h-.5m0 5h1M12 8.5V8"/></g>`), g.Group(children),
	)
}

func OctagonMinus(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M7.805 3.469C8.16 3.115 8.451 3 8.937 3h6.126c.486 0 .778.115 1.132.469l4.336 4.336c.354.354.469.646.469 1.132v6.126c0 .5-.125.788-.469 1.132l-4.336 4.336c-.354.354-.646.469-1.132.469H8.937c-.5 0-.788-.125-1.132-.469L3.47 16.195c-.355-.355-.47-.646-.47-1.132V8.937c0-.5.125-.788.469-1.132L7.805 3.47ZM8.5 12h7"/>`), g.Group(children),
	)
}

func OctagonPlus(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M7.805 3.469C8.16 3.115 8.451 3 8.937 3h6.126c.486 0 .778.115 1.132.469l4.336 4.336c.354.354.469.646.469 1.132v6.126c0 .5-.125.788-.469 1.132l-4.336 4.336c-.354.354-.646.469-1.132.469H8.937c-.5 0-.788-.125-1.132-.469L3.47 16.195c-.355-.355-.47-.646-.47-1.132V8.937c0-.5.125-.788.469-1.132L7.805 3.47ZM15.5 12H12m0 0H8.5m3.5 0V8.5m0 3.5v3.5"/>`), g.Group(children),
	)
}

func OctagonSlash(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M7.805 3.469C8.16 3.115 8.451 3 8.937 3h6.126c.486 0 .778.115 1.132.469l4.336 4.336c.354.354.469.646.469 1.132v6.126c0 .5-.125.788-.469 1.132l-4.336 4.336c-.354.354-.646.469-1.132.469H8.937c-.5 0-.788-.125-1.132-.469L3.47 16.195c-.355-.355-.47-.646-.47-1.132V8.937c0-.5.125-.788.469-1.132L7.805 3.47ZM9 15l6-6"/>`), g.Group(children),
	)
}

func OctagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.937 2.25a2.3 2.3 0 0 0-.9.158c-.299.122-.54.31-.762.53L2.938 7.275c-.213.214-.4.45-.525.748a2.3 2.3 0 0 0-.163.914v6.126c0 .302.036.602.158.9s.31.54.53.762l4.337 4.337c.214.213.45.4.748.524c.298.125.601.164.914.164h6.126c.302 0 .602-.035.9-.158c.299-.122.54-.31.762-.53l4.337-4.337c.213-.214.4-.45.524-.748a2.3 2.3 0 0 0 .164-.914V8.937a2.3 2.3 0 0 0-.158-.9a2.3 2.3 0 0 0-.53-.762l-4.337-4.337a2.3 2.3 0 0 0-.762-.53a2.3 2.3 0 0 0-.9-.158z"/>`), g.Group(children),
	)
}

func OctagonX(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M7.805 3.469C8.16 3.115 8.451 3 8.937 3h6.126c.486 0 .778.115 1.132.469l4.336 4.336c.354.354.469.646.469 1.132v6.126c0 .5-.125.788-.469 1.132l-4.336 4.336c-.354.354-.646.469-1.132.469H8.937c-.5 0-.788-.125-1.132-.469L3.47 16.195c-.355-.355-.47-.646-.47-1.132V8.937c0-.5.125-.788.469-1.132L7.805 3.47ZM15 9l-6 6m0-6l6 6"/>`), g.Group(children),
	)
}

func One(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M12.438 17V7L9 9.5"/>`), g.Group(children),
	)
}

func OneCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/><path d="M12.75 16V8L10 10"/></g>`), g.Group(children),
	)
}

func OneCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12M13.5 8a.75.75 0 0 0-1.191-.607l-2.75 2a.75.75 0 1 0 .882 1.214l1.56-1.134V16a.75.75 0 1 0 1.5 0z"/>`), g.Group(children),
	)
}

func OneDiamond(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M12.75 16V8L10 10"/><path d="M2.707 10.295a2.41 2.41 0 0 0 0 3.41l7.588 7.588a2.41 2.41 0 0 0 3.41 0l7.588-7.588a2.41 2.41 0 0 0 0-3.41l-7.588-7.588a2.41 2.41 0 0 0-3.41 0z"/></g>`), g.Group(children),
	)
}

func OneDiamondSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.79 1.49a3.16 3.16 0 0 1 3.445.687l7.588 7.588a3.16 3.16 0 0 1 0 4.47l-7.588 7.588a3.16 3.16 0 0 1-4.47 0l-7.588-7.588a3.16 3.16 0 0 1 0-4.47l7.588-7.589a3.2 3.2 0 0 1 1.025-.685M13.5 8a.75.75 0 0 0-1.191-.607l-2.75 2a.75.75 0 1 0 .882 1.214l1.56-1.134V16a.75.75 0 1 0 1.5 0z"/>`), g.Group(children),
	)
}

func OneHexagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M12.75 16V8L10 10"/><path d="M20.5 15.8V8.2a1.91 1.91 0 0 0-.944-1.645l-6.612-3.8a1.88 1.88 0 0 0-1.888 0l-6.612 3.8A1.9 1.9 0 0 0 3.5 8.2v7.602a1.91 1.91 0 0 0 .944 1.644l6.612 3.8a1.88 1.88 0 0 0 1.888 0l6.612-3.8A1.9 1.9 0 0 0 20.5 15.8"/></g>`), g.Group(children),
	)
}

func OneHexagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.68 2.105a2.63 2.63 0 0 1 2.64 0l.001.001l6.611 3.8A2.65 2.65 0 0 1 21.25 8.2v7.603a2.66 2.66 0 0 1-1.318 2.291l-.003.002l-6.608 3.799h-.002a2.63 2.63 0 0 1-2.639 0h-.001l-6.608-3.8h-.003A2.64 2.64 0 0 1 2.75 15.8V8.198a2.66 2.66 0 0 1 1.318-2.291l.003-.002zM13.5 8a.75.75 0 0 0-1.191-.607l-2.75 2a.75.75 0 1 0 .882 1.214l1.56-1.134V16a.75.75 0 1 0 1.5 0z"/>`), g.Group(children),
	)
}

func OneOctagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M12.75 16V8L10 10"/><path d="M7.805 3.469C8.16 3.115 8.451 3 8.937 3h6.126c.486 0 .778.115 1.132.469l4.336 4.336c.354.354.469.646.469 1.132v6.126c0 .5-.125.788-.469 1.132l-4.336 4.336c-.354.354-.646.469-1.132.469H8.937c-.5 0-.788-.125-1.132-.469L3.47 16.195c-.355-.355-.47-.646-.47-1.132V8.937c0-.5.125-.788.469-1.132z"/></g>`), g.Group(children),
	)
}

func OneOctagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.037 2.408a2.3 2.3 0 0 1 .9-.158h6.126c.302 0 .602.036.9.158s.54.31.762.53l4.337 4.337c.22.221.408.463.53.762c.123.298.158.598.158.9v6.126c0 .313-.039.616-.163.914a2.3 2.3 0 0 1-.525.748l-4.337 4.337a2.3 2.3 0 0 1-.762.53a2.3 2.3 0 0 1-.9.158H8.937c-.313 0-.616-.039-.914-.163a2.3 2.3 0 0 1-.748-.525l-4.337-4.337a2.3 2.3 0 0 1-.53-.762a2.3 2.3 0 0 1-.158-.9V8.937c0-.313.039-.616.163-.914a2.3 2.3 0 0 1 .525-.748l4.337-4.337c.221-.22.463-.408.762-.53M13.5 8a.75.75 0 0 0-1.191-.607l-2.75 2a.75.75 0 1 0 .882 1.214l1.56-1.134V16a.75.75 0 1 0 1.5 0z"/>`), g.Group(children),
	)
}

func OneSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12.778 6.332a.75.75 0 0 1 .41.668v10a.75.75 0 0 1-1.5 0V8.473L9.44 10.107a.75.75 0 0 1-.882-1.214l3.437-2.5a.75.75 0 0 1 .782-.061"/>`), g.Group(children),
	)
}

func OneSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M12.75 16V8L10 10"/><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/></g>`), g.Group(children),
	)
}

func OneSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057M13.5 8a.75.75 0 0 0-1.191-.607l-2.75 2a.75.75 0 1 0 .882 1.214l1.56-1.134V16a.75.75 0 1 0 1.5 0z"/>`), g.Group(children),
	)
}

func OneWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M12.75 16V8L10 10"/><path d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83"/></g>`), g.Group(children),
	)
}

func OneWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.565 2.075a3.33 3.33 0 0 1 2.87 0c.394.189.755.497 1.26.928l.079.066c.48.41.939.604 1.58.655l.102.008c.662.053 1.135.09 1.547.236a3.33 3.33 0 0 1 2.03 2.029c.145.412.182.885.235 1.547l.008.102c.051.641.246 1.1.655 1.58l.066.078c.431.506.74.867.928 1.261a3.33 3.33 0 0 1 0 2.87c-.189.394-.497.755-.928 1.26l-.066.079c-.418.49-.605.951-.655 1.58l-.008.102c-.053.662-.09 1.135-.236 1.547a3.33 3.33 0 0 1-2.029 2.03c-.412.145-.885.182-1.547.235l-.102.008c-.641.051-1.1.246-1.58.655l-.079.066c-.505.431-.866.74-1.26.928a3.33 3.33 0 0 1-2.87 0c-.394-.189-.755-.497-1.26-.928l-.079-.066a2.56 2.56 0 0 0-1.58-.655l-.102-.008c-.662-.053-1.135-.09-1.547-.236a3.33 3.33 0 0 1-2.03-2.029c-.145-.412-.182-.885-.235-1.547l-.008-.102a2.56 2.56 0 0 0-.655-1.58l-.066-.079c-.431-.505-.74-.866-.928-1.26a3.33 3.33 0 0 1 0-2.87c.189-.394.497-.755.928-1.26l.066-.079a2.56 2.56 0 0 0 .655-1.58l.008-.102c.053-.662.09-1.135.236-1.547a3.33 3.33 0 0 1 2.029-2.03c.412-.145.885-.182 1.547-.235l.102-.008a2.56 2.56 0 0 0 1.58-.655l.078-.066c.506-.431.867-.74 1.261-.928M13.5 8a.75.75 0 0 0-1.191-.607l-2.75 2a.75.75 0 1 0 .882 1.214l1.56-1.134V16a.75.75 0 1 0 1.5 0z"/>`), g.Group(children),
	)
}

func Option(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3 7h5.094c.33 0 .495 0 .643.047q.2.064.357.202c.117.103.202.245.372.528l5.068 8.446c.17.284.255.425.372.528q.156.137.356.202c.148.047.314.047.644.047H21M15 7h6"/>`), g.Group(children),
	)
}

func OptionSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.44 7.755a7 7 0 0 0-.346-.005H3a.75.75 0 0 1 0-1.5h5.16c.262 0 .542-.001.805.083c.23.073.442.193.624.353c.208.183.352.424.487.65l.033.055l5.068 8.446c.089.15.14.233.182.295l.042.056a.3.3 0 0 0 .088.05l.07.007c.075.005.174.005.347.005H21a.75.75 0 1 1 0 1.5h-5.159c-.262 0-.544.001-.807-.083a1.75 1.75 0 0 1-.624-.353c-.208-.183-.351-.424-.486-.65l-.034-.055l-5.066-8.446a7 7 0 0 0-.182-.295l-.043-.056m-.158-.057l.07.007zM14.25 7a.75.75 0 0 1 .75-.75h6a.75.75 0 0 1 0 1.5h-6a.75.75 0 0 1-.75-.75"/>`), g.Group(children),
	)
}

func Package(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m12 21l8.131-4.208c.316-.164.474-.245.589-.366a1 1 0 0 0 .226-.373c.054-.159.054-.336.054-.692V7.533M12 21l-8.131-4.208c-.316-.164-.474-.245-.589-.366a1 1 0 0 1-.226-.373C3 15.894 3 15.716 3 15.359V7.533M12 21v-9.063m9-4.404l-9 4.404m9-4.404l-4.5-2.33M3 7.534l8.269-4.28c.268-.138.401-.208.542-.235a1 1 0 0 1 .378 0c.14.027.274.097.541.235l3.77 1.95M3 7.534l4.5 2.202m4.5 2.202L7.5 9.735m0 0l9-4.531m-9 4.531v2.202"/>`), g.Group(children),
	)
}

func PackageSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M11.669 2.282c.218-.043.443-.043.662 0c.251.048.479.167.691.277l.053.028l8.27 4.28a.75.75 0 0 1 .405.666v7.897c0 .283.002.583-.093.862a1.8 1.8 0 0 1-.395.652c-.205.214-.473.351-.723.48l-.063.033l-8.131 4.208a.75.75 0 0 1-.69 0l-8.131-4.208l-.063-.033c-.25-.129-.518-.266-.723-.48a1.8 1.8 0 0 1-.395-.652c-.095-.28-.094-.58-.093-.863V7.533a.75.75 0 0 1 .405-.666l8.269-4.28l.053-.027c.213-.111.44-.23.692-.278m.226 1.496a7 7 0 0 0-.282.141L4.668 7.514l2.827 1.384l7.356-3.703l-2.465-1.276a7 7 0 0 0-.282-.141l-.058-.024m4.45 2.292l-7.31 3.68L12 11.102l7.332-3.588zm-5.246 13.72v-7.36l-3-1.469v1a.75.75 0 0 1-1.5 0v-1.734l-3-1.468v6.624c0 .187 0 .294.005.375l.009.078a.3.3 0 0 0 .057.095c.005.004.021.017.064.042c.068.042.163.09.328.176zm.645-15.988l.06-.024z"/>`), g.Group(children),
	)
}

func Paint(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M16.5 5.5h1c1.105 0 2 .395 2 1.5v2a2 2 0 0 1-2 2h-7a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h1m5-15.5V4a1 1 0 0 0-1-1h-10a1 1 0 0 0-1 1v3a1 1 0 0 0 1 1h10a1 1 0 0 0 1-1z"/>`), g.Group(children),
	)
}

func PaintSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M5.5 2.25A1.75 1.75 0 0 0 3.75 4v3c0 .966.784 1.75 1.75 1.75h10A1.75 1.75 0 0 0 17.25 7v-.75h.25c.483 0 .815.09 1.003.213c.14.092.247.225.247.537v2c0 .69-.56 1.25-1.25 1.25h-7A1.75 1.75 0 0 0 8.75 12v8c0 .966.784 1.75 1.75 1.75h1a.75.75 0 0 0 0-1.5h-1a.25.25 0 0 1-.25-.25v-8a.25.25 0 0 1 .25-.25h7A2.75 2.75 0 0 0 20.25 9V7c0-.792-.34-1.41-.925-1.792c-.536-.35-1.204-.458-1.825-.458h-.25V4a1.75 1.75 0 0 0-1.75-1.75z"/>`), g.Group(children),
	)
}

func PanelBottom(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3.5 15h17M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/>`), g.Group(children),
	)
}

func PanelBottomClose(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M3.5 15h17M15 8l-3 3l-3-3"/><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/></g>`), g.Group(children),
	)
}

func PanelBottomCloseSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057m-5.614 13.5c.005.564.017 1.024.049 1.416c.05.62.147 1.005.302 1.31a3.25 3.25 0 0 0 1.42 1.42c.305.155.69.251 1.31.302c.63.051 1.434.052 2.566.052h5.2c1.133 0 1.937 0 2.566-.052c.62-.05 1.005-.147 1.31-.302a3.25 3.25 0 0 0 1.42-1.42c.155-.305.251-.69.302-1.31c.032-.392.044-.852.05-1.416zM8.47 7.47a.75.75 0 0 0 0 1.06l3 3a.75.75 0 0 0 1.06 0l3-3a.75.75 0 0 0-1.06-1.06L12 9.94L9.53 7.47a.75.75 0 0 0-1.06 0"/>`), g.Group(children),
	)
}

func PanelBottomInactive(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M14 15h1m4 0h1.5m-17 0H5m4 0h1M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/>`), g.Group(children),
	)
}

func PanelBottomInactiveSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25c-1.092 0-1.958 0-2.655.057c-.714.058-1.317.18-1.868.46a4.75 4.75 0 0 0-2.076 2.077c-.281.55-.403 1.154-.461 1.868c-.057.697-.057 1.563-.057 2.655v5.266c0 1.092 0 1.958.057 2.655c.058.714.18 1.317.46 1.869a4.75 4.75 0 0 0 2.077 2.075c.55.281 1.154.403 1.868.461c.697.057 1.563.057 2.655.057h5.266c1.092 0 1.958 0 2.655-.057c.714-.058 1.317-.18 1.869-.46a4.75 4.75 0 0 0 2.075-2.076c.281-.552.403-1.155.461-1.869c.057-.697.057-1.563.057-2.655V9.367c0-1.092 0-1.958-.057-2.655c-.058-.714-.18-1.317-.46-1.868a4.75 4.75 0 0 0-2.076-2.076c-.552-.281-1.155-.403-1.869-.461c-.697-.057-1.563-.057-2.655-.057zM2.75 15a.75.75 0 0 1 .75-.75H5a.75.75 0 0 1 0 1.5H3.5a.75.75 0 0 1-.75-.75m5.5 0a.75.75 0 0 1 .75-.75h1a.75.75 0 0 1 0 1.5H9a.75.75 0 0 1-.75-.75m5.75-.75h1a.75.75 0 0 1 0 1.5h-1a.75.75 0 0 1 0-1.5m4.25.75a.75.75 0 0 1 .75-.75h1.5a.75.75 0 0 1 0 1.5H19a.75.75 0 0 1-.75-.75"/>`), g.Group(children),
	)
}

func PanelBottomOpen(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M3.5 15h17M9 10l3-3l3 3"/><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/></g>`), g.Group(children),
	)
}

func PanelBottomOpenSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057m10.88 13.5H3.753c.005.564.017 1.024.049 1.416c.05.62.147 1.005.302 1.31a3.25 3.25 0 0 0 1.42 1.42c.305.155.69.251 1.31.302c.63.051 1.434.052 2.566.052h5.2c1.133 0 1.937 0 2.566-.052c.62-.05 1.005-.147 1.31-.302a3.25 3.25 0 0 0 1.42-1.42c.155-.305.251-.69.302-1.31c.032-.392.044-.852.05-1.416M11.47 6.47l-3 3a.75.75 0 1 0 1.06 1.06L12 8.06l2.47 2.47a.75.75 0 1 0 1.06-1.06l-3-3a.75.75 0 0 0-1.06 0"/>`), g.Group(children),
	)
}

func PanelBottomSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057m10.88 13.5H3.753c.005.564.017 1.024.049 1.416c.05.62.147 1.005.302 1.31a3.25 3.25 0 0 0 1.42 1.42c.305.155.69.251 1.31.302c.63.051 1.434.052 2.566.052h5.2c1.133 0 1.937 0 2.566-.052c.62-.05 1.005-.147 1.31-.302a3.25 3.25 0 0 0 1.42-1.42c.155-.305.251-.69.302-1.31c.032-.392.044-.852.05-1.416"/>`), g.Group(children),
	)
}

func PanelLeft(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9 3.5v17M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/>`), g.Group(children),
	)
}

func PanelLeftClose(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9 3.5v17m7-5.5l-3-3l3-3"/><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/></g>`), g.Group(children),
	)
}

func PanelLeftCloseSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057M6.834 3.802c-.62.05-1.005.147-1.31.302a3.25 3.25 0 0 0-1.42 1.42c-.155.305-.251.69-.302 1.31c-.051.63-.052 1.434-.052 2.566v5.2c0 1.133 0 1.937.052 2.566c.05.62.147 1.005.302 1.31a3.25 3.25 0 0 0 1.42 1.42c.305.155.69.251 1.31.302c.392.032.851.044 1.416.05V3.752c-.565.005-1.024.017-1.416.049M16.53 8.47a.75.75 0 0 0-1.06 0l-3 3a.75.75 0 0 0 0 1.06l3 3a.75.75 0 1 0 1.06-1.06L14.06 12l2.47-2.47a.75.75 0 0 0 0-1.06"/>`), g.Group(children),
	)
}

func PanelLeftInactive(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9 14v1m0 4v1.5m0-17V5m0 4v1m-6-.6c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/>`), g.Group(children),
	)
}

func PanelLeftInactiveSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25c-1.092 0-1.958 0-2.655.057c-.714.058-1.317.18-1.868.46a4.75 4.75 0 0 0-2.076 2.077c-.281.55-.403 1.154-.461 1.868c-.057.697-.057 1.563-.057 2.655v5.266c0 1.092 0 1.958.057 2.655c.058.714.18 1.317.46 1.869a4.75 4.75 0 0 0 2.077 2.075c.55.281 1.154.403 1.868.461c.697.057 1.563.057 2.655.057h5.266c1.092 0 1.958 0 2.655-.057c.714-.058 1.317-.18 1.869-.46a4.75 4.75 0 0 0 2.075-2.076c.281-.552.403-1.155.461-1.869c.057-.697.057-1.563.057-2.655V9.367c0-1.092 0-1.958-.057-2.655c-.058-.714-.18-1.317-.46-1.868a4.75 4.75 0 0 0-2.076-2.076c-.552-.281-1.155-.403-1.869-.461c-.697-.057-1.563-.057-2.655-.057zM9 2.75a.75.75 0 0 1 .75.75V5a.75.75 0 0 1-1.5 0V3.5A.75.75 0 0 1 9 2.75m0 5.5a.75.75 0 0 1 .75.75v1a.75.75 0 0 1-1.5 0V9A.75.75 0 0 1 9 8.25M9.75 14v1a.75.75 0 0 1-1.5 0v-1a.75.75 0 0 1 1.5 0M9 18.25a.75.75 0 0 1 .75.75v1.5a.75.75 0 0 1-1.5 0V19a.75.75 0 0 1 .75-.75"/>`), g.Group(children),
	)
}

func PanelLeftOpen(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9 3.5v17M14 9l3 3l-3 3"/><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/></g>`), g.Group(children),
	)
}

func PanelLeftOpenSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057M6.834 3.802c-.62.05-1.005.147-1.31.302a3.25 3.25 0 0 0-1.42 1.42c-.155.305-.251.69-.302 1.31c-.051.63-.052 1.434-.052 2.566v5.2c0 1.133 0 1.937.052 2.566c.05.62.147 1.005.302 1.31a3.25 3.25 0 0 0 1.42 1.42c.305.155.69.251 1.31.302c.392.032.851.044 1.416.05V3.752c-.565.005-1.024.017-1.416.049M13.47 8.47a.75.75 0 0 0 0 1.06L15.94 12l-2.47 2.47a.75.75 0 1 0 1.06 1.06l3-3a.75.75 0 0 0 0-1.06l-3-3a.75.75 0 0 0-1.06 0"/>`), g.Group(children),
	)
}

func PanelLeftSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057M6.834 3.802c-.62.05-1.005.147-1.31.302a3.25 3.25 0 0 0-1.42 1.42c-.155.305-.251.69-.302 1.31c-.051.63-.052 1.434-.052 2.566v5.2c0 1.133 0 1.937.052 2.566c.05.62.147 1.005.302 1.31a3.25 3.25 0 0 0 1.42 1.42c.305.155.69.251 1.31.302c.392.032.851.044 1.416.05V3.752c-.565.005-1.024.017-1.416.049"/>`), g.Group(children),
	)
}

func PanelRight(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M15 3.5v17M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/>`), g.Group(children),
	)
}

func PanelRightClose(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M15 3.5v17M8 9l3 3l-3 3"/><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/></g>`), g.Group(children),
	)
}

func PanelRightCloseSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057m6.383 17.997a20 20 0 0 0 1.416-.049c.62-.05 1.005-.147 1.31-.302a3.25 3.25 0 0 0 1.42-1.42c.155-.305.251-.69.302-1.31c.051-.63.052-1.434.052-2.566V9.4c0-1.132 0-1.937-.052-2.566c-.05-.62-.147-1.005-.302-1.31a3.25 3.25 0 0 0-1.42-1.42c-.305-.155-.69-.251-1.31-.302a20 20 0 0 0-1.416-.05zM7.47 8.47a.75.75 0 0 0 0 1.06L9.94 12l-2.47 2.47a.75.75 0 1 0 1.06 1.06l3-3a.75.75 0 0 0 0-1.06l-3-3a.75.75 0 0 0-1.06 0"/>`), g.Group(children),
	)
}

func PanelRightInactive(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M15 14v1m0 4v1.5m0-17V5m0 4v1M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/>`), g.Group(children),
	)
}

func PanelRightInactiveSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25c-1.092 0-1.958 0-2.655.057c-.714.058-1.317.18-1.868.46a4.75 4.75 0 0 0-2.076 2.077c-.281.55-.403 1.154-.461 1.868c-.057.697-.057 1.563-.057 2.655v5.266c0 1.092 0 1.958.057 2.655c.058.714.18 1.317.46 1.869a4.75 4.75 0 0 0 2.077 2.075c.55.281 1.154.403 1.868.461c.697.057 1.563.057 2.655.057h5.266c1.092 0 1.958 0 2.655-.057c.714-.058 1.317-.18 1.869-.46a4.75 4.75 0 0 0 2.075-2.076c.281-.552.403-1.155.461-1.869c.057-.697.057-1.563.057-2.655V9.367c0-1.092 0-1.958-.057-2.655c-.058-.714-.18-1.317-.46-1.868a4.75 4.75 0 0 0-2.076-2.076c-.552-.281-1.155-.403-1.869-.461c-.697-.057-1.563-.057-2.655-.057zm5.633.5a.75.75 0 0 1 .75.75V5a.75.75 0 0 1-1.5 0V3.5a.75.75 0 0 1 .75-.75m0 5.5a.75.75 0 0 1 .75.75v1a.75.75 0 0 1-1.5 0V9a.75.75 0 0 1 .75-.75m.75 5.75v1a.75.75 0 0 1-1.5 0v-1a.75.75 0 0 1 1.5 0M15 18.25a.75.75 0 0 1 .75.75v1.5a.75.75 0 0 1-1.5 0V19a.75.75 0 0 1 .75-.75"/>`), g.Group(children),
	)
}

func PanelRightOpen(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M15 3.5v17M10 15l-3-3l3-3"/><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/></g>`), g.Group(children),
	)
}

func PanelRightOpenSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057m6.383 1.503v16.494a20 20 0 0 0 1.416-.049c.62-.05 1.005-.147 1.31-.302a3.25 3.25 0 0 0 1.42-1.42c.155-.305.251-.69.302-1.31c.051-.63.052-1.434.052-2.566V9.4c0-1.132 0-1.937-.052-2.566c-.05-.62-.147-1.005-.302-1.31a3.25 3.25 0 0 0-1.42-1.42c-.305-.155-.69-.251-1.31-.302a20 20 0 0 0-1.416-.05M10.53 8.47a.75.75 0 0 0-1.06 0l-3 3a.75.75 0 0 0 0 1.06l3 3a.75.75 0 1 0 1.06-1.06L8.06 12l2.47-2.47a.75.75 0 0 0 0-1.06"/>`), g.Group(children),
	)
}

func PanelRightSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057m6.383 1.503v16.494a20 20 0 0 0 1.416-.049c.62-.05 1.005-.147 1.31-.302a3.25 3.25 0 0 0 1.42-1.42c.155-.305.251-.69.302-1.31c.051-.63.052-1.434.052-2.566V9.4c0-1.132 0-1.937-.052-2.566c-.05-.62-.147-1.005-.302-1.31a3.25 3.25 0 0 0-1.42-1.42c-.305-.155-.69-.251-1.31-.302a20 20 0 0 0-1.416-.05"/>`), g.Group(children),
	)
}

func PanelTop(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3.5 9h17M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/>`), g.Group(children),
	)
}

func PanelTopClose(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M3.5 9h17M9 16l3-3l3 3"/><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/></g>`), g.Group(children),
	)
}

func PanelTopCloseSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057M6.834 3.802c-.62.05-1.005.147-1.31.302a3.25 3.25 0 0 0-1.42 1.42c-.155.305-.251.69-.302 1.31c-.032.392-.044.851-.05 1.416h16.495a20 20 0 0 0-.049-1.416c-.05-.62-.147-1.005-.302-1.31a3.25 3.25 0 0 0-1.42-1.42c-.305-.155-.69-.251-1.31-.302c-.63-.051-1.434-.052-2.566-.052H9.4c-1.132 0-1.937 0-2.566.052m4.636 8.668l-3 3a.75.75 0 1 0 1.06 1.06L12 14.06l2.47 2.47a.75.75 0 1 0 1.06-1.06l-3-3a.75.75 0 0 0-1.06 0"/>`), g.Group(children),
	)
}

func PanelTopInactive(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M14 9h1m4 0h1.5m-17 0H5m4 0h1m-7 .4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/>`), g.Group(children),
	)
}

func PanelTopInactiveSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057M2.75 9c0 .414.336.75.75.75H5a.75.75 0 0 0 0-1.5H3.5a.75.75 0 0 0-.75.75m5.5 0c0 .414.336.75.75.75h1a.75.75 0 0 0 0-1.5H9a.75.75 0 0 0-.75.75M14 8.25a.75.75 0 0 0 0 1.5h1a.75.75 0 0 0 0-1.5zm4.25.75c0 .414.336.75.75.75h1.5a.75.75 0 0 0 0-1.5H19a.75.75 0 0 0-.75.75"/>`), g.Group(children),
	)
}

func PanelTopOpen(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M3.5 9h17M15 14l-3 3l-3-3"/><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/></g>`), g.Group(children),
	)
}

func PanelTopOpenSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25c-1.092 0-1.958 0-2.655.057c-.714.058-1.317.18-1.868.46a4.75 4.75 0 0 0-2.076 2.077c-.281.55-.403 1.154-.461 1.868c-.057.697-.057 1.563-.057 2.655v5.266c0 1.092 0 1.958.057 2.655c.058.714.18 1.317.46 1.869a4.75 4.75 0 0 0 2.077 2.075c.55.281 1.154.403 1.868.461c.697.057 1.563.057 2.655.057h5.266c1.092 0 1.958 0 2.655-.057c.714-.058 1.317-.18 1.869-.46a4.75 4.75 0 0 0 2.075-2.076c.281-.552.403-1.155.461-1.869c.057-.697.057-1.563.057-2.655V9.367c0-1.092 0-1.958-.057-2.655c-.058-.714-.18-1.317-.46-1.868a4.75 4.75 0 0 0-2.076-2.076c-.552-.281-1.155-.403-1.869-.461c-.697-.057-1.563-.057-2.655-.057zM6.834 3.802c.63-.051 1.434-.052 2.566-.052h5.2c1.133 0 1.937 0 2.566.052c.62.05 1.005.147 1.31.302a3.25 3.25 0 0 1 1.42 1.42c.155.305.251.69.302 1.31c.032.392.044.851.05 1.416H3.752c.005-.565.017-1.024.049-1.416c.05-.62.147-1.005.302-1.31a3.25 3.25 0 0 1 1.42-1.42c.305-.155.69-.251 1.31-.302M8.47 13.47a.75.75 0 0 1 1.06 0L12 15.94l2.47-2.47a.75.75 0 1 1 1.06 1.06l-3 3a.75.75 0 0 1-1.06 0l-3-3a.75.75 0 0 1 0-1.06"/>`), g.Group(children),
	)
}

func PanelTopSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057M6.834 3.802c-.62.05-1.005.147-1.31.302a3.25 3.25 0 0 0-1.42 1.42c-.155.305-.251.69-.302 1.31c-.032.392-.044.851-.05 1.416h16.495a20 20 0 0 0-.049-1.416c-.05-.62-.147-1.005-.302-1.31a3.25 3.25 0 0 0-1.42-1.42c-.305-.155-.69-.251-1.31-.302c-.63-.051-1.434-.052-2.566-.052H9.4c-1.132 0-1.937 0-2.566.052"/>`), g.Group(children),
	)
}

func Paperclip(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m3.845 10.224l5.739-5.53c5.429-5.237 14.246 2.843 8.596 8.294l-7.112 6.862c-3.684 3.554-9.667-1.929-5.833-5.628l7.01-6.763c1.939-1.87 5.087 1.015 3.07 2.962L9.492 16"/>`), g.Group(children),
	)
}

func PaperclipSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M17.523 5.38c-1.966-1.849-5.065-2.416-7.418-.146l-5.74 5.53a.75.75 0 1 1-1.04-1.08l5.738-5.53c3.076-2.966 7.1-2.112 9.487.133c1.2 1.127 2.047 2.65 2.181 4.309c.137 1.682-.468 3.425-2.03 4.932l-7.112 6.862c-2.203 2.125-5.083 1.5-6.77-.088c-.85-.798-1.459-1.884-1.556-3.08c-.098-1.218.343-2.47 1.451-3.54l7.01-6.763c1.33-1.283 3.065-.886 4.053.043c.5.47.87 1.12.93 1.851c.06.755-.217 1.517-.872 2.148l-.001.002l-5.823 5.579a.75.75 0 0 1-1.038-1.084l5.821-5.577c.355-.342.44-.671.417-.946c-.024-.3-.184-.619-.461-.88c-.567-.533-1.376-.643-1.985-.056l-7.01 6.763c-.808.78-1.056 1.6-.997 2.34c.062.761.46 1.517 1.088 2.108c1.266 1.19 3.22 1.529 4.701.1l7.112-6.862c1.263-1.218 1.675-2.529 1.577-3.731c-.1-1.226-.736-2.418-1.713-3.337"/>`), g.Group(children),
	)
}

func Parking(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M10.5 15v-2.4m0 0h2.276c2.299 0 2.299-3.6 0-3.6H10.5z"/><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/></g>`), g.Group(children),
	)
}

func ParkingSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M12.776 11.85H11.25v-2.1h1.526c.36 0 .58.132.722.299c.155.182.252.452.252.751s-.097.569-.252.751c-.142.167-.363.299-.722.299"/><path d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12m8.25-3.75a.75.75 0 0 0-.75.75v6a.75.75 0 0 0 1.5 0v-1.65h1.526c.79 0 1.431-.318 1.864-.826c.42-.493.61-1.123.61-1.724s-.19-1.231-.61-1.724c-.433-.508-1.075-.826-1.864-.826z"/></g>`), g.Group(children),
	)
}

func Password(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m13.5 9l-3 6m0-6l3 6m-3.75-3h4.5m-7.5-3l-3 6m0-6l3 6M3 12h4.5m12.75-3l-3 6m0-6l3 6m-3.75-3H21"/>`), g.Group(children),
	)
}

func PasswordSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.165 8.33a.75.75 0 0 1 1.006.334L12 10.323l.83-1.659a.75.75 0 1 1 1.34.671l-.957 1.915h1.037a.75.75 0 0 1 0 1.5h-1.037l.958 1.915a.75.75 0 1 1-1.342.67L12 13.677l-.83 1.658a.75.75 0 1 1-1.34-.67l.957-1.915H9.75a.75.75 0 0 1 0-1.5h1.037l-.958-1.915a.75.75 0 0 1 .336-1.006m-6.75 0a.75.75 0 0 1 1.006.335l.829 1.658l.83-1.658a.75.75 0 0 1 1.34.67l-.956 1.915H7.5a.75.75 0 1 1 0 1.5H6.464l.957 1.915a.75.75 0 0 1-1.342.67l-.829-1.658l-.83 1.658a.75.75 0 0 1-1.34-.67l.956-1.915H3a.75.75 0 0 1 0-1.5h1.036L3.08 9.335a.75.75 0 0 1 .336-1.006m13.5 0a.75.75 0 0 1 1.006.335l.829 1.658l.83-1.658a.75.75 0 1 1 1.34.67l-.957 1.915H21a.75.75 0 1 1 0 1.5h-1.037l.958 1.915a.75.75 0 0 1-1.342.67l-.829-1.658l-.83 1.658a.75.75 0 0 1-1.34-.67l.957-1.915H16.5a.75.75 0 0 1 0-1.5h1.037l-.958-1.915a.75.75 0 0 1 .336-1.006"/>`), g.Group(children),
	)
}

func Path(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M8.121 15.879a3 3 0 1 0-4.243 4.243a3 3 0 0 0 4.243-4.243m0 0L15.88 8.12m0 0a3 3 0 1 0 4.243-4.243A3 3 0 0 0 15.88 8.12m0 0l.004-.004"/>`), g.Group(children),
	)
}

func PathSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M18 9.75a3.74 3.74 0 0 1-2.068-.621l-6.803 6.803a3.75 3.75 0 1 1-1.06-1.06l6.802-6.804A3.75 3.75 0 1 1 18 9.75"/>`), g.Group(children),
	)
}

func Pause(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9 6.5H8a1 1 0 0 0-1 1v10a1 1 0 0 0 1 1h1a1 1 0 0 0 1-1v-10a1 1 0 0 0-1-1m6.5 0h-1a1 1 0 0 0-1 1v10a1 1 0 0 0 1 1h1a1 1 0 0 0 1-1v-10a1 1 0 0 0-1-1"/>`), g.Group(children),
	)
}

func PauseCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0M10 9v6m4-6v6"/>`), g.Group(children),
	)
}

func PauseCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12 2.25c-5.385 0-9.75 4.365-9.75 9.75s4.365 9.75 9.75 9.75s9.75-4.365 9.75-9.75S17.385 2.25 12 2.25m-2 6a.75.75 0 0 1 .75.75v6a.75.75 0 0 1-1.5 0V9a.75.75 0 0 1 .75-.75m4.75.75v6a.75.75 0 0 1-1.5 0V9a.75.75 0 0 1 1.5 0"/>`), g.Group(children),
	)
}

func PauseDiamond(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M2.707 10.295a2.41 2.41 0 0 0 0 3.41l7.588 7.588a2.41 2.41 0 0 0 3.41 0l7.588-7.588a2.41 2.41 0 0 0 0-3.41l-7.588-7.588a2.41 2.41 0 0 0-3.41 0zM10 9v6m4-6v6"/>`), g.Group(children),
	)
}

func PauseDiamondSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12 1.25a3.16 3.16 0 0 0-2.235.926L2.177 9.765a3.16 3.16 0 0 0 0 4.47l7.588 7.588a3.16 3.16 0 0 0 4.47 0l7.588-7.588a3.16 3.16 0 0 0 0-4.47l-7.588-7.588A3.16 3.16 0 0 0 12 1.25m-2 7a.75.75 0 0 1 .75.75v6a.75.75 0 0 1-1.5 0V9a.75.75 0 0 1 .75-.75m4.75.75v6a.75.75 0 0 1-1.5 0V9a.75.75 0 0 1 1.5 0"/>`), g.Group(children),
	)
}

func PauseHexagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M20.5 15.8V8.2a1.91 1.91 0 0 0-.944-1.645l-6.612-3.8a1.88 1.88 0 0 0-1.888 0l-6.612 3.8A1.9 1.9 0 0 0 3.5 8.2v7.602a1.91 1.91 0 0 0 .944 1.644l6.612 3.8a1.88 1.88 0 0 0 1.888 0l6.612-3.8A1.9 1.9 0 0 0 20.5 15.8M10 9v6m4-6v6"/>`), g.Group(children),
	)
}

func PauseHexagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12 1.75a2.63 2.63 0 0 0-1.32.355l-6.61 3.8l-.002.002A2.65 2.65 0 0 0 2.75 8.198v7.603a2.64 2.64 0 0 0 1.318 2.292l.003.002l6.608 3.799h.002a2.63 2.63 0 0 0 2.639 0h.001l6.608-3.8h.003A2.65 2.65 0 0 0 21.25 15.8V8.2a2.65 2.65 0 0 0-1.318-2.292l-6.61-3.8l-.002-.002A2.63 2.63 0 0 0 12 1.75m-2 6.5a.75.75 0 0 1 .75.75v6a.75.75 0 0 1-1.5 0V9a.75.75 0 0 1 .75-.75m4.75.75v6a.75.75 0 0 1-1.5 0V9a.75.75 0 0 1 1.5 0"/>`), g.Group(children),
	)
}

func PauseOctagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M7.805 3.469C8.16 3.115 8.451 3 8.937 3h6.126c.486 0 .778.115 1.132.469l4.336 4.336c.354.354.469.646.469 1.132v6.126c0 .5-.125.788-.469 1.132l-4.336 4.336c-.354.354-.646.469-1.132.469H8.937c-.5 0-.788-.125-1.132-.469L3.47 16.195c-.355-.355-.47-.646-.47-1.132V8.937c0-.5.125-.788.469-1.132zM10 9v6m4-6v6"/>`), g.Group(children),
	)
}

func PauseOctagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.937 2.25a2.3 2.3 0 0 0-.9.158c-.299.122-.54.31-.762.53L2.938 7.275c-.213.214-.4.45-.525.748a2.3 2.3 0 0 0-.163.914v6.126c0 .302.036.602.158.9s.31.54.53.762l4.337 4.337c.214.213.45.4.748.524c.298.125.601.164.914.164h6.126c.302 0 .602-.035.9-.158c.299-.122.54-.31.762-.53l4.337-4.337c.213-.214.4-.45.524-.748a2.3 2.3 0 0 0 .164-.914V8.937a2.3 2.3 0 0 0-.158-.9a2.3 2.3 0 0 0-.53-.762l-4.337-4.337a2.3 2.3 0 0 0-.762-.53a2.3 2.3 0 0 0-.9-.158zm1.063 6a.75.75 0 0 1 .75.75v6a.75.75 0 0 1-1.5 0V9a.75.75 0 0 1 .75-.75m4.75.75v6a.75.75 0 0 1-1.5 0V9a.75.75 0 0 1 1.5 0"/>`), g.Group(children),
	)
}

func PauseSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8 5.75A1.75 1.75 0 0 0 6.25 7.5v10c0 .966.784 1.75 1.75 1.75h1a1.75 1.75 0 0 0 1.75-1.75v-10A1.75 1.75 0 0 0 9 5.75zm6.5 0a1.75 1.75 0 0 0-1.75 1.75v10c0 .966.784 1.75 1.75 1.75h1a1.75 1.75 0 0 0 1.75-1.75v-10a1.75 1.75 0 0 0-1.75-1.75z"/>`), g.Group(children),
	)
}

func PauseSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6zm7-.4v6m4-6v6"/>`), g.Group(children),
	)
}

func PauseSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25c-1.092 0-1.958 0-2.655.057c-.714.058-1.317.18-1.868.46a4.75 4.75 0 0 0-2.076 2.077c-.281.55-.403 1.154-.461 1.868c-.057.697-.057 1.563-.057 2.655v5.266c0 1.092 0 1.958.057 2.655c.058.714.18 1.317.46 1.869a4.75 4.75 0 0 0 2.077 2.075c.55.281 1.154.403 1.868.461c.697.057 1.563.057 2.655.057h5.266c1.092 0 1.958 0 2.655-.057c.714-.058 1.317-.18 1.869-.46a4.75 4.75 0 0 0 2.075-2.076c.281-.552.403-1.155.461-1.869c.057-.697.057-1.563.057-2.655V9.367c0-1.092 0-1.958-.057-2.655c-.058-.714-.18-1.317-.46-1.868a4.75 4.75 0 0 0-2.076-2.076c-.552-.281-1.155-.403-1.869-.461c-.697-.057-1.563-.057-2.655-.057zm.633 6a.75.75 0 0 1 .75.75v6a.75.75 0 0 1-1.5 0V9a.75.75 0 0 1 .75-.75m4.75.75v6a.75.75 0 0 1-1.5 0V9a.75.75 0 0 1 1.5 0"/>`), g.Group(children),
	)
}

func PauseWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83M10 9v6m4-6v6"/>`), g.Group(children),
	)
}

func PauseWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M13.435 2.075a3.33 3.33 0 0 0-2.87 0c-.394.189-.755.497-1.26.928l-.079.066a2.56 2.56 0 0 1-1.58.655l-.102.008c-.662.053-1.135.09-1.547.236a3.33 3.33 0 0 0-2.03 2.029c-.145.412-.182.885-.235 1.547l-.008.102a2.56 2.56 0 0 1-.655 1.58l-.066.078c-.431.506-.74.867-.928 1.261a3.33 3.33 0 0 0 0 2.87c.189.394.497.755.928 1.26l.066.079c.41.48.604.939.655 1.58l.008.102c.053.662.09 1.135.236 1.547a3.33 3.33 0 0 0 2.029 2.03c.412.145.885.182 1.547.235l.102.008c.629.05 1.09.238 1.58.655l.078.066c.506.431.867.74 1.261.928a3.33 3.33 0 0 0 2.87 0c.394-.189.755-.497 1.26-.928l.079-.066c.48-.41.939-.604 1.58-.655l.102-.008c.662-.053 1.135-.09 1.547-.236a3.33 3.33 0 0 0 2.03-2.029c.145-.412.182-.885.235-1.547l.008-.102c.05-.629.238-1.09.655-1.58l.066-.079c.431-.505.74-.866.928-1.26a3.33 3.33 0 0 0 0-2.87c-.189-.394-.497-.755-.928-1.26l-.066-.079a2.56 2.56 0 0 1-.655-1.58l-.008-.102c-.053-.662-.09-1.135-.236-1.547a3.33 3.33 0 0 0-2.029-2.03c-.412-.145-.885-.182-1.547-.235l-.102-.008a2.56 2.56 0 0 1-1.58-.655l-.079-.066c-.505-.431-.866-.74-1.26-.928M10 8.25a.75.75 0 0 1 .75.75v6a.75.75 0 0 1-1.5 0V9a.75.75 0 0 1 .75-.75m4.75.75v6a.75.75 0 0 1-1.5 0V9a.75.75 0 0 1 1.5 0"/>`), g.Group(children),
	)
}

func Pen(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m7.63 7.63l3.006 3.006M3.042 4.34l2.616 9.157c.778 2.723 2.933 4.6 5.764 4.6a5.6 5.6 0 0 0 1.264-.148c.392-.09.812-.001 1.097.283l2.46 2.46c.41.41 1.075.41 1.485 0l2.964-2.965a1.05 1.05 0 0 0 0-1.486l-2.455-2.455c-.284-.284-.373-.703-.284-1.094q.143-.624.145-1.27c0-2.832-1.877-4.987-4.6-5.765L4.341 3.042a1.05 1.05 0 0 0-1.3 1.299"/>`), g.Group(children),
	)
}

func PenSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.32 4.547c-.388-1.359.868-2.614 2.227-2.226l9.157 2.616c2.996.856 5.144 3.271 5.144 6.485c0 .49-.058.97-.164 1.437c-.042.185.012.326.083.397l2.456 2.456a1.8 1.8 0 0 1 0 2.546l-2.965 2.965a1.8 1.8 0 0 1-2.546 0l-2.46-2.46c-.07-.071-.212-.125-.397-.082a6.4 6.4 0 0 1-1.433.167c-3.214 0-5.63-2.148-6.485-5.144zM7.1 7.099a.75.75 0 0 0 0 1.061l3.005 3.006a.75.75 0 0 0 1.061-1.06L8.16 7.098a.75.75 0 0 0-1.06 0"/>`), g.Group(children),
	)
}

func Pencil(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M8.8 20.199A2.73 2.73 0 0 1 6.869 21H3v-3.844c0-.724.288-1.419.8-1.931m5 4.974l-5-4.974m5 4.974l9.974-9.978M3.8 15.225l9.984-9.995m0 0l1.426-1.428a2.733 2.733 0 0 1 3.867-.001l1.126 1.127a2.733 2.733 0 0 1 0 3.865l-1.428 1.428M13.783 5.23l4.991 4.991"/>`), g.Group(children),
	)
}

func PencilSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M14.678 3.272a3.483 3.483 0 0 1 4.928-.001l1.127 1.127a3.483 3.483 0 0 1 0 4.925L9.33 20.729a3.48 3.48 0 0 1-2.463 1.021H3a.75.75 0 0 1-.75-.75v-3.844a3.48 3.48 0 0 1 1.019-2.461zm3.867 1.06a1.983 1.983 0 0 0-2.806 0l-.896.897l3.931 3.931l.898-.898a1.983 1.983 0 0 0 0-2.804z"/>`), g.Group(children),
	)
}

func Percentage(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M19 5L5 19m12.5 1c1.667 0 2.5-.857 2.5-3s-.833-3-2.5-3s-2.5.857-2.5 3s.833 3 2.5 3m-11-10C8.167 10 9 9.143 9 7s-.833-3-2.5-3S4 4.857 4 7s.833 3 2.5 3"/>`), g.Group(children),
	)
}

func PercentageCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0M9.854 9.854L9.5 9.5m5.004 5.004l-.354-.354m-4.65.35l5-5"/>`), g.Group(children),
	)
}

func PercentageCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12m7.78-3.03a.75.75 0 1 0-1.06 1.06l.353.354a.75.75 0 1 0 1.06-1.06zm3.59 4.65a.75.75 0 0 0 0 1.06l.353.354a.75.75 0 0 0 1.06-1.06l-.353-.354a.75.75 0 0 0-1.06 0m1.41-3.59a.75.75 0 1 0-1.06-1.06l-5 5a.75.75 0 1 0 1.06 1.06z"/>`), g.Group(children),
	)
}

func PercentageDiamond(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M2.707 10.295a2.41 2.41 0 0 0 0 3.41l7.588 7.588a2.41 2.41 0 0 0 3.41 0l7.588-7.588a2.41 2.41 0 0 0 0-3.41l-7.588-7.588a2.41 2.41 0 0 0-3.41 0zm7.147-.441L9.5 9.5m5.004 5.004l-.354-.354m-4.65.35l5-5"/>`), g.Group(children),
	)
}

func PercentageDiamondSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.79 1.49a3.16 3.16 0 0 1 3.445.687l7.588 7.588a3.16 3.16 0 0 1 0 4.47l-7.588 7.588a3.16 3.16 0 0 1-4.47 0l-7.588-7.588a3.16 3.16 0 0 1 0-4.47l7.588-7.589a3.2 3.2 0 0 1 1.025-.685m-.76 7.48a.75.75 0 1 0-1.06 1.06l.353.354a.75.75 0 1 0 1.06-1.06zm3.59 4.65a.75.75 0 0 0 0 1.06l.353.354a.75.75 0 0 0 1.06-1.06l-.353-.354a.75.75 0 0 0-1.06 0m1.41-3.59a.75.75 0 1 0-1.06-1.06l-5 5a.75.75 0 1 0 1.06 1.06z"/>`), g.Group(children),
	)
}

func PercentageHexagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M20.5 15.8V8.2a1.91 1.91 0 0 0-.944-1.645l-6.612-3.8a1.88 1.88 0 0 0-1.888 0l-6.612 3.8A1.9 1.9 0 0 0 3.5 8.2v7.602a1.91 1.91 0 0 0 .944 1.644l6.612 3.8a1.88 1.88 0 0 0 1.888 0l6.612-3.8A1.9 1.9 0 0 0 20.5 15.8M9.854 9.854L9.5 9.5m5.004 5.004l-.354-.354m-4.65.35l5-5"/>`), g.Group(children),
	)
}

func PercentageHexagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.68 2.105a2.63 2.63 0 0 1 2.64 0l.001.001l6.611 3.8A2.65 2.65 0 0 1 21.25 8.2v7.603a2.66 2.66 0 0 1-1.318 2.291l-.003.002l-6.608 3.799h-.002a2.63 2.63 0 0 1-2.639 0h-.001l-6.608-3.8h-.003A2.64 2.64 0 0 1 2.75 15.8V8.198a2.66 2.66 0 0 1 1.318-2.291l.003-.002zm-.65 6.865a.75.75 0 1 0-1.06 1.06l.353.354a.75.75 0 1 0 1.06-1.06zm3.59 4.65a.75.75 0 0 0 0 1.06l.353.354a.75.75 0 0 0 1.06-1.06l-.353-.354a.75.75 0 0 0-1.06 0m1.41-3.59a.75.75 0 1 0-1.06-1.06l-5 5a.75.75 0 1 0 1.06 1.06z"/>`), g.Group(children),
	)
}

func PercentageOctagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M7.805 3.469C8.16 3.115 8.451 3 8.937 3h6.126c.486 0 .778.115 1.132.469l4.336 4.336c.354.354.469.646.469 1.132v6.126c0 .5-.125.788-.469 1.132l-4.336 4.336c-.354.354-.646.469-1.132.469H8.937c-.5 0-.788-.125-1.132-.469L3.47 16.195c-.355-.355-.47-.646-.47-1.132V8.937c0-.5.125-.788.469-1.132zm2.049 6.385L9.5 9.5m5.004 5.004l-.354-.354m-4.65.35l5-5"/>`), g.Group(children),
	)
}

func PercentageOctagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.037 2.408a2.3 2.3 0 0 1 .9-.158h6.126c.302 0 .602.036.9.158s.54.31.762.53l4.337 4.337c.22.221.408.463.53.762c.123.298.158.598.158.9v6.126c0 .313-.039.616-.163.914a2.3 2.3 0 0 1-.525.748l-4.337 4.337a2.3 2.3 0 0 1-.762.53a2.3 2.3 0 0 1-.9.158H8.937c-.313 0-.616-.039-.914-.163a2.3 2.3 0 0 1-.748-.525l-4.337-4.337a2.3 2.3 0 0 1-.53-.762a2.3 2.3 0 0 1-.158-.9V8.937c0-.313.039-.616.163-.914a2.3 2.3 0 0 1 .525-.748l4.337-4.337c.221-.22.463-.408.762-.53M10.03 8.97a.75.75 0 1 0-1.06 1.06l.353.354a.75.75 0 1 0 1.06-1.06zm3.59 4.65a.75.75 0 0 0 0 1.06l.353.354a.75.75 0 0 0 1.06-1.06l-.353-.354a.75.75 0 0 0-1.06 0m1.41-3.59a.75.75 0 1 0-1.06-1.06l-5 5a.75.75 0 1 0 1.06 1.06z"/>`), g.Group(children),
	)
}

func PercentageSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M4.058 4.206c.61-.707 1.486-.956 2.442-.956s1.831.249 2.442.956c.59.682.808 1.65.808 2.794s-.218 2.112-.808 2.794c-.61.707-1.486.956-2.442.956s-1.831-.249-2.442-.956C3.468 9.112 3.25 8.144 3.25 7s.218-2.112.808-2.794m15.472.264a.75.75 0 0 1 0 1.06l-14 14a.75.75 0 0 1-1.06-1.06l14-14a.75.75 0 0 1 1.06 0m-4.473 9.736c.612-.707 1.487-.956 2.443-.956s1.831.249 2.442.956c.59.682.808 1.65.808 2.794s-.218 2.112-.808 2.794c-.61.707-1.486.956-2.442.956s-1.831-.249-2.443-.956c-.589-.682-.807-1.65-.807-2.794s.218-2.112.807-2.794"/>`), g.Group(children),
	)
}

func PercentageSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6zm6.854.454L9.5 9.5m5.004 5.004l-.354-.354m-4.65.35l5-5"/>`), g.Group(children),
	)
}

func PercentageSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057m.663 6.72a.75.75 0 1 0-1.06 1.06l.353.354a.75.75 0 1 0 1.06-1.06zm3.59 4.65a.75.75 0 0 0 0 1.06l.353.354a.75.75 0 0 0 1.06-1.06l-.353-.354a.75.75 0 0 0-1.06 0m1.41-3.59a.75.75 0 1 0-1.06-1.06l-5 5a.75.75 0 1 0 1.06 1.06z"/>`), g.Group(children),
	)
}

func PercentageWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83m.141 6.213L9.5 9.5m5.004 5.004l-.354-.354m-4.65.35l5-5"/>`), g.Group(children),
	)
}

func PercentageWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.565 2.075a3.33 3.33 0 0 1 2.87 0c.394.189.755.497 1.26.928l.079.066c.48.41.939.604 1.58.655l.102.008c.662.053 1.135.09 1.547.236a3.33 3.33 0 0 1 2.03 2.029c.145.412.182.885.235 1.547l.008.102c.051.641.246 1.1.655 1.58l.066.078c.431.506.74.867.928 1.261a3.33 3.33 0 0 1 0 2.87c-.189.394-.497.755-.928 1.26l-.066.079c-.418.49-.605.951-.655 1.58l-.008.102c-.053.662-.09 1.135-.236 1.547a3.33 3.33 0 0 1-2.029 2.03c-.412.145-.885.182-1.547.235l-.102.008c-.641.051-1.1.246-1.58.655l-.079.066c-.505.431-.866.74-1.26.928a3.33 3.33 0 0 1-2.87 0c-.394-.189-.755-.497-1.26-.928l-.079-.066a2.56 2.56 0 0 0-1.58-.655l-.102-.008c-.662-.053-1.135-.09-1.547-.236a3.33 3.33 0 0 1-2.03-2.029c-.145-.412-.182-.885-.235-1.547l-.008-.102a2.56 2.56 0 0 0-.655-1.58l-.066-.079c-.431-.505-.74-.866-.928-1.26a3.33 3.33 0 0 1 0-2.87c.189-.394.497-.755.928-1.26l.066-.079a2.56 2.56 0 0 0 .655-1.58l.008-.102c.053-.662.09-1.135.236-1.547a3.33 3.33 0 0 1 2.029-2.03c.412-.145.885-.182 1.547-.235l.102-.008a2.56 2.56 0 0 0 1.58-.655l.078-.066c.506-.431.867-.74 1.261-.928M10.03 8.97a.75.75 0 1 0-1.06 1.06l.353.354a.75.75 0 1 0 1.06-1.06zm3.59 4.65a.75.75 0 0 0 0 1.06l.353.354a.75.75 0 0 0 1.06-1.06l-.353-.354a.75.75 0 0 0-1.06 0m1.41-3.59a.75.75 0 1 0-1.06-1.06l-5 5a.75.75 0 1 0 1.06 1.06z"/>`), g.Group(children),
	)
}

func Pin(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m3 21l4.63-4.631m.005-.005l-2.78-2.78c-.954-.953.006-2.996 1.31-3.078c1.178-.075 3.905.352 4.812-.555l2.49-2.49c.617-.618.225-2 .185-2.762c-.058-1.016 1.558-2.271 2.415-1.414l4.647 4.648c.86.858-.4 2.469-1.413 2.415c-.762-.04-2.145-.432-2.763.185l-2.49 2.49c-.906.907-.48 3.633-.554 4.811c-.082 1.305-2.125 2.265-3.08 1.31z"/>`), g.Group(children),
	)
}

func PinSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M14.102 2.664c.628-.416 1.692-.713 2.495.09l4.647 4.648c.806.804.508 1.868.091 2.495a2.95 2.95 0 0 1-.863.85c-.334.213-.756.374-1.211.35a9 9 0 0 1-.658-.071l-.068-.01a9 9 0 0 0-.707-.073c-.504-.025-.698.06-.76.12l-2.49 2.491c-.08.08-.18.258-.256.6c-.073.33-.105.736-.113 1.186c-.007.432.008.874.024 1.3l.001.047c.015.423.03.855.009 1.194c-.065 1.031-.868 1.79-1.658 2.141c-.79.35-1.917.437-2.7-.347l-2.25-2.25L3.53 21.53a.75.75 0 1 1-1.06-1.06l4.104-4.105l-2.25-2.25c-.783-.784-.697-1.91-.346-2.7c.35-.79 1.11-1.593 2.14-1.658c.34-.021.772-.006 1.195.009l.047.001c.426.015.868.031 1.3.024c.45-.008.856-.04 1.186-.113c.342-.076.52-.177.6-.257l2.49-2.49c.061-.061.146-.256.12-.76a9 9 0 0 0-.073-.707l-.009-.068a9 9 0 0 1-.071-.658c-.025-.455.136-.877.348-1.211c.216-.34.515-.64.851-.863"/>`), g.Group(children),
	)
}

func Pizza(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M6.234 16.925a15.98 15.98 0 0 1 10.69-10.691M7.582 7.58a18.76 18.76 0 0 1 7.33-4.53c.536-.18 1.103.136 1.265.678l4.779 15.928a1.042 1.042 0 0 1-1.298 1.298L3.73 16.176c-.542-.162-.858-.729-.679-1.266a18.76 18.76 0 0 1 4.53-7.33M11 15l.354.354M15 11l.354.354M16 16l.354.354"/>`), g.Group(children),
	)
}

func PizzaSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="m16.895 3.514l4.778 15.928c.41 1.367-.864 2.641-2.231 2.231L3.514 16.895c-.921-.277-1.496-1.258-1.175-2.222A19.5 19.5 0 0 1 14.673 2.34c.964-.321 1.945.254 2.222 1.175m-1.747.248A18 18 0 0 0 3.762 15.148c-.037.11.02.261.183.31l1.802.54A16.73 16.73 0 0 1 16 5.749l-.541-1.803c-.049-.163-.2-.22-.31-.183m.382 6.708a.75.75 0 1 0-1.06 1.06l.353.354a.75.75 0 0 0 1.06-1.06zm-4 4a.75.75 0 1 0-1.06 1.06l.353.354a.75.75 0 0 0 1.06-1.06zm5 1a.75.75 0 1 0-1.06 1.06l.353.354a.75.75 0 0 0 1.06-1.06z"/>`), g.Group(children),
	)
}

func Planet(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M7.722 17.777a7.3 7.3 0 0 0 4.716 1.723c4.085 0 7.396-3.358 7.396-7.5a7.6 7.6 0 0 0-.16-1.556M7.722 17.777A7.53 7.53 0 0 1 5.042 12c0-4.142 3.311-7.5 7.395-7.5c3.559 0 6.53 2.549 7.236 5.944M7.722 17.777c1.807-.42 3.958-1.293 6.127-2.563c2.524-1.478 4.577-3.202 5.825-4.77M7.722 17.777c-2.246.52-3.963.34-4.528-.654c-.583-1.024.182-2.688 1.849-4.458m14.631-2.22c1.157-1.454 1.623-2.772 1.132-3.635c-.498-.875-1.888-1.12-3.746-.81"/>`), g.Group(children),
	)
}

func PlanetSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M19.08 12.215c-.112 3.638-3.052 6.535-6.642 6.535a6.5 6.5 0 0 1-2.948-.699c1.495-.501 3.116-1.24 4.738-2.19c1.913-1.12 3.58-2.389 4.852-3.646m-11.548 6.37a8.05 8.05 0 0 0 4.906 1.665c4.509 0 8.146-3.704 8.146-8.25q0-.697-.111-1.363c.506-.676.89-1.353 1.1-2.001c.236-.734.272-1.518-.115-2.197c-.394-.692-1.1-1.056-1.864-1.213c-.722-.149-1.576-.132-2.494.008a8.03 8.03 0 0 0-4.662-1.484C7.93 3.75 4.293 7.454 4.293 12q0 .181.008.363c-.773.851-1.371 1.707-1.716 2.516c-.368.862-.502 1.808-.043 2.615c.448.786 1.293 1.148 2.186 1.267c.81.108 1.77.037 2.804-.175m-1.354-1.307a8.3 8.3 0 0 1-1.554-2.942a6 6 0 0 0-.66 1.132c-.285.67-.242 1.067-.118 1.284c.118.207.413.433 1.081.522c.352.047.772.05 1.25.004M18.616 6.623q.379.01.676.072c.52.107.758.303.862.486c.105.183.153.49-.01.994q-.08.255-.229.548a8.3 8.3 0 0 0-1.299-2.1"/>`), g.Group(children),
	)
}

func Play(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M14.581 9.402C16.194 10.718 17 11.375 17 12.5s-.806 1.783-2.419 3.098a23 23 0 0 1-1.292.99c-.356.25-.759.508-1.176.762c-1.609.978-2.413 1.467-3.134.926c-.722-.542-.787-1.675-.918-3.943A33 33 0 0 1 8 12.5c0-.563.023-1.192.06-1.833c.132-2.267.197-3.401.919-3.943c.721-.541 1.525-.052 3.134.926c.417.254.82.512 1.176.762a23 23 0 0 1 1.292.99"/>`), g.Group(children),
	)
}

func PlayCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/><path d="M13.242 10.71c.672.547 1.008.821 1.008 1.29s-.336.743-1.008 1.29c-.185.152-.37.295-.538.413a9 9 0 0 1-.49.318c-.67.407-1.006.611-1.306.385s-.328-.697-.383-1.642A14 14 0 0 1 10.5 12c0-.235.01-.497.025-.764c.055-.945.082-1.417.383-1.642c.3-.226.636-.022 1.306.385c.174.106.341.214.49.318c.169.118.353.261.538.412"/></g>`), g.Group(children),
	)
}

func PlayCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0 5.385 4.365 9.75 9.75 9.75s9.75-4.365 9.75-9.75S17.385 2.25 12 2.25S2.25 6.615 2.25 12m10.305-2.691l.048.03c.183.11.366.228.532.344c.189.133.388.287.581.445l.04.033c.301.245.599.488.811.735c.254.295.433.648.433 1.104s-.18.809-.433 1.104c-.212.247-.51.49-.81.735l-.04.033c-.194.158-.393.312-.582.445a10 10 0 0 1-.532.345l-.048.03c-.292.177-.6.365-.88.465a1.4 1.4 0 0 1-.586.09a1.2 1.2 0 0 1-.632-.24c-.368-.278-.504-.672-.569-1.01c-.061-.314-.084-.711-.109-1.144l-.003-.046A14 14 0 0 1 9.75 12c0-.254.01-.531.026-.807l.003-.046c.025-.433.048-.83.109-1.145c.065-.337.2-.731.57-1.008c.18-.136.392-.223.63-.24a1.4 1.4 0 0 1 .588.09c.278.1.587.287.879.465"/>`), g.Group(children),
	)
}

func PlayDiamond(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M2.707 10.295a2.41 2.41 0 0 0 0 3.41l7.588 7.588a2.41 2.41 0 0 0 3.41 0l7.588-7.588a2.41 2.41 0 0 0 0-3.41l-7.588-7.588a2.41 2.41 0 0 0-3.41 0z"/><path d="M13.242 10.71c.672.547 1.008.821 1.008 1.29s-.336.743-1.008 1.29c-.185.152-.37.295-.538.413a9 9 0 0 1-.49.318c-.67.407-1.006.611-1.306.385s-.328-.697-.383-1.642A14 14 0 0 1 10.5 12c0-.235.01-.497.025-.764c.055-.945.082-1.417.383-1.642c.3-.226.636-.022 1.306.385c.174.106.341.214.49.318c.169.118.353.261.538.412"/></g>`), g.Group(children),
	)
}

func PlayDiamondSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.79 1.49a3.16 3.16 0 0 1 3.445.687l7.588 7.588a3.16 3.16 0 0 1 0 4.47l-7.588 7.588a3.16 3.16 0 0 1-4.47 0l-7.588-7.588a3.16 3.16 0 0 1 0-4.47l7.588-7.589a3.2 3.2 0 0 1 1.025-.685m1.765 7.819c-.292-.178-.6-.366-.88-.466a1.4 1.4 0 0 0-.586-.09a1.2 1.2 0 0 0-.632.24c-.368.278-.504.672-.569 1.01c-.061.314-.084.711-.109 1.144l-.003.046c-.015.276-.026.553-.026.807s.01.531.026.807l.003.046c.025.433.048.83.109 1.145c.065.337.2.731.57 1.008c.18.136.392.223.63.24c.225.017.426-.031.588-.09c.278-.1.587-.287.879-.465l.048-.03a9 9 0 0 0 1.113-.789l.04-.033c.301-.245.599-.488.811-.735c.254-.295.433-.648.433-1.104s-.18-.809-.433-1.104c-.212-.247-.51-.49-.81-.735l-.04-.033a10 10 0 0 0-.582-.445a10 10 0 0 0-.532-.345z"/>`), g.Group(children),
	)
}

func PlayHexagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M20.5 15.8V8.2a1.91 1.91 0 0 0-.944-1.645l-6.612-3.8a1.88 1.88 0 0 0-1.888 0l-6.612 3.8A1.9 1.9 0 0 0 3.5 8.2v7.602a1.91 1.91 0 0 0 .944 1.644l6.612 3.8a1.88 1.88 0 0 0 1.888 0l6.612-3.8A1.9 1.9 0 0 0 20.5 15.8"/><path d="M13.242 10.71c.672.547 1.008.821 1.008 1.29s-.336.743-1.008 1.29c-.185.152-.37.295-.538.413a9 9 0 0 1-.49.318c-.67.407-1.006.611-1.306.385s-.328-.697-.383-1.642A14 14 0 0 1 10.5 12c0-.235.01-.497.025-.764c.055-.945.082-1.417.383-1.642c.3-.226.636-.022 1.306.385c.174.106.341.214.49.318c.169.118.353.261.538.412"/></g>`), g.Group(children),
	)
}

func PlayHexagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.68 2.105a2.63 2.63 0 0 1 2.64 0l.001.001l6.611 3.8A2.65 2.65 0 0 1 21.25 8.2v7.603a2.66 2.66 0 0 1-1.318 2.291l-.003.002l-6.608 3.799h-.002a2.63 2.63 0 0 1-2.639 0h-.001l-6.608-3.8h-.003A2.64 2.64 0 0 1 2.75 15.8V8.198a2.66 2.66 0 0 1 1.318-2.291l.003-.002zm1.875 7.204c-.292-.178-.6-.366-.88-.466a1.4 1.4 0 0 0-.586-.09a1.2 1.2 0 0 0-.632.24c-.368.278-.504.672-.569 1.01c-.061.314-.084.711-.109 1.144l-.003.046c-.015.276-.026.553-.026.807s.01.531.026.807l.003.046c.025.433.048.83.109 1.145c.065.337.2.731.57 1.008c.18.136.392.223.63.24c.225.017.426-.031.588-.09c.278-.1.587-.287.879-.465l.048-.03a9 9 0 0 0 1.113-.789l.04-.033c.301-.245.599-.488.811-.735c.254-.295.433-.648.433-1.104s-.18-.809-.433-1.104c-.212-.247-.51-.49-.81-.735l-.04-.033a10 10 0 0 0-.582-.445a10 10 0 0 0-.532-.345z"/>`), g.Group(children),
	)
}

func PlayOctagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M7.805 3.469C8.16 3.115 8.451 3 8.937 3h6.126c.486 0 .778.115 1.132.469l4.336 4.336c.354.354.469.646.469 1.132v6.126c0 .5-.125.788-.469 1.132l-4.336 4.336c-.354.354-.646.469-1.132.469H8.937c-.5 0-.788-.125-1.132-.469L3.47 16.195c-.355-.355-.47-.646-.47-1.132V8.937c0-.5.125-.788.469-1.132z"/><path d="M13.242 10.71c.672.547 1.008.821 1.008 1.29s-.336.743-1.008 1.29c-.185.152-.37.295-.538.413a9 9 0 0 1-.49.318c-.67.407-1.006.611-1.306.385s-.328-.697-.383-1.642A14 14 0 0 1 10.5 12c0-.235.01-.497.025-.764c.055-.945.082-1.417.383-1.642c.3-.226.636-.022 1.306.385c.174.106.341.214.49.318c.169.118.353.261.538.412"/></g>`), g.Group(children),
	)
}

func PlayOctagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.037 2.408a2.3 2.3 0 0 1 .9-.158h6.126c.302 0 .602.036.9.158s.54.31.762.53l4.337 4.337c.22.221.408.463.53.762c.123.298.158.598.158.9v6.126c0 .313-.039.616-.163.914a2.3 2.3 0 0 1-.525.748l-4.337 4.337a2.3 2.3 0 0 1-.762.53a2.3 2.3 0 0 1-.9.158H8.937c-.313 0-.616-.039-.914-.163a2.3 2.3 0 0 1-.748-.525l-4.337-4.337a2.3 2.3 0 0 1-.53-.762a2.3 2.3 0 0 1-.158-.9V8.937c0-.313.039-.616.163-.914a2.3 2.3 0 0 1 .525-.748l4.337-4.337c.221-.22.463-.408.762-.53m4.518 6.9c-.292-.177-.6-.365-.88-.465a1.4 1.4 0 0 0-.586-.09a1.2 1.2 0 0 0-.632.24c-.368.278-.504.672-.569 1.01c-.061.314-.084.711-.109 1.144l-.003.046c-.015.276-.026.553-.026.807s.01.531.026.807l.003.046c.025.433.048.83.109 1.145c.065.337.2.731.57 1.008c.18.136.392.223.63.24c.225.017.426-.031.588-.09c.278-.1.587-.287.879-.465l.048-.03a9 9 0 0 0 1.113-.789l.04-.033c.301-.245.599-.488.811-.735c.254-.295.433-.648.433-1.104s-.18-.809-.433-1.104c-.212-.247-.51-.49-.81-.735l-.04-.033a10 10 0 0 0-.582-.445a10 10 0 0 0-.532-.345z"/>`), g.Group(children),
	)
}

func PlaySolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="m12.503 7.01l-.066-.04c-.748-.455-1.406-.856-1.97-1.058a2.4 2.4 0 0 0-.976-.157a1.8 1.8 0 0 0-.963.37c-.579.434-.829 1.073-.966 1.78c-.133.685-.184 1.577-.247 2.663l-.003.056c-.038.65-.062 1.293-.062 1.876s.024 1.227.062 1.877l.003.055c.063 1.086.114 1.978.247 2.662c.137.708.387 1.346.966 1.781c.286.215.607.343.963.37c.342.025.67-.047.976-.157c.564-.202 1.222-.603 1.97-1.057l.066-.04c.426-.26.844-.527 1.217-.79a24 24 0 0 0 1.335-1.022l.05-.041c.764-.623 1.412-1.152 1.86-1.672c.488-.57.785-1.182.785-1.966s-.297-1.397-.786-1.966c-.447-.52-1.095-1.05-1.858-1.672l-.05-.041c-.454-.37-.91-.724-1.336-1.022a23 23 0 0 0-1.217-.79"/>`), g.Group(children),
	)
}

func PlaySquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/><path d="M13.242 10.71c.672.547 1.008.821 1.008 1.29s-.336.743-1.008 1.29c-.185.152-.37.295-.538.413a9 9 0 0 1-.49.318c-.67.407-1.006.611-1.306.385s-.328-.697-.383-1.642A14 14 0 0 1 10.5 12c0-.235.01-.497.025-.764c.055-.945.082-1.417.383-1.642c.3-.226.636-.022 1.306.385c.174.106.341.214.49.318c.169.118.353.261.538.412"/></g>`), g.Group(children),
	)
}

func PlaySquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057m3.188 7.059c-.292-.178-.6-.366-.88-.466a1.4 1.4 0 0 0-.586-.09a1.2 1.2 0 0 0-.632.24c-.368.278-.504.672-.569 1.01c-.061.314-.084.711-.109 1.144l-.003.046c-.015.276-.026.553-.026.807s.01.531.026.807l.003.046c.025.433.048.83.109 1.145c.065.337.2.731.57 1.008c.18.136.392.223.63.24c.225.017.426-.031.588-.09c.278-.1.587-.287.879-.465l.048-.03a9 9 0 0 0 1.113-.789l.04-.033c.301-.245.599-.488.811-.735c.254-.295.433-.648.433-1.104s-.18-.809-.433-1.104c-.212-.247-.51-.49-.81-.735l-.04-.033a10 10 0 0 0-.582-.445a10 10 0 0 0-.532-.345z"/>`), g.Group(children),
	)
}

func PlayWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83"/><path d="M13.242 10.71c.672.547 1.008.821 1.008 1.29s-.336.743-1.008 1.29c-.185.152-.37.295-.538.413a9 9 0 0 1-.49.318c-.67.407-1.006.611-1.306.385s-.328-.697-.383-1.642A14 14 0 0 1 10.5 12c0-.235.01-.497.025-.764c.055-.945.082-1.417.383-1.642c.3-.226.636-.022 1.306.385c.174.106.341.214.49.318c.169.118.353.261.538.412"/></g>`), g.Group(children),
	)
}

func PlayWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.565 2.075a3.33 3.33 0 0 1 2.87 0c.394.189.755.497 1.26.928l.079.066c.48.41.939.604 1.58.655l.102.008c.662.053 1.135.09 1.547.236a3.33 3.33 0 0 1 2.03 2.029c.145.412.182.885.235 1.547l.008.102c.051.641.246 1.1.655 1.58l.066.078c.431.506.74.867.928 1.261a3.33 3.33 0 0 1 0 2.87c-.189.394-.497.755-.928 1.26l-.066.079c-.418.49-.605.951-.655 1.58l-.008.102c-.053.662-.09 1.135-.236 1.547a3.33 3.33 0 0 1-2.029 2.03c-.412.145-.885.182-1.547.235l-.102.008c-.641.051-1.1.246-1.58.655l-.079.066c-.505.431-.866.74-1.26.928a3.33 3.33 0 0 1-2.87 0c-.394-.189-.755-.497-1.26-.928l-.079-.066a2.56 2.56 0 0 0-1.58-.655l-.102-.008c-.662-.053-1.135-.09-1.547-.236a3.33 3.33 0 0 1-2.03-2.029c-.145-.412-.182-.885-.235-1.547l-.008-.102a2.56 2.56 0 0 0-.655-1.58l-.066-.079c-.431-.505-.74-.866-.928-1.26a3.33 3.33 0 0 1 0-2.87c.189-.394.497-.755.928-1.26l.066-.079a2.56 2.56 0 0 0 .655-1.58l.008-.102c.053-.662.09-1.135.236-1.547a3.33 3.33 0 0 1 2.029-2.03c.412-.145.885-.182 1.547-.235l.102-.008a2.56 2.56 0 0 0 1.58-.655l.078-.066c.506-.431.867-.74 1.261-.928m1.99 7.234c-.292-.178-.6-.366-.88-.466a1.4 1.4 0 0 0-.586-.09a1.2 1.2 0 0 0-.632.24c-.368.278-.504.672-.569 1.01c-.061.314-.084.711-.109 1.144l-.003.046c-.015.276-.026.553-.026.807s.01.531.026.807l.003.046c.025.433.048.83.109 1.145c.065.337.2.731.57 1.008c.18.136.392.223.63.24c.225.017.426-.031.588-.09c.278-.1.587-.287.879-.465l.048-.03a9 9 0 0 0 1.113-.789l.04-.033c.301-.245.599-.488.811-.735c.254-.295.433-.648.433-1.104s-.18-.809-.433-1.104c-.212-.247-.51-.49-.81-.735l-.04-.033a10 10 0 0 0-.582-.445a10 10 0 0 0-.532-.345z"/>`), g.Group(children),
	)
}

func Plus(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M18 12h-6m0 0H6m6 0V6m0 6v6"/>`), g.Group(children),
	)
}

func PlusCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-5.5 0H12m0 0H8.5m3.5 0V8.5m0 3.5v3.5"/>`), g.Group(children),
	)
}

func PlusCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12M12 7.75a.75.75 0 0 0-.75.75v2.75H8.5a.75.75 0 0 0 0 1.5h2.75v2.75a.75.75 0 0 0 1.5 0v-2.75h2.75a.75.75 0 0 0 0-1.5h-2.75V8.5a.75.75 0 0 0-.75-.75"/>`), g.Group(children),
	)
}

func PlusDiamond(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M2.707 10.295a2.41 2.41 0 0 0 0 3.41l7.588 7.588a2.41 2.41 0 0 0 3.41 0l7.588-7.588a2.41 2.41 0 0 0 0-3.41l-7.588-7.588a2.41 2.41 0 0 0-3.41 0zM15.5 12H12m0 0H8.5m3.5 0V8.5m0 3.5v3.5"/>`), g.Group(children),
	)
}

func PlusDiamondSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.79 1.49a3.16 3.16 0 0 1 3.445.687l7.588 7.588a3.16 3.16 0 0 1 0 4.47l-7.588 7.588a3.16 3.16 0 0 1-4.47 0l-7.588-7.588a3.16 3.16 0 0 1 0-4.47l7.588-7.589a3.2 3.2 0 0 1 1.025-.685M12 7.75a.75.75 0 0 0-.75.75v2.75H8.5a.75.75 0 0 0 0 1.5h2.75v2.75a.75.75 0 0 0 1.5 0v-2.75h2.75a.75.75 0 0 0 0-1.5h-2.75V8.5a.75.75 0 0 0-.75-.75"/>`), g.Group(children),
	)
}

func PlusHexagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M20.5 15.8V8.2a1.91 1.91 0 0 0-.944-1.645l-6.612-3.8a1.88 1.88 0 0 0-1.888 0l-6.612 3.8A1.9 1.9 0 0 0 3.5 8.2v7.602a1.91 1.91 0 0 0 .944 1.644l6.612 3.8a1.88 1.88 0 0 0 1.888 0l6.612-3.8A1.9 1.9 0 0 0 20.5 15.8m-5-3.8H12m0 0H8.5m3.5 0V8.5m0 3.5v3.5"/>`), g.Group(children),
	)
}

func PlusHexagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="m10.68 2.105l-6.61 3.8l-.002.002A2.65 2.65 0 0 0 2.75 8.198v7.603a2.64 2.64 0 0 0 1.318 2.292l.003.002l6.608 3.799h.002a2.63 2.63 0 0 0 2.639 0h.001l6.608-3.8h.003A2.65 2.65 0 0 0 21.25 15.8V8.2a2.65 2.65 0 0 0-1.318-2.292l-6.61-3.8l-.002-.002a2.63 2.63 0 0 0-2.64 0M12 7.75a.75.75 0 0 1 .75.75v2.75h2.75a.75.75 0 0 1 0 1.5h-2.75v2.75a.75.75 0 0 1-1.5 0v-2.75H8.5a.75.75 0 0 1 0-1.5h2.75V8.5a.75.75 0 0 1 .75-.75"/>`), g.Group(children),
	)
}

func PlusOctagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M7.805 3.469C8.16 3.115 8.451 3 8.937 3h6.126c.486 0 .778.115 1.132.469l4.336 4.336c.354.354.469.646.469 1.132v6.126c0 .5-.125.788-.469 1.132l-4.336 4.336c-.354.354-.646.469-1.132.469H8.937c-.5 0-.788-.125-1.132-.469L3.47 16.195c-.355-.355-.47-.646-.47-1.132V8.937c0-.5.125-.788.469-1.132zM15.5 12H12m0 0H8.5m3.5 0V8.5m0 3.5v3.5"/>`), g.Group(children),
	)
}

func PlusOctagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.037 2.408c-.299.122-.54.31-.762.53L2.938 7.275c-.213.214-.4.45-.525.748a2.3 2.3 0 0 0-.163.914v6.126c0 .302.036.602.158.9s.31.54.53.762l4.337 4.337c.214.213.45.4.748.524c.298.125.601.164.914.164h6.126c.302 0 .602-.035.9-.158c.299-.122.54-.31.762-.53l4.337-4.337c.213-.214.4-.45.524-.748a2.3 2.3 0 0 0 .164-.914V8.937a2.3 2.3 0 0 0-.158-.9a2.3 2.3 0 0 0-.53-.762l-4.337-4.337a2.3 2.3 0 0 0-.762-.53a2.3 2.3 0 0 0-.9-.158H8.937a2.3 2.3 0 0 0-.9.158M12 7.75a.75.75 0 0 1 .75.75v2.75h2.75a.75.75 0 0 1 0 1.5h-2.75v2.75a.75.75 0 0 1-1.5 0v-2.75H8.5a.75.75 0 0 1 0-1.5h2.75V8.5a.75.75 0 0 1 .75-.75"/>`), g.Group(children),
	)
}

func PlusSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M13 6a1 1 0 1 0-2 0v5H6a1 1 0 1 0 0 2h5v5a1 1 0 1 0 2 0v-5h5a1 1 0 1 0 0-2h-5z"/>`), g.Group(children),
	)
}

func PlusSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6zM15.5 12H12m0 0H8.5m3.5 0V8.5m0 3.5v3.5"/>`), g.Group(children),
	)
}

func PlusSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25c-1.092 0-1.958 0-2.655.057c-.714.058-1.317.18-1.868.46a4.75 4.75 0 0 0-2.076 2.077c-.281.55-.403 1.154-.461 1.868c-.057.697-.057 1.563-.057 2.655v5.266c0 1.092 0 1.958.057 2.655c.058.714.18 1.317.46 1.869a4.75 4.75 0 0 0 2.077 2.075c.55.281 1.154.403 1.868.461c.697.057 1.563.057 2.655.057h5.266c1.092 0 1.958 0 2.655-.057c.714-.058 1.317-.18 1.869-.46a4.75 4.75 0 0 0 2.075-2.076c.281-.552.403-1.155.461-1.869c.057-.697.057-1.563.057-2.655V9.367c0-1.092 0-1.958-.057-2.655c-.058-.714-.18-1.317-.46-1.868a4.75 4.75 0 0 0-2.076-2.076c-.552-.281-1.155-.403-1.869-.461c-.697-.057-1.563-.057-2.655-.057zM12 7.75a.75.75 0 0 1 .75.75v2.75h2.75a.75.75 0 0 1 0 1.5h-2.75v2.75a.75.75 0 0 1-1.5 0v-2.75H8.5a.75.75 0 0 1 0-1.5h2.75V8.5a.75.75 0 0 1 .75-.75"/>`), g.Group(children),
	)
}

func PlusWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83M15.5 12H12m0 0H8.5m3.5 0V8.5m0 3.5v3.5"/>`), g.Group(children),
	)
}

func PlusWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.565 2.075c-.394.189-.755.497-1.26.928l-.079.066a2.56 2.56 0 0 1-1.58.655l-.102.008c-.662.053-1.135.09-1.547.236a3.33 3.33 0 0 0-2.03 2.029c-.145.412-.182.885-.235 1.547l-.008.102a2.56 2.56 0 0 1-.655 1.58l-.066.078c-.431.506-.74.867-.928 1.261a3.33 3.33 0 0 0 0 2.87c.189.394.497.755.928 1.26l.066.079c.41.48.604.939.655 1.58l.008.102c.053.662.09 1.135.236 1.547a3.33 3.33 0 0 0 2.029 2.03c.412.145.885.182 1.547.235l.102.008c.629.05 1.09.238 1.58.655l.079.066c.505.431.866.74 1.26.928a3.33 3.33 0 0 0 2.87 0c.394-.189.755-.497 1.26-.928l.079-.066c.48-.41.939-.604 1.58-.655l.102-.008c.662-.053 1.135-.09 1.547-.236a3.33 3.33 0 0 0 2.03-2.029c.145-.412.182-.885.235-1.547l.008-.102c.05-.629.238-1.09.655-1.58l.066-.079c.431-.505.74-.866.928-1.26a3.33 3.33 0 0 0 0-2.87c-.189-.394-.497-.755-.928-1.26l-.066-.079a2.56 2.56 0 0 1-.655-1.58l-.008-.102c-.053-.662-.09-1.135-.236-1.547a3.33 3.33 0 0 0-2.029-2.03c-.412-.145-.885-.182-1.547-.235l-.102-.008a2.56 2.56 0 0 1-1.58-.655l-.079-.066c-.505-.431-.866-.74-1.26-.928a3.33 3.33 0 0 0-2.87 0M12 7.75a.75.75 0 0 1 .75.75v2.75h2.75a.75.75 0 0 1 0 1.5h-2.75v2.75a.75.75 0 0 1-1.5 0v-2.75H8.5a.75.75 0 0 1 0-1.5h2.75V8.5a.75.75 0 0 1 .75-.75"/>`), g.Group(children),
	)
}

func Pokeball(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M12 14a2 2 0 1 0 0-4a2 2 0 0 0 0 4m2-2h7M3 12h7"/><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/></g>`), g.Group(children),
	)
}

func PokeballSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M10.75 12a1.25 1.25 0 1 1 2.5 0a1.25 1.25 0 0 1-2.5 0"/><path d="M9.353 11.25a2.751 2.751 0 0 1 5.293 0h7.075c-.383-5.034-4.589-9-9.721-9c-5.133 0-9.339 3.966-9.722 9zm5.293 1.5a2.751 2.751 0 0 1-5.293 0H2.278c.383 5.034 4.59 9 9.722 9s9.339-3.966 9.721-9z"/></g>`), g.Group(children),
	)
}

func Power(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M17.953 5.25a9 9 0 1 1-11.906 0M12 3v9"/>`), g.Group(children),
	)
}

func PowerSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M12 2.25a.75.75 0 0 1 .75.75v9a.75.75 0 0 1-1.5 0V3a.75.75 0 0 1 .75-.75"/><path d="M6.543 5.812a.75.75 0 1 0-.992-1.124A9.73 9.73 0 0 0 2.25 12c0 5.385 4.365 9.75 9.75 9.75s9.75-4.365 9.75-9.75a9.73 9.73 0 0 0-3.3-7.312a.75.75 0 0 0-.993 1.124a8.25 8.25 0 1 1-10.914 0"/></g>`), g.Group(children),
	)
}

func Presentation(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3 4h18m-1.9 0v9.778c0 .471-.19.923-.527 1.257c-.338.333-.796.52-1.273.52H6.7c-.477 0-.935-.187-1.273-.52a1.77 1.77 0 0 1-.527-1.257V4m2.6 16l4.5-4.444L16.5 20"/>`), g.Group(children),
	)
}

func PresentationSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 4A.75.75 0 0 1 3 3.25h18a.75.75 0 0 1 0 1.5h-1.15v9.028c0 .673-.271 1.317-.75 1.79a2.56 2.56 0 0 1-1.8.738h-3.473l3.2 3.16a.75.75 0 1 1-1.054 1.068L12 16.61l-3.973 3.924a.75.75 0 1 1-1.054-1.068l3.2-3.16H6.7c-.673 0-1.32-.265-1.8-.738a2.52 2.52 0 0 1-.75-1.79V4.75H3A.75.75 0 0 1 2.25 4"/>`), g.Group(children),
	)
}

func Printer(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M19 10V5a1 1 0 0 0-1-1H6a1 1 0 0 0-1 1v5m15 0H4a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h16a1 1 0 0 0 1-1v-8a1 1 0 0 0-1-1"/><path d="M17.5 20v-3a1 1 0 0 0-1-1H11a1 1 0 0 0-1 1v3m-4-7h2"/></g>`), g.Group(children),
	)
}

func PrinterSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M4.25 5v4.25H4A1.75 1.75 0 0 0 2.25 11v8c0 .966.784 1.75 1.75 1.75h16A1.75 1.75 0 0 0 21.75 19v-8A1.75 1.75 0 0 0 20 9.25h-.25V5A1.75 1.75 0 0 0 18 3.25H6A1.75 1.75 0 0 0 4.25 5m14 4.25H5.75V5A.25.25 0 0 1 6 4.75h12a.25.25 0 0 1 .25.25zm-1.5 10h-6V17a.25.25 0 0 1 .25-.25h5.5a.25.25 0 0 1 .25.25zM5.25 13a.75.75 0 0 1 .75-.75h2a.75.75 0 0 1 0 1.5H6a.75.75 0 0 1-.75-.75"/>`), g.Group(children),
	)
}

func Puzzle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M19.4 12c.56 0 .84 0 1.054-.109a1 1 0 0 0 .437-.437C21 11.24 21 10.96 21 10.4V8.2c0-.56 0-.84-.109-1.054a1 1 0 0 0-.437-.437C20.24 6.6 19.96 6.6 19.4 6.6h-1.55a.9.9 0 0 1-.9-.9a2.7 2.7 0 1 0-5.4 0a.9.9 0 0 1-.9.9H9.1c-.56 0-.84 0-1.054.109a1 1 0 0 0-.437.437C7.5 7.36 7.5 7.64 7.5 8.2v2.2c0 .56 0 .84-.109 1.054a1 1 0 0 1-.437.437C6.74 12 6.46 12 5.9 12h-.2a2.7 2.7 0 1 0 0 5.4h.2c.56 0 .84 0 1.054.109a1 1 0 0 1 .437.437c.109.214.109.494.109 1.054v.4c0 .56 0 .84.109 1.054a1 1 0 0 0 .437.437C8.26 21 8.54 21 9.1 21h10.3c.56 0 .84 0 1.054-.109a1 1 0 0 0 .437-.437C21 20.24 21 19.96 21 19.4V19c0-.56 0-.84-.109-1.054a1 1 0 0 0-.437-.437c-.214-.109-.494-.109-1.054-.109h-.2a2.7 2.7 0 1 1 0-5.4z"/>`), g.Group(children),
	)
}

func PuzzleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.8 5.7a3.45 3.45 0 1 1 6.9 0c0 .083.067.15.15.15h1.576c.258 0 .494 0 .692.016c.213.018.446.057.677.175c.329.168.596.435.764.765c.118.23.157.463.175.676c.016.198.016.434.016.692v2.252c0 .258 0 .494-.016.692a1.8 1.8 0 0 1-.175.676a1.75 1.75 0 0 1-.765.765c-.23.118-.463.158-.676.175c-.198.016-.434.016-.692.016H19.2a1.95 1.95 0 1 0 0 3.9h.226c.258 0 .494 0 .692.016c.213.017.446.057.677.175c.329.168.596.435.764.764c.118.23.157.464.175.677c.016.198.016.434.016.692v.452c0 .258 0 .494-.016.692a1.8 1.8 0 0 1-.175.677a1.75 1.75 0 0 1-.765.764a1.8 1.8 0 0 1-.676.175c-.198.016-.434.016-.692.016H9.074c-.258 0-.494 0-.692-.016a1.8 1.8 0 0 1-.676-.175a1.75 1.75 0 0 1-.765-.765a1.8 1.8 0 0 1-.175-.676c-.016-.198-.016-.434-.016-.692V19c0-.292 0-.467-.011-.596a.6.6 0 0 0-.018-.12a.25.25 0 0 0-.104-.105a.6.6 0 0 0-.121-.018a8 8 0 0 0-.596-.011h-.2a3.45 3.45 0 1 1 0-6.9h.2c.292 0 .467 0 .596-.011a.6.6 0 0 0 .12-.018a.25.25 0 0 0 .105-.104a.6.6 0 0 0 .018-.121c.01-.13.011-.304.011-.596V8.174c0-.258 0-.494.016-.692a1.8 1.8 0 0 1 .175-.676a1.75 1.75 0 0 1 .765-.765a1.8 1.8 0 0 1 .676-.175c.198-.016.434-.016.692-.016h1.576a.15.15 0 0 0 .15-.15"/>`), g.Group(children),
	)
}

func Question(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M12 21v-.5m0-3c0-5.1 5-3.825 5-8.924c0-6.768-10-6.768-10 0"/>`), g.Group(children),
	)
}

func QuestionCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/><path d="M12 13.496c0-2.003 2-1.503 2-3.506c0-2.659-4-2.659-4 0m2 6.007v-.5"/></g>`), g.Group(children),
	)
}

func QuestionCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12 2.25c-5.385 0-9.75 4.365-9.75 9.75s4.365 9.75 9.75 9.75s9.75-4.365 9.75-9.75S17.385 2.25 12 2.25m0 12.497a.75.75 0 0 1 .75.75v.5a.75.75 0 0 1-1.5 0v-.5a.75.75 0 0 1 .75-.75m1.872-6.814c.544.482.878 1.188.878 2.057c0 .64-.164 1.138-.45 1.543c-.256.365-.588.614-.823.79l-.027.02c-.263.198-.416.32-.524.474c-.09.127-.176.317-.176.68a.75.75 0 0 1-1.5 0c0-.64.164-1.14.45-1.544c.256-.364.588-.613.823-.79l.027-.02c.263-.198.416-.32.524-.474c.09-.127.176-.317.176-.679c0-.46-.166-.75-.372-.934a1.33 1.33 0 0 0-.878-.31c-.34 0-.657.114-.877.31c-.207.183-.373.474-.373.934a.75.75 0 0 1-1.5 0c0-.869.334-1.575.877-2.057A2.83 2.83 0 0 1 12 7.246c.66 0 1.343.218 1.872.687"/>`), g.Group(children),
	)
}

func QuestionDiamond(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M2.707 10.295a2.41 2.41 0 0 0 0 3.41l7.588 7.588a2.41 2.41 0 0 0 3.41 0l7.588-7.588a2.41 2.41 0 0 0 0-3.41l-7.588-7.588a2.41 2.41 0 0 0-3.41 0z"/><path d="M12 13.496c0-2.003 2-1.503 2-3.506c0-2.659-4-2.659-4 0m2 6.007v-.5"/></g>`), g.Group(children),
	)
}

func QuestionDiamondSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12 1.25a3.16 3.16 0 0 0-2.235.926L2.177 9.765a3.16 3.16 0 0 0 0 4.47l7.588 7.588a3.16 3.16 0 0 0 4.47 0l7.588-7.588a3.16 3.16 0 0 0 0-4.47l-7.588-7.588A3.16 3.16 0 0 0 12 1.25m0 13.497a.75.75 0 0 1 .75.75v.5a.75.75 0 0 1-1.5 0v-.5a.75.75 0 0 1 .75-.75m1.872-6.814c.544.482.878 1.188.878 2.057c0 .64-.164 1.138-.45 1.543c-.256.365-.588.614-.823.79l-.027.02c-.263.198-.416.32-.524.474c-.09.127-.176.317-.176.68a.75.75 0 0 1-1.5 0c0-.64.164-1.14.45-1.544c.256-.364.588-.613.823-.79l.027-.02c.263-.198.416-.32.524-.474c.09-.127.176-.317.176-.679c0-.46-.166-.75-.372-.934a1.33 1.33 0 0 0-.878-.31c-.34 0-.657.114-.877.31c-.207.183-.373.474-.373.934a.75.75 0 0 1-1.5 0c0-.869.334-1.575.877-2.057A2.83 2.83 0 0 1 12 7.246c.66 0 1.343.218 1.872.687"/>`), g.Group(children),
	)
}

func QuestionHexagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M20.5 15.8V8.2a1.91 1.91 0 0 0-.944-1.645l-6.612-3.8a1.88 1.88 0 0 0-1.888 0l-6.612 3.8A1.9 1.9 0 0 0 3.5 8.2v7.602a1.91 1.91 0 0 0 .944 1.644l6.612 3.8a1.88 1.88 0 0 0 1.888 0l6.612-3.8A1.9 1.9 0 0 0 20.5 15.8"/><path d="M12 13.496c0-2.003 2-1.503 2-3.506c0-2.659-4-2.659-4 0m2 6.007v-.5"/></g>`), g.Group(children),
	)
}

func QuestionHexagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12 1.75a2.63 2.63 0 0 0-1.32.355l-6.61 3.8l-.002.002A2.65 2.65 0 0 0 2.75 8.198v7.603a2.64 2.64 0 0 0 1.318 2.292l.003.002l6.608 3.799h.002a2.63 2.63 0 0 0 2.639 0h.001l6.608-3.8h.003A2.65 2.65 0 0 0 21.25 15.8V8.2a2.65 2.65 0 0 0-1.318-2.292l-6.61-3.8l-.002-.002A2.63 2.63 0 0 0 12 1.75m0 12.997a.75.75 0 0 1 .75.75v.5a.75.75 0 0 1-1.5 0v-.5a.75.75 0 0 1 .75-.75m1.872-6.814c.544.482.878 1.188.878 2.057c0 .64-.164 1.138-.45 1.543c-.256.365-.588.614-.823.79l-.027.02c-.263.198-.416.32-.524.474c-.09.127-.176.317-.176.68a.75.75 0 0 1-1.5 0c0-.64.164-1.14.45-1.544c.256-.364.588-.613.823-.79l.027-.02c.263-.198.416-.32.524-.474c.09-.127.176-.317.176-.679c0-.46-.166-.75-.372-.934a1.33 1.33 0 0 0-.878-.31c-.34 0-.657.114-.877.31c-.207.183-.373.474-.373.934a.75.75 0 0 1-1.5 0c0-.869.334-1.575.877-2.057A2.83 2.83 0 0 1 12 7.246c.66 0 1.343.218 1.872.687"/>`), g.Group(children),
	)
}

func QuestionOctagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M7.805 3.469C8.16 3.115 8.451 3 8.937 3h6.126c.486 0 .778.115 1.132.469l4.336 4.336c.354.354.469.646.469 1.132v6.126c0 .5-.125.788-.469 1.132l-4.336 4.336c-.354.354-.646.469-1.132.469H8.937c-.5 0-.788-.125-1.132-.469L3.47 16.195c-.355-.355-.47-.646-.47-1.132V8.937c0-.5.125-.788.469-1.132z"/><path d="M12 13.496c0-2.003 2-1.503 2-3.506c0-2.659-4-2.659-4 0m2 6.007v-.5"/></g>`), g.Group(children),
	)
}

func QuestionOctagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.937 2.25a2.3 2.3 0 0 0-.9.158c-.299.122-.54.31-.762.53L2.938 7.275c-.213.214-.4.45-.525.748a2.3 2.3 0 0 0-.163.914v6.126c0 .302.036.602.158.9s.31.54.53.762l4.337 4.337c.214.213.45.4.748.524c.298.125.601.164.914.164h6.126c.302 0 .602-.035.9-.158c.299-.122.54-.31.762-.53l4.337-4.337c.213-.214.4-.45.524-.748a2.3 2.3 0 0 0 .164-.914V8.937a2.3 2.3 0 0 0-.158-.9a2.3 2.3 0 0 0-.53-.762l-4.337-4.337a2.3 2.3 0 0 0-.762-.53a2.3 2.3 0 0 0-.9-.158zM12 14.747a.75.75 0 0 1 .75.75v.5a.75.75 0 0 1-1.5 0v-.5a.75.75 0 0 1 .75-.75m1.872-6.814c.544.482.878 1.188.878 2.057c0 .64-.164 1.138-.45 1.543c-.256.365-.588.614-.823.79l-.027.02c-.263.198-.416.32-.524.474c-.09.127-.176.317-.176.68a.75.75 0 0 1-1.5 0c0-.64.164-1.14.45-1.544c.256-.364.588-.613.823-.79l.027-.02c.263-.198.416-.32.524-.474c.09-.127.176-.317.176-.679c0-.46-.166-.75-.372-.934a1.33 1.33 0 0 0-.878-.31c-.34 0-.657.114-.877.31c-.207.183-.373.474-.373.934a.75.75 0 0 1-1.5 0c0-.869.334-1.575.877-2.057A2.83 2.83 0 0 1 12 7.246c.66 0 1.343.218 1.872.687"/>`), g.Group(children),
	)
}

func QuestionSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12 19.75a.75.75 0 0 1 .75.75v.5a.75.75 0 0 1-1.5 0v-.5a.75.75 0 0 1 .75-.75m3.94-15.538c1.104.997 1.81 2.472 1.81 4.364c0 1.41-.35 2.44-.915 3.255c-.536.775-1.241 1.315-1.846 1.777l-.033.026c-.639.488-1.167.9-1.558 1.464c-.373.539-.648 1.263-.648 2.402a.75.75 0 0 1-1.5 0c0-1.41.35-2.44.915-3.255c.536-.775 1.241-1.315 1.846-1.777l.033-.026c.639-.488 1.167-.9 1.558-1.464c.373-.54.648-1.263.648-2.402c0-1.493-.544-2.555-1.315-3.25C14.151 4.619 13.087 4.25 12 4.25s-2.151.369-2.935 1.076c-.77.695-1.315 1.758-1.315 3.25a.75.75 0 1 1-1.5 0c0-1.892.706-3.367 1.81-4.364C9.151 3.227 10.587 2.75 12 2.75s2.849.477 3.94 1.462"/>`), g.Group(children),
	)
}

func QuestionSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/><path d="M12 13.496c0-2.003 2-1.503 2-3.506c0-2.659-4-2.659-4 0m2 6.007v-.5"/></g>`), g.Group(children),
	)
}

func QuestionSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25c-1.092 0-1.958 0-2.655.057c-.714.058-1.317.18-1.868.46a4.75 4.75 0 0 0-2.076 2.077c-.281.55-.403 1.154-.461 1.868c-.057.697-.057 1.563-.057 2.655v5.266c0 1.092 0 1.958.057 2.655c.058.714.18 1.317.46 1.869a4.75 4.75 0 0 0 2.077 2.075c.55.281 1.154.403 1.868.461c.697.057 1.563.057 2.655.057h5.266c1.092 0 1.958 0 2.655-.057c.714-.058 1.317-.18 1.869-.46a4.75 4.75 0 0 0 2.075-2.076c.281-.552.403-1.155.461-1.869c.057-.697.057-1.563.057-2.655V9.367c0-1.092 0-1.958-.057-2.655c-.058-.714-.18-1.317-.46-1.868a4.75 4.75 0 0 0-2.076-2.076c-.552-.281-1.155-.403-1.869-.461c-.697-.057-1.563-.057-2.655-.057zM12 14.747a.75.75 0 0 1 .75.75v.5a.75.75 0 0 1-1.5 0v-.5a.75.75 0 0 1 .75-.75m1.872-6.814c.544.482.878 1.188.878 2.057c0 .64-.164 1.138-.45 1.543c-.256.365-.588.614-.823.79l-.027.02c-.263.198-.416.32-.524.474c-.09.127-.176.317-.176.68a.75.75 0 0 1-1.5 0c0-.64.164-1.14.45-1.544c.256-.364.588-.613.823-.79l.027-.02c.263-.198.416-.32.524-.474c.09-.127.176-.317.176-.679c0-.46-.166-.75-.372-.934a1.33 1.33 0 0 0-.878-.31c-.34 0-.657.114-.877.31c-.207.183-.373.474-.373.934a.75.75 0 0 1-1.5 0c0-.869.334-1.575.877-2.057A2.83 2.83 0 0 1 12 7.246c.66 0 1.343.218 1.872.687"/>`), g.Group(children),
	)
}

func QuestionWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83"/><path d="M12 13.496c0-2.003 2-1.503 2-3.506c0-2.659-4-2.659-4 0m2 6.007v-.5"/></g>`), g.Group(children),
	)
}

func QuestionWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M13.435 2.075a3.33 3.33 0 0 0-2.87 0c-.394.189-.755.497-1.26.928l-.079.066a2.56 2.56 0 0 1-1.58.655l-.102.008c-.662.053-1.135.09-1.547.236a3.33 3.33 0 0 0-2.03 2.029c-.145.412-.182.885-.235 1.547l-.008.102a2.56 2.56 0 0 1-.655 1.58l-.066.078c-.431.506-.74.867-.928 1.261a3.33 3.33 0 0 0 0 2.87c.189.394.497.755.928 1.26l.066.079c.41.48.604.939.655 1.58l.008.102c.053.662.09 1.135.236 1.547a3.33 3.33 0 0 0 2.029 2.03c.412.145.885.182 1.547.235l.102.008c.629.05 1.09.238 1.58.655l.078.066c.506.431.867.74 1.261.928a3.33 3.33 0 0 0 2.87 0c.394-.189.755-.497 1.26-.928l.079-.066c.48-.41.939-.604 1.58-.655l.102-.008c.662-.053 1.135-.09 1.547-.236a3.33 3.33 0 0 0 2.03-2.029c.145-.412.182-.885.235-1.547l.008-.102c.05-.629.238-1.09.655-1.58l.066-.079c.431-.505.74-.866.928-1.26a3.33 3.33 0 0 0 0-2.87c-.189-.394-.497-.755-.928-1.26l-.066-.079a2.56 2.56 0 0 1-.655-1.58l-.008-.102c-.053-.662-.09-1.135-.236-1.547a3.33 3.33 0 0 0-2.029-2.03c-.412-.145-.885-.182-1.547-.235l-.102-.008a2.56 2.56 0 0 1-1.58-.655l-.079-.066c-.505-.431-.866-.74-1.26-.928M12 14.747a.75.75 0 0 1 .75.75v.5a.75.75 0 0 1-1.5 0v-.5a.75.75 0 0 1 .75-.75m1.872-6.814c.544.482.878 1.188.878 2.057c0 .64-.164 1.138-.45 1.543c-.256.365-.588.614-.823.79l-.027.02c-.263.198-.416.32-.524.474c-.09.127-.176.317-.176.68a.75.75 0 0 1-1.5 0c0-.64.164-1.14.45-1.544c.256-.364.588-.613.823-.79l.027-.02c.263-.198.416-.32.524-.474c.09-.127.176-.317.176-.679c0-.46-.166-.75-.372-.934a1.33 1.33 0 0 0-.878-.31c-.34 0-.657.114-.877.31c-.207.183-.373.474-.373.934a.75.75 0 0 1-1.5 0c0-.869.334-1.575.877-2.057A2.83 2.83 0 0 1 12 7.246c.66 0 1.343.218 1.872.687"/>`), g.Group(children),
	)
}

func Radio(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M12 13.5a1.5 1.5 0 1 0 0-3a1.5 1.5 0 0 0 0 3m-3.449 2.205a5.2 5.2 0 0 1-1.148-1.7a5.19 5.19 0 0 1 1.148-5.71M18.07 5.5a9.15 9.15 0 0 1 2.719 6.5a9.15 9.15 0 0 1-2.72 6.5M15.24 8.295a5.2 5.2 0 0 1 1.148 1.7a5.19 5.19 0 0 1-1.148 5.71M5.512 18.5A9.15 9.15 0 0 1 2.793 12c0-2.438.978-4.776 2.72-6.5"/>`), g.Group(children),
	)
}

func RadioSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M6.045 4.972a.75.75 0 0 1-.005 1.06A8.4 8.4 0 0 0 3.543 12c0 2.237.897 4.383 2.497 5.967a.75.75 0 0 1-1.056 1.066A9.9 9.9 0 0 1 2.044 12a9.9 9.9 0 0 1 2.94-7.033a.75.75 0 0 1 1.06.005m11.492 0a.75.75 0 0 1 1.06-.005A9.9 9.9 0 0 1 21.54 12a9.9 9.9 0 0 1-2.941 7.033a.75.75 0 1 1-1.056-1.066A8.4 8.4 0 0 0 20.04 12a8.4 8.4 0 0 0-2.497-5.967a.75.75 0 0 1-.005-1.06M9.085 7.768a.75.75 0 0 1-.006 1.06a4.5 4.5 0 0 0-.984 1.456a4.44 4.44 0 0 0 .984 4.888a.75.75 0 0 1-1.055 1.066a6 6 0 0 1-1.313-1.943a5.94 5.94 0 0 1 1.313-6.533a.75.75 0 0 1 1.06.006m5.622 0a.75.75 0 0 1 1.06-.006a6 6 0 0 1 1.313 1.943a5.94 5.94 0 0 1 0 4.59a6 6 0 0 1-1.313 1.943a.75.75 0 0 1-1.054-1.066c.421-.417.755-.912.983-1.456a4.44 4.44 0 0 0-.983-4.888a.75.75 0 0 1-.006-1.06M9.75 12a2.25 2.25 0 1 1 4.5 0a2.25 2.25 0 0 1-4.5 0"/>`), g.Group(children),
	)
}

func Rainbow(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3 17.5v-2a9 9 0 1 1 18 0v2m-15 0v-2a6 6 0 0 1 12 0v2m-9 0v-2a3 3 0 1 1 6 0v2"/>`), g.Group(children),
	)
}

func RainbowSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12 7.25a8.25 8.25 0 0 0-8.25 8.25v2a.75.75 0 0 1-1.5 0v-2c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75v2a.75.75 0 0 1-1.5 0v-2A8.25 8.25 0 0 0 12 7.25m0 3a5.25 5.25 0 0 0-5.25 5.25v2a.75.75 0 0 1-1.5 0v-2a6.75 6.75 0 0 1 13.5 0v2a.75.75 0 0 1-1.5 0v-2c0-2.9-2.35-5.25-5.25-5.25m0 3a2.25 2.25 0 0 0-2.25 2.25v2a.75.75 0 0 1-1.5 0v-2a3.75 3.75 0 1 1 7.5 0v2a.75.75 0 0 1-1.5 0v-2A2.25 2.25 0 0 0 12 13.25"/>`), g.Group(children),
	)
}

func ReceptionBell(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3 19h18M12 8V5m0 3h-2a5 5 0 0 0-5 5v3h14v-3a5 5 0 0 0-5-5zm0-3h-2m2 0h2"/>`), g.Group(children),
	)
}

func ReceptionBellSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10 4.25a.75.75 0 0 0 0 1.5h1.25v1.5H10A5.75 5.75 0 0 0 4.25 13v3c0 .414.336.75.75.75h14a.75.75 0 0 0 .75-.75v-3A5.75 5.75 0 0 0 14 7.25h-1.25v-1.5H14a.75.75 0 0 0 0-1.5zm-7 14a.75.75 0 0 0 0 1.5h18a.75.75 0 0 0 0-1.5z"/>`), g.Group(children),
	)
}

func Record(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M21 12.5a3.5 3.5 0 1 1-7 0a3.5 3.5 0 0 1 7 0m-11 0a3.5 3.5 0 1 1-7 0a3.5 3.5 0 0 1 7 0M6.5 16h11"/>`), g.Group(children),
	)
}

func RecordSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.75 12.5a4.23 4.23 0 0 1-1.01 2.75h4.52a4.25 4.25 0 1 1 3.24 1.5h-11a4.25 4.25 0 1 1 4.25-4.25"/>`), g.Group(children),
	)
}

func Rectangle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M2.357 9.3c0-1.68 0-2.52.327-3.162a3 3 0 0 1 1.311-1.311C4.637 4.5 5.477 4.5 7.157 4.5h9.686c1.68 0 2.52 0 3.162.327a3 3 0 0 1 1.31 1.311c.328.642.328 1.482.328 3.162v5.4c0 1.68 0 2.52-.327 3.162a3 3 0 0 1-1.311 1.311c-.642.327-1.482.327-3.162.327H7.157c-1.68 0-2.52 0-3.162-.327a3 3 0 0 1-1.31-1.311c-.328-.642-.328-1.482-.328-3.162z"/>`), g.Group(children),
	)
}

func RectangleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M7.125 3.75c-.813 0-1.468 0-2 .043c-.546.045-1.026.14-1.47.366a3.75 3.75 0 0 0-1.64 1.639c-.225.444-.32.924-.364 1.47c-.044.531-.044 1.187-.044 2v5.464c0 .813 0 1.469.044 2c.044.546.139 1.026.365 1.47a3.75 3.75 0 0 0 1.639 1.64c.444.226.924.32 1.47.365c.532.043 1.187.043 2 .043h9.75c.813 0 1.468 0 2-.043c.546-.045 1.026-.14 1.47-.366a3.75 3.75 0 0 0 1.64-1.639c.226-.444.32-.924.364-1.47c.044-.531.044-1.187.044-2V9.268c0-.813 0-1.469-.044-2c-.044-.546-.139-1.026-.365-1.47a3.75 3.75 0 0 0-1.639-1.64c-.444-.226-.924-.32-1.47-.365c-.532-.043-1.187-.043-2-.043z"/>`), g.Group(children),
	)
}

func RectangleVertical(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M14.7 2c1.68 0 2.52 0 3.162.34a3.06 3.06 0 0 1 1.311 1.359c.327.665.327 1.536.327 3.279v10.044c0 1.743 0 2.614-.327 3.28a3.06 3.06 0 0 1-1.311 1.359C17.22 22 16.38 22 14.7 22H9.3c-1.68 0-2.52 0-3.162-.34a3.06 3.06 0 0 1-1.311-1.359c-.327-.665-.327-1.536-.327-3.279V6.978c0-1.743 0-2.614.327-3.28A3.06 3.06 0 0 1 6.138 2.34C6.78 2 7.62 2 9.3 2z"/>`), g.Group(children),
	)
}

func RectangleVerticalSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.267 1.25c-.812 0-1.469 0-2 .045c-.55.047-1.033.145-1.48.381a3.8 3.8 0 0 0-1.633 1.692c-.223.454-.316.944-.36 1.507c-.044.549-.044 1.227-.044 2.072v10.106c0 .845 0 1.523.043 2.072c.045.563.138 1.053.36 1.507a3.8 3.8 0 0 0 1.635 1.692c.446.236.93.334 1.478.38c.532.046 1.189.046 2 .046h5.467c.812 0 1.469 0 2-.045c.55-.047 1.033-.145 1.48-.381a3.8 3.8 0 0 0 1.633-1.692c.223-.454.316-.944.36-1.508c.044-.548.044-1.226.044-2.07V6.946c0-.845 0-1.523-.043-2.072c-.044-.563-.138-1.053-.36-1.507a3.8 3.8 0 0 0-1.635-1.692c-.446-.236-.93-.334-1.478-.38c-.532-.046-1.189-.046-2-.046z"/>`), g.Group(children),
	)
}

func Redo(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M18.364 18.364A9 9 0 1 1 12 3c4.058 0 6.518 2.705 9 5.5"/><path d="M21 4.5v4h-4"/></g>`), g.Group(children),
	)
}

func RedoSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12 2.25c-5.385 0-9.75 4.365-9.75 9.75s4.365 9.75 9.75 9.75a9.72 9.72 0 0 0 6.894-2.856a.75.75 0 0 0-1.06-1.06A8.25 8.25 0 1 1 12 3.75c2.556 0 4.422 1.168 6.168 2.833L16.25 8.5c0 .414.336.75.75.75h4a.75.75 0 0 0 .75-.75v-4a.75.75 0 0 0-.75-.75l-1.77 1.77c-1.9-1.815-4.135-3.27-7.23-3.27"/>`), g.Group(children),
	)
}

func Refresh(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M20.5 8c-1.392-3.179-4.823-5-8.522-5C7.299 3 3.453 6.552 3 11.1"/><path d="M16.489 8.4h3.97A.54.54 0 0 0 21 7.86V3.9M3.5 16c1.392 3.179 4.823 5 8.522 5c4.679 0 8.525-3.552 8.978-8.1"/><path d="M7.511 15.6h-3.97a.54.54 0 0 0-.541.54v3.96"/></g>`), g.Group(children),
	)
}

func RefreshAlt(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M3.5 8c1.392-3.179 4.823-5 8.522-5c4.679 0 8.525 3.552 8.978 8.1"/><path d="M7.511 8.4h-3.97a.54.54 0 0 1-.54-.54V3.9M20.5 16c-1.392 3.179-4.823 5-8.522 5C7.299 21 3.453 17.448 3 12.9"/><path d="M16.489 15.6h3.97a.54.54 0 0 1 .541.54v3.96"/></g>`), g.Group(children),
	)
}

func RefreshAltSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.926 12.154a.75.75 0 0 0-.672.82c.49 4.93 4.658 8.776 9.724 8.776c2.724 0 5.364-.933 7.238-2.68L21 20.85a.75.75 0 0 0 .75-.75v-3.96c0-.714-.58-1.29-1.291-1.29h-3.97a.75.75 0 0 0-.75.75l2.413 2.407c-1.558 1.433-3.78 2.243-6.174 2.243c-4.29 0-7.817-3.258-8.232-7.424a.75.75 0 0 0-.82-.672m18.82-1.128c-.49-4.93-4.657-8.776-9.724-8.776c-2.724 0-5.364.933-7.238 2.68L3 3.15a.75.75 0 0 0-.75.75v3.96c0 .714.58 1.29 1.291 1.29h3.97a.75.75 0 0 0 .75-.75L5.848 5.992C7.406 4.56 9.628 3.75 12.022 3.75c4.29 0 7.817 3.258 8.232 7.424a.75.75 0 1 0 1.492-.148"/>`), g.Group(children),
	)
}

func RefreshSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M21.074 12.154a.75.75 0 0 1 .672.82c-.49 4.93-4.658 8.776-9.724 8.776c-2.724 0-5.364-.933-7.238-2.68L3 20.85a.75.75 0 0 1-.75-.75v-3.96c0-.714.58-1.29 1.291-1.29h3.97a.75.75 0 0 1 .75.75l-2.413 2.407c1.558 1.433 3.78 2.243 6.174 2.243c4.29 0 7.817-3.258 8.232-7.424a.75.75 0 0 1 .82-.672m-18.82-1.128c.49-4.93 4.658-8.776 9.724-8.776c2.724 0 5.364.933 7.238 2.68L21 3.15a.75.75 0 0 1 .75.75v3.96c0 .714-.58 1.29-1.291 1.29h-3.97a.75.75 0 0 1-.75-.75l2.413-2.408c-1.558-1.432-3.78-2.242-6.174-2.242c-4.29 0-7.817 3.258-8.232 7.424a.75.75 0 1 1-1.492-.148"/>`), g.Group(children),
	)
}

func Repeat(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="m17 3l4 3l-4 3"/><path d="M3 12v-2a4 4 0 0 1 4-4h14M7 21l-4-3l4-3"/><path d="M21 12v2a4 4 0 0 1-4 4H3"/></g>`), g.Group(children),
	)
}

func RepeatSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M16.4 2.55a.75.75 0 0 1 1.05-.15l4 3a.75.75 0 0 1 0 1.2l-4 3a.75.75 0 0 1-1.05-.15v-2.7H7A3.25 3.25 0 0 0 3.75 10v2a.75.75 0 0 1-1.5 0v-2A4.75 4.75 0 0 1 7 5.25h9.4zm4.6 8.7a.75.75 0 0 1 .75.75v2A4.75 4.75 0 0 1 17 18.75H7.6v2.7a.75.75 0 0 1-1.05.15l-4-3a.75.75 0 0 1 0-1.2l4-3a.75.75 0 0 1 1.05.15v2.7H17A3.25 3.25 0 0 0 20.25 14v-2a.75.75 0 0 1 .75-.75"/>`), g.Group(children),
	)
}

func Rewind(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M6.515 9.419C5.172 10.515 4.5 11.063 4.5 12s.672 1.485 2.015 2.582c.371.302.74.587 1.077.824c.297.209.633.424.98.635c1.341.816 2.011 1.223 2.613.772c.6-.451.655-1.396.765-3.285c.03-.535.05-1.058.05-1.528s-.02-.993-.05-1.528c-.11-1.89-.164-2.834-.765-3.285c-.602-.451-1.272-.044-2.612.771a18 18 0 0 0-.98.636c-.339.237-.707.522-1.078.825"/><path d="M14.016 9.419C12.672 10.515 12 11.063 12 12s.672 1.485 2.015 2.582c.371.302.74.587 1.077.824c.297.209.633.424.98.635c1.341.816 2.011 1.223 2.613.772c.6-.451.655-1.396.765-3.285c.03-.535.05-1.058.05-1.528s-.02-.993-.05-1.528c-.11-1.89-.164-2.834-.765-3.285c-.602-.451-1.272-.044-2.612.771a18 18 0 0 0-.98.636a19 19 0 0 0-1.078.825"/></g>`), g.Group(children),
	)
}

func RewindCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/><path d="M8.008 10.71C7.336 11.256 7 11.53 7 12c0 .469.336.743 1.008 1.29c.185.152.37.295.538.413c.149.104.316.212.49.318c.67.407 1.006.611 1.306.385s.328-.697.383-1.642c.015-.267.025-.53.025-.764c0-.235-.01-.497-.025-.764c-.055-.945-.082-1.417-.383-1.642c-.3-.226-.635-.022-1.306.385a9 9 0 0 0-.49.318a10 10 0 0 0-.538.412m5.75.001c-.672.547-1.008.821-1.008 1.29s.336.743 1.008 1.29c.185.152.37.295.538.413c.149.104.316.212.49.318c.67.407 1.006.611 1.306.385s.328-.697.383-1.642c.015-.267.025-.53.025-.764c0-.235-.01-.497-.025-.764c-.055-.945-.082-1.417-.383-1.642c-.3-.226-.635-.022-1.306.385a9 9 0 0 0-.49.318a10 10 0 0 0-.538.412"/></g>`), g.Group(children),
	)
}

func RewindCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12 2.25c-5.385 0-9.75 4.365-9.75 9.75s4.365 9.75 9.75 9.75s9.75-4.365 9.75-9.75S17.385 2.25 12 2.25m-1.207 6.744c.368.277.504.67.569 1.008c.061.315.084.712.109 1.145l.002.046c.016.276.027.553.027.807s-.01.531-.027.807l-.002.046c-.025.433-.048.83-.109 1.145c-.065.337-.2.731-.57 1.008c-.18.136-.392.223-.63.24a1.4 1.4 0 0 1-.588-.09c-.278-.1-.587-.287-.879-.465l-.048-.03a10 10 0 0 1-.532-.344a10 10 0 0 1-.581-.445l-.04-.033c-.301-.245-.599-.488-.811-.735c-.254-.295-.433-.648-.433-1.104s.18-.809.433-1.104c.212-.247.51-.49.81-.735l.04-.033c.194-.158.393-.312.582-.445a10 10 0 0 1 .532-.345l.048-.03c.292-.177.6-.365.88-.465a1.4 1.4 0 0 1 .586-.09c.239.018.451.105.632.24m5.118-.24c.239.017.451.104.632.24c.368.277.504.67.569 1.008c.061.315.084.712.109 1.145l.003.046c.015.276.026.553.026.807s-.01.531-.026.807l-.003.046c-.025.433-.048.83-.109 1.145c-.065.337-.2.731-.57 1.008c-.18.136-.392.223-.63.24a1.4 1.4 0 0 1-.588-.09c-.278-.1-.587-.287-.879-.465l-.048-.03a10 10 0 0 1-.532-.344a10 10 0 0 1-.581-.445l-.04-.033c-.301-.245-.599-.488-.811-.735C12.179 12.81 12 12.456 12 12s.18-.809.433-1.104c.212-.247.51-.49.81-.735l.04-.033c.194-.158.393-.312.582-.445a10 10 0 0 1 .532-.345l.048-.03c.292-.177.6-.365.88-.465a1.4 1.4 0 0 1 .586-.09"/>`), g.Group(children),
	)
}

func RewindDiamond(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M2.707 10.295a2.41 2.41 0 0 0 0 3.41l7.588 7.588a2.41 2.41 0 0 0 3.41 0l7.588-7.588a2.41 2.41 0 0 0 0-3.41l-7.588-7.588a2.41 2.41 0 0 0-3.41 0z"/><path d="M8.008 10.71C7.336 11.256 7 11.53 7 12c0 .469.336.743 1.008 1.29c.185.152.37.295.538.413c.149.104.316.212.49.318c.67.407 1.006.611 1.306.385s.328-.697.383-1.642c.015-.267.025-.53.025-.764c0-.235-.01-.497-.025-.764c-.055-.945-.082-1.417-.383-1.642c-.3-.226-.635-.022-1.306.385a9 9 0 0 0-.49.318a10 10 0 0 0-.538.412m5.75.001c-.672.547-1.008.821-1.008 1.29s.336.743 1.008 1.29c.185.152.37.295.538.413c.149.104.316.212.49.318c.67.407 1.006.611 1.306.385s.328-.697.383-1.642c.015-.267.025-.53.025-.764c0-.235-.01-.497-.025-.764c-.055-.945-.082-1.417-.383-1.642c-.3-.226-.635-.022-1.306.385a9 9 0 0 0-.49.318a10 10 0 0 0-.538.412"/></g>`), g.Group(children),
	)
}

func RewindDiamondSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12 1.25a3.16 3.16 0 0 0-2.235.926L2.177 9.765a3.16 3.16 0 0 0 0 4.47l7.588 7.588a3.16 3.16 0 0 0 4.47 0l7.588-7.588a3.16 3.16 0 0 0 0-4.47l-7.588-7.588A3.16 3.16 0 0 0 12 1.25m-1.207 7.744c.368.277.504.67.569 1.008c.061.315.084.712.109 1.145l.002.046c.016.276.027.553.027.807s-.01.531-.027.807l-.002.046c-.025.433-.048.83-.109 1.145c-.065.337-.2.731-.57 1.008c-.18.136-.392.223-.63.24a1.4 1.4 0 0 1-.588-.09c-.278-.1-.587-.287-.879-.465l-.048-.03a10 10 0 0 1-.532-.344a10 10 0 0 1-.581-.445l-.04-.033c-.301-.245-.599-.488-.811-.735c-.254-.295-.433-.648-.433-1.104s.18-.809.433-1.104c.212-.247.51-.49.81-.735l.04-.033c.194-.158.393-.312.582-.445a10 10 0 0 1 .532-.345l.048-.03c.292-.177.6-.365.88-.465a1.4 1.4 0 0 1 .586-.09c.239.018.451.105.632.24m5.118-.24c.239.017.451.104.632.24c.368.277.504.67.569 1.008c.061.315.084.712.109 1.145l.003.046c.015.276.026.553.026.807s-.01.531-.026.807l-.003.046c-.025.433-.048.83-.109 1.145c-.065.337-.2.731-.57 1.008c-.18.136-.392.223-.63.24a1.4 1.4 0 0 1-.588-.09c-.278-.1-.587-.287-.879-.465l-.048-.03a10 10 0 0 1-.532-.344a10 10 0 0 1-.581-.445l-.04-.033c-.301-.245-.599-.488-.811-.735C12.179 12.81 12 12.456 12 12s.18-.809.433-1.104c.212-.247.51-.49.81-.735l.04-.033c.194-.158.393-.312.582-.445a10 10 0 0 1 .532-.345l.048-.03c.292-.177.6-.365.88-.465a1.4 1.4 0 0 1 .586-.09"/>`), g.Group(children),
	)
}

func RewindHexagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M20.5 15.8V8.2a1.91 1.91 0 0 0-.944-1.645l-6.612-3.8a1.88 1.88 0 0 0-1.888 0l-6.612 3.8A1.9 1.9 0 0 0 3.5 8.2v7.602a1.91 1.91 0 0 0 .944 1.644l6.612 3.8a1.88 1.88 0 0 0 1.888 0l6.612-3.8A1.9 1.9 0 0 0 20.5 15.8"/><path d="M8.008 10.71C7.336 11.256 7 11.53 7 12c0 .469.336.743 1.008 1.29c.185.152.37.295.538.413c.149.104.316.212.49.318c.67.407 1.006.611 1.306.385s.328-.697.383-1.642c.015-.267.025-.53.025-.764c0-.235-.01-.497-.025-.764c-.055-.945-.082-1.417-.383-1.642c-.3-.226-.635-.022-1.306.385a9 9 0 0 0-.49.318a10 10 0 0 0-.538.412m5.75.001c-.672.547-1.008.821-1.008 1.29s.336.743 1.008 1.29c.185.152.37.295.538.413c.149.104.316.212.49.318c.67.407 1.006.611 1.306.385s.328-.697.383-1.642c.015-.267.025-.53.025-.764c0-.235-.01-.497-.025-.764c-.055-.945-.082-1.417-.383-1.642c-.3-.226-.635-.022-1.306.385a9 9 0 0 0-.49.318a10 10 0 0 0-.538.412"/></g>`), g.Group(children),
	)
}

func RewindHexagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12 1.75a2.63 2.63 0 0 0-1.32.355l-6.61 3.8l-.002.002A2.65 2.65 0 0 0 2.75 8.198v7.603a2.64 2.64 0 0 0 1.318 2.292l.003.002l6.608 3.799h.002a2.63 2.63 0 0 0 2.639 0h.001l6.608-3.8h.003A2.65 2.65 0 0 0 21.25 15.8V8.2a2.65 2.65 0 0 0-1.318-2.292l-6.61-3.8l-.002-.002A2.63 2.63 0 0 0 12 1.75m-1.207 7.244c.368.277.504.67.569 1.008c.061.315.084.712.109 1.145l.002.046c.016.276.027.553.027.807s-.01.531-.027.807l-.002.046c-.025.433-.048.83-.109 1.145c-.065.337-.2.731-.57 1.008c-.18.136-.392.223-.63.24a1.4 1.4 0 0 1-.588-.09c-.278-.1-.587-.287-.879-.465l-.048-.03a10 10 0 0 1-.532-.344a10 10 0 0 1-.581-.445l-.04-.033c-.301-.245-.599-.488-.811-.735c-.254-.295-.433-.648-.433-1.104s.18-.809.433-1.104c.212-.247.51-.49.81-.735l.04-.033c.194-.158.393-.312.582-.445a10 10 0 0 1 .532-.345l.048-.03c.292-.177.6-.365.88-.465a1.4 1.4 0 0 1 .586-.09c.239.018.451.105.632.24m5.118-.24c.239.017.451.104.632.24c.368.277.504.67.569 1.008c.061.315.084.712.109 1.145l.003.046c.015.276.026.553.026.807s-.01.531-.026.807l-.003.046c-.025.433-.048.83-.109 1.145c-.065.337-.2.731-.57 1.008c-.18.136-.392.223-.63.24a1.4 1.4 0 0 1-.588-.09c-.278-.1-.587-.287-.879-.465l-.048-.03a10 10 0 0 1-.532-.344a10 10 0 0 1-.581-.445l-.04-.033c-.301-.245-.599-.488-.811-.735C12.179 12.81 12 12.456 12 12s.18-.809.433-1.104c.212-.247.51-.49.81-.735l.04-.033c.194-.158.393-.312.582-.445a10 10 0 0 1 .532-.345l.048-.03c.292-.177.6-.365.88-.465a1.4 1.4 0 0 1 .586-.09"/>`), g.Group(children),
	)
}

func RewindOctagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M7.805 3.469C8.16 3.115 8.451 3 8.937 3h6.126c.486 0 .778.115 1.132.469l4.336 4.336c.354.354.469.646.469 1.132v6.126c0 .5-.125.788-.469 1.132l-4.336 4.336c-.354.354-.646.469-1.132.469H8.937c-.5 0-.788-.125-1.132-.469L3.47 16.195c-.355-.355-.47-.646-.47-1.132V8.937c0-.5.125-.788.469-1.132z"/><path d="M8.008 10.71C7.336 11.256 7 11.53 7 12c0 .469.336.743 1.008 1.29c.185.152.37.295.538.413c.149.104.316.212.49.318c.67.407 1.006.611 1.306.385s.328-.697.383-1.642c.015-.267.025-.53.025-.764c0-.235-.01-.497-.025-.764c-.055-.945-.082-1.417-.383-1.642c-.3-.226-.635-.022-1.306.385a9 9 0 0 0-.49.318a10 10 0 0 0-.538.412m5.75.001c-.672.547-1.008.821-1.008 1.29s.336.743 1.008 1.29c.185.152.37.295.538.413c.149.104.316.212.49.318c.67.407 1.006.611 1.306.385s.328-.697.383-1.642c.015-.267.025-.53.025-.764c0-.235-.01-.497-.025-.764c-.055-.945-.082-1.417-.383-1.642c-.3-.226-.635-.022-1.306.385a9 9 0 0 0-.49.318a10 10 0 0 0-.538.412"/></g>`), g.Group(children),
	)
}

func RewindOctagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.937 2.25a2.3 2.3 0 0 0-.9.158c-.299.122-.54.31-.762.53L2.938 7.275c-.213.214-.4.45-.525.748a2.3 2.3 0 0 0-.163.914v6.126c0 .302.036.602.158.9s.31.54.53.762l4.337 4.337c.214.213.45.4.748.524c.298.125.601.164.914.164h6.126c.302 0 .602-.035.9-.158c.299-.122.54-.31.762-.53l4.337-4.337c.213-.214.4-.45.524-.748a2.3 2.3 0 0 0 .164-.914V8.937a2.3 2.3 0 0 0-.158-.9a2.3 2.3 0 0 0-.53-.762l-4.337-4.337a2.3 2.3 0 0 0-.762-.53a2.3 2.3 0 0 0-.9-.158zm1.856 6.744c.368.277.504.67.569 1.008c.061.315.084.712.109 1.145l.002.046c.016.276.027.553.027.807s-.01.531-.027.807l-.002.046c-.025.433-.048.83-.109 1.145c-.065.337-.2.731-.57 1.008c-.18.136-.392.223-.63.24a1.4 1.4 0 0 1-.588-.09c-.278-.1-.587-.287-.879-.465l-.048-.03a10 10 0 0 1-.532-.344a10 10 0 0 1-.581-.445l-.04-.033c-.301-.245-.599-.488-.811-.735c-.254-.295-.433-.648-.433-1.104s.18-.809.433-1.104c.212-.247.51-.49.81-.735l.04-.033c.194-.158.393-.312.582-.445a10 10 0 0 1 .532-.345l.048-.03c.292-.177.6-.365.88-.465a1.4 1.4 0 0 1 .586-.09c.239.018.451.105.632.24m5.118-.24c.239.017.451.104.632.24c.368.277.504.67.569 1.008c.061.315.084.712.109 1.145l.003.046c.015.276.026.553.026.807s-.01.531-.026.807l-.003.046c-.025.433-.048.83-.109 1.145c-.065.337-.2.731-.57 1.008c-.18.136-.392.223-.63.24a1.4 1.4 0 0 1-.588-.09c-.278-.1-.587-.287-.879-.465l-.048-.03a10 10 0 0 1-.532-.344a10 10 0 0 1-.581-.445l-.04-.033c-.301-.245-.599-.488-.811-.735C12.179 12.81 12 12.456 12 12s.18-.809.433-1.104c.212-.247.51-.49.81-.735l.04-.033c.194-.158.393-.312.582-.445a10 10 0 0 1 .532-.345l.048-.03c.292-.177.6-.365.88-.465a1.4 1.4 0 0 1 .586-.09"/>`), g.Group(children),
	)
}

func RewindSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M11.635 6.587a1.63 1.63 0 0 0-.868-.332c-.309-.023-.6.042-.865.137c-.482.173-1.04.513-1.656.887l-.063.039c-.357.217-.707.441-1.022.662c-.357.251-.74.548-1.12.857l-.048.04c-.63.514-1.178.96-1.558 1.403c-.422.491-.685 1.03-.685 1.72s.263 1.229.685 1.72c.38.442.928.889 1.558 1.403l.048.04c.38.309.763.606 1.12.857c.315.22.665.445 1.022.662l.063.039c.616.374 1.174.714 1.656.887c.264.095.556.16.865.137c.322-.024.612-.14.868-.332c.519-.39.736-.959.853-1.56c.112-.58.155-1.33.207-2.228l.003-.054A28 28 0 0 0 12.75 12c0-.489-.02-1.028-.052-1.571l-.003-.054c-.052-.899-.095-1.649-.207-2.227c-.117-.602-.334-1.171-.853-1.56"/><path d="M19.135 6.587a1.63 1.63 0 0 0-.868-.332c-.309-.023-.6.042-.865.137c-.483.173-1.04.513-1.656.887l-.063.039c-.357.217-.707.441-1.022.662c-.357.251-.74.548-1.12.857l-.048.04c-.63.514-1.178.96-1.558 1.403c-.422.491-.685 1.03-.685 1.72s.263 1.229.685 1.72c.38.442.928.889 1.558 1.403l.048.04c.38.309.762.606 1.12.857c.315.22.665.445 1.022.662l.063.039c.616.374 1.173.714 1.656.887c.264.095.556.16.865.137c.323-.024.612-.14.868-.332c.519-.39.736-.959.853-1.56c.112-.58.155-1.33.207-2.228l.003-.054A28 28 0 0 0 20.25 12c0-.489-.02-1.028-.052-1.571l-.003-.054c-.052-.899-.095-1.649-.207-2.227c-.117-.602-.334-1.171-.853-1.56"/></g>`), g.Group(children),
	)
}

func RewindSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/><path d="M8.008 10.71C7.336 11.256 7 11.53 7 12c0 .469.336.743 1.008 1.29c.185.152.37.295.538.413c.149.104.316.212.49.318c.67.407 1.006.611 1.306.385s.328-.697.383-1.642c.015-.267.025-.53.025-.764c0-.235-.01-.497-.025-.764c-.055-.945-.082-1.417-.383-1.642c-.3-.226-.635-.022-1.306.385a9 9 0 0 0-.49.318a10 10 0 0 0-.538.412m5.75.001c-.672.547-1.008.821-1.008 1.29s.336.743 1.008 1.29c.185.152.37.295.538.413c.149.104.316.212.49.318c.67.407 1.006.611 1.306.385s.328-.697.383-1.642c.015-.267.025-.53.025-.764c0-.235-.01-.497-.025-.764c-.055-.945-.082-1.417-.383-1.642c-.3-.226-.635-.022-1.306.385a9 9 0 0 0-.49.318a10 10 0 0 0-.538.412"/></g>`), g.Group(children),
	)
}

func RewindSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25c-1.092 0-1.958 0-2.655.057c-.714.058-1.317.18-1.868.46a4.75 4.75 0 0 0-2.076 2.077c-.281.55-.403 1.154-.461 1.868c-.057.697-.057 1.563-.057 2.655v5.266c0 1.092 0 1.958.057 2.655c.058.714.18 1.317.46 1.869a4.75 4.75 0 0 0 2.077 2.075c.55.281 1.154.403 1.868.461c.697.057 1.563.057 2.655.057h5.266c1.092 0 1.958 0 2.655-.057c.714-.058 1.317-.18 1.869-.46a4.75 4.75 0 0 0 2.075-2.076c.281-.552.403-1.155.461-1.869c.057-.697.057-1.563.057-2.655V9.367c0-1.092 0-1.958-.057-2.655c-.058-.714-.18-1.317-.46-1.868a4.75 4.75 0 0 0-2.076-2.076c-.552-.281-1.155-.403-1.869-.461c-.697-.057-1.563-.057-2.655-.057zm1.425 6.744c.37.277.505.67.57 1.008c.061.315.084.712.109 1.145l.002.046c.016.276.027.553.027.807s-.01.531-.027.807l-.002.046c-.025.433-.048.83-.109 1.145c-.065.337-.2.731-.57 1.008c-.18.136-.392.223-.63.24a1.4 1.4 0 0 1-.588-.09c-.278-.1-.587-.287-.879-.465l-.048-.03a10 10 0 0 1-.532-.344a10 10 0 0 1-.581-.445l-.04-.033c-.301-.245-.599-.488-.811-.735c-.254-.295-.433-.648-.433-1.104s.18-.809.433-1.104c.212-.247.51-.49.81-.735l.04-.033c.194-.158.393-.312.582-.445a10 10 0 0 1 .532-.345l.048-.03c.292-.177.6-.365.88-.465a1.4 1.4 0 0 1 .586-.09c.239.018.451.105.632.24m5.12-.24c.238.017.45.104.63.24c.37.277.505.67.57 1.008c.061.315.084.712.109 1.145l.003.046c.015.276.026.553.026.807s-.01.531-.026.807l-.003.046c-.025.433-.048.83-.109 1.145c-.065.337-.2.731-.57 1.008c-.18.136-.392.223-.63.24a1.4 1.4 0 0 1-.588-.09c-.278-.1-.587-.287-.879-.465l-.048-.03a10 10 0 0 1-.532-.344a10 10 0 0 1-.581-.445l-.04-.033c-.301-.245-.599-.488-.811-.735C12.179 12.81 12 12.456 12 12s.18-.809.433-1.104c.212-.247.51-.49.81-.735l.04-.033c.194-.158.393-.312.582-.445a10 10 0 0 1 .532-.345l.048-.03c.292-.177.6-.365.88-.465a1.4 1.4 0 0 1 .586-.09"/>`), g.Group(children),
	)
}

func RewindWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83"/><path d="M8.008 10.71C7.336 11.256 7 11.53 7 12c0 .469.336.743 1.008 1.29c.185.152.37.295.538.413c.149.104.316.212.49.318c.67.407 1.006.611 1.306.385s.328-.697.383-1.642c.015-.267.025-.53.025-.764c0-.235-.01-.497-.025-.764c-.055-.945-.082-1.417-.383-1.642c-.3-.226-.635-.022-1.306.385a9 9 0 0 0-.49.318a10 10 0 0 0-.538.412m5.75.001c-.672.547-1.008.821-1.008 1.29s.336.743 1.008 1.29c.185.152.37.295.538.413c.149.104.316.212.49.318c.67.407 1.006.611 1.306.385s.328-.697.383-1.642c.015-.267.025-.53.025-.764c0-.235-.01-.497-.025-.764c-.055-.945-.082-1.417-.383-1.642c-.3-.226-.635-.022-1.306.385a9 9 0 0 0-.49.318a10 10 0 0 0-.538.412"/></g>`), g.Group(children),
	)
}

func RewindWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M13.435 2.075a3.33 3.33 0 0 0-2.87 0c-.394.189-.755.497-1.26.928l-.079.066a2.56 2.56 0 0 1-1.58.655l-.102.008c-.662.053-1.135.09-1.547.236a3.33 3.33 0 0 0-2.03 2.029c-.145.412-.182.885-.235 1.547l-.008.102a2.56 2.56 0 0 1-.655 1.58l-.066.078c-.431.506-.74.867-.928 1.261a3.33 3.33 0 0 0 0 2.87c.189.394.497.755.928 1.26l.066.079c.41.48.604.939.655 1.58l.008.102c.053.662.09 1.135.236 1.547a3.33 3.33 0 0 0 2.029 2.03c.412.145.885.182 1.547.235l.102.008c.629.05 1.09.238 1.58.655l.078.066c.506.431.867.74 1.261.928a3.33 3.33 0 0 0 2.87 0c.394-.189.755-.497 1.26-.928l.079-.066c.48-.41.939-.604 1.58-.655l.102-.008c.662-.053 1.135-.09 1.547-.236a3.33 3.33 0 0 0 2.03-2.029c.145-.412.182-.885.235-1.547l.008-.102c.05-.629.238-1.09.655-1.58l.066-.079c.431-.505.74-.866.928-1.26a3.33 3.33 0 0 0 0-2.87c-.189-.394-.497-.755-.928-1.26l-.066-.079a2.56 2.56 0 0 1-.655-1.58l-.008-.102c-.053-.662-.09-1.135-.236-1.547a3.33 3.33 0 0 0-2.029-2.03c-.412-.145-.885-.182-1.547-.235l-.102-.008a2.56 2.56 0 0 1-1.58-.655l-.079-.066c-.505-.431-.866-.74-1.26-.928m-2.642 6.919c.368.277.504.67.569 1.008c.061.315.084.712.109 1.145l.002.046c.016.276.027.553.027.807s-.01.531-.027.807l-.002.046c-.025.433-.048.83-.109 1.145c-.065.337-.2.731-.57 1.008c-.18.136-.392.223-.63.24a1.4 1.4 0 0 1-.588-.09c-.278-.1-.587-.287-.879-.465l-.048-.03a10 10 0 0 1-.532-.344a10 10 0 0 1-.581-.445l-.04-.033c-.301-.245-.599-.488-.811-.735c-.254-.295-.433-.648-.433-1.104s.18-.809.433-1.104c.212-.247.51-.49.81-.735l.04-.033c.194-.158.393-.312.582-.445a10 10 0 0 1 .532-.345l.048-.03c.292-.177.6-.365.88-.465a1.4 1.4 0 0 1 .586-.09c.239.018.451.105.632.24m5.118-.24c.239.017.451.104.632.24c.368.277.504.67.569 1.008c.061.315.084.712.109 1.145l.003.046c.015.276.026.553.026.807s-.01.531-.026.807l-.003.046c-.025.433-.048.83-.109 1.145c-.065.337-.2.731-.57 1.008c-.18.136-.392.223-.63.24a1.4 1.4 0 0 1-.588-.09c-.278-.1-.587-.287-.879-.465l-.048-.03a10 10 0 0 1-.532-.344a10 10 0 0 1-.581-.445l-.04-.033c-.301-.245-.599-.488-.811-.735C12.179 12.81 12 12.456 12 12s.18-.809.433-1.104c.212-.247.51-.49.81-.735l.04-.033c.194-.158.393-.312.582-.445a10 10 0 0 1 .532-.345l.048-.03c.292-.177.6-.365.88-.465a1.4 1.4 0 0 1 .586-.09"/>`), g.Group(children),
	)
}

func Rhombus(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m5.219 11.34l5.96-7.925a1.02 1.02 0 0 1 1.642 0l5.96 7.925c.292.388.292.932 0 1.32l-5.96 7.925a1.02 1.02 0 0 1-1.642 0L5.22 12.66a1.1 1.1 0 0 1 0-1.32"/>`), g.Group(children),
	)
}

func RhombusSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M13.42 2.964a1.77 1.77 0 0 0-2.84 0L4.62 10.89a1.85 1.85 0 0 0 0 2.222l5.96 7.925a1.77 1.77 0 0 0 2.84 0l5.96-7.925a1.85 1.85 0 0 0 0-2.222z"/>`), g.Group(children),
	)
}

func Ribbon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M18 9A6 6 0 1 1 6 9a6 6 0 0 1 12 0"/><path d="m8 13.472l-1 6.44c0 .81 1.782 1.336 2.447.974l2.106-1.147a.93.93 0 0 1 .894 0l2.106 1.147c.665.362 2.447-.165 2.447-.975l-1-6.439"/></g>`), g.Group(children),
	)
}

func RibbonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12 2.25a6.75 6.75 0 0 1 4.801 11.495l.94 6.051a1 1 0 0 1 .009.115c0 .496-.274.869-.54 1.106a2.9 2.9 0 0 1-.933.528c-.33.117-.688.19-1.03.204c-.323.014-.716-.021-1.053-.205l-2.106-1.147a.18.18 0 0 0-.176 0l-2.106 1.147c-.337.184-.73.22-1.054.206a3.6 3.6 0 0 1-1.029-.205a2.9 2.9 0 0 1-.932-.528c-.267-.237-.541-.61-.541-1.106q0-.058.009-.115l.94-6.051A6.75 6.75 0 0 1 12 2.25m4.213 17.645l.022-.02l-.787-5.07A6.7 6.7 0 0 1 12 15.75a6.7 6.7 0 0 1-3.448-.946l-.787 5.07a1.4 1.4 0 0 0 .46.257c.2.071.411.112.591.12a.7.7 0 0 0 .271-.024h.001l2.106-1.147a1.68 1.68 0 0 1 1.612 0l2.106 1.147c.012.004.094.032.272.024c.18-.008.391-.049.59-.12c.205-.072.355-.16.44-.236"/>`), g.Group(children),
	)
}

func Rocket(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m7.75 13.85l2.4 2.4m-2.4-2.4s1.417-3.542 3.434-6m-3.434 6c-5.219-1.305-.53-6 3.434-6m-1.034 8.4s3.542-1.417 6-3.434m-6 3.434c1.305 5.218 6 .53 6-3.434M11.184 7.85c2.04-2.486 5.403-3.6 8.566-3.6c0 3.163-1.114 6.525-3.6 8.566m-1.7-3.359l.707-.707m-9.638 7.826c-.952.801-1.269 3.179-1.269 3.179s2.372-.318 3.171-1.272c.45-.534.444-1.354-.057-1.85a1.394 1.394 0 0 0-1.845-.057"/>`), g.Group(children),
	)
}

func RocketSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.83 7.11c2.238-2.523 5.72-3.61 8.92-3.61a.75.75 0 0 1 .75.75c0 3.2-1.087 6.682-3.61 8.92c-.061 1.016-.375 2.033-.824 2.926c-.5.994-1.195 1.887-1.973 2.478c-.761.578-1.745.963-2.717.601c-.92-.343-1.54-1.25-1.9-2.538l-2.113-2.114c-1.288-.359-2.195-.979-2.538-1.899c-.362-.972.023-1.956.601-2.717c.591-.778 1.484-1.473 2.478-1.973c.893-.449 1.91-.763 2.925-.823M9.5 8.892a7 7 0 0 0-.922.383c-.836.421-1.533.982-1.957 1.54c-.437.576-.493 1.01-.39 1.286c.083.226.352.557 1.094.836c.169-.379.412-.903.717-1.504c.388-.763.882-1.66 1.458-2.54m1.564 7.784c.278.742.61 1.01.836 1.095c.275.102.71.046 1.286-.39c.558-.425 1.119-1.122 1.54-1.958q.227-.451.383-.922a27 27 0 0 1-2.54 1.458c-.602.305-1.126.548-1.505.717m-6.029-.672a2.144 2.144 0 0 1 2.848.088l.009.01c.799.79.786 2.054.103 2.865c-.295.352-.698.606-1.077.792c-.387.19-.804.333-1.175.44a11 11 0 0 1-1.358.295l-.024.003l-.008.001H4.35a.75.75 0 0 1-.843-.842v-.003l.001-.008l.004-.024a7 7 0 0 1 .066-.389c.047-.251.121-.596.228-.971a7.3 7.3 0 0 1 .439-1.178c.185-.38.439-.783.79-1.08M15.687 8.22a.75.75 0 0 0-1.06 0l-.707.707a.75.75 0 0 0 1.06 1.06l.707-.707a.75.75 0 0 0 0-1.06"/>`), g.Group(children),
	)
}

func RoomService(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M12 6.167V4m0 2.167a8 8 0 0 1 8 8V17H4v-2.833a8 8 0 0 1 8-8M3 20h18"/>`), g.Group(children),
	)
}

func RoomServiceSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 20a.75.75 0 0 1 .75-.75h18a.75.75 0 0 1 0 1.5H3a.75.75 0 0 1-.75-.75m10.5-16a.75.75 0 0 0-1.5 0v1.448a8.75 8.75 0 0 0-8 8.719V17c0 .414.336.75.75.75h16a.75.75 0 0 0 .75-.75v-2.833a8.75 8.75 0 0 0-8-8.719z"/>`), g.Group(children),
	)
}

func Rows(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3 6.5a1 1 0 0 1 1-1h16a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1zm0 8a1 1 0 0 1 1-1h16a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1z"/>`), g.Group(children),
	)
}

func RowsSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M4 4.75A1.75 1.75 0 0 0 2.25 6.5v3c0 .966.784 1.75 1.75 1.75h16a1.75 1.75 0 0 0 1.75-1.75v-3A1.75 1.75 0 0 0 20 4.75zm0 8a1.75 1.75 0 0 0-1.75 1.75v3c0 .966.784 1.75 1.75 1.75h16a1.75 1.75 0 0 0 1.75-1.75v-3A1.75 1.75 0 0 0 20 12.75z"/>`), g.Group(children),
	)
}

func Rss(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M6 11.25A6.75 6.75 0 0 1 12.75 18M6 6a12 12 0 0 1 12 12m-11.5-.146l.354-.354"/>`), g.Group(children),
	)
}

func RssSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M5.25 11.25A.75.75 0 0 1 6 10.5a7.5 7.5 0 0 1 7.5 7.5a.75.75 0 0 1-1.5 0a6 6 0 0 0-6-6a.75.75 0 0 1-.75-.75"/><path d="M5.25 6A.75.75 0 0 1 6 5.25A12.75 12.75 0 0 1 18.75 18a.75.75 0 0 1-1.5 0A11.25 11.25 0 0 0 6 6.75A.75.75 0 0 1 5.25 6m2.134 10.97a.75.75 0 0 1 0 1.06l-.354.354a.75.75 0 1 1-1.06-1.06l.353-.354a.75.75 0 0 1 1.06 0"/></g>`), g.Group(children),
	)
}

func Ruler(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m5.914 12l2.282 2.283m.76-5.326l2.283 2.282M12 5.914l2.283 2.282m-9.74 5.174l8.826-8.826c.853-.852 1.28-1.278 1.77-1.438c.433-.14.898-.14 1.33 0c.491.16.917.586 1.768 1.437l1.22 1.219c.852.852 1.278 1.28 1.438 1.77c.14.433.14.897 0 1.33c-.16.49-.586.917-1.438 1.77l-8.826 8.826c-.853.852-1.28 1.278-1.77 1.438c-.433.14-.897.14-1.33 0c-.49-.16-.918-.586-1.77-1.439l-1.22-1.218c-.85-.852-1.276-1.277-1.436-1.769a2.15 2.15 0 0 1 0-1.33c.16-.49.586-.917 1.438-1.77"/>`), g.Group(children),
	)
}

func RulerSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M14.908 2.392c.583-.19 1.21-.19 1.793 0c.377.123.693.338 1.003.6c.297.253.635.59 1.042.998l1.259 1.259c.41.409.748.748 1.002 1.047c.263.31.478.626.601 1.004c.19.583.19 1.21 0 1.792c-.123.378-.338.693-.6 1.003c-.254.3-.593.638-1.002 1.047l-8.864 8.864c-.409.409-.748.748-1.046 1.001c-.31.263-.626.478-1.004.6c-.582.19-1.21.19-1.792.001c-.378-.123-.694-.338-1.004-.6c-.299-.255-.638-.594-1.047-1.003l-1.26-1.259c-.406-.407-.744-.744-.997-1.042c-.262-.31-.477-.626-.6-1.003a2.9 2.9 0 0 1 0-1.793c.123-.377.338-.694.6-1.003c.254-.3.593-.638 1.002-1.047l8.864-8.864c.409-.409.748-.748 1.047-1.001c.31-.263.626-.478 1.003-.601M6.974 12l-1.061 1.06l1.753 1.753a.75.75 0 0 0 1.06-1.06zm4.796-1.291l-1.753-1.753l-1.06 1.061l1.752 1.753a.75.75 0 1 0 1.06-1.061m1.29-4.796L12 6.973l1.752 1.753a.75.75 0 1 0 1.06-1.06z"/>`), g.Group(children),
	)
}

func Rupee(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M6.5 3.5h11m-11 4.722h11M14.292 20.5L6.5 12.944h2.75c6.111 0 6.111-9.444 0-9.444"/>`), g.Group(children),
	)
}

func RupeeCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/><path d="M9 7.5h6m-6 2.778h6M13.25 17.5L9 13.056h1.5c3.334 0 3.334-5.556 0-5.556"/></g>`), g.Group(children),
	)
}

func RupeeCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12m6-4.5c0 .414.336.75.75.75h1.5c.6 0 1.012.24 1.29.587c.154.193.274.43.352.69H9a.75.75 0 1 0 0 1.5h3.142a2 2 0 0 1-.352.692c-.278.347-.69.587-1.29.587H9a.75.75 0 0 0-.542 1.268l4.25 4.444a.75.75 0 0 0 1.084-1.036l-3.045-3.185a3.03 3.03 0 0 0 2.214-1.141a3.65 3.65 0 0 0 .721-1.628H15a.75.75 0 0 0 0-1.5h-1.318a3.8 3.8 0 0 0-.476-1.278H15a.75.75 0 0 0 0-1.5H9a.75.75 0 0 0-.75.75"/>`), g.Group(children),
	)
}

func RupeeDiamond(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M2.707 10.295a2.41 2.41 0 0 0 0 3.41l7.588 7.588a2.41 2.41 0 0 0 3.41 0l7.588-7.588a2.41 2.41 0 0 0 0-3.41l-7.588-7.588a2.41 2.41 0 0 0-3.41 0z"/><path d="M9 7.5h6m-6 2.778h6M13.25 17.5L9 13.056h1.5c3.334 0 3.334-5.556 0-5.556"/></g>`), g.Group(children),
	)
}

func RupeeDiamondSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.79 1.49a3.2 3.2 0 0 0-1.025.686L2.177 9.765a3.16 3.16 0 0 0 0 4.47l7.588 7.588a3.16 3.16 0 0 0 4.47 0l7.588-7.588a3.16 3.16 0 0 0 0-4.47l-7.588-7.588a3.16 3.16 0 0 0-3.445-.686M8.25 7.5A.75.75 0 0 1 9 6.75h6a.75.75 0 0 1 0 1.5h-1.794c.238.393.395.83.476 1.278H15a.75.75 0 0 1 0 1.5h-1.318a3.65 3.65 0 0 1-.721 1.628a3.03 3.03 0 0 1-2.214 1.141l3.045 3.185a.75.75 0 0 1-1.084 1.036l-4.25-4.444A.75.75 0 0 1 9 12.306h1.5c.6 0 1.012-.24 1.29-.587a2 2 0 0 0 .352-.691H9a.75.75 0 0 1 0-1.5h3.142a2 2 0 0 0-.352-.691c-.278-.347-.69-.587-1.29-.587H9a.75.75 0 0 1-.75-.75"/>`), g.Group(children),
	)
}

func RupeeHexagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M20.5 15.8V8.2a1.91 1.91 0 0 0-.944-1.645l-6.612-3.8a1.88 1.88 0 0 0-1.888 0l-6.612 3.8A1.9 1.9 0 0 0 3.5 8.2v7.602a1.91 1.91 0 0 0 .944 1.644l6.612 3.8a1.88 1.88 0 0 0 1.888 0l6.612-3.8A1.9 1.9 0 0 0 20.5 15.8"/><path d="M9 7.5h6m-6 2.778h6M13.25 17.5L9 13.056h1.5c3.334 0 3.334-5.556 0-5.556"/></g>`), g.Group(children),
	)
}

func RupeeHexagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="m10.68 2.105l-6.61 3.8l-.002.002A2.65 2.65 0 0 0 2.75 8.198v7.603a2.64 2.64 0 0 0 1.318 2.292l.003.002l6.608 3.799h.002a2.63 2.63 0 0 0 2.639 0h.001l6.608-3.8h.003A2.65 2.65 0 0 0 21.25 15.8V8.2a2.65 2.65 0 0 0-1.318-2.292l-6.61-3.8l-.002-.002a2.63 2.63 0 0 0-2.64 0M8.25 7.5A.75.75 0 0 1 9 6.75h6a.75.75 0 0 1 0 1.5h-1.794c.238.393.395.83.476 1.278H15a.75.75 0 0 1 0 1.5h-1.318a3.65 3.65 0 0 1-.721 1.628a3.03 3.03 0 0 1-2.214 1.141l3.045 3.185a.75.75 0 0 1-1.084 1.036l-4.25-4.444A.75.75 0 0 1 9 12.306h1.5c.6 0 1.012-.24 1.29-.587a2 2 0 0 0 .352-.691H9a.75.75 0 0 1 0-1.5h3.142a2 2 0 0 0-.352-.691c-.278-.347-.69-.587-1.29-.587H9a.75.75 0 0 1-.75-.75"/>`), g.Group(children),
	)
}

func RupeeOctagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M7.805 3.469C8.16 3.115 8.451 3 8.937 3h6.126c.486 0 .778.115 1.132.469l4.336 4.336c.354.354.469.646.469 1.132v6.126c0 .5-.125.788-.469 1.132l-4.336 4.336c-.354.354-.646.469-1.132.469H8.937c-.5 0-.788-.125-1.132-.469L3.47 16.195c-.355-.355-.47-.646-.47-1.132V8.937c0-.5.125-.788.469-1.132z"/><path d="M9 7.5h6m-6 2.778h6M13.25 17.5L9 13.056h1.5c3.334 0 3.334-5.556 0-5.556"/></g>`), g.Group(children),
	)
}

func RupeeOctagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.037 2.408c-.299.122-.54.31-.762.53L2.938 7.275c-.213.214-.4.45-.525.748a2.3 2.3 0 0 0-.163.914v6.126c0 .302.036.602.158.9s.31.54.53.762l4.337 4.337c.214.213.45.4.748.524c.298.125.601.164.914.164h6.126c.302 0 .602-.035.9-.158c.299-.122.54-.31.762-.53l4.337-4.337c.213-.214.4-.45.524-.748a2.3 2.3 0 0 0 .164-.914V8.937a2.3 2.3 0 0 0-.158-.9a2.3 2.3 0 0 0-.53-.762l-4.337-4.337a2.3 2.3 0 0 0-.762-.53a2.3 2.3 0 0 0-.9-.158H8.937a2.3 2.3 0 0 0-.9.158M8.25 7.5A.75.75 0 0 1 9 6.75h6a.75.75 0 0 1 0 1.5h-1.794c.238.393.395.83.476 1.278H15a.75.75 0 0 1 0 1.5h-1.318a3.65 3.65 0 0 1-.721 1.628a3.03 3.03 0 0 1-2.214 1.141l3.045 3.185a.75.75 0 0 1-1.084 1.036l-4.25-4.444A.75.75 0 0 1 9 12.306h1.5c.6 0 1.012-.24 1.29-.587a2 2 0 0 0 .352-.691H9a.75.75 0 0 1 0-1.5h3.142a2 2 0 0 0-.352-.691c-.278-.347-.69-.587-1.29-.587H9a.75.75 0 0 1-.75-.75"/>`), g.Group(children),
	)
}

func RupeeSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M5.75 3.5a.75.75 0 0 1 .75-.75h11a.75.75 0 0 1 0 1.5h-4.461q.112.114.217.236c.729.845 1.15 1.903 1.282 2.986H17.5a.75.75 0 0 1 0 1.5h-2.962c-.132 1.083-.553 2.141-1.282 2.987c-.911 1.055-2.267 1.735-4.006 1.735h-.9l6.464 6.268a.75.75 0 1 1-1.044 1.076l-7.792-7.555a.75.75 0 0 1 .522-1.289h2.75c1.316 0 2.253-.5 2.87-1.215c.475-.551.781-1.254.904-2.007H6.5a.75.75 0 1 1 0-1.5h6.524c-.123-.752-.429-1.456-.904-2.006c-.617-.716-1.554-1.216-2.87-1.216H6.5a.75.75 0 0 1-.75-.75"/>`), g.Group(children),
	)
}

func RupeeSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/><path d="M9 7.5h6m-6 2.778h6M13.25 17.5L9 13.056h1.5c3.334 0 3.334-5.556 0-5.556"/></g>`), g.Group(children),
	)
}

func RupeeSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057M8.25 7.5c0 .414.336.75.75.75h1.5c.6 0 1.012.24 1.29.587c.154.193.274.43.352.69H9a.75.75 0 1 0 0 1.5h3.142a2 2 0 0 1-.352.692c-.278.347-.69.587-1.29.587H9a.75.75 0 0 0-.542 1.268l4.25 4.444a.75.75 0 0 0 1.084-1.036l-3.045-3.185a3.03 3.03 0 0 0 2.214-1.141a3.65 3.65 0 0 0 .721-1.628H15a.75.75 0 0 0 0-1.5h-1.318a3.8 3.8 0 0 0-.476-1.278H15a.75.75 0 0 0 0-1.5H9a.75.75 0 0 0-.75.75"/>`), g.Group(children),
	)
}

func RupeeWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83"/><path d="M9 7.5h6m-6 2.778h6M13.25 17.5L9 13.056h1.5c3.334 0 3.334-5.556 0-5.556"/></g>`), g.Group(children),
	)
}

func RupeeWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.565 2.075c-.394.189-.755.497-1.26.928l-.079.066a2.56 2.56 0 0 1-1.58.655l-.102.008c-.662.053-1.135.09-1.547.236a3.33 3.33 0 0 0-2.03 2.029c-.145.412-.182.885-.235 1.547l-.008.102a2.56 2.56 0 0 1-.655 1.58l-.066.078c-.431.506-.74.867-.928 1.261a3.33 3.33 0 0 0 0 2.87c.189.394.497.755.928 1.26l.066.079c.41.48.604.939.655 1.58l.008.102c.053.662.09 1.135.236 1.547a3.33 3.33 0 0 0 2.029 2.03c.412.145.885.182 1.547.235l.102.008c.629.05 1.09.238 1.58.655l.079.066c.505.431.866.74 1.26.928a3.33 3.33 0 0 0 2.87 0c.394-.189.755-.497 1.26-.928l.079-.066c.48-.41.939-.604 1.58-.655l.102-.008c.662-.053 1.135-.09 1.547-.236a3.33 3.33 0 0 0 2.03-2.029c.145-.412.182-.885.235-1.547l.008-.102c.05-.629.238-1.09.655-1.58l.066-.079c.431-.505.74-.866.928-1.26a3.33 3.33 0 0 0 0-2.87c-.189-.394-.497-.755-.928-1.26l-.066-.079a2.56 2.56 0 0 1-.655-1.58l-.008-.102c-.053-.662-.09-1.135-.236-1.547a3.33 3.33 0 0 0-2.029-2.03c-.412-.145-.885-.182-1.547-.235l-.102-.008a2.56 2.56 0 0 1-1.58-.655l-.079-.066c-.505-.431-.866-.74-1.26-.928a3.33 3.33 0 0 0-2.87 0M8.25 7.5A.75.75 0 0 1 9 6.75h6a.75.75 0 0 1 0 1.5h-1.794c.238.393.395.83.476 1.278H15a.75.75 0 0 1 0 1.5h-1.318a3.65 3.65 0 0 1-.721 1.628a3.03 3.03 0 0 1-2.214 1.141l3.045 3.185a.75.75 0 0 1-1.084 1.036l-4.25-4.444A.75.75 0 0 1 9 12.306h1.5c.6 0 1.012-.24 1.29-.587a2 2 0 0 0 .352-.691H9a.75.75 0 0 1 0-1.5h3.142a2 2 0 0 0-.352-.691c-.278-.347-.69-.587-1.29-.587H9a.75.75 0 0 1-.75-.75"/>`), g.Group(children),
	)
}

func SadCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9 16c.85-.63 1.885-1 3-1s2.15.37 3 1m-5.5-5.5V10m5 .5V10"/><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/></g>`), g.Group(children),
	)
}

func SadCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0 5.385 4.365 9.75 9.75 9.75s9.75-4.365 9.75-9.75S17.385 2.25 12 2.25S2.25 6.615 2.25 12m6.303 3.398A5.77 5.77 0 0 1 12 14.25c1.285 0 2.474.427 3.447 1.148a.75.75 0 0 1-.894 1.204A4.27 4.27 0 0 0 12 15.75a4.27 4.27 0 0 0-2.553.852a.75.75 0 1 1-.894-1.204M10.25 10v.5a.75.75 0 1 1-1.5 0V10a.75.75 0 1 1 1.5 0m4.25-.75a.75.75 0 0 1 .75.75v.5a.75.75 0 1 1-1.5 0V10a.75.75 0 0 1 .75-.75"/>`), g.Group(children),
	)
}

func SadGhost(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9 16c.85-.63 1.885-1 3-1s2.15.37 3 1m-5.5-5.5V10m5 .5V10"/><path d="M3 18.562v-6.518C3 7.05 7.03 3 12 3s9 4.05 9 9.044v6.517c0 1.162-.967 2.519-2 2c-.835-.42-2.223-.52-3 0c-.874.585-2.126.585-3 0c-.885-.593-1.649-.57-2.5 0c-.874.585-2.126.585-3 0c-.777-.52-1.665-.42-2.5 0c-1.033.519-2-.838-2-2"/></g>`), g.Group(children),
	)
}

func SadGhostSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12.044v6.517c0 .764.308 1.57.8 2.127c.501.567 1.354 1.012 2.287.543c.696-.35 1.275-.363 1.746-.047c1.126.755 2.708.755 3.834 0c.345-.23.607-.308.825-.31c.218-.001.485.072.84.31c1.127.755 2.709.755 3.835 0c.213-.142.58-.237 1.044-.226c.454.01.898.12 1.202.273c.933.469 1.786.024 2.287-.543c.492-.557.8-1.363.8-2.126v-6.518c0-5.405-4.362-9.794-9.75-9.794s-9.75 4.389-9.75 9.794m6.303 3.354A5.77 5.77 0 0 1 12 14.25c1.285 0 2.474.427 3.447 1.148a.75.75 0 0 1-.894 1.204A4.27 4.27 0 0 0 12 15.75a4.27 4.27 0 0 0-2.553.852a.75.75 0 1 1-.894-1.204M10.25 10v.5a.75.75 0 1 1-1.5 0V10a.75.75 0 1 1 1.5 0m4.25-.75a.75.75 0 0 1 .75.75v.5a.75.75 0 1 1-1.5 0V10a.75.75 0 0 1 .75-.75"/>`), g.Group(children),
	)
}

func SadSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9 16c.85-.63 1.885-1 3-1s2.15.37 3 1m-5.5-5.5V10m5 .5V10"/><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/></g>`), g.Group(children),
	)
}

func SadSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25c-1.092 0-1.958 0-2.655.057c-.714.058-1.317.18-1.868.46a4.75 4.75 0 0 0-2.076 2.077c-.281.55-.403 1.154-.461 1.868c-.057.697-.057 1.563-.057 2.655v5.266c0 1.092 0 1.958.057 2.655c.058.714.18 1.317.46 1.869a4.75 4.75 0 0 0 2.077 2.075c.55.281 1.154.403 1.868.461c.697.057 1.563.057 2.655.057h5.266c1.092 0 1.958 0 2.655-.057c.714-.058 1.317-.18 1.869-.46a4.75 4.75 0 0 0 2.075-2.076c.281-.552.403-1.155.461-1.869c.057-.697.057-1.563.057-2.655V9.367c0-1.092 0-1.958-.057-2.655c-.058-.714-.18-1.317-.46-1.868a4.75 4.75 0 0 0-2.076-2.076c-.552-.281-1.155-.403-1.869-.461c-.697-.057-1.563-.057-2.655-.057zm-.814 13.148A5.77 5.77 0 0 1 12 14.25c1.285 0 2.474.427 3.447 1.148a.75.75 0 0 1-.894 1.204A4.27 4.27 0 0 0 12 15.75a4.27 4.27 0 0 0-2.553.852a.75.75 0 1 1-.894-1.204M10.25 10v.5a.75.75 0 1 1-1.5 0V10a.75.75 0 1 1 1.5 0m4.25-.75a.75.75 0 0 1 .75.75v.5a.75.75 0 1 1-1.5 0V10a.75.75 0 0 1 .75-.75"/>`), g.Group(children),
	)
}

func Save(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M16.25 21v-4.765a1.59 1.59 0 0 0-1.594-1.588H9.344a1.59 1.59 0 0 0-1.594 1.588V21m8.5-17.715v2.362a1.59 1.59 0 0 1-1.594 1.588H9.344A1.59 1.59 0 0 1 7.75 5.647V3m8.5.285A3.2 3.2 0 0 0 14.93 3H7.75m8.5.285c.344.156.661.374.934.645l2.382 2.375A3.17 3.17 0 0 1 20.5 8.55v9.272A3.18 3.18 0 0 1 17.313 21H6.688A3.18 3.18 0 0 1 3.5 17.823V6.176A3.18 3.18 0 0 1 6.688 3H7.75"/>`), g.Group(children),
	)
}

func SaveSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.5 3.75v1.897c0 .46.375.838.844.838h5.312a.84.84 0 0 0 .844-.838v-1.83a2.5 2.5 0 0 0-.57-.067zm8.813 18H6.688a3.93 3.93 0 0 1-3.938-3.927V6.176A3.93 3.93 0 0 1 6.688 2.25h8.242a3.95 3.95 0 0 1 2.783 1.15l2.383 2.374A3.92 3.92 0 0 1 21.25 8.55v9.272a3.93 3.93 0 0 1-3.937 3.927m-1.813-1.5v-4.015a.84.84 0 0 0-.844-.838H9.344a.84.84 0 0 0-.844.838v4.015z"/>`), g.Group(children),
	)
}

func Scan(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3.114 7.5c.144-1.463.47-2.447 1.204-3.182C5.636 3 7.758 3 12 3s6.364 0 7.682 1.318c.735.735 1.06 1.72 1.204 3.182m0 9c-.144 1.463-.47 2.447-1.204 3.182C18.364 21 16.242 21 12 21s-6.364 0-7.682-1.318c-.735-.735-1.06-1.72-1.204-3.182M3 12h.5m8.25 0h.5m-5 0h.5m8.5 0h.5m3.75 0h.5"/>`), g.Group(children),
	)
}

func ScanSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M11.943 2.25h.114c2.073 0 3.705 0 4.98.171c1.31.176 2.354.545 3.175 1.367c.917.916 1.27 2.11 1.42 3.639a.75.75 0 1 1-1.493.146c-.137-1.396-.434-2.172-.987-2.725c-.497-.496-1.172-.786-2.314-.94c-1.164-.156-2.696-.158-4.838-.158s-3.674.002-4.838.158c-1.142.154-1.817.444-2.314.94c-.553.553-.85 1.329-.987 2.725a.75.75 0 0 1-1.493-.146c.15-1.529.503-2.723 1.42-3.64c.821-.82 1.866-1.19 3.174-1.366c1.276-.171 2.908-.171 4.981-.171M3.041 15.754a.75.75 0 0 1 .82.673c.137 1.396.434 2.172.987 2.725c.497.496 1.172.786 2.314.94c1.164.156 2.695.158 4.838.158s3.674-.002 4.838-.158c1.142-.154 1.817-.444 2.314-.94c.553-.553.85-1.329.987-2.725a.75.75 0 0 1 1.493.146c-.15 1.529-.503 2.723-1.42 3.64c-.821.82-1.866 1.19-3.174 1.366c-1.276.171-2.908.171-4.981.171h-.114c-2.073 0-3.705 0-4.98-.171c-1.31-.176-2.354-.545-3.175-1.367c-.917-.916-1.27-2.11-1.42-3.639a.75.75 0 0 1 .673-.82M2.25 12a.75.75 0 0 1 .75-.75h.5a.75.75 0 0 1 0 1.5H3a.75.75 0 0 1-.75-.75M11 12a.75.75 0 0 1 .75-.75h.5a.75.75 0 0 1 0 1.5h-.5A.75.75 0 0 1 11 12m-4.5 0a.75.75 0 0 1 .75-.75h.5a.75.75 0 0 1 0 1.5h-.5A.75.75 0 0 1 6.5 12m9 0a.75.75 0 0 1 .75-.75h.5a.75.75 0 0 1 0 1.5h-.5a.75.75 0 0 1-.75-.75m4.25 0a.75.75 0 0 1 .75-.75h.5a.75.75 0 0 1 0 1.5h-.5a.75.75 0 0 1-.75-.75"/>`), g.Group(children),
	)
}

func Scissors(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M11.79 12L7 8.855m14-2.903L7 15.145M8 6.92c0 1.337-1.12 2.42-2.5 2.42S3 8.256 3 6.919S4.12 4.5 5.5 4.5S8 5.583 8 6.92m0 10.162c0-1.336-1.12-2.42-2.5-2.42S3 15.745 3 17.081S4.12 19.5 5.5 19.5S8 18.417 8 17.08m13 .968l-6.066-3.983"/>`), g.Group(children),
	)
}

func ScissorsSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.75 6.92c0 .675-.215 1.297-.579 1.807l3.619 2.376l8.798-5.778a.75.75 0 0 1 .824 1.254l-9.196 6.038l-.029.019l-4.016 2.637c.364.51.579 1.132.579 1.808c0 1.773-1.478 3.169-3.25 3.169s-3.25-1.396-3.25-3.17c0-1.773 1.478-3.169 3.25-3.169c.53 0 1.035.126 1.482.349L10.423 12L6.982 9.74a3.3 3.3 0 0 1-1.482.349c-1.772 0-3.25-1.396-3.25-3.17c0-1.773 1.478-3.169 3.25-3.169s3.25 1.396 3.25 3.17m6.596 6.518a.75.75 0 1 0-.824 1.254l6.066 3.983a.75.75 0 1 0 .824-1.253z"/>`), g.Group(children),
	)
}

func SeaWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m3 5.918l1.764-.887a4.97 4.97 0 0 1 4.472 0l.528.266a4.97 4.97 0 0 0 4.472 0l.528-.266a4.97 4.97 0 0 1 4.472 0L21 5.918M3 10.446l1.764-.888a4.97 4.97 0 0 1 4.472 0l.528.266a4.97 4.97 0 0 0 4.472 0l.528-.266a4.97 4.97 0 0 1 4.472 0l1.764.888M3 14.973l1.764-.888a4.97 4.97 0 0 1 4.472 0l.528.266a4.97 4.97 0 0 0 4.472 0l.528-.266a4.97 4.97 0 0 1 4.472 0l1.764.888M3 19.5l1.764-.887a4.97 4.97 0 0 1 4.472 0l.528.265a4.97 4.97 0 0 0 4.472 0l.528-.265a4.97 4.97 0 0 1 4.472 0L21 19.5"/>`), g.Group(children),
	)
}

func SeaWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M4.427 4.361a5.72 5.72 0 0 1 5.146 0l.528.266a4.22 4.22 0 0 0 3.798 0l.528-.266a5.72 5.72 0 0 1 5.146 0l1.764.887a.75.75 0 1 1-.674 1.34l-1.764-.887a4.22 4.22 0 0 0-3.798 0l-.528.266a5.72 5.72 0 0 1-5.146 0L8.899 5.7a4.22 4.22 0 0 0-3.798 0l-1.764.887a.75.75 0 1 1-.674-1.34zm0 4.527a5.72 5.72 0 0 1 5.146 0l.528.266a4.22 4.22 0 0 0 3.798 0l.528-.266a5.72 5.72 0 0 1 5.146 0l1.764.888a.75.75 0 1 1-.674 1.34l-1.764-.888a4.22 4.22 0 0 0-3.798 0l-.528.266a5.72 5.72 0 0 1-5.146 0l-.528-.266a4.22 4.22 0 0 0-3.798 0l-1.764.888a.75.75 0 0 1-.674-1.34zm0 4.528a5.72 5.72 0 0 1 5.146 0l.528.265a4.22 4.22 0 0 0 3.798 0l.528-.265a5.72 5.72 0 0 1 5.146 0l1.764.887a.75.75 0 1 1-.674 1.34l-1.764-.888a4.22 4.22 0 0 0-3.798 0l-.528.266a5.72 5.72 0 0 1-5.146 0l-.528-.266a4.22 4.22 0 0 0-3.798 0l-1.764.888a.75.75 0 1 1-.674-1.34zm0 4.527a5.72 5.72 0 0 1 5.146 0l.528.265a4.22 4.22 0 0 0 3.798 0l.528-.265a5.72 5.72 0 0 1 5.146 0l1.764.887a.75.75 0 1 1-.674 1.34l-1.764-.887a4.22 4.22 0 0 0-3.798 0l-.528.265a5.72 5.72 0 0 1-5.146 0l-.528-.265a4.22 4.22 0 0 0-3.798 0l-1.764.887a.75.75 0 1 1-.674-1.34z"/>`), g.Group(children),
	)
}

func Search(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M19 11.5a7.5 7.5 0 1 1-15 0a7.5 7.5 0 0 1 15 0m-2.107 5.42l3.08 3.08"/>`), g.Group(children),
	)
}

func SearchCheck(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="m9.75 11.742l1.039 1.181c.095.109.267.1.351-.016L13.25 10"/><path d="M19 11.5a7.5 7.5 0 1 1-15 0a7.5 7.5 0 0 1 15 0m-2.107 5.42l3.08 3.08"/></g>`), g.Group(children),
	)
}

func SearchCheckSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M3.25 11.5a8.25 8.25 0 1 1 14.578 5.294l2.675 2.676a.75.75 0 0 1-1.06 1.06l-2.678-2.678A8.25 8.25 0 0 1 3.25 11.5m10.607-1.06a.75.75 0 0 0-1.214-.88l-1.724 2.376l-.606-.69a.75.75 0 0 0-1.126.991l1.039 1.182a.976.976 0 0 0 1.522-.071z"/>`), g.Group(children),
	)
}

func SearchCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/><path d="M13.856 13.85a3.429 3.429 0 1 0-4.855-4.842a3.429 3.429 0 0 0 4.855 4.842m0 0L16 16"/></g>`), g.Group(children),
	)
}

func SearchCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M8.75 11.429a2.679 2.679 0 1 1 5.357 0a2.679 2.679 0 0 1-5.357 0"/><path d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12m9.179-4.75a4.179 4.179 0 1 0 2.38 7.614l1.66 1.665a.75.75 0 1 0 1.062-1.059l-1.663-1.668a4.179 4.179 0 0 0-3.44-6.552"/></g>`), g.Group(children),
	)
}

func SearchDiamond(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M2.707 10.295a2.41 2.41 0 0 0 0 3.41l7.588 7.588a2.41 2.41 0 0 0 3.41 0l7.588-7.588a2.41 2.41 0 0 0 0-3.41l-7.588-7.588a2.41 2.41 0 0 0-3.41 0z"/><path d="M13.856 13.85a3.429 3.429 0 1 0-4.855-4.842a3.429 3.429 0 0 0 4.855 4.842m0 0L16 16"/></g>`), g.Group(children),
	)
}

func SearchDiamondSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M8.75 11.429a2.679 2.679 0 1 1 5.357 0a2.679 2.679 0 0 1-5.357 0"/><path d="M10.79 1.49a3.16 3.16 0 0 1 3.445.687l7.588 7.588a3.16 3.16 0 0 1 0 4.47l-7.588 7.588a3.16 3.16 0 0 1-4.47 0l-7.588-7.588a3.16 3.16 0 0 1 0-4.47l7.588-7.589a3.2 3.2 0 0 1 1.025-.685m.639 5.76a4.179 4.179 0 1 0 2.38 7.614l1.66 1.665a.75.75 0 1 0 1.062-1.059l-1.663-1.668a4.179 4.179 0 0 0-3.44-6.552"/></g>`), g.Group(children),
	)
}

func SearchDot(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M19 11.5a7.5 7.5 0 1 1-15 0a7.5 7.5 0 0 1 15 0m-2.107 5.42l3.08 3.08"/><path d="M11.5 13.5a2 2 0 1 0 0-4a2 2 0 0 0 0 4"/></g>`), g.Group(children),
	)
}

func SearchDotSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M10.25 11.5a1.25 1.25 0 1 1 2.5 0a1.25 1.25 0 0 1-2.5 0"/><path d="M3.25 11.5a8.25 8.25 0 0 0 13.515 6.352l2.678 2.678a.75.75 0 0 0 1.06-1.06l-2.675-2.676A8.25 8.25 0 1 0 3.25 11.5m8.25-2.75a2.75 2.75 0 1 1 0 5.5a2.75 2.75 0 0 1 0-5.5"/></g>`), g.Group(children),
	)
}

func SearchHexagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M20.5 15.8V8.2a1.91 1.91 0 0 0-.944-1.645l-6.612-3.8a1.88 1.88 0 0 0-1.888 0l-6.612 3.8A1.9 1.9 0 0 0 3.5 8.2v7.602a1.91 1.91 0 0 0 .944 1.644l6.612 3.8a1.88 1.88 0 0 0 1.888 0l6.612-3.8A1.9 1.9 0 0 0 20.5 15.8"/><path d="M13.856 13.85a3.429 3.429 0 1 0-4.855-4.842a3.429 3.429 0 0 0 4.855 4.842m0 0L16 16"/></g>`), g.Group(children),
	)
}

func SearchHexagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M8.75 11.429a2.679 2.679 0 1 1 5.357 0a2.679 2.679 0 0 1-5.357 0"/><path d="M10.68 2.105a2.63 2.63 0 0 1 2.64 0l.001.001l6.611 3.8A2.65 2.65 0 0 1 21.25 8.2v7.603a2.66 2.66 0 0 1-1.318 2.291l-.003.002l-6.608 3.799h-.002a2.63 2.63 0 0 1-2.639 0h-.001l-6.608-3.8h-.003A2.64 2.64 0 0 1 2.75 15.8V8.198a2.66 2.66 0 0 1 1.318-2.291l.003-.002zm.749 5.145a4.179 4.179 0 1 0 2.38 7.614l1.66 1.665a.75.75 0 1 0 1.062-1.059l-1.663-1.668a4.179 4.179 0 0 0-3.44-6.552"/></g>`), g.Group(children),
	)
}

func SearchHome(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M10.25 14a1 1 0 0 1-1-1v-2.36L11.5 9l2.25 1.64V13a1 1 0 0 1-1 1z"/><path d="M19 11.5a7.5 7.5 0 1 1-15 0a7.5 7.5 0 0 1 15 0m-2.107 5.42l3.08 3.08"/></g>`), g.Group(children),
	)
}

func SearchHomeSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M10 13v-1.978l1.5-1.094l1.5 1.094V13a.25.25 0 0 1-.25.25h-2.5A.25.25 0 0 1 10 13"/><path d="M3.25 11.5a8.25 8.25 0 1 1 14.578 5.294l2.675 2.676a.75.75 0 0 1-1.06 1.06l-2.678-2.678A8.25 8.25 0 0 1 3.25 11.5m10.942-1.466l-2.25-1.64a.75.75 0 0 0-.884 0l-2.25 1.64a.75.75 0 0 0-.308.606V13c0 .966.784 1.75 1.75 1.75h2.5A1.75 1.75 0 0 0 14.5 13v-2.36a.75.75 0 0 0-.308-.606"/></g>`), g.Group(children),
	)
}

func SearchMinus(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9.5 11.5h4m5.5 0a7.5 7.5 0 1 1-15 0a7.5 7.5 0 0 1 15 0m-2.107 5.42l3.08 3.08"/>`), g.Group(children),
	)
}

func SearchMinusSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M3.25 11.5a8.25 8.25 0 1 1 14.578 5.294l2.675 2.676a.75.75 0 0 1-1.06 1.06l-2.678-2.678A8.25 8.25 0 0 1 3.25 11.5m6.25-.75a.75.75 0 0 0 0 1.5h4a.75.75 0 0 0 0-1.5z"/>`), g.Group(children),
	)
}

func SearchOctagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M7.805 3.469C8.16 3.115 8.451 3 8.937 3h6.126c.486 0 .778.115 1.132.469l4.336 4.336c.354.354.469.646.469 1.132v6.126c0 .5-.125.788-.469 1.132l-4.336 4.336c-.354.354-.646.469-1.132.469H8.937c-.5 0-.788-.125-1.132-.469L3.47 16.195c-.355-.355-.47-.646-.47-1.132V8.937c0-.5.125-.788.469-1.132z"/><path d="M13.856 13.85a3.429 3.429 0 1 0-4.855-4.842a3.429 3.429 0 0 0 4.855 4.842m0 0L16 16"/></g>`), g.Group(children),
	)
}

func SearchOctagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M8.75 11.429a2.679 2.679 0 1 1 5.357 0a2.679 2.679 0 0 1-5.357 0"/><path d="M8.037 2.408a2.3 2.3 0 0 1 .9-.158h6.126c.302 0 .602.036.9.158s.54.31.762.53l4.337 4.337c.22.221.408.463.53.762c.123.298.158.598.158.9v6.126c0 .313-.039.616-.163.914a2.3 2.3 0 0 1-.525.748l-4.337 4.337a2.3 2.3 0 0 1-.762.53a2.3 2.3 0 0 1-.9.158H8.937c-.313 0-.616-.039-.914-.163a2.3 2.3 0 0 1-.748-.525l-4.337-4.337a2.3 2.3 0 0 1-.53-.762a2.3 2.3 0 0 1-.158-.9V8.937c0-.313.039-.616.163-.914a2.3 2.3 0 0 1 .525-.748l4.337-4.337c.221-.22.463-.408.762-.53m3.392 4.842a4.179 4.179 0 1 0 2.38 7.614l1.66 1.665a.75.75 0 1 0 1.062-1.059l-1.663-1.668a4.179 4.179 0 0 0-3.44-6.552"/></g>`), g.Group(children),
	)
}

func SearchPlus(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9.5 11.5h4m-2-2v4m7.5-2a7.5 7.5 0 1 1-15 0a7.5 7.5 0 0 1 15 0m-2.107 5.42l3.08 3.08"/>`), g.Group(children),
	)
}

func SearchPlusSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M3.25 11.5a8.25 8.25 0 1 1 14.578 5.294l2.675 2.676a.75.75 0 0 1-1.06 1.06l-2.678-2.678A8.25 8.25 0 0 1 3.25 11.5m9-2a.75.75 0 0 0-1.5 0v1.25H9.5a.75.75 0 0 0 0 1.5h1.25v1.25a.75.75 0 0 0 1.5 0v-1.25h1.25a.75.75 0 0 0 0-1.5h-1.25z"/>`), g.Group(children),
	)
}

func SearchSlash(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M19 11.5a7.5 7.5 0 1 1-15 0a7.5 7.5 0 0 1 15 0m-2.107 5.42l3.08 3.08M21 3L3 21"/>`), g.Group(children),
	)
}

func SearchSlashSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M21.53 2.47a.75.75 0 0 1 0 1.06l-3.257 3.258A8.2 8.2 0 0 1 19.75 11.5a8.22 8.22 0 0 1-1.922 5.294l2.675 2.676a.75.75 0 0 1-1.06 1.06l-2.678-2.678A8.22 8.22 0 0 1 11.5 19.75a8.2 8.2 0 0 1-4.712-1.477L3.53 21.53a.75.75 0 0 1-1.06-1.06l3.166-3.167A8.25 8.25 0 0 1 17.303 5.636L20.47 2.47a.75.75 0 0 1 1.06 0"/>`), g.Group(children),
	)
}

func SearchSnooze(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M10.25 9.5h2.5l-2.5 4h2.5"/><path d="M19 11.5a7.5 7.5 0 1 1-15 0a7.5 7.5 0 0 1 15 0m-2.107 5.42l3.08 3.08"/></g>`), g.Group(children),
	)
}

func SearchSnoozeSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M3.25 11.5a8.25 8.25 0 1 1 14.578 5.294l2.675 2.676a.75.75 0 0 1-1.06 1.06l-2.678-2.678A8.25 8.25 0 0 1 3.25 11.5m7-2.75a.75.75 0 0 0 0 1.5h1.147l-1.783 2.852a.75.75 0 0 0 .636 1.148h2.5a.75.75 0 0 0 0-1.5h-1.147l1.783-2.852a.75.75 0 0 0-.636-1.148z"/>`), g.Group(children),
	)
}

func SearchSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M11.5 3.25a8.25 8.25 0 1 0 5.265 14.602l2.678 2.678a.75.75 0 0 0 1.06-1.06l-2.675-2.676A8.25 8.25 0 0 0 11.5 3.25"/>`), g.Group(children),
	)
}

func SearchSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/><path d="M13.856 13.85a3.429 3.429 0 1 0-4.855-4.842a3.429 3.429 0 0 0 4.855 4.842m0 0L16 16"/></g>`), g.Group(children),
	)
}

func SearchSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M8.75 11.429a2.679 2.679 0 1 1 5.357 0a2.679 2.679 0 0 1-5.357 0"/><path d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057m2.062 5a4.179 4.179 0 1 0 2.38 7.614l1.66 1.665a.75.75 0 1 0 1.062-1.059l-1.663-1.668a4.179 4.179 0 0 0-3.44-6.552"/></g>`), g.Group(children),
	)
}

func SearchUser(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M14.5 15c0-3.861-6-3.861-6 0"/><path d="M11.5 12a2 2 0 1 0 0-4a2 2 0 0 0 0 4"/><path d="M19 11.5a7.5 7.5 0 1 1-15 0a7.5 7.5 0 0 1 15 0m-2.107 5.42l3.08 3.08"/></g>`), g.Group(children),
	)
}

func SearchUserSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M10.25 10a1.25 1.25 0 1 1 2.5 0a1.25 1.25 0 0 1-2.5 0"/><path d="M3.25 11.5a8.25 8.25 0 1 1 14.578 5.294l2.675 2.676a.75.75 0 0 1-1.06 1.06l-2.678-2.678A8.25 8.25 0 0 1 3.25 11.5m8.25-4.25a2.75 2.75 0 0 0-2.01 4.627a3.5 3.5 0 0 0-.54.382c-.734.629-1.2 1.563-1.2 2.741a.75.75 0 0 0 1.5 0c0-.752.284-1.266.676-1.603c.408-.35.977-.543 1.574-.543s1.166.193 1.574.543c.392.337.676.85.676 1.603a.75.75 0 0 0 1.5 0c0-1.178-.466-2.112-1.2-2.741a3.6 3.6 0 0 0-.54-.382A2.75 2.75 0 0 0 11.5 7.25"/></g>`), g.Group(children),
	)
}

func SearchWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83"/><path d="M13.856 13.85a3.429 3.429 0 1 0-4.855-4.842a3.429 3.429 0 0 0 4.855 4.842m0 0L16 16"/></g>`), g.Group(children),
	)
}

func SearchWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M8.75 11.429a2.679 2.679 0 1 1 5.357 0a2.679 2.679 0 0 1-5.357 0"/><path d="M10.565 2.075a3.33 3.33 0 0 1 2.87 0c.394.189.755.497 1.26.928l.079.066c.48.41.939.604 1.58.655l.102.008c.662.053 1.135.09 1.547.236a3.33 3.33 0 0 1 2.03 2.029c.145.412.182.885.235 1.547l.008.102c.051.641.246 1.1.655 1.58l.066.078c.431.506.74.867.928 1.261a3.33 3.33 0 0 1 0 2.87c-.189.394-.497.755-.928 1.26l-.066.079c-.418.49-.605.951-.655 1.58l-.008.102c-.053.662-.09 1.135-.236 1.547a3.33 3.33 0 0 1-2.029 2.03c-.412.145-.885.182-1.547.235l-.102.008c-.641.051-1.1.246-1.58.655l-.079.066c-.505.431-.866.74-1.26.928a3.33 3.33 0 0 1-2.87 0c-.394-.189-.755-.497-1.26-.928l-.079-.066a2.56 2.56 0 0 0-1.58-.655l-.102-.008c-.662-.053-1.135-.09-1.547-.236a3.33 3.33 0 0 1-2.03-2.029c-.145-.412-.182-.885-.235-1.547l-.008-.102a2.56 2.56 0 0 0-.655-1.58l-.066-.079c-.431-.505-.74-.866-.928-1.26a3.33 3.33 0 0 1 0-2.87c.189-.394.497-.755.928-1.26l.066-.079a2.56 2.56 0 0 0 .655-1.58l.008-.102c.053-.662.09-1.135.236-1.547a3.33 3.33 0 0 1 2.029-2.03c.412-.145.885-.182 1.547-.235l.102-.008a2.56 2.56 0 0 0 1.58-.655l.078-.066c.506-.431.867-.74 1.261-.928m.864 5.175a4.179 4.179 0 1 0 2.38 7.614l1.66 1.665a.75.75 0 1 0 1.062-1.059l-1.663-1.668a4.179 4.179 0 0 0-3.44-6.552"/></g>`), g.Group(children),
	)
}

func SearchX(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m10.25 10.25l3 3m0-3l-3 3M19 11.5a7.5 7.5 0 1 1-15 0a7.5 7.5 0 0 1 15 0m-2.107 5.42l3.08 3.08"/>`), g.Group(children),
	)
}

func SearchXSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M3.25 11.5a8.25 8.25 0 1 1 14.578 5.294l2.675 2.676a.75.75 0 0 1-1.06 1.06l-2.678-2.678A8.25 8.25 0 0 1 3.25 11.5m7.53-1.78a.75.75 0 0 0-1.06 1.06l.97.97l-.97.97a.75.75 0 1 0 1.06 1.06l.97-.97l.97.97a.75.75 0 1 0 1.06-1.06l-.97-.97l.97-.97a.75.75 0 1 0-1.06-1.06l-.97.97z"/>`), g.Group(children),
	)
}

func SelectMultiple(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M3 9v10.4c0 .56 0 .84.109 1.054a1 1 0 0 0 .437.437C3.76 21 4.04 21 4.598 21H15m-8-7.2V6.2c0-1.12 0-1.68.218-2.108c.192-.377.497-.682.874-.874C8.52 3 9.08 3 10.2 3h7.6c1.12 0 1.68 0 2.108.218a2 2 0 0 1 .874.874C21 4.52 21 5.08 21 6.2v7.6c0 1.12 0 1.68-.218 2.108a2 2 0 0 1-.874.874c-.428.218-.986.218-2.104.218h-7.607c-1.118 0-1.678 0-2.105-.218a2 2 0 0 1-.874-.874C7 15.48 7 14.92 7 13.8"/><path d="m11.6 10.323l1.379 1.575a.3.3 0 0 0 .466-.022L16.245 8"/></g>`), g.Group(children),
	)
}

func SelectMultipleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.17 2.25c-.534 0-.98 0-1.345.03c-.38.03-.736.098-1.074.27a2.75 2.75 0 0 0-1.201 1.2c-.172.338-.24.694-.27 1.074c-.03.365-.03.81-.03 1.345v7.66c0 .535 0 .98.03 1.345c.03.38.098.736.27 1.073a2.75 2.75 0 0 0 1.201 1.203c.337.171.694.238 1.073.27c.364.029.81.029 1.342.029h7.668c.533 0 .978 0 1.342-.03c.38-.03.735-.098 1.072-.27a2.75 2.75 0 0 0 1.203-1.202c.171-.337.238-.694.27-1.074c.03-.364.03-.81.03-1.344V6.17c0-.535 0-.98-.03-1.345c-.032-.38-.099-.736-.27-1.074a2.75 2.75 0 0 0-1.203-1.201c-.337-.172-.693-.24-1.073-.27c-.364-.03-.81-.03-1.344-.03zM3 8.25a.75.75 0 0 1 .75.75v10.4c0 .292 0 .466.011.596a.6.6 0 0 0 .018.12a.25.25 0 0 0 .104.105a.6.6 0 0 0 .12.018c.13.01.304.011.595.011H15a.75.75 0 0 1 0 1.5H4.572c-.257 0-.493 0-.69-.016a1.8 1.8 0 0 1-.677-.175a1.75 1.75 0 0 1-.764-.765a1.8 1.8 0 0 1-.175-.676a9 9 0 0 1-.016-.692V9A.75.75 0 0 1 3 8.25m13.684-.858a.75.75 0 0 1 .169 1.047l-2.8 3.876a1.05 1.05 0 0 1-1.639.077l-1.378-1.576a.75.75 0 1 1 1.129-.987l1.005 1.148l2.467-3.416a.75.75 0 0 1 1.047-.169"/>`), g.Group(children),
	)
}

func Send(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m14 10l-3 3m9.288-9.969a.535.535 0 0 1 .68.681l-5.924 16.93a.535.535 0 0 1-.994.04l-3.219-7.242a.54.54 0 0 0-.271-.271l-7.242-3.22a.535.535 0 0 1 .04-.993z"/>`), g.Group(children),
	)
}

func SendSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M20.04 2.323c1.016-.355 1.992.621 1.637 1.637l-5.925 16.93c-.385 1.098-1.915 1.16-2.387.097l-2.859-6.432l4.024-4.025a.75.75 0 0 0-1.06-1.06l-4.025 4.024l-6.432-2.859c-1.063-.473-1-2.002.097-2.387z"/>`), g.Group(children),
	)
}

func Servers(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3 5.7c0-.663.448-1.2 1-1.2h16c.552 0 1 .537 1 1.2v3.6c0 .663-.448 1.2-1 1.2H4c-.552 0-1-.537-1-1.2zm3 1.8h2m-2 9h2m-5-1.8c0-.663.448-1.2 1-1.2h16c.552 0 1 .537 1 1.2v3.6c0 .663-.448 1.2-1 1.2H4c-.552 0-1-.537-1-1.2z"/>`), g.Group(children),
	)
}

func ServersSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 5.7c0-.943.661-1.95 1.75-1.95h16c1.089 0 1.75 1.007 1.75 1.95v3.6c0 .943-.661 1.95-1.75 1.95H4c-1.089 0-1.75-1.007-1.75-1.95zM6 6.75a.75.75 0 0 0 0 1.5h2a.75.75 0 0 0 0-1.5zM2.25 14.7c0-.943.661-1.95 1.75-1.95h16c1.089 0 1.75 1.007 1.75 1.95v3.6c0 .943-.661 1.95-1.75 1.95H4c-1.089 0-1.75-1.007-1.75-1.95zM6 15.75a.75.75 0 0 0 0 1.5h2a.75.75 0 0 0 0-1.5z"/>`), g.Group(children),
	)
}

func Seven(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M10.5 17c0-3.75 5-10 5-10s-3.75.625-6.25 0"/>`), g.Group(children),
	)
}

func SevenCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/><path d="M10.75 16c0-3 4-8 4-8s-3 .5-5 0"/></g>`), g.Group(children),
	)
}

func SevenCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12m7.682-4.728a.75.75 0 0 0-.364 1.456c1.116.279 2.46.272 3.479.208l.084-.005c-.311.445-.665.975-1.02 1.55c-.511.832-1.032 1.774-1.427 2.712c-.39.926-.684 1.91-.684 2.807a.75.75 0 1 0 1.5 0c0-.603.206-1.37.566-2.225c.355-.843.834-1.713 1.323-2.507a32 32 0 0 1 1.906-2.748l.031-.04l.008-.01l.002-.002a.75.75 0 0 0-.71-1.208l-.005.001l-.022.004l-.091.014a20 20 0 0 1-1.554.16c-.982.061-2.138.054-3.022-.167"/>`), g.Group(children),
	)
}

func SevenDiamond(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M10.75 16c0-3 4-8 4-8s-3 .5-5 0"/><path d="M2.707 10.295a2.41 2.41 0 0 0 0 3.41l7.588 7.588a2.41 2.41 0 0 0 3.41 0l7.588-7.588a2.41 2.41 0 0 0 0-3.41l-7.588-7.588a2.41 2.41 0 0 0-3.41 0z"/></g>`), g.Group(children),
	)
}

func SevenDiamondSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.79 1.49a3.16 3.16 0 0 1 3.445.687l7.588 7.588a3.16 3.16 0 0 1 0 4.47l-7.588 7.588a3.16 3.16 0 0 1-4.47 0l-7.588-7.588a3.16 3.16 0 0 1 0-4.47l7.588-7.589a3.2 3.2 0 0 1 1.025-.685m-.858 5.782a.75.75 0 0 0-.364 1.456c1.116.279 2.46.272 3.479.208l.084-.005c-.311.445-.665.975-1.02 1.55c-.511.832-1.032 1.774-1.427 2.712c-.39.926-.684 1.91-.684 2.807a.75.75 0 1 0 1.5 0c0-.603.206-1.37.566-2.225c.355-.843.834-1.713 1.323-2.507a32 32 0 0 1 1.906-2.748l.031-.04l.008-.01l.002-.002a.75.75 0 0 0-.71-1.208l-.005.001l-.022.004l-.091.014a20 20 0 0 1-1.554.16c-.982.061-2.138.054-3.022-.167"/>`), g.Group(children),
	)
}

func SevenHexagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M10.75 16c0-3 4-8 4-8s-3 .5-5 0"/><path d="M20.5 15.8V8.2a1.91 1.91 0 0 0-.944-1.645l-6.612-3.8a1.88 1.88 0 0 0-1.888 0l-6.612 3.8A1.9 1.9 0 0 0 3.5 8.2v7.602a1.91 1.91 0 0 0 .944 1.644l6.612 3.8a1.88 1.88 0 0 0 1.888 0l6.612-3.8A1.9 1.9 0 0 0 20.5 15.8"/></g>`), g.Group(children),
	)
}

func SevenHexagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.68 2.105a2.63 2.63 0 0 1 2.64 0l.001.001l6.611 3.8A2.65 2.65 0 0 1 21.25 8.2v7.603a2.66 2.66 0 0 1-1.318 2.291l-.003.002l-6.608 3.799h-.002a2.63 2.63 0 0 1-2.639 0h-.001l-6.608-3.8h-.003A2.64 2.64 0 0 1 2.75 15.8V8.198a2.66 2.66 0 0 1 1.318-2.291l.003-.002zm-.748 5.167a.75.75 0 0 0-.364 1.456c1.116.279 2.46.272 3.479.208l.084-.005c-.311.445-.665.975-1.02 1.55c-.511.832-1.032 1.774-1.427 2.712c-.39.926-.684 1.91-.684 2.807a.75.75 0 1 0 1.5 0c0-.603.206-1.37.566-2.225c.355-.843.834-1.713 1.323-2.507a32 32 0 0 1 1.906-2.748l.031-.04l.008-.01l.002-.002a.75.75 0 0 0-.71-1.208l-.005.001l-.022.004l-.091.014a20 20 0 0 1-1.554.16c-.982.061-2.138.054-3.022-.167"/>`), g.Group(children),
	)
}

func SevenOctagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M10.75 16c0-3 4-8 4-8s-3 .5-5 0"/><path d="M7.805 3.469C8.16 3.115 8.451 3 8.937 3h6.126c.486 0 .778.115 1.132.469l4.336 4.336c.354.354.469.646.469 1.132v6.126c0 .5-.125.788-.469 1.132l-4.336 4.336c-.354.354-.646.469-1.132.469H8.937c-.5 0-.788-.125-1.132-.469L3.47 16.195c-.355-.355-.47-.646-.47-1.132V8.937c0-.5.125-.788.469-1.132z"/></g>`), g.Group(children),
	)
}

func SevenOctagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.037 2.408a2.3 2.3 0 0 1 .9-.158h6.126c.302 0 .602.036.9.158s.54.31.762.53l4.337 4.337c.22.221.408.463.53.762c.123.298.158.598.158.9v6.126c0 .313-.039.616-.163.914a2.3 2.3 0 0 1-.525.748l-4.337 4.337a2.3 2.3 0 0 1-.762.53a2.3 2.3 0 0 1-.9.158H8.937c-.313 0-.616-.039-.914-.163a2.3 2.3 0 0 1-.748-.525l-4.337-4.337a2.3 2.3 0 0 1-.53-.762a2.3 2.3 0 0 1-.158-.9V8.937c0-.313.039-.616.163-.914a2.3 2.3 0 0 1 .525-.748l4.337-4.337c.221-.22.463-.408.762-.53m1.895 4.864a.75.75 0 0 0-.364 1.456c1.116.279 2.46.272 3.479.208l.084-.005c-.311.445-.665.975-1.02 1.55c-.511.832-1.032 1.774-1.427 2.712c-.39.926-.684 1.91-.684 2.807a.75.75 0 1 0 1.5 0c0-.603.206-1.37.566-2.225c.355-.843.834-1.713 1.323-2.507a32 32 0 0 1 1.906-2.748l.031-.04l.008-.01l.002-.002a.75.75 0 0 0-.71-1.208l-.005.001l-.022.004l-.091.014a20 20 0 0 1-1.554.16c-.982.061-2.138.054-3.022-.167"/>`), g.Group(children),
	)
}

func SevenSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.522 6.818a.75.75 0 0 1 .91-.546c1.134.284 2.602.29 3.834.214a25 25 0 0 0 2.074-.22l.029-.005h.007a.75.75 0 0 1 .71 1.207l-.003.004l-.01.012l-.04.05l-.153.198a40 40 0 0 0-2.242 3.254c-.613.998-1.217 2.095-1.666 3.16c-.453 1.078-.722 2.064-.722 2.854a.75.75 0 0 1-1.5 0c0-1.085.356-2.287.84-3.436c.489-1.16 1.135-2.329 1.771-3.363c.53-.862 1.06-1.64 1.497-2.254q-.24.02-.499.036c-1.268.08-2.925.086-4.291-.255a.75.75 0 0 1-.546-.91"/>`), g.Group(children),
	)
}

func SevenSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M10.75 16c0-3 4-8 4-8s-3 .5-5 0"/><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/></g>`), g.Group(children),
	)
}

func SevenSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057m.565 5.022a.75.75 0 0 0-.364 1.456c1.116.279 2.46.272 3.479.208l.084-.005c-.311.445-.665.975-1.02 1.55c-.511.832-1.032 1.774-1.427 2.712c-.39.926-.684 1.91-.684 2.807a.75.75 0 1 0 1.5 0c0-.603.206-1.37.566-2.225c.355-.843.834-1.713 1.323-2.507a32 32 0 0 1 1.906-2.748l.031-.04l.008-.01l.002-.002a.75.75 0 0 0-.71-1.208l-.005.001l-.022.004l-.091.014a20 20 0 0 1-1.554.16c-.982.061-2.138.054-3.022-.167"/>`), g.Group(children),
	)
}

func SevenWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83"/><path d="M10.75 16c0-3 4-8 4-8s-3 .5-5 0"/></g>`), g.Group(children),
	)
}

func SevenWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.565 2.075a3.33 3.33 0 0 1 2.87 0c.394.189.755.497 1.26.928l.079.066c.48.41.939.604 1.58.655l.102.008c.662.053 1.135.09 1.547.236a3.33 3.33 0 0 1 2.03 2.029c.145.412.182.885.235 1.547l.008.102c.051.641.246 1.1.655 1.58l.066.078c.431.506.74.867.928 1.261a3.33 3.33 0 0 1 0 2.87c-.189.394-.497.755-.928 1.26l-.066.079c-.418.49-.605.951-.655 1.58l-.008.102c-.053.662-.09 1.135-.236 1.547a3.33 3.33 0 0 1-2.029 2.03c-.412.145-.885.182-1.547.235l-.102.008c-.641.051-1.1.246-1.58.655l-.079.066c-.505.431-.866.74-1.26.928a3.33 3.33 0 0 1-2.87 0c-.394-.189-.755-.497-1.26-.928l-.079-.066a2.56 2.56 0 0 0-1.58-.655l-.102-.008c-.662-.053-1.135-.09-1.547-.236a3.33 3.33 0 0 1-2.03-2.029c-.145-.412-.182-.885-.235-1.547l-.008-.102a2.56 2.56 0 0 0-.655-1.58l-.066-.079c-.431-.505-.74-.866-.928-1.26a3.33 3.33 0 0 1 0-2.87c.189-.394.497-.755.928-1.26l.066-.079a2.56 2.56 0 0 0 .655-1.58l.008-.102c.053-.662.09-1.135.236-1.547a3.33 3.33 0 0 1 2.029-2.03c.412-.145.885-.182 1.547-.235l.102-.008a2.56 2.56 0 0 0 1.58-.655l.078-.066c.506-.431.867-.74 1.261-.928m-.633 5.197a.75.75 0 0 0-.364 1.456c1.116.279 2.46.272 3.479.208l.084-.005c-.311.445-.665.975-1.02 1.55c-.511.832-1.032 1.774-1.427 2.712c-.39.926-.684 1.91-.684 2.807a.75.75 0 1 0 1.5 0c0-.603.206-1.37.566-2.225c.355-.843.834-1.713 1.323-2.507a32 32 0 0 1 1.906-2.748l.031-.04l.008-.01l.002-.002a.75.75 0 0 0-.71-1.208l-.005.001l-.022.004l-.091.014a20 20 0 0 1-1.554.16c-.982.061-2.138.054-3.022-.167"/>`), g.Group(children),
	)
}

func Share(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9.5 12a2.5 2.5 0 1 1-5 0a2.5 2.5 0 0 1 5 0m5-5.5l-5 3.5m5 7.5l-5-3.5m10 4.5a2.5 2.5 0 1 1-5 0a2.5 2.5 0 0 1 5 0m0-13a2.5 2.5 0 1 1-5 0a2.5 2.5 0 0 1 5 0"/>`), g.Group(children),
	)
}

func ShareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M7 8.75a3.25 3.25 0 1 0 2.002 5.81l.068.054l4.73 3.312a3.25 3.25 0 1 0 .617-1.4l-4.479-3.135c.2-.421.312-.893.312-1.391s-.112-.97-.312-1.391l4.48-3.136a3.25 3.25 0 1 0-.617-1.4L9.07 9.387l-.068.053A3.24 3.24 0 0 0 7 8.75"/>`), g.Group(children),
	)
}

func Shield(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M11.467 20.82a.88.88 0 0 0 1.066 0C14.168 19.593 19 15.586 19 11.016v-4.93a.514.514 0 0 0-.457-.515a12.05 12.05 0 0 1-5.582-2.046l-.61-.417a.62.62 0 0 0-.702 0l-.61.417a12.05 12.05 0 0 1-5.582 2.046a.514.514 0 0 0-.457.515v4.93c0 4.57 4.832 8.577 6.467 9.802"/>`), g.Group(children),
	)
}

func ShieldCheck(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="m10.258 11.242l1.034 1.181c.095.109.266.1.35-.016l2.1-2.907"/><path d="M11.467 20.82a.88.88 0 0 0 1.066 0C14.168 19.593 19 15.586 19 11.016v-4.93a.514.514 0 0 0-.457-.515a12.05 12.05 0 0 1-5.582-2.046l-.61-.417a.62.62 0 0 0-.702 0l-.61.417a12.05 12.05 0 0 1-5.582 2.046a.514.514 0 0 0-.457.515v4.93c0 4.57 4.832 8.577 6.467 9.802"/></g>`), g.Group(children),
	)
}

func ShieldCheckSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="m11.226 2.49l-.61.417a11.3 11.3 0 0 1-5.235 1.92a1.264 1.264 0 0 0-1.131 1.26v4.93c0 2.541 1.335 4.853 2.79 6.63c1.466 1.793 3.136 3.142 3.977 3.773a1.63 1.63 0 0 0 1.966 0c.841-.63 2.511-1.98 3.977-3.772c1.455-1.778 2.79-4.09 2.79-6.63V6.086c0-.64-.478-1.194-1.131-1.26a11.3 11.3 0 0 1-5.234-1.92l-.61-.417a1.37 1.37 0 0 0-1.55 0m2.955 6.402a.75.75 0 0 1 .169 1.047l-2.1 2.907a.974.974 0 0 1-1.522.072l-1.034-1.182a.75.75 0 0 1 1.128-.988l.6.684l1.712-2.371a.75.75 0 0 1 1.047-.169"/>`), g.Group(children),
	)
}

func ShieldCrossed(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M12 21s7-4.6 7-10m-7 10s-7-4.6-7-10m7 10V3m7 8V6.16a.51.51 0 0 0-.457-.506c-1.998-.2-3.915-.89-5.582-2.009L12 3m7 8H5m7-8l-.961.645a12.2 12.2 0 0 1-5.582 2.01A.51.51 0 0 0 5 6.16V11"/>`), g.Group(children),
	)
}

func ShieldCrossedSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M11.582 2.377a.75.75 0 0 1 .836 0l.961.646a11.44 11.44 0 0 0 5.238 1.885A1.26 1.26 0 0 1 19.75 6.16V11c0 3.004-1.929 5.688-3.709 7.544a24 24 0 0 1-3.54 3.022q-.041.03-.064.044l-.017.012l-.005.003l-.002.001L12 21l-.412.627l-.002-.002l-.006-.003l-.017-.012l-.065-.044a22 22 0 0 1-1.056-.78a24 24 0 0 1-2.483-2.242C6.179 16.688 4.25 14.004 4.25 11V6.16c0-.647.49-1.188 1.133-1.252a11.44 11.44 0 0 0 5.238-1.885zM12 21l-.412.627a.75.75 0 0 0 .824 0zm-.75-1.488V11.75H5.8c.28 2.125 1.701 4.15 3.241 5.756a23 23 0 0 0 2.209 2.006m7-9.262V6.377a12.94 12.94 0 0 1-5.5-1.973v5.846z"/>`), g.Group(children),
	)
}

func ShieldMinus(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M10 11h4m-2.533 9.82a.88.88 0 0 0 1.066 0C14.168 19.593 19 15.586 19 11.016v-4.93a.514.514 0 0 0-.457-.515a12.05 12.05 0 0 1-5.582-2.046l-.61-.417a.62.62 0 0 0-.702 0l-.61.417a12.05 12.05 0 0 1-5.582 2.046a.514.514 0 0 0-.457.515v4.93c0 4.57 4.832 8.577 6.467 9.802"/>`), g.Group(children),
	)
}

func ShieldMinusSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M11.226 2.49a1.37 1.37 0 0 1 1.548 0l.61.417a11.3 11.3 0 0 0 5.235 1.92a1.264 1.264 0 0 1 1.131 1.26v4.93c0 2.541-1.335 4.853-2.79 6.63c-1.466 1.793-3.136 3.142-3.977 3.773a1.63 1.63 0 0 1-1.966 0c-.841-.63-2.51-1.98-3.977-3.772c-1.455-1.778-2.79-4.09-2.79-6.63V6.086c0-.64.478-1.194 1.131-1.26a11.3 11.3 0 0 0 5.234-1.92zM10 10.25a.75.75 0 0 0 0 1.5h4a.75.75 0 0 0 0-1.5z"/>`), g.Group(children),
	)
}

func ShieldOne(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M6.183 15.092C5.478 13.836 5 12.455 5 11.018v-4.93c0-.267.198-.489.457-.515a12.05 12.05 0 0 0 5.582-2.047l.61-.417a.62.62 0 0 1 .702 0l.61.417a12.05 12.05 0 0 0 5.582 2.047c.26.026.457.248.457.514v4.93c0 1.438-.478 2.819-1.183 4.075m-11.634 0c1.538 2.74 4.16 4.887 5.282 5.727a.88.88 0 0 0 1.07 0c1.122-.84 3.744-2.988 5.282-5.727m-11.634 0l5.25-3.677a.985.985 0 0 1 1.134 0l5.25 3.677"/>`), g.Group(children),
	)
}

func ShieldOneSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M11.226 2.49a1.37 1.37 0 0 1 1.548 0l.61.417a11.3 11.3 0 0 0 5.235 1.92a1.264 1.264 0 0 1 1.131 1.26v4.93c0 1.604-.532 3.112-1.28 4.443c-1.617 2.88-4.344 5.104-5.485 5.96c-.588.44-1.382.44-1.97 0c-1.141-.856-3.868-3.08-5.486-5.96c-.747-1.33-1.279-2.839-1.279-4.442v-4.93c0-.64.478-1.195 1.131-1.262c1.872-.19 3.67-.85 5.234-1.919zM12 3.777l-.538.368a12.8 12.8 0 0 1-5.712 2.15v4.723c0 1.008.266 2.006.708 2.966l4.545-3.184c.6-.42 1.394-.42 1.994 0l4.545 3.184c.442-.96.708-1.958.708-2.966V6.295a12.8 12.8 0 0 1-5.712-2.15z"/>`), g.Group(children),
	)
}

func ShieldPlus(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M10 11h4m-2-2v4m-.533 7.82a.88.88 0 0 0 1.066 0C14.168 19.593 19 15.586 19 11.016v-4.93a.514.514 0 0 0-.457-.515a12.05 12.05 0 0 1-5.582-2.046l-.61-.417a.62.62 0 0 0-.702 0l-.61.417a12.05 12.05 0 0 1-5.582 2.046a.514.514 0 0 0-.457.515v4.93c0 4.57 4.832 8.577 6.467 9.802"/>`), g.Group(children),
	)
}

func ShieldPlusSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="m11.226 2.49l-.61.417a11.3 11.3 0 0 1-5.235 1.92a1.264 1.264 0 0 0-1.131 1.26v4.93c0 2.541 1.335 4.853 2.79 6.63c1.466 1.793 3.136 3.142 3.977 3.773a1.63 1.63 0 0 0 1.966 0c.841-.63 2.511-1.98 3.977-3.772c1.455-1.778 2.79-4.09 2.79-6.63V6.086c0-.64-.478-1.194-1.131-1.26a11.3 11.3 0 0 1-5.234-1.92l-.61-.417a1.37 1.37 0 0 0-1.55 0M12 8.25a.75.75 0 0 1 .75.75v1.25H14a.75.75 0 0 1 0 1.5h-1.25V13a.75.75 0 0 1-1.5 0v-1.25H10a.75.75 0 0 1 0-1.5h1.25V9a.75.75 0 0 1 .75-.75"/>`), g.Group(children),
	)
}

func ShieldSlash(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m3 21l4.27-4.27M21 3l-2.561 2.561m0 0l.104.011c.26.027.457.25.457.515v4.93c0 4.57-4.832 8.577-6.467 9.802a.88.88 0 0 1-1.066 0c-.886-.663-2.711-2.144-4.197-4.09M18.44 5.562L7.27 16.73M5.646 14c-.4-.949-.646-1.951-.646-2.983v-4.93c0-.266.198-.488.457-.515a12.05 12.05 0 0 0 5.582-2.046l.61-.417a.62.62 0 0 1 .702 0l.61.417c.646.442 1.329.817 2.039 1.124"/>`), g.Group(children),
	)
}

func ShieldSlashSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12.775 2.49a1.37 1.37 0 0 0-1.55 0l-.61.417a11.3 11.3 0 0 1-5.234 1.92a1.264 1.264 0 0 0-1.131 1.26v4.93c0 2.091.904 4.027 2.035 5.637L2.47 20.47a.75.75 0 1 0 1.06 1.06l3.68-3.678c1.423 1.69 2.998 2.961 3.807 3.568a1.63 1.63 0 0 0 1.966 0c.841-.63 2.511-1.98 3.977-3.772c1.455-1.778 2.79-4.09 2.79-6.63V6.086c0-.221-.057-.433-.16-.617l1.94-1.94a.75.75 0 0 0-1.06-1.06L18.168 4.77a11.3 11.3 0 0 1-4.783-1.864z"/>`), g.Group(children),
	)
}

func ShieldSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12.775 2.49a1.37 1.37 0 0 0-1.55 0l-.61.417a11.3 11.3 0 0 1-5.234 1.92a1.264 1.264 0 0 0-1.131 1.26v4.93c0 2.541 1.335 4.853 2.79 6.63c1.466 1.793 3.136 3.142 3.977 3.773a1.63 1.63 0 0 0 1.966 0c.841-.63 2.511-1.98 3.977-3.772c1.455-1.778 2.79-4.09 2.79-6.63V6.086c0-.64-.478-1.194-1.131-1.26a11.3 11.3 0 0 1-5.234-1.92z"/>`), g.Group(children),
	)
}

func ShieldTwo(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M12 21s7-4.6 7-10V6.16a.51.51 0 0 0-.457-.506c-1.998-.2-3.915-.89-5.582-2.009L12 3m0 18s-7-4.6-7-10V6.16c0-.261.198-.48.457-.506c1.998-.2 3.915-.89 5.582-2.009L12 3m0 18V3"/>`), g.Group(children),
	)
}

func ShieldTwoSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M11.582 2.377a.75.75 0 0 1 .836 0l.961.646a11.44 11.44 0 0 0 5.238 1.885A1.26 1.26 0 0 1 19.75 6.16V11c0 3.004-1.929 5.688-3.709 7.544a24 24 0 0 1-3.54 3.022q-.041.03-.064.044l-.017.012l-.005.003l-.002.001h-.827l-.006-.004l-.017-.012l-.065-.044a22 22 0 0 1-1.056-.78a24 24 0 0 1-2.483-2.242C6.179 16.688 4.25 14.004 4.25 11V6.16c0-.647.49-1.188 1.133-1.252a11.44 11.44 0 0 0 5.238-1.885zm.006 19.25a.75.75 0 0 0 .824 0zm-.338-2.114V4.403a12.94 12.94 0 0 1-5.5 1.973V11c0 2.396 1.571 4.712 3.291 6.506a23 23 0 0 0 2.209 2.006"/>`), g.Group(children),
	)
}

func ShieldX(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m10.5 9.5l2.829 2.828M13.328 9.5L10.5 12.328m.967 8.492a.88.88 0 0 0 1.066 0C14.168 19.593 19 15.586 19 11.016v-4.93a.514.514 0 0 0-.457-.515a12.05 12.05 0 0 1-5.582-2.046l-.61-.417a.62.62 0 0 0-.702 0l-.61.417a12.05 12.05 0 0 1-5.582 2.046a.514.514 0 0 0-.457.515v4.93c0 4.57 4.832 8.577 6.467 9.802"/>`), g.Group(children),
	)
}

func ShieldXSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="m11.226 2.49l-.61.417a11.3 11.3 0 0 1-5.235 1.92a1.264 1.264 0 0 0-1.131 1.26v4.93c0 2.541 1.335 4.853 2.79 6.63c1.466 1.793 3.136 3.142 3.977 3.773a1.63 1.63 0 0 0 1.966 0c.841-.63 2.511-1.98 3.977-3.772c1.455-1.778 2.79-4.09 2.79-6.63V6.086c0-.64-.478-1.194-1.131-1.26a11.3 11.3 0 0 1-5.234-1.92l-.61-.417a1.37 1.37 0 0 0-1.55 0M9.97 8.97a.75.75 0 0 1 1.06 0l.884.884l.884-.884a.75.75 0 0 1 1.06 1.06l-.883.884l.884.884a.75.75 0 0 1-1.06 1.06l-.885-.883l-.884.884a.75.75 0 1 1-1.06-1.06l.884-.885l-.884-.884a.75.75 0 0 1 0-1.06"/>`), g.Group(children),
	)
}

func ShootingStar(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M12 5.647L9.353 3m.53 6.882L4.058 4.06M5.647 12L3 9.353m5.294 5.294l4.235-2.118l2.118-4.235l2.118 4.235L21 14.647l-4.235 2.118L14.647 21l-2.118-4.235z"/>`), g.Group(children),
	)
}

func ShootingStarSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.883 2.47a.75.75 0 0 0-1.06 1.06l2.647 2.647a.75.75 0 1 0 1.06-1.06zM4.59 3.528A.75.75 0 0 0 3.527 4.59l5.824 5.824a.75.75 0 1 0 1.06-1.061zm10.728 4.431a.75.75 0 0 0-1.342 0L11.97 11.97l-4.01 2.006a.75.75 0 0 0 0 1.342l4.011 2.006l2.006 4.011a.75.75 0 0 0 1.342 0l2.006-4.011l4.011-2.006a.75.75 0 0 0 0-1.342l-4.011-2.006zM3.53 8.823a.75.75 0 0 0-1.06 1.06l2.647 2.647a.75.75 0 0 0 1.06-1.06z"/>`), g.Group(children),
	)
}

func ShoppingBag(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M8.935 7H7.773c-1.072 0-1.962.81-2.038 1.858l-.73 10C4.921 20.015 5.858 21 7.043 21h9.914c1.185 0 2.122-.985 2.038-2.142l-.73-10C18.189 7.81 17.299 7 16.227 7h-1.162m-6.13 0V5c0-1.105.915-2 2.043-2h2.044c1.128 0 2.043.895 2.043 2v2m-6.13 0h6.13"/>`), g.Group(children),
	)
}

func ShoppingBagSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M15.815 5v1.25h.412c1.451 0 2.68 1.101 2.786 2.553l.73 10c.117 1.609-1.182 2.947-2.786 2.947H7.043c-1.604 0-2.903-1.338-2.786-2.947l.73-10C5.093 7.35 6.322 6.25 7.773 6.25h.412V5c0-1.534 1.266-2.75 2.794-2.75h2.043c1.527 0 2.793 1.216 2.793 2.75m-6.13 0v1.25h4.63V5c0-.675-.564-1.25-1.293-1.25h-2.043c-.73 0-1.294.575-1.294 1.25"/>`), g.Group(children),
	)
}

func Shuffle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M15.5 4h4.412v4.444M4 20L19 5m1 10.5V20h-4.5M14 14l5.294 5.333M4 4l6 6"/>`), g.Group(children),
	)
}

func ShuffleAlt(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="m19 16.765l2 2.117L19 21m0-18l2 2.118l-2 2.117"/><path d="M21 5.118h-3.15C14.62 5.118 12 8.199 12 12s2.62 6.882 5.85 6.882H21m-18 0h3.15C9.38 18.882 12 15.801 12 12S9.38 5.118 6.15 5.118H3"/></g>`), g.Group(children),
	)
}

func ShuffleAltSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M18.485 2.455a.75.75 0 0 1 1.06.03l2 2.118a.75.75 0 0 1 0 1.03l-2 2.117a.75.75 0 0 1-1.06.03V5.869h-.635c-2.707 0-5.1 2.626-5.1 6.132s2.393 6.132 5.1 6.132h.635V16.22a.75.75 0 0 1 1.06.03l2 2.118a.75.75 0 0 1 0 1.03l-2 2.118a.75.75 0 0 1-1.06.03v-1.913h-.635c-2.6 0-4.765-1.696-5.85-4.1c-1.085 2.404-3.25 4.1-5.85 4.1H3a.75.75 0 0 1 0-1.5h3.15c2.707 0 5.1-2.626 5.1-6.132s-2.393-6.132-5.1-6.132H3a.75.75 0 0 1 0-1.5h3.15c2.6 0 4.765 1.696 5.85 4.1c1.085-2.404 3.25-4.1 5.85-4.1h.635z"/>`), g.Group(children),
	)
}

func ShuffleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M14.75 4a.75.75 0 0 1 .75-.75h4.412a.75.75 0 0 1 .75.75v4.444a.75.75 0 0 1-.75.75l-2.017-2.029L4.53 20.53a.75.75 0 0 1-1.06-1.06L16.839 6.1z"/><path d="M3.47 3.47a.75.75 0 0 0 0 1.06l6 6a.75.75 0 1 0 1.06-1.06l-6-6a.75.75 0 0 0-1.06 0m10.002 9.998a.75.75 0 0 1 1.06.004l3.36 3.385L20 14.75a.75.75 0 0 1 .75.75V20a.75.75 0 0 1-.75.75h-4.5a.75.75 0 0 1-.75-.75l2.082-2.082l-3.364-3.39a.75.75 0 0 1 .004-1.06"/></g>`), g.Group(children),
	)
}

func Sidebar(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9 3.5v17M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/>`), g.Group(children),
	)
}

func SidebarAlt(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M15 3.5v17M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/>`), g.Group(children),
	)
}

func SidebarAltSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057m6.383 1.503v16.494a20 20 0 0 0 1.416-.049c.62-.05 1.005-.147 1.31-.302a3.25 3.25 0 0 0 1.42-1.42c.155-.305.251-.69.302-1.31c.051-.63.052-1.434.052-2.566V9.4c0-1.132 0-1.937-.052-2.566c-.05-.62-.147-1.005-.302-1.31a3.25 3.25 0 0 0-1.42-1.42c-.305-.155-.69-.251-1.31-.302a20 20 0 0 0-1.416-.05"/>`), g.Group(children),
	)
}

func SidebarSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057M6.834 3.802c-.62.05-1.005.147-1.31.302a3.25 3.25 0 0 0-1.42 1.42c-.155.305-.251.69-.302 1.31c-.051.63-.052 1.434-.052 2.566v5.2c0 1.133 0 1.937.052 2.566c.05.62.147 1.005.302 1.31a3.25 3.25 0 0 0 1.42 1.42c.305.155.69.251 1.31.302c.392.032.851.044 1.416.05V3.752c-.565.005-1.024.017-1.416.049"/>`), g.Group(children),
	)
}

func Signal(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M20.5 10v4m-4-8v12M12 3v18M7.5 6v12m-4-8v4"/>`), g.Group(children),
	)
}

func SignalCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0M9 13.5v-3m3 4.5V9m3 4.5v-3"/>`), g.Group(children),
	)
}

func SignalCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12m7.5-1.5a.75.75 0 0 0-1.5 0v3a.75.75 0 0 0 1.5 0zM12 8.25a.75.75 0 0 0-.75.75v6a.75.75 0 0 0 1.5 0V9a.75.75 0 0 0-.75-.75m3.75 2.25a.75.75 0 0 0-1.5 0v3a.75.75 0 0 0 1.5 0z"/>`), g.Group(children),
	)
}

func SignalDiamond(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M2.707 10.295a2.41 2.41 0 0 0 0 3.41l7.588 7.588a2.41 2.41 0 0 0 3.41 0l7.588-7.588a2.41 2.41 0 0 0 0-3.41l-7.588-7.588a2.41 2.41 0 0 0-3.41 0zM9 13.5v-3m3 4.5V9m3 4.5v-3"/>`), g.Group(children),
	)
}

func SignalDiamondSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.79 1.49a3.16 3.16 0 0 1 3.445.687l7.588 7.588a3.16 3.16 0 0 1 0 4.47l-7.588 7.588a3.16 3.16 0 0 1-4.47 0l-7.588-7.588a3.16 3.16 0 0 1 0-4.47l7.588-7.589a3.2 3.2 0 0 1 1.025-.685M9.75 10.5a.75.75 0 0 0-1.5 0v3a.75.75 0 0 0 1.5 0zM12 8.25a.75.75 0 0 0-.75.75v6a.75.75 0 0 0 1.5 0V9a.75.75 0 0 0-.75-.75m3.75 2.25a.75.75 0 0 0-1.5 0v3a.75.75 0 0 0 1.5 0z"/>`), g.Group(children),
	)
}

func SignalHexagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M20.5 15.8V8.2a1.91 1.91 0 0 0-.944-1.645l-6.612-3.8a1.88 1.88 0 0 0-1.888 0l-6.612 3.8A1.9 1.9 0 0 0 3.5 8.2v7.602a1.91 1.91 0 0 0 .944 1.644l6.612 3.8a1.88 1.88 0 0 0 1.888 0l6.612-3.8A1.9 1.9 0 0 0 20.5 15.8M9 13.5v-3m3 4.5V9m3 4.5v-3"/>`), g.Group(children),
	)
}

func SignalHexagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.68 2.105a2.63 2.63 0 0 1 2.64 0l.001.001l6.611 3.8A2.65 2.65 0 0 1 21.25 8.2v7.603a2.66 2.66 0 0 1-1.318 2.291l-.003.002l-6.608 3.799h-.002a2.63 2.63 0 0 1-2.639 0h-.001l-6.608-3.8h-.003A2.64 2.64 0 0 1 2.75 15.8V8.198a2.66 2.66 0 0 1 1.318-2.291l.003-.002zM9.75 10.5a.75.75 0 0 0-1.5 0v3a.75.75 0 0 0 1.5 0zM12 8.25a.75.75 0 0 0-.75.75v6a.75.75 0 0 0 1.5 0V9a.75.75 0 0 0-.75-.75m3.75 2.25a.75.75 0 0 0-1.5 0v3a.75.75 0 0 0 1.5 0z"/>`), g.Group(children),
	)
}

func SignalOctagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M7.805 3.469C8.16 3.115 8.451 3 8.937 3h6.126c.486 0 .778.115 1.132.469l4.336 4.336c.354.354.469.646.469 1.132v6.126c0 .5-.125.788-.469 1.132l-4.336 4.336c-.354.354-.646.469-1.132.469H8.937c-.5 0-.788-.125-1.132-.469L3.47 16.195c-.355-.355-.47-.646-.47-1.132V8.937c0-.5.125-.788.469-1.132zM9 13.5v-3m3 4.5V9m3 4.5v-3"/>`), g.Group(children),
	)
}

func SignalOctagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.037 2.408a2.3 2.3 0 0 1 .9-.158h6.126c.302 0 .602.036.9.158s.54.31.762.53l4.337 4.337c.22.221.408.463.53.762c.123.298.158.598.158.9v6.126c0 .313-.039.616-.163.914a2.3 2.3 0 0 1-.525.748l-4.337 4.337a2.3 2.3 0 0 1-.762.53a2.3 2.3 0 0 1-.9.158H8.937c-.313 0-.616-.039-.914-.163a2.3 2.3 0 0 1-.748-.525l-4.337-4.337a2.3 2.3 0 0 1-.53-.762a2.3 2.3 0 0 1-.158-.9V8.937c0-.313.039-.616.163-.914a2.3 2.3 0 0 1 .525-.748l4.337-4.337c.221-.22.463-.408.762-.53M9.75 10.5a.75.75 0 0 0-1.5 0v3a.75.75 0 0 0 1.5 0zM12 8.25a.75.75 0 0 0-.75.75v6a.75.75 0 0 0 1.5 0V9a.75.75 0 0 0-.75-.75m3.75 2.25a.75.75 0 0 0-1.5 0v3a.75.75 0 0 0 1.5 0z"/>`), g.Group(children),
	)
}

func SignalSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M20.5 9.25a.75.75 0 0 1 .75.75v4a.75.75 0 0 1-1.5 0v-4a.75.75 0 0 1 .75-.75m-4-4a.75.75 0 0 1 .75.75v12a.75.75 0 0 1-1.5 0V6a.75.75 0 0 1 .75-.75m-4.5-3a.75.75 0 0 1 .75.75v18a.75.75 0 0 1-1.5 0V3a.75.75 0 0 1 .75-.75m-4.5 3a.75.75 0 0 1 .75.75v12a.75.75 0 0 1-1.5 0V6a.75.75 0 0 1 .75-.75m-4 4a.75.75 0 0 1 .75.75v4a.75.75 0 0 1-1.5 0v-4a.75.75 0 0 1 .75-.75"/>`), g.Group(children),
	)
}

func SignalSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6zm6 4.1v-3m3 4.5V9m3 4.5v-3"/>`), g.Group(children),
	)
}

func SignalSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057m.383 8.25a.75.75 0 0 0-1.5 0v3a.75.75 0 0 0 1.5 0zM12 8.25a.75.75 0 0 0-.75.75v6a.75.75 0 0 0 1.5 0V9a.75.75 0 0 0-.75-.75m3.75 2.25a.75.75 0 0 0-1.5 0v3a.75.75 0 0 0 1.5 0z"/>`), g.Group(children),
	)
}

func SignalWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83M9 13.5v-3m3 4.5V9m3 4.5v-3"/>`), g.Group(children),
	)
}

func SignalWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.565 2.075a3.33 3.33 0 0 1 2.87 0c.394.189.755.497 1.26.928l.079.066c.48.41.939.604 1.58.655l.102.008c.662.053 1.135.09 1.547.236a3.33 3.33 0 0 1 2.03 2.029c.145.412.182.885.235 1.547l.008.102c.051.641.246 1.1.655 1.58l.066.078c.431.506.74.867.928 1.261a3.33 3.33 0 0 1 0 2.87c-.189.394-.497.755-.928 1.26l-.066.079c-.418.49-.605.951-.655 1.58l-.008.102c-.053.662-.09 1.135-.236 1.547a3.33 3.33 0 0 1-2.029 2.03c-.412.145-.885.182-1.547.235l-.102.008c-.641.051-1.1.246-1.58.655l-.079.066c-.505.431-.866.74-1.26.928a3.33 3.33 0 0 1-2.87 0c-.394-.189-.755-.497-1.26-.928l-.079-.066a2.56 2.56 0 0 0-1.58-.655l-.102-.008c-.662-.053-1.135-.09-1.547-.236a3.33 3.33 0 0 1-2.03-2.029c-.145-.412-.182-.885-.235-1.547l-.008-.102a2.56 2.56 0 0 0-.655-1.58l-.066-.079c-.431-.505-.74-.866-.928-1.26a3.33 3.33 0 0 1 0-2.87c.189-.394.497-.755.928-1.26l.066-.079a2.56 2.56 0 0 0 .655-1.58l.008-.102c.053-.662.09-1.135.236-1.547a3.33 3.33 0 0 1 2.029-2.03c.412-.145.885-.182 1.547-.235l.102-.008a2.56 2.56 0 0 0 1.58-.655l.078-.066c.506-.431.867-.74 1.261-.928M9.75 10.5a.75.75 0 0 0-1.5 0v3a.75.75 0 0 0 1.5 0zM12 8.25a.75.75 0 0 0-.75.75v6a.75.75 0 0 0 1.5 0V9a.75.75 0 0 0-.75-.75m3.75 2.25a.75.75 0 0 0-1.5 0v3a.75.75 0 0 0 1.5 0z"/>`), g.Group(children),
	)
}

func Six(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M13.75 7H12.5a3.75 3.75 0 0 0-3.75 3.75v3.125m0 0a3.125 3.125 0 1 0 6.25 0c0-1.726-1.4-2.5-3.125-2.5s-3.125.774-3.125 2.5"/>`), g.Group(children),
	)
}

func SixCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/><path d="M13.5 8h-1a3 3 0 0 0-3 3v2.5m0 0a2.5 2.5 0 0 0 5 0c0-1.38-1.12-2-2.5-2s-2.5.62-2.5 2"/></g>`), g.Group(children),
	)
}

func SixCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M12 15.25a1.75 1.75 0 0 1-1.75-1.75c0-.458.171-.729.422-.91c.283-.205.735-.34 1.328-.34s1.045.135 1.328.34c.251.181.422.452.422.91A1.75 1.75 0 0 1 12 15.25"/><path d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12M12.5 7.25A3.75 3.75 0 0 0 8.75 11v2.5a3.25 3.25 0 0 0 6.5 0c0-.923-.389-1.652-1.043-2.125c-.621-.45-1.419-.625-2.207-.625c-.606 0-1.217.103-1.75.355V11a2.25 2.25 0 0 1 2.25-2.25h1a.75.75 0 0 0 0-1.5z"/></g>`), g.Group(children),
	)
}

func SixDiamond(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M13.5 8h-1a3 3 0 0 0-3 3v2.5m0 0a2.5 2.5 0 0 0 5 0c0-1.38-1.12-2-2.5-2s-2.5.62-2.5 2"/><path d="M2.707 10.295a2.41 2.41 0 0 0 0 3.41l7.588 7.588a2.41 2.41 0 0 0 3.41 0l7.588-7.588a2.41 2.41 0 0 0 0-3.41l-7.588-7.588a2.41 2.41 0 0 0-3.41 0z"/></g>`), g.Group(children),
	)
}

func SixDiamondSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M12 15.25a1.75 1.75 0 0 1-1.75-1.75c0-.458.171-.729.422-.91c.283-.205.735-.34 1.328-.34s1.045.135 1.328.34c.251.181.422.452.422.91A1.75 1.75 0 0 1 12 15.25"/><path d="M10.79 1.49a3.16 3.16 0 0 1 3.445.687l7.588 7.588a3.16 3.16 0 0 1 0 4.47l-7.588 7.588a3.16 3.16 0 0 1-4.47 0l-7.588-7.588a3.16 3.16 0 0 1 0-4.47l7.588-7.589a3.2 3.2 0 0 1 1.025-.685m1.71 5.76A3.75 3.75 0 0 0 8.75 11v2.5a3.25 3.25 0 0 0 6.5 0c0-.923-.389-1.652-1.043-2.125c-.621-.45-1.419-.625-2.207-.625c-.606 0-1.217.103-1.75.355V11a2.25 2.25 0 0 1 2.25-2.25h1a.75.75 0 0 0 0-1.5z"/></g>`), g.Group(children),
	)
}

func SixHexagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M13.5 8h-1a3 3 0 0 0-3 3v2.5m0 0a2.5 2.5 0 0 0 5 0c0-1.38-1.12-2-2.5-2s-2.5.62-2.5 2"/><path d="M20.5 15.8V8.2a1.91 1.91 0 0 0-.944-1.645l-6.612-3.8a1.88 1.88 0 0 0-1.888 0l-6.612 3.8A1.9 1.9 0 0 0 3.5 8.2v7.602a1.91 1.91 0 0 0 .944 1.644l6.612 3.8a1.88 1.88 0 0 0 1.888 0l6.612-3.8A1.9 1.9 0 0 0 20.5 15.8"/></g>`), g.Group(children),
	)
}

func SixHexagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M12 15.25a1.75 1.75 0 0 1-1.75-1.75c0-.458.171-.729.422-.91c.283-.205.735-.34 1.328-.34s1.045.135 1.328.34c.251.181.422.452.422.91A1.75 1.75 0 0 1 12 15.25"/><path d="M10.68 2.105a2.63 2.63 0 0 1 2.64 0l.001.001l6.611 3.8A2.65 2.65 0 0 1 21.25 8.2v7.603a2.66 2.66 0 0 1-1.318 2.291l-.003.002l-6.608 3.799h-.002a2.63 2.63 0 0 1-2.639 0h-.001l-6.608-3.8h-.003A2.64 2.64 0 0 1 2.75 15.8V8.198a2.66 2.66 0 0 1 1.318-2.291l.003-.002zM12.5 7.25A3.75 3.75 0 0 0 8.75 11v2.5a3.25 3.25 0 0 0 6.5 0c0-.923-.389-1.652-1.043-2.125c-.621-.45-1.419-.625-2.207-.625c-.606 0-1.217.103-1.75.355V11a2.25 2.25 0 0 1 2.25-2.25h1a.75.75 0 0 0 0-1.5z"/></g>`), g.Group(children),
	)
}

func SixOctagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M13.5 8h-1a3 3 0 0 0-3 3v2.5m0 0a2.5 2.5 0 0 0 5 0c0-1.38-1.12-2-2.5-2s-2.5.62-2.5 2"/><path d="M7.805 3.469C8.16 3.115 8.451 3 8.937 3h6.126c.486 0 .778.115 1.132.469l4.336 4.336c.354.354.469.646.469 1.132v6.126c0 .5-.125.788-.469 1.132l-4.336 4.336c-.354.354-.646.469-1.132.469H8.937c-.5 0-.788-.125-1.132-.469L3.47 16.195c-.355-.355-.47-.646-.47-1.132V8.937c0-.5.125-.788.469-1.132z"/></g>`), g.Group(children),
	)
}

func SixOctagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M12 15.25a1.75 1.75 0 0 1-1.75-1.75c0-.458.171-.729.422-.91c.283-.205.735-.34 1.328-.34s1.045.135 1.328.34c.251.181.422.452.422.91A1.75 1.75 0 0 1 12 15.25"/><path d="M8.037 2.408a2.3 2.3 0 0 1 .9-.158h6.126c.302 0 .602.036.9.158s.54.31.762.53l4.337 4.337c.22.221.408.463.53.762c.123.298.158.598.158.9v6.126c0 .313-.039.616-.163.914a2.3 2.3 0 0 1-.525.748l-4.337 4.337a2.3 2.3 0 0 1-.762.53a2.3 2.3 0 0 1-.9.158H8.937c-.313 0-.616-.039-.914-.163a2.3 2.3 0 0 1-.748-.525l-4.337-4.337a2.3 2.3 0 0 1-.53-.762a2.3 2.3 0 0 1-.158-.9V8.937c0-.313.039-.616.163-.914a2.3 2.3 0 0 1 .525-.748l4.337-4.337c.221-.22.463-.408.762-.53M12.5 7.25A3.75 3.75 0 0 0 8.75 11v2.5a3.25 3.25 0 0 0 6.5 0c0-.923-.389-1.652-1.043-2.125c-.621-.45-1.419-.625-2.207-.625c-.606 0-1.217.103-1.75.355V11a2.25 2.25 0 0 1 2.25-2.25h1a.75.75 0 0 0 0-1.5z"/></g>`), g.Group(children),
	)
}

func SixSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8 10.75a4.5 4.5 0 0 1 4.5-4.5h1.25a.75.75 0 0 1 0 1.5H12.5a3 3 0 0 0-3 3v.442c.69-.402 1.53-.567 2.375-.567c.96 0 1.915.213 2.65.745c.766.555 1.225 1.41 1.225 2.505a3.875 3.875 0 0 1-7.75 0zm1.5 3.125a2.375 2.375 0 1 0 4.75 0c0-.63-.24-1.026-.605-1.29c-.396-.286-1.005-.46-1.77-.46s-1.374.174-1.77.46c-.364.264-.605.66-.605 1.29"/>`), g.Group(children),
	)
}

func SixSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M13.5 8h-1a3 3 0 0 0-3 3v2.5m0 0a2.5 2.5 0 0 0 5 0c0-1.38-1.12-2-2.5-2s-2.5.62-2.5 2"/><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/></g>`), g.Group(children),
	)
}

func SixSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M12 15.25a1.75 1.75 0 0 1-1.75-1.75c0-.458.171-.729.422-.91c.283-.205.735-.34 1.328-.34s1.045.135 1.328.34c.251.181.422.452.422.91A1.75 1.75 0 0 1 12 15.25"/><path d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057m3.133 5A3.75 3.75 0 0 0 8.75 11v2.5a3.25 3.25 0 0 0 6.5 0c0-.923-.389-1.652-1.043-2.125c-.621-.45-1.419-.625-2.207-.625c-.606 0-1.217.103-1.75.355V11a2.25 2.25 0 0 1 2.25-2.25h1a.75.75 0 0 0 0-1.5z"/></g>`), g.Group(children),
	)
}

func SixWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M13.5 8h-1a3 3 0 0 0-3 3v2.5m0 0a2.5 2.5 0 0 0 5 0c0-1.38-1.12-2-2.5-2s-2.5.62-2.5 2"/><path d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83"/></g>`), g.Group(children),
	)
}

func SixWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M12 15.25a1.75 1.75 0 0 1-1.75-1.75c0-.458.171-.729.422-.91c.283-.205.735-.34 1.328-.34s1.045.135 1.328.34c.251.181.422.452.422.91A1.75 1.75 0 0 1 12 15.25"/><path d="M10.565 2.075a3.33 3.33 0 0 1 2.87 0c.394.189.755.497 1.26.928l.079.066c.48.41.939.604 1.58.655l.102.008c.662.053 1.135.09 1.547.236a3.33 3.33 0 0 1 2.03 2.029c.145.412.182.885.235 1.547l.008.102c.051.641.246 1.1.655 1.58l.066.078c.431.506.74.867.928 1.261a3.33 3.33 0 0 1 0 2.87c-.189.394-.497.755-.928 1.26l-.066.079c-.418.49-.605.951-.655 1.58l-.008.102c-.053.662-.09 1.135-.236 1.547a3.33 3.33 0 0 1-2.029 2.03c-.412.145-.885.182-1.547.235l-.102.008c-.641.051-1.1.246-1.58.655l-.079.066c-.505.431-.866.74-1.26.928a3.33 3.33 0 0 1-2.87 0c-.394-.189-.755-.497-1.26-.928l-.079-.066a2.56 2.56 0 0 0-1.58-.655l-.102-.008c-.662-.053-1.135-.09-1.547-.236a3.33 3.33 0 0 1-2.03-2.029c-.145-.412-.182-.885-.235-1.547l-.008-.102a2.56 2.56 0 0 0-.655-1.58l-.066-.079c-.431-.505-.74-.866-.928-1.26a3.33 3.33 0 0 1 0-2.87c.189-.394.497-.755.928-1.26l.066-.079a2.56 2.56 0 0 0 .655-1.58l.008-.102c.053-.662.09-1.135.236-1.547a3.33 3.33 0 0 1 2.029-2.03c.412-.145.885-.182 1.547-.235l.102-.008a2.56 2.56 0 0 0 1.58-.655l.078-.066c.506-.431.867-.74 1.261-.928M12.5 7.25A3.75 3.75 0 0 0 8.75 11v2.5a3.25 3.25 0 0 0 6.5 0c0-.923-.389-1.652-1.043-2.125c-.621-.45-1.419-.625-2.207-.625c-.606 0-1.217.103-1.75.355V11a2.25 2.25 0 0 1 2.25-2.25h1a.75.75 0 0 0 0-1.5z"/></g>`), g.Group(children),
	)
}

func SkipBack(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M4.5 3v18m4.726-8.22l8.65 6.92a1 1 0 0 0 1.624-.78V5.08a1 1 0 0 0-1.625-.78l-8.649 6.92a1 1 0 0 0 0 1.56"/>`), g.Group(children),
	)
}

func SkipBackSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M4.5 2.25a.75.75 0 0 1 .75.75v18a.75.75 0 0 1-1.5 0V3a.75.75 0 0 1 .75-.75m12.907 1.464c1.146-.917 2.843-.1 2.843 1.367v13.838c0 1.468-1.697 2.284-2.843 1.367l-8.65-6.92a1.75 1.75 0 0 1 0-2.732z"/>`), g.Group(children),
	)
}

func SkipForward(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M19.5 3v18m-4.726-8.22l-8.65 6.92a1 1 0 0 1-1.624-.78V5.08a1 1 0 0 1 1.625-.78l8.649 6.92a1 1 0 0 1 0 1.56"/>`), g.Group(children),
	)
}

func SkipForwardSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M19.5 2.25a.75.75 0 0 1 .75.75v18a.75.75 0 0 1-1.5 0V3a.75.75 0 0 1 .75-.75M3.75 5.08c0-1.467 1.697-2.283 2.843-1.366l8.65 6.92a1.75 1.75 0 0 1 0 2.733l-8.65 6.919c-1.146.917-2.843.1-2.843-1.367z"/>`), g.Group(children),
	)
}

func Slash(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="m9 15l6-6"/><circle cx="12" cy="12" r="9"/></g>`), g.Group(children),
	)
}

func SlashCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0M9 15l6-6"/>`), g.Group(children),
	)
}

func SlashCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0 5.385 4.365 9.75 9.75 9.75s9.75-4.365 9.75-9.75S17.385 2.25 12 2.25S2.25 6.615 2.25 12m13.28-2.47l-6 6a.75.75 0 0 1-1.06-1.06l6-6a.75.75 0 1 1 1.06 1.06"/>`), g.Group(children),
	)
}

func SlashDiamond(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M2.707 10.295a2.41 2.41 0 0 0 0 3.41l7.588 7.588a2.41 2.41 0 0 0 3.41 0l7.588-7.588a2.41 2.41 0 0 0 0-3.41l-7.588-7.588a2.41 2.41 0 0 0-3.41 0zM9 15l6-6"/>`), g.Group(children),
	)
}

func SlashDiamondSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.79 1.49a3.2 3.2 0 0 0-1.025.686L2.177 9.765a3.16 3.16 0 0 0 0 4.47l7.588 7.588a3.16 3.16 0 0 0 4.47 0l7.588-7.588a3.16 3.16 0 0 0 0-4.47l-7.588-7.588a3.16 3.16 0 0 0-3.445-.686m4.74 8.04l-6 6a.75.75 0 0 1-1.06-1.06l6-6a.75.75 0 1 1 1.06 1.06"/>`), g.Group(children),
	)
}

func SlashHexagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M20.5 15.8V8.2a1.91 1.91 0 0 0-.944-1.645l-6.612-3.8a1.88 1.88 0 0 0-1.888 0l-6.612 3.8A1.9 1.9 0 0 0 3.5 8.2v7.602a1.91 1.91 0 0 0 .944 1.644l6.612 3.8a1.88 1.88 0 0 0 1.888 0l6.612-3.8A1.9 1.9 0 0 0 20.5 15.8M9 15l6-6"/>`), g.Group(children),
	)
}

func SlashHexagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="m10.68 2.105l-6.61 3.8l-.002.002A2.65 2.65 0 0 0 2.75 8.198v7.603a2.64 2.64 0 0 0 1.318 2.292l.003.002l6.608 3.799h.002a2.63 2.63 0 0 0 2.639 0h.001l6.608-3.8h.003A2.65 2.65 0 0 0 21.25 15.8V8.2a2.65 2.65 0 0 0-1.318-2.292l-6.61-3.8l-.002-.002a2.63 2.63 0 0 0-2.64 0m4.85 7.425l-6 6a.75.75 0 0 1-1.06-1.06l6-6a.75.75 0 1 1 1.06 1.06"/>`), g.Group(children),
	)
}

func SlashOctagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M7.805 3.469C8.16 3.115 8.451 3 8.937 3h6.126c.486 0 .778.115 1.132.469l4.336 4.336c.354.354.469.646.469 1.132v6.126c0 .5-.125.788-.469 1.132l-4.336 4.336c-.354.354-.646.469-1.132.469H8.937c-.5 0-.788-.125-1.132-.469L3.47 16.195c-.355-.355-.47-.646-.47-1.132V8.937c0-.5.125-.788.469-1.132zM9 15l6-6"/>`), g.Group(children),
	)
}

func SlashOctagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.037 2.408c-.299.122-.54.31-.762.53L2.938 7.275c-.213.214-.4.45-.525.748a2.3 2.3 0 0 0-.163.914v6.126c0 .302.036.602.158.9s.31.54.53.762l4.337 4.337c.214.213.45.4.748.524c.298.125.601.164.914.164h6.126c.302 0 .602-.035.9-.158c.299-.122.54-.31.762-.53l4.337-4.337c.213-.214.4-.45.524-.748a2.3 2.3 0 0 0 .164-.914V8.937a2.3 2.3 0 0 0-.158-.9a2.3 2.3 0 0 0-.53-.762l-4.337-4.337a2.3 2.3 0 0 0-.762-.53a2.3 2.3 0 0 0-.9-.158H8.937a2.3 2.3 0 0 0-.9.158M15.53 9.53l-6 6a.75.75 0 0 1-1.06-1.06l6-6a.75.75 0 1 1 1.06 1.06"/>`), g.Group(children),
	)
}

func SlashSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6zM9 15l6-6"/>`), g.Group(children),
	)
}

func SlashSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25c-1.092 0-1.958 0-2.655.057c-.714.058-1.317.18-1.868.46a4.75 4.75 0 0 0-2.076 2.077c-.281.55-.403 1.154-.461 1.868c-.057.697-.057 1.563-.057 2.655v5.266c0 1.092 0 1.958.057 2.655c.058.714.18 1.317.46 1.869a4.75 4.75 0 0 0 2.077 2.075c.55.281 1.154.403 1.868.461c.697.057 1.563.057 2.655.057h5.266c1.092 0 1.958 0 2.655-.057c.714-.058 1.317-.18 1.869-.46a4.75 4.75 0 0 0 2.075-2.076c.281-.552.403-1.155.461-1.869c.057-.697.057-1.563.057-2.655V9.367c0-1.092 0-1.958-.057-2.655c-.058-.714-.18-1.317-.46-1.868a4.75 4.75 0 0 0-2.076-2.076c-.552-.281-1.155-.403-1.869-.461c-.697-.057-1.563-.057-2.655-.057zm6.163 7.28l-6 6a.75.75 0 0 1-1.06-1.06l6-6a.75.75 0 1 1 1.06 1.06"/>`), g.Group(children),
	)
}

func SlashWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83M9 15l6-6"/>`), g.Group(children),
	)
}

func SlashWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.565 2.075c-.394.189-.755.497-1.26.928l-.079.066a2.56 2.56 0 0 1-1.58.655l-.102.008c-.662.053-1.135.09-1.547.236a3.33 3.33 0 0 0-2.03 2.029c-.145.412-.182.885-.235 1.547l-.008.102a2.56 2.56 0 0 1-.655 1.58l-.066.078c-.431.506-.74.867-.928 1.261a3.33 3.33 0 0 0 0 2.87c.189.394.497.755.928 1.26l.066.079c.41.48.604.939.655 1.58l.008.102c.053.662.09 1.135.236 1.547a3.33 3.33 0 0 0 2.029 2.03c.412.145.885.182 1.547.235l.102.008c.629.05 1.09.238 1.58.655l.079.066c.505.431.866.74 1.26.928a3.33 3.33 0 0 0 2.87 0c.394-.189.755-.497 1.26-.928l.079-.066c.48-.41.939-.604 1.58-.655l.102-.008c.662-.053 1.135-.09 1.547-.236a3.33 3.33 0 0 0 2.03-2.029c.145-.412.182-.885.235-1.547l.008-.102c.05-.629.238-1.09.655-1.58l.066-.079c.431-.505.74-.866.928-1.26a3.33 3.33 0 0 0 0-2.87c-.189-.394-.497-.755-.928-1.26l-.066-.079a2.56 2.56 0 0 1-.655-1.58l-.008-.102c-.053-.662-.09-1.135-.236-1.547a3.33 3.33 0 0 0-2.029-2.03c-.412-.145-.885-.182-1.547-.235l-.102-.008a2.56 2.56 0 0 1-1.58-.655l-.079-.066c-.505-.431-.866-.74-1.26-.928a3.33 3.33 0 0 0-2.87 0M15.53 9.53l-6 6a.75.75 0 0 1-1.06-1.06l6-6a.75.75 0 1 1 1.06 1.06"/>`), g.Group(children),
	)
}

func SmileCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9 15c.85.63 1.885 1 3 1s2.15-.37 3-1m-5.5-4.5V10m5 .5V10"/><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/></g>`), g.Group(children),
	)
}

func SmileCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12m6.148 2.553a.75.75 0 0 0 .155 1.05A5.77 5.77 0 0 0 12 16.75a5.77 5.77 0 0 0 3.447-1.148a.75.75 0 0 0-.894-1.204A4.27 4.27 0 0 1 12 15.25a4.27 4.27 0 0 1-2.553-.852a.75.75 0 0 0-1.05.155M15.25 10a.75.75 0 1 0-1.5 0v.5a.75.75 0 0 0 1.5 0zM9.5 9.25a.75.75 0 0 0-.75.75v.5a.75.75 0 0 0 1.5 0V10a.75.75 0 0 0-.75-.75"/>`), g.Group(children),
	)
}

func SmileGhost(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9 15c.85.63 1.885 1 3 1s2.15-.37 3-1m-5.5-4.5V10m5 .5V10"/><path d="M3 18.562v-6.518C3 7.05 7.03 3 12 3s9 4.05 9 9.044v6.517c0 1.162-.967 2.519-2 2c-.835-.42-2.223-.52-3 0c-.874.585-2.126.585-3 0c-.885-.593-1.649-.57-2.5 0c-.874.585-2.126.585-3 0c-.777-.52-1.665-.42-2.5 0c-1.033.519-2-.838-2-2"/></g>`), g.Group(children),
	)
}

func SmileGhostSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12.044v6.517c0 .764.308 1.57.8 2.127c.501.567 1.354 1.012 2.287.543c.696-.35 1.275-.363 1.746-.047c1.126.755 2.708.755 3.834 0c.345-.23.607-.308.825-.31c.218-.001.485.072.84.31c1.127.755 2.709.755 3.835 0c.213-.142.58-.237 1.044-.226c.454.01.898.12 1.202.273c.933.469 1.786.024 2.287-.543c.492-.557.8-1.363.8-2.126v-6.518c0-5.405-4.362-9.794-9.75-9.794s-9.75 4.389-9.75 9.794m6.148 2.51a.75.75 0 0 1 1.049-.156c.728.54 1.607.852 2.553.852s1.825-.313 2.553-.852a.75.75 0 1 1 .894 1.204A5.77 5.77 0 0 1 12 16.75a5.77 5.77 0 0 1-3.447-1.148a.75.75 0 0 1-.155-1.049M10.25 10v.5a.75.75 0 1 1-1.5 0V10a.75.75 0 1 1 1.5 0m4.25-.75a.75.75 0 0 1 .75.75v.5a.75.75 0 1 1-1.5 0V10a.75.75 0 0 1 .75-.75"/>`), g.Group(children),
	)
}

func SmileSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9.5 10.5V10m5 .5V10M9 15c.85.63 1.885 1 3 1s2.15-.37 3-1"/><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/></g>`), g.Group(children),
	)
}

func SmileSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25c-1.092 0-1.958 0-2.655.057c-.714.058-1.317.18-1.868.46a4.75 4.75 0 0 0-2.076 2.077c-.281.55-.403 1.154-.461 1.868c-.057.697-.057 1.563-.057 2.655v5.266c0 1.092 0 1.958.057 2.655c.058.714.18 1.317.46 1.869a4.75 4.75 0 0 0 2.077 2.075c.55.281 1.154.403 1.868.461c.697.057 1.563.057 2.655.057h5.266c1.092 0 1.958 0 2.655-.057c.714-.058 1.317-.18 1.869-.46a4.75 4.75 0 0 0 2.075-2.076c.281-.552.403-1.155.461-1.869c.057-.697.057-1.563.057-2.655V9.367c0-1.092 0-1.958-.057-2.655c-.058-.714-.18-1.317-.46-1.868a4.75 4.75 0 0 0-2.076-2.076c-.552-.281-1.155-.403-1.869-.461c-.697-.057-1.563-.057-2.655-.057zm-.97 12.303a.75.75 0 0 1 1.05-.155c.728.54 1.607.852 2.553.852s1.825-.313 2.553-.852a.75.75 0 1 1 .894 1.204A5.77 5.77 0 0 1 12 16.75a5.77 5.77 0 0 1-3.447-1.148a.75.75 0 0 1-.155-1.049M10.25 10v.5a.75.75 0 1 1-1.5 0V10a.75.75 0 1 1 1.5 0m4.25-.75a.75.75 0 0 1 .75.75v.5a.75.75 0 1 1-1.5 0V10a.75.75 0 0 1 .75-.75"/>`), g.Group(children),
	)
}

func SmokeDetector(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M16.56 12.047c2.667 3.314-2.667 4.64 0 7.953M12 12.047c2.667 3.314-2.667 4.64 0 7.953m-4.56-7.953c2.667 3.314-2.667 4.64 0 7.953M18 4H6m10.667 0c0 2.771-1.671 5.302-4.667 5.302S7.333 6.772 7.333 4"/>`), g.Group(children),
	)
}

func SmokeDetectorSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M5.25 4A.75.75 0 0 1 6 3.25h12a.75.75 0 0 1 0 1.5h-.62c-.127 1.262-.574 2.465-1.34 3.412c-.93 1.15-2.308 1.89-4.04 1.89s-3.11-.74-4.04-1.89c-.766-.947-1.213-2.15-1.34-3.412H6A.75.75 0 0 1 5.25 4m1.72 7.463a.75.75 0 0 1 1.054.114c.771.958 1.024 1.861.91 2.741c-.103.792-.501 1.484-.815 2.03l-.029.05c-.349.606-.595 1.056-.656 1.524c-.053.404.028.909.59 1.608a.75.75 0 1 1-1.168.94c-.771-.957-1.024-1.861-.91-2.741c.103-.792.501-1.484.815-2.03l.029-.05c.349-.606.595-1.056.656-1.524c.053-.404-.028-.908-.59-1.607a.75.75 0 0 1 .114-1.055m4.56 0a.75.75 0 0 1 1.054.114c.771.958 1.024 1.861.91 2.741c-.103.792-.501 1.484-.815 2.03l-.029.05c-.349.606-.595 1.056-.656 1.524c-.053.404.028.909.59 1.608a.75.75 0 1 1-1.168.94c-.771-.957-1.024-1.861-.91-2.741c.103-.792.501-1.484.815-2.03l.029-.05c.349-.606.595-1.056.656-1.524c.053-.404-.028-.908-.59-1.607a.75.75 0 0 1 .114-1.055m4.56 0a.75.75 0 0 1 1.054.114c.771.958 1.024 1.861.91 2.741c-.103.792-.501 1.484-.815 2.03l-.029.05c-.349.606-.596 1.056-.656 1.524c-.053.404.028.909.59 1.608a.75.75 0 1 1-1.168.94c-.771-.957-1.024-1.861-.91-2.741c.103-.792.501-1.484.815-2.03l.029-.05c.349-.606.596-1.056.656-1.524c.053-.404-.028-.908-.59-1.607a.75.75 0 0 1 .114-1.055"/>`), g.Group(children),
	)
}

func Snow(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M12 19V5M9.953 3L12 5l2.047-2M9.953 21L12 19l2.047 2m-8.251-5.5l12.408-7m.749-2.732L18.204 8.5L21 9.232M3 14.768l2.796.732l-.75 2.732m.75-9.732l12.408 7M21 14.768l-2.796.732l.75 2.732M5.047 5.768L5.796 8.5L3 9.232"/>`), g.Group(children),
	)
}

func SnowSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.417 2.476a.75.75 0 0 1 1.06-.012L12 3.95l1.523-1.487a.75.75 0 0 1 1.048 1.072l-1.821 1.78v5.4L17.563 8l.667-2.43a.75.75 0 0 1 1.446.396l-.548 2l2.062.54a.75.75 0 0 1-.38 1.452l-2.502-.656L13.526 12l4.782 2.698l2.502-.656a.75.75 0 0 1 .38 1.451l-2.062.54l.548 2a.75.75 0 1 1-1.446.397L17.563 16l-4.813-2.716v5.4l1.82 1.78a.75.75 0 1 1-1.047 1.072L12 20.05l-1.523 1.487a.75.75 0 0 1-1.048-1.072l1.82-1.78v-5.4L6.438 16l-.667 2.43a.75.75 0 0 1-1.447-.396l.549-2l-2.062-.54a.75.75 0 1 1 .38-1.452l2.502.656L10.473 12l-4.78-2.698l-2.502.656a.75.75 0 1 1-.38-1.451l2.062-.54l-.549-2A.75.75 0 0 1 5.77 5.57L6.437 8l4.813 2.716v-5.4l-1.821-1.78a.75.75 0 0 1-.012-1.06"/>`), g.Group(children),
	)
}

func Sofa(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M7.5 18v2m9-2v2M4.8 9.844C3.9 9.864 3 10.271 3 11v4c0 1.657 1.209 3 2.7 3h12.6c1.491 0 2.7-1.343 2.7-3v-4c0-.812-.9-1.176-1.8-1.156m-14.4 0c.9-.02 1.8.344 1.8 1.156c0 1.363.225 3 2 3h6.8c1.775 0 2-1.637 2-3c0-.73.9-1.135 1.8-1.156m-14.4 0V7c0-1.657 1.209-3 2.7-3h9c1.491 0 2.7 1.343 2.7 3v2.844"/>`), g.Group(children),
	)
}

func SofaSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M19.95 9.155V7c0-1.995-1.472-3.75-3.45-3.75h-9C5.522 3.25 4.05 5.005 4.05 7v2.182a3 3 0 0 0-.863.325c-.476.276-.937.768-.937 1.493v4c0 1.995 1.472 3.75 3.45 3.75h1.05V20a.75.75 0 0 0 1.5 0v-1.25h7.5V20a.75.75 0 0 0 1.5 0v-1.25h1.05c1.978 0 3.45-1.755 3.45-3.75v-4c0-.74-.432-1.255-.945-1.544a2.8 2.8 0 0 0-.855-.301M18.3 17.25H5.7c-1.005 0-1.95-.931-1.95-2.25v-4c0-.01-.004-.083.188-.194c.203-.118.522-.204.88-.212s.665.064.852.17c.162.091.18.165.18.236c0 .693.051 1.592.408 2.335c.186.388.464.753.874 1.018c.412.266.905.397 1.468.397h6.8c.563 0 1.056-.131 1.468-.397c.41-.265.688-.63.874-1.018c.357-.743.408-1.643.408-2.336c0-.008-.004-.082.188-.193c.203-.118.522-.204.88-.212s.665.064.852.17c.162.091.18.165.18.236v4c0 1.319-.945 2.25-1.95 2.25"/>`), g.Group(children),
	)
}

func Sort(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M4.5 7h15m-15 5h10m-10 5h4"/>`), g.Group(children),
	)
}

func SortSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M3.75 7a.75.75 0 0 1 .75-.75h15a.75.75 0 0 1 0 1.5h-15A.75.75 0 0 1 3.75 7m0 5a.75.75 0 0 1 .75-.75h10a.75.75 0 0 1 0 1.5h-10a.75.75 0 0 1-.75-.75m0 5c0 .414.336.75.75.75h4a.75.75 0 0 0 0-1.5h-4a.75.75 0 0 0-.75.75"/>`), g.Group(children),
	)
}

func Sparkles(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M14.77 21c1.123-4.649 2.486-6.099 6.23-7.364c-3.934-1.328-5.16-2.94-6.23-7.363c-1.124 4.649-2.488 6.098-6.232 7.363c3.93 1.327 5.163 2.95 6.231 7.364m-8.308-9.818c.512-2.42 1.502-3.512 3.461-4.091C7.963 6.512 6.973 5.42 6.462 3C5.972 5.315 5.047 6.485 3 7.09c1.959.58 2.95 1.672 3.462 4.092"/>`), g.Group(children),
	)
}

func SparklesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M7.195 2.845a.75.75 0 0 0-1.467 0c-.232 1.096-.55 1.835-.99 2.361c-.429.516-1.029.893-1.95 1.166a.75.75 0 0 0 0 1.438c.885.262 1.48.617 1.916 1.125c.444.516.782 1.26 1.024 2.402a.75.75 0 0 0 1.467 0c.242-1.143.58-1.886 1.024-2.402c.436-.508 1.03-.863 1.917-1.125a.75.75 0 0 0 0-1.438c-.886-.262-1.481-.617-1.917-1.125c-.444-.516-.782-1.26-1.024-2.402m8.303 3.251a.75.75 0 0 0-1.458 0c-.554 2.292-1.141 3.674-1.972 4.638c-.82.952-1.947 1.576-3.77 2.192a.75.75 0 0 0 0 1.421c1.904.643 3.046 1.322 3.852 2.292c.819.986 1.362 2.355 1.89 4.537a.75.75 0 0 0 1.458 0c.554-2.291 1.142-3.673 1.972-4.637c.82-.952 1.947-1.576 3.77-2.192a.75.75 0 0 0 0-1.421c-1.907-.644-3.047-1.32-3.852-2.29c-.818-.984-1.36-2.352-1.89-4.54"/>`), g.Group(children),
	)
}

func Speaker(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9 14a3 3 0 1 0 6 0a3 3 0 0 0-6 0m2.5-7h1"/><path d="M12 3c3.418 0 5.127 0 6.188 1.318C19.25 5.636 19.25 7.758 19.25 12s0 6.364-1.062 7.682C17.127 21 15.418 21 12 21s-5.127 0-6.188-1.318C4.75 18.364 4.75 16.242 4.75 12s0-6.364 1.062-7.682C6.873 3 8.582 3 12 3"/></g>`), g.Group(children),
	)
}

func SpeakerSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M10.409 12.409a2.25 2.25 0 1 1 3.182 3.183a2.25 2.25 0 0 1-3.182-3.183"/><path d="M7.899 2.425c1.049-.175 2.382-.175 4.034-.175h.134c1.652 0 2.985 0 4.034.175c1.104.184 1.99.577 2.671 1.423c.663.822.952 1.85 1.09 3.134C20 8.247 20 9.872 20 11.953v.094c0 2.082 0 3.706-.137 4.971c-.14 1.284-.428 2.312-1.09 3.134c-.682.846-1.568 1.239-2.672 1.423c-1.049.175-2.382.175-4.034.175h-.134c-1.652 0-2.985 0-4.034-.175c-1.104-.184-1.99-.576-2.671-1.422c-.663-.823-.952-1.851-1.09-3.134C4 15.753 4 14.128 4 12.046v-.094c0-2.081 0-3.706.137-4.971c.14-1.284.428-2.312 1.09-3.134c.682-.846 1.568-1.239 2.672-1.423M11.5 6.25a.75.75 0 0 0 0 1.5h1a.75.75 0 0 0 0-1.5zm.5 4a3.75 3.75 0 1 0 0 7.5a3.75 3.75 0 0 0 0-7.5"/></g>`), g.Group(children),
	)
}

func Spinner(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M12 3v3m6.366-.366l-2.12 2.12M21 12h-3m.366 6.366l-2.12-2.12M12 21v-3m-6.366.366l2.12-2.12M3 12h3m-.366-6.366l2.12 2.12"/>`), g.Group(children),
	)
}

func SpinnerOne(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M12 3v3m0 15v-3m-7.794-1.5L6.804 15M21 12h-3m-1.5 7.794L15 17.196M3 12h3m1.5-7.794L9 6.804m-1.5 12.99L9 17.196m10.794-.696L17.196 15M4.206 7.5L6.804 9"/>`), g.Group(children),
	)
}

func SpinnerOneSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12 2.25a.75.75 0 0 1 .75.75v3a.75.75 0 0 1-1.5 0V3a.75.75 0 0 1 .75-.75M7.125 3.556a.75.75 0 0 1 1.025.275l1.5 2.598a.75.75 0 1 1-1.3.75L6.85 4.58a.75.75 0 0 1 .275-1.025m-3.569 3.57a.75.75 0 0 1 1.025-.275l2.598 1.5a.75.75 0 0 1-.75 1.3L3.83 8.15a.75.75 0 0 1-.275-1.025M2.25 12a.75.75 0 0 1 .75-.75h3a.75.75 0 0 1 0 1.5H3a.75.75 0 0 1-.75-.75m15 0a.75.75 0 0 1 .75-.75h3a.75.75 0 0 1 0 1.5h-3a.75.75 0 0 1-.75-.75m-9.797 2.625a.75.75 0 0 1-.274 1.024l-2.598 1.5a.75.75 0 0 1-.75-1.299l2.598-1.5a.75.75 0 0 1 1.024.275m9.094 0a.75.75 0 0 1 1.024-.275l2.598 1.5a.75.75 0 1 1-.75 1.3l-2.598-1.5a.75.75 0 0 1-.274-1.025m-1.922 1.922a.75.75 0 0 1 1.024.274l1.5 2.598a.75.75 0 0 1-1.299.75l-1.5-2.598a.75.75 0 0 1 .275-1.024m-5.25 0a.75.75 0 0 1 .275 1.024l-1.5 2.598a.75.75 0 0 1-1.3-.75l1.5-2.598a.75.75 0 0 1 1.025-.274M12 17.25a.75.75 0 0 1 .75.75v3a.75.75 0 0 1-1.5 0v-3a.75.75 0 0 1 .75-.75"/>`), g.Group(children),
	)
}

func SpinnerSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12 2.25a.75.75 0 0 1 .75.75v3a.75.75 0 0 1-1.5 0V3a.75.75 0 0 1 .75-.75m6.896 2.854a.75.75 0 0 1 0 1.06l-2.119 2.12a.75.75 0 0 1-1.06-1.061l2.118-2.119a.75.75 0 0 1 1.06 0M17.25 12a.75.75 0 0 1 .75-.75h3a.75.75 0 0 1 0 1.5h-3a.75.75 0 0 1-.75-.75m-1.533 3.717a.75.75 0 0 1 1.06 0l2.119 2.118a.75.75 0 0 1-1.06 1.061l-2.12-2.119a.75.75 0 0 1 0-1.06M12 17.25a.75.75 0 0 1 .75.75v3a.75.75 0 0 1-1.5 0v-3a.75.75 0 0 1 .75-.75m-3.717-1.533a.75.75 0 0 1 0 1.06l-2.118 2.119a.75.75 0 1 1-1.06-1.06l2.118-2.12a.75.75 0 0 1 1.06 0M2.25 12a.75.75 0 0 1 .75-.75h3a.75.75 0 0 1 0 1.5H3a.75.75 0 0 1-.75-.75m2.854-6.896a.75.75 0 0 1 1.06 0l2.12 2.119a.75.75 0 0 1-1.061 1.06L5.104 6.165a.75.75 0 0 1 0-1.061"/>`), g.Group(children),
	)
}

func Square(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/>`), g.Group(children),
	)
}

func SquareDashed(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9.4 21h5.2m-9.416-.436a4 4 0 0 1-1.748-1.748M3 14.6V9.4m18 5.2V9.4m-.436 9.416a4 4 0 0 1-1.748 1.748M14.6 3H9.4m9.416.436a4 4 0 0 1 1.748 1.748M5.184 3.436a4 4 0 0 0-1.748 1.748"/>`), g.Group(children),
	)
}

func SquareDashedSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.4 2.25a.75.75 0 0 0 0 1.5h5.2a.75.75 0 0 0 0-1.5zM5.525 4.104a.75.75 0 1 0-.681-1.336a4.75 4.75 0 0 0-2.076 2.076a.75.75 0 1 0 1.336.68a3.25 3.25 0 0 1 1.42-1.42m13.633-1.336a.75.75 0 0 0-.681 1.336a3.25 3.25 0 0 1 1.42 1.42a.75.75 0 1 0 1.336-.68a4.75 4.75 0 0 0-2.075-2.076M3.75 9.4a.75.75 0 0 0-1.5 0v5.2a.75.75 0 0 0 1.5 0zm18 0a.75.75 0 0 0-1.5 0v5.2a.75.75 0 0 0 1.5 0zM4.104 18.476a.75.75 0 1 0-1.336.68a4.75 4.75 0 0 0 2.076 2.076a.75.75 0 0 0 .68-1.336a3.25 3.25 0 0 1-1.42-1.42m17.128.681a.75.75 0 0 0-1.336-.681a3.25 3.25 0 0 1-1.42 1.42a.75.75 0 1 0 .68 1.336a4.75 4.75 0 0 0 2.076-2.075M9.4 20.25a.75.75 0 0 0 0 1.5h5.2a.75.75 0 0 0 0-1.5z"/>`), g.Group(children),
	)
}

func SquareHalf(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M12 3.5v17M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/>`), g.Group(children),
	)
}

func SquareHalfSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057M6.834 3.802c-.62.05-1.005.147-1.31.302a3.25 3.25 0 0 0-1.42 1.42c-.155.305-.251.69-.302 1.31c-.051.63-.052 1.434-.052 2.566v5.2c0 1.133 0 1.937.052 2.566c.05.62.147 1.005.302 1.31a3.25 3.25 0 0 0 1.42 1.42c.305.155.69.251 1.31.302c.63.051 1.434.052 2.566.052h1.85V3.75H9.4c-1.132 0-1.937 0-2.566.052"/>`), g.Group(children),
	)
}

func SquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25c-1.092 0-1.958 0-2.655.057c-.714.058-1.317.18-1.868.46a4.75 4.75 0 0 0-2.076 2.077c-.281.55-.403 1.154-.461 1.868c-.057.697-.057 1.563-.057 2.655v5.266c0 1.092 0 1.958.057 2.655c.058.714.18 1.317.46 1.869a4.75 4.75 0 0 0 2.077 2.075c.55.281 1.154.403 1.868.461c.697.057 1.563.057 2.655.057h5.266c1.092 0 1.958 0 2.655-.057c.714-.058 1.317-.18 1.869-.46a4.75 4.75 0 0 0 2.075-2.076c.281-.552.403-1.155.461-1.869c.057-.697.057-1.563.057-2.655V9.367c0-1.092 0-1.958-.057-2.655c-.058-.714-.18-1.317-.46-1.868a4.75 4.75 0 0 0-2.076-2.076c-.552-.281-1.155-.403-1.869-.461c-.697-.057-1.563-.057-2.655-.057z"/>`), g.Group(children),
	)
}

func Star(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M12.854 3.5a.979.979 0 0 0-1.708 0a27 27 0 0 0-2.057 4.762c-.139.431-.551.73-1.023.743a29.4 29.4 0 0 0-4.267.425c-.774.136-1.065 1.018-.515 1.556a31.5 31.5 0 0 0 3.41 2.892c.367.269.518.73.378 1.152a27 27 0 0 0-1.14 4.927c-.1.755.708 1.288 1.41.928a28.6 28.6 0 0 0 3.98-2.472a1.15 1.15 0 0 1 1.356 0a28.5 28.5 0 0 0 3.98 2.472c.701.36 1.51-.173 1.41-.928a27 27 0 0 0-1.14-4.928c-.14-.42.01-.882.378-1.151a31.5 31.5 0 0 0 3.41-2.892c.55-.538.26-1.42-.515-1.556a29 29 0 0 0-4.267-.425a1.1 1.1 0 0 1-1.023-.743a27 27 0 0 0-2.057-4.761"/>`), g.Group(children),
	)
}

func StarSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M13.51 3.139c-.652-1.185-2.368-1.185-3.021 0a28 28 0 0 0-2.114 4.894a.35.35 0 0 1-.33.223a30 30 0 0 0-4.375.436c-1.337.233-1.926 1.837-.91 2.83a32 32 0 0 0 3.492 2.96a.274.274 0 0 1 .108.31a27.6 27.6 0 0 0-1.17 5.066c-.19 1.424 1.317 2.298 2.494 1.694a29.3 29.3 0 0 0 4.085-2.537a.4.4 0 0 1 .462 0a29 29 0 0 0 4.085 2.537c1.177.604 2.685-.27 2.495-1.694a27.6 27.6 0 0 0-1.171-5.065a.274.274 0 0 1 .11-.31a32 32 0 0 0 3.49-2.96c1.016-.994.427-2.598-.91-2.831a30 30 0 0 0-4.376-.436a.35.35 0 0 1-.329-.223a27.7 27.7 0 0 0-2.114-4.894"/>`), g.Group(children),
	)
}

func Stop(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M6 12.5c0-2.828 0-4.243.879-5.121C7.757 6.5 9.172 6.5 12 6.5s4.243 0 5.121.879C18 8.257 18 9.672 18 12.5s0 4.243-.879 5.121c-.878.879-2.293.879-5.121.879s-4.243 0-5.121-.879C6 16.743 6 15.328 6 12.5"/>`), g.Group(children),
	)
}

func StopCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/><path d="M9.5 12c0-1.178 0-1.768.366-2.134S10.822 9.5 12 9.5s1.768 0 2.134.366s.366.956.366 2.134s0 1.768-.366 2.134s-.956.366-2.134.366s-1.768 0-2.134-.366S9.5 13.178 9.5 12"/></g>`), g.Group(children),
	)
}

func StopCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12m8.279-3.198c-.424.057-.848.188-1.193.534c-.346.345-.477.769-.534 1.192c-.052.391-.052.876-.052 1.425v.094c0 .549 0 1.034.052 1.425c.057.423.188.847.534 1.192c.345.346.769.477 1.192.534c.391.052.876.052 1.425.052h.095c.548 0 1.033 0 1.424-.052c.423-.057.847-.188 1.192-.534c.346-.345.477-.769.534-1.192c.052-.391.052-.876.052-1.424v-.095c0-.549 0-1.034-.052-1.424c-.057-.424-.188-.848-.534-1.193c-.345-.346-.769-.477-1.192-.534c-.391-.052-.876-.052-1.425-.052h-.094c-.549 0-1.034 0-1.424.052"/>`), g.Group(children),
	)
}

func StopDiamond(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M2.707 10.295a2.41 2.41 0 0 0 0 3.41l7.588 7.588a2.41 2.41 0 0 0 3.41 0l7.588-7.588a2.41 2.41 0 0 0 0-3.41l-7.588-7.588a2.41 2.41 0 0 0-3.41 0z"/><path d="M9.5 12c0-1.178 0-1.768.366-2.134S10.822 9.5 12 9.5s1.768 0 2.134.366s.366.956.366 2.134s0 1.768-.366 2.134s-.956.366-2.134.366s-1.768 0-2.134-.366S9.5 13.178 9.5 12"/></g>`), g.Group(children),
	)
}

func StopDiamondSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.79 1.49a3.16 3.16 0 0 1 3.445.687l7.588 7.588a3.16 3.16 0 0 1 0 4.47l-7.588 7.588a3.16 3.16 0 0 1-4.47 0l-7.588-7.588a3.16 3.16 0 0 1 0-4.47l7.588-7.589a3.2 3.2 0 0 1 1.025-.685m-.261 7.312c-.424.057-.848.188-1.193.534c-.346.345-.477.769-.534 1.192c-.052.391-.052.876-.052 1.425v.094c0 .549 0 1.034.052 1.425c.057.423.188.847.534 1.192c.345.346.769.477 1.192.534c.391.052.876.052 1.425.052h.095c.548 0 1.033 0 1.424-.052c.423-.057.847-.188 1.192-.534c.346-.345.477-.769.534-1.192c.052-.391.052-.876.052-1.424v-.095c0-.549 0-1.034-.052-1.424c-.057-.424-.188-.848-.534-1.193c-.345-.346-.769-.477-1.192-.534c-.391-.052-.876-.052-1.425-.052h-.094c-.549 0-1.034 0-1.424.052"/>`), g.Group(children),
	)
}

func StopHexagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M20.5 15.8V8.2a1.91 1.91 0 0 0-.944-1.645l-6.612-3.8a1.88 1.88 0 0 0-1.888 0l-6.612 3.8A1.9 1.9 0 0 0 3.5 8.2v7.602a1.91 1.91 0 0 0 .944 1.644l6.612 3.8a1.88 1.88 0 0 0 1.888 0l6.612-3.8A1.9 1.9 0 0 0 20.5 15.8"/><path d="M9.5 12c0-1.178 0-1.768.366-2.134S10.822 9.5 12 9.5s1.768 0 2.134.366s.366.956.366 2.134s0 1.768-.366 2.134s-.956.366-2.134.366s-1.768 0-2.134-.366S9.5 13.178 9.5 12"/></g>`), g.Group(children),
	)
}

func StopHexagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.68 2.105a2.63 2.63 0 0 1 2.64 0l.001.001l6.611 3.8A2.65 2.65 0 0 1 21.25 8.2v7.603a2.66 2.66 0 0 1-1.318 2.291l-.003.002l-6.608 3.799h-.002a2.63 2.63 0 0 1-2.639 0h-.001l-6.608-3.8h-.003A2.64 2.64 0 0 1 2.75 15.8V8.198a2.66 2.66 0 0 1 1.318-2.291l.003-.002zm-.152 6.697c-.423.057-.847.188-1.192.534c-.346.345-.477.769-.534 1.192c-.052.391-.052.876-.052 1.425v.094c0 .549 0 1.034.052 1.425c.057.423.188.847.534 1.192c.345.346.769.477 1.192.534c.391.052.876.052 1.425.052h.095c.548 0 1.033 0 1.424-.052c.423-.057.847-.188 1.192-.534c.346-.345.477-.769.534-1.192c.052-.391.052-.876.052-1.424v-.095c0-.549 0-1.034-.052-1.424c-.057-.424-.188-.848-.534-1.193c-.345-.346-.769-.477-1.192-.534c-.391-.052-.876-.052-1.425-.052h-.094c-.549 0-1.034 0-1.424.052"/>`), g.Group(children),
	)
}

func StopOctagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M7.805 3.469C8.16 3.115 8.451 3 8.937 3h6.126c.486 0 .778.115 1.132.469l4.336 4.336c.354.354.469.646.469 1.132v6.126c0 .5-.125.788-.469 1.132l-4.336 4.336c-.354.354-.646.469-1.132.469H8.937c-.5 0-.788-.125-1.132-.469L3.47 16.195c-.355-.355-.47-.646-.47-1.132V8.937c0-.5.125-.788.469-1.132z"/><path d="M9.5 12c0-1.178 0-1.768.366-2.134S10.822 9.5 12 9.5s1.768 0 2.134.366s.366.956.366 2.134s0 1.768-.366 2.134s-.956.366-2.134.366s-1.768 0-2.134-.366S9.5 13.178 9.5 12"/></g>`), g.Group(children),
	)
}

func StopOctagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.037 2.408a2.3 2.3 0 0 1 .9-.158h6.126c.302 0 .602.036.9.158s.54.31.762.53l4.337 4.337c.22.221.408.463.53.762c.123.298.158.598.158.9v6.126c0 .313-.039.616-.163.914a2.3 2.3 0 0 1-.525.748l-4.337 4.337a2.3 2.3 0 0 1-.762.53a2.3 2.3 0 0 1-.9.158H8.937c-.313 0-.616-.039-.914-.163a2.3 2.3 0 0 1-.748-.525l-4.337-4.337a2.3 2.3 0 0 1-.53-.762a2.3 2.3 0 0 1-.158-.9V8.937c0-.313.039-.616.163-.914a2.3 2.3 0 0 1 .525-.748l4.337-4.337c.221-.22.463-.408.762-.53m2.491 6.394c-.423.057-.847.188-1.192.534c-.346.345-.477.769-.534 1.192c-.052.391-.052.876-.052 1.425v.094c0 .549 0 1.034.052 1.425c.057.423.188.847.534 1.192c.345.346.769.477 1.192.534c.391.052.876.052 1.425.052h.095c.548 0 1.033 0 1.424-.052c.423-.057.847-.188 1.192-.534c.346-.345.477-.769.534-1.192c.052-.391.052-.876.052-1.424v-.095c0-.549 0-1.034-.052-1.424c-.057-.424-.188-.848-.534-1.193c-.345-.346-.769-.477-1.192-.534c-.391-.052-.876-.052-1.425-.052h-.094c-.549 0-1.034 0-1.424.052"/>`), g.Group(children),
	)
}

func StopSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M11.945 5.75c-1.367 0-2.47 0-3.337.117c-.9.12-1.658.38-2.26.981c-.602.602-.86 1.36-.981 2.26c-.117.867-.117 1.97-.117 3.337v.11c0 1.367 0 2.47.117 3.337c.12.9.38 1.658.981 2.26c.602.602 1.36.86 2.26.982c.867.116 1.97.116 3.337.116h.11c1.367 0 2.47 0 3.337-.116c.9-.122 1.658-.38 2.26-.982s.86-1.36.982-2.26c.116-.867.116-1.97.116-3.337v-.11c0-1.367 0-2.47-.116-3.337c-.122-.9-.38-1.658-.982-2.26s-1.36-.86-2.26-.981c-.867-.117-1.97-.117-3.337-.117z"/>`), g.Group(children),
	)
}

func StopSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/><path d="M9.5 12c0-1.178 0-1.768.366-2.134S10.822 9.5 12 9.5s1.768 0 2.134.366s.366.956.366 2.134s0 1.768-.366 2.134s-.956.366-2.134.366s-1.768 0-2.134-.366S9.5 13.178 9.5 12"/></g>`), g.Group(children),
	)
}

func StopSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057m1.161 6.552c-.423.057-.847.188-1.192.534c-.346.345-.477.769-.534 1.192c-.052.391-.052.876-.052 1.425v.094c0 .549 0 1.034.052 1.425c.057.423.188.847.534 1.192c.345.346.769.477 1.192.534c.391.052.876.052 1.425.052h.095c.548 0 1.033 0 1.424-.052c.423-.057.847-.188 1.192-.534c.346-.345.477-.769.534-1.192c.052-.391.052-.876.052-1.424v-.095c0-.549 0-1.034-.052-1.424c-.057-.424-.188-.848-.534-1.193c-.345-.346-.769-.477-1.192-.534c-.391-.052-.876-.052-1.425-.052h-.094c-.549 0-1.034 0-1.424.052"/>`), g.Group(children),
	)
}

func StopWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83"/><path d="M9.5 12c0-1.178 0-1.768.366-2.134S10.822 9.5 12 9.5s1.768 0 2.134.366s.366.956.366 2.134s0 1.768-.366 2.134s-.956.366-2.134.366s-1.768 0-2.134-.366S9.5 13.178 9.5 12"/></g>`), g.Group(children),
	)
}

func StopWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.565 2.075a3.33 3.33 0 0 1 2.87 0c.394.189.755.497 1.26.928l.079.066c.48.41.939.604 1.58.655l.102.008c.662.053 1.135.09 1.547.236a3.33 3.33 0 0 1 2.03 2.029c.145.412.182.885.235 1.547l.008.102c.051.641.246 1.1.655 1.58l.066.078c.431.506.74.867.928 1.261a3.33 3.33 0 0 1 0 2.87c-.189.394-.497.755-.928 1.26l-.066.079c-.418.49-.605.951-.655 1.58l-.008.102c-.053.662-.09 1.135-.236 1.547a3.33 3.33 0 0 1-2.029 2.03c-.412.145-.885.182-1.547.235l-.102.008c-.641.051-1.1.246-1.58.655l-.079.066c-.505.431-.866.74-1.26.928a3.33 3.33 0 0 1-2.87 0c-.394-.189-.755-.497-1.26-.928l-.079-.066a2.56 2.56 0 0 0-1.58-.655l-.102-.008c-.662-.053-1.135-.09-1.547-.236a3.33 3.33 0 0 1-2.03-2.029c-.145-.412-.182-.885-.235-1.547l-.008-.102a2.56 2.56 0 0 0-.655-1.58l-.066-.079c-.431-.505-.74-.866-.928-1.26a3.33 3.33 0 0 1 0-2.87c.189-.394.497-.755.928-1.26l.066-.079a2.56 2.56 0 0 0 .655-1.58l.008-.102c.053-.662.09-1.135.236-1.547a3.33 3.33 0 0 1 2.029-2.03c.412-.145.885-.182 1.547-.235l.102-.008a2.56 2.56 0 0 0 1.58-.655l.078-.066c.506-.431.867-.74 1.261-.928m-.037 6.727c-.423.057-.847.188-1.192.534c-.346.345-.477.769-.534 1.192c-.052.391-.052.876-.052 1.425v.094c0 .549 0 1.034.052 1.425c.057.423.188.847.534 1.192c.345.346.769.477 1.192.534c.391.052.876.052 1.425.052h.095c.548 0 1.033 0 1.424-.052c.423-.057.847-.188 1.192-.534c.346-.345.477-.769.534-1.192c.052-.391.052-.876.052-1.424v-.095c0-.549 0-1.034-.052-1.424c-.057-.424-.188-.848-.534-1.193c-.345-.346-.769-.477-1.192-.534c-.391-.052-.876-.052-1.425-.052h-.094c-.549 0-1.034 0-1.424.052"/>`), g.Group(children),
	)
}

func Store(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M19.996 10.621V19a2 2 0 0 1-2 2H6.004a2 2 0 0 1-1.999-2v-8.379M7.502 8.75l.5-5.75m-.5 5.75c0 2.902 4.498 2.902 4.498 0m-4.498 0c0 3.176-5.155 2.52-4.433-.248l1.045-4.007A2 2 0 0 1 6.048 3h11.904a2 2 0 0 1 1.934 1.495l1.045 4.007c.722 2.769-4.433 3.424-4.433.248M12 8.75V3m0 5.75c0 2.902 4.498 2.902 4.498 0m0 0l-.5-5.75"/>`), g.Group(children),
	)
}

func StoreSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M7.993 2.25h9.959a2.75 2.75 0 0 1 2.66 2.056l1.044 4.007c.247.944-.01 1.771-.57 2.36q-.159.165-.34.3V19a2.75 2.75 0 0 1-2.75 2.75H6.004A2.75 2.75 0 0 1 3.254 19v-8.026a3 3 0 0 1-.34-.302c-.56-.588-.817-1.415-.57-2.36l1.044-4.006a2.75 2.75 0 0 1 2.66-2.056zM12 10.746a3 3 0 0 1-.214.205c-.576.496-1.32.725-2.035.725s-1.459-.23-2.035-.725a3 3 0 0 1-.217-.208a2.6 2.6 0 0 1-.35.305c-.65.47-1.463.624-2.204.554a4 4 0 0 1-.19-.023V19c0 .69.559 1.25 1.248 1.25h11.994c.69 0 1.249-.56 1.249-1.25v-7.421q-.096.014-.19.023c-.742.07-1.555-.084-2.204-.554a2.6 2.6 0 0 1-.352-.305a3 3 0 0 1-.216.208c-.576.496-1.32.725-2.035.725s-1.459-.23-2.035-.725a3 3 0 0 1-.214-.205"/>`), g.Group(children),
	)
}

func Subtract(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M15.6 4.35V3h-1.8M8.4 3h1.8M4.8 3H3v1.8m0 5.4V8.4m0 5.4v1.8h1.35m5.85 0H8.4v.6c0 1.68 0 2.52.327 3.162a3 3 0 0 0 1.311 1.311C10.68 21 11.52 21 13.2 21h3c1.68 0 2.52 0 3.162-.327a3 3 0 0 0 1.311-1.311C21 18.72 21 17.88 21 16.2v-3c0-1.68 0-2.52-.327-3.162a3 3 0 0 0-1.311-1.311C18.72 8.4 17.88 8.4 16.2 8.4h-.6v1.8m-1.8 5.4h1.8v-1.8"/>`), g.Group(children),
	)
}

func SubtractSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M3 2.25a.75.75 0 0 0-.75.75v1.8a.75.75 0 0 0 1.5 0V3.75H4.8a.75.75 0 0 0 0-1.5zm5.4 0a.75.75 0 0 0 0 1.5h1.8a.75.75 0 0 0 0-1.5zm5.4 0a.75.75 0 0 0 0 1.5h1.05v.6a.75.75 0 0 0 1.5 0V3a.75.75 0 0 0-.75-.75zM3.75 8.4a.75.75 0 0 0-1.5 0v1.8a.75.75 0 0 0 1.5 0zm11.85-.75a.75.75 0 0 0-.75.75v1.8a.75.75 0 0 0 1.5 0V9.15c.773 0 1.324.003 1.76.038c.453.037.714.107.912.207c.423.216.767.56.983.984c.1.197.17.458.207.912c.037.462.038 1.056.038 1.909v3c0 .852 0 1.447-.038 1.91c-.038.453-.107.714-.207.912c-.216.423-.56.767-.983.983c-.198.1-.459.17-.913.207c-.462.037-1.057.038-1.909.038h-3c-.852 0-1.447 0-1.91-.038c-.453-.038-.714-.107-.911-.207a2.25 2.25 0 0 1-.984-.983c-.1-.198-.17-.459-.207-.913c-.035-.435-.038-.986-.038-1.759h1.05a.75.75 0 0 0 0-1.5H8.4a.75.75 0 0 0-.75.75v.632c0 .813 0 1.469.043 2c.045.546.14 1.026.366 1.47a3.75 3.75 0 0 0 1.639 1.64c.444.226.924.32 1.47.365c.531.043 1.187.043 2 .043h3.064c.813 0 1.469 0 2-.043c.546-.045 1.026-.14 1.47-.366a3.75 3.75 0 0 0 1.64-1.639c.226-.444.32-.924.365-1.47c.043-.531.043-1.187.043-2v-3.064c0-.813 0-1.469-.043-2c-.045-.546-.14-1.026-.366-1.47a3.75 3.75 0 0 0-1.639-1.64c-.444-.226-.924-.32-1.47-.365c-.531-.043-1.187-.043-2-.043zM3.75 13.8a.75.75 0 0 0-1.5 0v1.8c0 .414.336.75.75.75h1.35a.75.75 0 0 0 0-1.5h-.6z"/><path d="M16.35 13.8a.75.75 0 0 0-1.5 0v1.05H13.8a.75.75 0 0 0 0 1.5h1.8a.75.75 0 0 0 .75-.75z"/></g>`), g.Group(children),
	)
}

func Sun(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M16 12a4 4 0 1 1-8 0a4 4 0 0 1 8 0m-4-9v2m0 14.004v2M5 12H3m18 0h-2m0-7l-2 2M5 5l2 2m0 10l-2 2m14 0l-2-2"/>`), g.Group(children),
	)
}

func SunSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12 2.25a.75.75 0 0 1 .75.75v2a.75.75 0 1 1-1.5 0V3a.75.75 0 0 1 .75-.75m0 16.004a.75.75 0 0 1 .75.75v2a.75.75 0 1 1-1.5 0v-2a.75.75 0 0 1 .75-.75M2.25 12a.75.75 0 0 1 .75-.75h2a.75.75 0 0 1 0 1.5H3a.75.75 0 0 1-.75-.75m16 0a.75.75 0 0 1 .75-.75h2a.75.75 0 1 1 0 1.5h-2a.75.75 0 0 1-.75-.75m1.28-7.53a.75.75 0 0 1 0 1.06l-2 2a.75.75 0 1 1-1.06-1.06l2-2a.75.75 0 0 1 1.06 0m-15.06 0a.75.75 0 0 1 1.06 0l2 2a.75.75 0 0 1-1.06 1.06l-2-2a.75.75 0 0 1 0-1.06m3.06 12a.75.75 0 0 1 0 1.06l-2 2a.75.75 0 0 1-1.06-1.06l2-2a.75.75 0 0 1 1.06 0m8.94 0a.75.75 0 0 1 1.06 0l2 2a.75.75 0 1 1-1.06 1.06l-2-2a.75.75 0 0 1 0-1.06M12 7.25a4.75 4.75 0 1 0 0 9.5a4.75 4.75 0 0 0 0-9.5"/>`), g.Group(children),
	)
}

func Sunrise(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M15.5 17.5a3.5 3.5 0 1 0-7 0M11.9 3v7m-6.002 1.398l1.278 1.278M3 17.4h1.8m14.2 0h1.8m-4.176-4.724l1.278-1.278M21 21H3M8.3 6.6L11.9 3l3.6 3.6"/>`), g.Group(children),
	)
}

func SunriseSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.995 14.495A4.25 4.25 0 0 1 16.25 17.5a.75.75 0 0 1-.75.75h-7a.75.75 0 0 1-.75-.75a4.25 4.25 0 0 1 1.245-3.005m-3.627-3.627a.75.75 0 0 1 1.06 0l1.278 1.278a.75.75 0 0 1-1.06 1.06l-1.278-1.278a.75.75 0 0 1 0-1.06M2.25 17.4a.75.75 0 0 1 .75-.75h1.8a.75.75 0 0 1 0 1.5H3a.75.75 0 0 1-.75-.75m16 0a.75.75 0 0 1 .75-.75h1.8a.75.75 0 0 1 0 1.5H19a.75.75 0 0 1-.75-.75m.182-6.532a.75.75 0 0 1 0 1.06l-1.278 1.278a.75.75 0 0 1-1.06-1.06l1.278-1.278a.75.75 0 0 1 1.06 0M2.25 21a.75.75 0 0 1 .75-.75h18a.75.75 0 0 1 0 1.5H3a.75.75 0 0 1-.75-.75M11.9 2.25a.75.75 0 0 1 .53.22l3.6 3.6a.75.75 0 0 1-1.06 1.06l-2.32-2.32V10a.75.75 0 0 1-1.5 0V4.81L8.83 7.13a.75.75 0 0 1-1.06-1.06l3.6-3.6a.75.75 0 0 1 .53-.22"/>`), g.Group(children),
	)
}

func Sunset(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M15.5 17.5a3.5 3.5 0 1 0-7 0M11.9 3v7m-6.002 1.398l1.278 1.278M3 17.4h1.8m14.2 0h1.8m-4.176-4.724l1.278-1.278M21 21H3M8.3 7l3.6 3.6L15.5 7"/>`), g.Group(children),
	)
}

func SunsetSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M5.368 10.868a.75.75 0 0 1 1.06 0l1.278 1.278a.75.75 0 0 1-1.06 1.06l-1.278-1.278a.75.75 0 0 1 0-1.06M2.25 17.4a.75.75 0 0 1 .75-.75h1.8a.75.75 0 0 1 0 1.5H3a.75.75 0 0 1-.75-.75m16 0a.75.75 0 0 1 .75-.75h1.8a.75.75 0 0 1 0 1.5H19a.75.75 0 0 1-.75-.75m.182-6.532a.75.75 0 0 1 0 1.06l-1.278 1.278a.75.75 0 0 1-1.06-1.06l1.278-1.278a.75.75 0 0 1 1.06 0M2.25 21a.75.75 0 0 1 .75-.75h18a.75.75 0 0 1 0 1.5H3a.75.75 0 0 1-.75-.75m6.745-6.505A4.25 4.25 0 0 1 16.25 17.5a.75.75 0 0 1-.75.75h-7a.75.75 0 0 1-.75-.75a4.25 4.25 0 0 1 1.245-3.005M11.9 2.25a.75.75 0 0 1 .75.75v5.79l2.32-2.32a.75.75 0 0 1 1.06 1.06l-3.6 3.6a.75.75 0 0 1-1.06 0l-3.6-3.6a.75.75 0 0 1 1.06-1.06l2.32 2.32V3a.75.75 0 0 1 .75-.75"/>`), g.Group(children),
	)
}

func Support(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/><path d="m18 6l-3.525 3.525M6 18l3.525-3.525M6 6l3.525 3.525M18 18l-3.525-3.525m-4.95 0c-1.348-1.348-1.348-3.601 0-4.95m0 4.95c1.348 1.348 3.601 1.348 4.95 0m0 0c1.348-1.348 1.348-3.601 0-4.95m0 0c-1.348-1.348-3.601-1.348-4.95 0"/></g>`), g.Group(children),
	)
}

func SupportSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M5.66 6.72A8.22 8.22 0 0 0 3.75 12c0 2.008.717 3.849 1.91 5.28l2.853-2.853a4.31 4.31 0 0 1 0-4.854zm12.68 0l-2.853 2.853a4.31 4.31 0 0 1 0 4.854l2.853 2.852A8.22 8.22 0 0 0 20.25 12a8.22 8.22 0 0 0-1.91-5.28M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12m11.695-1.944C12.889 9 11.11 9 10.055 10.056C9 11.11 9 12.889 10.056 13.945s2.834 1.055 3.89 0c1.055-1.056 1.055-2.834 0-3.89"/>`), g.Group(children),
	)
}

func Swatches(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M6.5 21H18c1.657 0 3-1.398 3-3.123c0-1.308.13-2.63-1.297-3.253M7.98 20.664l10.287-4.67a3.04 3.04 0 0 0 1.436-1.37m-7.613-3.787l3.013-1.718c1.553-.886 3.5-.186 4.198 1.509l.525 1.273a3.23 3.23 0 0 1-.123 2.723m-9.821 3.718c-.5 1.912-2.42 3.047-4.287 2.535c-1.867-.513-2.975-2.478-2.475-4.39L6.18 5.27c.452-1.661 2.114-2.624 3.71-2.15l1.17.348c1.615.48 2.536 2.246 2.045 3.918zM6.5 17l-.242.854"/>`), g.Group(children),
	)
}

func SwatchesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M5.456 5.073c.557-2.042 2.625-3.272 4.647-2.67l1.171.347c2.034.605 3.152 2.804 2.55 4.848l-.49 1.666l1.397-.796c1.964-1.12 4.402-.218 5.264 1.874l.524 1.274c.366.887.386 1.838.123 2.69c.53.403.825.929.971 1.502c.15.587.144 1.248.139 1.795l-.002.274c0 2.11-1.65 3.873-3.75 3.873H6.56a4.2 4.2 0 0 1-1.163-.15c-2.277-.625-3.603-3.008-3.002-5.304l.002-.007zm5.25 15.177H18c1.215 0 2.25-1.034 2.25-2.373l.001-.33c.004-.556.006-.986-.091-1.368a1.2 1.2 0 0 0-.252-.516c-.353.422-.8.774-1.33 1.014zm-.135-1.586l7.386-3.353a2.3 2.3 0 0 0 1.082-1.034a2.48 2.48 0 0 0 .093-2.09l-.524-1.274c-.534-1.296-1.992-1.794-3.134-1.142l-2.75 1.568l-2.12 7.204zm-3.866-2.386a.75.75 0 0 0-.926.517l-.243.854a.75.75 0 0 0 1.443.41l.243-.854a.75.75 0 0 0-.517-.926"/>`), g.Group(children),
	)
}

func Table(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9 3.5v17m11.5-11h-17M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/>`), g.Group(children),
	)
}

func TableSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M21.693 17.288c.057-.697.057-1.563.057-2.655V10.25h-12v11.5h4.883c1.092 0 1.958 0 2.655-.057c.714-.058 1.317-.18 1.869-.46a4.75 4.75 0 0 0 2.075-2.076c.281-.552.403-1.155.461-1.869M17.288 2.307c-.697-.057-1.563-.057-2.655-.057H9.75v6.5h12c-.002-.808-.011-1.477-.057-2.038c-.058-.714-.18-1.317-.46-1.868a4.75 4.75 0 0 0-2.076-2.076c-.552-.281-1.155-.403-1.869-.461M2.768 4.844c-.281.55-.403 1.154-.461 1.868c-.046.56-.055 1.23-.057 2.038h6V2.253c-.59.005-1.097.018-1.538.054c-.714.058-1.317.18-1.868.46a4.75 4.75 0 0 0-2.076 2.077m2.076 16.388c.55.281 1.154.403 1.868.461c.44.036.948.05 1.538.054V10.25h-6v4.383c0 1.092 0 1.958.057 2.655c.058.714.18 1.317.46 1.869a4.75 4.75 0 0 0 2.077 2.075"/>`), g.Group(children),
	)
}

func Tablet(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M17.714 3H6.286C5.023 3 4 3.806 4 4.8v14.4c0 .994 1.023 1.8 2.286 1.8h11.428C18.977 21 20 20.194 20 19.2V4.8c0-.994-1.023-1.8-2.286-1.8M10.5 6h3"/>`), g.Group(children),
	)
}

func TabletSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M3.25 4.8c0-1.565 1.536-2.55 3.036-2.55h11.428c1.5 0 3.036.985 3.036 2.55v14.4c0 1.565-1.536 2.55-3.036 2.55H6.286c-1.5 0-3.036-.985-3.036-2.55zm7.25.45a.75.75 0 0 0 0 1.5h3a.75.75 0 0 0 0-1.5z"/>`), g.Group(children),
	)
}

func Tag(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M4.472 5.5H14.77a2 2 0 0 1 1.396.568l5.35 5.216a1 1 0 0 1 0 1.432l-5.35 5.216a2 2 0 0 1-1.396.568H4.472c-.95 0-2.222-.541-2.222-1.625v-9.75C2.25 6.041 3.523 5.5 4.472 5.5"/>`), g.Group(children),
	)
}

func TagPlus(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M4.472 5.5H14.77a2 2 0 0 1 1.396.568l5.35 5.216a1 1 0 0 1 0 1.432l-5.35 5.216a2 2 0 0 1-1.396.568H4.472c-.95 0-2.222-.541-2.222-1.625v-9.75C2.25 6.041 3.523 5.5 4.472 5.5M6 12h5M8.5 9.5v5"/>`), g.Group(children),
	)
}

func TagPlusSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.61 5.269a3.65 3.65 0 0 1 1.862-.519H14.77c.717 0 1.406.28 1.92.781l5.35 5.216a1.75 1.75 0 0 1 0 2.506l-5.35 5.216a2.75 2.75 0 0 1-1.92.781H4.472a3.65 3.65 0 0 1-1.862-.519c-.58-.359-1.11-.974-1.11-1.856v-9.75c0-.882.53-1.498 1.11-1.856M9.25 9.5a.75.75 0 0 0-1.5 0v1.75H6a.75.75 0 0 0 0 1.5h1.75v1.75a.75.75 0 0 0 1.5 0v-1.75H11a.75.75 0 0 0 0-1.5H9.25z"/>`), g.Group(children),
	)
}

func TagSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M4.472 4.75c-.597 0-1.293.166-1.862.519c-.58.358-1.11.974-1.11 1.856v9.75c0 .882.53 1.497 1.11 1.856c.57.353 1.265.519 1.862.519H14.77a2.75 2.75 0 0 0 1.92-.781l5.35-5.216a1.75 1.75 0 0 0 0-2.506l-5.35-5.216a2.75 2.75 0 0 0-1.92-.781z"/>`), g.Group(children),
	)
}

func TallyFive(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M4 4v16M9.333 4v16m5.334-16v16M20 4v16m1-17L3 21"/>`), g.Group(children),
	)
}

func TallyFiveSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M21.53 2.47a.75.75 0 0 1 0 1.06l-.78.78V20a.75.75 0 0 1-1.5 0V5.81l-3.833 3.834V20a.75.75 0 0 1-1.5 0v-8.856l-3.834 3.833V20a.75.75 0 1 1-1.5 0v-3.523L3.53 21.53a.75.75 0 0 1-1.06-1.06l.78-.78V4a.75.75 0 0 1 1.5 0v14.19l3.833-3.834V4a.75.75 0 0 1 1.5 0v8.856l3.834-3.833V4a.75.75 0 0 1 1.5 0v3.523L20.47 2.47a.75.75 0 0 1 1.06 0"/>`), g.Group(children),
	)
}

func TallyFour(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M4 4v16M9.333 4v16m5.334-16v16M20 4v16"/>`), g.Group(children),
	)
}

func TallyFourSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M4 3.25a.75.75 0 0 1 .75.75v16a.75.75 0 0 1-1.5 0V4A.75.75 0 0 1 4 3.25m5.333 0a.75.75 0 0 1 .75.75v16a.75.75 0 1 1-1.5 0V4a.75.75 0 0 1 .75-.75m5.334 0a.75.75 0 0 1 .75.75v16a.75.75 0 0 1-1.5 0V4a.75.75 0 0 1 .75-.75m5.333 0a.75.75 0 0 1 .75.75v16a.75.75 0 0 1-1.5 0V4a.75.75 0 0 1 .75-.75"/>`), g.Group(children),
	)
}

func TallyOne(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M4 4v16"/>`), g.Group(children),
	)
}

func TallyOneSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M4 3.25a.75.75 0 0 1 .75.75v16a.75.75 0 0 1-1.5 0V4A.75.75 0 0 1 4 3.25"/>`), g.Group(children),
	)
}

func TallyThree(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M4 4v16M9.333 4v16m5.334-16v16"/>`), g.Group(children),
	)
}

func TallyThreeSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M4 3.25a.75.75 0 0 1 .75.75v16a.75.75 0 0 1-1.5 0V4A.75.75 0 0 1 4 3.25m5.333 0a.75.75 0 0 1 .75.75v16a.75.75 0 1 1-1.5 0V4a.75.75 0 0 1 .75-.75m5.334 0a.75.75 0 0 1 .75.75v16a.75.75 0 0 1-1.5 0V4a.75.75 0 0 1 .75-.75"/>`), g.Group(children),
	)
}

func TallyTwo(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M4 4v16M9.333 4v16"/>`), g.Group(children),
	)
}

func TallyTwoSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M4 3.25a.75.75 0 0 1 .75.75v16a.75.75 0 0 1-1.5 0V4A.75.75 0 0 1 4 3.25m5.333 0a.75.75 0 0 1 .75.75v16a.75.75 0 1 1-1.5 0V4a.75.75 0 0 1 .75-.75"/>`), g.Group(children),
	)
}

func Target(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M12 17.25a5.25 5.25 0 1 0 0-10.5a5.25 5.25 0 0 0 0 10.5"/><path d="M12 13.5a1.5 1.5 0 1 0 0-3a1.5 1.5 0 0 0 0 3"/><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/></g>`), g.Group(children),
	)
}

func TargetSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12 3.75a8.25 8.25 0 1 0 0 16.5a8.25 8.25 0 0 0 0-16.5M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12M12 7.5a4.5 4.5 0 1 0 0 9a4.5 4.5 0 0 0 0-9M6 12a6 6 0 1 1 12 0a6 6 0 0 1-12 0m3.75 0a2.25 2.25 0 1 1 4.5 0a2.25 2.25 0 0 1-4.5 0"/>`), g.Group(children),
	)
}

func Telephone(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M15.6 14.522c-2.395 2.52-8.504-3.534-6.1-6.064c1.468-1.545-.19-3.31-1.108-4.609c-1.723-2.435-5.504.927-5.39 3.066c.363 6.746 7.66 14.74 14.726 14.042c2.21-.218 4.75-4.21 2.215-5.669c-1.268-.73-3.009-2.17-4.343-.767"/>`), g.Group(children),
	)
}

func TelephoneCall(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M15.6 14.522c-2.395 2.52-8.504-3.534-6.1-6.064c1.468-1.545-.19-3.31-1.108-4.609c-1.723-2.435-5.504.927-5.39 3.066c.363 6.746 7.66 14.74 14.726 14.042c2.21-.218 4.75-4.21 2.215-5.669c-1.268-.73-3.009-2.17-4.343-.767M14 3a7 7 0 0 1 7 7m-7-3a3 3 0 0 1 3 3"/>`), g.Group(children),
	)
}

func TelephoneCallSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M13.25 3a.75.75 0 0 1 .75-.75A7.75 7.75 0 0 1 21.75 10a.75.75 0 0 1-1.5 0A6.25 6.25 0 0 0 14 3.75a.75.75 0 0 1-.75-.75m0 4a.75.75 0 0 1 .75-.75A3.75 3.75 0 0 1 17.75 10a.75.75 0 0 1-1.5 0A2.25 2.25 0 0 0 14 7.75a.75.75 0 0 1-.75-.75M9.004 3.416C8.432 2.606 7.64 2.241 6.8 2.25c-.797.008-1.573.349-2.221.803A6.2 6.2 0 0 0 2.92 4.79c-.41.649-.706 1.416-.666 2.165c.193 3.603 2.22 7.453 5.067 10.302c2.845 2.846 6.644 4.824 10.48 4.446c.752-.074 1.463-.457 2.044-.945a5.8 5.8 0 0 0 1.443-1.84c.34-.692.543-1.49.431-2.267c-.116-.81-.569-1.534-1.402-2.014a16 16 0 0 1-.512-.31c-.15-.093-.31-.194-.504-.31a7.5 7.5 0 0 0-1.249-.618c-.447-.163-.958-.27-1.49-.197c-.551.076-1.063.336-1.506.802c-.341.36-.843.472-1.549.268c-.718-.208-1.526-.724-2.228-1.422c-.702-.696-1.233-1.51-1.46-2.245c-.224-.728-.125-1.263.225-1.632c.473-.498.725-1.052.778-1.638c.052-.57-.09-1.106-.293-1.574c-.304-.699-.82-1.394-1.224-1.936a22 22 0 0 1-.3-.41"/>`), g.Group(children),
	)
}

func TelephoneForward(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M15.6 14.522c-2.395 2.52-8.504-3.534-6.1-6.064c1.468-1.545-.19-3.31-1.108-4.609c-1.723-2.435-5.504.927-5.39 3.066c.363 6.746 7.66 14.74 14.726 14.042c2.21-.218 4.75-4.21 2.215-5.669c-1.268-.73-3.009-2.17-4.343-.767M15 5.5h6.429M19 3l2.5 2.5L19 8"/>`), g.Group(children),
	)
}

func TelephoneForwardSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M18.47 2.47a.75.75 0 0 1 1.06 0l2.5 2.5a.75.75 0 0 1 0 1.06l-2.5 2.5a.75.75 0 1 1-1.06-1.06l1.22-1.22H15a.75.75 0 0 1 0-1.5h4.69l-1.22-1.22a.75.75 0 0 1 0-1.06m-9.466.946C8.432 2.606 7.64 2.241 6.8 2.25c-.797.008-1.573.349-2.221.803A6.2 6.2 0 0 0 2.92 4.79c-.41.649-.706 1.416-.666 2.165c.193 3.603 2.22 7.453 5.067 10.302c2.845 2.846 6.644 4.824 10.48 4.446c.752-.074 1.463-.457 2.044-.945a5.8 5.8 0 0 0 1.443-1.84c.34-.692.543-1.49.431-2.267c-.116-.81-.569-1.534-1.402-2.014a16 16 0 0 1-.512-.31c-.15-.093-.31-.194-.504-.31a7.5 7.5 0 0 0-1.249-.618c-.447-.163-.958-.27-1.49-.197c-.551.076-1.063.336-1.506.802c-.341.36-.843.472-1.549.268c-.718-.208-1.526-.724-2.228-1.422c-.702-.696-1.233-1.51-1.46-2.245c-.224-.728-.125-1.263.225-1.632c.473-.498.725-1.052.778-1.638c.052-.57-.09-1.106-.293-1.574c-.304-.699-.82-1.394-1.224-1.936a22 22 0 0 1-.3-.41"/>`), g.Group(children),
	)
}

func TelephoneIn(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M15.6 14.522c-2.395 2.52-8.504-3.534-6.1-6.064c1.468-1.545-.19-3.31-1.108-4.609c-1.723-2.435-5.504.927-5.39 3.066c.363 6.746 7.66 14.74 14.726 14.042c2.21-.218 4.75-4.21 2.215-5.669c-1.268-.73-3.009-2.17-4.343-.767M20.5 3L16 7.5m3.5 0H16V4"/>`), g.Group(children),
	)
}

func TelephoneInSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M21.03 2.47a.75.75 0 0 1 0 1.06l-3.22 3.22h1.69a.75.75 0 0 1 0 1.5H16a.75.75 0 0 1-.75-.75V4a.75.75 0 0 1 1.5 0v1.69l3.22-3.22a.75.75 0 0 1 1.06 0m-12.026.946C8.432 2.606 7.64 2.241 6.8 2.25c-.797.008-1.573.349-2.221.803A6.2 6.2 0 0 0 2.92 4.79c-.41.649-.706 1.416-.666 2.165c.193 3.603 2.22 7.453 5.067 10.302c2.845 2.846 6.644 4.824 10.48 4.446c.752-.074 1.463-.457 2.044-.945a5.8 5.8 0 0 0 1.443-1.84c.34-.692.543-1.49.431-2.267c-.116-.81-.569-1.534-1.402-2.014a16 16 0 0 1-.512-.31c-.15-.093-.31-.194-.504-.31a7.5 7.5 0 0 0-1.249-.618c-.447-.163-.958-.27-1.49-.197c-.551.076-1.063.336-1.506.802c-.341.36-.843.472-1.549.268c-.718-.208-1.526-.724-2.228-1.422c-.702-.696-1.233-1.51-1.46-2.245c-.224-.728-.125-1.263.225-1.632c.473-.498.725-1.052.778-1.638c.052-.57-.09-1.106-.293-1.574c-.304-.699-.82-1.394-1.224-1.936a22 22 0 0 1-.3-.41"/>`), g.Group(children),
	)
}

func TelephoneMissed(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M15.6 14.522c-2.395 2.52-8.504-3.534-6.1-6.064c1.468-1.545-.19-3.31-1.108-4.609c-1.723-2.435-5.504.927-5.39 3.066c.363 6.746 7.66 14.74 14.726 14.042c2.21-.218 4.75-4.21 2.215-5.669c-1.268-.73-3.009-2.17-4.343-.767M17 3l4 4m0-4l-4 4"/>`), g.Group(children),
	)
}

func TelephoneMissedSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M16.47 2.47a.75.75 0 0 1 1.06 0L19 3.94l1.47-1.47a.75.75 0 1 1 1.06 1.06L20.06 5l1.47 1.47a.75.75 0 0 1-1.06 1.06L19 6.06l-1.47 1.47a.75.75 0 1 1-1.06-1.06L17.94 5l-1.47-1.47a.75.75 0 0 1 0-1.06m-7.466.946C8.432 2.606 7.64 2.241 6.8 2.25c-.797.008-1.573.349-2.221.803A6.2 6.2 0 0 0 2.92 4.79c-.41.649-.706 1.416-.666 2.165c.193 3.603 2.22 7.453 5.067 10.302c2.845 2.846 6.644 4.824 10.48 4.446c.752-.074 1.463-.457 2.044-.945a5.8 5.8 0 0 0 1.443-1.84c.34-.692.543-1.49.431-2.267c-.116-.81-.569-1.534-1.402-2.014a16 16 0 0 1-.512-.31c-.15-.093-.31-.194-.504-.31a7.5 7.5 0 0 0-1.249-.618c-.447-.163-.958-.27-1.49-.197c-.551.076-1.063.336-1.506.802c-.341.36-.843.472-1.549.268c-.718-.208-1.526-.724-2.228-1.422c-.702-.696-1.233-1.51-1.46-2.245c-.224-.728-.125-1.263.225-1.632c.473-.498.725-1.052.778-1.638c.052-.57-.09-1.106-.293-1.574c-.304-.699-.82-1.394-1.224-1.936a22 22 0 0 1-.3-.41"/>`), g.Group(children),
	)
}

func TelephoneOut(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M15.6 14.522c-2.395 2.52-8.504-3.534-6.1-6.064c1.468-1.545-.19-3.31-1.108-4.609c-1.723-2.435-5.504.927-5.39 3.066c.363 6.746 7.66 14.74 14.726 14.042c2.21-.218 4.75-4.21 2.215-5.669c-1.268-.73-3.009-2.17-4.343-.767M15 7.5L19.5 3M16 3h3.5v3.5"/>`), g.Group(children),
	)
}

func TelephoneOutSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M15.25 3a.75.75 0 0 1 .75-.75h3.5a.75.75 0 0 1 .75.75v3.5a.75.75 0 0 1-1.5 0V4.81l-3.22 3.22a.75.75 0 1 1-1.06-1.06l3.22-3.22H16a.75.75 0 0 1-.75-.75m-6.246.416C8.432 2.606 7.64 2.241 6.8 2.25c-.797.008-1.573.349-2.221.803A6.2 6.2 0 0 0 2.92 4.79c-.41.649-.706 1.416-.666 2.165c.193 3.603 2.22 7.453 5.067 10.302c2.845 2.846 6.644 4.824 10.48 4.446c.752-.074 1.463-.457 2.044-.945a5.8 5.8 0 0 0 1.443-1.84c.34-.692.543-1.49.431-2.267c-.116-.81-.569-1.534-1.402-2.014a16 16 0 0 1-.512-.31c-.15-.093-.31-.194-.504-.31a7.5 7.5 0 0 0-1.249-.618c-.447-.163-.958-.27-1.49-.197c-.551.076-1.063.336-1.506.802c-.341.36-.843.472-1.549.268c-.718-.208-1.526-.724-2.228-1.422c-.702-.696-1.233-1.51-1.46-2.245c-.224-.728-.125-1.263.225-1.632c.473-.498.725-1.052.778-1.638c.052-.57-.09-1.106-.293-1.574c-.304-.699-.82-1.394-1.224-1.936c-.111-.15-.214-.287-.3-.41"/>`), g.Group(children),
	)
}

func TelephoneSlash(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M10.684 13.316L21 3M10.684 13.316c1.53 1.556 3.701 2.484 4.916 1.205c1.334-1.404 3.075.038 4.342.767c2.536 1.46-.004 5.451-2.214 5.67c-3.657.36-7.376-1.606-10.163-4.523m3.119-3.119l-3.119 3.119M3 21l4.565-4.565M5.5 13.845c-1.447-2.193-2.374-4.634-2.497-6.93c-.115-2.139 3.666-5.501 5.389-3.066c.918 1.298 2.576 3.064 1.108 4.609c-.493.519-.628 1.186-.51 1.897"/>`), g.Group(children),
	)
}

func TelephoneSlashSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.004 3.416C8.432 2.606 7.64 2.241 6.8 2.25c-.797.008-1.573.349-2.221.803A6.2 6.2 0 0 0 2.92 4.79c-.41.649-.706 1.416-.666 2.165c.175 3.257 1.848 6.718 4.273 9.457L2.47 20.47a.75.75 0 1 0 1.06 1.06l4.034-4.033c2.816 2.717 6.51 4.575 10.237 4.207c.752-.074 1.463-.457 2.044-.945a5.8 5.8 0 0 0 1.443-1.84c.34-.692.543-1.49.431-2.267c-.116-.81-.569-1.534-1.402-2.014a16 16 0 0 1-.512-.31c-.15-.093-.31-.194-.504-.31a7.5 7.5 0 0 0-1.249-.618c-.447-.163-.958-.27-1.49-.197c-.551.076-1.063.336-1.506.802c-.341.36-.843.472-1.549.268c-.556-.161-1.166-.508-1.74-.98L21.53 3.53a.75.75 0 0 0-1.06-1.06l-9.754 9.753c-.42-.532-.736-1.094-.897-1.617c-.224-.728-.125-1.263.225-1.632c.473-.498.725-1.052.778-1.638c.052-.57-.09-1.106-.293-1.574c-.304-.699-.82-1.394-1.224-1.936a22 22 0 0 1-.3-.41"/>`), g.Group(children),
	)
}

func TelephoneSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.004 3.416C8.432 2.606 7.64 2.241 6.8 2.25c-.797.008-1.573.349-2.221.803A6.2 6.2 0 0 0 2.92 4.79c-.41.649-.706 1.416-.666 2.165c.193 3.603 2.22 7.453 5.067 10.302c2.845 2.846 6.644 4.824 10.48 4.446c.752-.074 1.463-.457 2.044-.945a5.8 5.8 0 0 0 1.443-1.84c.34-.692.543-1.49.431-2.267c-.116-.81-.569-1.534-1.402-2.014a16 16 0 0 1-.512-.31c-.15-.093-.31-.194-.504-.31a7.5 7.5 0 0 0-1.249-.618c-.447-.163-.958-.27-1.49-.197c-.551.076-1.063.336-1.506.802c-.341.36-.843.472-1.549.268c-.718-.208-1.526-.724-2.228-1.422c-.702-.696-1.233-1.51-1.46-2.245c-.224-.728-.125-1.263.225-1.632c.473-.498.725-1.052.778-1.638c.052-.57-.09-1.106-.293-1.574c-.304-.699-.82-1.394-1.224-1.936a22 22 0 0 1-.3-.41"/>`), g.Group(children),
	)
}

func Terminal(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="m8 9l3 3l-3 3m5 0h3"/><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/></g>`), g.Group(children),
	)
}

func TerminalSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057M8.53 8.47a.75.75 0 0 0-1.06 1.06L9.94 12l-2.47 2.47a.75.75 0 1 0 1.06 1.06l3-3a.75.75 0 0 0 0-1.06zM13 14.25a.75.75 0 0 0 0 1.5h3a.75.75 0 0 0 0-1.5z"/>`), g.Group(children),
	)
}

func TextAlignCenter(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M4.5 6h15M7 10h10M4.5 14h15M7 18h10"/>`), g.Group(children),
	)
}

func TextAlignCenterSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M3.75 6a.75.75 0 0 1 .75-.75h15a.75.75 0 0 1 0 1.5h-15A.75.75 0 0 1 3.75 6m2.5 4A.75.75 0 0 1 7 9.25h10a.75.75 0 0 1 0 1.5H7a.75.75 0 0 1-.75-.75m-2.5 4a.75.75 0 0 1 .75-.75h15a.75.75 0 0 1 0 1.5h-15a.75.75 0 0 1-.75-.75m2.5 4a.75.75 0 0 1 .75-.75h10a.75.75 0 0 1 0 1.5H7a.75.75 0 0 1-.75-.75"/>`), g.Group(children),
	)
}

func TextAlignLeft(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M4.5 6h15m-15 4h10m-10 4h15m-15 4h10"/>`), g.Group(children),
	)
}

func TextAlignLeftSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M3.75 6a.75.75 0 0 1 .75-.75h15a.75.75 0 0 1 0 1.5h-15A.75.75 0 0 1 3.75 6m0 4a.75.75 0 0 1 .75-.75h10a.75.75 0 0 1 0 1.5h-10a.75.75 0 0 1-.75-.75m0 4a.75.75 0 0 1 .75-.75h15a.75.75 0 0 1 0 1.5h-15a.75.75 0 0 1-.75-.75m0 4a.75.75 0 0 1 .75-.75h10a.75.75 0 0 1 0 1.5h-10a.75.75 0 0 1-.75-.75"/>`), g.Group(children),
	)
}

func TextAlignRight(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M4.5 6h15m-10 4h10m-15 4h15m-10 4h10"/>`), g.Group(children),
	)
}

func TextAlignRightSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M3.75 6a.75.75 0 0 1 .75-.75h15a.75.75 0 0 1 0 1.5h-15A.75.75 0 0 1 3.75 6m5 4a.75.75 0 0 1 .75-.75h10a.75.75 0 0 1 0 1.5h-10a.75.75 0 0 1-.75-.75m-5 4a.75.75 0 0 1 .75-.75h15a.75.75 0 0 1 0 1.5h-15a.75.75 0 0 1-.75-.75m5 4a.75.75 0 0 1 .75-.75h10a.75.75 0 0 1 0 1.5h-10a.75.75 0 0 1-.75-.75"/>`), g.Group(children),
	)
}

func TextJustify(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M4.5 6h15m-15 4h15m-15 4h15m-15 4h15"/>`), g.Group(children),
	)
}

func TextJustifySolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M3.75 6a.75.75 0 0 1 .75-.75h15a.75.75 0 0 1 0 1.5h-15A.75.75 0 0 1 3.75 6m0 4a.75.75 0 0 1 .75-.75h15a.75.75 0 0 1 0 1.5h-15a.75.75 0 0 1-.75-.75m0 4a.75.75 0 0 1 .75-.75h15a.75.75 0 0 1 0 1.5h-15a.75.75 0 0 1-.75-.75m0 4a.75.75 0 0 1 .75-.75h15a.75.75 0 0 1 0 1.5h-15a.75.75 0 0 1-.75-.75"/>`), g.Group(children),
	)
}

func Thermometer(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M14.155 13.86a.3.3 0 0 1-.114-.116a.3.3 0 0 1-.041-.155v-8.66c0-.512-.21-1.002-.586-1.364A2.04 2.04 0 0 0 12 3c-.53 0-1.04.203-1.414.565A1.9 1.9 0 0 0 10 4.929v8.66a.3.3 0 0 1-.041.155a.3.3 0 0 1-.114.116a3.97 3.97 0 0 0-1.396 1.493a3.8 3.8 0 0 0-.445 1.965a3.8 3.8 0 0 0 1.266 2.644a4.1 4.1 0 0 0 2.82 1.037a4.07 4.07 0 0 0 2.77-1.16A3.8 3.8 0 0 0 16 17.145c0-.652-.168-1.294-.49-1.867a4 4 0 0 0-1.355-1.417"/>`), g.Group(children),
	)
}

func ThermometerSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12 2.25c-.72 0-1.417.276-1.935.775A2.65 2.65 0 0 0 9.25 4.93v8.426a4.7 4.7 0 0 0-1.463 1.646a4.55 4.55 0 0 0-.532 2.352a4.55 4.55 0 0 0 1.513 3.166a4.83 4.83 0 0 0 3.339 1.23a4.82 4.82 0 0 0 3.279-1.375a4.54 4.54 0 0 0 1.364-3.23a4.56 4.56 0 0 0-.587-2.235a4.7 4.7 0 0 0-1.413-1.554V4.93c0-.72-.297-1.404-.815-1.904A2.8 2.8 0 0 0 12 2.25"/>`), g.Group(children),
	)
}

func Three(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M8.75 9.493c0-3.324 6.25-3.324 6.25 0c0 0 0 2.507-3.125 2.507C15 12 15 14.507 15 14.507c0 3.324-6.25 3.324-6.25 0"/>`), g.Group(children),
	)
}

func ThreeCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/><path d="M9.5 9.994c0-2.659 5-2.659 5 0c0 0 0 2.006-2.5 2.006c2.5 0 2.5 2.006 2.5 2.006c0 2.659-5 2.659-5 0"/></g>`), g.Group(children),
	)
}

func ThreeCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12m13-2.006c0-.935-.453-1.65-1.097-2.107c-.622-.441-1.408-.637-2.153-.637s-1.531.196-2.153.637c-.643.456-1.097 1.172-1.097 2.107a.75.75 0 1 0 1.5 0c0-.394.172-.675.465-.884c.316-.224.78-.36 1.285-.36s.969.136 1.285.36c.292.207.463.486.465.877l-.002.027c-.003.03-.008.08-.021.141a1.4 1.4 0 0 1-.176.445c-.166.267-.542.65-1.551.65a.75.75 0 0 0 0 1.5c1.01 0 1.385.383 1.551.65a1.4 1.4 0 0 1 .199.613c-.002.39-.173.67-.465.877c-.316.224-.78.36-1.285.36s-.969-.136-1.285-.36c-.293-.209-.465-.49-.465-.884a.75.75 0 1 0-1.5 0c0 .935.454 1.65 1.097 2.107c.622.441 1.408.637 2.153.637s1.531-.196 2.153-.637c.643-.456 1.097-1.172 1.097-2.107v-.002a2.9 2.9 0 0 0-.426-1.398a2.7 2.7 0 0 0-.517-.606c.211-.184.382-.39.517-.606a2.9 2.9 0 0 0 .426-1.398z"/>`), g.Group(children),
	)
}

func ThreeDiamond(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9.5 9.994c0-2.659 5-2.659 5 0c0 0 0 2.006-2.5 2.006c2.5 0 2.5 2.006 2.5 2.006c0 2.659-5 2.659-5 0"/><path d="M2.707 10.295a2.41 2.41 0 0 0 0 3.41l7.588 7.588a2.41 2.41 0 0 0 3.41 0l7.588-7.588a2.41 2.41 0 0 0 0-3.41l-7.588-7.588a2.41 2.41 0 0 0-3.41 0z"/></g>`), g.Group(children),
	)
}

func ThreeDiamondSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.79 1.49a3.16 3.16 0 0 1 3.445.687l7.588 7.588a3.16 3.16 0 0 1 0 4.47l-7.588 7.588a3.16 3.16 0 0 1-4.47 0l-7.588-7.588a3.16 3.16 0 0 1 0-4.47l7.588-7.589a3.2 3.2 0 0 1 1.025-.685m4.46 8.504c0-.935-.453-1.65-1.097-2.107c-.622-.441-1.408-.637-2.153-.637s-1.531.196-2.153.637C9.204 8.344 8.75 9.06 8.75 9.995a.75.75 0 1 0 1.5 0c0-.394.172-.675.465-.884c.316-.224.78-.36 1.285-.36s.969.136 1.285.36c.292.207.463.486.465.877l-.002.027c-.003.03-.008.08-.021.141a1.4 1.4 0 0 1-.176.445c-.166.267-.542.65-1.551.65a.75.75 0 0 0 0 1.5c1.01 0 1.385.383 1.551.65a1.4 1.4 0 0 1 .199.613c-.002.39-.173.67-.465.877c-.316.224-.78.36-1.285.36s-.969-.136-1.285-.36c-.293-.209-.465-.49-.465-.884a.75.75 0 1 0-1.5 0c0 .935.454 1.65 1.097 2.107c.622.441 1.408.637 2.153.637s1.531-.196 2.153-.637c.643-.456 1.097-1.172 1.097-2.107v-.002a2.9 2.9 0 0 0-.426-1.398a2.7 2.7 0 0 0-.517-.606c.211-.184.382-.39.517-.606a2.9 2.9 0 0 0 .426-1.398z"/>`), g.Group(children),
	)
}

func ThreeHexagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9.5 9.994c0-2.659 5-2.659 5 0c0 0 0 2.006-2.5 2.006c2.5 0 2.5 2.006 2.5 2.006c0 2.659-5 2.659-5 0"/><path d="M20.5 15.8V8.2a1.91 1.91 0 0 0-.944-1.645l-6.612-3.8a1.88 1.88 0 0 0-1.888 0l-6.612 3.8A1.9 1.9 0 0 0 3.5 8.2v7.602a1.91 1.91 0 0 0 .944 1.644l6.612 3.8a1.88 1.88 0 0 0 1.888 0l6.612-3.8A1.9 1.9 0 0 0 20.5 15.8"/></g>`), g.Group(children),
	)
}

func ThreeHexagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.68 2.105a2.63 2.63 0 0 1 2.64 0l.001.001l6.611 3.8A2.65 2.65 0 0 1 21.25 8.2v7.603a2.66 2.66 0 0 1-1.318 2.291l-.003.002l-6.608 3.799h-.002a2.63 2.63 0 0 1-2.639 0h-.001l-6.608-3.8h-.003A2.64 2.64 0 0 1 2.75 15.8V8.198a2.66 2.66 0 0 1 1.318-2.291l.003-.002zm4.57 7.89c0-.936-.453-1.652-1.097-2.108c-.622-.441-1.408-.637-2.153-.637s-1.531.196-2.153.637c-.643.456-1.097 1.172-1.097 2.107a.75.75 0 1 0 1.5 0c0-.394.172-.675.465-.884c.316-.224.78-.36 1.285-.36s.969.136 1.285.36c.292.207.463.486.465.877l-.002.027c-.003.03-.008.08-.021.141a1.4 1.4 0 0 1-.176.445c-.166.267-.542.65-1.551.65a.75.75 0 0 0 0 1.5c1.01 0 1.385.383 1.551.65a1.4 1.4 0 0 1 .199.613c-.002.39-.173.67-.465.877c-.316.224-.78.36-1.285.36s-.969-.136-1.285-.36c-.293-.209-.465-.49-.465-.884a.75.75 0 1 0-1.5 0c0 .935.454 1.65 1.097 2.107c.622.441 1.408.637 2.153.637s1.531-.196 2.153-.637c.643-.456 1.097-1.172 1.097-2.107v-.002a2.9 2.9 0 0 0-.426-1.398a2.7 2.7 0 0 0-.517-.606c.211-.184.382-.39.517-.606a2.9 2.9 0 0 0 .426-1.398z"/>`), g.Group(children),
	)
}

func ThreeOctagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9.5 9.994c0-2.659 5-2.659 5 0c0 0 0 2.006-2.5 2.006c2.5 0 2.5 2.006 2.5 2.006c0 2.659-5 2.659-5 0"/><path d="M7.805 3.469C8.16 3.115 8.451 3 8.937 3h6.126c.486 0 .778.115 1.132.469l4.336 4.336c.354.354.469.646.469 1.132v6.126c0 .5-.125.788-.469 1.132l-4.336 4.336c-.354.354-.646.469-1.132.469H8.937c-.5 0-.788-.125-1.132-.469L3.47 16.195c-.355-.355-.47-.646-.47-1.132V8.937c0-.5.125-.788.469-1.132z"/></g>`), g.Group(children),
	)
}

func ThreeOctagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.037 2.408a2.3 2.3 0 0 1 .9-.158h6.126c.302 0 .602.036.9.158s.54.31.762.53l4.337 4.337c.22.221.408.463.53.762c.123.298.158.598.158.9v6.126c0 .313-.039.616-.163.914a2.3 2.3 0 0 1-.525.748l-4.337 4.337a2.3 2.3 0 0 1-.762.53a2.3 2.3 0 0 1-.9.158H8.937c-.313 0-.616-.039-.914-.163a2.3 2.3 0 0 1-.748-.525l-4.337-4.337a2.3 2.3 0 0 1-.53-.762a2.3 2.3 0 0 1-.158-.9V8.937c0-.313.039-.616.163-.914a2.3 2.3 0 0 1 .525-.748l4.337-4.337c.221-.22.463-.408.762-.53m7.213 7.586c0-.935-.453-1.65-1.097-2.107c-.622-.441-1.408-.637-2.153-.637s-1.531.196-2.153.637c-.643.456-1.097 1.172-1.097 2.107a.75.75 0 1 0 1.5 0c0-.394.172-.675.465-.884c.316-.224.78-.36 1.285-.36s.969.136 1.285.36c.292.207.463.486.465.877l-.002.027c-.003.03-.008.08-.021.141a1.4 1.4 0 0 1-.176.445c-.166.267-.542.65-1.551.65a.75.75 0 0 0 0 1.5c1.01 0 1.385.383 1.551.65a1.4 1.4 0 0 1 .199.613c-.002.39-.173.67-.465.877c-.316.224-.78.36-1.285.36s-.969-.136-1.285-.36c-.293-.209-.465-.49-.465-.884a.75.75 0 1 0-1.5 0c0 .935.454 1.65 1.097 2.107c.622.441 1.408.637 2.153.637s1.531-.196 2.153-.637c.643-.456 1.097-1.172 1.097-2.107v-.002a2.9 2.9 0 0 0-.426-1.398a2.7 2.7 0 0 0-.517-.606c.211-.184.382-.39.517-.606a2.9 2.9 0 0 0 .426-1.398z"/>`), g.Group(children),
	)
}

func ThreeSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M14.457 7.011c.761.54 1.293 1.38 1.293 2.482v.022a2 2 0 0 1-.01.152a3.4 3.4 0 0 1-.495 1.476c-.193.31-.45.606-.785.857c.335.25.592.546.786.857a3.4 3.4 0 0 1 .504 1.628v.021c0 1.101-.532 1.943-1.293 2.483c-.739.523-1.68.761-2.582.761s-1.844-.238-2.582-.761C8.532 16.449 8 15.609 8 14.507a.75.75 0 0 1 1.5 0c0 .56.25.967.66 1.258c.434.307 1.054.485 1.715.485s1.281-.178 1.715-.485c.409-.29.658-.694.66-1.252v-.003a2 2 0 0 0-.033-.242a1.9 1.9 0 0 0-.244-.618c-.245-.392-.776-.9-2.098-.9a.75.75 0 0 1 0-1.5c1.322 0 1.854-.508 2.098-.9a1.9 1.9 0 0 0 .277-.86v-.003c-.002-.558-.251-.962-.66-1.252c-.434-.307-1.054-.485-1.715-.485s-1.281.178-1.715.485c-.41.291-.66.697-.66 1.258a.75.75 0 1 1-1.5 0c0-1.101.532-1.942 1.293-2.482c.739-.523 1.68-.761 2.582-.761s1.844.238 2.582.761"/>`), g.Group(children),
	)
}

func ThreeSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9.5 9.994c0-2.659 5-2.659 5 0c0 0 0 2.006-2.5 2.006c2.5 0 2.5 2.006 2.5 2.006c0 2.659-5 2.659-5 0"/><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/></g>`), g.Group(children),
	)
}

func ThreeSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057m5.883 7.744c0-.935-.453-1.65-1.097-2.107c-.622-.441-1.408-.637-2.153-.637s-1.531.196-2.153.637c-.643.456-1.097 1.172-1.097 2.107a.75.75 0 1 0 1.5 0c0-.394.172-.675.465-.884c.316-.224.78-.36 1.285-.36s.969.136 1.285.36c.292.207.463.486.465.877l-.002.027c-.003.03-.008.08-.021.141a1.4 1.4 0 0 1-.176.445c-.166.267-.542.65-1.551.65a.75.75 0 0 0 0 1.5c1.01 0 1.385.383 1.551.65a1.4 1.4 0 0 1 .199.613c-.002.39-.173.67-.465.877c-.316.224-.78.36-1.285.36s-.969-.136-1.285-.36c-.293-.209-.465-.49-.465-.884a.75.75 0 1 0-1.5 0c0 .935.454 1.65 1.097 2.107c.622.441 1.408.637 2.153.637s1.531-.196 2.153-.637c.643-.456 1.097-1.172 1.097-2.107v-.002a2.9 2.9 0 0 0-.426-1.398a2.7 2.7 0 0 0-.517-.606c.211-.184.382-.39.517-.606a2.9 2.9 0 0 0 .426-1.398z"/>`), g.Group(children),
	)
}

func ThreeWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9.5 9.994c0-2.659 5-2.659 5 0c0 0 0 2.006-2.5 2.006c2.5 0 2.5 2.006 2.5 2.006c0 2.659-5 2.659-5 0"/><path d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83"/></g>`), g.Group(children),
	)
}

func ThreeWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.565 2.075a3.33 3.33 0 0 1 2.87 0c.394.189.755.497 1.26.928l.079.066c.48.41.939.604 1.58.655l.102.008c.662.053 1.135.09 1.547.236a3.33 3.33 0 0 1 2.03 2.029c.145.412.182.885.235 1.547l.008.102c.051.641.246 1.1.655 1.58l.066.078c.431.506.74.867.928 1.261a3.33 3.33 0 0 1 0 2.87c-.189.394-.497.755-.928 1.26l-.066.079c-.418.49-.605.951-.655 1.58l-.008.102c-.053.662-.09 1.135-.236 1.547a3.33 3.33 0 0 1-2.029 2.03c-.412.145-.885.182-1.547.235l-.102.008c-.641.051-1.1.246-1.58.655l-.079.066c-.505.431-.866.74-1.26.928a3.33 3.33 0 0 1-2.87 0c-.394-.189-.755-.497-1.26-.928l-.079-.066a2.56 2.56 0 0 0-1.58-.655l-.102-.008c-.662-.053-1.135-.09-1.547-.236a3.33 3.33 0 0 1-2.03-2.029c-.145-.412-.182-.885-.235-1.547l-.008-.102a2.56 2.56 0 0 0-.655-1.58l-.066-.079c-.431-.505-.74-.866-.928-1.26a3.33 3.33 0 0 1 0-2.87c.189-.394.497-.755.928-1.26l.066-.079a2.56 2.56 0 0 0 .655-1.58l.008-.102c.053-.662.09-1.135.236-1.547a3.33 3.33 0 0 1 2.029-2.03c.412-.145.885-.182 1.547-.235l.102-.008a2.56 2.56 0 0 0 1.58-.655l.078-.066c.506-.431.867-.74 1.261-.928m4.685 7.92c0-.936-.453-1.652-1.097-2.108c-.622-.441-1.408-.637-2.153-.637s-1.531.196-2.153.637c-.643.456-1.097 1.172-1.097 2.107a.75.75 0 1 0 1.5 0c0-.394.172-.675.465-.884c.316-.224.78-.36 1.285-.36s.969.136 1.285.36c.292.207.463.486.465.877l-.002.027c-.003.03-.008.08-.021.141a1.4 1.4 0 0 1-.176.445c-.166.267-.542.65-1.551.65a.75.75 0 0 0 0 1.5c1.01 0 1.385.383 1.551.65a1.4 1.4 0 0 1 .199.613c-.002.39-.173.67-.465.877c-.316.224-.78.36-1.285.36s-.969-.136-1.285-.36c-.293-.209-.465-.49-.465-.884a.75.75 0 1 0-1.5 0c0 .935.454 1.65 1.097 2.107c.622.441 1.408.637 2.153.637s1.531-.196 2.153-.637c.643-.456 1.097-1.172 1.097-2.107v-.002a2.9 2.9 0 0 0-.426-1.398a2.7 2.7 0 0 0-.517-.606c.211-.184.382-.39.517-.606a2.9 2.9 0 0 0 .426-1.398z"/>`), g.Group(children),
	)
}

func Ticket(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M19 19a2 2 0 0 0 2-2v-3a2 2 0 1 1 0-4V7a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v3a2 2 0 1 1 0 4v3a2 2 0 0 0 2 2zm-7-7.25v.5M12 8v.5m0 7v.5"/>`), g.Group(children),
	)
}

func TicketSlash(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M12 8v.5m0 7v.5m-9 1v-3a2 2 0 1 0 0-4V7a2 2 0 0 1 2-2h10M5 19h14a2 2 0 0 0 2-2v-3a2 2 0 1 1 0-4V7a2 2 0 0 0-2-2M3 21L21 3"/>`), g.Group(children),
	)
}

func TicketSlashSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M5 4.25A2.75 2.75 0 0 0 2.25 7v3c0 .414.336.75.75.75a1.25 1.25 0 1 1 0 2.5a.75.75 0 0 0-.75.75v3c0 1 .534 1.876 1.332 2.357L2.47 20.47a.75.75 0 1 0 1.06 1.06l1.78-1.78H19A2.75 2.75 0 0 0 21.75 17v-3a.75.75 0 0 0-.75-.75a1.25 1.25 0 1 1 0-2.5a.75.75 0 0 0 .75-.75V7c0-1-.534-1.876-1.332-2.357L21.53 3.53a.75.75 0 0 0-1.06-1.06l-1.78 1.78zm7 3a.75.75 0 0 1 .75.75v.5a.75.75 0 0 1-1.5 0V8a.75.75 0 0 1 .75-.75m0 7.5a.75.75 0 0 1 .75.75v.5a.75.75 0 0 1-1.5 0v-.5a.75.75 0 0 1 .75-.75"/>`), g.Group(children),
	)
}

func TicketSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 7A2.75 2.75 0 0 1 5 4.25h14A2.75 2.75 0 0 1 21.75 7v3a.75.75 0 0 1-.75.75a1.25 1.25 0 1 0 0 2.5a.75.75 0 0 1 .75.75v3A2.75 2.75 0 0 1 19 19.75H5A2.75 2.75 0 0 1 2.25 17v-3a.75.75 0 0 1 .75-.75a1.25 1.25 0 1 0 0-2.5a.75.75 0 0 1-.75-.75zm10.5 1a.75.75 0 0 0-1.5 0v.5a.75.75 0 0 0 1.5 0zm0 3.75a.75.75 0 0 0-1.5 0v.5a.75.75 0 0 0 1.5 0zm0 3.75a.75.75 0 0 0-1.5 0v.5a.75.75 0 0 0 1.5 0z"/>`), g.Group(children),
	)
}

func ToggleLeft(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M21 12a5 5 0 0 0-5-5H8a5 5 0 0 0 0 10h8a5 5 0 0 0 5-5"/><path d="M5.5 12a2.5 2.5 0 1 0 5 0a2.5 2.5 0 0 0-5 0"/></g>`), g.Group(children),
	)
}

func ToggleLeftSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12A5.75 5.75 0 0 1 8 6.25h8a5.75 5.75 0 0 1 0 11.5H8A5.75 5.75 0 0 1 2.25 12m2.5 0a3.25 3.25 0 1 0 6.5 0a3.25 3.25 0 0 0-6.5 0"/>`), g.Group(children),
	)
}

func ToggleRight(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M3 12a5 5 0 0 1 5-5h8a5 5 0 0 1 0 10H8a5 5 0 0 1-5-5"/><path d="M18.5 12a2.5 2.5 0 1 1-5 0a2.5 2.5 0 0 1 5 0"/></g>`), g.Group(children),
	)
}

func ToggleRightSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8 6.25a5.75 5.75 0 1 0 0 11.5h8a5.75 5.75 0 0 0 0-11.5zM12.75 12a3.25 3.25 0 1 1 6.5 0a3.25 3.25 0 0 1-6.5 0"/>`), g.Group(children),
	)
}

func Tool(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M21 7.86c0-.43-.056-.849-.161-1.246c-.092-.349-.522-.432-.776-.177L18.34 8.16a1.767 1.767 0 1 1-2.5-2.5l1.723-1.722c.255-.255.172-.685-.177-.777a4.86 4.86 0 0 0-5.828 6.326c.071.2.031.424-.118.573L3.3 18.2c-.4.4-.4 1.049 0 1.448L4.352 20.7c.4.4 1.047.4 1.447 0l8.14-8.14c.15-.15.374-.19.573-.119A4.86 4.86 0 0 0 21 7.86"/>`), g.Group(children),
	)
}

func ToolSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M16.14 2.25a5.61 5.61 0 0 0-5.327 7.376L2.77 17.671a1.774 1.774 0 0 0 0 2.508l1.052 1.052a1.773 1.773 0 0 0 2.509 0l8.044-8.045a5.61 5.61 0 0 0 7.19-6.765c-.266-1.004-1.442-1.104-2.032-.514L17.81 7.629a1.017 1.017 0 1 1-1.438-1.438l1.722-1.723c.59-.59.49-1.766-.515-2.032a5.6 5.6 0 0 0-1.438-.186"/>`), g.Group(children),
	)
}

func Train(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M16 18H8m8 0l2 3m-2-3a3 3 0 0 0 3-3v-4M8 18l-2 3m2-3a3 3 0 0 1-3-3v-4m3 3v1m8-1v1M5 11h7m-7 0V6m7 5h7m-7 0V6m7 5V6m-7 0H5m7 0h7M5 6a3 3 0 0 1 3-3h8a3 3 0 0 1 3 3"/>`), g.Group(children),
	)
}

func TrainSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M4.25 6A3.75 3.75 0 0 1 8 2.25h8A3.75 3.75 0 0 1 19.75 6v9c0 1.63-1.04 3.017-2.493 3.534l1.367 2.05a.75.75 0 1 1-1.248.832l-1.777-2.666H8.4l-1.777 2.666a.75.75 0 1 1-1.248-.832l1.367-2.05A3.75 3.75 0 0 1 4.25 15zm14 .75h-5.5v3.5h5.5zm-12.5 3.5h5.5v-3.5h-5.5zm3 3.75a.75.75 0 0 0-1.5 0v1a.75.75 0 0 0 1.5 0zm7.25-.75a.75.75 0 0 0-.75.75v1a.75.75 0 0 0 1.5 0v-1a.75.75 0 0 0-.75-.75"/>`), g.Group(children),
	)
}

func Trash(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m18 9l-.84 8.398c-.127 1.273-.19 1.909-.48 2.39a2.5 2.5 0 0 1-1.075.973C15.098 21 14.46 21 13.18 21h-2.36c-1.279 0-1.918 0-2.425-.24a2.5 2.5 0 0 1-1.076-.973c-.288-.48-.352-1.116-.48-2.389L6 9m7.5 6.5v-5m-3 5v-5m-6-4h4.615m0 0l.386-2.672c.112-.486.516-.828.98-.828h3.038c.464 0 .867.342.98.828l.386 2.672m-5.77 0h5.77m0 0H19.5"/>`), g.Group(children),
	)
}

func TrashOne(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m18 7l-.886 10.342c-.111 1.29-.166 1.936-.453 2.424a2.5 2.5 0 0 1-1.078.99c-.511.244-1.16.244-2.455.244h-2.256c-1.296 0-1.944 0-2.455-.244a2.5 2.5 0 0 1-1.078-.99c-.287-.488-.342-1.134-.453-2.424L6 7m-1.5-.5h4.615m0 0l.386-2.672c.112-.486.516-.828.98-.828h3.038c.464 0 .867.342.98.828l.386 2.672m-5.77 0h5.77m0 0H19.5"/>`), g.Group(children),
	)
}

func TrashOneSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.238 3.974L9.98 5.75h4.037l-.256-1.776c-.048-.167-.17-.224-.243-.224H10.48c-.073 0-.195.057-.243.224m5.296 1.776H19.5a.75.75 0 0 1 0 1.5h-.769l-.873 10.185c-.053.62-.096 1.13-.165 1.542c-.07.429-.177.813-.386 1.169a3.25 3.25 0 0 1-1.401 1.287c-.372.177-.764.25-1.198.284c-.417.033-.928.033-1.55.033h-2.316c-.623 0-1.133 0-1.55-.033c-.434-.034-.826-.107-1.198-.284a3.25 3.25 0 0 1-1.401-1.287c-.21-.356-.315-.74-.386-1.169c-.069-.413-.112-.922-.165-1.542L5.269 7.25H4.5a.75.75 0 0 1 0-1.5h3.966l.293-2.029l.011-.061c.182-.79.86-1.41 1.71-1.41h3.04c.85 0 1.528.62 1.71 1.41l.011.061z"/>`), g.Group(children),
	)
}

func TrashSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="m15.241 3.721l.293 2.029H19.5a.75.75 0 0 1 0 1.5h-.769l-.873 10.185c-.053.62-.096 1.13-.165 1.542c-.07.429-.177.813-.386 1.169a3.25 3.25 0 0 1-1.401 1.287c-.372.177-.764.25-1.198.284c-.417.033-.928.033-1.55.033h-2.316c-.622 0-1.133 0-1.55-.033c-.434-.034-.826-.107-1.198-.284a3.25 3.25 0 0 1-1.401-1.287c-.21-.356-.315-.74-.386-1.169c-.069-.413-.112-.922-.165-1.542L5.269 7.25H4.5a.75.75 0 0 1 0-1.5h3.966l.293-2.029l.011-.061c.182-.79.86-1.41 1.71-1.41h3.04c.85 0 1.528.62 1.71 1.41zM9.981 5.75h4.037l-.256-1.776c-.048-.167-.17-.224-.243-.224h-3.038c-.073 0-.195.057-.243.224zm1.269 4.75a.75.75 0 0 0-1.5 0v5a.75.75 0 0 0 1.5 0zm3 0a.75.75 0 0 0-1.5 0v5a.75.75 0 0 0 1.5 0z"/>`), g.Group(children),
	)
}

func TrashTwo(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="m5.25 5.778l1.727 12.178c.09.579.329 1.12.691 1.564a3 3 0 0 0 1.363.95l.246.083a8.52 8.52 0 0 0 5.446 0l.246-.082c.528-.178 1-.506 1.362-.95s.602-.985.692-1.564l1.727-12.18"/><path d="M12 7.5c3.728 0 6.75-.784 6.75-1.75S15.728 4 12 4s-6.75.784-6.75 1.75S8.272 7.5 12 7.5"/></g>`), g.Group(children),
	)
}

func TrashTwoSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="m6.108 5.75l.064.042c.252.154.666.32 1.243.47c1.144.296 2.766.488 4.585.488c1.82 0 3.44-.192 4.585-.489c.578-.15.991-.315 1.243-.47l.064-.041l-.064-.042c-.252-.154-.665-.32-1.243-.47C15.44 4.943 13.819 4.75 12 4.75c-1.82 0-3.44.192-4.585.489c-.577.15-.991.315-1.243.47zm-1.602.12a1 1 0 0 1-.006-.12c0-.657.5-1.082.889-1.32c.431-.265 1.006-.477 1.65-.643C8.338 3.45 10.092 3.25 12 3.25s3.662.2 4.961.537c.644.166 1.219.378 1.65.642c.39.239.89.664.89 1.321l-.001.012a1.2 1.2 0 0 1-.021.218l-1.715 12.091a4 4 0 0 1-.852 1.924a3.75 3.75 0 0 1-1.704 1.187l-.246.082a9.27 9.27 0 0 1-5.924 0l-.246-.082a3.74 3.74 0 0 1-1.704-1.187a4 4 0 0 1-.852-1.925l-.001-.009L4.52 5.981a1 1 0 0 1-.015-.112"/>`), g.Group(children),
	)
}

func Tree(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M12 17h7l-4.5-6.5h3L12 3l-5.5 7.5h3L5 17zm0 0v4"/>`), g.Group(children),
	)
}

func TreeSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12.605 2.556a.75.75 0 0 0-1.21 0l-5.5 7.5A.75.75 0 0 0 6.5 11.25h1.569l-3.686 5.323A.75.75 0 0 0 5 17.75h6.25V21a.75.75 0 0 0 1.5 0v-3.25H19a.75.75 0 0 0 .617-1.177L15.93 11.25h1.57a.75.75 0 0 0 .605-1.194z"/>`), g.Group(children),
	)
}

func TrendingDown(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M15 18h6v-6"/><path d="m3 7l4.443 5.223c.31.365.466.547.658.64a1 1 0 0 0 .546.09c.212-.024.418-.146.83-.39l2.826-1.674c.385-.229.578-.343.778-.37a1 1 0 0 1 .52.068c.187.077.344.237.658.556L21 18"/></g>`), g.Group(children),
	)
}

func TrendingDownSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M3.571 6.514a.75.75 0 0 0-1.142.972l4.458 5.24c.142.168.275.323.396.447c.133.134.29.268.495.366c.297.142.628.197.955.16c.225-.026.417-.103.587-.186c.155-.077.33-.181.52-.293l2.845-1.686c.202-.12.32-.189.41-.234a1 1 0 0 1 .09-.038a.25.25 0 0 1 .126.016a1 1 0 0 1 .076.06c.077.067.173.164.337.331l3.4 3.458L14.25 18c0 .414.336.75.75.75h6a.75.75 0 0 0 .75-.75v-6a.75.75 0 0 0-.75-.75l-2.816 2.816l-3.39-3.448l-.063-.065c-.247-.252-.509-.52-.84-.659a1.75 1.75 0 0 0-.912-.118c-.356.049-.678.24-.98.421l-.079.046l-2.825 1.674a8 8 0 0 1-.44.251a1 1 0 0 1-.096.04a.25.25 0 0 1-.132-.021a1 1 0 0 1-.077-.07a8 8 0 0 1-.336-.38z"/>`), g.Group(children),
	)
}

func TrendingUp(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M15 7h6v6"/><path d="m3 18l4.443-5.223c.31-.365.466-.547.658-.64a1 1 0 0 1 .546-.09c.212.024.418.146.83.39l2.826 1.674c.385.229.578.343.778.37a1 1 0 0 0 .52-.068c.187-.077.344-.237.658-.556L21 7"/></g>`), g.Group(children),
	)
}

func TrendingUpSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M3.571 18.486a.75.75 0 1 1-1.142-.972l4.458-5.24c.142-.168.275-.323.396-.447a1.8 1.8 0 0 1 .495-.366a1.75 1.75 0 0 1 .955-.16c.225.026.417.102.587.186c.155.077.33.181.52.293l2.845 1.686c.202.12.32.189.41.234a.5.5 0 0 0 .09.038a.25.25 0 0 0 .126-.016a1 1 0 0 0 .076-.06c.077-.067.173-.164.337-.331l3.4-3.458L14.25 7a.75.75 0 0 1 .75-.75h6a.75.75 0 0 1 .75.75v6a.75.75 0 0 1-.75.75l-2.816-2.816l-3.39 3.448l-.063.065c-.247.252-.509.52-.84.659a1.75 1.75 0 0 1-.912.118c-.356-.049-.678-.24-.98-.421l-.079-.046l-2.825-1.674a8 8 0 0 0-.44-.251a1 1 0 0 0-.096-.04a.25.25 0 0 0-.132.021a1 1 0 0 0-.077.07c-.078.078-.173.19-.336.38z"/>`), g.Group(children),
	)
}

func Triangle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M5.98 10.762C8.608 5.587 9.92 3 12 3s3.393 2.587 6.02 7.762l.327.644c2.182 4.3 3.274 6.45 2.287 8.022C19.648 21 17.208 21 12.327 21h-.654c-4.88 0-7.321 0-8.307-1.572s.105-3.722 2.287-8.022z"/>`), g.Group(children),
	)
}

func TriangleDanger(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M12 8.5V14m0 3.247v-.5m-6.02-5.986C8.608 5.587 9.92 3 12 3c2.08 0 3.393 2.587 6.02 7.761l.327.645c2.182 4.3 3.274 6.45 2.287 8.022C19.648 21 17.208 21 12.327 21h-.654c-4.88 0-7.321 0-8.307-1.572c-.987-1.572.105-3.722 2.287-8.022z"/>`), g.Group(children),
	)
}

func TriangleInfo(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M12 17v-5h-.5m0 5h1M12 9.5V9"/><path d="M5.98 10.761C8.608 5.587 9.92 3 12 3c2.08 0 3.393 2.587 6.02 7.761l.327.645c2.182 4.3 3.274 6.45 2.287 8.022C19.648 21 17.208 21 12.327 21h-.654c-4.88 0-7.321 0-8.307-1.572c-.987-1.572.105-3.722 2.287-8.022z"/></g>`), g.Group(children),
	)
}

func TriangleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12 2.25c-1.418 0-2.462.91-3.417 2.257c-.948 1.338-1.953 3.318-3.24 5.853l-.39.768c-1.065 2.098-1.904 3.75-2.344 5.076c-.448 1.348-.55 2.552.121 3.623c.67 1.066 1.801 1.511 3.22 1.719c1.398.204 3.272.204 5.656.204h.788c2.384 0 4.258 0 5.656-.204c1.419-.208 2.55-.653 3.22-1.72c.671-1.07.569-2.274.12-3.622c-.44-1.325-1.278-2.978-2.343-5.076l-.39-.768c-1.287-2.535-2.292-4.515-3.24-5.853C14.462 3.159 13.418 2.25 12 2.25"/>`), g.Group(children),
	)
}

func Truck(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9.207 16.455C9.207 17.86 8.095 19 6.724 19s-2.483-1.14-2.483-2.546m4.966 0c0-1.405-1.112-2.545-2.483-2.545s-2.483 1.14-2.483 2.545m4.966 0h5.586m-10.552 0H3V6a1 1 0 0 1 1-1h9.793a1 1 0 0 1 1 1v2.182m5.586 8.272c0 1.406-1.111 2.546-2.482 2.546s-2.483-1.14-2.483-2.546m4.965 0c0-1.405-1.111-2.545-2.482-2.545s-2.483 1.14-2.483 2.545m4.965 0H21v-5.09l-2.515-2.579a2 2 0 0 0-1.431-.603h-2.26m.62 8.272h-.62m0 0V8.182"/>`), g.Group(children),
	)
}

func TruckSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M14.748 17.205H9.872c-.331 1.448-1.602 2.545-3.148 2.545c-1.545 0-2.816-1.097-3.148-2.546H3a.75.75 0 0 1-.75-.75V6c0-.966.784-1.75 1.75-1.75h9.793c.967 0 1.75.784 1.75 1.75v1.432h1.51c.742 0 1.452.299 1.97.83l2.514 2.578a.75.75 0 0 1 .213.524v5.09a.75.75 0 0 1-.705.75c-.331 1.448-1.603 2.546-3.148 2.546s-2.817-1.097-3.149-2.546m-8.024-2.546c-.94 0-1.733.786-1.733 1.795c0 1.01.794 1.796 1.733 1.796s1.733-.786 1.733-1.796c0-1.009-.793-1.795-1.733-1.795m11.173 0c-.94 0-1.733.786-1.733 1.795c0 1.01.793 1.796 1.733 1.796c.939 0 1.732-.786 1.732-1.796c0-1.009-.793-1.795-1.732-1.795"/>`), g.Group(children),
	)
}

func Tv(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m12 7l6.632-4m-7.106 4L5.368 3M3 9.154C3 7.964 3.895 7 5 7h14c1.105 0 2 .964 2 2.154v9.692c0 1.19-.895 2.154-2 2.154H5c-1.105 0-2-.964-2-2.154z"/>`), g.Group(children),
	)
}

func TvSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M19.274 2.613a.75.75 0 0 1-.255 1.03L14.696 6.25H19c1.57 0 2.75 1.353 2.75 2.904v9.692c0 1.55-1.18 2.904-2.75 2.904H5c-1.57 0-2.75-1.353-2.75-2.904V9.154C2.25 7.604 3.43 6.25 5 6.25h3.995L4.96 3.629a.75.75 0 1 1 .817-1.258l5.972 3.879h.042l6.453-3.892a.75.75 0 0 1 1.03.255"/>`), g.Group(children),
	)
}

func Two(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M8.75 9.92c0-3.894 5.77-3.894 5.77 0c0 2.94-3.77 5.476-5.77 7.08c0 0 3.75-.625 6.25 0"/>`), g.Group(children),
	)
}

func TwoCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/><path d="M9.5 10.337c0-3.116 4.615-3.116 4.615 0c0 2.352-3.015 4.38-4.615 5.663c0 0 3-.5 5 0"/></g>`), g.Group(children),
	)
}

func TwoCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12m8-1.663c0-.579.207-.956.473-1.195c.279-.251.67-.392 1.085-.392s.806.14 1.085.392c.265.239.472.616.472 1.195c0 .862-.564 1.771-1.49 2.704c-.692.698-1.484 1.313-2.195 1.864q-.34.264-.65.51a.75.75 0 0 0 .47 1.335h5a.75.75 0 1 0 0-1.5h-2.84c.433-.357.876-.745 1.28-1.153c.982-.99 1.925-2.271 1.925-3.76c0-.98-.37-1.77-.969-2.31c-.587-.528-1.349-.777-2.088-.777s-1.502.249-2.089.777c-.6.54-.969 1.33-.969 2.31a.75.75 0 0 0 1.5 0"/>`), g.Group(children),
	)
}

func TwoDiamond(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9.5 10.337c0-3.116 4.615-3.116 4.615 0c0 2.352-3.015 4.38-4.615 5.663c0 0 3-.5 5 0"/><path d="M2.707 10.295a2.41 2.41 0 0 0 0 3.41l7.588 7.588a2.41 2.41 0 0 0 3.41 0l7.588-7.588a2.41 2.41 0 0 0 0-3.41l-7.588-7.588a2.41 2.41 0 0 0-3.41 0z"/></g>`), g.Group(children),
	)
}

func TwoDiamondSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.79 1.49a3.16 3.16 0 0 1 3.445.687l7.588 7.588a3.16 3.16 0 0 1 0 4.47l-7.588 7.588a3.16 3.16 0 0 1-4.47 0l-7.588-7.588a3.16 3.16 0 0 1 0-4.47l7.588-7.589a3.2 3.2 0 0 1 1.025-.685m-.54 8.847c0-.579.207-.956.473-1.195c.279-.251.67-.392 1.085-.392s.806.14 1.085.392c.265.239.472.616.472 1.195c0 .862-.564 1.771-1.49 2.704c-.692.698-1.484 1.313-2.195 1.864q-.34.264-.65.51a.75.75 0 0 0 .47 1.335h5a.75.75 0 1 0 0-1.5h-2.84c.433-.357.876-.745 1.28-1.153c.982-.99 1.925-2.271 1.925-3.76c0-.98-.37-1.77-.969-2.31c-.587-.528-1.349-.777-2.088-.777s-1.502.249-2.089.777c-.6.54-.969 1.33-.969 2.31a.75.75 0 0 0 1.5 0"/>`), g.Group(children),
	)
}

func TwoHexagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9.5 10.337c0-3.116 4.615-3.116 4.615 0c0 2.352-3.015 4.38-4.615 5.663c0 0 3-.5 5 0"/><path d="M20.5 15.8V8.2a1.91 1.91 0 0 0-.944-1.645l-6.612-3.8a1.88 1.88 0 0 0-1.888 0l-6.612 3.8A1.9 1.9 0 0 0 3.5 8.2v7.602a1.91 1.91 0 0 0 .944 1.644l6.612 3.8a1.88 1.88 0 0 0 1.888 0l6.612-3.8A1.9 1.9 0 0 0 20.5 15.8"/></g>`), g.Group(children),
	)
}

func TwoHexagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.68 2.105a2.63 2.63 0 0 1 2.64 0l.001.001l6.611 3.8A2.65 2.65 0 0 1 21.25 8.2v7.603a2.66 2.66 0 0 1-1.318 2.291l-.003.002l-6.608 3.799h-.002a2.63 2.63 0 0 1-2.639 0h-.001l-6.608-3.8h-.003A2.64 2.64 0 0 1 2.75 15.8V8.198a2.66 2.66 0 0 1 1.318-2.291l.003-.002zm-.43 8.232c0-.579.207-.956.473-1.195c.279-.251.67-.392 1.085-.392s.806.14 1.085.392c.265.239.472.616.472 1.195c0 .862-.564 1.771-1.49 2.704c-.692.698-1.484 1.313-2.195 1.864q-.34.264-.65.51a.75.75 0 0 0 .47 1.335h5a.75.75 0 1 0 0-1.5h-2.84c.433-.357.876-.745 1.28-1.153c.982-.99 1.925-2.271 1.925-3.76c0-.98-.37-1.77-.969-2.31c-.587-.528-1.349-.777-2.088-.777s-1.502.249-2.089.777c-.6.54-.969 1.33-.969 2.31a.75.75 0 0 0 1.5 0"/>`), g.Group(children),
	)
}

func TwoOctagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9.5 10.337c0-3.116 4.615-3.116 4.615 0c0 2.352-3.015 4.38-4.615 5.663c0 0 3-.5 5 0"/><path d="M7.805 3.469C8.16 3.115 8.451 3 8.937 3h6.126c.486 0 .778.115 1.132.469l4.336 4.336c.354.354.469.646.469 1.132v6.126c0 .5-.125.788-.469 1.132l-4.336 4.336c-.354.354-.646.469-1.132.469H8.937c-.5 0-.788-.125-1.132-.469L3.47 16.195c-.355-.355-.47-.646-.47-1.132V8.937c0-.5.125-.788.469-1.132z"/></g>`), g.Group(children),
	)
}

func TwoOctagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.037 2.408a2.3 2.3 0 0 1 .9-.158h6.126c.302 0 .602.036.9.158s.54.31.762.53l4.337 4.337c.22.221.408.463.53.762c.123.298.158.598.158.9v6.126c0 .313-.039.616-.163.914a2.3 2.3 0 0 1-.525.748l-4.337 4.337a2.3 2.3 0 0 1-.762.53a2.3 2.3 0 0 1-.9.158H8.937c-.313 0-.616-.039-.914-.163a2.3 2.3 0 0 1-.748-.525l-4.337-4.337a2.3 2.3 0 0 1-.53-.762a2.3 2.3 0 0 1-.158-.9V8.937c0-.313.039-.616.163-.914a2.3 2.3 0 0 1 .525-.748l4.337-4.337c.221-.22.463-.408.762-.53m2.213 7.929c0-.579.207-.956.473-1.195c.279-.251.67-.392 1.085-.392s.806.14 1.085.392c.265.239.472.616.472 1.195c0 .862-.564 1.771-1.49 2.704c-.692.698-1.484 1.313-2.195 1.864q-.34.264-.65.51a.75.75 0 0 0 .47 1.335h5a.75.75 0 1 0 0-1.5h-2.84c.433-.357.876-.745 1.28-1.153c.982-.99 1.925-2.271 1.925-3.76c0-.98-.37-1.77-.969-2.31c-.587-.528-1.349-.777-2.088-.777s-1.502.249-2.089.777c-.6.54-.969 1.33-.969 2.31a.75.75 0 0 0 1.5 0"/>`), g.Group(children),
	)
}

func TwoSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.153 8.288c-.374.336-.653.86-.653 1.633a.75.75 0 0 1-1.5 0c0-1.174.442-2.111 1.15-2.748c.694-.626 1.601-.923 2.485-.923s1.79.297 2.485.923c.707.637 1.15 1.574 1.15 2.748c0 1.783-1.132 3.338-2.353 4.569a22 22 0 0 1-1.684 1.508c1.215-.059 2.703-.037 3.949.274a.75.75 0 0 1-.364 1.456c-1.134-.284-2.602-.29-3.834-.214a25 25 0 0 0-2.074.22l-.029.004l-.007.002a.75.75 0 0 1-.593-1.325c.25-.201.521-.411.803-.63c.89-.69 1.893-1.47 2.768-2.352c1.164-1.173 1.917-2.356 1.917-3.512c0-.774-.279-1.297-.653-1.633c-.387-.349-.922-.538-1.481-.538c-.56 0-1.095.19-1.482.538"/>`), g.Group(children),
	)
}

func TwoSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9.5 10.337c0-3.116 4.615-3.116 4.615 0c0 2.352-3.015 4.38-4.615 5.663c0 0 3-.5 5 0"/><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/></g>`), g.Group(children),
	)
}

func TwoSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057m.883 8.087c0-.579.207-.956.473-1.195c.279-.251.67-.392 1.085-.392s.806.14 1.085.392c.265.239.472.616.472 1.195c0 .862-.564 1.771-1.49 2.704c-.692.698-1.484 1.313-2.195 1.864q-.34.264-.65.51a.75.75 0 0 0 .47 1.335h5a.75.75 0 1 0 0-1.5h-2.84c.433-.357.876-.745 1.28-1.153c.982-.99 1.925-2.271 1.925-3.76c0-.98-.37-1.77-.969-2.31c-.587-.528-1.349-.777-2.088-.777s-1.502.249-2.089.777c-.6.54-.969 1.33-.969 2.31a.75.75 0 0 0 1.5 0"/>`), g.Group(children),
	)
}

func TwoWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9.5 10.337c0-3.116 4.615-3.116 4.615 0c0 2.352-3.015 4.38-4.615 5.663c0 0 3-.5 5 0"/><path d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83"/></g>`), g.Group(children),
	)
}

func TwoWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.565 2.075a3.33 3.33 0 0 1 2.87 0c.394.189.755.497 1.26.928l.079.066c.48.41.939.604 1.58.655l.102.008c.662.053 1.135.09 1.547.236a3.33 3.33 0 0 1 2.03 2.029c.145.412.182.885.235 1.547l.008.102c.051.641.246 1.1.655 1.58l.066.078c.431.506.74.867.928 1.261a3.33 3.33 0 0 1 0 2.87c-.189.394-.497.755-.928 1.26l-.066.079c-.418.49-.605.951-.655 1.58l-.008.102c-.053.662-.09 1.135-.236 1.547a3.33 3.33 0 0 1-2.029 2.03c-.412.145-.885.182-1.547.235l-.102.008c-.641.051-1.1.246-1.58.655l-.079.066c-.505.431-.866.74-1.26.928a3.33 3.33 0 0 1-2.87 0c-.394-.189-.755-.497-1.26-.928l-.079-.066a2.56 2.56 0 0 0-1.58-.655l-.102-.008c-.662-.053-1.135-.09-1.547-.236a3.33 3.33 0 0 1-2.03-2.029c-.145-.412-.182-.885-.235-1.547l-.008-.102a2.56 2.56 0 0 0-.655-1.58l-.066-.079c-.431-.505-.74-.866-.928-1.26a3.33 3.33 0 0 1 0-2.87c.189-.394.497-.755.928-1.26l.066-.079a2.56 2.56 0 0 0 .655-1.58l.008-.102c.053-.662.09-1.135.236-1.547a3.33 3.33 0 0 1 2.029-2.03c.412-.145.885-.182 1.547-.235l.102-.008a2.56 2.56 0 0 0 1.58-.655l.078-.066c.506-.431.867-.74 1.261-.928m-.315 8.262c0-.579.207-.956.473-1.195c.279-.251.67-.392 1.085-.392s.806.14 1.085.392c.265.239.472.616.472 1.195c0 .862-.564 1.771-1.49 2.704c-.692.698-1.484 1.313-2.195 1.864q-.34.264-.65.51a.75.75 0 0 0 .47 1.335h5a.75.75 0 1 0 0-1.5h-2.84c.433-.357.876-.745 1.28-1.153c.982-.99 1.925-2.271 1.925-3.76c0-.98-.37-1.77-.969-2.31c-.587-.528-1.349-.777-2.088-.777s-1.502.249-2.089.777c-.6.54-.969 1.33-.969 2.31a.75.75 0 0 0 1.5 0"/>`), g.Group(children),
	)
}

func TypeBold(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M5 3h8c1.06 0 2.078.474 2.828 1.318S17 6.307 17 7.5s-.421 2.338-1.172 3.182S14.061 12 13 12H5zm0 9h10.039a4.44 4.44 0 0 1 3.154 1.318A4.52 4.52 0 0 1 19.5 16.5a4.52 4.52 0 0 1-1.307 3.182A4.44 4.44 0 0 1 15.038 21H5z"/>`), g.Group(children),
	)
}

func TypeBoldSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M4.25 3A.75.75 0 0 1 5 2.25h8c1.29 0 2.507.577 3.389 1.57c.88.99 1.361 2.314 1.361 3.68s-.482 2.69-1.361 3.68a5 5 0 0 1-.19.202a5.2 5.2 0 0 1 2.527 1.408a5.27 5.27 0 0 1 1.524 3.71a5.27 5.27 0 0 1-1.524 3.71a5.2 5.2 0 0 1-3.687 1.54H5a.75.75 0 0 1-.75-.75zm1.5.75v7.5H13c.832 0 1.65-.37 2.268-1.066c.62-.699.982-1.663.982-2.684s-.361-1.985-.982-2.684C14.65 4.121 13.83 3.75 13 3.75zm0 9v7.5h9.289c.982 0 1.925-.393 2.622-1.096A3.77 3.77 0 0 0 18.75 16.5a3.77 3.77 0 0 0-1.09-2.654a3.7 3.7 0 0 0-2.621-1.096z"/>`), g.Group(children),
	)
}

func TypeItalic(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M19 3H9m6 18H5m9.5-18L10 21"/>`), g.Group(children),
	)
}

func TypeItalicSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M14.483 2.25H9a.75.75 0 0 0 0 1.5h4.54l-4.126 16.5H5a.75.75 0 0 0 0 1.5h10a.75.75 0 0 0 0-1.5h-4.04l4.126-16.5H19a.75.75 0 0 0 0-1.5h-4.484z"/>`), g.Group(children),
	)
}

func TypeText(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M12.53 20L7.764 4L3 20m1.596-5.03h6.337m4.244-3.03C16.765 10.933 21 9.925 21 13.451V20m0-5.541c-1.588.504-6.353.504-6.353 3.526c0 3.023 4.765 2.015 6.353-.504"/>`), g.Group(children),
	)
}

func TypeTextSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M15.578 12.574c.688-.436 1.992-.883 3.068-.83c.527.027.913.168 1.161.396c.231.21.443.587.443 1.311v.42q-.327.064-.762.139l-.28.049c-.673.118-1.46.267-2.207.504c-.74.234-1.504.575-2.092 1.114a3.03 3.03 0 0 0-1.012 2.308c0 .98.404 1.744 1.125 2.189c.674.416 1.516.488 2.307.38c.973-.132 2.033-.559 2.921-1.214V20a.75.75 0 1 0 1.5 0v-6.548c0-1.039-.318-1.86-.93-2.42c-.596-.544-1.368-.749-2.099-.785c-1.438-.072-3.046.489-3.946 1.06a.75.75 0 1 0 .803 1.267m4.672 2.824v1.854c-.694.957-1.984 1.661-3.123 1.816c-.598.081-1.047-.004-1.317-.17c-.222-.138-.413-.383-.413-.913c0-.527.196-.9.527-1.203c.355-.326.881-.584 1.53-.79c.644-.203 1.345-.338 2.013-.456l.266-.046q.262-.044.517-.092M8.483 3.786a.75.75 0 0 0-1.437 0l-4.765 16a.75.75 0 0 0 1.438.428l1.338-4.494h5.415l1.339 4.494a.75.75 0 1 0 1.437-.428zm-.718 2.842l2.26 7.592h-4.52z"/>`), g.Group(children),
	)
}

func TypeUnderline(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M6 3v7.539c0 1.713.632 3.357 1.757 4.569S10.41 17 12 17s3.117-.68 4.243-1.892C17.368 13.896 18 12.252 18 10.538V3M4 21h16"/>`), g.Group(children),
	)
}

func TypeUnderlineSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M6 2.25a.75.75 0 0 1 .75.75v7.539c0 1.531.566 2.99 1.557 4.058c.99 1.066 2.32 1.653 3.693 1.653s2.704-.587 3.693-1.653c.991-1.067 1.557-2.527 1.557-4.058V3a.75.75 0 0 1 1.5 0v7.539c0 1.895-.699 3.723-1.958 5.079c-1.26 1.358-2.983 2.132-4.792 2.132s-3.531-.774-4.792-2.132c-1.26-1.356-1.958-3.184-1.958-5.08V3A.75.75 0 0 1 6 2.25M3.25 21a.75.75 0 0 1 .75-.75h16a.75.75 0 0 1 0 1.5H4a.75.75 0 0 1-.75-.75"/>`), g.Group(children),
	)
}

func Umbrella(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M15.636 13Q12 9.364 8.364 13C5.878 10.87 4.486 10.87 2 13C2 7.477 6.477 3 12 3s10 4.477 10 10c-2.486-2.13-3.878-2.13-6.364 0"/><path d="M12 11.5v7.273c0 3.519-5.5 3.519-5.5 0"/></g>`), g.Group(children),
	)
}

func UmbrellaSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M1.25 13C1.25 7.063 6.063 2.25 12 2.25S22.75 7.063 22.75 13a.75.75 0 0 1-1.238.57c-1.22-1.046-2.01-1.418-2.694-1.418c-.683 0-1.474.372-2.693 1.417a.75.75 0 0 1-1.019-.039c-.838-.838-1.622-1.312-2.356-1.5v6.743c0 1.094-.436 1.964-1.123 2.55c-.67.572-1.538.839-2.377.839c-.84 0-1.707-.267-2.377-.84c-.687-.585-1.123-1.455-1.123-2.55a.75.75 0 0 1 1.5 0c0 .666.251 1.116.596 1.41c.36.307.868.48 1.404.48s1.043-.173 1.404-.48c.345-.294.596-.744.596-1.41V12.03c-.734.19-1.518.663-2.356 1.501a.75.75 0 0 1-1.018.04c-1.22-1.046-2.01-1.418-2.694-1.418s-1.474.372-2.694 1.417A.75.75 0 0 1 1.25 13"/>`), g.Group(children),
	)
}

func Undo(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M5.636 18.364A9 9 0 1 0 12 3C7.942 3 5.482 5.705 3 8.5"/><path d="M3 4.5v4h4"/></g>`), g.Group(children),
	)
}

func UndoSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12 2.25c5.385 0 9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75a9.72 9.72 0 0 1-6.894-2.856a.75.75 0 0 1 1.06-1.06A8.25 8.25 0 1 0 12 3.75c-2.556 0-4.422 1.168-6.167 2.833L7.75 8.5a.75.75 0 0 1-.75.75H3a.75.75 0 0 1-.75-.75v-4A.75.75 0 0 1 3 3.75l1.77 1.77C6.67 3.705 8.905 2.25 12 2.25"/>`), g.Group(children),
	)
}

func Union(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M21 16.2v-2.1c0-1.68 0-2.52-.327-3.162a3 3 0 0 0-1.311-1.311C18.72 9.3 17.88 9.3 16.2 9.3h-1.5V7.8c0-1.68 0-2.52-.327-3.162a3 3 0 0 0-1.311-1.311C12.42 3 11.58 3 9.9 3H7.8c-1.68 0-2.52 0-3.162.327a3 3 0 0 0-1.311 1.311C3 5.28 3 6.12 3 7.8v2.1c0 1.68 0 2.52.327 3.162a3 3 0 0 0 1.311 1.311c.642.327 1.482.327 3.162.327h1.5v1.5c0 1.68 0 2.52.327 3.162a3 3 0 0 0 1.311 1.311C11.58 21 12.42 21 14.1 21h2.1c1.68 0 2.52 0 3.162-.327a3 3 0 0 0 1.311-1.311C21 18.72 21 17.88 21 16.2"/>`), g.Group(children),
	)
}

func UnionSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M7.768 2.25c-.813 0-1.469 0-2 .043c-.546.045-1.026.14-1.47.366a3.75 3.75 0 0 0-1.64 1.639c-.226.444-.32.924-.365 1.47c-.043.531-.043 1.187-.043 2v2.164c0 .813 0 1.469.043 2c.045.546.14 1.026.366 1.47a3.75 3.75 0 0 0 1.639 1.64c.444.226.924.32 1.47.365c.531.043 1.187.043 2 .043h.782v.782c0 .813 0 1.469.043 2c.045.546.14 1.026.366 1.47a3.75 3.75 0 0 0 1.639 1.64c.444.226.924.32 1.47.365c.531.043 1.187.043 2 .043h2.164c.813 0 1.469 0 2-.043c.546-.045 1.026-.14 1.47-.366a3.75 3.75 0 0 0 1.64-1.639c.226-.444.32-.924.365-1.47c.043-.531.043-1.187.043-2v-2.164c0-.813 0-1.469-.043-2c-.045-.546-.14-1.026-.366-1.47a3.75 3.75 0 0 0-1.639-1.64c-.444-.226-.924-.32-1.47-.365c-.531-.043-1.187-.043-2-.043h-.782v-.782c0-.813 0-1.469-.043-2c-.045-.546-.14-1.026-.366-1.47a3.75 3.75 0 0 0-1.639-1.64c-.444-.226-.924-.32-1.47-.365c-.531-.043-1.187-.043-2-.043z"/>`), g.Group(children),
	)
}

func Unlink(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m15.988 13l3.902-3.902c1.437-1.437 1.485-3.718.107-5.095c-1.377-1.378-3.658-1.33-5.095.107L11 8.012M3 9h1.5M9 4.5V3m12 12h-1.5M15 19.5V21m-2-5.038l-3.892 3.88c-1.432 1.43-3.64 1.615-5.082.107c-1.442-1.507-1.326-3.639.107-5.068L8.025 11"/>`), g.Group(children),
	)
}

func UnlinkSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 9A.75.75 0 0 1 3 8.25h1.5a.75.75 0 0 1 0 1.5H3A.75.75 0 0 1 2.25 9M9 2.25a.75.75 0 0 1 .75.75v1.5a.75.75 0 0 1-1.5 0V3A.75.75 0 0 1 9 2.25M18.75 15a.75.75 0 0 1 .75-.75H21a.75.75 0 0 1 0 1.5h-1.5a.75.75 0 0 1-.75-.75M15 18.75a.75.75 0 0 1 .75.75V21a.75.75 0 0 1-1.5 0v-1.5a.75.75 0 0 1 .75-.75m5.528-15.278c-1.691-1.691-4.448-1.601-6.156.107L10.47 7.481a.75.75 0 0 0 1.06 1.061l3.928 3.928a.75.75 0 0 0 1.06 1.06l3.903-3.902c1.708-1.708 1.798-4.465.107-6.156M8.556 11.53a.75.75 0 0 0-1.06-1.061L3.603 14.35c-1.703 1.698-1.863 4.296-.12 6.118c1.783 1.863 4.477 1.578 6.154-.094l3.892-3.881a.75.75 0 1 0-1.06-1.062l-.001.001z"/>`), g.Group(children),
	)
}

func Upload(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M4 16.004V17a3 3 0 0 0 3 3h10a3 3 0 0 0 3-3v-1m-8-.5v-11M15.5 8L12 4.5L8.5 8"/>`), g.Group(children),
	)
}

func UploadSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M11.47 3.97a.75.75 0 0 1 1.06 0l3.5 3.5a.75.75 0 0 1 0 1.06h-3.28v6.97a.75.75 0 0 1-1.5 0V8.53H7.97a.75.75 0 0 1 0-1.06zM20 15.25a.75.75 0 0 1 .75.75v1A3.75 3.75 0 0 1 17 20.75H7A3.75 3.75 0 0 1 3.25 17v-.996a.75.75 0 1 1 1.5 0V17A2.25 2.25 0 0 0 7 19.25h10A2.25 2.25 0 0 0 19.25 17v-1a.75.75 0 0 1 .75-.75"/>`), g.Group(children),
	)
}

func User(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M15 7.5a3 3 0 1 1-6 0a3 3 0 0 1 6 0m4.5 13c-.475-9.333-14.525-9.333-15 0"/>`), g.Group(children),
	)
}

func UserCheck(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M15 7.5a3 3 0 1 1-6 0a3 3 0 0 1 6 0m4.5 13c-.475-9.333-14.525-9.333-15 0"/><path d="m10.258 18.992l1.034 1.181c.095.109.266.1.35-.016l2.1-2.907"/></g>`), g.Group(children),
	)
}

func UserCheckSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.25 7.5a3.75 3.75 0 1 1 7.5 0a3.75 3.75 0 0 1-7.5 0m11.999 12.962c-.262-5.148-4.307-7.712-8.249-7.712s-7.987 2.563-8.249 7.712a.75.75 0 0 0 .71.787c3.365.171 12.998.106 15.077 0a.75.75 0 0 0 .711-.787m-6.068-5.32a.75.75 0 0 1 .169 1.047l-2.1 2.907a.974.974 0 0 1-1.522.072l-1.034-1.182a.75.75 0 0 1 1.129-.988l.598.684l1.713-2.371a.75.75 0 0 1 1.047-.169"/>`), g.Group(children),
	)
}

func UserCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/><path d="M14.5 9.25a2.5 2.5 0 1 1-5 0a2.5 2.5 0 0 1 5 0M17 19.5c-.317-6.187-9.683-6.187-10 0"/></g>`), g.Group(children),
	)
}

func UserCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M12 7.5a1.75 1.75 0 1 0 0 3.5a1.75 1.75 0 0 0 0-3.5"/><path d="M12 2.25A9.75 9.75 0 0 0 2.25 12a9.74 9.74 0 0 0 4 7.875l.001-.413C6.434 15.883 9.272 14.11 12 14.11s5.566 1.773 5.749 5.352l.001.413a9.74 9.74 0 0 0 4-7.875A9.75 9.75 0 0 0 12 2.25m-3.25 7a3.25 3.25 0 1 1 6.5 0a3.25 3.25 0 0 1-6.5 0"/><path d="M16.259 20.773c-.004-.78-.007-1.209-.008-1.235c-.134-2.608-2.137-3.928-4.251-3.928s-4.117 1.32-4.251 3.928c-.001.026-.004.454-.008 1.235A9.7 9.7 0 0 0 12 21.75a9.7 9.7 0 0 0 4.259-.977"/></g>`), g.Group(children),
	)
}

func UserDiamond(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M2.707 10.295a2.41 2.41 0 0 0 0 3.41l7.588 7.588a2.41 2.41 0 0 0 3.41 0l7.588-7.588a2.41 2.41 0 0 0 0-3.41l-7.588-7.588a2.41 2.41 0 0 0-3.41 0z"/><path d="M14.5 9.25a2.5 2.5 0 1 1-5 0a2.5 2.5 0 0 1 5 0M16.809 18c-1.275-4.565-8.272-4.587-9.6-.063"/></g>`), g.Group(children),
	)
}

func UserDiamondSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M12 7.5a1.75 1.75 0 1 0 0 3.5a1.75 1.75 0 0 0 0-3.5"/><path d="M12 1.25a3.16 3.16 0 0 0-2.235.926L2.177 9.765a3.16 3.16 0 0 0 0 4.47l4.206 4.207C7.001 15.546 9.545 14.11 12 14.11s4.999 1.436 5.617 4.332l4.206-4.207a3.16 3.16 0 0 0 0-4.47l-7.588-7.588A3.16 3.16 0 0 0 12 1.25m-3.25 8a3.25 3.25 0 1 1 6.5 0a3.25 3.25 0 0 1-6.5 0"/><path d="m16.253 19.805l-.002-.267C16.117 16.93 14.114 15.61 12 15.61s-4.117 1.32-4.251 3.928l-.002.267l2.018 2.018a3.16 3.16 0 0 0 4.47 0z"/></g>`), g.Group(children),
	)
}

func UserHexagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M20.5 15.8V8.2a1.91 1.91 0 0 0-.944-1.645l-6.612-3.8a1.88 1.88 0 0 0-1.888 0l-6.612 3.8A1.9 1.9 0 0 0 3.5 8.2v7.602a1.91 1.91 0 0 0 .944 1.644l6.612 3.8a1.88 1.88 0 0 0 1.888 0l6.612-3.8A1.9 1.9 0 0 0 20.5 15.8"/><path d="M14.5 9.25a2.5 2.5 0 1 1-5 0a2.5 2.5 0 0 1 5 0m-7.454 9.455c.756-5.527 9.152-5.527 9.908 0"/></g>`), g.Group(children),
	)
}

func UserHexagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M12 7.5a1.75 1.75 0 1 0 0 3.5a1.75 1.75 0 0 0 0-3.5"/><path d="M12 1.75a2.63 2.63 0 0 0-1.32.355l-6.61 3.8l-.002.002A2.65 2.65 0 0 0 2.75 8.198v7.603a2.64 2.64 0 0 0 1.318 2.292l.003.002l2.186 1.257C6.492 15.847 9.3 14.11 12 14.11s5.508 1.737 5.743 5.242l2.186-1.257l.003-.002a2.65 2.65 0 0 0 1.318-2.291V8.199a2.65 2.65 0 0 0-1.318-2.292l-6.61-3.8l-.002-.002A2.63 2.63 0 0 0 12 1.75m-3.25 7.5a3.25 3.25 0 1 1 6.5 0a3.25 3.25 0 0 1-6.5 0"/><path d="m16.256 20.207l-.005-.669C16.117 16.93 14.114 15.61 12 15.61s-4.117 1.32-4.251 3.928c0 .019-.003.248-.005.669l2.935 1.687h.002a2.63 2.63 0 0 0 2.639 0h.001z"/></g>`), g.Group(children),
	)
}

func UserMinus(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M15 7.5a3 3 0 1 1-6 0a3 3 0 0 1 6 0m4.5 13c-.475-9.333-14.525-9.333-15 0m5.5-2h4"/>`), g.Group(children),
	)
}

func UserMinusSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.25 7.5a3.75 3.75 0 1 1 7.5 0a3.75 3.75 0 0 1-7.5 0m11.999 12.962a.75.75 0 0 1-.71.787c-2.08.106-11.713.171-15.077 0a.75.75 0 0 1-.711-.787C4.013 15.314 8.058 12.75 12 12.75s7.987 2.563 8.249 7.712M10 16.75a.75.75 0 0 0 0 1.5h4a.75.75 0 0 0 0-1.5z"/>`), g.Group(children),
	)
}

func UserOctagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M7.805 3.469C8.16 3.115 8.451 3 8.937 3h6.126c.486 0 .778.115 1.132.469l4.336 4.336c.354.354.469.646.469 1.132v6.126c0 .5-.125.788-.469 1.132l-4.336 4.336c-.354.354-.646.469-1.132.469H8.937c-.5 0-.788-.125-1.132-.469L3.47 16.195c-.355-.355-.47-.646-.47-1.132V8.937c0-.5.125-.788.469-1.132z"/><path d="M14.5 9.25a2.5 2.5 0 1 1-5 0a2.5 2.5 0 0 1 5 0M7 19.525V19.2c.317-6.187 9.683-6.187 10 0v.325"/></g>`), g.Group(children),
	)
}

func UserOctagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M12 7.5a1.75 1.75 0 1 0 0 3.5a1.75 1.75 0 0 0 0-3.5"/><path d="M8.937 2.25a2.3 2.3 0 0 0-.9.158c-.299.122-.54.31-.762.53L2.938 7.275c-.213.214-.4.45-.525.748a2.3 2.3 0 0 0-.163.914v6.126c0 .302.036.602.158.9s.31.54.53.762l3.312 3.312l.001-.575C6.434 15.883 9.272 14.11 12 14.11s5.566 1.773 5.749 5.352v.575l3.313-3.312c.213-.214.4-.45.524-.748a2.3 2.3 0 0 0 .164-.914V8.937a2.3 2.3 0 0 0-.158-.9a2.3 2.3 0 0 0-.53-.762l-4.337-4.337a2.3 2.3 0 0 0-.762-.53a2.3 2.3 0 0 0-.9-.158zm-.187 7a3.25 3.25 0 1 1 6.5 0a3.25 3.25 0 0 1-6.5 0"/><path d="m16.262 21.439l-.011-1.9c-.134-2.609-2.137-3.93-4.251-3.93s-4.117 1.321-4.251 3.93c-.002.031-.005.698-.01 1.9q.132.083.284.148c.298.124.601.163.914.163h6.126c.302 0 .602-.035.9-.158q.158-.065.299-.153"/></g>`), g.Group(children),
	)
}

func UserPlus(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M15 7.5a3 3 0 1 1-6 0a3 3 0 0 1 6 0m4.5 13c-.475-9.333-14.525-9.333-15 0m5.5-2h4m-2-2v4"/>`), g.Group(children),
	)
}

func UserPlusSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.25 7.5a3.75 3.75 0 1 1 7.5 0a3.75 3.75 0 0 1-7.5 0m11.999 12.962c-.262-5.148-4.307-7.712-8.249-7.712s-7.987 2.563-8.249 7.712a.75.75 0 0 0 .71.787c3.365.171 12.998.106 15.077 0a.75.75 0 0 0 .711-.787M12 14.75a.75.75 0 0 1 .75.75v1.25H14a.75.75 0 0 1 0 1.5h-1.25v1.25a.75.75 0 0 1-1.5 0v-1.25H10a.75.75 0 0 1 0-1.5h1.25V15.5a.75.75 0 0 1 .75-.75"/>`), g.Group(children),
	)
}

func UserSettings(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M15 7.5a3 3 0 1 1-6 0a3 3 0 0 1 6 0m4.5 13c-.475-9.333-14.525-9.333-15 0"/><path d="M11.192 17.565c.394-.21.591-.315.808-.315s.414.105.808.315l.134.072c.394.21.591.315.7.488s.108.383.108.804v.142c0 .42 0 .63-.108.804c-.109.173-.306.278-.7.488l-.134.072c-.394.21-.591.315-.808.315s-.414-.105-.808-.315l-.134-.072c-.394-.21-.591-.315-.7-.488s-.108-.383-.108-.804v-.142c0-.42 0-.63.108-.804c.109-.173.306-.278.7-.488z"/></g>`), g.Group(children),
	)
}

func UserSettingsSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M12 3.75a3.75 3.75 0 1 0 0 7.5a3.75 3.75 0 0 0 0-7.5m8.249 16.712c-.262-5.148-4.307-7.712-8.249-7.712s-7.987 2.563-8.249 7.712a.75.75 0 0 0 .71.787c3.365.171 12.998.106 15.077 0a.75.75 0 0 0 .711-.787m-8.876-5.325c.18-.075.386-.137.627-.137s.446.062.627.137c.159.066.334.16.511.254l.18.096c.177.094.353.188.495.282c.16.106.332.247.465.458c.134.215.183.433.204.628c.018.167.018.36.018.546v.198c0 .186 0 .38-.018.546c-.02.195-.07.413-.204.628a1.5 1.5 0 0 1-.465.458a6 6 0 0 1-.495.282l-.18.096a6 6 0 0 1-.511.254c-.18.076-.386.137-.627.137s-.446-.061-.627-.137c-.159-.066-.334-.16-.511-.254l-.18-.096a6 6 0 0 1-.495-.282a1.5 1.5 0 0 1-.465-.458a1.44 1.44 0 0 1-.204-.628c-.018-.167-.018-.36-.018-.546V17.4c0-.186 0-.38.018-.546c.02-.195.07-.413.204-.628c.133-.211.305-.352.465-.458c.143-.094.318-.188.495-.282l.18-.096c.177-.094.352-.188.511-.254"/><path d="M11.545 16.727c.209-.111.321-.17.407-.206l.048-.018l.048.018c.086.036.198.095.408.206l.133.071c.21.112.32.172.396.222l.007.005q.005.046.006.14c.002.073.002.157.002.264v.142c0 .107 0 .191-.002.263q0 .096-.006.142l-.007.004c-.075.05-.186.11-.396.222l-.133.07c-.21.112-.322.171-.408.207l-.048.018l-.048-.018a6 6 0 0 1-.408-.206l-.133-.071a6 6 0 0 1-.396-.222l-.007-.005a2 2 0 0 1-.006-.14C11 17.761 11 17.677 11 17.57v-.142c0-.107 0-.191.002-.263q0-.096.006-.142l.007-.004c.075-.05.186-.11.396-.222z"/></g>`), g.Group(children),
	)
}

func UserSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12 12.75c3.942 0 7.987 2.563 8.249 7.712a.75.75 0 0 1-.71.787c-2.08.106-11.713.171-15.077 0a.75.75 0 0 1-.711-.787C4.013 15.314 8.058 12.75 12 12.75m0-9a3.75 3.75 0 1 0 0 7.5a3.75 3.75 0 0 0 0-7.5"/>`), g.Group(children),
	)
}

func UserSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/><path d="M14.5 9.25a2.5 2.5 0 1 1-5 0a2.5 2.5 0 0 1 5 0M7 20.5v-1.3c.317-6.187 9.683-6.187 10 0v1.3"/></g>`), g.Group(children),
	)
}

func UserSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M12 7.5a1.75 1.75 0 1 0 0 3.5a1.75 1.75 0 0 0 0-3.5"/><path d="M9.367 2.25c-1.092 0-1.958 0-2.655.057c-.714.058-1.317.18-1.868.46a4.75 4.75 0 0 0-2.076 2.077c-.281.55-.403 1.154-.461 1.868c-.057.697-.057 1.563-.057 2.655v5.266c0 1.092 0 1.958.057 2.655c.058.714.18 1.317.46 1.869a4.75 4.75 0 0 0 2.077 2.075c.428.219.89.341 1.409.412a331 331 0 0 1-.002-2.182C6.434 15.883 9.272 14.11 12 14.11s5.566 1.773 5.749 5.352c.002.034.001.803-.002 2.182c.52-.071.98-.193 1.41-.412a4.75 4.75 0 0 0 2.075-2.075c.281-.552.403-1.155.461-1.869c.057-.697.057-1.563.057-2.655V9.367c0-1.092 0-1.958-.057-2.655c-.058-.714-.18-1.317-.46-1.868a4.75 4.75 0 0 0-2.076-2.076c-.552-.281-1.155-.403-1.869-.461c-.697-.057-1.563-.057-2.655-.057zm-.617 7a3.25 3.25 0 1 1 6.5 0a3.25 3.25 0 0 1-6.5 0"/><path d="M16.263 21.74a421 421 0 0 0-.012-2.202C16.117 16.93 14.114 15.61 12 15.61s-4.117 1.32-4.251 3.928c-.002.035-.006.81-.012 2.202c.48.01 1.02.01 1.63.01h5.266c.61 0 1.15 0 1.63-.01"/></g>`), g.Group(children),
	)
}

func UserWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83"/><path d="M14.5 9.25a2.5 2.5 0 1 1-5 0a2.5 2.5 0 0 1 5 0M17 19.2c-.317-6.187-9.683-6.187-10 0"/></g>`), g.Group(children),
	)
}

func UserWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M12 7.5a1.75 1.75 0 1 0 0 3.5a1.75 1.75 0 0 0 0-3.5"/><path d="M13.435 2.075a3.33 3.33 0 0 0-2.87 0c-.394.189-.755.497-1.26.928l-.079.066a2.56 2.56 0 0 1-1.58.655l-.102.008c-.662.053-1.135.09-1.547.236a3.33 3.33 0 0 0-2.03 2.029c-.145.412-.182.885-.235 1.547l-.008.102a2.56 2.56 0 0 1-.655 1.58l-.066.078c-.431.506-.74.867-.928 1.261a3.33 3.33 0 0 0 0 2.87c.189.394.497.755.928 1.26l.066.079c.41.48.604.939.655 1.58l.008.102c.053.662.09 1.135.236 1.547a3.33 3.33 0 0 0 2.029 2.03q.122.042.253.074l.001-.645C6.434 15.883 9.272 14.11 12 14.11s5.566 1.773 5.749 5.352v.645q.132-.032.254-.075a3.33 3.33 0 0 0 2.03-2.029c.145-.412.182-.885.235-1.547l.008-.102c.05-.629.238-1.09.655-1.58l.066-.079c.431-.505.74-.866.928-1.26a3.33 3.33 0 0 0 0-2.87c-.189-.394-.497-.755-.928-1.26l-.066-.079a2.56 2.56 0 0 1-.655-1.58l-.008-.102c-.053-.662-.09-1.135-.236-1.547a3.33 3.33 0 0 0-2.029-2.03c-.412-.145-.885-.182-1.547-.235l-.102-.008a2.56 2.56 0 0 1-1.58-.655l-.079-.066c-.505-.431-.866-.74-1.26-.928M8.75 9.25a3.25 3.25 0 1 1 6.5 0a3.25 3.25 0 0 1-6.5 0"/><path d="m16.256 20.285l-.005-.747C16.117 16.93 14.114 15.61 12 15.61s-4.117 1.32-4.251 3.928c-.001.02-.003.276-.005.747c.58.061 1.019.25 1.482.646l.078.066c.506.431.867.74 1.261.928a3.33 3.33 0 0 0 2.87 0c.394-.189.755-.497 1.26-.928l.079-.066c.455-.388.891-.583 1.482-.646"/></g>`), g.Group(children),
	)
}

func UserX(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M15 7.5a3 3 0 1 1-6 0a3 3 0 0 1 6 0m4.5 13c-.475-9.333-14.525-9.333-15 0m6.086-3l2.828 2.828m0-2.828l-2.828 2.828"/>`), g.Group(children),
	)
}

func UserXSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.25 7.5a3.75 3.75 0 1 1 7.5 0a3.75 3.75 0 0 1-7.5 0m11.999 12.962c-.262-5.148-4.307-7.712-8.249-7.712s-7.987 2.563-8.249 7.712a.75.75 0 0 0 .71.787c3.365.171 12.998.106 15.077 0a.75.75 0 0 0 .711-.787M10.055 15.22a.75.75 0 0 1 1.061 0l.884.883l.884-.883a.75.75 0 0 1 1.06 1.06l-.883.884l.883.884a.75.75 0 0 1-1.06 1.06L12 18.226l-.884.884a.75.75 0 1 1-1.06-1.06l.883-.885l-.884-.884a.75.75 0 0 1 0-1.06"/>`), g.Group(children),
	)
}

func Users(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M21 19.75c0-2.09-1.67-5.068-4-5.727m-2 5.727c0-2.651-2.686-6-6-6s-6 3.349-6 6m9-12.5a3 3 0 1 1-6 0a3 3 0 0 1 6 0m3 3a3 3 0 1 0 0-6"/>`), g.Group(children),
	)
}

func UsersGroup(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M17 19.5c0-1.657-2.239-3-5-3s-5 1.343-5 3m14-3c0-1.23-1.234-2.287-3-2.75M3 16.5c0-1.23 1.234-2.287 3-2.75m12-4.014a3 3 0 1 0-4-4.472M6 9.736a3 3 0 0 1 4-4.472m2 8.236a3 3 0 1 1 0-6a3 3 0 0 1 0 6"/>`), g.Group(children),
	)
}

func UsersGroupSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M5.75 7.5A2.25 2.25 0 0 1 9.5 5.823a.75.75 0 0 0 1-1.118a3.75 3.75 0 1 0-5 5.59a.75.75 0 0 0 1-1.118A2.24 2.24 0 0 1 5.75 7.5M16 3.75a3.74 3.74 0 0 0-2.5.955a.75.75 0 0 0 1 1.118a2.25 2.25 0 0 1 3 3.355a.75.75 0 0 0 1 1.117A3.75 3.75 0 0 0 16 3.75"/><path d="M12 6.75a3.75 3.75 0 1 0 0 7.5a3.75 3.75 0 0 0 0-7.5m-5.81 7.726a.75.75 0 0 0-.38-1.452c-.97.255-1.836.682-2.474 1.256c-.64.575-1.086 1.336-1.086 2.22a.75.75 0 0 0 1.5 0c0-.346.17-.729.59-1.105c.42-.378 1.054-.71 1.85-.92m12-1.45a.75.75 0 0 0-.38 1.45c.796.21 1.43.542 1.85.92c.42.376.59.76.59 1.105a.75.75 0 0 0 1.5 0c0-.884-.446-1.645-1.086-2.22c-.638-.574-1.504-1.001-2.474-1.255M12 15.75c-1.493 0-2.881.362-3.921.986c-1.025.615-1.829 1.569-1.829 2.764a.75.75 0 0 0 1.5 0c0-.462.316-1.007 1.1-1.478c.77-.462 1.882-.772 3.15-.772s2.38.31 3.15.772c.784.47 1.1 1.017 1.1 1.478a.75.75 0 0 0 1.5 0c0-1.195-.804-2.15-1.829-2.764c-1.04-.624-2.428-.986-3.921-.986"/></g>`), g.Group(children),
	)
}

func UsersSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9 13c-1.915 0-3.603.965-4.792 2.245c-1.182 1.273-1.958 2.948-1.958 4.505c0 .414.336.75.75.75h12a.75.75 0 0 0 .75-.75c0-1.558-.775-3.232-1.958-4.505C12.602 13.965 10.915 13 9 13m8.204.301a.75.75 0 0 0-.408 1.444c.933.264 1.801 1.019 2.45 2.014c.647.995 1.004 2.122 1.004 2.99a.75.75 0 0 0 1.5 0c0-1.22-.478-2.627-1.248-3.808c-.769-1.181-1.9-2.244-3.298-2.64M9 3.5A3.75 3.75 0 1 0 9 11a3.75 3.75 0 0 0 0-7.5m6 0a.75.75 0 0 0-.75.75v6c0 .414.336.75.75.75a3.75 3.75 0 1 0 0-7.5"/>`), g.Group(children),
	)
}

func Video(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3 15.75v-7.5a2 2 0 0 1 2-2h8.5a2 2 0 0 1 2 2v7.5a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2m17.168-8.759l-4 3.563a.5.5 0 0 0-.168.373v1.778a.5.5 0 0 0 .168.373l4 3.563a.5.5 0 0 0 .832-.374V7.365a.5.5 0 0 0-.832-.374"/>`), g.Group(children),
	)
}

func VideoSlash(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m20.168 6.991l-4 3.563a.5.5 0 0 0-.168.373v1.778a.5.5 0 0 0 .168.373l4 3.563a.5.5 0 0 0 .832-.374V7.365a.5.5 0 0 0-.832-.374M3 15.75v-7.5a2 2 0 0 1 2-2h8.5M3 21l3.25-3.25M21 3l-5.5 5.5m0 0v7.25a2 2 0 0 1-2 2H6.25M15.5 8.5l-9.25 9.25"/>`), g.Group(children),
	)
}

func VideoSlashSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M5 5.5a2.75 2.75 0 0 0-2.75 2.75v7.5a2.75 2.75 0 0 0 2.237 2.702L2.47 20.47a.75.75 0 1 0 1.06 1.06l3.03-3.03h6.94a2.75 2.75 0 0 0 2.75-2.75v-1.594l3.419 3.045c.805.717 2.081.145 2.081-.934V7.365c0-1.08-1.276-1.651-2.081-.934L16.25 9.476V8.81l5.28-5.28a.75.75 0 0 0-1.06-1.061l-4.523 4.523A2.75 2.75 0 0 0 13.5 5.5z"/>`), g.Group(children),
	)
}

func VideoSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M5 5.5a2.75 2.75 0 0 0-2.75 2.75v7.5A2.75 2.75 0 0 0 5 18.5h8.5a2.75 2.75 0 0 0 2.75-2.75v-1.594l3.419 3.045c.805.717 2.081.145 2.081-.934V7.365c0-1.08-1.276-1.651-2.081-.934L16.25 9.476V8.25A2.75 2.75 0 0 0 13.5 5.5z"/>`), g.Group(children),
	)
}

func VolumeCheck(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M13 3v18c-3.5 0-6.1-4.58-6.1-4.58s-3.9.586-3.9-1V8.505c0-1.586 3.9-1 3.9-1S9.5 3 13 3m3.36 9.323l1.379 1.575a.3.3 0 0 0 .466-.022l2.8-3.876"/>`), g.Group(children),
	)
}

func VolumeCheckSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M6.748 6.369a14 14 0 0 0-.231.337l-.165-.015a11 11 0 0 0-1.442-.03c-.518.028-1.119.11-1.614.337c-.52.24-1.046.713-1.046 1.507v6.914c0 .795.525 1.268 1.046 1.508c.495.227 1.097.309 1.614.337a11 11 0 0 0 1.603-.044a14.3 14.3 0 0 0 1.58 2.007C9.218 20.41 10.93 21.75 13 21.75a.75.75 0 0 0 .75-.75V3a.75.75 0 0 0-.75-.75c-2.065 0-3.776 1.315-4.902 2.482a14 14 0 0 0-1.35 1.637m14.865 4.071a.75.75 0 1 0-1.216-.88l-2.467 3.417l-1.005-1.148a.75.75 0 0 0-1.13.987l1.38 1.576c.443.507 1.244.47 1.639-.077z"/>`), g.Group(children),
	)
}

func VolumeHigh(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M13 3v18c-3.5 0-6.1-4.58-6.1-4.58s-3.9.586-3.9-1V8.505c0-1.586 3.9-1 3.9-1S9.5 3 13 3m5.1 16c3.866-3.866 3.866-10.134 0-14"/><path d="M16 16a5.657 5.657 0 0 0 0-8"/></g>`), g.Group(children),
	)
}

func VolumeHighSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M17.57 4.47a.75.75 0 0 1 1.06 0c4.16 4.159 4.16 10.901 0 15.06a.75.75 0 1 1-1.06-1.06a9.15 9.15 0 0 0 0-12.94a.75.75 0 0 1 0-1.06"/><path d="M15.47 7.47a.75.75 0 0 1 1.06 0a6.407 6.407 0 0 1 0 9.06a.75.75 0 1 1-1.06-1.06a4.907 4.907 0 0 0 0-6.94a.75.75 0 0 1 0-1.06M6.748 6.369a14 14 0 0 0-.231.337l-.165-.015a11 11 0 0 0-1.442-.03c-.518.028-1.119.11-1.614.337c-.52.24-1.046.713-1.046 1.507v6.914c0 .795.525 1.268 1.046 1.508c.495.227 1.097.309 1.614.337a11 11 0 0 0 1.603-.044a14.3 14.3 0 0 0 1.58 2.007C9.218 20.41 10.93 21.75 13 21.75a.75.75 0 0 0 .75-.75V3a.75.75 0 0 0-.75-.75c-2.065 0-3.776 1.315-4.902 2.482a14 14 0 0 0-1.35 1.637"/></g>`), g.Group(children),
	)
}

func VolumeLow(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M13 3v18c-3.5 0-6.1-4.58-6.1-4.58s-3.9.586-3.9-1V8.505c0-1.586 3.9-1 3.9-1S9.5 3 13 3m3 13a5.657 5.657 0 0 0 0-8"/>`), g.Group(children),
	)
}

func VolumeLowSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M15.47 7.47a.75.75 0 0 1 1.06 0a6.407 6.407 0 0 1 0 9.06a.75.75 0 1 1-1.06-1.06a4.907 4.907 0 0 0 0-6.94a.75.75 0 0 1 0-1.06M6.748 6.369a14 14 0 0 0-.231.337l-.165-.015a11 11 0 0 0-1.442-.03c-.518.028-1.119.11-1.614.337c-.52.24-1.046.713-1.046 1.507v6.914c0 .795.525 1.268 1.046 1.508c.495.227 1.097.309 1.614.337a11 11 0 0 0 1.603-.044a14.3 14.3 0 0 0 1.58 2.007C9.218 20.41 10.93 21.75 13 21.75a.75.75 0 0 0 .75-.75V3a.75.75 0 0 0-.75-.75c-2.065 0-3.776 1.315-4.902 2.482a14 14 0 0 0-1.35 1.637"/>`), g.Group(children),
	)
}

func VolumeMinus(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M13 3v18c-3.5 0-6.1-4.58-6.1-4.58s-3.9.586-3.9-1V8.505c0-1.586 3.9-1 3.9-1S9.5 3 13 3m3 9h5"/>`), g.Group(children),
	)
}

func VolumeMinusSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M15.25 12a.75.75 0 0 1 .75-.75h5a.75.75 0 0 1 0 1.5h-5a.75.75 0 0 1-.75-.75M6.748 6.369a14 14 0 0 0-.231.337l-.165-.015a11 11 0 0 0-1.442-.03c-.518.028-1.119.11-1.614.337c-.52.24-1.046.713-1.046 1.507v6.914c0 .795.525 1.268 1.046 1.508c.495.227 1.097.309 1.614.337a11 11 0 0 0 1.603-.044a14.3 14.3 0 0 0 1.58 2.007C9.218 20.41 10.93 21.75 13 21.75a.75.75 0 0 0 .75-.75V3a.75.75 0 0 0-.75-.75c-2.065 0-3.776 1.315-4.902 2.482a14 14 0 0 0-1.35 1.637"/>`), g.Group(children),
	)
}

func VolumeNone(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M13 3v18c-3.5 0-6.1-4.58-6.1-4.58s-3.9.586-3.9-1V8.505c0-1.586 3.9-1 3.9-1S9.5 3 13 3"/>`), g.Group(children),
	)
}

func VolumeNoneSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M6.748 6.369a14 14 0 0 0-.231.337l-.165-.015a11 11 0 0 0-1.442-.03c-.518.028-1.119.11-1.614.337c-.52.24-1.046.713-1.046 1.507v6.914c0 .795.525 1.268 1.046 1.508c.495.227 1.097.309 1.614.337a11 11 0 0 0 1.603-.044a14.3 14.3 0 0 0 1.58 2.007C9.218 20.41 10.93 21.75 13 21.75a.75.75 0 0 0 .75-.75V3a.75.75 0 0 0-.75-.75c-2.065 0-3.776 1.315-4.902 2.482a14 14 0 0 0-1.35 1.637"/>`), g.Group(children),
	)
}

func VolumePlus(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M13 3v18c-3.5 0-6.1-4.58-6.1-4.58s-3.9.586-3.9-1V8.505c0-1.586 3.9-1 3.9-1S9.5 3 13 3m3 9h5m-2.5-2.5v5"/>`), g.Group(children),
	)
}

func VolumePlusSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M18.5 8.75a.75.75 0 0 1 .75.75v1.75H21a.75.75 0 0 1 0 1.5h-1.75v1.75a.75.75 0 0 1-1.5 0v-1.75H16a.75.75 0 0 1 0-1.5h1.75V9.5a.75.75 0 0 1 .75-.75M6.748 6.369a14 14 0 0 0-.231.337l-.165-.015a11 11 0 0 0-1.442-.03c-.518.028-1.119.11-1.614.337c-.52.24-1.046.713-1.046 1.507v6.914c0 .795.525 1.268 1.046 1.508c.495.227 1.097.309 1.614.337a11 11 0 0 0 1.603-.044a14.3 14.3 0 0 0 1.58 2.007C9.218 20.41 10.93 21.75 13 21.75a.75.75 0 0 0 .75-.75V3a.75.75 0 0 0-.75-.75c-2.065 0-3.776 1.315-4.902 2.482a14 14 0 0 0-1.35 1.637"/>`), g.Group(children),
	)
}

func VolumeSlash(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M18.1 19c3.715-3.715 3.86-9.648.436-13.536M16 16a5.657 5.657 0 0 0 0-8M3 21l4.16-4.16M21 3l-2.464 2.464m0 0L13 11m0 0v10c-2.846 0-5.098-3.029-5.84-4.16M13 11l-5.84 5.84M13 7V3C9.5 3 6.9 7.505 6.9 7.505S3 6.92 3 8.505v6.914c0 .39.236.65.59.818"/>`), g.Group(children),
	)
}

func VolumeSlashSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M18.63 19.53a.75.75 0 1 1-1.06-1.06c3.24-3.24 3.542-8.305.907-11.886L17.03 8.031a6.41 6.41 0 0 1-.5 8.5a.75.75 0 1 1-1.06-1.061a4.91 4.91 0 0 0 .49-6.37l-2.21 2.21V21a.75.75 0 0 1-.75.75c-2.07 0-3.782-1.34-4.907-2.524A14 14 0 0 1 7.06 18l-3.53 3.53a.75.75 0 0 1-1.06-1.06l3.198-3.198c-.24.006-.498.005-.758-.008c-.518-.028-1.119-.11-1.614-.337c-.52-.24-1.046-.713-1.046-1.508V8.506c0-.794.525-1.267 1.046-1.507c.495-.228 1.097-.31 1.614-.337a11 11 0 0 1 1.607.045a14 14 0 0 1 1.58-1.974C9.225 3.565 10.936 2.25 13 2.25a.75.75 0 0 1 .75.75v6.19l3.746-3.746a.75.75 0 0 1 1.048-1.049L20.47 2.47a.75.75 0 1 1 1.06 1.06l-1.982 1.983c3.215 4.176 2.91 10.19-.917 14.017"/>`), g.Group(children),
	)
}

func VolumeX(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M13 3v18c-3.5 0-6.1-4.58-6.1-4.58s-3.9.586-3.9-1V8.505c0-1.586 3.9-1 3.9-1S9.5 3 13 3m4 7l4 4m0-4l-4 4"/>`), g.Group(children),
	)
}

func VolumeXSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M16.47 9.47a.75.75 0 0 1 1.06 0L19 10.94l1.47-1.47a.75.75 0 1 1 1.06 1.06L20.06 12l1.47 1.47a.75.75 0 1 1-1.06 1.06L19 13.06l-1.47 1.47a.75.75 0 1 1-1.06-1.06L17.94 12l-1.47-1.47a.75.75 0 0 1 0-1.06M6.748 6.369a14 14 0 0 0-.231.337l-.165-.015a11 11 0 0 0-1.442-.03c-.518.028-1.119.11-1.614.337c-.52.24-1.046.713-1.046 1.507v6.914c0 .795.525 1.268 1.046 1.508c.495.227 1.097.309 1.614.337a11 11 0 0 0 1.603-.044a14.3 14.3 0 0 0 1.58 2.007C9.218 20.41 10.93 21.75 13 21.75a.75.75 0 0 0 .75-.75V3a.75.75 0 0 0-.75-.75c-2.065 0-3.776 1.315-4.902 2.482a14 14 0 0 0-1.35 1.637"/>`), g.Group(children),
	)
}

func Watch(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M15.667 7c-.316-1.377-.418-4-2.348-4H10.68C8.751 3 8.65 5.623 8.333 7m0 10c.316 1.377.418 4 2.348 4h2.638c1.93 0 2.032-2.623 2.348-4m1.833-7v4c0 1.657-1.231 3-2.75 3h-5.5c-1.519 0-2.75-1.343-2.75-3v-4c0-1.657 1.231-3 2.75-3h5.5c1.519 0 2.75 1.343 2.75 3"/><path d="M12 10v2.5l1.604 1"/></g>`), g.Group(children),
	)
}

func WatchSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.681 2.25c-.673 0-1.224.237-1.649.634c-.404.378-.66.87-.834 1.34a9 9 0 0 0-.373 1.429l-.092.504q-.048.276-.095.51C6.498 7.303 5.75 8.586 5.75 10v4c0 1.415.748 2.698 1.888 3.332q.047.235.095.511q.04.23.092.504c.086.45.198.956.373 1.43c.174.47.43.961.834 1.34c.425.396.976.633 1.65.633h2.637c.673 0 1.224-.237 1.649-.634c.405-.378.66-.87.834-1.34c.175-.473.287-.979.373-1.429l.092-.504q.048-.276.095-.51c1.14-.635 1.888-1.918 1.888-3.333v-4c0-1.415-.748-2.698-1.888-3.332a23 23 0 0 1-.095-.511l-.092-.504a9 9 0 0 0-.373-1.43c-.174-.47-.43-.961-.834-1.34a2.35 2.35 0 0 0-1.65-.633zm-1.431 4h-.01l.059-.315c.082-.43.175-.837.306-1.191c.133-.358.285-.609.452-.765c.147-.138.333-.229.624-.229h2.638c.291 0 .477.091.624.23c.167.155.32.406.452.764c.13.354.224.762.306 1.19q.03.153.058.316h-.009zm.049 11.815a11 11 0 0 1-.058-.315h5.519l-.059.315a7.6 7.6 0 0 1-.306 1.191c-.133.358-.285.609-.452.765c-.147.138-.333.229-.624.229H10.68c-.291 0-.477-.091-.624-.23c-.167-.155-.32-.406-.452-.764a7.6 7.6 0 0 1-.306-1.19M12.75 10v2.084l1.25.78a.75.75 0 0 1-.793 1.272l-1.604-1a.75.75 0 0 1-.353-.636V10a.75.75 0 0 1 1.5 0"/>`), g.Group(children),
	)
}

func Waves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83"/>`), g.Group(children),
	)
}

func WavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M13.435 2.075a3.33 3.33 0 0 0-2.87 0c-.394.189-.755.497-1.26.928l-.079.066a2.56 2.56 0 0 1-1.58.655l-.102.008c-.662.053-1.135.09-1.547.236a3.33 3.33 0 0 0-2.03 2.029c-.145.412-.182.885-.235 1.547l-.008.102a2.56 2.56 0 0 1-.655 1.58l-.066.078c-.431.506-.74.867-.928 1.261a3.33 3.33 0 0 0 0 2.87c.189.394.497.755.928 1.26l.066.079c.41.48.604.939.655 1.58l.008.102c.053.662.09 1.135.236 1.547a3.33 3.33 0 0 0 2.029 2.03c.412.145.885.182 1.547.235l.102.008c.629.05 1.09.238 1.58.655l.078.066c.506.431.867.74 1.261.928a3.33 3.33 0 0 0 2.87 0c.394-.189.755-.497 1.26-.928l.079-.066c.48-.41.939-.604 1.58-.655l.102-.008c.662-.053 1.135-.09 1.547-.236a3.33 3.33 0 0 0 2.03-2.029c.145-.412.182-.885.235-1.547l.008-.102c.05-.629.238-1.09.655-1.58l.066-.079c.431-.505.74-.866.928-1.26a3.33 3.33 0 0 0 0-2.87c-.189-.394-.497-.755-.928-1.26l-.066-.079a2.56 2.56 0 0 1-.655-1.58l-.008-.102c-.053-.662-.09-1.135-.236-1.547a3.33 3.33 0 0 0-2.029-2.03c-.412-.145-.885-.182-1.547-.235l-.102-.008a2.56 2.56 0 0 1-1.58-.655l-.079-.066c-.505-.431-.866-.74-1.26-.928"/>`), g.Group(children),
	)
}

func Webcam(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M12 17.4A7.2 7.2 0 1 0 12 3a7.2 7.2 0 0 0 0 14.4m0 0V21m-4.5 0h9m-1.8-10.8a2.7 2.7 0 1 1-5.4 0a2.7 2.7 0 0 1 5.4 0"/>`), g.Group(children),
	)
}

func WebcamSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M4.05 10.2a7.95 7.95 0 1 1 8.7 7.915v2.135h3.75a.75.75 0 1 1 0 1.5h-9a.75.75 0 0 1 0-1.5h3.75v-2.135a7.95 7.95 0 0 1-7.2-7.915m6 0a1.95 1.95 0 1 0 3.9 0a1.95 1.95 0 0 0-3.9 0"/>`), g.Group(children),
	)
}

func Wheel(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M19.794 16.5A9 9 0 0 1 7.5 19.794M19.794 16.5A9 9 0 0 0 16.5 4.206M19.794 16.5L13.732 13M7.5 19.794A9 9 0 0 1 4.206 7.5M7.5 19.794l3.5-6.062M4.206 7.5A9 9 0 0 1 16.5 4.206M4.206 7.5l6.062 3.5M16.5 4.206L13 10.268M13.732 13a2 2 0 0 1-2.732.732M13.732 13A2 2 0 0 0 13 10.268m-2 3.464A2 2 0 0 1 10.268 11m0 0A2 2 0 0 1 13 10.268m.932 1.214l6.761-1.811m-8.175 4.26l1.811 6.762m-4.26-8.175l-6.762 1.811m8.175-4.26L9.671 3.306"/>`), g.Group(children),
	)
}

func WheelSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="m5.26 7.242l4.823 2.785q.233-.225.508-.389l-1.442-5.38a8.2 8.2 0 0 0-3.89 2.984m5.338-3.372l1.441 5.38q.319.004.635.083l2.785-4.824a8.2 8.2 0 0 0-4.861-.64m6.16 1.39l-2.785 4.823q.225.234.389.508l5.38-1.442a8.2 8.2 0 0 0-2.984-3.89m3.372 5.338l-5.38 1.441a2.7 2.7 0 0 1-.083.635l4.824 2.785a8.2 8.2 0 0 0 .64-4.861m-1.39 6.16l-4.823-2.785q-.234.225-.508.389l1.442 5.38a8.2 8.2 0 0 0 3.89-2.984m-5.338 3.372l-1.441-5.38a2.7 2.7 0 0 1-.635-.083L8.541 19.49a8.2 8.2 0 0 0 4.861.64m-6.16-1.39l2.785-4.823a2.7 2.7 0 0 1-.389-.508l-5.38 1.442a8.2 8.2 0 0 0 2.984 3.89M3.87 13.403l5.38-1.441q.004-.319.083-.635L4.509 8.541a8.2 8.2 0 0 0-.64 4.861m-.314-6.277C6.25 2.462 12.212.864 16.875 3.556s6.261 8.656 3.569 13.319s-8.656 6.261-13.32 3.569C2.463 17.75.865 11.788 3.557 7.125"/>`), g.Group(children),
	)
}

func Wheelchair(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M14.449 16.4A4.802 4.802 0 0 1 5 15.2a4.8 4.8 0 0 1 2.8-4.365"/><path d="m9.8 7.2l.695 6.258a1 1 0 0 0 1.051.888l5.044-.288a1 1 0 0 1 1.056.953l.11 2.434a1 1 0 0 0 1 .955H19"/><path d="M11.2 5.6a1.6 1.6 0 1 1-3.2 0a1.6 1.6 0 0 1 3.2 0m1.55 4.8h3"/></g>`), g.Group(children),
	)
}

func WheelchairSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M7.938 3.938a2.35 2.35 0 1 1 2.675 3.783l.628 5.654a.25.25 0 0 0 .263.222l5.043-.288a1.75 1.75 0 0 1 1.848 1.668l.11 2.434a.25.25 0 0 0 .25.239H19a.75.75 0 0 1 0 1.5h-.244a1.75 1.75 0 0 1-1.749-1.67l-.11-2.435a.25.25 0 0 0-.264-.239l-5.044.289A1.75 1.75 0 0 1 9.75 13.54L9.123 7.9a2.35 2.35 0 0 1-1.185-3.963M12 10.4a.75.75 0 0 1 .75-.75h3a.75.75 0 0 1 0 1.5h-3a.75.75 0 0 1-.75-.75m-3.518.122a.75.75 0 0 1-.37.995a4.05 4.05 0 1 0 5.61 4.696a.75.75 0 1 1 1.453.374A5.552 5.552 0 0 1 4.25 15.2a5.55 5.55 0 0 1 3.237-5.046a.75.75 0 0 1 .995.368"/>`), g.Group(children),
	)
}

func Wifi(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M2 9.483c5.603-5.31 14.397-5.31 20 0"/><path d="M19 12.9c-3.866-3.867-10.134-3.867-14 0m11 3.257a5.657 5.657 0 0 0-8 0m4 3.093v-.5"/></g>`), g.Group(children),
	)
}

func WifiCheck(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M2 9.483A14.5 14.5 0 0 1 12 5.5m3 .822l1.379 1.576a.3.3 0 0 0 .466-.022L19.645 4M19 12.9c-3.866-3.867-10.134-3.867-14 0m11 3.257a5.657 5.657 0 0 0-8 0m4 3.093v-.5"/>`), g.Group(children),
	)
}

func WifiCheckSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12 6.25c-3.415 0-6.827 1.26-9.484 3.777a.75.75 0 0 1-1.032-1.089A15.25 15.25 0 0 1 12 4.75a.75.75 0 0 1 0 1.5m-7.53 7.18a.75.75 0 0 1 0-1.06c4.159-4.16 10.901-4.16 15.06 0a.75.75 0 1 1-1.06 1.06a9.15 9.15 0 0 0-12.94 0a.75.75 0 0 1-1.06 0m3 3.257a.75.75 0 0 1 0-1.06a6.407 6.407 0 0 1 9.06 0a.75.75 0 0 1-1.06 1.06a4.907 4.907 0 0 0-6.94 0a.75.75 0 0 1-1.06 0M12 18a.75.75 0 0 1 .75.75v.5a.75.75 0 0 1-1.5 0v-.5A.75.75 0 0 1 12 18m8.253-13.56a.75.75 0 0 0-1.216-.88L16.57 6.978L15.564 5.83a.75.75 0 1 0-1.128.987l1.378 1.576a1.05 1.05 0 0 0 1.64-.077z"/>`), g.Group(children),
	)
}

func WifiLow(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M16 16.157a5.657 5.657 0 0 0-8 0m4 3.093v-.5"/>`), g.Group(children),
	)
}

func WifiLowSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M7.47 15.627a6.407 6.407 0 0 1 9.06 0a.75.75 0 0 1-1.06 1.06a4.907 4.907 0 0 0-6.94 0a.75.75 0 1 1-1.06-1.06M12 18a.75.75 0 0 1 .75.75v.5a.75.75 0 0 1-1.5 0v-.5A.75.75 0 0 1 12 18"/>`), g.Group(children),
	)
}

func WifiMedium(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M19 12.9c-3.866-3.867-10.134-3.867-14 0m11 3.257a5.657 5.657 0 0 0-8 0m4 3.093v-.5"/>`), g.Group(children),
	)
}

func WifiMediumSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M4.47 12.37c4.159-4.16 10.901-4.16 15.06 0a.75.75 0 1 1-1.06 1.06a9.15 9.15 0 0 0-12.94 0a.75.75 0 0 1-1.06-1.06m3 3.257a6.407 6.407 0 0 1 9.06 0a.75.75 0 0 1-1.06 1.06a4.907 4.907 0 0 0-6.94 0a.75.75 0 1 1-1.06-1.06M12 18a.75.75 0 0 1 .75.75v.5a.75.75 0 0 1-1.5 0v-.5A.75.75 0 0 1 12 18"/>`), g.Group(children),
	)
}

func WifiMinus(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M2 9.483A14.5 14.5 0 0 1 12 5.5m7 7.4c-3.866-3.867-10.134-3.867-14 0M15.5 6h5M16 16.157a5.657 5.657 0 0 0-8 0m4 3.093v-.5"/>`), g.Group(children),
	)
}

func WifiMinusSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M12 6.25c-3.415 0-6.827 1.26-9.484 3.777a.75.75 0 0 1-1.032-1.089A15.25 15.25 0 0 1 12 4.75a.75.75 0 0 1 0 1.5M14.75 6a.75.75 0 0 1 .75-.75h5a.75.75 0 0 1 0 1.5h-5a.75.75 0 0 1-.75-.75M4.47 13.43a.75.75 0 0 1 0-1.06c4.159-4.16 10.901-4.16 15.06 0a.75.75 0 1 1-1.06 1.06a9.15 9.15 0 0 0-12.94 0a.75.75 0 0 1-1.06 0m3 3.257a.75.75 0 0 1 0-1.06a6.407 6.407 0 0 1 9.06 0a.75.75 0 0 1-1.06 1.06a4.907 4.907 0 0 0-6.94 0a.75.75 0 0 1-1.06 0M12 18a.75.75 0 0 1 .75.75v.5a.75.75 0 0 1-1.5 0v-.5A.75.75 0 0 1 12 18"/>`), g.Group(children),
	)
}

func WifiPlus(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M2 9.483A14.5 14.5 0 0 1 12 5.5m7 7.4c-3.866-3.867-10.134-3.867-14 0M15.5 6h5M18 3.5v5m-2 7.657a5.657 5.657 0 0 0-8 0m4 3.093v-.5"/>`), g.Group(children),
	)
}

func WifiPlusSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M18 2.75a.75.75 0 0 1 .75.75v1.75h1.75a.75.75 0 0 1 0 1.5h-1.75V8.5a.75.75 0 0 1-1.5 0V6.75H15.5a.75.75 0 0 1 0-1.5h1.75V3.5a.75.75 0 0 1 .75-.75m-6 3.5c-3.415 0-6.827 1.26-9.484 3.777a.75.75 0 0 1-1.032-1.089A15.25 15.25 0 0 1 12 4.75a.75.75 0 0 1 0 1.5m-7.53 7.18a.75.75 0 0 1 0-1.06c4.159-4.16 10.901-4.16 15.06 0a.75.75 0 1 1-1.06 1.06a9.15 9.15 0 0 0-12.94 0a.75.75 0 0 1-1.06 0m3 3.257a.75.75 0 0 1 0-1.06a6.407 6.407 0 0 1 9.06 0a.75.75 0 0 1-1.06 1.06a4.907 4.907 0 0 0-6.94 0a.75.75 0 0 1-1.06 0M12 18a.75.75 0 0 1 .75.75v.5a.75.75 0 0 1-1.5 0v-.5A.75.75 0 0 1 12 18"/>`), g.Group(children),
	)
}

func WifiSlash(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M22 9.483a14.5 14.5 0 0 0-4.5-2.907M19 12.9a9.85 9.85 0 0 0-5-2.697M5 12.9a9.86 9.86 0 0 1 4-2.437m3 8.787v-.5M3 21L21 3M2 9.483A14.5 14.5 0 0 1 12 5.5m4 10.657a5.657 5.657 0 0 0-8 0"/>`), g.Group(children),
	)
}

func WifiSlashSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M21.53 2.47a.75.75 0 0 1 0 1.06l-2.783 2.784a15.3 15.3 0 0 1 3.769 2.624a.75.75 0 0 1-1.032 1.089a13.7 13.7 0 0 0-3.865-2.585L15.29 9.769c1.55.503 3.009 1.37 4.24 2.6a.75.75 0 1 1-1.061 1.06a9.1 9.1 0 0 0-4.396-2.442l-2.805 2.805a6.4 6.4 0 0 1 5.261 1.835a.75.75 0 0 1-1.06 1.06a4.907 4.907 0 0 0-6.94 0a.75.75 0 0 1-.356.2L3.53 21.53a.75.75 0 0 1-1.06-1.06l18-18a.75.75 0 0 1 1.06 0M12 6.25c-3.415 0-6.827 1.26-9.484 3.777a.75.75 0 0 1-1.032-1.089A15.25 15.25 0 0 1 12 4.75a.75.75 0 0 1 0 1.5m-2.285 3.987a.75.75 0 0 1-.488.941A9.1 9.1 0 0 0 5.53 13.43a.75.75 0 0 1-1.06-1.06a10.6 10.6 0 0 1 4.303-2.622a.75.75 0 0 1 .942.489M12 18a.75.75 0 0 1 .75.75v.5a.75.75 0 0 1-1.5 0v-.5A.75.75 0 0 1 12 18"/>`), g.Group(children),
	)
}

func WifiSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M21.484 10.027c-5.314-5.036-13.654-5.036-18.968 0a.75.75 0 1 1-1.032-1.089c5.893-5.584 15.14-5.584 21.032 0a.75.75 0 0 1-1.032 1.09M4.47 12.37c4.159-4.159 10.901-4.159 15.06 0a.75.75 0 0 1-1.06 1.06a9.15 9.15 0 0 0-12.94 0a.75.75 0 1 1-1.06-1.06m3 3.258a6.407 6.407 0 0 1 9.06 0a.75.75 0 0 1-1.06 1.06a4.907 4.907 0 0 0-6.94 0a.75.75 0 0 1-1.06-1.06M12 18a.75.75 0 0 1 .75.75v.5a.75.75 0 0 1-1.5 0v-.5A.75.75 0 0 1 12 18"/>`), g.Group(children),
	)
}

func WifiX(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M2 9.483A14.5 14.5 0 0 1 12 5.5M16 4l4 4m0-4l-4 4m3 4.9c-3.866-3.867-10.134-3.867-14 0m11 3.257a5.657 5.657 0 0 0-8 0m4 3.093v-.5"/>`), g.Group(children),
	)
}

func WifiXSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M15.47 3.47a.75.75 0 0 1 1.06 0L18 4.94l1.47-1.47a.75.75 0 1 1 1.06 1.06L19.06 6l1.47 1.47a.75.75 0 0 1-1.06 1.06L18 7.06l-1.47 1.47a.75.75 0 1 1-1.06-1.06L16.94 6l-1.47-1.47a.75.75 0 0 1 0-1.06M12 6.25c-3.415 0-6.827 1.26-9.484 3.777a.75.75 0 0 1-1.032-1.089A15.25 15.25 0 0 1 12 4.75a.75.75 0 0 1 0 1.5m-7.53 7.18a.75.75 0 0 1 0-1.06c4.159-4.16 10.901-4.16 15.06 0a.75.75 0 1 1-1.06 1.06a9.15 9.15 0 0 0-12.94 0a.75.75 0 0 1-1.06 0m3 3.257a.75.75 0 0 1 0-1.06a6.407 6.407 0 0 1 9.06 0a.75.75 0 0 1-1.06 1.06a4.907 4.907 0 0 0-6.94 0a.75.75 0 0 1-1.06 0M12 18a.75.75 0 0 1 .75.75v.5a.75.75 0 0 1-1.5 0v-.5A.75.75 0 0 1 12 18"/>`), g.Group(children),
	)
}

func Winds(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M18.325 7c3.485 0 3.485 5 0 5H3m15.411 9c3.452 0 3.452-5 0-5H3m7.872-13c3.506 0 3.506 5 0 5H3"/>`), g.Group(children),
	)
}

func WindsSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M17.575 7a.75.75 0 0 1 .75-.75c1.063 0 1.921.388 2.51 1.02c.577.622.854 1.436.854 2.23s-.277 1.608-.855 2.23c-.588.632-1.446 1.02-2.51 1.02H3a.75.75 0 0 1 0-1.5h15.325c.679 0 1.128-.237 1.41-.542c.294-.316.454-.752.454-1.208s-.16-.892-.453-1.208c-.283-.305-.732-.542-1.411-.542a.75.75 0 0 1-.75-.75M2.25 16a.75.75 0 0 1 .75-.75h15.411c1.057 0 1.91.39 2.493 1.023c.573.622.846 1.435.846 2.227s-.273 1.605-.846 2.227c-.583.633-1.436 1.023-2.493 1.023a.75.75 0 0 1 0-1.5c.668 0 1.11-.235 1.39-.54c.29-.315.449-.752.449-1.21s-.159-.895-.45-1.21c-.279-.305-.72-.54-1.389-.54H3a.75.75 0 0 1-.75-.75"/><path d="M10.122 3a.75.75 0 0 1 .75-.75c1.067 0 1.928.387 2.52 1.019c.58.622.86 1.436.86 2.231s-.28 1.61-.86 2.231c-.592.632-1.453 1.019-2.52 1.019H3a.75.75 0 0 1 0-1.5h7.872c.685 0 1.139-.238 1.424-.543c.295-.316.455-.752.455-1.207s-.16-.89-.455-1.207c-.285-.305-.739-.543-1.424-.543a.75.75 0 0 1-.75-.75"/></g>`), g.Group(children),
	)
}

func Wine(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M8.4 21h7.2M12 21v-6.75m-.75 0h1.5a5 5 0 0 0 5-5V3.5a.5.5 0 0 0-.5-.5H6.75a.5.5 0 0 0-.5.5v5.75a5 5 0 0 0 5 5"/>`), g.Group(children),
	)
}

func WineSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M6.75 2.25c-.69 0-1.25.56-1.25 1.25v5.75A5.75 5.75 0 0 0 11.25 15v5.25H8.4a.75.75 0 0 0 0 1.5h7.2a.75.75 0 0 0 0-1.5h-2.85V15a5.75 5.75 0 0 0 5.75-5.75V3.5c0-.69-.56-1.25-1.25-1.25z"/>`), g.Group(children),
	)
}

func WinkCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9 15c.85.63 1.885 1 3 1s2.15-.37 3-1m-.5-4.5V10m-5.5.5h1"/><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/></g>`), g.Group(children),
	)
}

func WinkCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0 5.385 4.365 9.75 9.75 9.75s9.75-4.365 9.75-9.75S17.385 2.25 12 2.25S2.25 6.615 2.25 12m6-1.5A.75.75 0 0 1 9 9.75h1a.75.75 0 1 1 0 1.5H9a.75.75 0 0 1-.75-.75m7-.5v.5a.75.75 0 1 1-1.5 0V10a.75.75 0 0 1 1.5 0m-6.852 4.553a.75.75 0 0 1 1.049-.155c.728.54 1.607.852 2.553.852s1.825-.313 2.553-.852a.75.75 0 1 1 .894 1.204A5.77 5.77 0 0 1 12 16.75a5.77 5.77 0 0 1-3.447-1.148a.75.75 0 0 1-.155-1.049"/>`), g.Group(children),
	)
}

func WinkGhost(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9 15c.85.63 1.885 1 3 1s2.15-.37 3-1m-.5-4.5V10"/><path d="M3 18.562v-6.518C3 7.05 7.03 3 12 3s9 4.05 9 9.044v6.517c0 1.162-.967 2.519-2 2c-.835-.42-2.223-.52-3 0c-.874.585-2.126.585-3 0c-.885-.593-1.649-.57-2.5 0c-.874.585-2.126.585-3 0c-.777-.52-1.665-.42-2.5 0c-1.033.519-2-.838-2-2M9 10.5h1"/></g>`), g.Group(children),
	)
}

func WinkGhostSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12.044v6.517c0 .764.308 1.57.8 2.127c.501.567 1.354 1.012 2.287.543c.696-.35 1.275-.363 1.746-.047c1.126.755 2.708.755 3.834 0c.345-.23.607-.308.825-.31c.218-.001.485.072.84.31c1.127.755 2.709.755 3.835 0c.213-.142.58-.237 1.044-.226c.454.01.898.12 1.202.273c.933.469 1.786.024 2.287-.543c.492-.557.8-1.363.8-2.126v-6.518c0-5.405-4.362-9.794-9.75-9.794s-9.75 4.389-9.75 9.794m6.148 2.51a.75.75 0 0 1 1.049-.156c.728.54 1.607.852 2.553.852s1.825-.313 2.553-.852a.75.75 0 1 1 .894 1.204A5.77 5.77 0 0 1 12 16.75a5.77 5.77 0 0 1-3.447-1.148a.75.75 0 0 1-.155-1.049M9 9.75h1a.75.75 0 1 1 0 1.5H9a.75.75 0 0 1 0-1.5m5.5-.5a.75.75 0 0 1 .75.75v.5a.75.75 0 1 1-1.5 0V10a.75.75 0 0 1 .75-.75"/>`), g.Group(children),
	)
}

func WinkSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9 15c.85.63 1.885 1 3 1s2.15-.37 3-1m-.5-4.5V10m-5.5.5h1"/><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/></g>`), g.Group(children),
	)
}

func WinkSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25c-1.092 0-1.958 0-2.655.057c-.714.058-1.317.18-1.868.46a4.75 4.75 0 0 0-2.076 2.077c-.281.55-.403 1.154-.461 1.868c-.057.697-.057 1.563-.057 2.655v5.266c0 1.092 0 1.958.057 2.655c.058.714.18 1.317.46 1.869a4.75 4.75 0 0 0 2.077 2.075c.55.281 1.154.403 1.868.461c.697.057 1.563.057 2.655.057h5.266c1.092 0 1.958 0 2.655-.057c.714-.058 1.317-.18 1.869-.46a4.75 4.75 0 0 0 2.075-2.076c.281-.552.403-1.155.461-1.869c.057-.697.057-1.563.057-2.655V9.367c0-1.092 0-1.958-.057-2.655c-.058-.714-.18-1.317-.46-1.868a4.75 4.75 0 0 0-2.076-2.076c-.552-.281-1.155-.403-1.869-.461c-.697-.057-1.563-.057-2.655-.057zm-.97 12.303a.75.75 0 0 1 1.05-.155c.728.54 1.607.852 2.553.852s1.825-.313 2.553-.852a.75.75 0 1 1 .894 1.204A5.77 5.77 0 0 1 12 16.75a5.77 5.77 0 0 1-3.447-1.148a.75.75 0 0 1-.155-1.049M9 9.75h1a.75.75 0 1 1 0 1.5H9a.75.75 0 0 1 0-1.5m5.5-.5a.75.75 0 0 1 .75.75v.5a.75.75 0 1 1-1.5 0V10a.75.75 0 0 1 .75-.75"/>`), g.Group(children),
	)
}

func Wrench(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9.917 7.076a.947.947 0 0 1 0 1.326L8.402 9.917a.947.947 0 0 1-1.326 0L4.528 7.37c-.495-.494-1.327-.333-1.446.356a5.682 5.682 0 0 0 6.626 6.554c.82-.15 1.707-.022 2.296.566l5.566 5.567a2.01 2.01 0 1 0 2.842-2.842l-5.567-5.566c-.588-.589-.716-1.477-.566-2.296a5.684 5.684 0 0 0-6.554-6.626c-.689.12-.85.951-.356 1.446z"/>`), g.Group(children),
	)
}

func WrenchSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M7.598 2.343a6.433 6.433 0 0 1 7.419 7.5c-.125.682.008 1.28.359 1.63l5.566 5.567a2.76 2.76 0 0 1-3.902 3.902l-5.566-5.566c-.35-.35-.949-.484-1.63-.36a6.434 6.434 0 0 1-7.5-7.418a1.495 1.495 0 0 1 1.154-1.226c.54-.123 1.133.04 1.56.467l2.545 2.544a.197.197 0 0 0 .272 0l1.508-1.508a.197.197 0 0 0 0-.272L6.84 5.058a1.69 1.69 0 0 1-.467-1.56c.127-.56.562-1.04 1.226-1.155"/>`), g.Group(children),
	)
}

func X(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M18 6L6 18M6 6l12 12"/>`), g.Group(children),
	)
}

func XCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-6-3l-6 6m0-6l6 6"/>`), g.Group(children),
	)
}

func XCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12m6.22-3.53a.75.75 0 0 0 0 1.06L10.94 12l-2.47 2.47a.75.75 0 1 0 1.06 1.06L12 13.06l2.47 2.47a.75.75 0 0 0 1.06-1.06L13.06 12l2.47-2.47a.75.75 0 0 0-1.06-1.06L12 10.94L9.53 8.47a.75.75 0 0 0-1.06 0"/>`), g.Group(children),
	)
}

func XDiamond(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M2.707 10.295a2.41 2.41 0 0 0 0 3.41l7.588 7.588a2.41 2.41 0 0 0 3.41 0l7.588-7.588a2.41 2.41 0 0 0 0-3.41l-7.588-7.588a2.41 2.41 0 0 0-3.41 0zM15 9l-6 6m0-6l6 6"/>`), g.Group(children),
	)
}

func XDiamondSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.79 1.49a3.2 3.2 0 0 0-1.025.686L2.177 9.765a3.16 3.16 0 0 0 0 4.47l7.588 7.588a3.16 3.16 0 0 0 4.47 0l7.588-7.588a3.16 3.16 0 0 0 0-4.47l-7.588-7.588a3.16 3.16 0 0 0-3.445-.686M8.47 8.47a.75.75 0 0 1 1.06 0L12 10.94l2.47-2.47a.75.75 0 1 1 1.06 1.06L13.06 12l2.47 2.47a.75.75 0 0 1-1.06 1.06L12 13.06l-2.47 2.47a.75.75 0 0 1-1.06-1.06L10.94 12L8.47 9.53a.75.75 0 0 1 0-1.06"/>`), g.Group(children),
	)
}

func XHexagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M20.5 15.8V8.2a1.91 1.91 0 0 0-.944-1.645l-6.612-3.8a1.88 1.88 0 0 0-1.888 0l-6.612 3.8A1.9 1.9 0 0 0 3.5 8.2v7.602a1.91 1.91 0 0 0 .944 1.644l6.612 3.8a1.88 1.88 0 0 0 1.888 0l6.612-3.8A1.9 1.9 0 0 0 20.5 15.8M15 9l-6 6m0-6l6 6"/>`), g.Group(children),
	)
}

func XHexagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="m10.68 2.105l-6.61 3.8l-.002.002A2.65 2.65 0 0 0 2.75 8.198v7.603a2.64 2.64 0 0 0 1.318 2.292l.003.002l6.608 3.799h.002a2.63 2.63 0 0 0 2.639 0h.001l6.608-3.8h.003A2.65 2.65 0 0 0 21.25 15.8V8.2a2.65 2.65 0 0 0-1.318-2.292l-6.61-3.8l-.002-.002a2.63 2.63 0 0 0-2.64 0M8.47 8.47a.75.75 0 0 1 1.06 0L12 10.94l2.47-2.47a.75.75 0 1 1 1.06 1.06L13.06 12l2.47 2.47a.75.75 0 0 1-1.06 1.06L12 13.06l-2.47 2.47a.75.75 0 0 1-1.06-1.06L10.94 12L8.47 9.53a.75.75 0 0 1 0-1.06"/>`), g.Group(children),
	)
}

func XOctagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M7.805 3.469C8.16 3.115 8.451 3 8.937 3h6.126c.486 0 .778.115 1.132.469l4.336 4.336c.354.354.469.646.469 1.132v6.126c0 .5-.125.788-.469 1.132l-4.336 4.336c-.354.354-.646.469-1.132.469H8.937c-.5 0-.788-.125-1.132-.469L3.47 16.195c-.355-.355-.47-.646-.47-1.132V8.937c0-.5.125-.788.469-1.132zM15 9l-6 6m0-6l6 6"/>`), g.Group(children),
	)
}

func XOctagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.037 2.408c-.299.122-.54.31-.762.53L2.938 7.275c-.213.214-.4.45-.525.748a2.3 2.3 0 0 0-.163.914v6.126c0 .302.036.602.158.9s.31.54.53.762l4.337 4.337c.214.213.45.4.748.524c.298.125.601.164.914.164h6.126c.302 0 .602-.035.9-.158c.299-.122.54-.31.762-.53l4.337-4.337c.213-.214.4-.45.524-.748a2.3 2.3 0 0 0 .164-.914V8.937a2.3 2.3 0 0 0-.158-.9a2.3 2.3 0 0 0-.53-.762l-4.337-4.337a2.3 2.3 0 0 0-.762-.53a2.3 2.3 0 0 0-.9-.158H8.937a2.3 2.3 0 0 0-.9.158M8.47 8.47a.75.75 0 0 1 1.06 0L12 10.94l2.47-2.47a.75.75 0 1 1 1.06 1.06L13.06 12l2.47 2.47a.75.75 0 0 1-1.06 1.06L12 13.06l-2.47 2.47a.75.75 0 0 1-1.06-1.06L10.94 12L8.47 9.53a.75.75 0 0 1 0-1.06"/>`), g.Group(children),
	)
}

func XSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M6.707 5.293a1 1 0 0 0-1.414 1.414L10.586 12l-5.293 5.293a1 1 0 1 0 1.414 1.414L12 13.414l5.293 5.293a1 1 0 0 0 1.414-1.414L13.414 12l5.293-5.293a1 1 0 0 0-1.414-1.414L12 10.586z"/>`), g.Group(children),
	)
}

func XSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6zM15 9l-6 6m0-6l6 6"/>`), g.Group(children),
	)
}

func XSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25c-1.092 0-1.958 0-2.655.057c-.714.058-1.317.18-1.868.46a4.75 4.75 0 0 0-2.076 2.077c-.281.55-.403 1.154-.461 1.868c-.057.697-.057 1.563-.057 2.655v5.266c0 1.092 0 1.958.057 2.655c.058.714.18 1.317.46 1.869a4.75 4.75 0 0 0 2.077 2.075c.55.281 1.154.403 1.868.461c.697.057 1.563.057 2.655.057h5.266c1.092 0 1.958 0 2.655-.057c.714-.058 1.317-.18 1.869-.46a4.75 4.75 0 0 0 2.075-2.076c.281-.552.403-1.155.461-1.869c.057-.697.057-1.563.057-2.655V9.367c0-1.092 0-1.958-.057-2.655c-.058-.714-.18-1.317-.46-1.868a4.75 4.75 0 0 0-2.076-2.076c-.552-.281-1.155-.403-1.869-.461c-.697-.057-1.563-.057-2.655-.057zM8.47 8.47a.75.75 0 0 1 1.06 0L12 10.94l2.47-2.47a.75.75 0 1 1 1.06 1.06L13.06 12l2.47 2.47a.75.75 0 0 1-1.06 1.06L12 13.06l-2.47 2.47a.75.75 0 0 1-1.06-1.06L10.94 12L8.47 9.53a.75.75 0 0 1 0-1.06"/>`), g.Group(children),
	)
}

func XTriangle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M5.98 10.762C8.608 5.587 9.92 3 12 3s3.393 2.587 6.02 7.762l.327.644c2.182 4.3 3.274 6.45 2.287 8.022C19.648 21 17.208 21 12.327 21h-.654c-4.88 0-7.321 0-8.307-1.572s.105-3.722 2.287-8.022zM14 11.5l-4 4m0-4l4 4"/>`), g.Group(children),
	)
}

func XTriangleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.583 4.507c-.948 1.338-1.953 3.318-3.24 5.853l-.39.768c-1.065 2.098-1.904 3.75-2.344 5.076c-.448 1.348-.55 2.552.121 3.623c.67 1.066 1.801 1.511 3.22 1.719c1.398.204 3.272.204 5.656.204h.788c2.384 0 4.258 0 5.656-.204c1.419-.208 2.55-.653 3.22-1.72c.671-1.07.569-2.274.12-3.622c-.44-1.325-1.278-2.978-2.343-5.076l-.39-.769c-1.287-2.534-2.292-4.514-3.24-5.852C14.462 3.159 13.418 2.25 12 2.25s-2.462.91-3.417 2.257m.887 6.463a.75.75 0 0 1 1.06 0L12 12.44l1.47-1.47a.75.75 0 1 1 1.06 1.06l-1.47 1.47l1.47 1.47a.75.75 0 1 1-1.06 1.06L12 14.56l-1.47 1.47a.75.75 0 1 1-1.06-1.06l1.47-1.47l-1.47-1.47a.75.75 0 0 1 0-1.06"/>`), g.Group(children),
	)
}

func XWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83M15 9l-6 6m0-6l6 6"/>`), g.Group(children),
	)
}

func XWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.565 2.075c-.394.189-.755.497-1.26.928l-.079.066a2.56 2.56 0 0 1-1.58.655l-.102.008c-.662.053-1.135.09-1.547.236a3.33 3.33 0 0 0-2.03 2.029c-.145.412-.182.885-.235 1.547l-.008.102a2.56 2.56 0 0 1-.655 1.58l-.066.078c-.431.506-.74.867-.928 1.261a3.33 3.33 0 0 0 0 2.87c.189.394.497.755.928 1.26l.066.079c.41.48.604.939.655 1.58l.008.102c.053.662.09 1.135.236 1.547a3.33 3.33 0 0 0 2.029 2.03c.412.145.885.182 1.547.235l.102.008c.629.05 1.09.238 1.58.655l.079.066c.505.431.866.74 1.26.928a3.33 3.33 0 0 0 2.87 0c.394-.189.755-.497 1.26-.928l.079-.066c.48-.41.939-.604 1.58-.655l.102-.008c.662-.053 1.135-.09 1.547-.236a3.33 3.33 0 0 0 2.03-2.029c.145-.412.182-.885.235-1.547l.008-.102c.05-.629.238-1.09.655-1.58l.066-.079c.431-.505.74-.866.928-1.26a3.33 3.33 0 0 0 0-2.87c-.189-.394-.497-.755-.928-1.26l-.066-.079a2.56 2.56 0 0 1-.655-1.58l-.008-.102c-.053-.662-.09-1.135-.236-1.547a3.33 3.33 0 0 0-2.029-2.03c-.412-.145-.885-.182-1.547-.235l-.102-.008a2.56 2.56 0 0 1-1.58-.655l-.079-.066c-.505-.431-.866-.74-1.26-.928a3.33 3.33 0 0 0-2.87 0M8.47 8.47a.75.75 0 0 1 1.06 0L12 10.94l2.47-2.47a.75.75 0 1 1 1.06 1.06L13.06 12l2.47 2.47a.75.75 0 0 1-1.06 1.06L12 13.06l-2.47 2.47a.75.75 0 0 1-1.06-1.06L10.94 12L8.47 9.53a.75.75 0 0 1 0-1.06"/>`), g.Group(children),
	)
}

func Yen(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M17.455 12H12m0 0H6.545M12 12L6 3.5m6 8.5l6-8.5M12 12v4.25m5.454 0H12m0 0H6.545m5.455 0v4.25"/>`), g.Group(children),
	)
}

func YenCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-5.818.5H12m0 0H8.818m3.182 0l-3.5-5m3.5 5l3.5-5m-3.5 5V15m3.182 0H12m0 0H8.818M12 15v2.5"/>`), g.Group(children),
	)
}

func YenCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M2.25 12c0 5.385 4.365 9.75 9.75 9.75s9.75-4.365 9.75-9.75S17.385 2.25 12 2.25S2.25 6.615 2.25 12m5.82-5.114a.75.75 0 0 1 1.044.184L12 11.192l2.886-4.122a.75.75 0 0 1 1.229.86l-2.674 3.82h1.74a.75.75 0 0 1 0 1.5h-2.43v1h2.43a.75.75 0 0 1 0 1.5h-2.43v1.75a.75.75 0 0 1-1.5 0v-1.75H8.817a.75.75 0 0 1 0-1.5h2.432v-1H8.818a.75.75 0 0 1 0-1.5h1.742L7.886 7.93a.75.75 0 0 1 .184-1.044"/>`), g.Group(children),
	)
}

func YenDiamond(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M2.707 10.295a2.41 2.41 0 0 0 0 3.41l7.588 7.588a2.41 2.41 0 0 0 3.41 0l7.588-7.588a2.41 2.41 0 0 0 0-3.41l-7.588-7.588a2.41 2.41 0 0 0-3.41 0zM15.182 12.5H12m0 0H8.818m3.182 0l-3.5-5m3.5 5l3.5-5m-3.5 5V15m3.182 0H12m0 0H8.818M12 15v2.5"/>`), g.Group(children),
	)
}

func YenDiamondSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.79 1.49a3.2 3.2 0 0 0-1.025.686L2.177 9.765a3.16 3.16 0 0 0 0 4.47l7.588 7.588a3.16 3.16 0 0 0 4.47 0l7.588-7.588a3.16 3.16 0 0 0 0-4.47l-7.588-7.588a3.16 3.16 0 0 0-3.445-.686M8.07 6.887a.75.75 0 0 1 1.044.184L12 11.192l2.886-4.122a.75.75 0 0 1 1.229.86l-2.674 3.82h1.74a.75.75 0 0 1 0 1.5h-2.43v1h2.43a.75.75 0 0 1 0 1.5h-2.43v1.75a.75.75 0 0 1-1.5 0v-1.75H8.817a.75.75 0 0 1 0-1.5h2.432v-1H8.818a.75.75 0 0 1 0-1.5h1.742L7.886 7.93a.75.75 0 0 1 .184-1.044"/>`), g.Group(children),
	)
}

func YenHexagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M20.5 15.8V8.2a1.91 1.91 0 0 0-.944-1.645l-6.612-3.8a1.88 1.88 0 0 0-1.888 0l-6.612 3.8A1.9 1.9 0 0 0 3.5 8.2v7.602a1.91 1.91 0 0 0 .944 1.644l6.612 3.8a1.88 1.88 0 0 0 1.888 0l6.612-3.8A1.9 1.9 0 0 0 20.5 15.8m-5.318-3.3H12m0 0H8.818m3.182 0l-3.5-5m3.5 5l3.5-5m-3.5 5V15m3.182 0H12m0 0H8.818M12 15v2.5"/>`), g.Group(children),
	)
}

func YenHexagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="m10.68 2.105l-6.61 3.8l-.002.002A2.65 2.65 0 0 0 2.75 8.198v7.603a2.64 2.64 0 0 0 1.318 2.292l.003.002l6.608 3.799h.002a2.63 2.63 0 0 0 2.639 0h.001l6.608-3.8h.003A2.65 2.65 0 0 0 21.25 15.8V8.2a2.65 2.65 0 0 0-1.318-2.292l-6.61-3.8l-.002-.002a2.63 2.63 0 0 0-2.64 0m-2.61 4.78a.75.75 0 0 1 1.044.185L12 11.192l2.886-4.122a.75.75 0 0 1 1.229.86l-2.674 3.82h1.74a.75.75 0 0 1 0 1.5h-2.43v1h2.43a.75.75 0 0 1 0 1.5h-2.43v1.75a.75.75 0 0 1-1.5 0v-1.75H8.817a.75.75 0 0 1 0-1.5h2.432v-1H8.818a.75.75 0 0 1 0-1.5h1.742L7.886 7.93a.75.75 0 0 1 .184-1.044"/>`), g.Group(children),
	)
}

func YenOctagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M7.805 3.469C8.16 3.115 8.451 3 8.937 3h6.126c.486 0 .778.115 1.132.469l4.336 4.336c.354.354.469.646.469 1.132v6.126c0 .5-.125.788-.469 1.132l-4.336 4.336c-.354.354-.646.469-1.132.469H8.937c-.5 0-.788-.125-1.132-.469L3.47 16.195c-.355-.355-.47-.646-.47-1.132V8.937c0-.5.125-.788.469-1.132zm7.377 9.031H12m0 0H8.818m3.182 0l-3.5-5m3.5 5l3.5-5m-3.5 5V15m3.182 0H12m0 0H8.818M12 15v2.5"/>`), g.Group(children),
	)
}

func YenOctagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M8.037 2.408c-.299.122-.54.31-.762.53L2.938 7.275c-.213.214-.4.45-.525.748a2.3 2.3 0 0 0-.163.914v6.126c0 .302.036.602.158.9s.31.54.53.762l4.337 4.337c.214.213.45.4.748.524c.298.125.601.164.914.164h6.126c.302 0 .602-.035.9-.158c.299-.122.54-.31.762-.53l4.337-4.337c.213-.214.4-.45.524-.748a2.3 2.3 0 0 0 .164-.914V8.937a2.3 2.3 0 0 0-.158-.9a2.3 2.3 0 0 0-.53-.762l-4.337-4.337a2.3 2.3 0 0 0-.762-.53a2.3 2.3 0 0 0-.9-.158H8.937a2.3 2.3 0 0 0-.9.158m.033 4.478a.75.75 0 0 1 1.044.184L12 11.192l2.886-4.122a.75.75 0 0 1 1.229.86l-2.674 3.82h1.74a.75.75 0 0 1 0 1.5h-2.43v1h2.43a.75.75 0 0 1 0 1.5h-2.43v1.75a.75.75 0 0 1-1.5 0v-1.75H8.817a.75.75 0 0 1 0-1.5h2.432v-1H8.818a.75.75 0 0 1 0-1.5h1.742L7.886 7.93a.75.75 0 0 1 .184-1.044"/>`), g.Group(children),
	)
}

func YenSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M5.568 2.887a.75.75 0 0 1 1.045.18L12 10.7l5.387-7.633a.75.75 0 0 1 1.226.866l-5.165 7.317h4.007a.75.75 0 0 1 0 1.5H12.75v2.75h4.705a.75.75 0 0 1 0 1.5H12.75v3.5a.75.75 0 0 1-1.5 0V17H6.546a.75.75 0 0 1 0-1.5h4.704v-2.75H6.546a.75.75 0 0 1 0-1.5h4.007L5.387 3.933a.75.75 0 0 1 .18-1.046"/>`), g.Group(children),
	)
}

func YenSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6zm12.182 3.1H12m0 0H8.818m3.182 0l-3.5-5m3.5 5l3.5-5m-3.5 5V15m3.182 0H12m0 0H8.818M12 15v2.5"/>`), g.Group(children),
	)
}

func YenSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M9.367 2.25c-1.092 0-1.958 0-2.655.057c-.714.058-1.317.18-1.868.46a4.75 4.75 0 0 0-2.076 2.077c-.281.55-.403 1.154-.461 1.868c-.057.697-.057 1.563-.057 2.655v5.266c0 1.092 0 1.958.057 2.655c.058.714.18 1.317.46 1.869a4.75 4.75 0 0 0 2.077 2.075c.55.281 1.154.403 1.868.461c.697.057 1.563.057 2.655.057h5.266c1.092 0 1.958 0 2.655-.057c.714-.058 1.317-.18 1.869-.46a4.75 4.75 0 0 0 2.075-2.076c.281-.552.403-1.155.461-1.869c.057-.697.057-1.563.057-2.655V9.367c0-1.092 0-1.958-.057-2.655c-.058-.714-.18-1.317-.46-1.868a4.75 4.75 0 0 0-2.076-2.076c-.552-.281-1.155-.403-1.869-.461c-.697-.057-1.563-.057-2.655-.057zM8.07 6.886a.75.75 0 0 1 1.044.184L12 11.192l2.886-4.122a.75.75 0 0 1 1.229.86l-2.674 3.82h1.74a.75.75 0 0 1 0 1.5h-2.43v1h2.43a.75.75 0 0 1 0 1.5h-2.43v1.75a.75.75 0 0 1-1.5 0v-1.75H8.817a.75.75 0 0 1 0-1.5h2.432v-1H8.818a.75.75 0 0 1 0-1.5h1.742L7.886 7.93a.75.75 0 0 1 .184-1.044"/>`), g.Group(children),
	)
}

func YenWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83m5.469 8.859H12m0 0H8.818m3.182 0l-3.5-5m3.5 5l3.5-5m-3.5 5V15m3.182 0H12m0 0H8.818M12 15v2.5"/>`), g.Group(children),
	)
}

func YenWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M10.565 2.075c-.394.189-.755.497-1.26.928l-.079.066a2.56 2.56 0 0 1-1.58.655l-.102.008c-.662.053-1.135.09-1.547.236a3.33 3.33 0 0 0-2.03 2.029c-.145.412-.182.885-.235 1.547l-.008.102a2.56 2.56 0 0 1-.655 1.58l-.066.078c-.431.506-.74.867-.928 1.261a3.33 3.33 0 0 0 0 2.87c.189.394.497.755.928 1.26l.066.079c.41.48.604.939.655 1.58l.008.102c.053.662.09 1.135.236 1.547a3.33 3.33 0 0 0 2.029 2.03c.412.145.885.182 1.547.235l.102.008c.629.05 1.09.238 1.58.655l.079.066c.505.431.866.74 1.26.928a3.33 3.33 0 0 0 2.87 0c.394-.189.755-.497 1.26-.928l.079-.066c.48-.41.939-.604 1.58-.655l.102-.008c.662-.053 1.135-.09 1.547-.236a3.33 3.33 0 0 0 2.03-2.029c.145-.412.182-.885.235-1.547l.008-.102c.05-.629.238-1.09.655-1.58l.066-.079c.431-.505.74-.866.928-1.26a3.33 3.33 0 0 0 0-2.87c-.189-.394-.497-.755-.928-1.26l-.066-.079a2.56 2.56 0 0 1-.655-1.58l-.008-.102c-.053-.662-.09-1.135-.236-1.547a3.33 3.33 0 0 0-2.029-2.03c-.412-.145-.885-.182-1.547-.235l-.102-.008a2.56 2.56 0 0 1-1.58-.655l-.079-.066c-.505-.431-.866-.74-1.26-.928a3.33 3.33 0 0 0-2.87 0M8.07 6.885a.75.75 0 0 1 1.044.185L12 11.192l2.886-4.122a.75.75 0 0 1 1.229.86l-2.674 3.82h1.74a.75.75 0 0 1 0 1.5h-2.43v1h2.43a.75.75 0 0 1 0 1.5h-2.43v1.75a.75.75 0 0 1-1.5 0v-1.75H8.817a.75.75 0 0 1 0-1.5h2.432v-1H8.818a.75.75 0 0 1 0-1.5h1.742L7.886 7.93a.75.75 0 0 1 .184-1.044"/>`), g.Group(children),
	)
}

func Zero(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M8.75 13.875v-3.75a3.125 3.125 0 1 1 6.25 0v3.75a3.125 3.125 0 1 1-6.25 0"/>`), g.Group(children),
	)
}

func ZeroCircle(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0"/><path d="M9.5 13.5v-3a2.5 2.5 0 0 1 5 0v3a2.5 2.5 0 0 1-5 0"/></g>`), g.Group(children),
	)
}

func ZeroCircleSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M10.25 10.5a1.75 1.75 0 1 1 3.5 0v3a1.75 1.75 0 1 1-3.5 0z"/><path d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75s-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12M12 7.25a3.25 3.25 0 0 0-3.25 3.25v3a3.25 3.25 0 0 0 6.5 0v-3A3.25 3.25 0 0 0 12 7.25"/></g>`), g.Group(children),
	)
}

func ZeroDiamond(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9.5 13.5v-3a2.5 2.5 0 0 1 5 0v3a2.5 2.5 0 0 1-5 0"/><path d="M2.707 10.295a2.41 2.41 0 0 0 0 3.41l7.588 7.588a2.41 2.41 0 0 0 3.41 0l7.588-7.588a2.41 2.41 0 0 0 0-3.41l-7.588-7.588a2.41 2.41 0 0 0-3.41 0z"/></g>`), g.Group(children),
	)
}

func ZeroDiamondSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M10.25 10.5a1.75 1.75 0 1 1 3.5 0v3a1.75 1.75 0 1 1-3.5 0z"/><path d="M10.79 1.49a3.16 3.16 0 0 1 3.445.687l7.588 7.588a3.16 3.16 0 0 1 0 4.47l-7.588 7.588a3.16 3.16 0 0 1-4.47 0l-7.588-7.588a3.16 3.16 0 0 1 0-4.47l7.588-7.589a3.2 3.2 0 0 1 1.025-.685M12 7.25a3.25 3.25 0 0 0-3.25 3.25v3a3.25 3.25 0 0 0 6.5 0v-3A3.25 3.25 0 0 0 12 7.25"/></g>`), g.Group(children),
	)
}

func ZeroHexagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9.5 13.5v-3a2.5 2.5 0 0 1 5 0v3a2.5 2.5 0 0 1-5 0"/><path d="M20.5 15.8V8.2a1.91 1.91 0 0 0-.944-1.645l-6.612-3.8a1.88 1.88 0 0 0-1.888 0l-6.612 3.8A1.9 1.9 0 0 0 3.5 8.2v7.602a1.91 1.91 0 0 0 .944 1.644l6.612 3.8a1.88 1.88 0 0 0 1.888 0l6.612-3.8A1.9 1.9 0 0 0 20.5 15.8"/></g>`), g.Group(children),
	)
}

func ZeroHexagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M10.25 10.5a1.75 1.75 0 1 1 3.5 0v3a1.75 1.75 0 1 1-3.5 0z"/><path d="M10.68 2.105a2.63 2.63 0 0 1 2.64 0l.001.001l6.611 3.8A2.65 2.65 0 0 1 21.25 8.2v7.603a2.66 2.66 0 0 1-1.318 2.291l-.003.002l-6.608 3.799h-.002a2.63 2.63 0 0 1-2.639 0h-.001l-6.608-3.8h-.003A2.64 2.64 0 0 1 2.75 15.8V8.198a2.66 2.66 0 0 1 1.318-2.291l.003-.002zM12 7.25a3.25 3.25 0 0 0-3.25 3.25v3a3.25 3.25 0 0 0 6.5 0v-3A3.25 3.25 0 0 0 12 7.25"/></g>`), g.Group(children),
	)
}

func ZeroOctagon(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9.5 13.5v-3a2.5 2.5 0 0 1 5 0v3a2.5 2.5 0 0 1-5 0"/><path d="M7.805 3.469C8.16 3.115 8.451 3 8.937 3h6.126c.486 0 .778.115 1.132.469l4.336 4.336c.354.354.469.646.469 1.132v6.126c0 .5-.125.788-.469 1.132l-4.336 4.336c-.354.354-.646.469-1.132.469H8.937c-.5 0-.788-.125-1.132-.469L3.47 16.195c-.355-.355-.47-.646-.47-1.132V8.937c0-.5.125-.788.469-1.132z"/></g>`), g.Group(children),
	)
}

func ZeroOctagonSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M10.25 10.5a1.75 1.75 0 1 1 3.5 0v3a1.75 1.75 0 1 1-3.5 0z"/><path d="M8.037 2.408a2.3 2.3 0 0 1 .9-.158h6.126c.302 0 .602.036.9.158s.54.31.762.53l4.337 4.337c.22.221.408.463.53.762c.123.298.158.598.158.9v6.126c0 .313-.039.616-.163.914a2.3 2.3 0 0 1-.525.748l-4.337 4.337a2.3 2.3 0 0 1-.762.53a2.3 2.3 0 0 1-.9.158H8.937c-.313 0-.616-.039-.914-.163a2.3 2.3 0 0 1-.748-.525l-4.337-4.337a2.3 2.3 0 0 1-.53-.762a2.3 2.3 0 0 1-.158-.9V8.937c0-.313.039-.616.163-.914a2.3 2.3 0 0 1 .525-.748l4.337-4.337c.221-.22.463-.408.762-.53M12 7.25a3.25 3.25 0 0 0-3.25 3.25v3a3.25 3.25 0 0 0 6.5 0v-3A3.25 3.25 0 0 0 12 7.25"/></g>`), g.Group(children),
	)
}

func ZeroSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<path fill="currentColor" d="M11.875 7.75A2.375 2.375 0 0 0 9.5 10.125v3.75a2.375 2.375 0 1 0 4.75 0v-3.75a2.375 2.375 0 0 0-2.375-2.375M8 10.125a3.875 3.875 0 0 1 7.75 0v3.75a3.875 3.875 0 0 1-7.75 0z"/>`), g.Group(children),
	)
}

func ZeroSquare(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9.5 13.5v-3a2.5 2.5 0 0 1 5 0v3a2.5 2.5 0 0 1-5 0"/><path d="M3 9.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C6.04 3 7.16 3 9.4 3h5.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C21 6.04 21 7.16 21 9.4v5.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C17.96 21 16.84 21 14.6 21H9.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C3 17.96 3 16.84 3 14.6z"/></g>`), g.Group(children),
	)
}

func ZeroSquareSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M10.25 10.5a1.75 1.75 0 1 1 3.5 0v3a1.75 1.75 0 1 1-3.5 0z"/><path d="M9.367 2.25h5.266c1.092 0 1.958 0 2.655.057c.714.058 1.317.18 1.869.46a4.75 4.75 0 0 1 2.075 2.077c.281.55.403 1.154.461 1.868c.057.697.057 1.563.057 2.655v5.266c0 1.092 0 1.958-.057 2.655c-.058.714-.18 1.317-.46 1.869a4.75 4.75 0 0 1-2.076 2.075c-.552.281-1.155.403-1.869.461c-.697.057-1.563.057-2.655.057H9.367c-1.092 0-1.958 0-2.655-.057c-.714-.058-1.317-.18-1.868-.46a4.75 4.75 0 0 1-2.076-2.076c-.281-.552-.403-1.155-.461-1.869c-.057-.697-.057-1.563-.057-2.655V9.367c0-1.092 0-1.958.057-2.655c.058-.714.18-1.317.46-1.868a4.75 4.75 0 0 1 2.077-2.076c.55-.281 1.154-.403 1.868-.461c.697-.057 1.563-.057 2.655-.057m2.633 5a3.25 3.25 0 0 0-3.25 3.25v3a3.25 3.25 0 0 0 6.5 0v-3A3.25 3.25 0 0 0 12 7.25"/></g>`), g.Group(children),
	)
}

func ZeroWaves(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M9.5 13.5v-3a2.5 2.5 0 0 1 5 0v3a2.5 2.5 0 0 1-5 0"/><path d="M9.713 3.64c.581-.495.872-.743 1.176-.888a2.58 2.58 0 0 1 2.222 0c.304.145.595.393 1.176.888c.599.51 1.207.768 2.007.831c.761.061 1.142.092 1.46.204c.734.26 1.312.837 1.571 1.572c.112.317.143.698.204 1.46c.063.8.32 1.407.83 2.006c.496.581.744.872.889 1.176c.336.703.336 1.52 0 2.222c-.145.304-.393.595-.888 1.176a3.3 3.3 0 0 0-.831 2.007c-.061.761-.092 1.142-.204 1.46a2.58 2.58 0 0 1-1.572 1.571c-.317.112-.698.143-1.46.204c-.8.063-1.407.32-2.006.83c-.581.496-.872.744-1.176.889a2.58 2.58 0 0 1-2.222 0c-.304-.145-.595-.393-1.176-.888a3.3 3.3 0 0 0-2.007-.831c-.761-.061-1.142-.092-1.46-.204a2.58 2.58 0 0 1-1.571-1.572c-.112-.317-.143-.698-.204-1.46a3.3 3.3 0 0 0-.83-2.006c-.496-.581-.744-.872-.89-1.176a2.58 2.58 0 0 1 .001-2.222c.145-.304.393-.595.888-1.176c.52-.611.769-1.223.831-2.007c.061-.761.092-1.142.204-1.46a2.58 2.58 0 0 1 1.572-1.571c.317-.112.698-.143 1.46-.204a3.3 3.3 0 0 0 2.006-.83"/></g>`), g.Group(children),
	)
}

func ZeroWavesSolid(children ...g.Node) g.Node {
	return h.SVG(
		viewbox, hAttr,
		g.Raw(`<g fill="currentColor"><path d="M10.25 10.5a1.75 1.75 0 1 1 3.5 0v3a1.75 1.75 0 1 1-3.5 0z"/><path d="M10.565 2.075a3.33 3.33 0 0 1 2.87 0c.394.189.755.497 1.26.928l.079.066c.48.41.939.604 1.58.655l.102.008c.662.053 1.135.09 1.547.236a3.33 3.33 0 0 1 2.03 2.029c.145.412.182.885.235 1.547l.008.102c.051.641.246 1.1.655 1.58l.066.078c.431.506.74.867.928 1.261a3.33 3.33 0 0 1 0 2.87c-.189.394-.497.755-.928 1.26l-.066.079c-.418.49-.605.951-.655 1.58l-.008.102c-.053.662-.09 1.135-.236 1.547a3.33 3.33 0 0 1-2.029 2.03c-.412.145-.885.182-1.547.235l-.102.008c-.641.051-1.1.246-1.58.655l-.079.066c-.505.431-.866.74-1.26.928a3.33 3.33 0 0 1-2.87 0c-.394-.189-.755-.497-1.26-.928l-.079-.066a2.56 2.56 0 0 0-1.58-.655l-.102-.008c-.662-.053-1.135-.09-1.547-.236a3.33 3.33 0 0 1-2.03-2.029c-.145-.412-.182-.885-.235-1.547l-.008-.102a2.56 2.56 0 0 0-.655-1.58l-.066-.079c-.431-.505-.74-.866-.928-1.26a3.33 3.33 0 0 1 0-2.87c.189-.394.497-.755.928-1.26l.066-.079a2.56 2.56 0 0 0 .655-1.58l.008-.102c.053-.662.09-1.135.236-1.547a3.33 3.33 0 0 1 2.029-2.03c.412-.145.885-.182 1.547-.235l.102-.008a2.56 2.56 0 0 0 1.58-.655l.078-.066c.506-.431.867-.74 1.261-.928M12 7.25a3.25 3.25 0 0 0-3.25 3.25v3a3.25 3.25 0 0 0 6.5 0v-3A3.25 3.25 0 0 0 12 7.25"/></g>`), g.Group(children),
	)
}
