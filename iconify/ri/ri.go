package ri

import (
	g "github.com/maragudk/gomponents"
	s "github.com/maragudk/gomponents/svg"
)

const (
	IconifyVersion                = "3.5.0"
	aBPath                        = `<path fill="currentColor" d="M5 15v2c0 1.054.95 2 2 2h3v2H7a4 4 0 0 1-4-4v-2h2Zm13-5l4.4 11h-2.155l-1.201-3h-4.09l-1.199 3h-2.154L16 10h2Zm-1 2.885L15.753 16h2.492L17 12.885ZM3 3h6a3 3 0 0 1 2.235 5A3 3 0 0 1 9 13H3V3Zm6 6H5v2h4a1 1 0 1 0 0-2Zm8-6a4 4 0 0 1 4 4v2h-2V7a2 2 0 0 0-2-2h-3V3h3ZM9 5H5v2h4a1 1 0 0 0 0-2Z"/>`
	accountBoxFillPath            = `<path fill="currentColor" d="M3 4.995C3 3.893 3.893 3 4.995 3h14.01C20.107 3 21 3.893 21 4.995v14.01A1.995 1.995 0 0 1 19.005 21H4.995A1.995 1.995 0 0 1 3 19.005V4.995ZM6.357 18h11.49a6.992 6.992 0 0 0-5.745-3a6.992 6.992 0 0 0-5.745 3ZM12 13a3.5 3.5 0 1 0 0-7a3.5 3.5 0 0 0 0 7Z"/>`
	accountBoxLinePath            = `<path fill="currentColor" d="M3 4.995C3 3.893 3.893 3 4.995 3h14.01C20.107 3 21 3.893 21 4.995v14.01A1.995 1.995 0 0 1 19.005 21H4.995A1.995 1.995 0 0 1 3 19.005V4.995ZM5 5v14h14V5H5Zm2.972 13.18a9.977 9.977 0 0 1-1.751-.978A6.994 6.994 0 0 1 12.102 14c2.4 0 4.517 1.207 5.778 3.047a9.987 9.987 0 0 1-1.724 1.025A4.993 4.993 0 0 0 12.101 16c-1.716 0-3.23.864-4.13 2.18ZM12 13a3.5 3.5 0 1 1 0-7a3.5 3.5 0 0 1 0 7Zm0-2a1.5 1.5 0 1 0 0-3a1.5 1.5 0 0 0 0 3Z"/>`
	accountCircleFillPath         = `<path fill="currentColor" d="M12 2c5.52 0 10 4.48 10 10s-4.48 10-10 10S2 17.52 2 12S6.48 2 12 2ZM6.023 15.416C7.491 17.606 9.695 19 12.16 19c2.464 0 4.669-1.393 6.136-3.584A8.968 8.968 0 0 0 12.16 13a8.968 8.968 0 0 0-6.137 2.416ZM12 11a3 3 0 1 0 0-6a3 3 0 0 0 0 6Z"/>`
	accountCircleLinePath         = `<path fill="currentColor" d="M12 2c5.523 0 10 4.477 10 10s-4.477 10-10 10S2 17.523 2 12S6.477 2 12 2Zm.16 14a6.981 6.981 0 0 0-5.147 2.256A7.966 7.966 0 0 0 12 20a7.97 7.97 0 0 0 5.167-1.892A6.979 6.979 0 0 0 12.16 16ZM12 4a8 8 0 0 0-6.384 12.821A8.975 8.975 0 0 1 12.16 14a8.972 8.972 0 0 1 6.362 2.634A8 8 0 0 0 12 4Zm0 1a4 4 0 1 1 0 8a4 4 0 0 1 0-8Zm0 2a2 2 0 1 0 0 4a2 2 0 0 0 0-4Z"/>`
	accountPinBoxFillPath         = `<path fill="currentColor" d="m14 21l-2 2l-2-2H4.995A1.995 1.995 0 0 1 3 19.005V4.995C3 3.893 3.893 3 4.995 3h14.01C20.107 3 21 3.893 21 4.995v14.01A1.995 1.995 0 0 1 19.005 21H14Zm-7.643-3h11.49a6.992 6.992 0 0 0-5.745-3a6.992 6.992 0 0 0-5.745 3ZM12 13a3.5 3.5 0 1 0 0-7a3.5 3.5 0 0 0 0 7Z"/>`
	accountPinBoxLinePath         = `<path fill="currentColor" d="m14 21l-2 2l-2-2H4.995A1.995 1.995 0 0 1 3 19.005V4.995C3 3.893 3.893 3 4.995 3h14.01C20.107 3 21 3.893 21 4.995v14.01A1.995 1.995 0 0 1 19.005 21H14Zm5-2V5H5v14h5.828L12 20.172L13.172 19H19Zm-11.028-.82a9.977 9.977 0 0 1-1.751-.978A6.994 6.994 0 0 1 12.102 14c2.4 0 4.517 1.207 5.778 3.047a9.987 9.987 0 0 1-1.724 1.025A4.993 4.993 0 0 0 12.101 16c-1.716 0-3.23.864-4.13 2.18ZM12 13a3.5 3.5 0 1 1 0-7a3.5 3.5 0 0 1 0 7Zm0-2a1.5 1.5 0 1 0 0-3a1.5 1.5 0 0 0 0 3Z"/>`
	accountPinCircleFillPath      = `<path fill="currentColor" d="M14.256 21.744L12 24l-2.256-2.256C5.31 20.72 2 16.744 2 12C2 6.48 6.48 2 12 2s10 4.48 10 10c0 4.744-3.31 8.72-7.744 9.744Zm-8.233-6.328C7.491 17.606 9.695 19 12.16 19c2.464 0 4.669-1.393 6.136-3.584A8.968 8.968 0 0 0 12.16 13a8.968 8.968 0 0 0-6.137 2.416ZM12 11a3 3 0 1 0 0-6a3 3 0 0 0 0 6Z"/>`
	accountPinCircleLinePath      = `<path fill="currentColor" d="M9.745 21.745C5.308 20.722 2 16.747 2 12C2 6.477 6.477 2 12 2s10 4.477 10 10c0 4.747-3.308 8.722-7.745 9.745L12 24l-2.255-2.255Zm-2.733-3.488a7.953 7.953 0 0 0 3.182 1.539l.56.129L12 21.172l1.247-1.247l.56-.13a7.955 7.955 0 0 0 3.36-1.686A6.979 6.979 0 0 0 12.16 16c-2.036 0-3.87.87-5.148 2.257ZM5.616 16.82A8.975 8.975 0 0 1 12.16 14a8.972 8.972 0 0 1 6.362 2.634a8 8 0 1 0-12.906.187ZM12 13a4 4 0 1 1 0-8a4 4 0 0 1 0 8Zm0-2a2 2 0 1 0 0-4a2 2 0 0 0 0 4Z"/>`
	addBoxFillPath                = `<path fill="currentColor" d="M4 3h16a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Zm7 8H7v2h4v4h2v-4h4v-2h-4V7h-2v4Z"/>`
	addBoxLinePath                = `<path fill="currentColor" d="M4 3h16a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Zm1 2v14h14V5H5Zm6 6V7h2v4h4v2h-4v4h-2v-4H7v-2h4Z"/>`
	addCircleFillPath             = `<path fill="currentColor" d="M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10Zm-1-11H7v2h4v4h2v-4h4v-2h-4V7h-2v4Z"/>`
	addCircleLinePath             = `<path fill="currentColor" d="M11 11V7h2v4h4v2h-4v4h-2v-4H7v-2h4Zm1 11C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10Zm0-2a8 8 0 1 0 0-16a8 8 0 0 0 0 16Z"/>`
	addFillPath                   = `<path fill="currentColor" d="M11 11V5h2v6h6v2h-6v6h-2v-6H5v-2h6Z"/>`
	addLinePath                   = `<path fill="currentColor" d="M11 11V5h2v6h6v2h-6v6h-2v-6H5v-2h6Z"/>`
	adminFillPath                 = `<path fill="currentColor" d="M12 14v8H4a8 8 0 0 1 8-8Zm0-1c-3.315 0-6-2.685-6-6s2.685-6 6-6s6 2.685 6 6s-2.685 6-6 6Zm9 4h1v5h-8v-5h1v-1a3 3 0 1 1 6 0v1Zm-2 0v-1a1 1 0 1 0-2 0v1h2Z"/>`
	adminLinePath                 = `<path fill="currentColor" d="M12 14v2a6 6 0 0 0-6 6H4a8 8 0 0 1 8-8Zm0-1c-3.315 0-6-2.685-6-6s2.685-6 6-6s6 2.685 6 6s-2.685 6-6 6Zm0-2c2.21 0 4-1.79 4-4s-1.79-4-4-4s-4 1.79-4 4s1.79 4 4 4Zm9 6h1v5h-8v-5h1v-1a3 3 0 1 1 6 0v1Zm-2 0v-1a1 1 0 1 0-2 0v1h2Z"/>`
	advertisementFillPath         = `<path fill="currentColor" d="m7.552 13l.847-2.115L9.244 13H7.552ZM16 12h1v2h-1a1 1 0 1 1 0-2Zm5-9H3a1 1 0 0 0-1 1v16a1 1 0 0 0 1 1h18a1 1 0 0 0 1-1V4a1 1 0 0 0-1-1Zm-8.402 13h-2.155l-.4-1h-3.29l-.4 1H4.199l1.199-2.998l.001-.002l2-5h2l3.199 8ZM17 8h2v8h-3a3 3 0 1 1 0-6h1V8Z"/>`
	advertisementLinePath         = `<path fill="currentColor" d="m12.598 16l-3.2-8h-2l-2 5v.002L4.199 16h2.154l.4-1h3.29l.4 1h2.155Zm-5.046-3l.847-2.115L9.244 13H7.552ZM17 8h2v8h-3a3 3 0 1 1 0-6h1V8Zm-1 4a1 1 0 0 0 0 2h1v-2h-1Zm5-9H3a1 1 0 0 0-1 1v16a1 1 0 0 0 1 1h18a1 1 0 0 0 1-1V4a1 1 0 0 0-1-1ZM4 19V5h16v14H4Z"/>`
	aiGeneratePath                = `<path fill="currentColor" d="M15 5.25A3.25 3.25 0 0 0 18.25 2h1.5A3.25 3.25 0 0 0 23 5.25v1.5A3.25 3.25 0 0 0 19.75 10h-1.5A3.25 3.25 0 0 0 15 6.75v-1.5ZM4 7a2 2 0 0 1 2-2h7V3H6a4 4 0 0 0-4 4v10a4 4 0 0 0 4 4h12a4 4 0 0 0 4-4v-5h-2v5a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V7Z"/>`
	airplayFillPath               = `<path fill="currentColor" d="m12.4 13.533l5 6.667a.5.5 0 0 1-.4.8H7a.5.5 0 0 1-.4-.8l5-6.667a.5.5 0 0 1 .8 0ZM18 19v-2h2V5H4v12h2v2H2.992A.994.994 0 0 1 2 18V4c0-.552.455-1 .992-1h18.016c.548 0 .992.445.992 1v14c0 .552-.455 1-.992 1H18Z"/>`
	airplayLinePath               = `<path fill="currentColor" d="m12.4 13.533l5 6.667a.5.5 0 0 1-.4.8H7a.5.5 0 0 1-.4-.8l5-6.667a.5.5 0 0 1 .8 0ZM12 16.33L10 19h4l-2-2.67ZM18 19v-2h2V5H4v12h2v2H2.992A.994.994 0 0 1 2 18V4c0-.552.455-1 .992-1h18.016c.548 0 .992.445.992 1v14c0 .552-.455 1-.992 1H18Z"/>`
	alarmFillPath                 = `<path fill="currentColor" d="M12 22a9 9 0 1 1 0-18a9 9 0 0 1 0 18Zm1-9V8h-2v7h5v-2h-3ZM1.745 6.283l3.536-3.536l1.414 1.414L3.16 7.697L1.746 6.283Zm16.97-3.536l3.536 3.536l-1.414 1.414l-3.536-3.536l1.415-1.414Z"/>`
	alarmLinePath                 = `<path fill="currentColor" d="M12 22a9 9 0 1 1 0-18a9 9 0 0 1 0 18Zm0-2a7 7 0 1 0 0-14a7 7 0 0 0 0 14Zm1-7h3v2h-5V8h2v5ZM1.745 6.283l3.536-3.536l1.414 1.414L3.16 7.697L1.746 6.283Zm16.97-3.536l3.536 3.536l-1.414 1.414l-3.536-3.536l1.415-1.414Z"/>`
	alarmWarningFillPath          = `<path fill="currentColor" d="M4.001 20v-6a8 8 0 0 1 16 0v6h1v2h-18v-2h1Zm2-6h2a4 4 0 0 1 4-4V8a6 6 0 0 0-6 6Zm5-12h2v3h-2V2Zm8.778 2.808l1.414 1.414l-2.12 2.121l-1.415-1.414l2.121-2.121ZM2.81 6.222l1.414-1.414l2.121 2.12L4.93 8.344L2.809 6.222Z"/>`
	alarmWarningLinePath          = `<path fill="currentColor" d="M4.001 20v-6a8 8 0 0 1 16 0v6h1v2h-18v-2h1Zm2 0h12v-6a6 6 0 0 0-12 0v6Zm5-18h2v3h-2V2Zm8.778 2.808l1.414 1.414l-2.12 2.121l-1.415-1.414l2.121-2.121ZM2.81 6.222l1.414-1.414l2.121 2.12L4.93 8.344L2.809 6.222ZM7 14a5 5 0 0 1 5-5v2a3 3 0 0 0-3 3H7Z"/>`
	albumFillPath                 = `<path fill="currentColor" d="M12 2c5.52 0 10 4.48 10 10s-4.48 10-10 10S2 17.52 2 12S6.48 2 12 2Zm0 14c2.213 0 4-1.787 4-4s-1.787-4-4-4s-4 1.787-4 4s1.787 4 4 4Zm0-5c.55 0 1 .45 1 1s-.45 1-1 1s-1-.45-1-1s.45-1 1-1Z"/>`
	albumLinePath                 = `<path fill="currentColor" d="M12 20a8 8 0 1 0 0-16a8 8 0 0 0 0 16Zm0 2C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10Zm0-8a2 2 0 1 0 0-4a2 2 0 0 0 0 4Zm0 2a4 4 0 1 1 0-8a4 4 0 0 1 0 8Z"/>`
	alertFillPath                 = `<path fill="currentColor" d="m12.865 3l9.526 16.5a1 1 0 0 1-.866 1.5H2.473a1 1 0 0 1-.866-1.5L11.133 3a1 1 0 0 1 1.732 0Zm-1.866 13v2h2v-2h-2Zm0-7v5h2V9h-2Z"/>`
	alertLinePath                 = `<path fill="currentColor" d="m12.865 3l9.526 16.5a1 1 0 0 1-.866 1.5H2.473a1 1 0 0 1-.866-1.5L11.133 3a1 1 0 0 1 1.732 0Zm-8.66 16h15.588L12 5.5L4.205 19Zm6.794-3h2v2h-2v-2Zm0-7h2v5h-2V9Z"/>`
	aliensFillPath                = `<path fill="currentColor" d="M12 2a8.5 8.5 0 0 1 8.5 8.5c0 6.5-5.5 12-8.5 12s-8.5-5.5-8.5-12A8.5 8.5 0 0 1 12 2Zm5.5 10a4.5 4.5 0 0 0-4.475 4.975a4.5 4.5 0 0 0 4.95-4.95A4.565 4.565 0 0 0 17.5 12Zm-11 0c-.16 0-.319.008-.475.025a4.5 4.5 0 0 0 4.95 4.95A4.5 4.5 0 0 0 6.5 12Z"/>`
	aliensLinePath                = `<path fill="currentColor" d="M12 2a8.5 8.5 0 0 1 8.5 8.5c0 6.5-5.5 12-8.5 12s-8.5-5.5-8.5-12A8.5 8.5 0 0 1 12 2Zm0 2a6.5 6.5 0 0 0-6.5 6.5c0 4.794 4.165 10 6.5 10s6.5-5.206 6.5-10A6.5 6.5 0 0 0 12 4Zm5.5 7c.16 0 .319.008.475.025a4.5 4.5 0 0 1-4.95 4.95A4.5 4.5 0 0 1 17.5 11Zm-11 0a4.5 4.5 0 0 1 4.475 4.975a4.5 4.5 0 0 1-4.95-4.95C6.18 11.008 6.34 11 6.5 11Z"/>`
	alignBottomPath               = `<path fill="currentColor" d="M3 19h18v2H3v-2Zm5-6h3l-4 4l-4-4h3V3h2v10Zm10 0h3l-4 4l-4-4h3V3h2v10Z"/>`
	alignCenterPath               = `<path fill="currentColor" d="M3 4h18v2H3V4Zm2 15h14v2H5v-2Zm-2-5h18v2H3v-2Zm2-5h14v2H5V9Z"/>`
	alignJustifyPath              = `<path fill="currentColor" d="M3 4h18v2H3V4Zm0 15h18v2H3v-2Zm0-5h18v2H3v-2Zm0-5h18v2H3V9Z"/>`
	alignLeftPath                 = `<path fill="currentColor" d="M3 4h18v2H3V4Zm0 15h14v2H3v-2Zm0-5h18v2H3v-2Zm0-5h14v2H3V9Z"/>`
	alignRightPath                = `<path fill="currentColor" d="M3 4h18v2H3V4Zm4 15h14v2H7v-2Zm-4-5h18v2H3v-2Zm4-5h14v2H7V9Z"/>`
	alignTopPath                  = `<path fill="currentColor" d="M3 3h18v2H3V3Zm5 8v10H6V11H3l4-4l4 4H8Zm10 0v10h-2V11h-3l4-4l4 4h-3Z"/>`
	alignVerticallyPath           = `<path fill="currentColor" d="M3 11h18v2H3v-2Zm15 7v3h-2v-3h-3l4-4l4 4h-3ZM8 18v3H6v-3H3l4-4l4 4H8ZM18 6h3l-4 4l-4-4h3V3h2v3ZM8 6h3l-4 4l-4-4h3V3h2v3Z"/>`
	alipayFillPath                = `<path fill="currentColor" d="M21.422 15.358c-3.83-1.153-6.055-1.84-6.678-2.062a12.41 12.41 0 0 0 1.32-3.32H12.8V8.872h4v-.68h-4V6.344h-1.536c-.28 0-.312.248-.312.248v1.592H7.2v.68h3.752v1.104H7.88v.616h6.224a10.972 10.972 0 0 1-.888 2.176c-1.408-.464-2.192-.784-3.912-.944c-3.256-.312-4.008 1.48-4.128 2.576C5 16.064 6.48 17.424 8.688 17.424s3.68-1.024 5.08-2.72c1.167.558 3.338 1.525 6.514 2.902A9.99 9.99 0 0 1 12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10a9.983 9.983 0 0 1-.578 3.358Zm-12.99 1.01c-2.336 0-2.704-1.48-2.584-2.096c.12-.616.8-1.416 2.104-1.416c1.496 0 2.832.384 4.44 1.16c-1.136 1.48-2.52 2.352-3.96 2.352Z"/>`
	alipayLinePath                = `<path fill="currentColor" d="M18.408 16.79c-2.173-.95-3.72-1.646-4.64-2.086c-1.4 1.696-2.872 2.72-5.08 2.72S5 16.064 5.176 14.392c.12-1.096.872-2.888 4.128-2.576c1.72.16 2.504.48 3.912.944c.36-.664.664-1.4.888-2.176H7.88v-.616h3.072V8.864H7.2v-.68h3.752V6.592s.032-.248.312-.248H12.8v1.848h4v.68h-4v1.104h3.264a12.41 12.41 0 0 1-1.32 3.32c.51.182 2.097.676 4.76 1.482a8 8 0 1 0-1.096 2.012ZM12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10Zm-3.568-5.632c1.44 0 2.824-.872 3.96-2.352c-1.608-.776-2.944-1.16-4.44-1.16c-1.304 0-1.984.8-2.104 1.416c-.12.616.248 2.096 2.584 2.096Z"/>`
	amazonFillPath                = `<path fill="currentColor" d="M21.997 18.23c0 .727-.405 2.127-1.315 2.896c-.182.14-.364.061-.284-.143c.265-.648.871-2.147.587-2.492c-.201-.262-1.031-.242-1.739-.182c-.323.041-.607.06-.827.105c-.204.016-.245-.163-.041-.303a3.09 3.09 0 0 1 .87-.428c1.15-.344 2.479-.137 2.67.083c.036.042.079.16.079.463Zm-1.922 1.294a7.426 7.426 0 0 1-.829.55c-2.122 1.275-4.871 1.943-7.258 1.943c-3.843 0-7.28-1.417-9.888-3.788c-.224-.182-.039-.446.223-.303c2.81 1.64 6.288 2.632 9.888 2.632c2.266 0 4.708-.424 7.035-1.336c.163-.061.345-.144.504-.202c.367-.165.69.242.325.504Zm-6.17-11.03c0-1.041.042-1.654-.303-2.18c-.306-.433-.833-.693-1.569-.652c-.798.044-1.655.567-1.873 1.526c-.043.22-.171.436-.437.483l-2.435-.31c-.174-.04-.439-.173-.352-.521C7.459 4.088 9.81 3.129 12.034 3h.522c1.22 0 2.788.349 3.791 1.264c1.217 1.136 1.087 2.662 1.087 4.32v3.927c0 1.178.478 1.7.958 2.314c.13.219.175.477-.044.655a77.915 77.915 0 0 1-1.917 1.654c-.175.133-.489.147-.61.045c-.77-.645-.958-1.003-1.435-1.658c-.83.871-1.527 1.352-2.356 1.613a7.038 7.038 0 0 1-1.784.216c-2.09 0-3.745-1.303-3.745-3.88c0-2.049 1.09-3.442 2.7-4.101c1.61-.66 3.95-.87 4.704-.874Zm-.477 5.192c.52-.872.477-1.586.477-3.185c-.652 0-1.306.045-1.871.178c-1.045.303-1.875.96-1.875 2.355c0 1.09.568 1.832 1.526 1.832c.132 0 .248-.016.348-.045c.67-.186 1.088-.522 1.395-1.135Z"/>`
	amazonLinePath                = `<path fill="currentColor" d="M15.626 14.62c-1.107 1.618-2.728 2.384-4.625 2.384c-2.304 0-4.277-1.773-3.993-4.124c.314-2.608 2.34-3.73 5.708-4.143c.601-.074.85-.094 2.147-.19l.138-.01v-.215C15 6.526 13.933 5.3 12.5 5.3c-1.437 0-2.44.747-3.055 2.526l-1.89-.653C8.442 4.603 10.193 3.3 12.5 3.3c2.602 0 4.5 2.178 4.5 5.022c0 2.648.163 4.755.483 5.557c.356.892.486 1.117.884 1.613l-1.56 1.251c-.524-.652-.753-1.049-1.182-2.122v-.001Zm5.631 5.925c-.27.2-.741.081-.528-.44c.264-.648.547-1.408.262-1.753c-.21-.254-.468-.381-1.027-.381c-.46 0-.69.06-.995.08c-.204.013-.294-.297-.091-.44a2.96 2.96 0 0 1 .87-.428c1.15-.344 2.505-.156 2.67.083c.365.53-.2 2.569-1.16 3.279Zm-1.182-1.084a7.548 7.548 0 0 1-.829.695c-2.122 1.615-4.871 2.46-7.258 2.46c-3.843 0-7.28-1.794-9.888-4.795c-.224-.23-.039-.566.223-.384c2.81 2.076 6.288 3.333 9.888 3.333c2.266 0 4.708-.537 7.035-1.693c.163-.077.345-.181.504-.254c.367-.21.69.306.325.638Zm-5.064-8.92c-1.259.093-1.496.113-2.052.181c-2.553.313-3.797 1.003-3.966 2.398c-.125 1.043.81 1.884 2.008 1.884c2.039 0 3.517-1.228 4.022-4.464l-.012.001Z"/>`
	anchorFillPath                = `<path fill="currentColor" d="M13 9.874v10.054c3.619-.454 6.487-3.336 6.938-6.972H17L20.704 7A10.042 10.042 0 0 1 22 11.95C22 17.5 17.523 22 12 22S2 17.5 2 11.95c0-1.8.471-3.489 1.296-4.95L7 12.956H4.062c.451 3.636 3.32 6.518 6.938 6.972V9.874A4.002 4.002 0 0 1 12 2a4 4 0 0 1 1 7.874ZM12 8a2 2 0 1 0 0-4a2 2 0 0 0 0 4Z"/>`
	anchorLinePath                = `<path fill="currentColor" d="M2.05 11H7v2H4.062A8.004 8.004 0 0 0 11 19.938V9.874A4.002 4.002 0 0 1 12 2a4 4 0 0 1 1 7.874v10.064A8.004 8.004 0 0 0 19.938 13H17v-2h4.95c.033.329.05.662.05 1c0 5.523-4.477 10-10 10S2 17.523 2 12c0-.338.017-.671.05-1ZM12 8a2 2 0 1 0 0-4a2 2 0 0 0 0 4Z"/>`
	ancientGateFillPath           = `<path fill="currentColor" d="M6.964 3h10.072a3.5 3.5 0 0 0 4.445 2.86A3.5 3.5 0 0 1 18 9H6a3.5 3.5 0 0 1-3.481-3.14A3.5 3.5 0 0 0 6.964 3Zm16.015 8.111a2.999 2.999 0 0 1-4.077-1.11H5.098a2.999 2.999 0 0 1-4.078 1.11A3.5 3.5 0 0 0 3 14.663V21h6v-2a3 3 0 0 1 6 0v2h6v-6.336a3.5 3.5 0 0 0 1.979-3.553Z"/>`
	ancientGateLinePath           = `<path fill="currentColor" d="M6.964 3h10.072a3.5 3.5 0 0 0 4.445 2.86A3.5 3.5 0 0 1 18 9H6a3.5 3.5 0 0 1-3.482-3.14A3.5 3.5 0 0 0 6.964 3ZM16.9 6.658A5.43 5.43 0 0 1 15.59 5H8.411A5.43 5.43 0 0 1 7.1 6.658A5.976 5.976 0 0 1 6.667 7h10.666a6.007 6.007 0 0 1-.434-.342Zm4.6 4.842c.538 0 1.042-.142 1.479-.39A3.5 3.5 0 0 1 21 14.663V21h-7v-2a2 2 0 1 0-4 0v2H3v-6.336a3.5 3.5 0 0 1-1.979-3.553a2.999 2.999 0 0 0 4.077-1.11h13.803a2.999 2.999 0 0 0 2.599 1.5Zm-2.537 1.309a4.99 4.99 0 0 1-1.038-.81H6.075a5.094 5.094 0 0 1-1.66 1.121L5 13.4V19h3c0-1.105.39-2.047 1.172-2.828A3.854 3.854 0 0 1 12 15c1.105 0 2.047.39 2.828 1.172A3.854 3.854 0 0 1 16 19h3v-5.6l.585-.278a5.092 5.092 0 0 1-.622-.312Z"/>`
	ancientPavilionFillPath       = `<path fill="currentColor" d="M1.516 7.877A4.5 4.5 0 0 0 5 11.887v7.114H3v2h18v-2h-2v-7.114a4.5 4.5 0 0 0 3.484-4.01A9 9 0 0 1 12.514 2h-1.029a9 9 0 0 1-9.97 5.877ZM17 19H7v-7h10v7.001Z"/>`
	ancientPavilionLinePath       = `<path fill="currentColor" d="M1.516 7.877A4.5 4.5 0 0 0 5 11.887v7.114H3v2h18v-2h-2v-7.114a4.5 4.5 0 0 0 3.484-4.01A9 9 0 0 1 12.514 2h-1.029a9 9 0 0 1-9.97 5.877ZM17 19H7v-7h10v7.001Zm1.555-9.064l-.274.063H5.72l-.275-.063a2.593 2.593 0 0 1-.39-.121C6.59 9.532 8.021 8.92 9.35 7.98A10.88 10.88 0 0 0 12 5.346a10.877 10.877 0 0 0 2.649 2.635c1.328.94 2.76 1.551 4.298 1.835c-.125.05-.256.09-.392.121Z"/>`
	androidFillPath               = `<path fill="currentColor" d="M6.382 3.968A8.962 8.962 0 0 1 12 2c2.125 0 4.078.736 5.618 1.968l1.453-1.453l1.414 1.414l-1.453 1.453A8.962 8.962 0 0 1 21 11v1H3v-1c0-2.125.736-4.078 1.968-5.618L3.515 3.93l1.414-1.414l1.453 1.453ZM3 14h18v7a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1v-7Zm6-5a1 1 0 1 0 0-2a1 1 0 0 0 0 2Zm6 0a1 1 0 1 0 0-2a1 1 0 0 0 0 2Z"/>`
	androidLinePath               = `<path fill="currentColor" d="M19 13H5v7h14v-7Zm0-2a7 7 0 1 0-14 0h14ZM6.382 3.968A8.962 8.962 0 0 1 12 2c2.125 0 4.078.736 5.618 1.968l1.453-1.453l1.414 1.414l-1.453 1.453A8.962 8.962 0 0 1 21 11v10a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V11c0-2.125.736-4.078 1.968-5.618L3.515 3.93l1.414-1.414l1.453 1.453ZM9 9a1 1 0 1 1 0-2a1 1 0 0 1 0 2Zm6 0a1 1 0 1 1 0-2a1 1 0 0 1 0 2Z"/>`
	angularjsFillPath             = `<path fill="currentColor" d="m12 2l9.3 3.32l-1.418 12.31L12 22l-7.88-4.37L2.7 5.32L12 2Zm0 2.21L6.186 17.26h2.168l1.169-2.92h4.935l1.168 2.92h2.168L12 4.21Zm1.698 8.33h-3.396L12 8.45l1.698 4.09Z"/>`
	angularjsLinePath             = `<path fill="currentColor" d="m17.523 16.65l.49-.27l1.118-9.71l-7.13-2.546l-7.132 2.545l1.119 9.71l.474.263L12 4.21l5.523 12.44Zm-1.098.61h-.799l-1.168-2.92H9.523l-1.169 2.92h-.778L12 19.713l4.425-2.453ZM12 2l9.3 3.32l-1.418 12.31L12 22l-7.88-4.37L2.7 5.32L12 2Zm1.698 10.54L12 8.45l-1.698 4.09h3.396Z"/>`
	anticlockwiseFillPath         = `<path fill="currentColor" d="M6 10h3l-4 5l-4-5h3V8a5 5 0 0 1 5-5h4v2H9a3 3 0 0 0-3 3v2Zm5-1h10a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H11a1 1 0 0 1-1-1V10a1 1 0 0 1 1-1Z"/>`
	anticlockwiseLinePath         = `<path fill="currentColor" d="M11 9h10a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H11a1 1 0 0 1-1-1V10a1 1 0 0 1 1-1Zm1 2v8h8v-8h-8Zm-6-.414l1.83-1.829l1.414 1.415L5 14.414L.758 10.172l1.414-1.415L4 10.586V8a5 5 0 0 1 5-5h4v2H9a3 3 0 0 0-3 3v2.586Z"/>`
	anticlockwiseTwoFillPath      = `<path fill="currentColor" d="M14 4h2a5 5 0 0 1 5 5v4h-2V9a3 3 0 0 0-3-3h-2v3L9 5l5-4v3Zm1 7v10a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V11a1 1 0 0 1 1-1h10a1 1 0 0 1 1 1Z"/>`
	anticlockwiseTwoLinePath      = `<path fill="currentColor" d="m13.414 6l1.829 1.828l-1.415 1.415L9.586 5L13.828.757l1.415 1.415L13.414 4H16a5 5 0 0 1 5 5v4h-2V9a3 3 0 0 0-3-3h-2.586ZM15 11v10a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V11a1 1 0 0 1 1-1h10a1 1 0 0 1 1 1Zm-2 1H5v8h8v-8Z"/>`
	appStoreFillPath              = `<path fill="currentColor" d="M12 2c5.523 0 10 4.477 10 10s-4.477 10-10 10S2 17.523 2 12S6.477 2 12 2ZM8.823 15.343c-.395-.477-.886-.647-1.479-.509l-.15.041l-.59 1.016a.823.823 0 0 0 1.366.916l.062-.093l.79-1.371ZM13.21 8.66c-.488.404-.98 1.597-.29 2.787l3.04 5.266a.824.824 0 0 0 1.476-.722l-.049-.1l-.802-1.392h1.19a.82.82 0 0 0 .822-.823a.82.82 0 0 0-.72-.816l-.103-.006h-2.14L13.44 9.057l-.23-.396Zm.278-3.044a.825.825 0 0 0-1.063.21l-.062.092l-.367.633l-.359-.633a.824.824 0 0 0-1.476.722l.049.1l.838 1.457l-2.685 4.653H6.266a.82.82 0 0 0-.822.822c0 .421.312.766.719.817l.103.006h7.48c.34-.64-.06-1.549-.81-1.638l-.121-.007h-2.553l3.528-6.11a.823.823 0 0 0-.302-1.124Z"/>`
	appStoreLinePath              = `<path fill="currentColor" d="M12 2c5.523 0 10 4.477 10 10s-4.477 10-10 10S2 17.523 2 12S6.477 2 12 2Zm0 2a8 8 0 1 0 0 16a8 8 0 0 0 0-16ZM8.823 15.343l-.79 1.37a.823.823 0 1 1-1.428-.822l.589-1.016c.66-.206 1.201-.048 1.629.468ZM13.21 8.66l2.423 4.194h2.141a.82.82 0 0 1 .823.822a.82.82 0 0 1-.823.823h-1.19l.803 1.391a.824.824 0 0 1-1.427.823l-3.04-5.266c-.69-1.19-.198-2.383.29-2.787Zm.278-3.044c.395.226.528.73.302 1.125l-3.528 6.109h2.553c.826 0 1.29.972.931 1.645h-7.48a.82.82 0 0 1-.822-.823a.82.82 0 0 1 .822-.822h2.097l2.685-4.653l-.838-1.456a.824.824 0 0 1 1.427-.823l.359.633l.367-.633a.823.823 0 0 1 1.125-.302Z"/>`
	appleFillPath                 = `<path fill="currentColor" d="M11.673 7.222c-.876 0-2.232-.996-3.66-.96c-1.884.024-3.612 1.092-4.584 2.784c-1.956 3.396-.504 8.412 1.404 11.172c.936 1.344 2.04 2.856 3.504 2.808c1.404-.06 1.932-.912 3.636-.912c1.692 0 2.172.912 3.66.876c1.512-.024 2.472-1.368 3.396-2.724c1.068-1.56 1.512-3.072 1.536-3.156c-.036-.012-2.94-1.128-2.976-4.488c-.024-2.808 2.292-4.152 2.4-4.212c-1.32-1.932-3.348-2.148-4.056-2.196c-1.848-.144-3.396 1.008-4.26 1.008Zm3.12-2.832c.78-.936 1.296-2.244 1.152-3.54c-1.116.048-2.46.744-3.264 1.68c-.72.828-1.344 2.16-1.176 3.432c1.236.096 2.508-.636 3.288-1.572Z"/>`
	appleLinePath                 = `<path fill="currentColor" d="M15.778 8.208c-.473-.037-.98.076-1.758.373c.065-.025-.742.29-.969.37c-.502.175-.915.271-1.378.271c-.458 0-.88-.091-1.365-.255a9.885 9.885 0 0 1-.505-.186l-.449-.177c-.648-.254-1.012-.35-1.315-.342c-1.153.015-2.243.68-2.877 1.782c-1.292 2.244-.576 6.299 1.313 9.031c1.005 1.444 1.556 1.96 1.777 1.953c.222-.01.386-.057.784-.225l.166-.071c1.006-.429 1.71-.618 2.771-.618c1.021 0 1.703.186 2.669.602l.168.072c.397.17.54.208.792.202c.357-.005.798-.417 1.777-1.854c.268-.391.505-.803.71-1.22a7.375 7.375 0 0 1-.391-.347c-1.29-1.228-2.087-2.884-2.109-4.93A6.625 6.625 0 0 1 17 8.46a4.124 4.124 0 0 0-1.221-.25Zm.155-1.994c.708.048 2.736.264 4.056 2.196c-.108.06-2.424 1.404-2.4 4.212c.036 3.36 2.94 4.476 2.976 4.488c-.024.084-.468 1.596-1.536 3.156c-.924 1.356-1.884 2.7-3.396 2.724c-1.488.036-1.968-.876-3.66-.876c-1.704 0-2.232.852-3.636.912c-1.464.048-2.568-1.464-3.504-2.808c-1.908-2.76-3.36-7.776-1.404-11.172c.972-1.692 2.7-2.76 4.584-2.784c1.428-.036 2.784.96 3.66.96c.864 0 2.412-1.152 4.26-1.008Zm-1.14-1.824c-.78.936-2.052 1.668-3.288 1.572c-.168-1.272.456-2.604 1.176-3.432c.804-.936 2.148-1.632 3.264-1.68c.144 1.296-.372 2.604-1.152 3.54Z"/>`
	appsFillPath                  = `<path fill="currentColor" d="M6.75 2.5A4.25 4.25 0 0 1 11 6.75V11H6.75a4.25 4.25 0 0 1 0-8.5Zm0 10.5H11v4.25A4.25 4.25 0 1 1 6.75 13Zm10.5-10.5a4.25 4.25 0 0 1 0 8.5H13V6.75a4.25 4.25 0 0 1 4.25-4.25ZM13 13h4.25A4.25 4.25 0 1 1 13 17.25V13Z"/>`
	appsLinePath                  = `<path fill="currentColor" d="M6.75 2.5A4.25 4.25 0 0 1 11 6.75V11H6.75a4.25 4.25 0 0 1 0-8.5ZM9 9V6.75A2.25 2.25 0 1 0 6.75 9H9Zm-2.25 4H11v4.25A4.25 4.25 0 1 1 6.75 13Zm0 2A2.25 2.25 0 1 0 9 17.25V15H6.75Zm10.5-12.5a4.25 4.25 0 0 1 0 8.5H13V6.75a4.25 4.25 0 0 1 4.25-4.25Zm0 6.5A2.25 2.25 0 1 0 15 6.75V9h2.25ZM13 13h4.25A4.25 4.25 0 1 1 13 17.25V13Zm2 2v2.25A2.25 2.25 0 1 0 17.25 15H15Z"/>`
	appsTwoFillPath               = `<path fill="currentColor" d="M7 11.5a4.5 4.5 0 1 1 0-9a4.5 4.5 0 0 1 0 9Zm0 10a4.5 4.5 0 1 1 0-9a4.5 4.5 0 0 1 0 9Zm10-10a4.5 4.5 0 1 1 0-9a4.5 4.5 0 0 1 0 9Zm0 10a4.5 4.5 0 1 1 0-9a4.5 4.5 0 0 1 0 9Z"/>`
	appsTwoLinePath               = `<path fill="currentColor" d="M7.5 11.5a4.5 4.5 0 1 1 0-9a4.5 4.5 0 0 1 0 9Zm0 10a4.5 4.5 0 1 1 0-9a4.5 4.5 0 0 1 0 9Zm10-10a4.5 4.5 0 1 1 0-9a4.5 4.5 0 0 1 0 9Zm0 10a4.5 4.5 0 1 1 0-9a4.5 4.5 0 0 1 0 9Zm-10-12a2.5 2.5 0 1 0 0-5a2.5 2.5 0 0 0 0 5Zm0 10a2.5 2.5 0 1 0 0-5a2.5 2.5 0 0 0 0 5Zm10-10a2.5 2.5 0 1 0 0-5a2.5 2.5 0 0 0 0 5Zm0 10a2.5 2.5 0 1 0 0-5a2.5 2.5 0 0 0 0 5Z"/>`
	archiveDrawerFillPath         = `<path fill="currentColor" d="M3 13h18v8.003c0 .55-.445.997-.993.997H3.993A.995.995 0 0 1 3 21.003V13ZM3 2.998C3 2.447 3.445 2 3.993 2h16.014c.548 0 .993.446.993.998V11H3V2.998ZM9 5v2h6V5H9Zm0 11v2h6v-2H9Z"/>`
	archiveDrawerLinePath         = `<path fill="currentColor" d="M3 2.992C3 2.444 3.445 2 3.993 2h16.014a1 1 0 0 1 .993.992v18.016a.993.993 0 0 1-.993.992H3.993A1 1 0 0 1 3 21.008V2.992ZM19 11V4H5v7h14Zm0 2H5v7h14v-7ZM9 6h6v2H9V6Zm0 9h6v2H9v-2Z"/>`
	archiveFillPath               = `<path fill="currentColor" d="M3 10h18v10.004c0 .55-.445.996-.993.996H3.993A.994.994 0 0 1 3 20.004V10Zm6 2v2h6v-2H9ZM2 4c0-.552.455-1 .992-1h18.016c.548 0 .992.444.992 1v4H2V4Z"/>`
	archiveLinePath               = `<path fill="currentColor" d="M3 10H2V4.003C2 3.449 2.455 3 2.992 3h18.016A.99.99 0 0 1 22 4.003V10h-1v10.002a.996.996 0 0 1-.993.998H3.993A.996.996 0 0 1 3 20.002V10Zm16 0H5v9h14v-9ZM4 5v3h16V5H4Zm5 7h6v2H9v-2Z"/>`
	archiveTwoFillPath            = `<path fill="currentColor" d="M22 20V7l-2-4H4L2 7.004V20a1 1 0 0 0 1 1h18a1 1 0 0 0 1-1ZM5.236 5h13.528l1 2H4.237l.999-2ZM9 11h6v2H9v-2Z"/>`
	archiveTwoLinePath            = `<path fill="currentColor" d="M22 20V7l-2-4H4L2 7.004V20a1 1 0 0 0 1 1h18a1 1 0 0 0 1-1ZM4 9h16v10H4V9Zm1.236-4h13.528l1 2H4.237l.999-2ZM15 11H9v2h6v-2Z"/>`
	arrowDownCircleFillPath       = `<path fill="currentColor" d="M12 2c5.52 0 10 4.48 10 10s-4.48 10-10 10S2 17.52 2 12S6.48 2 12 2Zm1 10V8h-2v4H8l4 4l4-4h-3Z"/>`
	arrowDownCircleLinePath       = `<path fill="currentColor" d="M12 2c5.52 0 10 4.48 10 10s-4.48 10-10 10S2 17.52 2 12S6.48 2 12 2Zm0 18c4.42 0 8-3.58 8-8s-3.58-8-8-8s-8 3.58-8 8s3.58 8 8 8Zm1-8h3l-4 4l-4-4h3V8h2v4Z"/>`
	arrowDownDoubleFillPath       = `<path fill="currentColor" d="m12 19.164l6.207-6.207l-1.414-1.414L12 16.336l-4.793-4.793l-1.414 1.414L12 19.164Zm0-5.65l6.207-6.207l-1.414-1.414L12 10.686L7.207 5.893L5.793 7.307L12 13.514Z"/>`
	arrowDownDoubleLinePath       = `<path fill="currentColor" d="m12 19.164l6.207-6.207l-1.414-1.414L12 16.336l-4.793-4.793l-1.414 1.414L12 19.164Zm0-5.65l6.207-6.207l-1.414-1.414L12 10.686L7.207 5.893L5.793 7.307L12 13.514Z"/>`
	arrowDownFillPath             = `<path fill="currentColor" d="M13 12h7l-8 8l-8-8h7V4h2v8Z"/>`
	arrowDownLinePath             = `<path fill="currentColor" d="m13 16.172l5.364-5.364l1.414 1.414L12 20l-7.778-7.778l1.414-1.414L11 16.172V4h2v12.172Z"/>`
	arrowDownSFillPath            = `<path fill="currentColor" d="m12 16l-6-6h12l-6 6Z"/>`
	arrowDownSLinePath            = `<path fill="currentColor" d="m12 13.171l4.95-4.95l1.414 1.415L12 16L5.636 9.636L7.05 8.222l4.95 4.95Z"/>`
	arrowDropDownFillPath         = `<path fill="currentColor" d="m12 14l-4-4h8l-4 4Z"/>`
	arrowDropDownLinePath         = `<path fill="currentColor" d="m12 15l-4.243-4.242l1.415-1.414L12 12.172l2.828-2.828l1.415 1.414L12 15.001Z"/>`
	arrowDropLeftFillPath         = `<path fill="currentColor" d="m9 12l4-4v8l-4-4Z"/>`
	arrowDropLeftLinePath         = `<path fill="currentColor" d="m11.828 12l2.829 2.829l-1.414 1.414L9 12.001l4.243-4.243l1.414 1.414l-2.829 2.829Z"/>`
	arrowDropRightFillPath        = `<path fill="currentColor" d="m14 12l-4 4V8l4 4Z"/>`
	arrowDropRightLinePath        = `<path fill="currentColor" d="M12.172 12L9.343 9.173l1.415-1.414L15 12l-4.242 4.242l-1.415-1.414L12.172 12Z"/>`
	arrowDropUpFillPath           = `<path fill="currentColor" d="m12 10l4 4H8l4-4Z"/>`
	arrowDropUpLinePath           = `<path fill="currentColor" d="m12 11.828l-2.828 2.829l-1.415-1.414L12 9l4.243 4.243l-1.415 1.414L12 11.828Z"/>`
	arrowGoBackFillPath           = `<path fill="currentColor" d="M8 7v4L2 6l6-5v4h5a8 8 0 1 1 0 16H4v-2h9a6 6 0 0 0 0-12H8Z"/>`
	arrowGoBackLinePath           = `<path fill="currentColor" d="m5.828 7l2.536 2.535L6.95 10.95L2 6l4.95-4.95l1.414 1.415L5.828 5H13a8 8 0 1 1 0 16H4v-2h9a6 6 0 0 0 0-12H5.828Z"/>`
	arrowGoForwardFillPath        = `<path fill="currentColor" d="M16 7h-5a6 6 0 1 0 0 12h9v2h-9a8 8 0 1 1 0-16h5V1l6 5l-6 5V7Z"/>`
	arrowGoForwardLinePath        = `<path fill="currentColor" d="M18.172 7H11a6 6 0 0 0 0 12h9v2h-9a8 8 0 0 1 0-16h7.172l-2.536-2.536L17.05 1.05L22 6l-4.95 4.95l-1.414-1.415L18.172 7Z"/>`
	arrowLeftCircleFillPath       = `<path fill="currentColor" d="M12 2c5.52 0 10 4.48 10 10s-4.48 10-10 10S2 17.52 2 12S6.48 2 12 2Zm0 9V8l-4 4l4 4v-3h4v-2h-4Z"/>`
	arrowLeftCircleLinePath       = `<path fill="currentColor" d="M12 2c5.52 0 10 4.48 10 10s-4.48 10-10 10S2 17.52 2 12S6.48 2 12 2Zm0 18c4.42 0 8-3.58 8-8s-3.58-8-8-8s-8 3.58-8 8s3.58 8 8 8Zm0-9h4v2h-4v3l-4-4l4-4v3Z"/>`
	arrowLeftDoubleFillPath       = `<path fill="currentColor" d="m4.836 12l6.207 6.207l1.414-1.414L7.664 12l4.793-4.793l-1.414-1.414L4.836 12Zm5.65 0l6.207 6.207l1.414-1.414L13.314 12l4.793-4.793l-1.414-1.414L10.486 12Z"/>`
	arrowLeftDoubleLinePath       = `<path fill="currentColor" d="m4.836 12l6.207 6.207l1.414-1.414L7.664 12l4.793-4.793l-1.414-1.414L4.836 12Zm5.65 0l6.207 6.207l1.414-1.414L13.314 12l4.793-4.793l-1.414-1.414L10.486 12Z"/>`
	arrowLeftDownFillPath         = `<path fill="currentColor" d="m12.361 13.052l4.95 4.95H5.997V6.687l4.95 4.95l5.657-5.658l1.414 1.415l-5.657 5.657Z"/>`
	arrowLeftDownLinePath         = `<path fill="currentColor" d="m9 13.589l8.607-8.607l1.414 1.415l-8.607 8.606H18v2H7v-11h2v7.586Z"/>`
	arrowLeftFillPath             = `<path fill="currentColor" d="M12 13v7l-8-8l8-8v7h8v2h-8Z"/>`
	arrowLeftLinePath             = `<path fill="currentColor" d="M7.828 11H20v2H7.828l5.364 5.364l-1.414 1.414L4 12l7.778-7.778l1.414 1.414L7.828 11Z"/>`
	arrowLeftRightFillPath        = `<path fill="currentColor" d="M16 16v-4l5 5l-5 5v-4H4v-2h12ZM8 2v3.999L20 6v2H8v4L3 7l5-5Z"/>`
	arrowLeftRightLinePath        = `<path fill="currentColor" d="M16.05 12.05L21 17l-4.95 4.95l-1.414-1.415L17.172 18H4v-2h13.172l-2.536-2.535l1.414-1.414Zm-8.1-10l1.414 1.414l-2.536 2.535H20v2H6.828l2.536 2.536L7.95 11.95L3 7l4.95-4.95Z"/>`
	arrowLeftSFillPath            = `<path fill="currentColor" d="m8 12l6-6v12l-6-6Z"/>`
	arrowLeftSLinePath            = `<path fill="currentColor" d="m10.828 12l4.95 4.95l-1.414 1.415L8 12l6.364-6.364l1.414 1.414l-4.95 4.95Z"/>`
	arrowLeftUpFillPath           = `<path fill="currentColor" d="m12.361 10.947l5.657 5.657l-1.414 1.414l-5.657-5.657l-4.95 4.95V5.997h11.314l-4.95 4.95Z"/>`
	arrowLeftUpLinePath           = `<path fill="currentColor" d="m9.414 8l8.607 8.607l-1.414 1.414L8 9.414V17H6V6h11v2H9.414Z"/>`
	arrowRightCircleFillPath      = `<path fill="currentColor" d="M12 2c5.52 0 10 4.48 10 10s-4.48 10-10 10S2 17.52 2 12S6.48 2 12 2Zm0 9H8v2h4v3l4-4l-4-4v3Z"/>`
	arrowRightCircleLinePath      = `<path fill="currentColor" d="M12 11V8l4 4l-4 4v-3H8v-2h4Zm0-9c5.52 0 10 4.48 10 10s-4.48 10-10 10S2 17.52 2 12S6.48 2 12 2Zm0 18c4.42 0 8-3.58 8-8s-3.58-8-8-8s-8 3.58-8 8s3.58 8 8 8Z"/>`
	arrowRightDoubleFillPath      = `<path fill="currentColor" d="m19.164 12l-6.207-6.207l-1.414 1.414L16.336 12l-4.793 4.793l1.414 1.414L19.164 12Zm-5.65 0L7.307 5.793L5.893 7.207L10.686 12l-4.793 4.793l1.414 1.414L13.514 12Z"/>`
	arrowRightDoubleLinePath      = `<path fill="currentColor" d="m19.164 12l-6.207-6.207l-1.414 1.414L16.336 12l-4.793 4.793l1.414 1.414L19.164 12Zm-5.65 0L7.307 5.793L5.893 7.207L10.686 12l-4.793 4.793l1.414 1.414L13.514 12Z"/>`
	arrowRightDownFillPath        = `<path fill="currentColor" d="M11.636 13.052L5.98 7.395L7.394 5.98l5.657 5.657L18 6.687v11.314H6.686l4.95-4.95Z"/>`
	arrowRightDownLinePath        = `<path fill="currentColor" d="M14.59 16.003L5.982 7.397l1.414-1.415l8.607 8.607V7.003h2v11h-11v-2h7.585Z"/>`
	arrowRightFillPath            = `<path fill="currentColor" d="M12 13H4v-2h8V4l8 8l-8 8v-7Z"/>`
	arrowRightLinePath            = `<path fill="currentColor" d="m16.172 11l-5.364-5.364l1.414-1.414L20 12l-7.778 7.778l-1.414-1.414L16.172 13H4v-2h12.172Z"/>`
	arrowRightSFillPath           = `<path fill="currentColor" d="m16 12l-6 6V6l6 6Z"/>`
	arrowRightSLinePath           = `<path fill="currentColor" d="m13.171 12l-4.95-4.95l1.415-1.413L16 12l-6.364 6.364l-1.414-1.415l4.95-4.95Z"/>`
	arrowRightUpFillPath          = `<path fill="currentColor" d="m13.05 12.361l-5.656 5.657l-1.415-1.414l5.657-5.657l-4.95-4.95H18v11.314l-4.95-4.95Z"/>`
	arrowRightUpLinePath          = `<path fill="currentColor" d="m16.004 9.414l-8.607 8.607l-1.414-1.414L14.59 8H7.003V6h11v11h-2V9.414Z"/>`
	arrowTurnBackFillPath         = `<path fill="currentColor" d="M17 16h-4l5 6l5-6h-4v-5a8 8 0 1 0-16 0v9h2v-9a6 6 0 1 1 12 0v5Z"/>`
	arrowTurnBackLinePath         = `<path fill="currentColor" d="m17 18.172l-2.535-2.536l-1.414 1.414L18 22l4.95-4.95l-1.415-1.414L19 18.172V11a8 8 0 1 0-16 0v9h2v-9a6 6 0 0 1 12 0v7.172Z"/>`
	arrowTurnForwardFillPath      = `<path fill="currentColor" d="M17 8v5a6 6 0 0 1-12 0V4H3v9a8 8 0 1 0 16 0V8h4l-5-6l-5 6h4Z"/>`
	arrowTurnForwardLinePath      = `<path fill="currentColor" d="M17 5.828V13a6 6 0 0 1-12 0V4H3v9a8 8 0 1 0 16 0V5.828l2.536 2.536L22.95 6.95L18 2l-4.95 4.95l1.415 1.414L17 5.828Z"/>`
	arrowUpCircleFillPath         = `<path fill="currentColor" d="M12 2c5.52 0 10 4.48 10 10s-4.48 10-10 10S2 17.52 2 12S6.48 2 12 2Zm1 10h3l-4-4l-4 4h3v4h2v-4Z"/>`
	arrowUpCircleLinePath         = `<path fill="currentColor" d="M12 2c5.52 0 10 4.48 10 10s-4.48 10-10 10S2 17.52 2 12S6.48 2 12 2Zm0 18c4.42 0 8-3.58 8-8s-3.58-8-8-8s-8 3.58-8 8s3.58 8 8 8Zm1-8v4h-2v-4H8l4-4l4 4h-3Z"/>`
	arrowUpDoubleFillPath         = `<path fill="currentColor" d="m12 4.836l-6.207 6.207l1.414 1.414L12 7.664l4.793 4.793l1.414-1.414L12 4.836Zm0 5.65l-6.207 6.207l1.414 1.414L12 13.314l4.793 4.793l1.414-1.414L12 10.486Z"/>`
	arrowUpDoubleLinePath         = `<path fill="currentColor" d="m12 4.836l-6.207 6.207l1.414 1.414L12 7.664l4.793 4.793l1.414-1.414L12 4.836Zm0 5.65l-6.207 6.207l1.414 1.414L12 13.314l4.793 4.793l1.414-1.414L12 10.486Z"/>`
	arrowUpDownFillPath           = `<path fill="currentColor" d="M12 8H8.001L8 20H6V8H2l5-5l5 5Zm10 8l-5 5l-5-5h4V4h2v12h4Z"/>`
	arrowUpDownLinePath           = `<path fill="currentColor" d="m11.95 7.95l-1.414 1.414L8 6.828V20H6V6.828L3.466 9.364L2.05 7.95L7 3l4.95 4.95Zm10 8.1L17 21l-4.95-4.95l1.414-1.414l2.537 2.536L16 4h2v13.172l2.536-2.536l1.414 1.414Z"/>`
	arrowUpFillPath               = `<path fill="currentColor" d="M13 12v8h-2v-8H4l8-8l8 8h-7Z"/>`
	arrowUpLinePath               = `<path fill="currentColor" d="M13 7.828V20h-2V7.828l-5.364 5.364l-1.414-1.414L12 4l7.778 7.778l-1.414 1.414L13 7.828Z"/>`
	arrowUpSFillPath              = `<path fill="currentColor" d="m12 8l6 6H6l6-6Z"/>`
	arrowUpSLinePath              = `<path fill="currentColor" d="m12 10.828l-4.95 4.95l-1.414-1.414L12 8l6.364 6.364l-1.415 1.414l-4.95-4.95Z"/>`
	artboardFillPath              = `<path fill="currentColor" d="M8.586 17H3v-2h18v2h-5.586l3.243 3.243l-1.414 1.414L13 17.414V20h-2v-2.586l-4.243 4.243l-1.414-1.414L8.586 17ZM5 3h14a1 1 0 0 1 1 1v10H4V4a1 1 0 0 1 1-1Z"/>`
	artboardLinePath              = `<path fill="currentColor" d="M8.586 17H3v-2h18v2h-5.586l3.243 3.243l-1.414 1.414L13 17.414V20h-2v-2.586l-4.243 4.243l-1.414-1.414L8.586 17ZM5 3h14a1 1 0 0 1 1 1v10H4V4a1 1 0 0 1 1-1Zm1 2v7h12V5H6Z"/>`
	artboardTwoFillPath           = `<path fill="currentColor" d="M6 6h12v12H6V6Zm0-4h2v3H6V2Zm0 17h2v3H6v-3ZM2 6h3v2H2V6Zm0 10h3v2H2v-2ZM19 6h3v2h-3V6Zm0 10h3v2h-3v-2ZM16 2h2v3h-2V2Zm0 17h2v3h-2v-3Z"/>`
	artboardTwoLinePath           = `<path fill="currentColor" d="M8 8v8h8V8H8ZM6 6h12v12H6V6Zm0-4h2v3H6V2Zm0 17h2v3H6v-3ZM2 6h3v2H2V6Zm0 10h3v2H2v-2ZM19 6h3v2h-3V6Zm0 10h3v2h-3v-2ZM16 2h2v3h-2V2Zm0 17h2v3h-2v-3Z"/>`
	articleFillPath               = `<path fill="currentColor" d="M20 22H4a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h16a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1ZM7 6v4h4V6H7Zm0 6v2h10v-2H7Zm0 4v2h10v-2H7Zm6-9v2h4V7h-4Z"/>`
	articleLinePath               = `<path fill="currentColor" d="M20 22H4a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h16a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1Zm-1-2V4H5v16h14ZM7 6h4v4H7V6Zm0 6h10v2H7v-2Zm0 4h10v2H7v-2Zm6-9h4v2h-4V7Z"/>`
	aspectRatioFillPath           = `<path fill="currentColor" d="M21 3a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h18Zm-3 9h-2v3h-3v2h5v-5Zm-7-5H6v5h2V9h3V7Z"/>`
	aspectRatioLinePath           = `<path fill="currentColor" d="M21 3a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h18Zm-1 2H4v14h16V5Zm-7 12v-2h3v-3h2v5h-5ZM11 7v2H8v3H6V7h5Z"/>`
	asteriskPath                  = `<path fill="currentColor" d="M13 3v7.267l6.294-3.633l1 1.732L14 11.999l6.294 3.635l-1 1.732l-6.295-3.634V21h-2v-7.268l-6.294 3.634l-1-1.732L9.998 12L3.705 8.366l1-1.732L11 10.267V3h2Z"/>`
	atFillPath                    = `<path fill="currentColor" d="M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10Zm8-10a8 8 0 1 0-3.968 6.911l-1.008-1.728A6 6 0 1 1 18 12v1a1 1 0 1 1-2 0V9h-1.354a4 4 0 1 0 .066 5.94A3 3 0 0 0 20 13v-1Zm-8-2a2 2 0 1 1 0 4a2 2 0 0 1 0-4Z"/>`
	atLinePath                    = `<path fill="currentColor" d="M20 12a8 8 0 1 0-3.562 6.657l1.11 1.664A9.953 9.953 0 0 1 12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10v1.5a3.5 3.5 0 0 1-6.396 1.966A5 5 0 1 1 15 8h2v5.5a1.5 1.5 0 0 0 3 0V12Zm-8-3a3 3 0 1 0 0 6a3 3 0 0 0 0-6Z"/>`
	attachmentFillPath            = `<path fill="currentColor" d="M20.997 2.992L21 21.008a1 1 0 0 1-.993.992H3.993A.993.993 0 0 1 3 21.008V2.992A1 1 0 0 1 3.993 2h16.01c.549 0 .994.444.994.992ZM9 13V9a1 1 0 0 1 2 0v4a1 1 0 1 0 2 0V9a3 3 0 1 0-6 0v4a5 5 0 0 0 10 0V8h-2v5a3 3 0 1 1-6 0Z"/>`
	attachmentLinePath            = `<path fill="currentColor" d="M14 13.5V8a4 4 0 0 0-8 0v5.5a6.5 6.5 0 1 0 13 0V4h2v9.5a8.5 8.5 0 0 1-17 0V8a6 6 0 1 1 12 0v5.5a3.5 3.5 0 1 1-7 0V8h2v5.5a1.5 1.5 0 0 0 3 0Z"/>`
	attachmentTwoPath             = `<path fill="currentColor" d="m14.829 7.757l-5.657 5.657a1 1 0 1 0 1.414 1.415l5.657-5.657A3 3 0 0 0 12 4.929l-5.657 5.657a5 5 0 0 0 7.071 7.07L19.071 12l1.414 1.414l-5.656 5.657a7 7 0 1 1-9.9-9.9l5.657-5.656a5 5 0 0 1 7.071 7.07L12 16.244A3 3 0 1 1 7.758 12l5.656-5.657l1.415 1.414Z"/>`
	auctionFillPath               = `<path fill="currentColor" d="M14.005 20.003v2h-12v-2h12ZM14.59.689l7.778 7.778l-1.414 1.414l-1.061-.353l-2.475 2.475l5.657 5.657l-1.414 1.414l-5.657-5.657L13.6 15.82l.283 1.131l-1.415 1.415l-7.778-7.779l1.414-1.414l1.132.283l6.293-6.293l-.353-1.06L14.59.688Z"/>`
	auctionLinePath               = `<path fill="currentColor" d="M14.005 20.003v2h-12v-2h12ZM14.59.689l7.778 7.778l-1.414 1.414l-1.061-.353l-2.475 2.475l5.657 5.657l-1.414 1.414l-5.657-5.657L13.6 15.82l.283 1.131l-1.415 1.415l-7.778-7.779l1.414-1.414l1.132.283l6.293-6.293l-.353-1.06L14.59.688Zm.707 3.535l-7.071 7.072l3.535 3.535l7.071-7.071l-3.535-3.535Z"/>`
	awardFillPath                 = `<path fill="currentColor" d="M17 15.245v6.872a.5.5 0 0 1-.757.429L12 20l-4.243 2.546a.5.5 0 0 1-.757-.43v-6.87a8 8 0 1 1 10 0ZM12 15a6 6 0 1 0 0-12a6 6 0 0 0 0 12Zm0-2a4 4 0 1 1 0-8a4 4 0 0 1 0 8Z"/>`
	awardLinePath                 = `<path fill="currentColor" d="M17 15.245v6.872a.5.5 0 0 1-.757.429L12 20l-4.243 2.546a.5.5 0 0 1-.757-.43v-6.87a8 8 0 1 1 10 0ZM9 16.42v3.049l3-1.8l3 1.8v-3.05A7.978 7.978 0 0 1 12 17a7.978 7.978 0 0 1-3-.581ZM12 15a6 6 0 1 0 0-12a6 6 0 0 0 0 12Z"/>`
	baiduFillPath                 = `<path fill="currentColor" d="M5.926 12.496c2.063-.443 1.782-2.908 1.72-3.447c-.1-.83-1.078-2.282-2.404-2.167c-1.67.15-1.914 2.561-1.914 2.561c-.226 1.115.54 3.497 2.598 3.053Zm2.191 4.289c-.06.173-.195.616-.079 1.002c.23.866.982.905.982.905h1.08v-2.64H8.944c-.52.154-.77.559-.827.733Zm1.638-8.422c1.14 0 2.06-1.312 2.06-2.933c0-1.62-.92-2.93-2.06-2.93c-1.138 0-2.06 1.31-2.06 2.93c0 1.621.923 2.933 2.06 2.933Zm4.907.193c1.523.198 2.502-1.427 2.697-2.659c.198-1.23-.784-2.658-1.862-2.904c-1.08-.248-2.43 1.483-2.552 2.61c-.147 1.38.197 2.758 1.717 2.953Zm0 3.448c-1.865-2.905-4.513-1.723-5.399-.245c-.882 1.477-2.256 2.41-2.452 2.658c-.198.244-2.846 1.673-2.258 4.284c.588 2.609 2.653 2.56 2.653 2.56s1.521.15 3.286-.246c1.766-.391 3.286.098 3.286.098s4.124 1.38 5.253-1.278c1.127-2.66-.638-4.038-.638-4.038s-2.356-1.823-3.731-3.793Zm-6.007 7.75c-1.158-.231-1.62-1.021-1.677-1.156c-.057-.137-.386-.772-.212-1.853c.5-1.619 1.927-1.735 1.927-1.735h1.427v-1.755l1.216.02v6.479H8.655Zm4.59-.019c-1.196-.308-1.252-1.158-1.252-1.158v-3.412l1.252-.02v3.066c.076.328.482.387.482.387H15v-3.433h1.331v4.57h-3.085Zm7.453-9.11c0-.59-.49-2.364-2.305-2.364c-1.818 0-2.061 1.675-2.061 2.859c0 1.13.095 2.707 2.354 2.657c2.26-.05 2.012-2.56 2.012-3.152Z"/>`
	baiduLinePath                 = `<path fill="currentColor" d="M7.563 19.28a9.693 9.693 0 0 0 2.496-.217a8.798 8.798 0 0 1 2.98-.131a7.78 7.78 0 0 1 1.289.257c1.077.275 2.61.223 3.005-.41c.29-.468.253-.787-.026-1.199c-.06-.09-.126-.17-.188-.235l-.024-.025a25.109 25.109 0 0 1-.743-.618a25.578 25.578 0 0 1-1.753-1.66a16.153 16.153 0 0 1-1.577-1.893l-.036-.053c-.742-1.139-1.558-1.067-2.002-.318a9.593 9.593 0 0 1-.955 1.332c-.41.482-.83.89-1.306 1.297c-.122.105-.502.42-.411.344c-.004.003-.017.015.05-.071c-.098.12-.95.877-1.2 1.162c-.515.583-.722 1.08-.645 1.48c.073.376.22.587.45.745a1.433 1.433 0 0 0 .48.206c.033.003.072.005.116.007Zm7.099-7.276c1.375 1.97 3.731 3.793 3.731 3.793s2.064 1.748.638 4.038c-1.426 2.29-5.253 1.278-5.253 1.278s-1.52-.49-3.286-.098c-1.765.395-3.286.245-3.286.245S5 21.015 4.553 18.701c-.446-2.314 2.06-4.04 2.258-4.284c.196-.247 1.512-1.073 2.452-2.658c.94-1.586 3.584-2.54 5.399.245Zm5.538-1.42c0 .457.191 2.393-1.552 2.432c-1.743.038-1.816-1.178-1.816-2.05c0-.913.187-2.205 1.59-2.205c1.4 0 1.778 1.369 1.778 1.824Zm-5.429-2.777c-1.18-.152-1.447-1.222-1.333-2.293c.095-.875 1.142-2.219 1.981-2.026c.837.19 1.6 1.3 1.446 2.254c-.152.957-.912 2.218-2.094 2.065ZM9.755 7.44c-.861 0-1.56-.993-1.56-2.22c0-1.227.698-2.22 1.56-2.22c.863 0 1.56.993 1.56 2.22c0 1.227-.697 2.22-1.56 2.22Zm-3.793 4.566c-1.695.365-2.327-1.597-2.14-2.515c0 0 .2-1.987 1.576-2.11c1.093-.095 1.898 1.101 1.98 1.785c.052.444.283 2.475-1.416 2.84Z"/>`
	ballPenFillPath               = `<path fill="currentColor" d="m17.85 11.805l-.708-.707l-9.9 9.9H3v-4.243L14.314 5.44l5.657 5.657a1 1 0 0 1 0 1.414l-7.072 7.071l-1.414-1.414l6.364-6.364Zm.706-9.192l2.829 2.828a1 1 0 0 1 0 1.414L19.97 8.27l-4.243-4.243l1.414-1.414a1 1 0 0 1 1.414 0Z"/>`
	ballPenLinePath               = `<path fill="currentColor" d="m17.85 11.698l-.708-.707l-9.9 9.9H3v-4.243L14.314 5.334l5.657 5.657a1 1 0 0 1 0 1.414l-7.072 7.071l-1.414-1.414l6.364-6.364Zm-2.122-2.121l-1.414-1.414L5 17.476v1.415h1.414l9.314-9.314Zm2.828-7.071l2.829 2.828a1 1 0 0 1 0 1.414L19.97 8.163L15.728 3.92l1.414-1.414a1 1 0 0 1 1.414 0Z"/>`
	bankCardFillPath              = `<path fill="currentColor" d="M22.005 10v10a1 1 0 0 1-1 1h-18a1 1 0 0 1-1-1V10h20Zm0-2h-20V4a1 1 0 0 1 1-1h18a1 1 0 0 1 1 1v4Zm-7 8v2h4v-2h-4Z"/>`
	bankCardLinePath              = `<path fill="currentColor" d="M3.005 3h18a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1h-18a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Zm17 8h-16v8h16v-8Zm0-2V5h-16v4h16Zm-6 6h4v2h-4v-2Z"/>`
	bankCardTwoFillPath           = `<path fill="currentColor" d="M22.005 11v9a1 1 0 0 1-1 1h-18a1 1 0 0 1-1-1v-9h20Zm0-4h-20V4a1 1 0 0 1 1-1h18a1 1 0 0 1 1 1v3Z"/>`
	bankCardTwoLinePath           = `<path fill="currentColor" d="M3.005 3h18a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1h-18a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Zm17 9h-16v7h16v-7Zm0-4V5h-16v3h16Z"/>`
	bankFillPath                  = `<path fill="currentColor" d="M2 20h20v2H2v-2Zm2-8h2v7H4v-7Zm5 0h2v7H9v-7Zm4 0h2v7h-2v-7Zm5 0h2v7h-2v-7ZM2 7l10-5l10 5v4H2V7Zm10 1a1 1 0 1 0 0-2a1 1 0 0 0 0 2Z"/>`
	bankLinePath                  = `<path fill="currentColor" d="M2 20h20v2H2v-2Zm2-8h2v7H4v-7Zm5 0h2v7H9v-7Zm4 0h2v7h-2v-7Zm5 0h2v7h-2v-7ZM2 7l10-5l10 5v4H2V7Zm2 1.236V9h16v-.764l-8-4l-8 4ZM12 8a1 1 0 1 1 0-2a1 1 0 0 1 0 2Z"/>`
	barChartBoxFillPath           = `<path fill="currentColor" d="M3 3h18a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Zm4 10v4h2v-4H7Zm4-6v10h2V7h-2Zm4 3v7h2v-7h-2Z"/>`
	barChartBoxLinePath           = `<path fill="currentColor" d="M3 3h18a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Zm1 2v14h16V5H4Zm3 8h2v4H7v-4Zm4-6h2v10h-2V7Zm4 3h2v7h-2v-7Z"/>`
	barChartFillPath              = `<path fill="currentColor" d="M3 12h4v9H3v-9Zm14-4h4v13h-4V8Zm-7-6h4v19h-4V2Z"/>`
	barChartGroupedFillPath       = `<path fill="currentColor" d="M2 12h2v9H2v-9Zm3 2h2v7H5v-7Zm11-6h2v13h-2V8Zm3 2h2v11h-2V10ZM9 2h2v19H9V2Zm3 2h2v17h-2V4Z"/>`
	barChartGroupedLinePath       = `<path fill="currentColor" d="M2 12h2v9H2v-9Zm3 2h2v7H5v-7Zm11-6h2v13h-2V8Zm3 2h2v11h-2V10ZM9 2h2v19H9V2Zm3 2h2v17h-2V4Z"/>`
	barChartHorizontalFillPath    = `<path fill="currentColor" d="M12 3v4H3V3h9Zm4 14v4H3v-4h13Zm6-7v4H3v-4h19Z"/>`
	barChartHorizontalLinePath    = `<path fill="currentColor" d="M12 3v2H3V3h9Zm4 16v2H3v-2h13Zm6-8v2H3v-2h19Z"/>`
	barChartLinePath              = `<path fill="currentColor" d="M3 12h2v9H3v-9Zm16-4h2v13h-2V8Zm-8-6h2v19h-2V2Z"/>`
	barChartTwoFillPath           = `<path fill="currentColor" d="M2 13h6v8H2v-8ZM9 3h6v18H9V3Zm7 5h6v13h-6V8Z"/>`
	barChartTwoLinePath           = `<path fill="currentColor" d="M2 13h6v8H2v-8Zm14-5h6v13h-6V8ZM9 3h6v18H9V3ZM4 15v4h2v-4H4Zm7-10v14h2V5h-2Zm7 5v9h2v-9h-2Z"/>`
	barcodeBoxFillPath            = `<path fill="currentColor" d="M3 3h18a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Zm3 4v10h3V7H6Zm4 0v10h2V7h-2Zm3 0v10h1V7h-1Zm2 0v10h3V7h-3Z"/>`
	barcodeBoxLinePath            = `<path fill="currentColor" d="M4 5v14h16V5H4ZM3 3h18a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Zm3 4h3v10H6V7Zm4 0h2v10h-2V7Zm3 0h1v10h-1V7Zm2 0h3v10h-3V7Z"/>`
	barcodeFillPath               = `<path fill="currentColor" d="M2 4h2v16H2V4Zm4 0h2v16H6V4Zm3 0h3v16H9V4Zm4 0h2v16h-2V4Zm3 0h2v16h-2V4Zm3 0h3v16h-3V4Z"/>`
	barcodeLinePath               = `<path fill="currentColor" d="M2 4h2v16H2V4Zm4 0h1v16H6V4Zm2 0h2v16H8V4Zm3 0h2v16h-2V4Zm3 0h2v16h-2V4Zm3 0h1v16h-1V4Zm2 0h3v16h-3V4Z"/>`
	bardFillPath                  = `<path fill="currentColor" d="m10.614 17.796l.878-2.01a7.742 7.742 0 0 1 3.94-3.992l2.416-1.072c.768-.341.768-1.458 0-1.8l-2.34-1.038a7.747 7.747 0 0 1-3.997-4.125l-.89-2.142a.946.946 0 0 0-1.758 0l-.889 2.142a7.747 7.747 0 0 1-3.997 4.125l-2.34 1.039c-.768.34-.768 1.458 0 1.799l2.415 1.072a7.742 7.742 0 0 1 3.94 3.991l.878 2.01a.946.946 0 0 0 1.744 0Zm8.787 4.894l.247-.566a4.365 4.365 0 0 1 2.221-2.25l.76-.339a.53.53 0 0 0 0-.963l-.717-.319a4.368 4.368 0 0 1-2.253-2.326l-.254-.611a.507.507 0 0 0-.942 0l-.254.61a4.368 4.368 0 0 1-2.253 2.327l-.718.32a.53.53 0 0 0 0 .962l.76.338a4.365 4.365 0 0 1 2.222 2.251l.247.566c.18.414.754.414.934 0Z"/>`
	bardLinePath                  = `<path fill="currentColor" d="M10.614 17.796a.946.946 0 0 1-1.744 0l-.877-2.01a7.742 7.742 0 0 0-3.94-3.992l-2.416-1.072c-.768-.341-.768-1.458 0-1.8l2.34-1.038a7.747 7.747 0 0 0 3.997-4.125l.89-2.142a.946.946 0 0 1 1.757 0l.89 2.142a7.747 7.747 0 0 0 3.997 4.125l2.34 1.039c.768.34.768 1.458 0 1.799l-2.415 1.072a7.742 7.742 0 0 0-3.941 3.991l-.878 2.01ZM4.54 9.822c2.285 1.015 4.144 2.683 5.202 4.978c1.059-2.295 2.917-3.963 5.203-4.978c-2.313-1.026-4.177-2.776-5.203-5.111c-1.025 2.335-2.89 4.085-5.202 5.111ZM19.4 22.69l.247-.566a4.365 4.365 0 0 1 2.221-2.25l.76-.339a.53.53 0 0 0 0-.963l-.717-.319a4.368 4.368 0 0 1-2.253-2.326l-.254-.611a.507.507 0 0 0-.942 0l-.254.61a4.368 4.368 0 0 1-2.253 2.327l-.718.32a.53.53 0 0 0 0 .962l.76.338a4.365 4.365 0 0 1 2.222 2.251l.247.566c.18.414.754.414.934 0Zm-1.026-3.643l.562-.559l.55.559l-.55.543l-.563-.543Z"/>`
	barricadeFillPath             = `<path fill="currentColor" d="M19.556 19H21v2H3v-2h1.444l.89-4h13.333l.889 4ZM17.333 9l.89 4H5.777l.889-4h10.666Zm-.444-2H7.11l.715-3.217A1 1 0 0 1 8.802 3h6.396a1 1 0 0 1 .976.783L16.889 7Z"/>`
	barricadeLinePath             = `<path fill="currentColor" d="M6.493 19h11.014l-.667-3H7.16l-.667 3Zm13.063 0H21v2H3v-2h1.444L7.826 3.783A1 1 0 0 1 8.802 3h6.396a1 1 0 0 1 .976.783L19.556 19ZM7.604 14h8.792l-.89-4H8.494l-.889 4Zm1.334-6h6.124l-.666-3H9.604l-.666 3Z"/>`
	baseStationFillPath           = `<path fill="currentColor" d="m12 13l6 9H6l6-9Zm-1.06-2.44a1.5 1.5 0 1 1 2.121-2.12a1.5 1.5 0 0 1-2.122 2.12ZM5.281 2.782l1.415 1.414a7.5 7.5 0 0 0 0 10.607l-1.415 1.414a9.5 9.5 0 0 1 0-13.435Zm13.436 0a9.5 9.5 0 0 1 0 13.435l-1.415-1.414a7.5 7.5 0 0 0 0-10.607l1.415-1.414ZM8.11 5.611l1.414 1.414a3.5 3.5 0 0 0 0 4.95L8.11 13.389a5.5 5.5 0 0 1 0-7.778Zm7.778 0a5.5 5.5 0 0 1 0 7.778l-1.414-1.414a3.5 3.5 0 0 0 0-4.95l1.414-1.414Z"/>`
	baseStationLinePath           = `<path fill="currentColor" d="m12 13l6 9H6l6-9Zm0 3.6L9.74 20h4.52L12 16.6Zm-1.06-6.04a1.5 1.5 0 1 1 2.121-2.12a1.5 1.5 0 0 1-2.122 2.12ZM5.281 2.782l1.415 1.414a7.5 7.5 0 0 0 0 10.607l-1.415 1.414a9.5 9.5 0 0 1 0-13.435Zm13.436 0a9.5 9.5 0 0 1 0 13.435l-1.415-1.414a7.5 7.5 0 0 0 0-10.607l1.415-1.414ZM8.11 5.611l1.414 1.414a3.5 3.5 0 0 0 0 4.95L8.11 13.389a5.5 5.5 0 0 1 0-7.778Zm7.778 0a5.5 5.5 0 0 1 0 7.778l-1.414-1.414a3.5 3.5 0 0 0 0-4.95l1.414-1.414Z"/>`
	basketballFillPath            = `<path fill="currentColor" d="m12.366 13.366l1.775 1.025a9.98 9.98 0 0 0-.311 7.44A9.91 9.91 0 0 1 12 22a9.964 9.964 0 0 1-4.11-.88l4.476-7.754Zm3.518 2.032l4.233 2.444a10.033 10.033 0 0 1-4.363 3.43a7.988 7.988 0 0 1 .008-5.57l.121-.304Zm-7.025-4.056l1.775 1.024l-4.476 7.75a10.026 10.026 0 0 1-3.59-4.785a9.977 9.977 0 0 0 6.085-3.713l.206-.276Zm13.046-.726c.063.453.095.915.095 1.384a9.964 9.964 0 0 1-.88 4.11l-4.236-2.445a7.985 7.985 0 0 1 4.866-3.021l.155-.027ZM2.881 7.892l4.235 2.445a7.99 7.99 0 0 1-5.021 3.05A10.138 10.138 0 0 1 2 12a9.98 9.98 0 0 1 .88-4.11Zm14.961-4.008a10.026 10.026 0 0 1 3.59 4.785a9.984 9.984 0 0 0-6.086 3.715l-.205.276l-1.775-1.025l4.476-7.75ZM12 2a9.98 9.98 0 0 1 4.11.88l-4.476 7.754L9.859 9.61a9.98 9.98 0 0 0 .311-7.442A9.921 9.921 0 0 1 12 2Zm-3.753.73a7.992 7.992 0 0 1-.01 5.57l-.12.303l-4.234-2.445a10.036 10.036 0 0 1 4.164-3.346l.2-.083Z"/>`
	basketballLinePath            = `<path fill="currentColor" d="M12 2c5.523 0 10 4.477 10 10s-4.477 10-10 10S2 17.523 2 12S6.477 2 12 2Zm.366 11.366l-3.469 6.01a8.056 8.056 0 0 0 4.459.51a9.938 9.938 0 0 1 .784-5.494l-1.774-1.026Zm3.518 2.031a7.957 7.957 0 0 0-.587 3.894a8.022 8.022 0 0 0 3.078-2.456l-2.492-1.438Zm-7.025-4.055a9.95 9.95 0 0 1-4.365 3.428a8.01 8.01 0 0 0 2.671 3.605l3.469-6.009l-1.775-1.024Zm11.103-.13l-.258.12a7.946 7.946 0 0 0-2.82 2.333l2.492 1.439a7.976 7.976 0 0 0 .586-3.893ZM4 12c0 .266.013.53.038.789a7.95 7.95 0 0 0 3.078-2.454L4.624 8.897A7.975 7.975 0 0 0 4 12Zm12.835-6.374l-3.469 6.008l1.775 1.025a9.951 9.951 0 0 1 4.366-3.43a8.015 8.015 0 0 0-2.419-3.402l-.253-.201ZM12 4c-.463 0-.916.04-1.357.115a9.928 9.928 0 0 1-.784 5.494l1.775 1.025l3.469-6.01A7.975 7.975 0 0 0 12 4Zm-3.297.71l-.191.088a8.033 8.033 0 0 0-2.886 2.367l2.49 1.438a7.956 7.956 0 0 0 .587-3.893Z"/>`
	batteryChargeFillPath         = `<path fill="currentColor" d="M12 11V5l-5 8h3v6l5-8h-3ZM3 5h16a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1Zm18 4h2v6h-2V9Z"/>`
	batteryChargeLinePath         = `<path fill="currentColor" d="M8 19H3a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1h6.625L8.458 7H4v10h4v2Zm4.375 0l1.167-2H18V7h-4V5h5a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1h-6.625ZM21 9h2v6h-2V9Zm-9 2h3l-5 8v-6H7l5-8v6Z"/>`
	batteryFillPath               = `<path fill="currentColor" d="M3 5h16a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1Zm18 4h2v6h-2V9Z"/>`
	batteryLinePath               = `<path fill="currentColor" d="M4 7v10h14V7H4ZM3 5h16a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1Zm18 4h2v6h-2V9Z"/>`
	batteryLowFillPath            = `<path fill="currentColor" d="M3 5h16a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1Zm2 3v8h4V8H5Zm16 1h2v6h-2V9Z"/>`
	batteryLowLinePath            = `<path fill="currentColor" d="M4 7v10h14V7H4ZM3 5h16a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1Zm2 3h4v8H5V8Zm16 1h2v6h-2V9Z"/>`
	batterySaverFillPath          = `<path fill="currentColor" d="M14 2a1 1 0 0 1 1 1v1h3a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H6a1 1 0 0 1-1-1V5a1 1 0 0 1 1-1h3V3a1 1 0 0 1 1-1h4Zm-1 7h-2v3H8v2h3v3h2v-3h3v-2h-3V9Z"/>`
	batterySaverLinePath          = `<path fill="currentColor" d="M14 2a1 1 0 0 1 1 1v1h3a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H6a1 1 0 0 1-1-1V5a1 1 0 0 1 1-1h3V3a1 1 0 0 1 1-1h4Zm-1 2h-2v2H7v14h10V6h-4V4Zm0 5v3h3v2h-3v3h-2v-3H8v-2h3V9h2Z"/>`
	batteryShareFillPath          = `<path fill="currentColor" d="M14 2a1 1 0 0 1 1 1v1h3a1 1 0 0 1 1 1v6.2L15 8v3h-1c-2.142 0-4 1.79-4 4v3h2v-3c0-1.05.95-2 2-2h1v3l4-3.2V21a1 1 0 0 1-1 1H6a1 1 0 0 1-1-1V5a1 1 0 0 1 1-1h3V3a1 1 0 0 1 1-1h4Z"/>`
	batteryShareLinePath          = `<path fill="currentColor" d="M14 2a1 1 0 0 1 1 1v1h3a1 1 0 0 1 1 1v2h-2V6h-4V4h-2v2H7v14h10v-3h2v4a1 1 0 0 1-1 1H6a1 1 0 0 1-1-1V5a1 1 0 0 1 1-1h3V3a1 1 0 0 1 1-1h4Zm1 6l5 4l-5 4v-3h-1c-1.054 0-2 .95-2 2v3h-2v-3a4 4 0 0 1 4-4h1V8Z"/>`
	batteryTwoChargeFillPath      = `<path fill="currentColor" d="M9 4V3a1 1 0 0 1 1-1h4a1 1 0 0 1 1 1v1h3a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H6a1 1 0 0 1-1-1V5a1 1 0 0 1 1-1h3Zm4 8V7l-5 7h3v5l5-7h-3Z"/>`
	batteryTwoChargeLinePath      = `<path fill="currentColor" d="M13 12h3l-5 7v-5H8l5-7v5Zm-2-6H7v14h10V6h-4V4h-2v2ZM9 4V3a1 1 0 0 1 1-1h4a1 1 0 0 1 1 1v1h3a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H6a1 1 0 0 1-1-1V5a1 1 0 0 1 1-1h3Z"/>`
	batteryTwoFillPath            = `<path fill="currentColor" d="M9 4V3a1 1 0 0 1 1-1h4a1 1 0 0 1 1 1v1h3a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H6a1 1 0 0 1-1-1V5a1 1 0 0 1 1-1h3Z"/>`
	batteryTwoLinePath            = `<path fill="currentColor" d="M11 6H7v14h10V6h-4V4h-2v2ZM9 4V3a1 1 0 0 1 1-1h4a1 1 0 0 1 1 1v1h3a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H6a1 1 0 0 1-1-1V5a1 1 0 0 1 1-1h3Z"/>`
	bearSmileFillPath             = `<path fill="currentColor" d="M17.5 2a4.5 4.5 0 0 1 2.951 7.897A8.99 8.99 0 0 1 21 13a9 9 0 1 1-18 0c0-1.09.194-2.136.55-3.103a4.5 4.5 0 1 1 6.791-5.744a9.05 9.05 0 0 1 3.32 0A4.494 4.494 0 0 1 17.5 2ZM10 13H8a4 4 0 0 0 8 0h-2a2 2 0 1 1-4 0Z"/>`
	bearSmileLinePath             = `<path fill="currentColor" d="M12 17a4 4 0 0 0 4-4h-2a2 2 0 1 1-4 0H8a4 4 0 0 0 4 4ZM6.5 2a4.5 4.5 0 0 0-2.95 7.898a9 9 0 1 0 16.901 0a4.5 4.5 0 1 0-6.79-5.745a9.044 9.044 0 0 0-3.321 0A4.496 4.496 0 0 0 6.5 2ZM4 6.5a2.5 2.5 0 0 1 4.852-.851l.318.878l.898-.257A7.004 7.004 0 0 1 12 6c.672 0 1.32.094 1.932.27l.898.257l.318-.878a2.501 2.501 0 1 1 3.58 3.03l-.814.46l.404.842a7 7 0 1 1-12.635 0l.403-.843l-.814-.46A2.499 2.499 0 0 1 4 6.5Z"/>`
	beerFillPath                  = `<path fill="currentColor" d="M9 3a2 2 0 0 1 1.972 2.335l1.973.33a4.011 4.011 0 0 0-.005-1.361A2 2 0 0 1 15.733 7H5a1 1 0 1 1 .539-1.843a1 1 0 0 0 1.513-.614A2.001 2.001 0 0 1 9 3Zm1.516-1.703A3.998 3.998 0 0 0 5.51 3.043A3 3 0 0 0 3 8.236V20a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2h2a2 2 0 0 0 2-2v-7a2 2 0 0 0-2-2h-2v-.354a4 4 0 0 0-4.896-6.169a4.01 4.01 0 0 0-1.588-1.18ZM17 18v-7h2v7h-2ZM7 11h2v7H7v-7Zm4 0h2v7h-2v-7Z"/>`
	beerLinePath                  = `<path fill="currentColor" d="M9 3a2 2 0 0 1 1.972 2.335l1.973.33a4.011 4.011 0 0 0-.005-1.361A2 2 0 0 1 15.733 7H5a1 1 0 1 1 .539-1.843a1 1 0 0 0 1.513-.614A2.001 2.001 0 0 1 9 3Zm1.516-1.703A3.998 3.998 0 0 0 5.51 3.043A3 3 0 0 0 3 8.236V20a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2h2a2 2 0 0 0 2-2v-7a2 2 0 0 0-2-2h-2v-.354a4 4 0 0 0-4.896-6.169a4.01 4.01 0 0 0-1.588-1.18ZM17 11h2v7h-2v-7Zm-2-2v11H5V9h10Zm-8 2v7h2v-7H7Zm6 0v7h-2v-7h2Z"/>`
	behanceFillPath               = `<path fill="currentColor" d="M7.443 5.35c.639 0 1.23.05 1.77.198c.541.099.984.297 1.377.544c.394.248.689.594.885 1.039c.197.445.296.99.296 1.583c0 .693-.148 1.286-.492 1.731c-.295.446-.787.841-1.377 1.138c.836.248 1.475.693 1.869 1.287c.393.593.639 1.335.639 2.176c0 .693-.148 1.286-.394 1.781c-.245.495-.639.94-1.082 1.237a5.08 5.08 0 0 1-1.573.692c-.59.149-1.18.248-1.77.248H1V5.35h6.443Zm-.394 5.54c.541 0 .984-.148 1.328-.395c.344-.247.492-.693.492-1.237c0-.297-.05-.593-.148-.791c-.098-.198-.246-.347-.442-.495c-.197-.099-.394-.198-.64-.247c-.246-.05-.491-.05-.787-.05H4v3.216h3.05Zm.148 5.838c.295 0 .59-.05.836-.099c.246-.05.492-.148.688-.297a1.76 1.76 0 0 0 .492-.544c.098-.247.197-.544.197-.89c0-.693-.197-1.188-.59-1.534c-.394-.297-.935-.445-1.574-.445H4v3.81h3.197Zm9.492-.05c.393.396.983.594 1.77.594c.541 0 1.033-.148 1.426-.395c.394-.297.64-.594.738-.89h2.41c-.394 1.186-.984 2.027-1.77 2.572c-.788.494-1.722.791-2.853.791a5.751 5.751 0 0 1-2.115-.396a3.928 3.928 0 0 1-1.574-1.088a3.93 3.93 0 0 1-.983-1.633c-.246-.643-.345-1.335-.345-2.127c0-.742.099-1.434.345-2.078a5.34 5.34 0 0 1 1.033-1.681a4.985 4.985 0 0 1 1.573-1.089a5.49 5.49 0 0 1 2.066-.396c.836 0 1.574.149 2.213.495c.64.346 1.131.742 1.524 1.336c.394.544.69 1.187.886 1.88c.098.692.147 1.385.098 2.176H16c0 .792.295 1.534.689 1.93Zm3.098-5.194c-.344-.346-.885-.544-1.525-.544c-.442 0-.787.1-1.082.248c-.295.148-.491.346-.688.544a1.323 1.323 0 0 0-.345.692c-.049.248-.098.446-.098.643h4.426c-.098-.742-.344-1.236-.688-1.583ZM15.459 6.29h5.508v1.336H15.46V6.29Z"/>`
	behanceLinePath               = `<path fill="currentColor" d="M7.5 11a2 2 0 1 0 0-4H3v4h4.5Zm1 2H3v4h5.5a2 2 0 1 0 0-4Zm2.063-1.428A4 4 0 0 1 8.5 19H1V5h6.5a4 4 0 0 1 3.063 6.572ZM15.5 6H21v1.5h-5.5V6Zm7.5 8.5h-7.5v.25A2.75 2.75 0 0 0 20.7 16h2.134a4.752 4.752 0 0 1-9.334-1.25v-1.5a4.75 4.75 0 1 1 9.5 0v1.25Zm-2.104-2a2.751 2.751 0 0 0-5.293 0h5.293Z"/>`
	bellFillPath                  = `<path fill="currentColor" d="m13.414 10.586l.48.486l.464.485l.46.492c3.458 3.764 5.472 7.218 4.607 8.083c-.4.4-1.356.183-2.64-.508a9.007 9.007 0 0 1-10.403-.591l2.98-2.98a2 2 0 1 0-1.45-1.57l.035.156l-2.979 2.98a9.007 9.007 0 0 1-.592-10.405c-.692-1.283-.908-2.238-.508-2.639c.977-.976 5.25 1.715 9.546 6.01Zm6.364-6.364a2 2 0 0 1-.165 2.976a9.015 9.015 0 0 1 .608 8.47c-1.189-1.955-3.07-4.174-5.393-6.497l-.537-.531c-2.128-2.079-4.156-3.765-5.958-4.861a9.015 9.015 0 0 1 8.471.608a2 2 0 0 1 2.974-.165Z"/>`
	bellLinePath                  = `<path fill="currentColor" d="M14.121 9.879c4.296 4.295 6.829 8.728 5.657 9.899c-.475.475-1.486.341-2.807-.273a9.008 9.008 0 0 1-10.59-.473l-.038.039l-1.414-1.414l.038-.04A9.006 9.006 0 0 1 4.495 7.03c-.614-1.322-.748-2.333-.273-2.808c1.128-1.128 5.277 1.177 9.417 5.182l.482.475Zm-1.414 1.414C10.823 9.409 8.87 7.842 7.236 6.869l-.186.181a7.002 7.002 0 0 0-.657 9.142l1.846-1.846a2 2 0 0 1 3.347-1.932a2 2 0 0 1-1.931 3.347l-1.848 1.846a7.001 7.001 0 0 0 9.143-.657l.179-.188l-.053-.089c-.976-1.615-2.52-3.53-4.369-5.38Zm7.071-7.071a2 2 0 0 1-.165 2.976a9.015 9.015 0 0 1 .663 8.345a21.16 21.16 0 0 0-1.386-2.306a6.99 6.99 0 0 0-1.94-6.187a6.992 6.992 0 0 0-6.187-1.94a21.096 21.096 0 0 0-2.306-1.386a9.017 9.017 0 0 1 8.347.663a2 2 0 0 1 2.974-.165Z"/>`
	bikeFillPath                  = `<path fill="currentColor" d="M5.5 12H4V7H2V5h6v2H6v2.796l9.813-2.63L15.233 5H12V3h3.978a1 1 0 0 1 .988.741l1.553 5.796l-1.932.518l-.256-.957L5.5 12ZM5 21a4 4 0 1 1 0-8a4 4 0 0 1 0 8Zm0-3a1 1 0 1 0 0-2a1 1 0 0 0 0 2Zm13 3a5 5 0 1 1 0-10a5 5 0 0 1 0 10Zm0-4a1 1 0 1 0 0-2a1 1 0 0 0 0 2Z"/>`
	bikeLinePath                  = `<path fill="currentColor" d="M5.5 12H4V7H2V5h6v2H6v2.796l9.813-2.63L15.233 5H12V3h3.978a1 1 0 0 1 .988.741l1.553 5.796l-1.932.518l-.256-.957L5.5 12ZM5 19a2 2 0 1 0 0-4a2 2 0 0 0 0 4Zm0 2a4 4 0 1 1 0-8a4 4 0 0 1 0 8Zm13-2a3 3 0 1 0 0-6a3 3 0 0 0 0 6Zm0 2a5 5 0 1 1 0-10a5 5 0 0 1 0 10Z"/>`
	bilibiliFillPath              = `<path fill="currentColor" d="M18.223 3.086a1.25 1.25 0 0 1 0 1.768L17.08 5.996h1.17A3.75 3.75 0 0 1 22 9.746v7.5a3.75 3.75 0 0 1-3.75 3.75H5.75A3.75 3.75 0 0 1 2 17.246v-7.5a3.75 3.75 0 0 1 3.75-3.75h1.166L5.775 4.855a1.25 1.25 0 0 1 1.767-1.768l2.652 2.651c.079.08.145.166.198.258h3.213c.053-.092.12-.18.199-.259l2.651-2.651a1.25 1.25 0 0 1 1.768 0Zm.027 5.42H5.75a1.25 1.25 0 0 0-1.247 1.157l-.003.093v7.5c0 .66.51 1.2 1.157 1.247l.093.003h12.5a1.25 1.25 0 0 0 1.247-1.156l.003-.094v-7.5c0-.69-.56-1.25-1.25-1.25Zm-10 2.5c.69 0 1.25.56 1.25 1.25v1.25a1.25 1.25 0 0 1-2.5 0v-1.25c0-.69.56-1.25 1.25-1.25Zm7.5 0c.69 0 1.25.56 1.25 1.25v1.25a1.25 1.25 0 0 1-2.5 0v-1.25c0-.69.56-1.25 1.25-1.25Z"/>`
	bilibiliLinePath              = `<path fill="currentColor" d="M7.172 2.757L10.414 6h3.171l3.243-3.242a1 1 0 1 1 1.415 1.414L16.414 6H18.5A3.5 3.5 0 0 1 22 9.5v8a3.5 3.5 0 0 1-3.5 3.5h-13A3.5 3.5 0 0 1 2 17.5v-8A3.5 3.5 0 0 1 5.5 6h2.085L5.757 4.171a1 1 0 0 1 1.415-1.414ZM18.5 8h-13a1.5 1.5 0 0 0-1.493 1.355L4 9.5v8a1.5 1.5 0 0 0 1.356 1.493L5.5 19h13a1.5 1.5 0 0 0 1.493-1.356L20 17.5v-8A1.5 1.5 0 0 0 18.5 8ZM8 11a1 1 0 0 1 1 1v2a1 1 0 1 1-2 0v-2a1 1 0 0 1 1-1Zm8 0a1 1 0 0 1 1 1v2a1 1 0 1 1-2 0v-2a1 1 0 0 1 1-1Z"/>`
	billFillPath                  = `<path fill="currentColor" d="M20 22H4a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h16a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1ZM8 9v2h8V9H8Zm0 4v2h8v-2H8Z"/>`
	billLinePath                  = `<path fill="currentColor" d="M20 22H4a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h16a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1Zm-1-2V4H5v16h14ZM8 9h8v2H8V9Zm0 4h8v2H8v-2Z"/>`
	billiardsFillPath             = `<path fill="currentColor" d="M12 2c5.523 0 10 4.477 10 10s-4.477 10-10 10S2 17.523 2 12S6.477 2 12 2Zm0 4a6 6 0 1 0 0 12a6 6 0 0 0 0-12Zm0 1.75a2.5 2.5 0 0 1 1.88 4.148c.565.456.92 1.117.92 1.852c0 1.38-1.254 2.5-2.8 2.5c-1.546 0-2.8-1.12-2.8-2.5c0-.735.355-1.396.92-1.853A2.5 2.5 0 0 1 12 7.75Zm0 5c-.754 0-1.3.488-1.3 1s.546 1 1.3 1s1.3-.488 1.3-1s-.546-1-1.3-1Zm0-3.5a1 1 0 1 0 0 2a1 1 0 0 0 0-2Z"/>`
	billiardsLinePath             = `<path fill="currentColor" d="M12 2c5.523 0 10 4.477 10 10s-4.477 10-10 10S2 17.523 2 12S6.477 2 12 2Zm0 2a8 8 0 1 0 0 16a8 8 0 0 0 0-16Zm0 2a6 6 0 1 1 0 12a6 6 0 0 1 0-12Zm0 1.75a2.5 2.5 0 0 0-1.88 4.147c-.565.457-.92 1.118-.92 1.853c0 1.38 1.254 2.5 2.8 2.5c1.546 0 2.8-1.12 2.8-2.5c0-.735-.355-1.396-.92-1.852A2.5 2.5 0 0 0 12 7.75Zm0 5c.754 0 1.3.488 1.3 1s-.546 1-1.3 1s-1.3-.488-1.3-1s.546-1 1.3-1Zm0-3.5a1 1 0 1 1 0 2a1 1 0 0 1 0-2Z"/>`
	bitCoinFillPath               = `<path fill="currentColor" d="M12.005 22.003c-5.523 0-10-4.477-10-10s4.477-10 10-10s10 4.477 10 10s-4.477 10-10 10Zm-1-6v2h2v-2h1a2.5 2.5 0 0 0 2-4a2.5 2.5 0 0 0-2-4h-1v-2h-2v2h-3v8h3Zm-1-3h4a.5.5 0 0 1 0 1h-4v-1Zm0-3h4a.5.5 0 0 1 0 1h-4v-1Z"/>`
	bitCoinLinePath               = `<path fill="currentColor" d="M12.005 22.003c-5.523 0-10-4.477-10-10s4.477-10 10-10s10 4.477 10 10s-4.477 10-10 10Zm0-2a8 8 0 1 0 0-16a8 8 0 0 0 0 16Zm-1-4h-3v-8h3v-2h2v2h1a2.5 2.5 0 0 1 2 4a2.5 2.5 0 0 1-2 4h-1v2h-2v-2Zm-1-3v1h4a.5.5 0 1 0 0-1h-4Zm0-3v1h4a.5.5 0 1 0 0-1h-4Z"/>`
	blazeFillPath                 = `<path fill="currentColor" d="M18.5 9c1 1.06 1.5 2.394 1.5 4c0 3.466-3.7 4.276-5.5 9c-.667-.575-1-1.408-1-2.5c0-3.482 5-5.29 5-10.5Zm-4-4c1.2 1.238 1.8 2.572 1.8 4c0 4.951-6.045 5.692-4.8 13C9.833 20.84 9 19.173 9 17c0-3.325 5.5-6 5.5-12ZM10 1c1.333 1.667 2 3.167 2 4.5c0 6.25-8.5 8.222-4 16.5c-2.616-.58-4.5-3-4.5-6C3.5 9.5 10 8.5 10 1Z"/>`
	blazeLinePath                 = `<path fill="currentColor" d="M19 9c.667 1.06 1 2.394 1 4c0 3-3.5 4-5 9c-.667-.575-1-1.408-1-2.5c0-3.482 5-5.29 5-10.5Zm-4.5-4a8.309 8.309 0 0 1 1 4c0 5-6 6-4 13C9.833 20.84 9 19.173 9 17c0-3.325 5.5-6 5.5-12ZM10 1c.667 1.333 1 2.833 1 4.5c0 6-9 7.5-3 16.5c-2.5-.5-4.5-3-4.5-6C3.5 9.5 10 8.5 10 1Z"/>`
	blenderFillPath               = `<path fill="currentColor" d="M7.79 15.714c-.144-.456-.24-1.039-.245-1.339c-.006-.299.06-.797.06-.797l-4.509 3.69c-.787.636-1.846.635-2.344-.004c-.491-.628-.24-1.62.54-2.217l8.293-6.364l-4.628.006c-.785-.003-1.298-.532-1.15-1.17c.143-.626.869-1.121 1.624-1.122l9.146-.01l-2.995-2.439c-.466-.382-.407-.989.118-1.355c.518-.363 1.31-.364 1.782-.002l7.204 5.53l-.002.002a7.43 7.43 0 0 1 1.775 1.958a6.823 6.823 0 0 1 1.021 4.13a6.7 6.7 0 0 1-.287 1.478a7.124 7.124 0 0 1-1.526 2.648A7.942 7.942 0 0 1 19 20.263a8.592 8.592 0 0 1-3.505.74a8.584 8.584 0 0 1-3.508-.728a7.884 7.884 0 0 1-2.67-1.918a7.064 7.064 0 0 1-1.527-2.643Zm7.703 1.815c1.408-.003 2.708-.54 3.637-1.486c.454-.462.787-.992.993-1.558c.201-.555.28-1.143.229-1.736a4.103 4.103 0 0 0-.5-1.634a4.49 4.49 0 0 0-1.104-1.31a5.141 5.141 0 0 0-3.257-1.127a5.151 5.151 0 0 0-3.255 1.136a4.52 4.52 0 0 0-1.105 1.314a4.1 4.1 0 0 0-.27 3.372c.206.565.54 1.094.994 1.555c.929.945 2.23 1.477 3.638 1.474Zm-2.018-6.626a3.28 3.28 0 0 1 2.12-.758c.815 0 1.564.288 2.12.758c.566.48.942 1.155.985 1.922c.043.788-.274 1.52-.83 2.063a3.249 3.249 0 0 1-2.275.899a3.25 3.25 0 0 1-2.277-.9c-.556-.542-.872-1.274-.828-2.062c.043-.767.418-1.442.985-1.922Zm0 0c-.567.48-.942 1.155-.985 1.922c-.044.788.272 1.52.829 2.063a3.25 3.25 0 0 0 2.276.899c.903 0 1.709-.347 2.276-.9c.555-.542.872-1.274.83-2.062c-.044-.767-.42-1.442-.986-1.922a3.282 3.282 0 0 0-2.12-.758a3.28 3.28 0 0 0-2.12.758ZM7.79 15.714c-.143-.456-.239-1.039-.244-1.339c-.006-.299.06-.797.06-.797l-4.509 3.69c-.787.636-1.846.635-2.344-.004c-.491-.628-.24-1.62.54-2.217l8.293-6.364l-4.628.006c-.785-.003-1.298-.532-1.15-1.17c.143-.626.869-1.121 1.624-1.122l9.146-.01l-2.995-2.439c-.466-.382-.407-.989.118-1.355c.518-.363 1.31-.364 1.782-.002l7.204 5.53l-.002.002a7.43 7.43 0 0 1 1.775 1.958a6.823 6.823 0 0 1 1.021 4.13a6.7 6.7 0 0 1-.287 1.478a7.124 7.124 0 0 1-1.526 2.648A7.942 7.942 0 0 1 19 20.263a8.592 8.592 0 0 1-3.505.74a8.584 8.584 0 0 1-3.508-.728a7.884 7.884 0 0 1-2.67-1.918a7.064 7.064 0 0 1-1.527-2.643Zm7.704 1.815c1.408-.003 2.708-.54 3.637-1.486c.454-.462.787-.992.993-1.558c.201-.555.28-1.143.229-1.736a4.103 4.103 0 0 0-.5-1.634a4.49 4.49 0 0 0-1.104-1.31a5.141 5.141 0 0 0-3.257-1.127a5.151 5.151 0 0 0-3.255 1.136a4.52 4.52 0 0 0-1.105 1.314a4.1 4.1 0 0 0-.27 3.372c.206.565.54 1.094.994 1.555c.929.945 2.23 1.477 3.638 1.474Z"/>`
	blenderLinePath               = `<path fill="currentColor" d="M13.122 2.217a1 1 0 1 0-1.244 1.566L15.297 6.5H4.5a1 1 0 1 0 0 2h5.472L.878 15.717a1 1 0 0 0 1.244 1.566l5.423-4.303c-.03.252-.045.51-.045.77c0 4.108 3.691 7.25 8 7.25s8-3.142 8-7.25c0-2.247-1.124-4.227-2.835-5.539l-7.543-5.994ZM11.565 9.79C12.61 8.992 13.983 8.5 15.5 8.5c1.52 0 2.895.494 3.942 1.295c1.284.98 2.058 2.403 2.058 3.955c0 2.796-2.577 5.25-6 5.25s-6-2.454-6-5.25c0-1.48.704-2.842 1.882-3.816l.183-.145Zm2.913 4.303c-.277-.26-.399-.566-.381-.882c.032-.565.623-1.21 1.498-1.21c.873 0 1.465.644 1.498 1.209c.018.33-.108.633-.378.887c-.285.27-.697.44-1.12.44a1.66 1.66 0 0 1-1.117-.444ZM15.595 10c-1.746 0-3.394 1.295-3.495 3.1c-.108 1.945 1.625 3.436 3.495 3.436c1.876 0 3.602-1.477 3.495-3.438C18.988 11.294 17.34 10 15.595 10Z"/>`
	bluetoothConnectFillPath      = `<path fill="currentColor" d="m14.311 12l4.343 4.343L12.998 22h-2v-6.686l-4.364 4.364l-1.415-1.415l5.779-5.778v-.97L5.219 5.737l1.415-1.415l4.364 4.364V2h2l5.656 5.657L14.311 12Zm-1.313 1.515v5.657l2.828-2.829l-2.828-2.828Zm0-3.03l2.828-2.828l-2.828-2.829v5.657ZM19.5 13.5a1.5 1.5 0 1 1 0-3a1.5 1.5 0 0 1 0 3Zm-13 0a1.5 1.5 0 1 1 0-3a1.5 1.5 0 0 1 0 3Z"/>`
	bluetoothConnectLinePath      = `<path fill="currentColor" d="m14.311 12l4.343 4.343L12.998 22h-2v-6.686l-4.364 4.364l-1.415-1.415l5.779-5.778v-.97L5.219 5.737l1.415-1.415l4.364 4.364V2h2l5.656 5.657L14.311 12Zm-1.313 1.515v5.657l2.828-2.829l-2.828-2.828Zm0-3.03l2.828-2.828l-2.828-2.829v5.657ZM19.5 13.5a1.5 1.5 0 1 1 0-3a1.5 1.5 0 0 1 0 3Zm-13 0a1.5 1.5 0 1 1 0-3a1.5 1.5 0 0 1 0 3Z"/>`
	bluetoothFillPath             = `<path fill="currentColor" d="m14.312 12l4.343 4.343L12.998 22h-2v-6.686l-4.364 4.364l-1.414-1.415l5.778-5.778v-.97L5.22 5.737l1.414-1.415l4.364 4.364V2h2l5.657 5.657L14.312 12Zm-1.314 1.515v5.657l2.828-2.829l-2.828-2.828Zm0-3.03l2.828-2.828l-2.828-2.829v5.657Z"/>`
	bluetoothLinePath             = `<path fill="currentColor" d="m14.312 12l4.343 4.343L12.998 22h-2v-6.686l-4.364 4.364l-1.414-1.415l5.778-5.778v-.97L5.22 5.737l1.414-1.415l4.364 4.364V2h2l5.657 5.657L14.312 12Zm-1.314 1.515v5.657l2.828-2.829l-2.828-2.828Zm0-3.03l2.828-2.828l-2.828-2.829v5.657Z"/>`
	blurOffFillPath               = `<path fill="currentColor" d="M5.432 6.843L1.394 2.805L2.808 1.39l19.799 19.8l-1.415 1.414l-3.038-3.04A9 9 0 0 1 5.432 6.845Zm2.811-2.817L12 .269l6.364 6.364a9.002 9.002 0 0 1 2.05 9.564L8.244 4.026Z"/>`
	blurOffLinePath               = `<path fill="currentColor" d="M18.154 19.565A9 9 0 0 1 5.432 6.843L1.394 2.805L2.808 1.39l19.799 19.8l-1.415 1.414l-3.038-3.04ZM6.848 8.259a7 7 0 0 0 9.89 9.89l-9.89-9.89Zm13.566 7.938l-1.598-1.599a6.996 6.996 0 0 0-1.866-6.55L12 3.097L9.658 5.44L8.243 4.026L12 .269l6.364 6.364a9.002 9.002 0 0 1 2.05 9.564Z"/>`
	bodyScanFillPath              = `<path fill="currentColor" d="M4 16v4h4v2H2v-6h2Zm18 0v6h-6v-2h4v-4h2ZM7.5 7a4.5 4.5 0 0 0 9 0h2a6.5 6.5 0 0 1-3.499 5.767L15 19H9v-6.232A6.5 6.5 0 0 1 5.5 7h2ZM12 5a2.5 2.5 0 1 1 0 5a2.5 2.5 0 0 1 0-5ZM8 2v2l-4-.001V8H2V2h6Zm14 0v6h-2V4h-4V2h6Z"/>`
	bodyScanLinePath              = `<path fill="currentColor" d="M4 16v4h4v2H2v-6h2Zm18 0v6h-6v-2h4v-4h2ZM7.5 7a4.502 4.502 0 0 0 3.5 4.389V17h2l.001-5.612A4.502 4.502 0 0 0 16.5 7h2a6.5 6.5 0 0 1-3.499 5.767L15 19H9v-6.232A6.5 6.5 0 0 1 5.5 7h2ZM12 5a2.5 2.5 0 1 1 0 5a2.5 2.5 0 0 1 0-5ZM8 2v2l-4-.001V8H2V2h6Zm14 0v6h-2V4h-4V2h6Z"/>`
	boldPath                      = `<path fill="currentColor" d="M8 11h4.5a2.5 2.5 0 0 0 0-5H8v5Zm10 4.5a4.5 4.5 0 0 1-4.5 4.5H6V4h6.5a4.5 4.5 0 0 1 3.256 7.606A4.498 4.498 0 0 1 18 15.5ZM8 13v5h5.5a2.5 2.5 0 0 0 0-5H8Z"/>`
	bookFillPath                  = `<path fill="currentColor" d="M20 22H6.5A3.5 3.5 0 0 1 3 18.5V5a3 3 0 0 1 3-3h14a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1Zm-1-2v-3H6.5a1.5 1.5 0 0 0 0 3H19Z"/>`
	bookLinePath                  = `<path fill="currentColor" d="M3 18.5V5a3 3 0 0 1 3-3h14a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5A3.5 3.5 0 0 1 3 18.5ZM19 20v-3H6.5a1.5 1.5 0 0 0 0 3H19ZM5 15.337A3.486 3.486 0 0 1 6.5 15H19V4H6a1 1 0 0 0-1 1v10.337Z"/>`
	bookMarkFillPath              = `<path fill="currentColor" d="M20 22H6.5A3.5 3.5 0 0 1 3 18.5V5a3 3 0 0 1 3-3h14a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1Zm-1-2v-3H6.5a1.5 1.5 0 0 0 0 3H19ZM10 4v8l3.5-2l3.5 2V4h-7Z"/>`
	bookMarkLinePath              = `<path fill="currentColor" d="M3 18.5V5a3 3 0 0 1 3-3h14a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5A3.5 3.5 0 0 1 3 18.5ZM19 20v-3H6.5a1.5 1.5 0 0 0 0 3H19ZM10 4H6a1 1 0 0 0-1 1v10.337A3.486 3.486 0 0 1 6.5 15H19V4h-2v8l-3.5-2l-3.5 2V4Z"/>`
	bookOpenFillPath              = `<path fill="currentColor" d="M21 21h-8V6a3 3 0 0 1 3-3h5a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1Zm-10 0H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h5a3 3 0 0 1 3 3v15Zm0 0h2v2h-2v-2Z"/>`
	bookOpenLinePath              = `<path fill="currentColor" d="M13 21v2h-2v-2H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h6a3.99 3.99 0 0 1 3 1.354A3.99 3.99 0 0 1 15 3h6a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1h-8Zm7-2V5h-5a2 2 0 0 0-2 2v12h7Zm-9 0V7a2 2 0 0 0-2-2H4v14h7Z"/>`
	bookReadFillPath              = `<path fill="currentColor" d="M2 3.993A1 1 0 0 1 2.992 3h18.016c.548 0 .992.445.992.993v16.014a1 1 0 0 1-.992.993H2.992A.993.993 0 0 1 2 20.007V3.993ZM12 5v14h8V5h-8Zm1 2h6v2h-6V7Zm0 3h6v2h-6v-2Z"/>`
	bookReadLinePath              = `<path fill="currentColor" d="M2 3.993A1 1 0 0 1 2.992 3h18.016c.548 0 .992.445.992.993v16.014a1 1 0 0 1-.992.993H2.992A.993.993 0 0 1 2 20.007V3.993ZM11 5H4v14h7V5Zm2 0v14h7V5h-7Zm1 2h5v2h-5V7Zm0 3h5v2h-5v-2Z"/>`
	bookThreeFillPath             = `<path fill="currentColor" d="M21 4H7a2 2 0 1 0 0 4h14v13a1 1 0 0 1-1 1H7a4 4 0 0 1-4-4V6a4 4 0 0 1 4-4h13a1 1 0 0 1 1 1v1Zm-1 3H7a1 1 0 0 1 0-2h13v2Z"/>`
	bookThreeLinePath             = `<path fill="currentColor" d="M21 4H7a2 2 0 1 0 0 4h14v13a1 1 0 0 1-1 1H7a4 4 0 0 1-4-4V6a4 4 0 0 1 4-4h13a1 1 0 0 1 1 1v1ZM5 18a2 2 0 0 0 2 2h12V10H7a3.982 3.982 0 0 1-2-.535V18ZM20 7H7a1 1 0 0 1 0-2h13v2Z"/>`
	bookTwoFillPath               = `<path fill="currentColor" d="M21 18H6a1 1 0 1 0 0 2h15v2H6a3 3 0 0 1-3-3V4a2 2 0 0 1 2-2h16v16Zm-5-9V7H8v2h8Z"/>`
	bookTwoLinePath               = `<path fill="currentColor" d="M21 18H6a1 1 0 1 0 0 2h15v2H6a3 3 0 0 1-3-3V4a2 2 0 0 1 2-2h16v16ZM5 16.05c.162-.033.329-.05.5-.05H19V4H5v12.05ZM16 9H8V7h8v2Z"/>`
	bookletFillPath               = `<path fill="currentColor" d="M8 2v20H4v-4H2v-2h2v-3H2v-2h2V8H2V6h2V2h4Zm12.005 0C21.107 2 22 2.898 22 3.99v16.02c0 1.099-.893 1.99-1.995 1.99H10V2h10.005Z"/>`
	bookletLinePath               = `<path fill="currentColor" d="M20.005 2C21.107 2 22 2.898 22 3.99v16.02c0 1.099-.893 1.99-1.995 1.99H4v-4H2v-2h2v-3H2v-2h2V8H2V6h2V2h16.005ZM8 4H6v16h2V4Zm12 0H10v16h10V4Z"/>`
	bookmarkFillPath              = `<path fill="currentColor" d="M5 2h14a1 1 0 0 1 1 1v19.143a.5.5 0 0 1-.766.424L12 18.03l-7.234 4.536A.5.5 0 0 1 4 22.143V3a1 1 0 0 1 1-1Z"/>`
	bookmarkLinePath              = `<path fill="currentColor" d="M5 2h14a1 1 0 0 1 1 1v19.143a.5.5 0 0 1-.766.424L12 18.03l-7.234 4.536A.5.5 0 0 1 4 22.143V3a1 1 0 0 1 1-1Zm13 2H6v15.432l6-3.761l6 3.761V4Z"/>`
	bookmarkThreeFillPath         = `<path fill="currentColor" d="M4 2h16a1 1 0 0 1 1 1v19.276a.5.5 0 0 1-.704.457L12 19.03l-8.296 3.702A.5.5 0 0 1 3 22.276V3a1 1 0 0 1 1-1Zm8 11.5l2.939 1.545l-.561-3.272l2.377-2.318l-3.285-.478L12 6l-1.47 2.977l-3.285.478l2.377 2.318l-.56 3.272L12 13.5Z"/>`
	bookmarkThreeLinePath         = `<path fill="currentColor" d="M4 2h16a1 1 0 0 1 1 1v19.276a.5.5 0 0 1-.704.457L12 19.03l-8.296 3.702A.5.5 0 0 1 3 22.276V3a1 1 0 0 1 1-1Zm15 17.965V4H5v15.965l7-3.124l7 3.123ZM12 13.5l-2.939 1.545l.561-3.272l-2.377-2.318l3.285-.478L12 6l1.47 2.977l3.285.478l-2.377 2.318l.56 3.272L12 13.5Z"/>`
	bookmarkTwoFillPath           = `<path fill="currentColor" d="M5 2h14a1 1 0 0 1 1 1v19.143a.5.5 0 0 1-.766.424L12 18.03l-7.234 4.536A.5.5 0 0 1 4 22.143V3a1 1 0 0 1 1-1Zm3 7v2h8V9H8Z"/>`
	bookmarkTwoLinePath           = `<path fill="currentColor" d="M5 2h14a1 1 0 0 1 1 1v19.143a.5.5 0 0 1-.766.424L12 18.03l-7.234 4.536A.5.5 0 0 1 4 22.143V3a1 1 0 0 1 1-1Zm13 2H6v15.432l6-3.761l6 3.761V4ZM8 9h8v2H8V9Z"/>`
	bootstrapFillPath             = `<path fill="currentColor" d="M5.423 3.038c-1.284 0-2.233 1.124-2.19 2.342c.04 1.171-.013 2.687-.395 3.924c-.383 1.24-1.03 2.026-2.088 2.127v1.138c1.058.101 1.705.887 2.088 2.127c.382 1.236.435 2.753.394 3.923c-.042 1.219.907 2.343 2.192 2.343h13.154c1.284 0 2.234-1.124 2.192-2.343c-.041-1.17.012-2.687.393-3.923c.384-1.24 1.03-2.026 2.087-2.127v-1.138c-1.058-.101-1.703-.887-2.087-2.127c-.381-1.236-.434-2.753-.393-3.924c.042-1.218-.908-2.342-2.192-2.342H5.423Zm10.581 11.033c0 1.678-1.251 2.696-3.328 2.696H9.14a.381.381 0 0 1-.382-.381V7.614a.381.381 0 0 1 .382-.381h3.515c1.732 0 2.869.938 2.869 2.379c0 1.01-.765 1.916-1.739 2.074v.053c1.326.145 2.22 1.064 2.22 2.332Zm-3.714-5.63h-2.016v2.848h1.698c1.313 0 2.036-.528 2.036-1.473c0-.885-.622-1.374-1.718-1.374Zm-2.016 3.978v3.139h2.09c1.367 0 2.09-.549 2.09-1.58c0-1.03-.743-1.559-2.178-1.559h-2.002Z"/>`
	bootstrapLinePath             = `<path fill="currentColor" d="M1 11v2s2 0 2 4v1a3 3 0 0 0 3 3h12a3 3 0 0 0 3-3v-1c0-4 2-4 2-4v-2s-2 0-2-4V6a3 3 0 0 0-3-3H6a3 3 0 0 0-3 3v1c0 4-2 4-2 4Zm19.674 1a2.37 2.37 0 0 0-.088.086C19.578 13.093 19 14.692 19 17v1a1 1 0 0 1-1 1H6a1 1 0 0 1-1-1v-1c0-2.308-.578-3.907-1.586-4.914A3.887 3.887 0 0 0 3.326 12a2.37 2.37 0 0 0 .088-.086C4.422 10.907 5 9.308 5 7V6a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v1c0 2.308.578 3.907 1.586 4.914l.088.086ZM8.5 7v10h5a3 3 0 0 0 1.615-5.529A3 3 0 0 0 12.5 7h-4Zm2 4V9h2a1 1 0 1 1 0 2h-2Zm0 2h3a1 1 0 1 1 0 2h-3v-2Z"/>`
	boxOneFillPath                = `<path fill="currentColor" d="m12 1l9.5 5.5v11L13 22.421V11.423l-9.502-5.5L12 1ZM2.5 7.655V17.5l8.5 4.921v-9.845l-8.5-4.92Z"/>`
	boxOneLinePath                = `<path fill="currentColor" d="m12 1l9.5 5.5v11L12 23l-9.5-5.5v-11L12 1ZM5.494 7.078L13 11.423v8.687l6.5-3.763V7.653L12 3.311L5.494 7.078ZM4.5 8.813v7.534L11 20.11v-7.534L4.5 8.813Z"/>`
	boxThreeFillPath              = `<path fill="currentColor" d="M20.502 5.922L12 1L3.498 5.922L12 10.845l8.502-4.923ZM2.5 7.656V17.5l8.5 4.921v-9.845l-8.5-4.92ZM13 22.42l8.5-4.921V7.655L13 12.576v9.845Z"/>`
	boxThreeLinePath              = `<path fill="currentColor" d="m12 1l9.5 5.5v11L12 23l-9.5-5.5v-11L12 1ZM5.494 7.078L12 10.844l6.506-3.766L12 3.31L5.494 7.078ZM4.5 8.813v7.534L11 20.11v-7.534L4.5 8.813ZM13 20.11l6.5-3.763V8.813L13 12.576v7.534Z"/>`
	boxTwoFillPath                = `<path fill="currentColor" d="m12 1l9.5 5.5v11L12 23l-9.5-5.5v-11L12 1ZM4.5 7.658v8.689l7.5 4.342V12L4.5 7.658Z"/>`
	boxTwoLinePath                = `<path fill="currentColor" d="m12 1l9.5 5.5v11L12 23l-9.5-5.5v-11L12 1ZM4.5 7.653v.005L12 12v8.689l7.5-4.342V7.653L12 3.311L4.5 7.653Z"/>`
	boxingFillPath                = `<path fill="currentColor" d="m9.501 11l.144.007a1.5 1.5 0 0 1 1.35 1.348L11 12.5l-.007.145a1.5 1.5 0 0 1-1.349 1.348L9.501 14h-3.5v2h3.5c1.7 0 3.117-1.212 3.434-2.819l.03-.18L19.001 13c.711 0 1.388-.149 2-.416V17a3.001 3.001 0 0 1-2 2.829V21a1 1 0 0 1-1 1h-12a1 1 0 0 1-1-1v-1.17a3.001 3.001 0 0 1-2-2.83v-4a2 2 0 0 1 2-2h4.5Zm12.5-3.5V8l-.005.176a3 3 0 0 1-2.819 2.819l-.176.005h-6.337A3.501 3.501 0 0 0 9.71 9.006L9.5 9H5a3.98 3.98 0 0 0-2.001.536L3.001 6a4 4 0 0 1 4-4h9.5a5.5 5.5 0 0 1 5.5 5.5Z"/>`
	boxingLinePath                = `<path fill="currentColor" d="M16.5 2A5.5 5.5 0 0 1 22 7.5V10a2.99 2.99 0 0 1-1 2.235V17a3.001 3.001 0 0 1-2 2.829V21a1 1 0 0 1-1 1H6a1 1 0 0 1-1-1v-1.17A3.001 3.001 0 0 1 3 17V6a4 4 0 0 1 4-4h9.5Zm-7 9H5v6a1 1 0 0 0 .883.993L6 18h12a1 1 0 0 0 .993-.883L19 17v-4h-6.036A3.5 3.5 0 0 1 9.5 16H6v-2h3.5a1.5 1.5 0 0 0 1.493-1.355L11 12.5a1.5 1.5 0 0 0-1.356-1.493L9.5 11Zm7-7H7a2 2 0 0 0-1.995 1.85L5 6v3h4.5a3.5 3.5 0 0 1 3.163 2H19a1 1 0 0 0 .993-.883L20 10V7.5a3.5 3.5 0 0 0-3.308-3.495L16.5 4Z"/>`
	bracesFillPath                = `<path fill="currentColor" d="M4 18v-3.7a1.5 1.5 0 0 0-1.5-1.5H2v-1.6h.5A1.5 1.5 0 0 0 4 9.7V6a3 3 0 0 1 3-3h1v2H7a1 1 0 0 0-1 1v4.1A2 2 0 0 1 4.626 12A2 2 0 0 1 6 13.9V18a1 1 0 0 0 1 1h1v2H7a3 3 0 0 1-3-3Zm16-3.7V18a3 3 0 0 1-3 3h-1v-2h1a1 1 0 0 0 1-1v-4.1a2 2 0 0 1 1.374-1.9A2 2 0 0 1 18 10.1V6a1 1 0 0 0-1-1h-1V3h1a3 3 0 0 1 3 3v3.7a1.5 1.5 0 0 0 1.5 1.5h.5v1.6h-.5a1.5 1.5 0 0 0-1.5 1.5Z"/>`
	bracesLinePath                = `<path fill="currentColor" d="M4 18v-3.7a1.5 1.5 0 0 0-1.5-1.5H2v-1.6h.5A1.5 1.5 0 0 0 4 9.7V6a3 3 0 0 1 3-3h1v2H7a1 1 0 0 0-1 1v4.1A2 2 0 0 1 4.626 12A2 2 0 0 1 6 13.9V18a1 1 0 0 0 1 1h1v2H7a3 3 0 0 1-3-3Zm16-3.7V18a3 3 0 0 1-3 3h-1v-2h1a1 1 0 0 0 1-1v-4.1a2 2 0 0 1 1.374-1.9A2 2 0 0 1 18 10.1V6a1 1 0 0 0-1-1h-1V3h1a3 3 0 0 1 3 3v3.7a1.5 1.5 0 0 0 1.5 1.5h.5v1.6h-.5a1.5 1.5 0 0 0-1.5 1.5Z"/>`
	bracketsFillPath              = `<path fill="currentColor" d="M9 3v2H6v14h3v2H4V3h5Zm6 0h5v18h-5v-2h3V5h-3V3Z"/>`
	bracketsLinePath              = `<path fill="currentColor" d="M9 3v2H6v14h3v2H4V3h5Zm6 0h5v18h-5v-2h3V5h-3V3Z"/>`
	brainFillPath                 = `<path fill="currentColor" d="M11 2.535A4 4 0 0 0 5 6v1.774c-.851.342-1.549.874-2.059 1.575C2.292 10.242 2 11.335 2 12.5c0 1.561.795 2.936 2 3.742V17.5a4.5 4.5 0 0 0 7 3.742V17.5c0-1.333-.33-2.185-.86-2.76c-.543-.587-1.424-1.024-2.804-1.254l.328-1.972c1.302.216 2.442.623 3.336 1.313V2.535Zm2 0v10.292c.894-.69 2.034-1.097 3.336-1.313l.328 1.972c-1.38.23-2.261.667-2.804 1.255c-.53.574-.86 1.426-.86 2.759v3.742a4.5 4.5 0 0 0 7-3.742v-1.258c1.205-.806 2-2.18 2-3.742c0-1.165-.292-2.258-.941-3.15c-.51-.702-1.208-1.234-2.059-1.576V6a4 4 0 0 0-6-3.465Z"/>`
	brainLinePath                 = `<path fill="currentColor" d="M9 4a2 2 0 0 1 2 2v6.827c-.894-.69-2.034-1.097-3.336-1.313l-.328 1.972c1.38.23 2.261.667 2.804 1.255c.53.574.86 1.426.86 2.759a2.5 2.5 0 0 1-5 0v-.35c.43.143.876.26 1.336.336l.328-1.972c-.743-.124-1.489-.4-2.235-.754A2.496 2.496 0 0 1 4 12.5c0-.835.208-1.492.559-1.974c.345-.476.883-.856 1.684-1.056L7 9.28V6a2 2 0 0 1 2-2Zm3-.646A4 4 0 0 0 5 6v1.774c-.851.342-1.549.874-2.059 1.575C2.292 10.242 2 11.335 2 12.5a4.49 4.49 0 0 0 2 3.742V17.5a4.5 4.5 0 0 0 8 2.829a4.5 4.5 0 0 0 8-2.829v-1.258a4.49 4.49 0 0 0 2-3.742c0-1.165-.292-2.258-.941-3.15c-.51-.702-1.208-1.234-2.059-1.576V6a4 4 0 0 0-7-2.646Zm6 13.795v.351a2.5 2.5 0 0 1-5 0c0-1.333.33-2.185.86-2.76c.543-.587 1.424-1.024 2.804-1.254l-.328-1.972c-1.302.216-2.442.623-3.336 1.313V6a2 2 0 1 1 4 0v3.28l.758.19c.8.2 1.338.58 1.683 1.056c.351.482.559 1.14.559 1.974c0 .999-.582 1.857-1.43 2.26c-.745.354-1.492.63-2.234.754l.328 1.972A8.65 8.65 0 0 0 18 17.149Z"/>`
	briefcaseFillPath             = `<path fill="currentColor" d="M7 5V2a1 1 0 0 1 1-1h8a1 1 0 0 1 1 1v3h4a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1h4ZM4 15v4h16v-4H4Zm7-4v2h2v-2h-2ZM9 3v2h6V3H9Z"/>`
	briefcaseFiveFillPath         = `<path fill="currentColor" d="M7 5V2a1 1 0 0 1 1-1h8a1 1 0 0 1 1 1v3h4a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1h4Zm-1 8V7H4v6h2Zm2-6v6h3v-2h2v2h3V7H8Zm10 6h2V7h-2v6ZM9 3v2h6V3H9Z"/>`
	briefcaseFiveLinePath         = `<path fill="currentColor" d="M7 5V2a1 1 0 0 1 1-1h8a1 1 0 0 1 1 1v3h4a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1h4Zm9 10h-3v1h-2v-1H8v4h8v-4ZM8 7v6h3v-1h2v1h3V7H8Zm-2 6V7H4v6h2Zm12 0h2V7h-2v6ZM6 15H4v4h2v-4Zm12 0v4h2v-4h-2ZM9 3v2h6V3H9Z"/>`
	briefcaseFourFillPath         = `<path fill="currentColor" d="M9 13v3h6v-3h7v7a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1v-7h7Zm2-2h2v3h-2v-3ZM7 5V2a1 1 0 0 1 1-1h8a1 1 0 0 1 1 1v3h4a1 1 0 0 1 1 1v5h-7V9H9v2H2V6a1 1 0 0 1 1-1h4Zm2-2v2h6V3H9Z"/>`
	briefcaseFourLinePath         = `<path fill="currentColor" d="M7 5V2a1 1 0 0 1 1-1h8a1 1 0 0 1 1 1v3h4a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1h4Zm2 8H4v6h16v-6h-5v3H9v-3Zm11-6H4v4h5V9h6v2h5V7Zm-9 4v3h2v-3h-2ZM9 3v2h6V3H9Z"/>`
	briefcaseLinePath             = `<path fill="currentColor" d="M7 5V2a1 1 0 0 1 1-1h8a1 1 0 0 1 1 1v3h4a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1h4ZM4 16v3h16v-3H4Zm0-2h16V7H4v7ZM9 3v2h6V3H9Zm2 8h2v2h-2v-2Z"/>`
	briefcaseThreeFillPath        = `<path fill="currentColor" d="M7 5V2a1 1 0 0 1 1-1h8a1 1 0 0 1 1 1v3h4a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1h4Zm10 2v5h3V7h-3Zm-2 0H9v5h6V7ZM7 7H4v5h3V7Zm2-4v2h6V3H9Z"/>`
	briefcaseThreeLinePath        = `<path fill="currentColor" d="M7 5V2a1 1 0 0 1 1-1h8a1 1 0 0 1 1 1v3h4a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1h4Zm8 2H9v12h6V7ZM7 7H4v12h3V7Zm10 0v12h3V7h-3ZM9 3v2h6V3H9Z"/>`
	briefcaseTwoFillPath          = `<path fill="currentColor" d="M7 5V2a1 1 0 0 1 1-1h8a1 1 0 0 1 1 1v3h4a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1h4Zm10 8v-3h-2v3H9v-3H7v3H4v6h16v-6h-3ZM9 3v2h6V3H9Z"/>`
	briefcaseTwoLinePath          = `<path fill="currentColor" d="M7 5V2a1 1 0 0 1 1-1h8a1 1 0 0 1 1 1v3h4a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1h4Zm13 8H4v6h16v-6Zm0-6H4v4h3V9h2v2h6V9h2v2h3V7ZM9 3v2h6V3H9Z"/>`
	bringForwardPath              = `<path fill="currentColor" d="M14 3a1 1 0 0 1 1 1v5h5a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H10a1 1 0 0 1-1-1v-5H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h10Zm-1 2H5v8h8V5Z"/>`
	bringToFrontPath              = `<path fill="currentColor" d="M11 3a1 1 0 0 1 1 1v2h5a1 1 0 0 1 1 1v5h2a1 1 0 0 1 1 1v7a1 1 0 0 1-1 1h-7a1 1 0 0 1-1-1v-2H7a1 1 0 0 1-1-1v-5H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h7Zm5 5H8v8h8V8Z"/>`
	broadcastFillPath             = `<path fill="currentColor" d="m4.929 2.929l1.414 1.414A7.975 7.975 0 0 0 4 10c0 2.209.895 4.209 2.343 5.657L4.93 17.07A9.969 9.969 0 0 1 2 10a9.969 9.969 0 0 1 2.929-7.071Zm14.142 0A9.969 9.969 0 0 1 22 9.999a9.969 9.969 0 0 1-2.929 7.072l-1.414-1.414A7.975 7.975 0 0 0 20 10c0-2.21-.895-4.21-2.343-5.657l1.414-1.414ZM7.757 5.757l1.415 1.414A3.987 3.987 0 0 0 8 10c0 1.104.448 2.104 1.172 2.828l-1.415 1.414A5.981 5.981 0 0 1 6 10c0-1.657.672-3.157 1.757-4.243Zm8.486 0A5.981 5.981 0 0 1 18 10a5.981 5.981 0 0 1-1.757 4.242l-1.415-1.414A3.987 3.987 0 0 0 16 10a3.987 3.987 0 0 0-1.172-2.829l1.415-1.414ZM12 12a2 2 0 1 1 0-4a2 2 0 0 1 0 4Zm0 2c.58 0 1.077.413 1.184.983L14.5 22h-5l1.316-7.017c.107-.57.604-.983 1.184-.983Z"/>`
	broadcastLinePath             = `<path fill="currentColor" d="m4.929 2.929l1.414 1.414A7.975 7.975 0 0 0 4 10c0 2.209.895 4.209 2.343 5.657L4.93 17.07A9.969 9.969 0 0 1 2 10a9.969 9.969 0 0 1 2.929-7.071Zm14.142 0A9.969 9.969 0 0 1 22 9.999a9.969 9.969 0 0 1-2.929 7.072l-1.414-1.414A7.975 7.975 0 0 0 20 10c0-2.21-.895-4.21-2.343-5.657l1.414-1.414ZM7.757 5.757l1.415 1.414A3.987 3.987 0 0 0 8 10c0 1.104.448 2.104 1.172 2.828l-1.415 1.414A5.981 5.981 0 0 1 6 10c0-1.657.672-3.157 1.757-4.243Zm8.486 0A5.981 5.981 0 0 1 18 10a5.981 5.981 0 0 1-1.757 4.242l-1.415-1.414A3.987 3.987 0 0 0 16 10a3.987 3.987 0 0 0-1.172-2.829l1.415-1.414ZM12 12a2 2 0 1 1 0-4a2 2 0 0 1 0 4Zm-1 2h2v8h-2v-8Z"/>`
	brushFillPath                 = `<path fill="currentColor" d="m13.289 6.213l4.939-3.842a1 1 0 0 1 1.32.083l2.995 2.994a1 1 0 0 1 .082 1.32l-3.84 4.939a7.505 7.505 0 0 1-7.283 9.292C8 20.998 3.5 19.496 1 17.996c3.98-3 3.047-4.81 3.5-6.5c1.058-3.95 4.842-6.258 8.789-5.284ZM16.7 8.09c.066.064.13.129.194.194L18.03 9.42l2.475-3.182l-1.746-1.746l-3.182 2.475L16.7 8.09Z"/>`
	brushFourFillPath             = `<path fill="currentColor" d="M20 15.997H4v2h16v-2Zm-17-2v-10a1 1 0 0 1 1-1h3v8.272h2V2.997h11a1 1 0 0 1 1 1v10h1v5a1 1 0 0 1-1 1h-8v3h-2v-3H3a1 1 0 0 1-1-1v-5h1Z"/>`
	brushFourLinePath             = `<path fill="currentColor" d="M9 4.997v6.272H7V4.997H5v9h14v-9H9Zm11 11H4v2h16v-2Zm-17-2v-10a1 1 0 0 1 1-1h16a1 1 0 0 1 1 1v10h1v5a1 1 0 0 1-1 1h-8v3h-2v-3H3a1 1 0 0 1-1-1v-5h1Z"/>`
	brushLinePath                 = `<path fill="currentColor" d="m15.457 9.675l-.143-.142a5.475 5.475 0 0 0-2.39-1.349c-2.907-.779-5.699.869-6.492 3.83c-.043.16-.066.34-.104.791c-.154 1.87-.594 3.265-1.8 4.68c2.26.888 4.938 1.513 6.974 1.513a5.505 5.505 0 0 0 5.31-4.078a5.497 5.497 0 0 0-1.356-5.245Zm-2.168-3.462l4.939-3.842a1 1 0 0 1 1.32.083l2.995 2.994a1 1 0 0 1 .082 1.32l-3.84 4.939a7.505 7.505 0 0 1-7.283 9.292C8 20.998 3.5 19.496 1 17.996c3.98-3 3.047-4.81 3.5-6.5c1.058-3.95 4.842-6.258 8.789-5.284ZM16.7 8.09c.066.064.13.129.194.194L18.03 9.42l2.475-3.182l-1.746-1.746l-3.182 2.475L16.7 8.09Z"/>`
	brushThreeFillPath            = `<path fill="currentColor" d="M20 10.997v-3h-6v-4h-4v4H4v3h16Zm1 2v8a1 1 0 0 1-1 1H10v-6H8v6H4a1 1 0 0 1-1-1v-8H2v-6a1 1 0 0 1 1-1h5v-3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v3h5a1 1 0 0 1 1 1v6h-1Z"/>`
	brushThreeLinePath            = `<path fill="currentColor" d="M8 19.997v-5h2v5h9v-7H5v7h3Zm-4-9h16v-3h-6v-4h-4v4H4v3Zm-1 10v-8H2v-6a1 1 0 0 1 1-1h5v-3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v3h5a1 1 0 0 1 1 1v6h-1v8a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1Z"/>`
	brushTwoFillPath              = `<path fill="currentColor" d="m16.536 15.947l2.121-2.122l-3.182-3.182l3.536-3.535l-2.122-2.122l-3.535 3.536l-3.182-3.182L8.05 7.461l8.486 8.486ZM13.354 5.694l2.828-2.829a1 1 0 0 1 1.414 0l3.536 3.536a1 1 0 0 1 0 1.414l-2.829 2.828l2.475 2.475a1 1 0 0 1 0 1.414L13 22.311a1 1 0 0 1-1.414 0l-9.9-9.9a1 1 0 0 1 0-1.414l7.779-7.778a1 1 0 0 1 1.414 0l2.475 2.475Z"/>`
	brushTwoLinePath              = `<path fill="currentColor" d="m16.536 15.947l2.121-2.122l-3.182-3.182l3.536-3.535l-2.122-2.122l-3.535 3.536l-3.182-3.182L8.05 7.461l8.486 8.486ZM15.12 17.36L6.636 8.876l-2.828 2.828l8.485 8.485l2.829-2.828ZM13.354 5.694l2.828-2.829a1 1 0 0 1 1.414 0l3.536 3.536a1 1 0 0 1 0 1.414l-2.829 2.828l2.475 2.475a1 1 0 0 1 0 1.414L13 22.311a1 1 0 0 1-1.414 0l-9.9-9.9a1 1 0 0 1 0-1.414l7.779-7.778a1 1 0 0 1 1.414 0l2.475 2.475Z"/>`
	bubbleChartFillPath           = `<path fill="currentColor" d="M16 16a3 3 0 1 1 0 6a3 3 0 0 1 0-6ZM6 12a4 4 0 1 1 0 8a4 4 0 0 1 0-8Zm8.5-10a5.5 5.5 0 1 1 0 11a5.5 5.5 0 0 1 0-11Z"/>`
	bubbleChartLinePath           = `<path fill="currentColor" d="M16 16a3 3 0 1 1 0 6a3 3 0 0 1 0-6ZM6 12a4 4 0 1 1 0 8a4 4 0 0 1 0-8Zm10 6a1 1 0 1 0 0 2a1 1 0 0 0 0-2ZM6 14a2 2 0 1 0 0 4a2 2 0 0 0 0-4Zm8.5-12a5.5 5.5 0 1 1 0 11a5.5 5.5 0 0 1 0-11Zm0 2a3.5 3.5 0 1 0 0 7a3.5 3.5 0 0 0 0-7Z"/>`
	bugFillPath                   = `<path fill="currentColor" d="M6.056 8.3a7.01 7.01 0 0 1 .199-.3h11.49c.069.098.135.199.199.3l2.02-1.166l1 1.732l-2.213 1.278c.162.59.249 1.213.249 1.856v1h3v2h-3a6.96 6.96 0 0 1-.536 2.69l2.5 1.444l-1 1.732l-2.526-1.458A6.992 6.992 0 0 1 13 21.929V14h-2v7.93a6.992 6.992 0 0 1-4.438-2.522l-2.526 1.458l-1-1.732l2.5-1.443A6.98 6.98 0 0 1 5 15H2v-2h3v-1c0-.643.087-1.265.249-1.856L3.036 8.866l1-1.732L6.056 8.3ZM8 6a4 4 0 1 1 8 0H8Z"/>`
	bugLinePath                   = `<path fill="currentColor" d="M13 19.9a5.002 5.002 0 0 0 4-4.9v-3c0-.701-.144-1.378-.415-2h-9.17A4.981 4.981 0 0 0 7 12v3a5.002 5.002 0 0 0 4 4.9V14h2v5.9Zm-7.464-2.21A6.98 6.98 0 0 1 5 15H2v-2h3v-1c0-.643.087-1.265.249-1.856L3.036 8.866l1-1.732L6.056 8.3a7.01 7.01 0 0 1 .199-.3h11.49c.069.098.135.199.199.3l2.02-1.166l1 1.732l-2.213 1.278c.162.59.249 1.213.249 1.856v1h3v2h-3a6.96 6.96 0 0 1-.536 2.69l2.5 1.444l-1 1.732l-2.526-1.458A6.986 6.986 0 0 1 12 22a6.986 6.986 0 0 1-5.438-2.592l-2.526 1.458l-1-1.732l2.5-1.443ZM8 6a4 4 0 1 1 8 0H8Z"/>`
	bugTwoFillPath                = `<path fill="currentColor" d="M5.07 16A7.06 7.06 0 0 1 5 15v-1H3v-2h2v-1c0-.34.024-.674.07-1H3V8h2.674a7.03 7.03 0 0 1 2.84-3.072l-1.05-1.05L8.88 2.465l1.683 1.684a7.03 7.03 0 0 1 2.876 0l1.683-1.684l1.414 1.415l-1.05 1.05A7.031 7.031 0 0 1 18.327 8H21v2h-2.07c.046.327.07.661.07 1v1h2v2h-2v1c0 .34-.024.674-.07 1H21v2h-2.674a7 7 0 0 1-12.652 0H3v-2h2.07ZM9 10v2h6v-2H9Zm0 4v2h6v-2H9Z"/>`
	bugTwoLinePath                = `<path fill="currentColor" d="M10.562 4.148a7.03 7.03 0 0 1 2.876 0l1.683-1.684l1.414 1.415l-1.05 1.05a7.031 7.031 0 0 1 2.841 3.07H21v2h-2.07c.046.327.07.661.07 1v1h2v2h-2v1c0 .34-.024.674-.07 1H21v2h-2.674a7 7 0 0 1-12.652 0H3v-2h2.07A7.06 7.06 0 0 1 5 15v-1H3v-2h2v-1c0-.339.024-.673.07-1H3V8h2.674a7.03 7.03 0 0 1 2.84-3.07l-1.05-1.05L8.88 2.464l1.683 1.684ZM12 6a5 5 0 0 0-5 5v4a5 5 0 0 0 10 0v-4a5 5 0 0 0-5-5Zm-3 8h6v2H9v-2Zm0-4h6v2H9v-2Z"/>`
	buildingFillPath              = `<path fill="currentColor" d="M21 19h2v2H1v-2h2V4a1 1 0 0 1 1-1h10a1 1 0 0 1 1 1v15h2V9h3a1 1 0 0 1 1 1v9ZM7 11v2h4v-2H7Zm0-4v2h4V7H7Z"/>`
	buildingFourFillPath          = `<path fill="currentColor" d="M21 20h2v2H1v-2h2V3a1 1 0 0 1 1-1h16a1 1 0 0 1 1 1v17ZM8 11v2h3v-2H8Zm0-4v2h3V7H8Zm0 8v2h3v-2H8Zm5 0v2h3v-2h-3Zm0-4v2h3v-2h-3Zm0-4v2h3V7h-3Z"/>`
	buildingFourLinePath          = `<path fill="currentColor" d="M21 20h2v2H1v-2h2V3a1 1 0 0 1 1-1h16a1 1 0 0 1 1 1v17Zm-2 0V4H5v16h14ZM8 11h3v2H8v-2Zm0-4h3v2H8V7Zm0 8h3v2H8v-2Zm5 0h3v2h-3v-2Zm0-4h3v2h-3v-2Zm0-4h3v2h-3V7Z"/>`
	buildingLinePath              = `<path fill="currentColor" d="M21 19h2v2H1v-2h2V4a1 1 0 0 1 1-1h10a1 1 0 0 1 1 1v15h4v-8h-2V9h3a1 1 0 0 1 1 1v9ZM5 5v14h8V5H5Zm2 6h4v2H7v-2Zm0-4h4v2H7V7Z"/>`
	buildingThreeFillPath         = `<path fill="currentColor" d="M10 10.111V1l11 6v14H3V7l7 3.111Z"/>`
	buildingThreeLinePath         = `<path fill="currentColor" d="M10 10.111V1l11 6v14H3V7l7 3.111Zm2-5.742v8.82l-7-3.111V19h14V8.187L12 4.37Z"/>`
	buildingTwoFillPath           = `<path fill="currentColor" d="M12 19h2V6l6.394 2.74a1 1 0 0 1 .606.92V19h2v2H1v-2h2V5.65a1 1 0 0 1 .594-.914l7.703-3.423A.5.5 0 0 1 12 1.77V19Z"/>`
	buildingTwoLinePath           = `<path fill="currentColor" d="M3 19V5.7a1 1 0 0 1 .658-.94l9.671-3.516a.5.5 0 0 1 .671.47v4.953l6.316 2.105a1 1 0 0 1 .684.949V19h2v2H1v-2h2Zm2 0h7V3.856L5 6.4V19Zm14 0v-8.558l-5-1.667V19h5Z"/>`
	busFillPath                   = `<path fill="currentColor" d="M17 20H7v1a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-1H3v-8H2V8h1V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v3h1v4h-1v8h-1v1a1 1 0 0 1-1 1h-1a1 1 0 0 1-1-1v-1ZM5 5v9h14V5H5Zm0 11v2h4v-2H5Zm10 0v2h4v-2h-4Z"/>`
	busLinePath                   = `<path fill="currentColor" d="M17 20H7v1a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-1H3v-8H2V8h1V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v3h1v4h-1v8h-1v1a1 1 0 0 1-1 1h-1a1 1 0 0 1-1-1v-1Zm2-8V5H5v7h14Zm0 2H5v4h14v-4ZM6 15h4v2H6v-2Zm8 0h4v2h-4v-2Z"/>`
	busTwoFillPath                = `<path fill="currentColor" d="M17 20H7v1a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1v-9H2V8h1V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v3h1v4h-1v9a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1v-1ZM5 5v7h14V5H5Zm2.5 13a1.5 1.5 0 1 0 0-3a1.5 1.5 0 0 0 0 3Zm9 0a1.5 1.5 0 1 0 0-3a1.5 1.5 0 0 0 0 3Z"/>`
	busTwoLinePath                = `<path fill="currentColor" d="M17 20H7v1a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1v-9H2V8h1V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v3h1v4h-1v9a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1v-1ZM5 5v6h14V5H5Zm14 8H5v5h14v-5ZM7.5 17a1.5 1.5 0 1 1 0-3a1.5 1.5 0 0 1 0 3Zm9 0a1.5 1.5 0 1 1 0-3a1.5 1.5 0 0 1 0 3Z"/>`
	busWifiFillPath               = `<path fill="currentColor" d="M12 3v2H5v9h14v-2h2v8h-1v1a1 1 0 0 1-1 1h-1a1 1 0 0 1-1-1v-1H7v1a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-1H3v-8H2V8h1V5a2 2 0 0 1 2-2h7ZM9 16H5v2h4v-2Zm10 0h-4v2h4v-2Zm-.5-15a4.5 4.5 0 1 1 0 9a4.5 4.5 0 0 1 0-9Zm0 5.167c-.491 0-.94.177-1.289.47l-.125.115L18.5 8.167l1.413-1.415a1.994 1.994 0 0 0-1.413-.585Zm0-2.667a4.65 4.65 0 0 0-3.128 1.203l-.173.165l.944.942a3.323 3.323 0 0 1 2.357-.977a3.32 3.32 0 0 1 2.201.83l.156.147l.943-.943A4.652 4.652 0 0 0 18.5 3.5Z"/>`
	busWifiLinePath               = `<path fill="currentColor" d="M12 3v2H5v7h16v8h-1v1a1 1 0 0 1-1 1h-1a1 1 0 0 1-1-1v-1H7v1a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-1H3v-8H2V8h1V5a2 2 0 0 1 2-2h7Zm7 11H5v4h14v-4Zm-9 1v2H6v-2h4Zm8 0v2h-4v-2h4Zm.5-14a4.5 4.5 0 1 1 0 9a4.5 4.5 0 0 1 0-9Zm0 5.167c-.491 0-.94.177-1.289.47l-.125.115L18.5 8.167l1.413-1.415a1.994 1.994 0 0 0-1.413-.585Zm0-2.667a4.65 4.65 0 0 0-3.128 1.203l-.173.165l.944.942a3.323 3.323 0 0 1 2.357-.977a3.32 3.32 0 0 1 2.201.83l.156.147l.943-.943A4.652 4.652 0 0 0 18.5 3.5Z"/>`
	cactusFillPath                = `<path fill="currentColor" d="M11.998 2a4 4 0 0 1 4 4v9h1c.55 0 1-.45 1-1V8a1 1 0 0 1 2 0v6a3 3 0 0 1-3 3h-1v3h2v2h-12v-2h2v-6h-1a3 3 0 0 1-3-3V9a1 1 0 1 1 2 0v2c0 .55.45 1 1 1h1V6a4 4 0 0 1 4-4Z"/>`
	cactusLinePath                = `<path fill="currentColor" d="M11.998 2a4 4 0 0 1 4 4v9h1c.55 0 1-.45 1-1V8a1 1 0 0 1 2 0v6c0 1.66-1.34 3-3 3h-1v3h2v2h-12v-2h2v-6h-1a3 3 0 0 1-3-3V9a1 1 0 1 1 2 0v2c0 .55.45 1 1 1h1V6a4 4 0 0 1 4-4Zm0 2a2 2 0 0 0-2 2v14h4V6a2 2 0 0 0-2-2Z"/>`
	cakeFillPath                  = `<path fill="currentColor" d="M13 7v4h7a1 1 0 0 1 1 1v8h2v2H1v-2h2v-8a1 1 0 0 1 1-1h7V7h2Zm.83-6.598A3 3 0 0 1 12.732 4.5L11 5.5a3 3 0 0 1 1.098-4.098l1.732-1Z"/>`
	cakeLinePath                  = `<path fill="currentColor" d="M13 7v4h7a1 1 0 0 1 1 1v8h2v2H1v-2h2v-8a1 1 0 0 1 1-1h7V7h2Zm6 6H5v7h14v-7ZM13.83.402A3 3 0 0 1 12.732 4.5L11 5.5a3 3 0 0 1 1.098-4.098l1.732-1Z"/>`
	cakeThreeFillPath             = `<path fill="currentColor" d="M15.5 2a3.5 3.5 0 0 1 3.437 4.163l-.015.066a4.502 4.502 0 0 1 .303 8.428l-1.086 6.507a1 1 0 0 1-.986.836H6.847a1 1 0 0 1-.986-.836l-1.029-6.17a3 3 0 0 1-.829-5.824L4 9a6 6 0 0 1 8.575-5.42A3.493 3.493 0 0 1 15.5 2ZM11 15H9v5h2v-5Zm4 0h-2v5h2v-5Zm2.5-2a2.5 2.5 0 1 0-.956-4.81l-.175.081a2 2 0 0 1-2.663-.804l-.07-.137A4 4 0 0 0 10 5C7.858 5 6.109 6.684 6.005 8.767L6 8.964l.003.17a2 2 0 0 1-1.186 1.863l-.15.059A1.001 1.001 0 0 0 5 13h12.5Z"/>`
	cakeThreeLinePath             = `<path fill="currentColor" d="M15.5 2a3.5 3.5 0 0 1 3.437 4.163l-.015.066a4.502 4.502 0 0 1 .303 8.428l-1.086 6.507a1 1 0 0 1-.986.836H6.847a1 1 0 0 1-.986-.836l-1.029-6.17a3 3 0 0 1-.829-5.824L4 9a6 6 0 0 1 8.574-5.421A3.496 3.496 0 0 1 15.5 2ZM9 15H6.86l.834 5H9v-5Zm4 0h-2v5h2v-5Zm4.139 0H15v5h1.305l.834-5ZM10 5C7.858 5 6.109 6.684 6.005 8.767L6 8.964l.003.17a2 2 0 0 1-1.186 1.863l-.15.059A1.001 1.001 0 0 0 5 13h12.5a2.5 2.5 0 1 0-.956-4.81l-.175.081a2 2 0 0 1-2.663-.804l-.07-.137A4 4 0 0 0 10 5Zm5.5-1a1.5 1.5 0 0 0-1.287.729a6.006 6.006 0 0 1 1.24 1.764a4.45 4.45 0 0 1 1.446-.453A1.5 1.5 0 0 0 15.5 4Z"/>`
	cakeTwoFillPath               = `<path fill="currentColor" d="M8 6v3.999h3V6h2v3.999h3V6h2v3.999L19 10a3 3 0 0 1 2.995 2.824L22 13v1c0 1.014-.377 1.94-.999 2.645L21 21a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1v-4.36a4.024 4.024 0 0 1-.972-2.182l-.022-.253L2 14v-1a3 3 0 0 1 2.824-2.995L5 10l1-.001V6h2Zm11 6H5a1 1 0 0 0-.993.883L4 13v.971l.003.147A2 2 0 0 0 6 16a1.999 1.999 0 0 0 1.98-1.7l.015-.153l.005-.176c.036-1.248 1.827-1.293 1.989-.134l.01.134l.004.147a2 2 0 0 0 3.992.031l.012-.282c.124-1.156 1.862-1.156 1.986 0l.013.282a2 2 0 0 0 3.988 0L20 14v-1a1 1 0 0 0-.883-.993L19 12ZM7 1c1.32.871 1.663 2.088 1.449 2.888a1.5 1.5 0 0 1-2.898-.776C5.85 2.002 7 2.5 7 1Zm5 0c1.32.871 1.663 2.088 1.449 2.888a1.5 1.5 0 1 1-2.898-.776C10.85 2.002 12 2.5 12 1Zm5 0c1.32.871 1.663 2.088 1.449 2.888a1.5 1.5 0 1 1-2.898-.776C15.85 2.002 17 2.5 17 1Z"/>`
	cakeTwoLinePath               = `<path fill="currentColor" d="M8 6v3.999h3V6h2v3.999h3V6h2v3.999L19 10a3 3 0 0 1 2.995 2.824L22 13v1c0 1.014-.377 1.94-.999 2.645L21 21a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1v-4.36a4.024 4.024 0 0 1-.972-2.182l-.022-.253L2 14v-1a3 3 0 0 1 2.824-2.995L5 10l1-.001V6h2Zm1.002 10.641l-.054.063a3.994 3.994 0 0 1-2.514 1.273l-.23.018L6 18c-.345 0-.68-.044-1-.126V20h14v-2.126a4.007 4.007 0 0 1-3.744-.963l-.15-.15l-.106-.117l-.107.118a3.99 3.99 0 0 1-2.451 1.214l-.242.02L12 18a3.977 3.977 0 0 1-2.797-1.144l-.15-.157l-.051-.058ZM19 12H5a1 1 0 0 0-.993.883L4 13v.971l.003.147A2 2 0 0 0 6 16a1.999 1.999 0 0 0 1.98-1.7l.015-.153l.005-.176c.036-1.248 1.827-1.293 1.989-.134l.01.134l.004.147a2 2 0 0 0 3.992.031l.012-.282c.124-1.156 1.862-1.156 1.986 0l.013.282a2 2 0 0 0 3.988 0L20 14v-1a1 1 0 0 0-.883-.993L19 12ZM7 1c1.32.871 1.663 2.088 1.449 2.888a1.5 1.5 0 0 1-2.898-.776C5.85 2.002 7 2.5 7 1Zm5 0c1.32.871 1.663 2.088 1.449 2.888a1.5 1.5 0 1 1-2.898-.776C10.85 2.002 12 2.5 12 1Zm5 0c1.32.871 1.663 2.088 1.449 2.888a1.5 1.5 0 1 1-2.898-.776C15.85 2.002 17 2.5 17 1Z"/>`
	calculatorFillPath            = `<path fill="currentColor" d="M4 2h16a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1Zm3 10v2h2v-2H7Zm0 4v2h2v-2H7Zm4-4v2h2v-2h-2Zm0 4v2h2v-2h-2Zm4-4v6h2v-6h-2ZM7 6v4h10V6H7Z"/>`
	calculatorLinePath            = `<path fill="currentColor" d="M4 2h16a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1Zm1 2v16h14V4H5Zm2 2h10v4H7V6Zm0 6h2v2H7v-2Zm0 4h2v2H7v-2Zm4-4h2v2h-2v-2Zm0 4h2v2h-2v-2Zm4-4h2v6h-2v-6Z"/>`
	calendarCheckFillPath         = `<path fill="currentColor" d="M9 1v2h6V1h2v2h4a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h4V1h2Zm11 7H4v11h16V8Zm-4.964 2.136l1.414 1.414l-4.95 4.95l-3.536-3.536L9.38 11.55l2.121 2.122l3.536-3.536Z"/>`
	calendarCheckLinePath         = `<path fill="currentColor" d="M9 1v2h6V1h2v2h4a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h4V1h2Zm11 9H4v9h16v-9Zm-4.964 1.136l1.414 1.414l-4.95 4.95l-3.536-3.536L9.38 12.55l2.121 2.122l3.536-3.536ZM7 5H4v3h16V5h-3v1h-2V5H9v1H7V5Z"/>`
	calendarCloseFillPath         = `<path fill="currentColor" d="M9 3V1H7v2H3a1 1 0 0 0-1 1v16a1 1 0 0 0 1 1h18a1 1 0 0 0 1-1V4a1 1 0 0 0-1-1h-4V1h-2v2H9ZM4 8h16v11H4V8Zm5.879 1.964l2.12 2.122l2.122-2.122l1.414 1.415l-2.12 2.121l2.12 2.121l-1.414 1.414L12 14.915l-2.122 2.12l-1.414-1.414l2.122-2.121l-2.122-2.121L9.88 9.963Z"/>`
	calendarCloseLinePath         = `<path fill="currentColor" d="M9 3V1H7v2H3a1 1 0 0 0-1 1v16a1 1 0 0 0 1 1h18a1 1 0 0 0 1-1V4a1 1 0 0 0-1-1h-4V1h-2v2H9Zm-5 7h16v9H4v-9Zm0-5h3v1h2V5h6v1h2V5h3v3H4V5Zm5.879 5.964L12 13.086l2.121-2.122l1.415 1.415l-2.122 2.121l2.121 2.121l-1.414 1.414L12 15.915l-2.121 2.12l-1.415-1.414l2.122-2.12l-2.122-2.122l1.415-1.415Z"/>`
	calendarEventFillPath         = `<path fill="currentColor" d="M17 3h4a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h4V1h2v2h6V1h2v2ZM4 9v10h16V9H4Zm2 4h5v4H6v-4Z"/>`
	calendarEventLinePath         = `<path fill="currentColor" d="M9 1v2h6V1h2v2h4a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h4V1h2Zm11 10H4v8h16v-8Zm-9 2v4H6v-4h5ZM7 5H4v4h16V5h-3v2h-2V5H9v2H7V5Z"/>`
	calendarFillPath              = `<path fill="currentColor" d="M2 11h20v9a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1v-9Zm15-8h4a1 1 0 0 1 1 1v5H2V4a1 1 0 0 1 1-1h4V1h2v2h6V1h2v2Z"/>`
	calendarLinePath              = `<path fill="currentColor" d="M9 1v2h6V1h2v2h4a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h4V1h2Zm11 10H4v8h16v-8ZM7 5H4v4h16V5h-3v2h-2V5H9v2H7V5Z"/>`
	calendarTodoFillPath          = `<path fill="currentColor" d="M17 3h4a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h4V1h2v2h6V1h2v2ZM4 9v10h16V9H4Zm2 2h2v2H6v-2Zm0 4h2v2H6v-2Zm4-4h8v2h-8v-2Zm0 4h5v2h-5v-2Z"/>`
	calendarTodoLinePath          = `<path fill="currentColor" d="M9 1v2h6V1h2v2h4a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h4V1h2Zm11 10H4v8h16v-8ZM8 14v2H6v-2h2Zm10 0v2h-8v-2h8ZM7 5H4v4h16V5h-3v2h-2V5H9v2H7V5Z"/>`
	calendarTwoFillPath           = `<path fill="currentColor" d="M17 3h4a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h4V1h2v2h6V1h2v2ZM4 9v10h16V9H4Zm2 2h2v2H6v-2Zm5 0h2v2h-2v-2Zm5 0h2v2h-2v-2Z"/>`
	calendarTwoLinePath           = `<path fill="currentColor" d="M9 1v2h6V1h2v2h4a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h4V1h2Zm11 10H4v8h16v-8ZM8 13v2H6v-2h2Zm5 0v2h-2v-2h2Zm5 0v2h-2v-2h2ZM7 5H4v4h16V5h-3v2h-2V5H9v2H7V5Z"/>`
	cameraFillPath                = `<path fill="currentColor" d="M9 3h6l2 2h4a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1h4l2-2Zm3 16a6 6 0 1 0 0-12a6 6 0 0 0 0 12Zm0-2a4 4 0 1 1 0-8a4 4 0 0 1 0 8Z"/>`
	cameraLensFillPath            = `<path fill="currentColor" d="M9.827 21.763L14.31 14l3.532 6.117A9.955 9.955 0 0 1 12 22c-.746 0-1.473-.082-2.173-.237ZM7.89 21.12A10.029 10.029 0 0 1 2.458 15h8.965L7.89 21.119ZM2.05 13a9.964 9.964 0 0 1 2.583-7.761L9.112 13H2.05Zm4.109-9.117A9.955 9.955 0 0 1 12 2c.746 0 1.473.082 2.173.237L9.69 10L6.159 3.883ZM16.11 2.88A10.028 10.028 0 0 1 21.542 9h-8.965l3.533-6.119ZM21.95 11a9.964 9.964 0 0 1-2.583 7.761L14.888 11h7.064Z"/>`
	cameraLensLinePath            = `<path fill="currentColor" d="M9.858 19.71L12 16H5.07a8.018 8.018 0 0 0 4.788 3.71ZM4.252 14h4.284L5.07 7.999A7.963 7.963 0 0 0 4 12c0 .69.088 1.36.252 2Zm2.143-7.708L8.535 10L12 4a7.974 7.974 0 0 0-5.605 2.292Zm7.747-2.002L12 8h6.93a8.018 8.018 0 0 0-4.788-3.71ZM19.748 10h-4.284l3.465 6.001A7.964 7.964 0 0 0 20 12a8 8 0 0 0-.252-2Zm-2.143 7.708L15.465 14L12 20a7.974 7.974 0 0 0 5.605-2.292ZM12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10Zm1.155-12h-2.31l-1.154 2l1.154 2h2.31l1.154-2l-1.154-2Z"/>`
	cameraLinePath                = `<path fill="currentColor" d="m9.828 5l-2 2H4v12h16V7h-3.828l-2-2H9.828ZM9 3h6l2 2h4a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1h4l2-2Zm3 15a5.5 5.5 0 1 1 0-11a5.5 5.5 0 0 1 0 11Zm0-2a3.5 3.5 0 1 0 0-7a3.5 3.5 0 0 0 0 7Z"/>`
	cameraOffFillPath             = `<path fill="currentColor" d="M19.587 21H3a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1h.586L1.395 2.808l1.414-1.414l19.799 19.798l-1.415 1.415L19.587 21ZM7.557 8.97a6 6 0 0 0 8.475 8.475l-1.417-1.417a4 4 0 0 1-5.642-5.642L7.556 8.97ZM22 17.786l-4.045-4.045a6 6 0 0 0-6.695-6.695L8.108 3.892L9.001 3h6l2 2h4a1 1 0 0 1 1 1v11.786Zm-8.49-8.492a4.014 4.014 0 0 1 2.198 2.198L13.51 9.294Z"/>`
	cameraOffLinePath             = `<path fill="currentColor" d="M19.587 21H3a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1h.586L1.395 2.808l1.414-1.414l19.799 19.798l-1.415 1.415L19.587 21Zm-14-14H4v12h13.586l-2.18-2.18a5.5 5.5 0 0 1-7.725-7.725L5.587 7Zm3.524 3.525a3.5 3.5 0 0 0 4.865 4.865l-4.865-4.865Zm12.89 7.261l-2-2V7h-3.828l-2-2H9.83l-.308.307l-1.414-1.414L9.001 3h6l2 2h4a1 1 0 0 1 1 1v11.786ZM11.264 7.049a5.5 5.5 0 0 1 6.188 6.188l-2.338-2.338a3.516 3.516 0 0 0-1.512-1.512l-2.338-2.338Z"/>`
	cameraSwitchFillPath          = `<path fill="currentColor" d="M9 3h6l2 2h4a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1h4l2-2Zm5.684 15.368l-.895-1.79A4 4 0 0 1 8 13h2.001L7.839 8.677a6 6 0 0 0 6.845 9.69ZM9.316 7.632l.895 1.79A4 4 0 0 1 16 13h-2.001l2.161 4.323a6 6 0 0 0-6.845-9.69Z"/>`
	cameraSwitchLinePath          = `<path fill="currentColor" d="m9.828 5l-2 2H4v12h16V7h-3.828l-2-2H9.828ZM9 3h6l2 2h4a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1h4l2-2Zm.64 4.53a5.5 5.5 0 0 1 6.187 8.92L13.75 12.6h1.749l.001-.1a3.5 3.5 0 0 0-4.928-3.196L9.64 7.53Zm4.678 9.96a5.5 5.5 0 0 1-6.18-8.905L10.25 12.5H8.5a3.5 3.5 0 0 0 4.886 3.215l.932 1.774Z"/>`
	cameraThreeFillPath           = `<path fill="currentColor" d="M2 6c0-.552.455-1 .992-1h18.016c.548 0 .992.445.992 1v14c0 .552-.455 1-.992 1H2.992A.994.994 0 0 1 2 20V6Zm12 12a5 5 0 1 0 0-10a5 5 0 0 0 0 10ZM4 7v2h3V7H4Zm0-5h6v2H4V2Z"/>`
	cameraThreeLinePath           = `<path fill="currentColor" d="M2 6c0-.552.455-1 .992-1h18.016c.548 0 .992.445.992 1v14c0 .552-.455 1-.992 1H2.992A.994.994 0 0 1 2 20V6Zm2 1v12h16V7H4Zm10 9a3 3 0 1 0 0-6a3 3 0 0 0 0 6Zm0 2a5 5 0 1 1 0-10a5 5 0 0 1 0 10ZM4 2h6v2H4V2Z"/>`
	cameraTwoFillPath             = `<path fill="currentColor" d="M2 3.993A1 1 0 0 1 2.992 3h18.016c.548 0 .992.445.992.993v16.014a1 1 0 0 1-.992.993H2.992A.993.993 0 0 1 2 20.007V3.993ZM12 15a3 3 0 1 1 0-6a3 3 0 0 1 0 6Zm0 2a5 5 0 1 0 0-10a5 5 0 0 0 0 10Zm6-12v2h2V5h-2Z"/>`
	cameraTwoLinePath             = `<path fill="currentColor" d="M2 3.993A1 1 0 0 1 2.992 3h18.016c.548 0 .992.445.992.993v16.014a1 1 0 0 1-.992.993H2.992A.993.993 0 0 1 2 20.007V3.993ZM4 5v14h16V5H4Zm8 10a3 3 0 1 0 0-6a3 3 0 0 0 0 6Zm0 2a5 5 0 1 1 0-10a5 5 0 0 1 0 10Zm5-11h2v2h-2V6Z"/>`
	candleFillPath                = `<path fill="currentColor" d="M9.172 9.331a4 4 0 0 1 0-5.656L12 .846l2.828 2.829A4 4 0 0 1 13 10.377V12h5a1 1 0 0 1 1 1v7h2v2H3v-2h2v-7a1 1 0 0 1 1-1h5v-1.623A3.982 3.982 0 0 1 9.172 9.33Zm1.414-4.242a2 2 0 1 0 2.828 0L12 3.675l-1.414 1.414Z"/>`
	candleLinePath                = `<path fill="currentColor" d="M9.172 9.331a4 4 0 0 1 0-5.656L12 .846l2.828 2.829A4 4 0 0 1 13 10.377V12h5a1 1 0 0 1 1 1v7h2v2H3v-2h2v-7a1 1 0 0 1 1-1h5v-1.623A3.982 3.982 0 0 1 9.172 9.33Zm1.414-4.242a2 2 0 1 0 2.828 0L12 3.675l-1.414 1.414ZM7 14v6h10v-6H7Z"/>`
	capsuleFillPath               = `<path fill="currentColor" d="M19.779 4.222a6 6 0 0 1 0 8.485l-2.122 2.12l-4.95 4.951a6 6 0 0 1-8.485-8.485l7.071-7.071a6 6 0 0 1 8.486 0Zm-4.95 10.606L9.172 9.171l-3.536 3.536a4 4 0 1 0 5.657 5.657l3.536-3.536Z"/>`
	capsuleLinePath               = `<path fill="currentColor" d="M19.779 4.222a6 6 0 0 1 0 8.485l-7.072 7.071a6 6 0 0 1-8.485-8.485l7.071-7.071a6 6 0 0 1 8.486 0Zm-5.657 11.313L8.466 9.878l-2.83 2.829a4 4 0 1 0 5.657 5.657l2.83-2.83Zm4.242-9.9a4 4 0 0 0-5.657 0L9.88 8.465l5.657 5.656l2.827-2.827a4 4 0 0 0 0-5.657Z"/>`
	carFillPath                   = `<path fill="currentColor" d="M19 20H5v1a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1v-9l2.513-6.702A2 2 0 0 1 6.386 4h11.228a2 2 0 0 1 1.873 1.298L22 12v9a1 1 0 0 1-1 1h-1a1 1 0 0 1-1-1v-1ZM4.136 12h15.728l-2.25-6H6.386l-2.25 6ZM6.5 17a1.5 1.5 0 1 0 0-3a1.5 1.5 0 0 0 0 3Zm11 0a1.5 1.5 0 1 0 0-3a1.5 1.5 0 0 0 0 3Z"/>`
	carLinePath                   = `<path fill="currentColor" d="M19 20H5v1a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V11l2.48-5.788A2 2 0 0 1 6.32 4h11.36a2 2 0 0 1 1.838 1.212L22 11v10a1 1 0 0 1-1 1h-1a1 1 0 0 1-1-1v-1Zm1-7H4v5h16v-5ZM4.176 11h15.648l-2.143-5H6.32l-2.143 5ZM6.5 17a1.5 1.5 0 1 1 0-3a1.5 1.5 0 0 1 0 3Zm11 0a1.5 1.5 0 1 1 0-3a1.5 1.5 0 0 1 0 3Z"/>`
	carWashingFillPath            = `<path fill="currentColor" d="M19 21H5v1a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1v-9l2.417-4.029a2 2 0 0 1 1.715-.97h11.736a2 2 0 0 1 1.715.97L22 13.001v9a1 1 0 0 1-1 1h-1a1 1 0 0 1-1-1v-1ZM4.332 13h15.336l-1.8-3H6.132l-1.8 3ZM6.5 18a1.5 1.5 0 1 0 0-3a1.5 1.5 0 0 0 0 3Zm11 0a1.5 1.5 0 1 0 0-3a1.5 1.5 0 0 0 0 3ZM5.44 3.44L6.5 2.379l1.06 1.06a1.5 1.5 0 1 1-2.121 0Zm5.5 0L12 2.379l1.06 1.06a1.5 1.5 0 1 1-2.121 0Zm5.5 0l1.06-1.061l1.06 1.06a1.5 1.5 0 1 1-2.121 0Z"/>`
	carWashingLinePath            = `<path fill="currentColor" d="M19 21H5v1a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V12l2.417-4.029a2 2 0 0 1 1.715-.97h11.736a2 2 0 0 1 1.715.97L22 12.001v10a1 1 0 0 1-1 1h-1a1 1 0 0 1-1-1v-1Zm1-7H4v5h16v-5ZM4.332 12h15.336l-1.8-3H6.132l-1.8 3ZM5.44 3.44L6.5 2.379l1.06 1.06a1.5 1.5 0 1 1-2.121 0Zm5.5 0L12 2.379l1.06 1.06a1.5 1.5 0 1 1-2.121 0Zm5.5 0l1.06-1.061l1.06 1.06a1.5 1.5 0 1 1-2.121 0ZM6.5 18a1.5 1.5 0 1 1 0-3a1.5 1.5 0 0 1 0 3Zm11 0a1.5 1.5 0 1 1 0-3a1.5 1.5 0 0 1 0 3Z"/>`
	caravanFillPath               = `<path fill="currentColor" d="M14.172 3a2 2 0 0 1 1.414.586l4.828 4.828A2 2 0 0 1 21 9.828V17h2v2h-8.126a4.002 4.002 0 0 1-7.748 0H3a1 1 0 0 1-1-1V5a2 2 0 0 1 2-2h10.172ZM11 16a2 2 0 1 0 0 4a2 2 0 0 0 0-4Zm3-9H6v6h8V7Zm-2 2v2H8V9h4Z"/>`
	caravanLinePath               = `<path fill="currentColor" d="M14.172 3a2 2 0 0 1 1.414.586l4.828 4.828A2 2 0 0 1 21 9.828V17h2v2h-8.126a4.002 4.002 0 0 1-7.748 0H3a1 1 0 0 1-1-1V5a2 2 0 0 1 2-2h10.172ZM11 16a2 2 0 1 0 0 4a2 2 0 0 0 0-4Zm3.172-11H4v12h3.126a4.002 4.002 0 0 1 7.748 0H19V9.828L14.172 5ZM14 7v6H6V7h8Zm-2 2H8v2h4V9Z"/>`
	cashFillPath                  = `<path fill="currentColor" d="M3.005 4.003h18a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1h-18a1 1 0 0 1-1-1v-14a1 1 0 0 1 1-1ZM6.5 6H4v2.5A2.5 2.5 0 0 0 6.5 6Zm11 0A2.5 2.5 0 0 0 20 8.5V6h-2.5ZM4 15.5V18h2.5A2.5 2.5 0 0 0 4 15.5ZM17.5 18H20v-2.5a2.5 2.5 0 0 0-2.5 2.5ZM12 16a4 4 0 1 0 0-8a4 4 0 0 0 0 8Z"/>`
	cashLinePath                  = `<path fill="currentColor" d="M12 16a4 4 0 1 0 0-8a4 4 0 0 0 0 8Zm9.005-11.997h-18a1 1 0 0 0-1 1v14a1 1 0 0 0 1 1h18a1 1 0 0 0 1-1v-14a1 1 0 0 0-1-1Zm-17 11.643V8.354a3.508 3.508 0 0 0 2.35-2.351h11.291a3.508 3.508 0 0 0 2.359 2.353v7.288a3.508 3.508 0 0 0-2.36 2.359H6.355a3.508 3.508 0 0 0-2.351-2.357Z"/>`
	castFillPath                  = `<path fill="currentColor" d="M3 3h18a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1h-6c0-.68-.052-1.348-.153-2H20V5H4v3.153A13.1 13.1 0 0 0 2 8V4a1 1 0 0 1 1-1Zm10 18h-2a9 9 0 0 0-9-9v-2c6.075 0 11 4.925 11 11Zm-4 0H7a5 5 0 0 0-5-5v-2a7 7 0 0 1 7 7Zm-4 0H2v-3a3 3 0 0 1 3 3Zm9.373-4A13.032 13.032 0 0 0 6 8.627V7h12v10h-3.627Z"/>`
	castLinePath                  = `<path fill="currentColor" d="M3 3h18a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1h-6c0-.68-.052-1.348-.153-2H20V5H4v3.153A13.1 13.1 0 0 0 2 8V4a1 1 0 0 1 1-1Zm10 18h-2a9 9 0 0 0-9-9v-2c6.075 0 11 4.925 11 11Zm-4 0H7a5 5 0 0 0-5-5v-2a7 7 0 0 1 7 7Zm-4 0H2v-3a3 3 0 0 1 3 3Z"/>`
	cellphoneFillPath             = `<path fill="currentColor" d="M7 2h11a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6a1 1 0 0 1-1-1V0h2v2Zm0 2v5h10V4H7Z"/>`
	cellphoneLinePath             = `<path fill="currentColor" d="M7 2h11a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6a1 1 0 0 1-1-1V0h2v2Zm0 7h10V4H7v5Zm0 2v9h10v-9H7Z"/>`
	celsiusFillPath               = `<path fill="currentColor" d="M4.5 10a3.5 3.5 0 1 1 0-7a3.5 3.5 0 0 1 0 7Zm0-2a1.5 1.5 0 1 0 0-3a1.5 1.5 0 0 0 0 3ZM22 10h-2a4 4 0 0 0-8 0v5a4 4 0 0 0 8 0h2a6 6 0 0 1-12 0v-5a6 6 0 0 1 12 0Z"/>`
	celsiusLinePath               = `<path fill="currentColor" d="M4.5 10a3.5 3.5 0 1 1 0-7a3.5 3.5 0 0 1 0 7Zm0-2a1.5 1.5 0 1 0 0-3a1.5 1.5 0 0 0 0 3ZM22 10h-2a4 4 0 0 0-8 0v5a4 4 0 0 0 8 0h2a6 6 0 0 1-12 0v-5a6 6 0 0 1 12 0Z"/>`
	centosFillPath                = `<path fill="currentColor" d="m12 13.06l4.47 4.471L12 22l-4.47-4.47L12 13.06Zm-8 3.06L7.879 20H4v-3.88Zm16 0V20h-3.88L20 16.12Zm-2.47-8.59L22 12l-4.469 4.47l-4.47-4.47l4.469-4.47Zm-11.06 0L10.94 12l-4.471 4.469L2 12l4.47-4.47ZM12 2l4.469 4.469L12 10.939L7.53 6.47L12 2ZM7.879 4l-3.88 3.879L4 4h3.879ZM20 4v3.879l-3.88-3.88L20 4Z"/>`
	centosLinePath                = `<path fill="currentColor" d="m12 2l4.292 4.292l1.061-1.06L16.121 4H20v3.879l-1.233-1.233l-1.06 1.061L22 12l-4.292 4.293l1.059 1.059L20 16.121V20h-3.88l1.232-1.233l-1.059-1.06L12 22l-4.293-4.293l-1.061 1.06L7.879 20H4v-3.88l1.231 1.232l1.061-1.06L2 12l4.293-4.293l-1.062-1.061L4 7.879V4h3.879L6.646 5.23l1.062 1.062L12 2Zm0 11.413l-2.88 2.879l2.88 2.88l2.879-2.88L12 13.412ZM7.707 9.12L4.828 12l2.878 2.878l2.88-2.88l-2.879-2.877Zm8.585 0l-2.877 2.878l2.878 2.879L19.172 12l-2.88-2.879ZM12 4.828L9.122 7.707l2.879 2.878l2.877-2.879L12 4.828Z"/>`
	characterRecognitionFillPath  = `<path fill="currentColor" d="M20.998 3v18h-18V3h18Zm-8.001 3h-2L6.598 17h2.154l1.199-3h4.09l1.201 3h2.155l-4.4-11Zm-1 2.885L13.242 12H10.75l1.247-3.115Z"/>`
	characterRecognitionLinePath  = `<path fill="currentColor" d="M4.998 15v4h4v2h-6v-6h2Zm16 0v6h-6v-2h4v-4h2Zm-8.001-9l4.4 11h-2.155l-1.201-3h-4.09l-1.199 3H6.598l4.399-11h2Zm-1 2.885L10.75 12h2.492l-1.245-3.115ZM8.998 3v2h-4v4h-2V3h6Zm12 0v6h-2V5h-4V3h6Z"/>`
	chargingPileFillPath          = `<path fill="currentColor" d="M3 19V4a1 1 0 0 1 1-1h9a1 1 0 0 1 1 1v8h2a2 2 0 0 1 2 2v4a1 1 0 1 0 2 0v-7h-2a1 1 0 0 1-1-1V6.414l-1.657-1.657l1.414-1.414l4.95 4.95A.997.997 0 0 1 22 9v9a3 3 0 1 1-6 0v-4h-2v5h1v2H2v-2h1Zm6-8V7l-4 6h3v4l4-6H9Z"/>`
	chargingPileLinePath          = `<path fill="currentColor" d="M14 19h1v2H2v-2h1V4a1 1 0 0 1 1-1h9a1 1 0 0 1 1 1v8h2a2 2 0 0 1 2 2v4a1 1 0 1 0 2 0v-7h-2a1 1 0 0 1-1-1V6.414l-1.657-1.657l1.414-1.414l4.95 4.95A.997.997 0 0 1 22 9v9a3 3 0 1 1-6 0v-4h-2v5Zm-9 0h7V5H5v14Zm4-8h3l-4 6v-4H5l4-6v4Z"/>`
	chargingPileTwoFillPath       = `<path fill="currentColor" d="M20 11h-1V7h1V4h2v3h1v4h-1v7a3 3 0 1 1-6 0v-4h-2v5h1v2H2v-2h1V4a1 1 0 0 1 1-1h9a1 1 0 0 1 1 1v8h2a2 2 0 0 1 2 2v4a1 1 0 1 0 2 0v-7ZM9 11V7l-4 6h3v4l4-6H9Z"/>`
	chargingPileTwoLinePath       = `<path fill="currentColor" d="M20 11h-1V7h1V4h2v3h1v4h-1v7a3 3 0 1 1-6 0v-4h-2v5h1v2H2v-2h1V4a1 1 0 0 1 1-1h9a1 1 0 0 1 1 1v8h2a2 2 0 0 1 2 2v4a1 1 0 1 0 2 0v-7Zm-8 8V5H5v14h7Zm-3-8h3l-4 6v-4H5l4-6v4Z"/>`
	chatCheckFillPath             = `<path fill="currentColor" d="M6.455 19L2 22.5V4a1 1 0 0 1 1-1h18a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H6.455Zm4.838-6.879L8.818 9.646l-1.414 1.415l3.889 3.889l5.657-5.657l-1.414-1.414l-4.243 4.242Z"/>`
	chatCheckLinePath             = `<path fill="currentColor" d="M6.455 19L2 22.5V4a1 1 0 0 1 1-1h18a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H6.455Zm-.692-2H20V5H4v13.385L5.763 17Zm5.53-4.879l4.243-4.242l1.414 1.414l-5.657 5.657l-3.89-3.89l1.415-1.414l2.475 2.475Z"/>`
	chatDeleteFillPath            = `<path fill="currentColor" d="M6.455 19L2 22.5V4a1 1 0 0 1 1-1h18a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H6.455Zm6.96-8l2.474-2.475l-1.414-1.414L12 9.586L9.525 7.11L8.111 8.525L10.586 11L8.11 13.475l1.414 1.414L12 12.414l2.475 2.475l1.414-1.414L13.414 11Z"/>`
	chatDeleteLinePath            = `<path fill="currentColor" d="M6.455 19L2 22.5V4a1 1 0 0 1 1-1h18a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H6.455ZM4 18.385L5.763 17H20V5H4v13.385ZM13.414 11l2.475 2.475l-1.414 1.414L12 12.414L9.525 14.89l-1.414-1.414L10.586 11L8.11 8.525l1.414-1.414L12 9.586l2.475-2.475l1.414 1.414L13.414 11Z"/>`
	chatDownloadFillPath          = `<path fill="currentColor" d="M6.455 19L2 22.5V4a1 1 0 0 1 1-1h18a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H6.455ZM13 11V7h-2v4H8l4 4l4-4h-3Z"/>`
	chatDownloadLinePath          = `<path fill="currentColor" d="M6.455 19L2 22.5V4a1 1 0 0 1 1-1h18a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H6.455ZM4 18.385L5.763 17H20V5H4v13.385ZM13 11h3l-4 4l-4-4h3V7h2v4Z"/>`
	chatFollowUpFillPath          = `<path fill="currentColor" d="M21 3a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H6.455L2 22.5V4a1 1 0 0 1 1-1h18Zm-4 4h-2v8h2V7Zm-6 1H9v1.999L7 10v2l2-.001V14h2v-2.001L13 12v-2l-2-.001V8Z"/>`
	chatFollowUpLinePath          = `<path fill="currentColor" d="M21 3a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H6.455L2 22.5V4a1 1 0 0 1 1-1h18Zm-1 2H4v13.385L5.763 17H20V5Zm-3 2v8h-2V7h2Zm-6 1v1.999L13 10v2l-2-.001V14H9v-2.001L7 12v-2l2-.001V8h2Z"/>`
	chatForwardFillPath           = `<path fill="currentColor" d="M6.455 19L2 22.5V4a1 1 0 0 1 1-1h18a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H6.455ZM12 10H8v2h4v3l4-4l-4-4v3Z"/>`
	chatForwardLinePath           = `<path fill="currentColor" d="M6.455 19L2 22.5V4a1 1 0 0 1 1-1h18a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H6.455ZM4 18.385L5.763 17H20V5H4v13.385ZM12 10V7l4 4l-4 4v-3H8v-2h4Z"/>`
	chatFourFillPath              = `<path fill="currentColor" d="M6.455 19L2 22.5V4a1 1 0 0 1 1-1h18a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H6.455Z"/>`
	chatFourLinePath              = `<path fill="currentColor" d="M5.763 17H20V5H4v13.385L5.763 17Zm.692 2L2 22.5V4a1 1 0 0 1 1-1h18a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H6.455Z"/>`
	chatHeartFillPath             = `<path fill="currentColor" d="M6.455 19L2 22.5V4a1 1 0 0 1 1-1h18a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H6.455Zm5.563-4.3l3.358-3.359a2.25 2.25 0 1 0-3.181-3.182l-.177.177l-.177-.177a2.25 2.25 0 0 0-3.182 3.182l3.359 3.359Z"/>`
	chatHeartLinePath             = `<path fill="currentColor" d="M6.455 19L2 22.5V4a1 1 0 0 1 1-1h18a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H6.455ZM4 18.385L5.763 17H20V5H4v13.385Zm8.018-3.685l-3.359-3.36a2.25 2.25 0 0 1 3.182-3.182l.177.177l.176-.177a2.25 2.25 0 0 1 3.182 3.182l-3.358 3.36Z"/>`
	chatHistoryFillPath           = `<path fill="currentColor" d="M12 2c5.523 0 10 4.477 10 10s-4.477 10-10 10a9.956 9.956 0 0 1-4.708-1.175L2 22l1.176-5.29A9.956 9.956 0 0 1 2 12C2 6.477 6.477 2 12 2Zm1 5h-2v7h6v-2h-4V7Z"/>`
	chatHistoryLinePath           = `<path fill="currentColor" d="M12 2c5.523 0 10 4.477 10 10s-4.477 10-10 10a9.956 9.956 0 0 1-4.708-1.175L2 22l1.176-5.29A9.956 9.956 0 0 1 2 12C2 6.477 6.477 2 12 2Zm0 2a8 8 0 0 0-8 8c0 1.335.326 2.618.94 3.766l.35.654l-.656 2.946l2.948-.654l.653.349A7.955 7.955 0 0 0 12 20a8 8 0 1 0 0-16Zm1 3v5h4v2h-6V7h2Z"/>`
	chatNewFillPath               = `<path fill="currentColor" d="M6.455 19L2 22.5V4a1 1 0 0 1 1-1h18a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H6.455ZM11 10H8v2h3v3h2v-3h3v-2h-3V7h-2v3Z"/>`
	chatNewLinePath               = `<path fill="currentColor" d="M14 3v2H4v13.385L5.763 17H20v-7h2v8a1 1 0 0 1-1 1H6.455L2 22.5V4a1 1 0 0 1 1-1h11Zm5 0V0h2v3h3v2h-3v3h-2V5h-3V3h3Z"/>`
	chatOffFillPath               = `<path fill="currentColor" d="m2.808 1.394l19.799 19.798l-1.415 1.415L17.585 19H6.455L2 22.5V4c0-.17.042-.329.116-.468l-.722-.724l1.414-1.414ZM21 3a1 1 0 0 1 1 1v13.785L7.214 3H21Z"/>`
	chatOffLinePath               = `<path fill="currentColor" d="m2.808 1.394l19.799 19.798l-1.415 1.415L17.585 19H6.455L2 22.5V4c0-.17.042-.329.116-.468l-.722-.724l1.414-1.414ZM4 5.414v12.971L5.763 17h9.822L4 5.414ZM21 3a1 1 0 0 1 1 1v13.785l-2-2V5H9.213L7.214 3H21Z"/>`
	chatOneFillPath               = `<path fill="currentColor" d="M10 3h4a8 8 0 1 1 0 16v3.5c-5-2-12-5-12-11.5a8 8 0 0 1 8-8Z"/>`
	chatOneLinePath               = `<path fill="currentColor" d="M10 3h4a8 8 0 1 1 0 16v3.5c-5-2-12-5-12-11.5a8 8 0 0 1 8-8Zm2 14h2a6 6 0 0 0 0-12h-4a6 6 0 0 0-6 6c0 3.61 2.462 5.966 8 8.48V17Z"/>`
	chatPollFillPath              = `<path fill="currentColor" d="M21 3a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H6.455L2 22.5V4a1 1 0 0 1 1-1h18Zm-8 4h-2v8h2V7Zm4 2h-2v6h2V9Zm-8 2H7v4h2v-4Z"/>`
	chatPollLinePath              = `<path fill="currentColor" d="M21 3a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H6.455L2 22.5V4a1 1 0 0 1 1-1h18Zm-1 2H4v13.385L5.763 17H20V5Zm-7 2v8h-2V7h2Zm4 2v6h-2V9h2Zm-8 2v4H7v-4h2Z"/>`
	chatPrivateFillPath           = `<path fill="currentColor" d="M12 2c5.523 0 10 4.477 10 10s-4.477 10-10 10a9.956 9.956 0 0 1-4.708-1.175L2 22l1.176-5.29A9.956 9.956 0 0 1 2 12C2 6.477 6.477 2 12 2Zm0 5c-1.598 0-3 1.34-3 3v1H8v5h8v-5h-1v-1a3 3 0 0 0-3-3Zm2 6v1h-4v-1h4Zm-2-4c.476 0 1 .49 1 1v1h-2v-1c0-.51.487-1 1-1Z"/>`
	chatPrivateLinePath           = `<path fill="currentColor" d="M12 2c5.523 0 10 4.477 10 10s-4.477 10-10 10a9.956 9.956 0 0 1-4.708-1.175L2 22l1.176-5.29A9.956 9.956 0 0 1 2 12C2 6.477 6.477 2 12 2Zm0 2a8 8 0 0 0-8 8c0 1.335.326 2.618.94 3.766l.35.654l-.656 2.946l2.948-.654l.653.349A7.955 7.955 0 0 0 12 20a8 8 0 1 0 0-16Zm0 3a3 3 0 0 1 3 3v1h1v5H8v-5h1v-1a3 3 0 0 1 3-3Zm2 6h-4v1h4v-1Zm-2-4c-.552 0-1 .45-1 1v1h2v-1a1 1 0 0 0-1-1Z"/>`
	chatQuoteFillPath             = `<path fill="currentColor" d="M21 3a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H6.455L2 22.5V4a1 1 0 0 1 1-1h18ZM10.515 7.412C8.728 8.187 7.5 9.755 7.5 11.505c0 .995.277 1.609.792 2.155c.324.345.837.59 1.374.59a1.75 1.75 0 0 0 1.75-1.75a1.76 1.76 0 0 0-1.614-1.745a2.104 2.104 0 0 0-.479.01v-.092c.006-.44.1-1.74 1.639-2.573l-.447-.688Zm5 0c-1.787.775-3.015 2.343-3.015 4.093c0 .995.277 1.609.792 2.155c.324.345.837.59 1.374.59a1.75 1.75 0 0 0 1.75-1.75a1.76 1.76 0 0 0-1.614-1.745a2.104 2.104 0 0 0-.479.01v-.092c.006-.44.1-1.74 1.639-2.573l-.447-.688Z"/>`
	chatQuoteLinePath             = `<path fill="currentColor" d="M21 3a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H6.455L2 22.5V4a1 1 0 0 1 1-1h18Zm-1 2H4v13.385L5.763 17H20V5Zm-9.485 2.412l.447.688c-1.668.903-1.639 2.352-1.639 2.665c.155-.022.318-.025.48-.01a1.76 1.76 0 0 1 1.613 1.745a1.75 1.75 0 0 1-1.75 1.75c-.537 0-1.05-.245-1.374-.59c-.515-.546-.792-1.16-.792-2.155c0-1.75 1.228-3.318 3.015-4.093Zm5 0l.447.688c-1.668.903-1.639 2.352-1.639 2.665c.155-.022.318-.025.48-.01a1.76 1.76 0 0 1 1.613 1.745a1.75 1.75 0 0 1-1.75 1.75c-.537 0-1.05-.245-1.374-.59c-.515-.546-.792-1.16-.792-2.155c0-1.75 1.228-3.318 3.015-4.093Z"/>`
	chatSettingsFillPath          = `<path fill="currentColor" d="M6.455 19L2 22.5V4a1 1 0 0 1 1-1h18a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H6.455Zm1.69-6.929l-.975.563l1 1.732l.976-.563c.501.51 1.14.887 1.854 1.071V16h2v-1.126a3.996 3.996 0 0 0 1.854-1.072l.976.564l1-1.732l-.975-.563a4.004 4.004 0 0 0 0-2.142l.975-.563l-1-1.732l-.976.563A3.996 3.996 0 0 0 13 7.126V6h-2v1.126a3.996 3.996 0 0 0-1.854 1.071l-.976-.563l-1 1.732l.975.563a4.004 4.004 0 0 0 0 2.142ZM12 13a2 2 0 1 1 0-4a2 2 0 0 1 0 4Z"/>`
	chatSettingsLinePath          = `<path fill="currentColor" d="M22 12h-2V5H4v13.385L5.763 17H12v2H6.455L2 22.5V4a1 1 0 0 1 1-1h18a1 1 0 0 1 1 1v8Zm-7.855 7.071a4.004 4.004 0 0 1 0-2.142l-.975-.563l1-1.732l.976.563A3.996 3.996 0 0 1 17 14.127V13h2v1.126c.715.184 1.352.56 1.854 1.072l.976-.564l1 1.732l-.975.563a4.004 4.004 0 0 1 0 2.142l.975.563l-1 1.732l-.976-.564A4 4 0 0 1 19 21.874V23h-2v-1.126a3.996 3.996 0 0 1-1.854-1.072l-.976.564l-1-1.732l.975-.563ZM18 20a2 2 0 1 0 0-4a2 2 0 0 0 0 4Z"/>`
	chatSmileFillPath             = `<path fill="currentColor" d="M6.455 19L2 22.5V4a1 1 0 0 1 1-1h18a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H6.455ZM7 10a5 5 0 0 0 10 0h-2a3 3 0 1 1-6 0H7Z"/>`
	chatSmileLinePath             = `<path fill="currentColor" d="M6.455 19L2 22.5V4a1 1 0 0 1 1-1h18a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H6.455Zm-.692-2H20V5H4v13.385L5.763 17ZM7 10h2a3 3 0 1 0 6 0h2a5 5 0 0 1-10 0Z"/>`
	chatSmileThreeFillPath        = `<path fill="currentColor" d="M12 2c5.523 0 10 4.477 10 10s-4.477 10-10 10H2l2.929-2.929A9.969 9.969 0 0 1 2 12C2 6.477 6.477 2 12 2Zm4 11H8a4 4 0 0 0 8 0Z"/>`
	chatSmileThreeLinePath        = `<path fill="currentColor" d="M2 12C2 6.477 6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10H2l2.929-2.929A9.969 9.969 0 0 1 2 12Zm4.828 8H12a8 8 0 1 0-8-8c0 2.152.851 4.165 2.343 5.657l1.414 1.414l-.929.929ZM8 13h8a4 4 0 0 1-8 0Z"/>`
	chatSmileTwoFillPath          = `<path fill="currentColor" d="M7.291 20.824L2 22l1.176-5.291A9.956 9.956 0 0 1 2 12C2 6.477 6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10a9.956 9.956 0 0 1-4.709-1.176ZM7 12a5 5 0 0 0 10 0h-2a3 3 0 1 1-6 0H7Z"/>`
	chatSmileTwoLinePath          = `<path fill="currentColor" d="M7.291 20.824L2 22l1.176-5.291A9.956 9.956 0 0 1 2 12C2 6.477 6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10a9.956 9.956 0 0 1-4.709-1.176Zm.29-2.113l.653.35A7.955 7.955 0 0 0 12 20a8 8 0 1 0-8-8c0 1.335.325 2.617.94 3.766l.349.653l-.655 2.947l2.947-.655ZM7 12h2a3 3 0 1 0 6 0h2a5 5 0 0 1-10 0Z"/>`
	chatThreeFillPath             = `<path fill="currentColor" d="M7.291 20.824L2 22l1.176-5.291A9.956 9.956 0 0 1 2 12C2 6.477 6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10a9.956 9.956 0 0 1-4.709-1.176Z"/>`
	chatThreeLinePath             = `<path fill="currentColor" d="M7.291 20.824L2 22l1.176-5.291A9.956 9.956 0 0 1 2 12C2 6.477 6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10a9.956 9.956 0 0 1-4.709-1.176Zm.29-2.113l.653.35A7.955 7.955 0 0 0 12 20a8 8 0 1 0-8-8c0 1.335.325 2.617.94 3.766l.349.653l-.655 2.947l2.947-.655Z"/>`
	chatTwoFillPath               = `<path fill="currentColor" d="M14.45 19L12 22.5L9.55 19H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h18a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1h-6.55Z"/>`
	chatTwoLinePath               = `<path fill="currentColor" d="M14.45 19L12 22.5L9.55 19H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h18a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1h-6.55Zm-1.041-2H20V5H4v12h6.591L12 19.012L13.409 17Z"/>`
	chatUploadFillPath            = `<path fill="currentColor" d="M6.455 19L2 22.5V4a1 1 0 0 1 1-1h18a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H6.455ZM13 11h3l-4-4l-4 4h3v4h2v-4Z"/>`
	chatUploadLinePath            = `<path fill="currentColor" d="M6.455 19L2 22.5V4a1 1 0 0 1 1-1h18a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H6.455ZM4 18.385L5.763 17H20V5H4v13.385ZM13 11v4h-2v-4H8l4-4l4 4h-3Z"/>`
	chatVoiceFillPath             = `<path fill="currentColor" d="M4.929 19.071A9.969 9.969 0 0 1 2 12C2 6.477 6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10H2l2.929-2.929ZM11 6v12h2V6h-2ZM7 9v6h2V9H7Zm8 0v6h2V9h-2Z"/>`
	chatVoiceLinePath             = `<path fill="currentColor" d="M2 12C2 6.477 6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10H2l2.929-2.929A9.969 9.969 0 0 1 2 12Zm4.828 8H12a8 8 0 1 0-8-8c0 2.152.851 4.165 2.343 5.657l1.414 1.414l-.929.929ZM11 6h2v12h-2V6ZM7 9h2v6H7V9Zm8 0h2v6h-2V9Z"/>`
	checkDoubleFillPath           = `<path fill="currentColor" d="m11.602 13.76l1.412 1.412l8.466-8.466l1.414 1.415l-9.88 9.88l-6.364-6.365l1.414-1.414l2.125 2.125l1.413 1.412Zm.002-2.828l4.952-4.953l1.41 1.41l-4.952 4.953l-1.41-1.41Zm-2.827 5.655L7.364 18L1 11.636l1.414-1.414l1.413 1.413l-.001.001l4.951 4.951Z"/>`
	checkDoubleLinePath           = `<path fill="currentColor" d="m11.602 13.76l1.412 1.412l8.466-8.466l1.414 1.415l-9.88 9.88l-6.364-6.365l1.414-1.414l2.125 2.125l1.413 1.412Zm.002-2.828l4.952-4.953l1.41 1.41l-4.952 4.953l-1.41-1.41Zm-2.827 5.655L7.364 18L1 11.636l1.414-1.414l1.413 1.413l-.001.001l4.951 4.951Z"/>`
	checkFillPath                 = `<path fill="currentColor" d="m10 15.17l9.193-9.191l1.414 1.414l-10.606 10.606l-6.364-6.364l1.414-1.414l4.95 4.95Z"/>`
	checkLinePath                 = `<path fill="currentColor" d="m10 15.17l9.193-9.191l1.414 1.414l-10.606 10.606l-6.364-6.364l1.414-1.414l4.95 4.95Z"/>`
	checkboxBlankCircleFillPath   = `<path fill="currentColor" d="M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2S2 6.477 2 12s4.477 10 10 10Z"/>`
	checkboxBlankCircleLinePath   = `<path fill="currentColor" d="M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10Zm0-2a8 8 0 1 0 0-16a8 8 0 0 0 0 16Z"/>`
	checkboxBlankFillPath         = `<path fill="currentColor" d="M4 3h16a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Z"/>`
	checkboxBlankLinePath         = `<path fill="currentColor" d="M4 3h16a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Zm1 2v14h14V5H5Z"/>`
	checkboxCircleFillPath        = `<path fill="currentColor" d="M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10Zm-.997-6l7.07-7.071l-1.413-1.414l-5.657 5.657l-2.829-2.829l-1.414 1.414L11.003 16Z"/>`
	checkboxCircleLinePath        = `<path fill="currentColor" d="M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10Zm0-2a8 8 0 1 0 0-16a8 8 0 0 0 0 16Zm-.997-4L6.76 11.757l1.414-1.414l2.829 2.829l5.657-5.657l1.414 1.414L11.003 16Z"/>`
	checkboxFillPath              = `<path fill="currentColor" d="M4 3h16a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Zm7.003 13l7.07-7.071l-1.413-1.414l-5.657 5.657l-2.829-2.829l-1.414 1.414L11.003 16Z"/>`
	checkboxIndeterminateFillPath = `<path fill="currentColor" d="M4 3h16a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Zm3 8v2h10v-2H7Z"/>`
	checkboxIndeterminateLinePath = `<path fill="currentColor" d="M4 3h16a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Zm1 2v14h14V5H5Zm2 6h10v2H7v-2Z"/>`
	checkboxLinePath              = `<path fill="currentColor" d="M4 3h16a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Zm1 2v14h14V5H5Zm6.003 11L6.76 11.757l1.414-1.414l2.829 2.829l5.657-5.657l1.414 1.414L11.003 16Z"/>`
	checkboxMultipleBlankFillPath = `<path fill="currentColor" d="M7 7V3a1 1 0 0 1 1-1h13a1 1 0 0 1 1 1v13a1 1 0 0 1-1 1h-4v3.992C17 21.55 16.551 22 15.992 22H3.008A1.006 1.006 0 0 1 2 20.992l.003-12.985C2.003 7.451 2.452 7 3.01 7H7Zm2 0h6.993C16.549 7 17 7.449 17 8.007V15h3V4H9v3Z"/>`
	checkboxMultipleBlankLinePath = `<path fill="currentColor" d="M7 7V3a1 1 0 0 1 1-1h13a1 1 0 0 1 1 1v13a1 1 0 0 1-1 1h-4v3.992C17 21.55 16.551 22 15.992 22H3.008A1.006 1.006 0 0 1 2 20.992l.003-12.985C2.003 7.451 2.452 7 3.01 7H7Zm2 0h6.993C16.549 7 17 7.449 17 8.007V15h3V4H9v3ZM4.003 9L4 20h11V9H4.003Z"/>`
	checkboxMultipleFillPath      = `<path fill="currentColor" d="M7 7V3a1 1 0 0 1 1-1h13a1 1 0 0 1 1 1v13a1 1 0 0 1-1 1h-4v3.992C17 21.55 16.551 22 15.992 22H3.008A1.006 1.006 0 0 1 2 20.992l.003-12.985C2.003 7.451 2.452 7 3.01 7H7Zm2 0h6.993C16.549 7 17 7.449 17 8.007V15h3V4H9v3Zm-.498 11l5.657-5.657l-1.414-1.414l-4.243 4.243l-2.12-2.122l-1.415 1.414L8.502 18Z"/>`
	checkboxMultipleLinePath      = `<path fill="currentColor" d="M7 7V3a1 1 0 0 1 1-1h13a1 1 0 0 1 1 1v13a1 1 0 0 1-1 1h-4v3.992C17 21.55 16.551 22 15.992 22H3.008A1.006 1.006 0 0 1 2 20.992l.003-12.985C2.003 7.451 2.452 7 3.01 7H7Zm2 0h6.993C16.549 7 17 7.449 17 8.007V15h3V4H9v3Zm6 2H4.003L4 20h11V9Zm-6.498 9l-3.535-3.536L6.38 13.05l2.121 2.122l4.243-4.243l1.414 1.414L8.502 18Z"/>`
	chinaRailwayFillPath          = `<path fill="currentColor" d="M11 19v-6l-2-1V9h6v3l-2 1v6l5 1v2H6v-2l5-1ZM10 2.223V1h4v1.223a9.003 9.003 0 0 1 2.993 16.266l-1.11-1.664a7 7 0 1 0-7.767 0l-1.109 1.664A9.003 9.003 0 0 1 10 2.223Z"/>`
	chinaRailwayLinePath          = `<path fill="currentColor" d="M11 20v-7H9v-3h6v3h-2v7h5v2H6v-2h5ZM10 2.223V1h4v1.223a9.003 9.003 0 0 1 2.993 16.266l-1.11-1.664a7 7 0 1 0-7.767 0l-1.109 1.664A9.003 9.003 0 0 1 10 2.223Z"/>`
	chromeFillPath                = `<path fill="currentColor" d="M9.827 21.763C5.35 20.771 2 16.777 2 12c0-1.822.487-3.53 1.339-5.002l4.283 7.419a4.999 4.999 0 0 0 4.976 2.548l-2.77 4.798ZM12 22l4.287-7.425A4.977 4.977 0 0 0 17 12a4.978 4.978 0 0 0-1-3h5.542A9.98 9.98 0 0 1 22 12c0 5.523-4.477 10-10 10Zm2.572-8.455a2.999 2.999 0 0 1-5.17-.045l-.029-.05a3 3 0 1 1 5.225.05l-.026.045Zm-9.94-8.306A9.974 9.974 0 0 1 12 2a9.996 9.996 0 0 1 8.662 5H12a5.001 5.001 0 0 0-4.599 3.034L4.632 5.24Z"/>`
	chromeLinePath                = `<path fill="currentColor" d="m10.364 19.833l1.93-3.342a4.499 4.499 0 0 1-4.234-2.315L4.795 8.52a8.003 8.003 0 0 0 5.57 11.313Zm2.226.146A8 8 0 0 0 19.602 9.5h-3.86c.479.715.758 1.575.758 2.5c0 .848-.234 1.64-.642 2.318l-3.268 5.66Zm1.553-6.691l.022-.038a2.5 2.5 0 1 0-4.354-.042l.024.042a2.499 2.499 0 0 0 4.308.037Zm-8.108-6.62l1.928 3.34A4.5 4.5 0 0 1 12 7.5h6.615A7.992 7.992 0 0 0 12 4a7.98 7.98 0 0 0-5.965 2.669ZM12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10Z"/>`
	circleFillPath                = `<path fill="currentColor" d="M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2S2 6.477 2 12s4.477 10 10 10Z"/>`
	circleLinePath                = `<path fill="currentColor" d="M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10Zm0-2a8 8 0 1 0 0-16a8 8 0 0 0 0 16Z"/>`
	clapperboardFillPath          = `<path fill="currentColor" d="m17.998 7l2.31-4h.7c.548 0 .992.445.992.993v16.014a1 1 0 0 1-.992.993H2.992A.993.993 0 0 1 2 20.007V3.993A1 1 0 0 1 2.992 3h3.006l-2.31 4h2.31l2.31-4h3.69l-2.31 4h2.31l2.31-4h3.69l-2.31 4h2.31Z"/>`
	clapperboardLinePath          = `<path fill="currentColor" d="m5.998 7l2.31-4h3.69l-2.31 4h-3.69Zm6 0l2.31-4h3.69l-2.31 4h-3.69Zm6 0l2.31-4h.7c.548 0 .992.445.992.993v16.014a1 1 0 0 1-.992.993H2.992A.993.993 0 0 1 2 20.007V3.993A1 1 0 0 1 2.992 3h3.006L4 6.46V19h16V7h-2.002Z"/>`
	clipboardFillPath             = `<path fill="currentColor" d="M6 4v4h12V4h2.007c.548 0 .993.445.993.993v16.014a.994.994 0 0 1-.993.993H3.993A.993.993 0 0 1 3 21.007V4.993C3 4.445 3.445 4 3.993 4H6Zm2-2h8v4H8V2Z"/>`
	clipboardLinePath             = `<path fill="currentColor" d="M7 4V2h10v2h3.007c.548 0 .993.445.993.993v16.014a.994.994 0 0 1-.993.993H3.993A.993.993 0 0 1 3 21.007V4.993C3 4.445 3.445 4 3.993 4H7Zm0 2H5v14h14V6h-2v2H7V6Zm2-2v2h6V4H9Z"/>`
	clockwiseFillPath             = `<path fill="currentColor" d="M20 10h3l-4 5l-4-5h3V8a3 3 0 0 0-3-3h-4V3h4a5 5 0 0 1 5 5v2Zm-7-1a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V10a1 1 0 0 1 1-1h10Z"/>`
	clockwiseLinePath             = `<path fill="currentColor" d="m20 10.586l1.828-1.829l1.415 1.415L19 14.414l-4.243-4.242l1.415-1.415L18 10.586V8a3 3 0 0 0-3-3h-4V3h4a5 5 0 0 1 5 5v2.586ZM13 9a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V10a1 1 0 0 1 1-1h10Zm-1 2H4v8h8v-8Z"/>`
	clockwiseTwoFillPath          = `<path fill="currentColor" d="M10 4V1l5 4l-5 4V6H8a3 3 0 0 0-3 3v4H3V9a5 5 0 0 1 5-5h2Zm-1 7a1 1 0 0 1 1-1h10a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H10a1 1 0 0 1-1-1V11Z"/>`
	clockwiseTwoLinePath          = `<path fill="currentColor" d="M10.586 4L8.757 2.172L10.172.757L14.414 5l-4.242 4.243l-1.415-1.415L10.586 6H8a3 3 0 0 0-3 3v4H3V9a5 5 0 0 1 5-5h2.586ZM9 11a1 1 0 0 1 1-1h10a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H10a1 1 0 0 1-1-1V11Zm2 1v8h8v-8h-8Z"/>`
	closeCircleFillPath           = `<path fill="currentColor" d="M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10Zm0-11.414L9.172 7.757L7.757 9.172L10.586 12l-2.829 2.828l1.415 1.415L12 13.414l2.828 2.829l1.415-1.415L13.414 12l2.829-2.828l-1.415-1.415L12 10.586Z"/>`
	closeCircleLinePath           = `<path fill="currentColor" d="M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10Zm0-2a8 8 0 1 0 0-16a8 8 0 0 0 0 16Zm0-9.414l2.828-2.829l1.415 1.415L13.414 12l2.829 2.828l-1.415 1.415L12 13.414l-2.828 2.829l-1.415-1.415L10.586 12L7.757 9.172l1.415-1.415L12 10.586Z"/>`
	closeFillPath                 = `<path fill="currentColor" d="m12 10.586l4.95-4.95l1.415 1.415l-4.95 4.95l4.95 4.95l-1.415 1.414l-4.95-4.95l-4.95 4.95l-1.413-1.415l4.95-4.95l-4.95-4.95L7.05 5.638l4.95 4.95Z"/>`
	closeLinePath                 = `<path fill="currentColor" d="m12 10.586l4.95-4.95l1.415 1.415l-4.95 4.95l4.95 4.95l-1.415 1.414l-4.95-4.95l-4.95 4.95l-1.413-1.415l4.95-4.95l-4.95-4.95L7.05 5.638l4.95 4.95Z"/>`
	closedCaptioningFillPath      = `<path fill="currentColor" d="M21 3a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h18ZM9 8c-2.208 0-4 1.792-4 4s1.792 4 4 4c1.1 0 2.1-.45 2.828-1.172l-1.414-1.414a2 2 0 1 1 0-2.828l1.415-1.413A3.988 3.988 0 0 0 9 8Zm7 0c-2.208 0-4 1.792-4 4a4.001 4.001 0 0 0 6.828 2.828l-1.414-1.414a2 2 0 1 1 0-2.828l1.415-1.413A3.988 3.988 0 0 0 16 8Z"/>`
	closedCaptioningLinePath      = `<path fill="currentColor" d="M21 3a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h18Zm-1 2H4v14h16V5ZM9 8c1.104 0 2.105.448 2.829 1.173l-1.414 1.414a2 2 0 1 0 0 2.828l1.413 1.413A4.001 4.001 0 0 1 5 12c0-2.208 1.792-4 4-4Zm7 0c1.105 0 2.105.448 2.829 1.173l-1.414 1.414a2 2 0 1 0 0 2.828l1.413 1.413A4.001 4.001 0 0 1 12 12c0-2.208 1.792-4 4-4Z"/>`
	cloudFillPath                 = `<path fill="currentColor" d="M17 7a8.003 8.003 0 0 0-7.493 5.19l1.873.703A6.002 6.002 0 0 1 23 15a6 6 0 0 1-6 6H7A6 6 0 0 1 5.008 9.339a7 7 0 0 1 13.757-2.143A8.027 8.027 0 0 0 17 7Z"/>`
	cloudLinePath                 = `<path fill="currentColor" d="M12 2a7 7 0 0 1 6.992 7.339A6 6 0 0 1 17 21H7A6 6 0 0 1 5.008 9.339A7 7 0 0 1 12 2Zm0 2a5 5 0 0 0-4.994 5.243l.07 1.488l-1.404.494A4.002 4.002 0 0 0 7 19h10a4 4 0 1 0-3.796-5.265l-1.898-.633A6.003 6.003 0 0 1 17 9a5 5 0 0 0-5-5Z"/>`
	cloudOffFillPath              = `<path fill="currentColor" d="m3.515 2.1l19.092 19.092l-1.415 1.415l-2.014-2.015A5.984 5.984 0 0 1 17 21H7A6 6 0 0 1 5.008 9.339a6.992 6.992 0 0 1 .353-2.563L2.1 3.514L3.515 2.1ZM17 9a6.003 6.003 0 0 1 5.204 8.989L14.01 9.796C14.89 9.29 15.91 9 17 9Zm-5-7a7.003 7.003 0 0 1 6.765 5.195a8.027 8.027 0 0 0-6.206 1.15L7.694 3.48A6.97 6.97 0 0 1 12 2Z"/>`
	cloudOffLinePath              = `<path fill="currentColor" d="m3.515 2.1l19.092 19.092l-1.415 1.415l-2.014-2.015A5.984 5.984 0 0 1 17 21H7A6 6 0 0 1 5.008 9.339a6.992 6.992 0 0 1 .353-2.563L2.1 3.514L3.515 2.1ZM7 9c0 .081.002.163.006.243l.07 1.488l-1.404.494A4.002 4.002 0 0 0 7 19h10c.186 0 .369-.013.548-.037L7.03 8.445C7.01 8.627 7 8.812 7 9Zm5-7a7 7 0 0 1 6.992 7.339a6.003 6.003 0 0 1 3.212 8.65l-1.493-1.494a3.999 3.999 0 0 0-5.207-5.206L14.01 9.796A5.983 5.983 0 0 1 17 9a5 5 0 0 0-7.876-4.09l-1.43-1.43A6.97 6.97 0 0 1 12 2Z"/>`
	cloudWindyFillPath            = `<path fill="currentColor" d="M14 19v-3.993H2.074a8 8 0 1 1 14.383-6.908A5.5 5.5 0 1 1 17.5 19h-3.499Zm-8 2h10v2H6v-2Zm-4-4h10v2H2v-2Z"/>`
	cloudWindyLinePath            = `<path fill="currentColor" d="M14 18v-2h3.5a3.5 3.5 0 1 0-2.5-5.95V10a6 6 0 0 0-12 0v.007H1V10a8 8 0 0 1 15.458-2.901A5.5 5.5 0 1 1 17.5 18H14Zm-8 2h10v2H6v-2Zm0-8h8v2H6v-2Zm-4 4h10v2H2v-2Z"/>`
	cloudyFillPath                = `<path fill="currentColor" d="M9 20.985a8.5 8.5 0 1 1 7.715-12.982A6.5 6.5 0 0 1 17 20.981V21H9v-.015Z"/>`
	cloudyLinePath                = `<path fill="currentColor" d="M9.5 6a6.5 6.5 0 0 0 0 13h7a4.5 4.5 0 1 0-.957-8.898A6.502 6.502 0 0 0 9.5 6Zm7 15h-7a8.5 8.5 0 1 1 7.215-12.997A6.5 6.5 0 0 1 16.5 21Z"/>`
	cloudyTwoFillPath             = `<path fill="currentColor" d="M17 21H7A6 6 0 0 1 5.008 9.339a7 7 0 1 1 13.984 0A6 6 0 0 1 17 21Z"/>`
	cloudyTwoLinePath             = `<path fill="currentColor" d="M17 21H7A6 6 0 0 1 5.008 9.339a7 7 0 1 1 13.984 0A6 6 0 0 1 17 21ZM7 19h10a4 4 0 1 0-.426-7.978a5 5 0 1 0-9.148 0A4 4 0 1 0 7 19Z"/>`
	codeBoxFillPath               = `<path fill="currentColor" d="M3 3h18a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Zm13.465 12.536L20 12l-3.535-3.536L15.05 9.88L17.172 12l-2.122 2.121l1.415 1.415ZM6.828 12L8.95 9.879L7.536 8.464L4 12l3.536 3.536L8.95 14.12L6.828 12Zm4.416 5l3.64-10h-2.128l-3.64 10h2.128Z"/>`
	codeBoxLinePath               = `<path fill="currentColor" d="M3 3h18a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Zm1 2v14h16V5H4Zm16 7l-3.535 3.536l-1.415-1.415L17.172 12L15.05 9.879l1.415-1.415L20 12ZM6.828 12l2.122 2.121l-1.414 1.415L4 12l3.536-3.536L8.95 9.88L6.828 12Zm4.416 5H9.116l3.64-10h2.128l-3.64 10Z"/>`
	codeFillPath                  = `<path fill="currentColor" d="m23 12l-7.071 7.07l-1.414-1.413L20.172 12l-5.657-5.657l1.414-1.414L23 11.999ZM3.828 12l5.657 5.657l-1.414 1.414L1 12l7.071-7.071l1.414 1.414L3.828 12Z"/>`
	codeLinePath                  = `<path fill="currentColor" d="m23 12l-7.071 7.07l-1.414-1.413L20.172 12l-5.657-5.657l1.414-1.414L23 11.999ZM3.828 12l5.657 5.657l-1.414 1.414L1 12l7.071-7.071l1.414 1.414L3.828 12Z"/>`
	codeSFillPath                 = `<path fill="currentColor" d="m24 12l-5.657 5.657l-1.414-1.414L21.172 12l-4.243-4.243l1.414-1.414L24 12ZM2.828 12l4.243 4.243l-1.414 1.414L0 12l5.657-5.657L7.07 7.757L2.828 12Z"/>`
	codeSLinePath                 = `<path fill="currentColor" d="m24 12l-5.657 5.657l-1.414-1.414L21.172 12l-4.243-4.243l1.414-1.414L24 12ZM2.828 12l4.243 4.243l-1.414 1.414L0 12l5.657-5.657L7.07 7.757L2.828 12Z"/>`
	codeSSlashFillPath            = `<path fill="currentColor" d="m24 12l-5.657 5.657l-1.414-1.414L21.172 12l-4.243-4.243l1.414-1.414L24 12ZM2.828 12l4.243 4.243l-1.414 1.414L0 12l5.657-5.657L7.07 7.757L2.828 12Zm6.96 9H7.66l6.552-18h2.128L9.788 21Z"/>`
	codeSSlashLinePath            = `<path fill="currentColor" d="m24 12l-5.657 5.657l-1.414-1.414L21.172 12l-4.243-4.243l1.414-1.414L24 12ZM2.828 12l4.243 4.243l-1.414 1.414L0 12l5.657-5.657L7.07 7.757L2.828 12Zm6.96 9H7.66l6.552-18h2.128L9.788 21Z"/>`
	codeViewPath                  = `<path fill="currentColor" d="m16.95 8.465l1.414-1.415l4.95 4.95l-4.95 4.95l-1.414-1.414L20.485 12L16.95 8.465Zm-9.9 0L3.515 12l3.535 3.536l-1.414 1.414L.686 12l4.95-4.95L7.05 8.465Z"/>`
	codepenFillPath               = `<path fill="currentColor" d="M12 10.202L9.303 12L12 13.798L14.697 12L12 10.202Zm4.5.596L19.197 9L13 4.869v3.596l3.5 2.333Zm3.5.07L18.303 12L20 13.132v-2.264Zm-3.5 2.334L13 15.535v3.596L19.197 15L16.5 13.202ZM11 8.465V4.869L4.803 9L7.5 10.798L11 8.465ZM4.803 15L11 19.131v-3.596l-3.5-2.333L4.803 15Zm.894-3L4 10.868v2.264L5.697 12ZM2 9a1 1 0 0 1 .445-.832l9-6a1 1 0 0 1 1.11 0l9 6A1 1 0 0 1 22 9v6a1 1 0 0 1-.445.832l-9 6a1 1 0 0 1-1.11 0l-9-6A1 1 0 0 1 2 15V9Z"/>`
	codepenLinePath               = `<path fill="currentColor" d="M16.5 13.202L13 15.535v3.596L19.197 15L16.5 13.202ZM14.697 12L12 10.202L9.303 12L12 13.798L14.697 12ZM20 10.868L18.303 12L20 13.132v-2.264ZM19.197 9L13 4.869v3.596l3.5 2.333L19.197 9ZM7.5 10.798L11 8.465V4.869L4.803 9L7.5 10.798ZM4.803 15L11 19.131v-3.596l-3.5-2.333L4.803 15ZM4 13.132L5.697 12L4 10.868v2.264ZM2 9a1 1 0 0 1 .445-.832l9-6a1 1 0 0 1 1.11 0l9 6A1 1 0 0 1 22 9v6a1 1 0 0 1-.445.832l-9 6a1 1 0 0 1-1.11 0l-9-6A1 1 0 0 1 2 15V9Z"/>`
	coinFillPath                  = `<path fill="currentColor" d="M23.005 12.003v2c0 3.314-4.925 6-11 6c-5.967 0-10.824-2.591-10.995-5.823l-.005-.177v-2c0 3.314 4.925 6 11 6s11-2.686 11-6Zm-11-8c6.075 0 11 2.686 11 6s-4.925 6-11 6s-11-2.686-11-6s4.925-6 11-6Z"/>`
	coinLinePath                  = `<path fill="currentColor" d="M12.005 4.003c6.075 0 11 2.686 11 6v4c0 3.314-4.925 6-11 6c-5.967 0-10.824-2.591-10.995-5.823l-.005-.177v-4c0-3.314 4.925-6 11-6Zm0 12c-3.72 0-7.01-1.008-9-2.55v.55c0 1.882 3.883 4 9 4c5.01 0 8.838-2.03 8.995-3.882l.005-.118l.001-.55c-1.99 1.542-5.28 2.55-9.001 2.55Zm0-10c-5.117 0-9 2.118-9 4c0 1.882 3.883 4 9 4s9-2.118 9-4c0-1.882-3.883-4-9-4Z"/>`
	coinsFillPath                 = `<path fill="currentColor" d="M14.005 2.003a8 8 0 0 1 3.292 15.293A8 8 0 1 1 6.711 6.71a8.003 8.003 0 0 1 7.294-4.707Zm-3 7h-2v1a2.5 2.5 0 0 0-.164 4.995l.164.005h2l.09.008a.5.5 0 0 1 0 .984l-.09.008h-4v2h2v1h2v-1a2.5 2.5 0 0 0 .164-4.995l-.164-.005h-2l-.09-.008a.5.5 0 0 1 0-.984l.09-.008h4v-2h-2v-1Zm3-5A5.985 5.985 0 0 0 9.52 6.016a8 8 0 0 1 8.47 8.471a6 6 0 0 0-3.986-10.484Z"/>`
	coinsLinePath                 = `<path fill="currentColor" d="M14.005 2.003a8 8 0 0 1 3.292 15.293A8 8 0 1 1 6.711 6.71a8.003 8.003 0 0 1 7.294-4.707Zm-4 6a6 6 0 1 0 0 12a6 6 0 0 0 0-12Zm1 1v1h2v2h-4a.5.5 0 0 0-.09.992l.09.008h2a2.5 2.5 0 0 1 0 5v1h-2v-1h-2v-2h4a.5.5 0 0 0 .09-.992l-.09-.008h-2a2.5 2.5 0 0 1 0-5v-1h2Zm3-5A5.985 5.985 0 0 0 9.52 6.016a8 8 0 0 1 8.47 8.471a6 6 0 0 0-3.986-10.484Z"/>`
	collageFillPath               = `<path fill="currentColor" d="m11.19 13.264l1.382 7.841l-8.571.001a1 1 0 0 1-1-1L3 14.708l8.19-1.444ZM20 3.106a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1h-5.397l-3.174-18h8.572Zm-10.602 0l1.444 8.188L3 12.677v-8.57a1 1 0 0 1 1-1l5.398-.002Z"/>`
	collageLinePath               = `<path fill="currentColor" d="M20 3.106a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1v-16a1 1 0 0 1 1-1h16Zm-8.811 10.159L5 14.355v4.751h7.218l-1.03-5.841ZM19 5.106h-7.219l2.468 14H19v-14Zm-9.25 0H5v7.218l5.841-1.029L9.75 5.106Z"/>`
	commandFillPath               = `<path fill="currentColor" d="M10 8h4V6.5a3.5 3.5 0 1 1 3.5 3.5H16v4h1.5a3.5 3.5 0 1 1-3.5 3.5V16h-4v1.5A3.5 3.5 0 1 1 6.5 14H8v-4H6.5A3.5 3.5 0 1 1 10 6.5V8ZM8 8V6.5A1.5 1.5 0 1 0 6.5 8H8Zm0 8H6.5A1.5 1.5 0 1 0 8 17.5V16Zm8-8h1.5A1.5 1.5 0 1 0 16 6.5V8Zm0 8v1.5a1.5 1.5 0 1 0 1.5-1.5H16Zm-6-6v4h4v-4h-4Z"/>`
	commandLinePath               = `<path fill="currentColor" d="M10 8h4V6.5a3.5 3.5 0 1 1 3.5 3.5H16v4h1.5a3.5 3.5 0 1 1-3.5 3.5V16h-4v1.5A3.5 3.5 0 1 1 6.5 14H8v-4H6.5A3.5 3.5 0 1 1 10 6.5V8ZM8 8V6.5A1.5 1.5 0 1 0 6.5 8H8Zm0 8H6.5A1.5 1.5 0 1 0 8 17.5V16Zm8-8h1.5A1.5 1.5 0 1 0 16 6.5V8Zm0 8v1.5a1.5 1.5 0 1 0 1.5-1.5H16Zm-6-6v4h4v-4h-4Z"/>`
	communityFillPath             = `<path fill="currentColor" d="M9 19h3v-6.058L8 9.454l-4 3.488V19h3v-4h2v4Zm12 2H3a1 1 0 0 1-1-1v-7.513a1 1 0 0 1 .343-.754L6 8.544V4a1 1 0 0 1 1-1h14a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1Zm-5-10v2h2v-2h-2Zm0 4v2h2v-2h-2Zm0-8v2h2V7h-2Zm-4 0v2h2V7h-2Z"/>`
	communityLinePath             = `<path fill="currentColor" d="M21 21H3a1 1 0 0 1-1-1v-7.513a1 1 0 0 1 .343-.754L6 8.544V4a1 1 0 0 1 1-1h14a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1ZM9 19h3v-6.058L8 9.454l-4 3.488V19h3v-4h2v4Zm5 0h6V5H8v2.127c.234 0 .469.082.657.247l5 4.359a1 1 0 0 1 .343.754V19Zm2-8h2v2h-2v-2Zm0 4h2v2h-2v-2Zm0-8h2v2h-2V7Zm-4 0h2v2h-2V7Z"/>`
	compassDiscoverFillPath       = `<path fill="currentColor" d="M13 22C7.477 22 3 17.523 3 12S7.477 2 13 2s10 4.477 10 10s-4.477 10-10 10ZM8 11.5l4 1.5l1.5 4.002L17 8l-9 3.5Z"/>`
	compassDiscoverLinePath       = `<path fill="currentColor" d="M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10Zm0-2a8 8 0 1 0 0-16a8 8 0 0 0 0 16Zm-5-8.5L16 8l-3.5 9.002L11 13l-4-1.5Z"/>`
	compassFillPath               = `<path fill="currentColor" d="M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10Zm3.5-13.5l-5 2l-2 5l5-2l2-5Z"/>`
	compassFourFillPath           = `<path fill="currentColor" d="M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10Zm3.446-12.032a4.02 4.02 0 0 0-1.414-1.414l-5.478 5.478a4.02 4.02 0 0 0 1.414 1.414l5.478-5.478Z"/>`
	compassFourLinePath           = `<path fill="currentColor" d="M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10Zm0-2a8 8 0 1 0 0-16a8 8 0 0 0 0 16Zm3.446-10.032l-5.478 5.478a4.02 4.02 0 0 1-1.414-1.414l5.478-5.478a4.02 4.02 0 0 1 1.414 1.414Z"/>`
	compassLinePath               = `<path fill="currentColor" d="M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10Zm0-2a8 8 0 1 0 0-16a8 8 0 0 0 0 16Zm3.5-11.5l-2 5l-5 2l2-5l5-2Z"/>`
	compassThreeFillPath          = `<path fill="currentColor" d="M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10Zm4.5-14.5L10 10l-2.5 6.5L14 14l2.5-6.5ZM12 13a1 1 0 1 1 0-2a1 1 0 0 1 0 2Z"/>`
	compassThreeLinePath          = `<path fill="currentColor" d="M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10Zm0-2a8 8 0 1 0 0-16a8 8 0 0 0 0 16Zm4.5-12.5L14 14l-6.5 2.5L10 10l6.5-2.5ZM12 13a1 1 0 1 0 0-2a1 1 0 0 0 0 2Z"/>`
	compassTwoFillPath            = `<path fill="currentColor" d="M18.328 4.258L10.586 12L12 13.414l7.742-7.742A9.957 9.957 0 0 1 22 12c0 5.52-4.48 10-10 10S2 17.52 2 12S6.48 2 12 2c2.4 0 4.604.847 6.328 2.258Z"/>`
	compassTwoLinePath            = `<path fill="currentColor" d="m16.625 3.133l-1.5 1.5A7.98 7.98 0 0 0 12 4c-4.42 0-8 3.58-8 8s3.58 8 8 8s8-3.58 8-8a7.979 7.979 0 0 0-.633-3.125l1.5-1.5A9.951 9.951 0 0 1 22 12c0 5.52-4.48 10-10 10S2 17.52 2 12S6.48 2 12 2c1.668 0 3.242.41 4.625 1.133Zm1.739 1.089l1.414 1.414L12 13.414L10.586 12l7.778-7.778Z"/>`
	compassesFillPath             = `<path fill="currentColor" d="M11 4.123V1.997h2v2.126a4.002 4.002 0 0 1 1.802 6.728l6.064 10.502l-1.732 1l-6.063-10.501a4.004 4.004 0 0 1-2.142 0L4.866 22.353l-1.732-1l6.063-10.502A4.002 4.002 0 0 1 11 4.123Zm1 4.874a1 1 0 1 0 0-2a1 1 0 0 0 0 2Z"/>`
	compassesLinePath             = `<path fill="currentColor" d="M11 4.123V1.997h2v2.126a4.002 4.002 0 0 1 1.802 6.728l6.064 10.502l-1.732 1l-6.063-10.501a4.004 4.004 0 0 1-2.142 0L4.866 22.353l-1.732-1l6.063-10.502A4.002 4.002 0 0 1 11 4.123Zm1 5.874a2 2 0 1 0 0-4a2 2 0 0 0 0 4Z"/>`
	compassesTwoFillPath          = `<path fill="currentColor" d="M16.33 13.497a6.987 6.987 0 0 0 2.67-5.5h2a8.987 8.987 0 0 1-3.662 7.246l2.528 4.378a2 2 0 0 1-.732 2.732l-3.527-6.109a8.97 8.97 0 0 1-3.607.753a8.969 8.969 0 0 1-3.608-.753l-3.526 6.109a2 2 0 0 1-.732-2.732l5.063-8.77a4.002 4.002 0 0 1 1.802-6.728V1.997h2v2.126a4.002 4.002 0 0 1 1.803 6.728l1.528 2.646Zm-1.731 1.001l-1.529-2.646a4.003 4.003 0 0 1-2.141 0L9.4 14.498c.803.322 1.68.499 2.598.499c.919 0 1.796-.177 2.6-.499Zm-2.6-5.501a1 1 0 1 0 0-2a1 1 0 0 0 0 2Z"/>`
	compassesTwoLinePath          = `<path fill="currentColor" d="M16.33 13.497a6.987 6.987 0 0 0 2.67-5.5h2a8.987 8.987 0 0 1-3.662 7.246l2.528 4.378a2 2 0 0 1-.732 2.732l-3.527-6.109a8.97 8.97 0 0 1-3.607.753a8.969 8.969 0 0 1-3.608-.753l-3.526 6.109a2 2 0 0 1-.732-2.732l5.063-8.77a4.002 4.002 0 0 1 1.802-6.728V1.997h2v2.126a4.002 4.002 0 0 1 1.803 6.728l1.528 2.646Zm-1.731 1.001l-1.529-2.646a4.003 4.003 0 0 1-2.141 0L9.4 14.498c.803.322 1.68.499 2.598.499c.919 0 1.796-.177 2.6-.499Zm-2.6-4.501a2 2 0 1 0 0-4a2 2 0 0 0 0 4Z"/>`
	computerFillPath              = `<path fill="currentColor" d="M13 18v2h4v2H7v-2h4v-2H2.992A.998.998 0 0 1 2 16.992V4.008C2 3.451 2.455 3 2.992 3h18.016c.548 0 .992.449.992 1.007v12.985c0 .557-.455 1.008-.992 1.008H13Z"/>`
	computerLinePath              = `<path fill="currentColor" d="M4 16h16V5H4v11Zm9 2v2h4v2H7v-2h4v-2H2.992A.998.998 0 0 1 2 16.992V4.008C2 3.451 2.455 3 2.992 3h18.016c.548 0 .992.449.992 1.007v12.985c0 .557-.455 1.008-.992 1.008H13Z"/>`
	contactsBookFillPath          = `<path fill="currentColor" d="M7 2v20H3V2h4Zm2 0h10.005C20.107 2 21 2.898 21 3.99v16.02c0 1.099-.893 1.99-1.995 1.99H9V2Zm13 4h2v4h-2V6Zm0 6h2v4h-2v-4Zm-7 0a2 2 0 1 0 0-4a2 2 0 0 0 0 4Zm-3 4h6a3 3 0 1 0-6 0Z"/>`
	contactsBookLinePath          = `<path fill="currentColor" d="M3 2h16.005C20.107 2 21 2.898 21 3.99v16.02c0 1.099-.893 1.99-1.995 1.99H3V2Zm4 2H5v16h2V4Zm2 16h10V4H9v16Zm2-4a3 3 0 1 1 6 0h-6Zm3-4a2 2 0 1 1 0-4a2 2 0 0 1 0 4Zm8-6h2v4h-2V6Zm0 6h2v4h-2v-4Z"/>`
	contactsBookTwoFillPath       = `<path fill="currentColor" d="M20 22H6a3 3 0 0 1-3-3V5a3 3 0 0 1 3-3h14a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1Zm-1-2v-2H6a1 1 0 1 0 0 2h13Zm-7-10a2 2 0 1 0 0-4a2 2 0 0 0 0 4Zm-3 4h6a3 3 0 1 0-6 0Z"/>`
	contactsBookTwoLinePath       = `<path fill="currentColor" d="M20 22H6a3 3 0 0 1-3-3V5a3 3 0 0 1 3-3h14a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1Zm-1-2v-2H6a1 1 0 1 0 0 2h13ZM5 16.17c.313-.11.65-.17 1-.17h13V4H6a1 1 0 0 0-1 1v11.17ZM12 10a2 2 0 1 1 0-4a2 2 0 0 1 0 4Zm-3 4a3 3 0 1 1 6 0H9Z"/>`
	contactsBookUploadFillPath    = `<path fill="currentColor" d="M7 2v20H3V2h4Zm12.005 0C20.107 2 21 2.898 21 3.99v16.02c0 1.099-.893 1.99-1.995 1.99H9V2h10.005ZM15 8l-4 4h3v4h2v-4h3l-4-4Zm9 4v4h-2v-4h2Zm0-6v4h-2V6h2Z"/>`
	contactsBookUploadLinePath    = `<path fill="currentColor" d="M19.005 2C20.107 2 21 2.898 21 3.99v16.02c0 1.099-.893 1.99-1.995 1.99H3V2h16.005ZM7 4H5v16h2V4Zm12 0H9v16h10V4Zm-5 4l4 4h-3v4h-2v-4h-3l4-4Zm10 4v4h-2v-4h2Zm0-6v4h-2V6h2Z"/>`
	contactsFillPath              = `<path fill="currentColor" d="M2 22a8 8 0 1 1 16 0H2Zm8-9c-3.315 0-6-2.685-6-6s2.685-6 6-6s6 2.685 6 6s-2.685 6-6 6Zm10 4h4v2h-4v-2Zm-3-5h7v2h-7v-2Zm2-5h5v2h-5V7Z"/>`
	contactsLinePath              = `<path fill="currentColor" d="M19 7h5v2h-5V7Zm-2 5h7v2h-7v-2Zm3 5h4v2h-4v-2ZM2 22a8 8 0 1 1 16 0h-2a6 6 0 0 0-12 0H2Zm8-9c-3.315 0-6-2.685-6-6s2.685-6 6-6s6 2.685 6 6s-2.685 6-6 6Zm0-2c2.21 0 4-1.79 4-4s-1.79-4-4-4s-4 1.79-4 4s1.79 4 4 4Z"/>`
	contractLeftFillPath          = `<path fill="currentColor" d="M15.414 4.586V11H21v2h-5.586v6.414L8 12l7.414-7.414ZM4 19V5h2v14H4Z"/>`
	contractLeftLinePath          = `<path fill="currentColor" d="m15.071 4.929l1.415 1.414L11.829 11H21v2h-9.172l4.657 4.657l-1.415 1.414L8.001 12l7.07-7.071Zm-11.07 14.07V5h2v14H4Z"/>`
	contractLeftRightFillPath     = `<path fill="currentColor" d="m5 18l6-6l-6-6v12ZM19 6l-6 6l6 6V6Z"/>`
	contractLeftRightLinePath     = `<path fill="currentColor" d="M18.793 5.793L12.586 12l6.207 6.207l1.415-1.414L15.415 12l4.793-4.793l-1.415-1.414ZM5.207 18.207L11.414 12L5.207 5.793L3.793 7.207L8.586 12l-4.793 4.793l1.414 1.414Z"/>`
	contractRightFillPath         = `<path fill="currentColor" d="M8.586 4.586L16 12l-7.414 7.414V13H3v-2h5.586V4.586ZM18 19V5h2v14h-2Z"/>`
	contractRightLinePath         = `<path fill="currentColor" d="M12.171 11L7.515 6.343l1.414-1.414l7.07 7.07l-7.07 7.072l-1.414-1.414L12.17 13H3v-2h9.171ZM18 19V5h2v14h-2Z"/>`
	contractUpDownFillPath        = `<path fill="currentColor" d="m18 5l-6 6l-6-6h12Zm0 14l-6-6l-6 6h12Z"/>`
	contractUpDownLinePath        = `<path fill="currentColor" d="M5.793 5.207L12 11.414l6.207-6.207l-1.414-1.414L12 8.586L7.207 3.793L5.793 5.207Zm12.414 13.586L12 12.586l-6.207 6.207l1.414 1.414L12 15.414l4.793 4.793l1.414-1.414Z"/>`
	contrastDropFillPath          = `<path fill="currentColor" d="m12 .269l6.364 6.364a9 9 0 1 1-12.728 0L12 .269Zm0 2.828l-4.95 4.95a7 7 0 0 0 4.954 11.95L12 3.097Z"/>`
	contrastDropLinePath          = `<path fill="currentColor" d="m12 3.097l-4.95 4.95a7 7 0 1 0 9.9 0L12 3.097ZM12 .27l6.364 6.364a9 9 0 1 1-12.728 0L12 .269Zm0 17.728v-10a5 5 0 0 1 0 10Z"/>`
	contrastDropTwoFillPath       = `<path fill="currentColor" d="M5.636 6.633L12 .269l6.364 6.364a9 9 0 1 1-12.728 0ZM12 3.097l-4.95 4.95A6.978 6.978 0 0 0 5 12.997h14a6.978 6.978 0 0 0-2.05-4.95L12 3.097Z"/>`
	contrastDropTwoLinePath       = `<path fill="currentColor" d="m12 3.097l-4.95 4.95a7 7 0 1 0 9.9 0L12 3.097ZM12 .27l6.364 6.364a9 9 0 1 1-12.728 0L12 .269ZM7 12.997h10a5 5 0 0 1-10 0Z"/>`
	contrastFillPath              = `<path fill="currentColor" d="M12 21.997c-5.523 0-10-4.478-10-10c0-5.523 4.477-10 10-10s10 4.477 10 10c0 5.522-4.477 10-10 10Zm0-2v-16a8 8 0 0 0 0 16Z"/>`
	contrastLinePath              = `<path fill="currentColor" d="M12 21.997c-5.523 0-10-4.478-10-10c0-5.523 4.477-10 10-10s10 4.477 10 10c0 5.522-4.477 10-10 10Zm0-2a8 8 0 1 0 0-16a8 8 0 0 0 0 16Zm0-2v-12a6 6 0 0 1 0 12Z"/>`
	contrastTwoFillPath           = `<path fill="currentColor" d="M12 21.997c-5.523 0-10-4.478-10-10c0-5.523 4.477-10 10-10s10 4.477 10 10c0 5.522-4.477 10-10 10Zm-6.671-5.575A8 8 0 1 0 16.425 5.325a8.997 8.997 0 0 1-2.304 8.793a8.997 8.997 0 0 1-8.792 2.304Z"/>`
	contrastTwoLinePath           = `<path fill="currentColor" d="M12 21.997c-5.523 0-10-4.478-10-10c0-5.523 4.477-10 10-10s10 4.477 10 10c0 5.522-4.477 10-10 10Zm0-2a8 8 0 1 0 0-16a8 8 0 0 0 0 16Zm-5-4.681a8.965 8.965 0 0 0 5.707-2.612a8.965 8.965 0 0 0 2.612-5.707A6 6 0 1 1 7 15.316Z"/>`
	copilotFillPath               = `<path fill="currentColor" d="M8.662 14.484a1.001 1.001 0 1 1 2.003 0v1.997a1.001 1.001 0 1 1-2.003 0v-1.997Zm6.675 0a1.001 1.001 0 1 0-2.003 0v1.997a1.001 1.001 0 1 0 2.003 0v-1.997ZM11.999 4.028c-.845-1.219-2.598-1.31-3.945-1.188c-1.543.154-2.843.685-3.574 1.464c-1.268 1.386-1.326 4.291-.715 5.89c-.061.274-.12.551-.162.845c-1.13.297-2.283 1.898-2.283 3.043v2.162c0 .6.28 1.148.775 1.522C4.919 19.864 8.439 21.49 12 21.49c3.56 0 7.08-1.626 9.904-3.724a1.89 1.89 0 0 0 .775-1.521v-2.163c0-1.145-1.153-2.746-2.283-3.043c-.042-.294-.1-.57-.162-.844c.611-1.6.552-4.505-.715-5.89c-.731-.78-2.03-1.31-3.574-1.465c-1.347-.121-3.1-.03-3.946 1.188Zm6.675 13.46c-1.535.854-4.085 2-6.675 2s-5.139-1.146-6.674-2v-5.799c2.477.96 5.327.465 6.673-1.758H12c1.346 2.223 4.196 2.717 6.673 1.758v5.798Zm-8.01-10.66c0 1.586-.48 3.312-2.67 3.312s-2.606-.524-2.606-1.997c0-2.336.356-3.336 3.316-3.336c1.71 0 1.96.55 1.96 2.022Zm2.67 0c0-1.472.25-2.02 1.961-2.02c2.96 0 3.316 1 3.316 3.335c0 1.473-.417 1.997-2.607 1.997c-2.19 0-2.67-1.726-2.67-3.311Z"/>`
	copilotLinePath               = `<path fill="currentColor" d="M5.4 7.8c0-2.088 1.178-3 3.172-3c1.196 0 2.129.264 2.129 1.6c0 1.814-.575 3.75-2.7 3.75c-1.229 0-1.798-.176-2.09-.424c-.247-.21-.51-.67-.51-1.926Zm3.172-5C5.497 2.8 3.4 4.626 3.4 7.8c0 1 .137 1.89.53 2.605l-.183.364a6.26 6.26 0 0 0-1.425 1.107c-1.061 1.126-.973 2.389-.973 3.824c0 2.267 2.512 3.62 4.315 4.373c2.133.89 4.677 1.427 6.336 1.427c1.658 0 4.202-.537 6.335-1.427c1.803-.752 4.315-2.106 4.315-4.373c0-1.435.088-2.698-.973-3.823a6.262 6.262 0 0 0-1.425-1.108l-.182-.364c.392-.716.53-1.606.53-2.605c0-3.174-2.097-5-5.172-5c-1.24 0-2.618.26-3.428 1.283C11.19 3.06 9.813 2.8 8.57 2.8ZM8 12.15c1.692 0 3.224-.815 4-2.334c.775 1.519 2.307 2.334 4 2.334c.894 0 1.769-.074 2.517-.38c.511.596 1.17.912 1.705 1.479c.639.677.428 1.584.428 2.451c0 1.272-2.166 2.144-3.086 2.527c-1.942.81-4.223 1.273-5.565 1.273c-1.341 0-3.623-.463-5.565-1.273c-.919-.383-3.085-1.255-3.085-2.527c0-.867-.21-1.774.428-2.451c.56-.595 1.341-.75 1.705-1.479c.748.306 1.623.38 2.518.38Zm5.3-5.75c0-1.336.932-1.6 2.128-1.6c1.994 0 3.171.912 3.171 3c0 1.257-.263 1.716-.51 1.926c-.292.248-.861.424-2.09.424c-2.125 0-2.7-1.936-2.7-3.75Zm-4.638 8.084a1.001 1.001 0 1 1 2.002 0v1.997a1.001 1.001 0 1 1-2.002 0v-1.997Zm6.675 0a1.001 1.001 0 1 0-2.003 0v1.997a1.001 1.001 0 1 0 2.003 0v-1.997Z"/>`
	copperCoinFillPath            = `<path fill="currentColor" d="M12.005 22.003c-5.523 0-10-4.477-10-10s4.477-10 10-10s10 4.477 10 10s-4.477 10-10 10Zm0-14.243l-4.243 4.243l4.243 4.243l4.242-4.243l-4.242-4.243Z"/>`
	copperCoinLinePath            = `<path fill="currentColor" d="M12.005 22.003c-5.523 0-10-4.477-10-10s4.477-10 10-10s10 4.477 10 10s-4.477 10-10 10Zm0-2a8 8 0 1 0 0-16a8 8 0 0 0 0 16Zm0-12.95l4.95 4.95l-4.95 4.95l-4.95-4.95l4.95-4.95Zm0 2.829l-2.121 2.12l2.12 2.122l2.122-2.121l-2.121-2.121Z"/>`
	copperDiamondFillPath         = `<path fill="currentColor" d="M12.005 22.003c-5.523 0-10-4.477-10-10s4.477-10 10-10s10 4.477 10 10s-4.477 10-10 10Zm-2.5-13l-2.5 2.5l5 5l5-5l-2.5-2.5h-5Z"/>`
	copperDiamondLinePath         = `<path fill="currentColor" d="M12.005 22.003c-5.523 0-10-4.477-10-10s4.477-10 10-10s10 4.477 10 10s-4.477 10-10 10Zm0-2a8 8 0 1 0 0-16a8 8 0 0 0 0 16Zm-3-12h6l2.5 3.5l-5.5 5.5l-5.5-5.5l2.5-3.5Zm1.03 2l-.92 1.29l2.89 2.89l2.89-2.89l-.92-1.29h-3.94Z"/>`
	copyleftFillPath              = `<path fill="currentColor" d="M12 22C6.48 22 2 17.52 2 12S6.48 2 12 2s10 4.48 10 10s-4.48 10-10 10Zm0-5c2.76 0 5-2.24 5-5a5.002 5.002 0 0 0-9.288-2.572l1.715 1.028A3 3 0 1 1 12 15a2.998 2.998 0 0 1-2.574-1.457l-1.714 1.03A4.999 4.999 0 0 0 12 17Z"/>`
	copyleftLinePath              = `<path fill="currentColor" d="M12 22C6.48 22 2 17.52 2 12S6.48 2 12 2s10 4.48 10 10s-4.48 10-10 10Zm0-2c4.42 0 8-3.58 8-8s-3.58-8-8-8s-8 3.58-8 8s3.58 8 8 8Zm0-3a4.999 4.999 0 0 1-4.288-2.428l1.714-1.029A3 3 0 1 0 12 9a2.998 2.998 0 0 0-2.573 1.456L7.712 9.428A4.999 4.999 0 0 1 17 12c0 2.76-2.24 5-5 5Z"/>`
	copyrightFillPath             = `<path fill="currentColor" d="M12 2c5.52 0 10 4.48 10 10s-4.48 10-10 10S2 17.52 2 12S6.48 2 12 2Zm0 5c-2.76 0-5 2.24-5 5s2.24 5 5 5a5 5 0 0 0 4.288-2.428l-1.715-1.028A3 3 0 1 1 12 9c1.093 0 2.05.584 2.573 1.457l1.715-1.03A5 5 0 0 0 12 7Z"/>`
	copyrightLinePath             = `<path fill="currentColor" d="M16.288 9.428A4.999 4.999 0 0 0 7 12a4.999 4.999 0 0 0 9.288 2.572l-1.715-1.028A3 3 0 1 1 12 9c1.093 0 2.05.584 2.573 1.457l1.715-1.03ZM22 12c0-5.52-4.48-10-10-10S2 6.48 2 12s4.48 10 10 10s10-4.48 10-10ZM4 12c0-4.42 3.58-8 8-8s8 3.58 8 8s-3.58 8-8 8s-8-3.58-8-8Z"/>`
	coreosFillPath                = `<path fill="currentColor" d="M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10Zm-3.671-9.696c-.04.85.037 1.697.118 2.544c.005.06.027.074.08.08c.406.054.813.102 1.222.127c.964.061 1.928.139 2.896.085c.55-.03 1.1-.048 1.648-.095a20.59 20.59 0 0 0 2.33-.312c.958-.194 1.907-.425 2.8-.845c.406-.19.79-.415 1.114-.736c.238-.235.408-.507.41-.86a8.893 8.893 0 0 0-.045-.94a9.02 9.02 0 0 0-.482-2.18c-.583-1.618-1.509-2.989-2.825-4.07a8.87 8.87 0 0 0-3.851-1.863c-.5-.105-1.006-.144-1.514-.18c-.573-.041-1.064.12-1.488.514c-.495.457-.837 1.025-1.122 1.633c-.667 1.427-.973 2.954-1.166 4.508c-.106.857-.166 1.721-.125 2.59Zm3.57-5.03c.959.03 1.77.324 2.494.856a4.326 4.326 0 0 1 1.714 2.612c.068.304.097.612.103.922c.005.209-.11.362-.262.49c-.307.258-.67.401-1.05.508a10.32 10.32 0 0 1-2.265.366c-.5.026-1 .035-1.5.01c-.192-.01-.384-.024-.577-.032c-.06-.002-.08-.02-.083-.081c-.024-.434-.058-.868-.051-1.302c.016-1.026.094-2.045.397-3.034c.1-.329.223-.65.42-.936c.173-.25.378-.437.66-.38Z"/>`
	coreosLinePath                = `<path fill="currentColor" d="M9.454 4.414a8 8 0 1 0 10.202 9.91c-3.4 1.46-7.248 1.98-11.545 1.565c-.711-4.125-.264-7.95 1.343-11.475ZM11.902 4a16.806 16.806 0 0 0-1.541 3.768a5.98 5.98 0 0 1 4.114 1.756a5.978 5.978 0 0 1 1.745 3.861c1.33-.341 2.589-.82 3.78-1.433A7.994 7.994 0 0 0 11.902 4ZM4.93 19.07c-3.905-3.905-3.905-10.237 0-14.142c3.905-3.905 10.237-3.905 14.142 0c3.905 3.905 3.905 10.237 0 14.142c-3.905 3.905-10.237 3.905-14.142 0Zm5.02-9.293a17.885 17.885 0 0 0-.076 4.229a23.142 23.142 0 0 0 4.36-.219a3.988 3.988 0 0 0-1.172-2.849A3.99 3.99 0 0 0 9.95 9.777Z"/>`
	cornerDownLeftFillPath        = `<path fill="currentColor" d="M19 14V5h-2v7H9.414V6.586L3 13l6.414 6.414V14H19Z"/>`
	cornerDownLeftLinePath        = `<path fill="currentColor" d="M19 14V5h-2v7H6.828l3.95-3.95l-1.414-1.414L3 13l6.364 6.364l1.414-1.414L6.828 14H19Z"/>`
	cornerDownRightFillPath       = `<path fill="currentColor" d="M5 14V5h2v7h7.586V6.586L21 13l-6.414 6.414V14H5Z"/>`
	cornerDownRightLinePath       = `<path fill="currentColor" d="M5 14V5h2v7h10.172l-3.95-3.95l1.414-1.414L21 13l-6.364 6.364l-1.414-1.414l3.95-3.95H5Z"/>`
	cornerLeftDownFillPath        = `<path fill="currentColor" d="M10 5h9v2h-7v7.586h5.414L11 21l-6.414-6.414H10V5Z"/>`
	cornerLeftDownLinePath        = `<path fill="currentColor" d="M10 5h9v2h-7v10.172l3.95-3.95l1.414 1.414L11 21l-6.364-6.364l1.414-1.414l3.95 3.95V5Z"/>`
	cornerLeftUpFillPath          = `<path fill="currentColor" d="M10 19h9v-2h-7V9.414h5.414L11 3L4.586 9.414H10V19Z"/>`
	cornerLeftUpLinePath          = `<path fill="currentColor" d="M10 19h9v-2h-7V6.828l3.95 3.95l1.414-1.414L11 3L4.636 9.364l1.414 1.414L10 6.828V19Z"/>`
	cornerRightDownFillPath       = `<path fill="currentColor" d="M14 5H5v2h7v7.586H6.586L13 21l6.414-6.414H14V5Z"/>`
	cornerRightDownLinePath       = `<path fill="currentColor" d="M14 5H5v2h7v10.172l-3.95-3.95l-1.414 1.414L13 21l6.364-6.364l-1.414-1.414l-3.95 3.95V5Z"/>`
	cornerRightUpFillPath         = `<path fill="currentColor" d="M14 19H5v-2h7V9.414H6.586L13 3l6.414 6.414H14V19Z"/>`
	cornerRightUpLinePath         = `<path fill="currentColor" d="M14 19H5v-2h7V6.828l-3.95 3.95l-1.414-1.414L13 3l6.364 6.364l-1.414 1.414L14 6.828V19Z"/>`
	cornerUpLeftDoubleFillPath    = `<path fill="currentColor" d="M20 19v-9h-5.586V4.586L8 11l6.414 6.414V12H18v7h2ZM10.164 6.05L8.75 4.636L2.386 11l6.364 6.364l1.414-1.414L5.214 11l4.95-4.95Z"/>`
	cornerUpLeftDoubleLinePath    = `<path fill="currentColor" d="M20 10v9h-2v-7h-6.172l3.95 3.95l-1.414 1.414L8 11l6.364-6.364l1.414 1.414l-3.95 3.95H20ZM8.75 4.636l1.414 1.414L5.214 11l4.95 4.95l-1.414 1.414L2.386 11L8.75 4.636Z"/>`
	cornerUpLeftFillPath          = `<path fill="currentColor" d="M19 10v9h-2v-7H9.414v5.414L3 11l6.414-6.414V10H19Z"/>`
	cornerUpLeftLinePath          = `<path fill="currentColor" d="M19 10v9h-2v-7H6.828l3.95 3.95l-1.414 1.414L3 11l6.364-6.364l1.414 1.414L6.828 10H19Z"/>`
	cornerUpRightDoubleFillPath   = `<path fill="currentColor" d="M4 19v-9h5.586V4.586L16 11l-6.414 6.414V12H6v7H4Zm9.836-12.95l1.414-1.414L21.614 11l-6.364 6.364l-1.414-1.414l4.95-4.95l-4.95-4.95Z"/>`
	cornerUpRightDoubleLinePath   = `<path fill="currentColor" d="M4 10v9h2v-7h6.172l-3.95 3.95l1.414 1.414L16 11L9.636 4.636L8.222 6.05l3.95 3.95H4Zm11.25-5.364L13.837 6.05l4.95 4.95l-4.95 4.95l1.415 1.414L21.615 11L15.25 4.636Z"/>`
	cornerUpRightFillPath         = `<path fill="currentColor" d="M5 10v9h2v-7h7.586v5.414L21 11l-6.414-6.414V10H5Z"/>`
	cornerUpRightLinePath         = `<path fill="currentColor" d="M5 10v9h2v-7h10.172l-3.95 3.95l1.414 1.414L21 11l-6.364-6.364l-1.414 1.414l3.95 3.95H5Z"/>`
	couponFillPath                = `<path fill="currentColor" d="M2.005 9.5V4a1 1 0 0 1 1-1h18a1 1 0 0 1 1 1v5.5a2.5 2.5 0 0 0 0 5V20a1 1 0 0 1-1 1h-18a1 1 0 0 1-1-1v-5.5a2.5 2.5 0 0 0 0-5Zm7-.5v2h6V9h-6Zm0 4v2h6v-2h-6Z"/>`
	couponFiveFillPath            = `<path fill="currentColor" d="M21.005 14v7a1 1 0 0 1-1 1h-16a1 1 0 0 1-1-1v-7a2 2 0 1 0 0-4V3a1 1 0 0 1 1-1h16a1 1 0 0 1 1 1v7a2 2 0 1 0 0 4Zm-12-8v2h6V6h-6Zm0 10v2h6v-2h-6Z"/>`
	couponFiveLinePath            = `<path fill="currentColor" d="M21.005 14v7a1 1 0 0 1-1 1h-16a1 1 0 0 1-1-1v-7a2 2 0 1 0 0-4V3a1 1 0 0 1 1-1h16a1 1 0 0 1 1 1v7a2 2 0 1 0 0 4Zm-2 1.465a3.998 3.998 0 0 1-2-3.465c0-1.48.804-2.773 2-3.465V4h-14v4.535a4 4 0 0 1 0 6.93V20h14v-4.535ZM9.005 6h6v2h-6V6Zm0 10h6v2h-6v-2Z"/>`
	couponFourFillPath            = `<path fill="currentColor" d="M10.005 21h-7a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h7a2 2 0 1 0 4 0h7a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1h-7a2 2 0 1 0-4 0Zm-4-13v8h2V8h-2Zm10 0v8h2V8h-2Z"/>`
	couponFourLinePath            = `<path fill="currentColor" d="M10.005 21h-7a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h7a2 2 0 1 0 4 0h7a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1h-7a2 2 0 1 0-4 0ZM8.54 19a3.998 3.998 0 0 1 3.465-2c1.48 0 2.773.804 3.465 2h4.535V5H15.47a3.999 3.999 0 0 1-3.465 2A3.998 3.998 0 0 1 8.54 5H4.005v14H8.54ZM6.005 8h2v8h-2V8Zm10 0h2v8h-2V8Z"/>`
	couponLinePath                = `<path fill="currentColor" d="M2.005 9.5V4a1 1 0 0 1 1-1h18a1 1 0 0 1 1 1v5.5a2.5 2.5 0 0 0 0 5V20a1 1 0 0 1-1 1h-18a1 1 0 0 1-1-1v-5.5a2.5 2.5 0 0 0 0-5Zm2-1.532a4.5 4.5 0 0 1 0 8.064V19h16v-2.968a4.5 4.5 0 0 1 0-8.064V5h-16v2.968Zm5 1.032h6v2h-6V9Zm0 4h6v2h-6v-2Z"/>`
	couponThreeFillPath           = `<path fill="currentColor" d="M11.005 21a1.5 1.5 0 0 0-3 0h-5a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h5a1.5 1.5 0 0 0 3 0h10a1 1 0 0 1 1 1v5.5a2.5 2.5 0 0 0 0 5V20a1 1 0 0 1-1 1h-10Zm-1.5-10.5a1.5 1.5 0 1 0 0-3a1.5 1.5 0 0 0 0 3Zm0 6a1.5 1.5 0 1 0 0-3a1.5 1.5 0 0 0 0 3Z"/>`
	couponThreeLinePath           = `<path fill="currentColor" d="M2.005 4a1 1 0 0 1 1-1h18a1 1 0 0 1 1 1v5.5a2.5 2.5 0 0 0 0 5V20a1 1 0 0 1-1 1h-18a1 1 0 0 1-1-1V4ZM8.09 19a1.5 1.5 0 0 1 2.83 0h9.085v-2.968a4.5 4.5 0 0 1 0-8.064V5H10.92a1.5 1.5 0 0 1-2.83 0H4.005v14H8.09Zm1.415-8a1.5 1.5 0 1 1 0-3a1.5 1.5 0 0 1 0 3Zm0 5a1.5 1.5 0 1 1 0-3a1.5 1.5 0 0 1 0 3Z"/>`
	couponTwoFillPath             = `<path fill="currentColor" d="M14.005 3v18h-11a1 1 0 0 1-1-1v-5.5a2.5 2.5 0 0 0 0-5V4a1 1 0 0 1 1-1h11Zm2 0h5a1 1 0 0 1 1 1v5.5a2.5 2.5 0 0 0 0 5V20a1 1 0 0 1-1 1h-5V3Z"/>`
	couponTwoLinePath             = `<path fill="currentColor" d="M2.005 9.5V4a1 1 0 0 1 1-1h18a1 1 0 0 1 1 1v5.5a2.5 2.5 0 0 0 0 5V20a1 1 0 0 1-1 1h-18a1 1 0 0 1-1-1v-5.5a2.5 2.5 0 0 0 0-5Zm12-4.5h-10v2.968a4.5 4.5 0 0 1 0 8.064V19h10V5Zm2 0v14h4v-2.968a4.5 4.5 0 0 1 0-8.064V5h-4Z"/>`
	cpuFillPath                   = `<path fill="currentColor" d="M14 20h-4v2H8v-2H5a1 1 0 0 1-1-1v-3H2v-2h2v-4H2V8h2V5a1 1 0 0 1 1-1h3V2h2v2h4V2h2v2h3a1 1 0 0 1 1 1v3h2v2h-2v4h2v2h-2v3a1 1 0 0 1-1 1h-3v2h-2v-2ZM7 7v4h4V7H7Z"/>`
	cpuLinePath                   = `<path fill="currentColor" d="M6 18h12V6H6v12Zm8 2h-4v2H8v-2H5a1 1 0 0 1-1-1v-3H2v-2h2v-4H2V8h2V5a1 1 0 0 1 1-1h3V2h2v2h4V2h2v2h3a1 1 0 0 1 1 1v3h2v2h-2v4h2v2h-2v3a1 1 0 0 1-1 1h-3v2h-2v-2ZM8 8h8v8H8V8Z"/>`
	creativeCommonsByFillPath     = `<path fill="currentColor" d="M12 2c5.523 0 10 4.477 10 10s-4.477 10-10 10S2 17.523 2 12S6.477 2 12 2Zm2 8h-4a1 1 0 0 0-1 1v4h1.5v4h3v-4H15v-4a1 1 0 0 0-1-1Zm-2-5a2 2 0 1 0 0 4a2 2 0 0 0 0-4Z"/>`
	creativeCommonsByLinePath     = `<path fill="currentColor" d="M14 7a2 2 0 1 1-4 0a2 2 0 0 1 4 0Zm1 4a1 1 0 0 0-1-1h-4a1 1 0 0 0-1 1v4h1.5v4h3v-4H15v-4Zm-3-9C6.477 2 2 6.477 2 12s4.477 10 10 10s10-4.477 10-10S17.523 2 12 2ZM4 12a8 8 0 1 1 16 0a8 8 0 0 1-16 0Z"/>`
	creativeCommonsFillPath       = `<path fill="currentColor" d="M12 2c5.523 0 10 4.477 10 10s-4.477 10-10 10S2 17.523 2 12S6.477 2 12 2ZM9 8c-2.208 0-4 1.792-4 4a4.001 4.001 0 0 0 6.828 2.828l-1.414-1.414a2 2 0 1 1 0-2.828l1.415-1.413A3.988 3.988 0 0 0 9 8Zm7 0c-2.208 0-4 1.792-4 4a4.001 4.001 0 0 0 6.828 2.828l-1.414-1.414a2 2 0 1 1 0-2.828l1.415-1.413A3.988 3.988 0 0 0 16 8Z"/>`
	creativeCommonsLinePath       = `<path fill="currentColor" d="M9 8c1.104 0 2.105.448 2.829 1.173l-1.414 1.413a2 2 0 1 0 0 2.828l1.413 1.414A4.001 4.001 0 0 1 5 12c0-2.208 1.792-4 4-4Zm9.829 1.173A4.001 4.001 0 0 0 12 12a4.001 4.001 0 0 0 6.828 2.828l-1.414-1.414a2 2 0 1 1 0-2.828l1.415-1.413ZM2 12C2 6.477 6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10S2 17.523 2 12Zm10-8a8 8 0 1 0 0 16a8 8 0 0 0 0-16Z"/>`
	creativeCommonsNcFillPath     = `<path fill="currentColor" d="m4.256 5.672l3.58 3.577A2.5 2.5 0 0 0 10 13h3.999l.09.008A.5.5 0 0 1 14 14H8.5v2H11v2h2v-2h1c.182 0 .359-.02.53-.056l3.798 3.8A9.958 9.958 0 0 1 12 22C6.477 22 2 17.523 2 12c0-2.4.846-4.604 2.256-6.328ZM12 2c5.523 0 10 4.477 10 10c0 2.4-.846 4.604-2.256 6.328l-3.579-3.577A2.5 2.5 0 0 0 14 11h-4l-.09-.01A.5.5 0 0 1 10 10h5.5V8H13V6h-2v2h-1c-.181 0-.358.02-.529.056l-3.799-3.8A9.959 9.959 0 0 1 12 2Z"/>`
	creativeCommonsNcLinePath     = `<path fill="currentColor" d="M12 2C6.477 2 2 6.477 2 12s4.477 10 10 10s10-4.477 10-10S17.523 2 12 2ZM7.094 5.68A8 8 0 0 1 18.32 16.905l-2.154-2.154A2.5 2.5 0 0 0 14 11h-4a.5.5 0 0 1 0-1.001h5.5V8H13V6h-2v2h-1c-.182 0-.359.02-.53.056L7.094 5.68ZM5.68 7.094L7.835 9.25A2.5 2.5 0 0 0 10 13h4a.5.5 0 0 1 0 1.001H8.5v2H11v2h2v-2h1c.182 0 .359-.02.53-.056l2.376 2.376A8 8 0 0 1 5.68 7.095Z"/>`
	creativeCommonsNdFillPath     = `<path fill="currentColor" d="M12 2c5.523 0 10 4.477 10 10s-4.477 10-10 10S2 17.523 2 12S6.477 2 12 2Zm4 11H8v2h8v-2Zm0-4H8v2h8V9Z"/>`
	creativeCommonsNdLinePath     = `<path fill="currentColor" d="M8 9h8v2H8V9Zm0 6v-2h8v2H8Zm-6-3C2 6.477 6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10S2 17.523 2 12Zm10-8a8 8 0 1 0 0 16a8 8 0 0 0 0-16Z"/>`
	creativeCommonsSaFillPath     = `<path fill="currentColor" d="M12 2c5.52 0 10 4.48 10 10s-4.48 10-10 10S2 17.52 2 12S6.48 2 12 2Zm0 4c-2.177 0-4.03 1.67-4.716 4H6l2.5 3l2.5-3H9.401C9.92 8.805 10.89 8 12 8c1.657 0 3 1.79 3 4s-1.343 4-3 4c-1.11 0-2.08-.804-2.598-1.999H7.285C7.97 16.33 9.823 18 12 18c2.761 0 5-2.686 5-6s-2.239-6-5-6Z"/>`
	creativeCommonsSaLinePath     = `<path fill="currentColor" d="M17 12c0-3.314-2.239-6-5-6c-2.177 0-4.03 1.67-4.716 4H6l2.5 3l2.5-3H9.401C9.92 8.805 10.89 8 12 8c1.657 0 3 1.79 3 4s-1.343 4-3 4c-1.11 0-2.08-.804-2.598-1.999H7.285C7.97 16.33 9.823 18 12 18c2.761 0 5-2.686 5-6ZM12 2a9.971 9.971 0 0 0-7.07 2.93A9.971 9.971 0 0 0 2 12a9.971 9.971 0 0 0 2.93 7.07A9.971 9.971 0 0 0 12 22a9.97 9.97 0 0 0 7.07-2.93A9.97 9.97 0 0 0 22 12a9.971 9.971 0 0 0-2.93-7.07A9.971 9.971 0 0 0 12 2ZM6.344 6.344A7.972 7.972 0 0 1 12 4c2.208 0 4.206.895 5.656 2.344A7.972 7.972 0 0 1 20 12a7.972 7.972 0 0 1-2.344 5.656A7.972 7.972 0 0 1 12 20a7.972 7.972 0 0 1-5.656-2.344A7.972 7.972 0 0 1 4 12c0-2.208.895-4.206 2.344-5.656Z"/>`
	creativeCommonsZeroFillPath   = `<path fill="currentColor" d="M12 2c5.52 0 10 4.48 10 10s-4.48 10-10 10S2 17.52 2 12S6.48 2 12 2Zm0 4c-2.761 0-5 2.686-5 6s2.239 6 5 6s5-2.686 5-6s-2.239-6-5-6Zm2.325 3.472c.422.69.675 1.57.675 2.528c0 2.21-1.343 4-3 4c-.441 0-.86-.127-1.237-.355l3.562-6.173ZM12 8c.441 0 .86.127 1.237.355l-3.562 6.173C9.253 13.838 9 12.958 9 12c0-2.21 1.343-4 3-4Z"/>`
	creativeCommonsZeroLinePath   = `<path fill="currentColor" d="M17 12c0-3.314-2.239-6-5-6s-5 2.686-5 6s2.239 6 5 6s5-2.686 5-6Zm-6.237 3.645l3.562-6.173c.422.69.675 1.57.675 2.528c0 2.21-1.343 4-3 4c-.441 0-.86-.127-1.237-.355ZM9 12c0-2.21 1.343-4 3-4c.441 0 .86.127 1.237.355l-3.562 6.173C9.253 13.838 9 12.958 9 12Zm3-10a9.971 9.971 0 0 0-7.07 2.93A9.971 9.971 0 0 0 2 12a9.971 9.971 0 0 0 2.93 7.07A9.971 9.971 0 0 0 12 22a9.97 9.97 0 0 0 7.07-2.93A9.97 9.97 0 0 0 22 12a9.971 9.971 0 0 0-2.93-7.07A9.971 9.971 0 0 0 12 2ZM6.344 6.344A7.972 7.972 0 0 1 12 4c2.208 0 4.206.895 5.656 2.344A7.972 7.972 0 0 1 20 12a7.972 7.972 0 0 1-2.344 5.656A7.972 7.972 0 0 1 12 20a7.972 7.972 0 0 1-5.656-2.344A7.972 7.972 0 0 1 4 12c0-2.208.895-4.206 2.344-5.656Z"/>`
	criminalFillPath              = `<path fill="currentColor" d="M12 2a9 9 0 0 1 6.894 14.786c1.255.83 2.034 1.89 2.101 3.049L21 20l-9 2l-9-2l.005-.165c.067-1.16.846-2.22 2.1-3.05A8.965 8.965 0 0 1 3 11a9 9 0 0 1 9-9Zm0 11c-1.38 0-2.5.672-2.5 1.5S10.62 16 12 16s2.5-.672 2.5-1.5S13.38 13 12 13ZM9 8c-1.105 0-2 .672-2 1.5S7.895 11 9 11s2-.672 2-1.5S10.105 8 9 8Zm6 0c-1.105 0-2 .672-2 1.5s.895 1.5 2 1.5s2-.672 2-1.5S16.105 8 15 8Z"/>`
	criminalLinePath              = `<path fill="currentColor" d="M12 2a9 9 0 0 1 6.894 14.786c1.255.83 2.034 1.89 2.101 3.049L21 20l-9 2l-9-2l.005-.165c.067-1.16.846-2.22 2.1-3.05A8.965 8.965 0 0 1 3 11a9 9 0 0 1 9-9Zm0 2a7 7 0 0 0-7 7c0 1.567.514 3.05 1.445 4.261l.192.239l1.443 1.717l-1.962 1.299l-.137.097L12 19.951l6.018-1.338l-.049-.036l-.178-.123l-1.871-1.237l1.443-1.718A6.963 6.963 0 0 0 19 11a7 7 0 0 0-7-7Zm0 9c1.38 0 2.5.672 2.5 1.5S13.38 16 12 16s-2.5-.672-2.5-1.5S10.62 13 12 13ZM9 8c1.105 0 2 .672 2 1.5S10.105 11 9 11s-2-.672-2-1.5S7.895 8 9 8Zm6 0c1.105 0 2 .672 2 1.5s-.895 1.5-2 1.5s-2-.672-2-1.5s.895-1.5 2-1.5Z"/>`
	cropFillPath                  = `<path fill="currentColor" d="M19 17h3v2h-3v3h-2v-3H6a1 1 0 0 1-1-1V7H2V5h3V2h2v3h11a1 1 0 0 1 1 1v11Z"/>`
	cropLinePath                  = `<path fill="currentColor" d="M15 17v2H6a1 1 0 0 1-1-1V7H2V5h3V2h2v15h8Zm2 5V7H9V5h9a1 1 0 0 1 1 1v11h3v2h-3v3h-2Z"/>`
	cropTwoFillPath               = `<path fill="currentColor" d="m17.586 5l2.556-2.556l1.414 1.414L19 6.414V17h3v2h-3v3h-2V7H9V5h8.586ZM15 17v2H6a1 1 0 0 1-1-1V7H2V5h3V2h2v15h8ZM9 9h6v6H9V9Z"/>`
	cropTwoLinePath               = `<path fill="currentColor" d="M8.414 17H15v2H6a1 1 0 0 1-1-1V7H2V5h3V2h2v13.586L15.586 7H9V5h8.586l2.556-2.556l1.414 1.414L19 6.414V17h3v2h-3v3h-2V8.414L8.414 17Z"/>`
	crossFillPath                 = `<path fill="currentColor" d="M14 2h-4v6H4v4h6v10h4V12h6V8h-6V2Z"/>`
	crossLinePath                 = `<path fill="currentColor" d="M9 2h6v5h5v6h-5v9H9v-9H4V7h5V2Zm2 2v5H6v2h5v9h2v-9h5V9h-5V4h-2Z"/>`
	crosshairFillPath             = `<path fill="currentColor" d="M19.938 13A8.004 8.004 0 0 1 13 19.938V17h-2v2.938A8.004 8.004 0 0 1 4.062 13H7v-2H4.062A8.004 8.004 0 0 1 11 4.062V7h2V4.062A8.004 8.004 0 0 1 19.938 11H17v2h2.938ZM2 12c0 5.523 4.477 10 10 10s10-4.477 10-10S17.523 2 12 2S2 6.477 2 12Zm10 3a3 3 0 1 0 0-6a3 3 0 0 0 0 6Z"/>`
	crosshairLinePath             = `<path fill="currentColor" d="M13 19.938A8.004 8.004 0 0 0 19.938 13H17v-2h2.938A8.004 8.004 0 0 0 13 4.062V7h-2V4.062A8.004 8.004 0 0 0 4.062 11H7v2H4.062A8.004 8.004 0 0 0 11 19.938V17h2v2.938ZM12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10Zm0-8a2 2 0 1 1 0-4a2 2 0 0 1 0 4Z"/>`
	crosshairTwoFillPath          = `<path fill="currentColor" d="M11 5.07A7.005 7.005 0 0 0 5.07 11H7v2H5.07A7.004 7.004 0 0 0 11 18.93V17h2v1.93A7.004 7.004 0 0 0 18.93 13H17v-2h1.93A7.004 7.004 0 0 0 13 5.07V7h-2V5.07ZM3.055 11A9.004 9.004 0 0 1 11 3.055V1h2v2.055A9.004 9.004 0 0 1 20.945 11H23v2h-2.055A9.004 9.004 0 0 1 13 20.945V23h-2v-2.055A9.004 9.004 0 0 1 3.055 13H1v-2h2.055ZM15 12a3 3 0 1 1-6 0a3 3 0 0 1 6 0Z"/>`
	crosshairTwoLinePath          = `<path fill="currentColor" d="M11 5.07A7.005 7.005 0 0 0 5.07 11H7v2H5.07A7.004 7.004 0 0 0 11 18.93V17h2v1.93A7.004 7.004 0 0 0 18.93 13H17v-2h1.93A7.004 7.004 0 0 0 13 5.07V7h-2V5.07ZM3.055 11A9.004 9.004 0 0 1 11 3.055V1h2v2.055A9.004 9.004 0 0 1 20.945 11H23v2h-2.055A9.004 9.004 0 0 1 13 20.945V23h-2v-2.055A9.004 9.004 0 0 1 3.055 13H1v-2h2.055ZM14 12a2 2 0 1 1-4 0a2 2 0 0 1 4 0Z"/>`
	cssThreeFillPath              = `<path fill="currentColor" d="m5 3l-.65 3.34h13.59L17.5 8.5H3.92l-.66 3.33h13.59l-.76 3.81l-5.48 1.81l-4.75-1.81l.33-1.64H2.85l-.79 4l7.85 3l9.05-3l1.2-6.03l.24-1.21L21.94 3H5Z"/>`
	cssThreeLinePath              = `<path fill="currentColor" d="M2.8 14h2.04l-.545 2.724l5.744 2.155l7.228-2.41L18.36 11H3.4l.4-2h14.96l.8-4H4.6L5 3h17l-3 15l-9 3l-8-3l.8-4Z"/>`
	cupFillPath                   = `<path fill="currentColor" d="M5 3h15a2 2 0 0 1 2 2v3a2 2 0 0 1-2 2h-2v3a4 4 0 0 1-4 4H8a4 4 0 0 1-4-4V4a1 1 0 0 1 1-1Zm13 2v3h2V5h-2ZM2 19h18v2H2v-2Z"/>`
	cupLinePath                   = `<path fill="currentColor" d="M16 13V5H6v8a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2ZM5 3h15a2 2 0 0 1 2 2v3a2 2 0 0 1-2 2h-2v3a4 4 0 0 1-4 4H8a4 4 0 0 1-4-4V4a1 1 0 0 1 1-1Zm13 2v3h2V5h-2ZM2 19h18v2H2v-2Z"/>`
	currencyFillPath              = `<path fill="currentColor" d="M17.005 16.003h2v-12h-10v2h8v10Zm0 2v3c0 .552-.45 1-1.007 1H4.012a1.001 1.001 0 0 1-1.007-1l.002-14c0-.552.45-1 1.007-1h2.99v-3a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1h-3Zm-10-2v2h2v1h2v-1h.5a2.5 2.5 0 0 0 0-5h-3a.5.5 0 1 1 0-1h4.5v-2h-2v-1h-2v1h-.5a2.5 2.5 0 0 0 0 5h3a.5.5 0 0 1 0 1h-4.5Z"/>`
	currencyLinePath              = `<path fill="currentColor" d="M17.005 16.003h2v-12h-10v2h8v10Zm0 2v3c0 .552-.45 1-1.007 1H4.012a1.001 1.001 0 0 1-1.007-1l.002-14c0-.552.45-1 1.007-1h2.99v-3a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1h-3Zm-11.998-10l-.002 12h10v-12H5.007Zm1.998 8h4.5a.5.5 0 1 0 0-1h-3a2.5 2.5 0 0 1 0-5h.5v-1h2v1h2v2h-4.5a.5.5 0 0 0 0 1h3a2.5 2.5 0 0 1 0 5h-.5v1h-2v-1h-2v-2Z"/>`
	cursorFillPath                = `<path fill="currentColor" d="M13.91 12.36L17 20.854l-2.818 1.026l-3.092-8.493l-4.172 3.155l1.49-14.909l10.726 10.463l-5.225.264Z"/>`
	cursorLinePath                = `<path fill="currentColor" d="m15.387 13.498l2.553 7.014l-4.698 1.71l-2.553-7.014l-3.899 2.445l1.619-16.02l11.537 11.232l-4.559.633Zm-.01 5.819l-2.715-7.46l2.96-.411l-5.64-5.49l-.791 7.83l2.531-1.587l2.715 7.46l.94-.342Z"/>`
	customerServiceFillPath       = `<path fill="currentColor" d="M22 17.002a6.002 6.002 0 0 1-4.713 5.86l-.638-1.914A4.003 4.003 0 0 0 19.465 19H17a2 2 0 0 1-2-2v-4a2 2 0 0 1 2-2h2.938a8.001 8.001 0 0 0-15.876 0H7a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2v-5C2 6.477 6.477 2 12 2s10 4.477 10 10v5.002Z"/>`
	customerServiceLinePath       = `<path fill="currentColor" d="M22 17.002a6.002 6.002 0 0 1-4.713 5.86l-.638-1.914A4.003 4.003 0 0 0 19.465 19H17a2 2 0 0 1-2-2v-4a2 2 0 0 1 2-2h2.938a8.001 8.001 0 0 0-15.876 0H7a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2v-5C2 6.477 6.477 2 12 2s10 4.477 10 10v5.002ZM20 17v-4h-3v4h3ZM4 13v4h3v-4H4Z"/>`
	customerServiceTwoFillPath    = `<path fill="currentColor" d="M21 8a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2h-1.062A8.001 8.001 0 0 1 12 23v-2a6 6 0 0 0 6-6V9A6 6 0 0 0 6 9v7H3a2 2 0 0 1-2-2v-4a2 2 0 0 1 2-2h1.062a8.001 8.001 0 0 1 15.876 0H21ZM7.76 15.785l1.06-1.696A5.972 5.972 0 0 0 12 15a5.972 5.972 0 0 0 3.18-.911l1.06 1.696A7.963 7.963 0 0 1 12 17a7.962 7.962 0 0 1-4.24-1.215Z"/>`
	customerServiceTwoLinePath    = `<path fill="currentColor" d="M19.938 8H21a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2h-1.062A8.001 8.001 0 0 1 12 23v-2a6 6 0 0 0 6-6V9A6 6 0 0 0 6 9v7H3a2 2 0 0 1-2-2v-4a2 2 0 0 1 2-2h1.062a8.001 8.001 0 0 1 15.876 0ZM3 10v4h1v-4H3Zm17 0v4h1v-4h-1ZM7.76 15.785l1.06-1.696A5.972 5.972 0 0 0 12 15a5.972 5.972 0 0 0 3.18-.911l1.06 1.696A7.963 7.963 0 0 1 12 17a7.962 7.962 0 0 1-4.24-1.215Z"/>`
	dashboardFillPath             = `<path fill="currentColor" d="M3 13h8V3H3v10Zm0 8h8v-6H3v6Zm10 0h8V11h-8v10Zm0-18v6h8V3h-8Z"/>`
	dashboardLinePath             = `<path fill="currentColor" d="M13 21V11h8v10h-8ZM3 13V3h8v10H3Zm6-2V5H5v6h4ZM3 21v-6h8v6H3Zm2-2h4v-2H5v2Zm10 0h4v-6h-4v6ZM13 3h8v6h-8V3Zm2 2v2h4V5h-4Z"/>`
	dashboardThreeFillPath        = `<path fill="currentColor" d="M12 2c5.523 0 10 4.477 10 10s-4.477 10-10 10S2 17.523 2 12S6.477 2 12 2Zm4.596 5.404a.596.596 0 0 0-.763-.067c-2.89 2.028-4.52 3.23-4.894 3.602a1.5 1.5 0 0 0 2.122 2.122c.219-.22 1.418-1.851 3.598-4.897a.59.59 0 0 0-.063-.76ZM17.5 11a1 1 0 1 0 0 2a1 1 0 0 0 0-2Zm-11 0a1 1 0 1 0 0 2a1 1 0 0 0 0-2Zm2.318-3.596a1 1 0 1 0-1.414 1.414a1 1 0 0 0 1.414-1.414ZM12 5.5a1 1 0 1 0 0 2a1 1 0 0 0 0-2Z"/>`
	dashboardThreeLinePath        = `<path fill="currentColor" d="M12 2c5.523 0 10 4.477 10 10s-4.477 10-10 10S2 17.523 2 12S6.477 2 12 2Zm0 2a8 8 0 1 0 0 16a8 8 0 0 0 0-16Zm3.833 3.337a.596.596 0 0 1 .763.067a.59.59 0 0 1 .063.76c-2.18 3.046-3.38 4.678-3.598 4.897a1.5 1.5 0 0 1-2.122-2.122c.374-.373 2.005-1.574 4.894-3.602ZM17.5 11a1 1 0 1 1 0 2a1 1 0 0 1 0-2Zm-11 0a1 1 0 1 1 0 2a1 1 0 0 1 0-2Zm2.318-3.596a1 1 0 1 1-1.414 1.414a1 1 0 0 1 1.414-1.414ZM12 5.5a1 1 0 1 1 0 2a1 1 0 0 1 0-2Z"/>`
	dashboardTwoFillPath          = `<path fill="currentColor" d="M12 2c5.523 0 10 4.477 10 10s-4.477 10-10 10S2 17.523 2 12S6.477 2 12 2Zm0 3a7 7 0 0 0-5.106 11.789l.156.16l1.414-1.414a5 5 0 0 1 4.83-8.366l1.564-1.56A6.976 6.976 0 0 0 12 5Zm6.392 4.143l-1.561 1.562a5.008 5.008 0 0 1-1.295 4.83l1.414 1.415A6.978 6.978 0 0 0 19 12a6.975 6.975 0 0 0-.608-2.857Zm-2.15-2.8l-3.725 3.725A2.003 2.003 0 0 0 10 12a2 2 0 1 0 3.932-.517l3.725-3.726l-1.414-1.414Z"/>`
	dashboardTwoLinePath          = `<path fill="currentColor" d="M12 2c5.523 0 10 4.477 10 10s-4.477 10-10 10S2 17.523 2 12S6.477 2 12 2Zm0 2a8 8 0 1 0 0 16a8 8 0 0 0 0-16Zm0 1c1.018 0 1.985.217 2.858.608L13.295 7.17a5 5 0 0 0-4.83 8.366L7.05 16.95l-.156-.161A7 7 0 0 1 12 5Zm6.392 4.143c.39.872.608 1.84.608 2.857a6.978 6.978 0 0 1-2.05 4.95l-1.414-1.414a5.008 5.008 0 0 0 1.295-4.83l1.561-1.563Zm-2.15-2.8l1.415 1.414l-3.725 3.726A2.003 2.003 0 0 1 12 14a2 2 0 1 1 .517-3.932l3.726-3.725Z"/>`
	databaseFillPath              = `<path fill="currentColor" d="M11 7V4a1 1 0 0 1 1-1h9a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V8a1 1 0 0 1 1-1h8Zm-6 9v2h5v-2H5Zm9 0v2h5v-2h-5Zm0-3v2h5v-2h-5Zm0-3v2h5v-2h-5Zm-9 3v2h5v-2H5Z"/>`
	databaseLinePath              = `<path fill="currentColor" d="M11 19V9H4v10h7Zm0-12V4a1 1 0 0 1 1-1h9a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V8a1 1 0 0 1 1-1h8Zm2-2v14h7V5h-7ZM5 16h5v2H5v-2Zm9 0h5v2h-5v-2Zm0-3h5v2h-5v-2Zm0-3h5v2h-5v-2Zm-9 3h5v2H5v-2Z"/>`
	databaseTwoFillPath           = `<path fill="currentColor" d="M21 9.5v3c0 2.485-4.03 4.5-9 4.5s-9-2.015-9-4.5v-3c0 2.485 4.03 4.5 9 4.5s9-2.015 9-4.5Zm-18 5c0 2.485 4.03 4.5 9 4.5s9-2.015 9-4.5v3c0 2.485-4.03 4.5-9 4.5s-9-2.015-9-4.5v-3Zm9-2.5c-4.97 0-9-2.015-9-4.5S7.03 3 12 3s9 2.015 9 4.5s-4.03 4.5-9 4.5Z"/>`
	databaseTwoLinePath           = `<path fill="currentColor" d="M5 12.5c0 .313.461.858 1.53 1.393C7.914 14.585 9.877 15 12 15c2.123 0 4.086-.415 5.47-1.107c1.069-.535 1.53-1.08 1.53-1.393v-2.171C17.35 11.349 14.827 12 12 12s-5.35-.652-7-1.671V12.5Zm14 2.829C17.35 16.349 14.827 17 12 17s-5.35-.652-7-1.671V17.5c0 .313.461.858 1.53 1.393C7.914 19.585 9.877 20 12 20c2.123 0 4.086-.415 5.47-1.107c1.069-.535 1.53-1.08 1.53-1.393v-2.171ZM3 17.5v-10C3 5.015 7.03 3 12 3s9 2.015 9 4.5v10c0 2.485-4.03 4.5-9 4.5s-9-2.015-9-4.5Zm9-7.5c2.123 0 4.086-.415 5.47-1.107C18.538 8.358 19 7.813 19 7.5c0-.313-.461-.858-1.53-1.393C16.085 5.415 14.123 5 12 5c-2.123 0-4.086.415-5.47 1.107C5.461 6.642 5 7.187 5 7.5c0 .313.461.858 1.53 1.393C7.914 9.585 9.877 10 12 10Z"/>`
	deleteBackFillPath            = `<path fill="currentColor" d="M6.535 3h14.464a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H6.535a1 1 0 0 1-.833-.445l-5.333-8a1 1 0 0 1 0-1.11l5.333-8A1 1 0 0 1 6.535 3Zm9.464 8H9v2h7v-2Z"/>`
	deleteBackLinePath            = `<path fill="currentColor" d="M6.535 3h14.464a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H6.535a1 1 0 0 1-.833-.445l-5.333-8a1 1 0 0 1 0-1.11l5.333-8A1 1 0 0 1 6.535 3Zm.535 2l-4.667 7l4.667 7H20V5H7.07ZM16 11v2H9v-2h7Z"/>`
	deleteBackTwoFillPath         = `<path fill="currentColor" d="M6.535 3h14.464a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H6.535a1 1 0 0 1-.833-.445l-5.333-8a1 1 0 0 1 0-1.11l5.333-8A1 1 0 0 1 6.535 3Zm6.464 7.586l-2.828-2.829l-1.414 1.415L11.585 12l-2.828 2.828l1.414 1.415l2.828-2.829l2.829 2.829l1.414-1.415L14.413 12l2.829-2.828l-1.414-1.415l-2.829 2.829Z"/>`
	deleteBackTwoLinePath         = `<path fill="currentColor" d="M6.535 3h14.464a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H6.535a1 1 0 0 1-.833-.445l-5.333-8a1 1 0 0 1 0-1.11l5.333-8A1 1 0 0 1 6.535 3Zm.535 2l-4.667 7l4.667 7H20V5H7.07ZM13 10.586l2.828-2.829l1.414 1.415L14.413 12l2.829 2.828l-1.414 1.415l-2.829-2.829l-2.828 2.829l-1.414-1.415L11.585 12L8.757 9.172l1.414-1.415l2.828 2.829Z"/>`
	deleteBinFillPath             = `<path fill="currentColor" d="M17 6h5v2h-2v13a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V8H2V6h5V3a1 1 0 0 1 1-1h8a1 1 0 0 1 1 1v3Zm-8 5v6h2v-6H9Zm4 0v6h2v-6h-2ZM9 4v2h6V4H9Z"/>`
	deleteBinFiveFillPath         = `<path fill="currentColor" d="M4 8h16v13a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V8Zm3-3V3a1 1 0 0 1 1-1h8a1 1 0 0 1 1 1v2h5v2H2V5h5Zm2-1v1h6V4H9Zm0 8v6h2v-6H9Zm4 0v6h2v-6h-2Z"/>`
	deleteBinFiveLinePath         = `<path fill="currentColor" d="M4 8h16v13a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V8Zm2 2v10h12V10H6Zm3 2h2v6H9v-6Zm4 0h2v6h-2v-6ZM7 5V3a1 1 0 0 1 1-1h8a1 1 0 0 1 1 1v2h5v2H2V5h5Zm2-1v1h6V4H9Z"/>`
	deleteBinFourFillPath         = `<path fill="currentColor" d="M20 7v14a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V7H2V5h20v2h-2Zm-9 3v7h2v-7h-2ZM7 2h10v2H7V2Z"/>`
	deleteBinFourLinePath         = `<path fill="currentColor" d="M20 7v14a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V7H2V5h20v2h-2ZM6 7v13h12V7H6Zm1-5h10v2H7V2Zm4 8h2v7h-2v-7Z"/>`
	deleteBinLinePath             = `<path fill="currentColor" d="M17 6h5v2h-2v13a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V8H2V6h5V3a1 1 0 0 1 1-1h8a1 1 0 0 1 1 1v3Zm1 2H6v12h12V8Zm-9 3h2v6H9v-6Zm4 0h2v6h-2v-6ZM9 4v2h6V4H9Z"/>`
	deleteBinSevenFillPath        = `<path fill="currentColor" d="M7 6V3a1 1 0 0 1 1-1h8a1 1 0 0 1 1 1v3h5v2h-2v13a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V8H2V6h5Zm2-2v2h6V4H9Z"/>`
	deleteBinSevenLinePath        = `<path fill="currentColor" d="M17 6h5v2h-2v13a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V8H2V6h5V3a1 1 0 0 1 1-1h8a1 1 0 0 1 1 1v3Zm1 2H6v12h12V8ZM9 4v2h6V4H9Z"/>`
	deleteBinSixFillPath          = `<path fill="currentColor" d="M17 4h5v2h-2v15a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V6H2V4h5V2h10v2ZM9 9v8h2V9H9Zm4 0v8h2V9h-2Z"/>`
	deleteBinSixLinePath          = `<path fill="currentColor" d="M7 4V2h10v2h5v2h-2v15a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V6H2V4h5ZM6 6v14h12V6H6Zm3 3h2v8H9V9Zm4 0h2v8h-2V9Z"/>`
	deleteBinThreeFillPath        = `<path fill="currentColor" d="M20 7v14a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V7H2V5h20v2h-2Zm-9 2v2h2V9h-2Zm0 3v2h2v-2h-2Zm0 3v2h2v-2h-2ZM7 2h10v2H7V2Z"/>`
	deleteBinThreeLinePath        = `<path fill="currentColor" d="M20 7v13a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V7H2V5h20v2h-2ZM6 7v13h12V7H6Zm5 2h2v2h-2V9Zm0 3h2v2h-2v-2Zm0 3h2v2h-2v-2ZM7 2h10v2H7V2Z"/>`
	deleteBinTwoFillPath          = `<path fill="currentColor" d="M7 6V3a1 1 0 0 1 1-1h8a1 1 0 0 1 1 1v3h5v2h-2v13a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V8H2V6h5Zm6.414 8l1.768-1.768l-1.414-1.414L12 12.586l-1.768-1.768l-1.414 1.414L10.586 14l-1.768 1.768l1.414 1.414L12 15.414l1.768 1.768l1.414-1.414L13.414 14ZM9 4v2h6V4H9Z"/>`
	deleteBinTwoLinePath          = `<path fill="currentColor" d="M17 6h5v2h-2v13a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V8H2V6h5V3a1 1 0 0 1 1-1h8a1 1 0 0 1 1 1v3Zm1 2H6v12h12V8Zm-4.586 6l1.768 1.768l-1.414 1.414L12 15.414l-1.768 1.768l-1.414-1.414L10.586 14l-1.768-1.768l1.414-1.414L12 12.586l1.768-1.768l1.414 1.414L13.414 14ZM9 4v2h6V4H9Z"/>`
	deleteColumnPath              = `<path fill="currentColor" d="M12 3a1 1 0 0 1 1 1v8a5 5 0 1 1 .213 8.152L13 20a1 1 0 0 1-1 1H6a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h6Zm-1 2H7v14h4V5Zm8 10h-6v2h6v-2Z"/>`
	deleteRowPath                 = `<path fill="currentColor" d="M20 5a1 1 0 0 1 1 1v6a1 1 0 0 1-1 1a5 5 0 1 1-8 0H4a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1h16Zm-7 10v2h6v-2h-6Zm6-8H5v4h14V7Z"/>`
	deviceFillPath                = `<path fill="currentColor" d="M19 6h-8a1 1 0 0 0-1 1v13H4a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h14a1 1 0 0 1 1 1v3Zm-6 2h8a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1h-8a1 1 0 0 1-1-1V9a1 1 0 0 1 1-1Z"/>`
	deviceLinePath                = `<path fill="currentColor" d="M19 8h2a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1h-8a1 1 0 0 1-1-1v-1H4a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h14a1 1 0 0 1 1 1v5Zm-2 0V4H5v14h7V9a1 1 0 0 1 1-1h4Zm-3 2v10h6V10h-6Z"/>`
	deviceRecoverFillPath         = `<path fill="currentColor" d="M19 2a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h14Zm-7 5a5 5 0 1 0 .955 9.909L12 15a3 3 0 1 1 0-6c1.598 0 3 1.34 3 3h-2.5l2.128 4.254A5 5 0 0 0 12 7Z"/>`
	deviceRecoverLinePath         = `<path fill="currentColor" d="M19 2a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h14Zm-1 2H6v16h12V4Zm-6 3a5 5 0 0 1 2.628 9.254L12.5 12H15a3 3 0 1 0-3 3l.955 1.909A5 5 0 1 1 12 7Z"/>`
	dingdingFillPath              = `<path fill="currentColor" d="M12 2C6.477 2 2 6.477 2 12s4.477 10 10 10s10-4.477 10-10S17.523 2 12 2Zm4.49 9.04l-.006.014c-.42.898-1.516 2.66-1.516 2.66l-.005-.012l-.32.558h1.543l-2.948 3.919l.67-2.666h-1.215l.422-1.763a16.91 16.91 0 0 0-1.223.349s-.646.378-1.862-.729c0 0-.82-.722-.344-.902c.202-.077.981-.175 1.595-.257a80.204 80.204 0 0 1 1.338-.172s-2.555.039-3.161-.057c-.606-.095-1.375-1.107-1.539-1.996c0 0-.253-.488.545-.257c.798.231 4.101.9 4.101.9S8.27 9.312 7.983 8.99c-.286-.32-.841-1.754-.769-2.634c0 0 .031-.22.257-.16c0 0 3.176 1.45 5.347 2.245c2.172.795 4.06 1.199 3.816 2.228c-.02.087-.072.216-.144.37Z"/>`
	dingdingLinePath              = `<path fill="currentColor" d="M12 4a8 8 0 1 0 0 16a8 8 0 0 0 0-16Zm0-2c5.523 0 10 4.477 10 10s-4.477 10-10 10S2 17.523 2 12S6.477 2 12 2Zm4.49 9.04l-.006.014c-.42.898-1.516 2.66-1.516 2.66l-.005-.012l-.32.558h1.543l-2.948 3.919l.67-2.666h-1.215l.422-1.763a16.91 16.91 0 0 0-1.223.349s-.646.378-1.862-.729c0 0-.82-.722-.344-.902c.202-.077.981-.175 1.595-.257a80.204 80.204 0 0 1 1.338-.172s-2.555.039-3.161-.057c-.606-.095-1.375-1.107-1.539-1.996c0 0-.253-.488.545-.257c.798.231 4.101.9 4.101.9S8.27 9.312 7.983 8.99c-.286-.32-.841-1.754-.769-2.634c0 0 .031-.22.257-.16c0 0 3.176 1.45 5.347 2.245c2.172.795 4.06 1.199 3.816 2.228c-.02.087-.072.216-.144.37Z"/>`
	directionFillPath             = `<path fill="currentColor" d="M9 10a1 1 0 0 0-1 1v4h2v-3h3v2.5l3.5-3.5L13 7.5V10H9Zm3.707-8.607l9.9 9.9a1 1 0 0 1 0 1.414l-9.9 9.9a1 1 0 0 1-1.414 0l-9.9-9.9a1 1 0 0 1 0-1.414l9.9-9.9a1 1 0 0 1 1.414 0Z"/>`
	directionLinePath             = `<path fill="currentColor" d="M12 3.515L3.515 12L12 20.485L20.485 12L12 3.515Zm.707-2.122l9.9 9.9a1 1 0 0 1 0 1.414l-9.9 9.9a1 1 0 0 1-1.414 0l-9.9-9.9a1 1 0 0 1 0-1.414l9.9-9.9a1 1 0 0 1 1.414 0ZM13 10V7.5l3.5 3.5l-3.5 3.5V12h-3v3H8v-4a1 1 0 0 1 1-1h4Z"/>`
	discFillPath                  = `<path fill="currentColor" d="M13 9.17A3 3 0 1 0 15 12V2.458c4.057 1.274 7 5.064 7 9.542c0 5.523-4.477 10-10 10S2 17.523 2 12S6.477 2 12 2c.338 0 .671.017 1 .05v7.12Z"/>`
	discLinePath                  = `<path fill="currentColor" d="M15 4.581V12a3 3 0 1 1-2-2.83V2.05c5.053.501 9 4.765 9 9.95c0 5.523-4.477 10-10 10S2 17.523 2 12c0-5.185 3.947-9.449 9-9.95v2.012A8.001 8.001 0 0 0 12 20a8 8 0 0 0 3-15.42Z"/>`
	discordFillPath               = `<path fill="currentColor" d="M19.303 5.337A17.32 17.32 0 0 0 14.963 4c-.191.329-.403.775-.552 1.125a16.592 16.592 0 0 0-4.808 0C9.454 4.775 9.23 4.329 9.05 4a17.075 17.075 0 0 0-4.342 1.337C1.961 9.391 1.218 13.35 1.59 17.255a17.69 17.69 0 0 0 5.318 2.664a12.94 12.94 0 0 0 1.136-1.836c-.627-.234-1.22-.52-1.794-.86c.149-.106.297-.223.435-.34c3.46 1.582 7.207 1.582 10.624 0c.149.117.287.234.435.34c-.573.34-1.167.626-1.793.86a12.94 12.94 0 0 0 1.135 1.836a17.594 17.594 0 0 0 5.318-2.664c.457-4.52-.722-8.448-3.1-11.918ZM8.52 14.846c-1.04 0-1.889-.945-1.889-2.101c0-1.157.828-2.102 1.89-2.102c1.05 0 1.91.945 1.888 2.102c0 1.156-.838 2.1-1.889 2.1Zm6.974 0c-1.04 0-1.89-.945-1.89-2.101c0-1.157.828-2.102 1.89-2.102c1.05 0 1.91.945 1.889 2.102c0 1.156-.828 2.1-1.89 2.1Z"/>`
	discordLinePath               = `<path fill="currentColor" d="M8.52 13.846c-1.04 0-1.888-.945-1.888-2.102c0-1.156.827-2.1 1.889-2.1c1.05 0 1.91.944 1.889 2.1c0 1.157-.839 2.102-1.89 2.102Zm6.974 0c-1.04 0-1.89-.945-1.89-2.102c0-1.156.829-2.1 1.89-2.1c1.05 0 1.91.944 1.89 2.1c0 1.157-.829 2.102-1.89 2.102Zm-5.369-9.523l-.308-.563l-.634.105a16.353 16.353 0 0 0-4.158 1.28l-.228.106l-.142.209c-2.613 3.854-3.33 7.648-2.975 11.376l.039.406l.33.24a16.909 16.909 0 0 0 5.078 2.543l.79.242L9.03 17.55c1.91.472 4.03.473 5.939 0l1.107 2.718l.79-.243a16.822 16.822 0 0 0 5.08-2.544l.327-.238l.04-.402c.436-4.32-.697-8.084-2.958-11.385l-.142-.207l-.228-.104a16.575 16.575 0 0 0-4.154-1.28l-.618-.103l-.314.541a8.622 8.622 0 0 0-.263.494a15.878 15.878 0 0 0-3.263 0a14.12 14.12 0 0 0-.248-.474ZM6.715 16.61c.197.114.405.226.61.328l-.449 1.096a15.022 15.022 0 0 1-3.428-1.778c-.225-3.139.413-6.305 2.564-9.57a14.551 14.551 0 0 1 2.824-.913c.06.125.116.247.162.356l.273.643l.692-.101a14.107 14.107 0 0 1 4.09 0l.69.1l.272-.642c.047-.112.102-.234.16-.356c.977.21 1.923.519 2.828.915c1.875 2.82 2.821 5.966 2.546 9.567a14.905 14.905 0 0 1-3.43 1.778l-.445-1.094c.206-.103.414-.215.613-.329c.49-.282 1.017-.634 1.353-.97l-1.28-1.28c-.163.164-.523.42-.977.682c-.444.256-.885.463-1.167.556c-2.003.663-4.428.663-6.432 0c-.281-.093-.722-.3-1.166-.556c-.454-.261-.814-.518-.978-.682l-1.28 1.28c.337.336.864.688 1.354.97Z"/>`
	discussFillPath               = `<path fill="currentColor" d="M16.8 19L14 22.5L11.2 19H6a1 1 0 0 1-1-1V7.103a1 1 0 0 1 1-1h16a1 1 0 0 1 1 1V18a1 1 0 0 1-1 1h-5.2ZM2 2h17v2H3v11H1V3a1 1 0 0 1 1-1Z"/>`
	discussLinePath               = `<path fill="currentColor" d="M14 22.5L11.2 19H6a1 1 0 0 1-1-1V7.103a1 1 0 0 1 1-1h16a1 1 0 0 1 1 1V18a1 1 0 0 1-1 1h-5.2L14 22.5Zm1.839-5.5H21V8.103H7V17h5.161L14 19.298L15.839 17ZM2 2h17v2H3v11H1V3a1 1 0 0 1 1-1Z"/>`
	dislikeFillPath               = `<path fill="currentColor" d="m2.808 1.394l18.384 18.384l-1.414 1.415l-3.746-3.747L12 21.486l-8.478-8.493a6 6 0 0 1 .033-8.023L1.394 2.808l1.414-1.414Zm17.435 3.364a6 6 0 0 1 .236 8.235l-1.635 1.636L7.26 3.046a5.99 5.99 0 0 1 4.741 1.483a5.998 5.998 0 0 1 8.242.229Z"/>`
	dislikeLinePath               = `<path fill="currentColor" d="m2.808 1.394l18.384 18.384l-1.414 1.415l-3.746-3.747L12 21.486l-8.478-8.493a6 6 0 0 1 .033-8.023L1.394 2.808l1.414-1.414Zm2.172 10.23l7.02 7.03l2.618-2.622l-9.646-9.646a4 4 0 0 0 .008 5.237Zm15.263-6.866a6 6 0 0 1 .236 8.235l-1.635 1.636l-1.414-1.414l1.59-1.592a4 4 0 0 0-5.683-5.606l-1.335 1.198l-1.336-1.197a3.975 3.975 0 0 0-1.155-.723l-2.25-2.25A5.99 5.99 0 0 1 12 4.53a5.998 5.998 0 0 1 8.242.229Z"/>`
	disqusFillPath                = `<path fill="currentColor" d="M12 2c5.523 0 10 4.477 10 10s-4.477 10-10 10c-2.53 0-4.84-.94-6.601-2.488L1.5 20l1.424-3.797A9.962 9.962 0 0 1 2 12C2 6.477 6.477 2 12 2ZM8 7v10h3.733l.263-.004c3.375-.103 5.337-2.211 5.337-5.025v-.027l-.003-.215C17.23 8.956 15.21 7 11.79 7H8Zm3.831 2.458c1.628 0 2.709.928 2.709 2.529v.028l-.005.183c-.079 1.5-1.138 2.345-2.704 2.345h-1.108V9.458h1.108Z"/>`
	disqusLinePath                = `<path fill="currentColor" d="M11.997 2c5.523 0 10 4.477 10 10s-4.477 10-10 10a9.961 9.961 0 0 1-6.249-2.192l-4.718.59l1.72-4.586A9.972 9.972 0 0 1 1.996 12c0-5.523 4.477-10 10-10Zm0 2a8 8 0 0 0-7.262 11.362l.177.38l-.848 2.26l2.315-.289l.338.297a7.965 7.965 0 0 0 5.28 1.99a8 8 0 1 0 0-16Zm-3.95 3h3.79c3.42 0 5.44 1.956 5.54 4.729l.004.215v.027c0 2.814-1.963 4.922-5.338 5.025l-.262.004H8.047V7h3.79h-3.79Zm3.832 2.458H10.77v5.085h1.109c1.565 0 2.624-.845 2.703-2.345l.005-.183v-.028c0-1.6-1.08-2.53-2.708-2.53Z"/>`
	divideFillPath                = `<path fill="currentColor" d="M5 11h14v2H5v-2Zm7-3a1.5 1.5 0 1 1 0-3a1.5 1.5 0 0 1 0 3Zm0 11a1.5 1.5 0 1 1 0-3a1.5 1.5 0 0 1 0 3Z"/>`
	divideLinePath                = `<path fill="currentColor" d="M5 11h14v2H5v-2Zm7-3a1.5 1.5 0 1 1 0-3a1.5 1.5 0 0 1 0 3Zm0 11a1.5 1.5 0 1 1 0-3a1.5 1.5 0 0 1 0 3Z"/>`
	donutChartFillPath            = `<path fill="currentColor" d="M11 2.05v3.02a7.002 7.002 0 1 0 5.192 12.536l2.137 2.137A9.958 9.958 0 0 1 12 22C6.477 22 2 17.523 2 12c0-5.185 3.947-9.449 9-9.95ZM21.95 13a9.954 9.954 0 0 1-2.207 5.328l-2.137-2.136A6.964 6.964 0 0 0 18.93 13h3.022ZM13.002 2.05a10.004 10.004 0 0 1 8.95 8.95H18.93a7.005 7.005 0 0 0-5.928-5.929V2.049Z"/>`
	donutChartLinePath            = `<path fill="currentColor" d="M11 2.05v2.012a8.001 8.001 0 1 0 5.905 14.258l1.424 1.423A9.958 9.958 0 0 1 12 22C6.477 22 2 17.523 2 12c0-5.185 3.947-9.449 9-9.95ZM21.95 13a9.954 9.954 0 0 1-2.207 5.328l-1.423-1.422A7.96 7.96 0 0 0 19.938 13h2.013ZM13.002 2.05a10.004 10.004 0 0 1 8.95 8.95h-2.013a8.004 8.004 0 0 0-6.937-6.938V2.049Z"/>`
	doorClosedFillPath            = `<path fill="currentColor" d="M2.998 21v-2h2V4a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v15h2v2h-18Zm12-10h-2v2h2v-2Z"/>`
	doorClosedLinePath            = `<path fill="currentColor" d="M2.998 21v-2h2V4a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v15h2v2h-18Zm14-16h-10v14h10V5Zm-2 6v2h-2v-2h2Z"/>`
	doorFillPath                  = `<path fill="currentColor" d="M17.998 3a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1h-12a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h12Zm-4 8a1 1 0 1 0 0 2a1 1 0 0 0 0-2Z"/>`
	doorLinePath                  = `<path fill="currentColor" d="M17.998 3a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1h-12a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h12Zm-1 2h-10v14h10V5Zm-2 6v2h-2v-2h2Z"/>`
	doorLockBoxFillPath           = `<path fill="currentColor" d="M4 3h16a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Zm7 9.792V16h2v-3.208a2.5 2.5 0 1 0-2 0Z"/>`
	doorLockBoxLinePath           = `<path fill="currentColor" d="M4 3h16a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Zm1 2v14h14V5H5Zm6 7.792a2.5 2.5 0 1 1 2 0V16h-2v-3.208Z"/>`
	doorLockFillPath              = `<path fill="currentColor" d="M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10Zm-1-9.208V16h2v-3.208a2.5 2.5 0 1 0-2 0Z"/>`
	doorLockLinePath              = `<path fill="currentColor" d="M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10Zm0-2a8 8 0 1 0 0-16a8 8 0 0 0 0 16Zm-1-7.208a2.5 2.5 0 1 1 2 0V16h-2v-3.208Z"/>`
	doorOpenFillPath              = `<path fill="currentColor" d="M1.998 21v-2h2V4.835a1 1 0 0 1 .821-.984l9.472-1.722a.6.6 0 0 1 .707.59V4h4a1 1 0 0 1 1 1v14h2v2h-4V6h-3v15h-13Zm10-10h-2v2h2v-2Z"/>`
	doorOpenLinePath              = `<path fill="currentColor" d="M1.998 21v-2h2V4.835a1 1 0 0 1 .821-.984l9.472-1.722a.6.6 0 0 1 .707.59V4h4a1 1 0 0 1 1 1v14h2v2h-4V6h-3v15h-13Zm11-16.603l-7 1.272V19h7V4.397Zm-1 6.603v2h-2v-2h2Z"/>`
	dossierFillPath               = `<path fill="currentColor" d="M17 2v2h3a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V5a1 1 0 0 1 1-1h3V2h10Zm-4 9h-2v2H9v2h1.999L11 17h2l-.001-2H15v-2h-2v-2Zm2-7H9v2h6V4Z"/>`
	dossierLinePath               = `<path fill="currentColor" d="M17 2v2h3a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V5a1 1 0 0 1 1-1h3V2h10ZM7 6H5v14h14V6h-2v2H7V6Zm6 5v2h2v2h-2.001L13 17h-2l-.001-2H9v-2h2v-2h2Zm2-7H9v2h6V4Z"/>`
	doubanFillPath                = `<path fill="currentColor" d="M16.314 19.138h4.065a.62.62 0 0 1 .621.62v.621a.62.62 0 0 1-.62.621H3.62a.62.62 0 0 1-.62-.62v-.621a.62.62 0 0 1 .62-.621h3.754l-.96-3.104h2.19a.62.62 0 0 1 .59.425l.892 2.679H13.6l1.225-4.035H5.172a.62.62 0 0 1-.62-.62V7.345a.62.62 0 0 1 .62-.62h13.656a.62.62 0 0 1 .62.62v7.138a.62.62 0 0 1-.62.62h-1.289l-1.225 4.035ZM3.931 3h16.138a.62.62 0 0 1 .62.62v.621a.62.62 0 0 1-.62.621H3.931a.62.62 0 0 1-.62-.62V3.62A.62.62 0 0 1 3.93 3ZM7.19 8.586a.155.155 0 0 0-.156.155v4.035c0 .086.07.155.156.155h9.62c.086 0 .155-.07.155-.155V8.74a.155.155 0 0 0-.155-.155H7.19Z"/>`
	doubanLinePath                = `<path fill="currentColor" d="M15.274 15H5V7h14v8h-1.624l-1.3 4H21v2H3v-2h4.612L6.8 16.5l1.902-.618L9.715 19h4.259l1.3-4ZM3.5 3h17v2h-17V3ZM7 9v4h10V9H7Z"/>`
	doubleQuotesLPath             = `<path fill="currentColor" d="M4.583 17.321C3.553 16.227 3 15 3 13.011c0-3.5 2.457-6.637 6.03-8.188l.893 1.378c-3.335 1.804-3.987 4.145-4.247 5.621c.537-.278 1.24-.375 1.929-.311c1.804.167 3.226 1.648 3.226 3.489a3.5 3.5 0 0 1-3.5 3.5a3.871 3.871 0 0 1-2.748-1.179Zm10 0C13.553 16.227 13 15 13 13.011c0-3.5 2.457-6.637 6.03-8.188l.893 1.378c-3.335 1.804-3.987 4.145-4.247 5.621c.537-.278 1.24-.375 1.929-.311c1.804.167 3.226 1.648 3.226 3.489a3.5 3.5 0 0 1-3.5 3.5a3.871 3.871 0 0 1-2.748-1.179Z"/>`
	doubleQuotesRPath             = `<path fill="currentColor" d="M19.417 6.679C20.447 7.773 21 9 21 10.989c0 3.5-2.456 6.637-6.03 8.188l-.893-1.378c3.335-1.804 3.987-4.145 4.248-5.621c-.537.278-1.24.375-1.93.311c-1.804-.167-3.226-1.648-3.226-3.489a3.5 3.5 0 0 1 3.5-3.5c1.073 0 2.1.49 2.748 1.179Zm-10 0C10.447 7.773 11 9 11 10.989c0 3.5-2.456 6.637-6.03 8.188l-.893-1.378c3.335-1.804 3.987-4.145 4.247-5.621c-.537.278-1.24.375-1.929.311C4.591 12.322 3.17 10.841 3.17 9a3.5 3.5 0 0 1 3.5-3.5c1.073 0 2.1.49 2.748 1.179Z"/>`
	downloadCloudFillPath         = `<path fill="currentColor" d="M7 20.981a6.5 6.5 0 0 1-2.936-12a8.001 8.001 0 0 1 15.872 0a6.5 6.5 0 0 1-2.936 12V21H7v-.019ZM13 12V8h-2v4H8l4 5l4-5h-3Z"/>`
	downloadCloudLinePath         = `<path fill="currentColor" d="M1 14.5a6.496 6.496 0 0 1 3.064-5.519a8.001 8.001 0 0 1 15.872 0a6.5 6.5 0 0 1-2.936 12L7 21c-3.356-.274-6-3.078-6-6.5Zm15.848 4.487a4.5 4.5 0 0 0 2.03-8.309l-.807-.503l-.12-.942a6.001 6.001 0 0 0-11.903 0l-.12.942l-.805.503a4.5 4.5 0 0 0 2.029 8.309l.173.013h9.35l.173-.013ZM13 12h3l-4 5l-4-5h3V8h2v4Z"/>`
	downloadCloudTwoFillPath      = `<path fill="currentColor" d="M13 13v5.585l1.828-1.828l1.415 1.415L12 22.414l-4.243-4.242l1.415-1.415L11 18.585V13h2ZM12 2a7.001 7.001 0 0 1 6.954 6.194A5.5 5.5 0 0 1 18 18.978V17a6 6 0 0 0-11.996-.225L6 17v1.978a5.5 5.5 0 0 1-.954-10.784A7 7 0 0 1 12 2Z"/>`
	downloadCloudTwoLinePath      = `<path fill="currentColor" d="M13 13v5.585l1.828-1.828l1.415 1.415L12 22.414l-4.243-4.242l1.415-1.415L11 18.585V13h2ZM12 2a7.001 7.001 0 0 1 6.954 6.194A5.5 5.5 0 0 1 18 18.978v-2.014a3.5 3.5 0 1 0-1.111-6.91a5 5 0 1 0-9.777 0a3.5 3.5 0 0 0-1.292 6.88l.18.03v2.014a5.5 5.5 0 0 1-.954-10.784A7 7 0 0 1 12 2Z"/>`
	downloadFillPath              = `<path fill="currentColor" d="M3 19h18v2H3v-2ZM13 9h7l-8 8l-8-8h7V1h2v8Z"/>`
	downloadLinePath              = `<path fill="currentColor" d="M3 19h18v2H3v-2Zm10-5.828L19.071 7.1l1.414 1.415L12 17L3.515 8.515L4.929 7.1L11 13.172V2h2v11.172Z"/>`
	downloadTwoFillPath           = `<path fill="currentColor" d="M4 19h16v-7h2v8a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1v-8h2v7ZM14 9h5l-7 7l-7-7h5V3h4v6Z"/>`
	downloadTwoLinePath           = `<path fill="currentColor" d="M13 10h5l-6 6l-6-6h5V3h2v7Zm-9 9h16v-7h2v8a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1v-8h2v7Z"/>`
	draftFillPath                 = `<path fill="currentColor" d="M20 2a1 1 0 0 1 1 1v3.757l-8.999 9l-.006 4.238l4.246.006L21 15.242V21a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h16Zm1.778 6.808l1.414 1.414L15.414 18l-1.416-.002l.002-1.412l7.778-7.778ZM12 12H7v2h5v-2Zm3-4H7v2h8V8Z"/>`
	draftLinePath                 = `<path fill="currentColor" d="M20 2a1 1 0 0 1 1 1v3.757l-2 2V4H5v16h14v-2.758l2-2V21a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h16Zm1.778 6.808l1.414 1.414L15.414 18l-1.416-.002l.002-1.412l7.778-7.778ZM13 12v2H8v-2h5Zm3-4v2H8V8h8Z"/>`
	dragDropFillPath              = `<path fill="currentColor" d="M14 6h2v2h5a1 1 0 0 1 1 1v7.5L16 13l.036 8.062l2.223-2.15L20.041 22H9a1 1 0 0 1-1-1v-5H6v-2h2V9a1 1 0 0 1 1-1h5V6Zm8 11.338V21a1 1 0 0 1-.048.307l-1.96-3.394L22 17.338ZM4 14v2H2v-2h2Zm0-4v2H2v-2h2Zm0-4v2H2V6h2Zm0-4v2H2V2h2Zm4 0v2H6V2h2Zm4 0v2h-2V2h2Zm4 0v2h-2V2h2Z"/>`
	dragDropLinePath              = `<path fill="currentColor" d="m16 13l6.964 4.062l-2.973.85l2.125 3.681l-1.732 1l-2.125-3.68l-2.223 2.15L16 13Zm-2-7h2v2h5a1 1 0 0 1 1 1v4h-2v-3H10v10h4v2H9a1 1 0 0 1-1-1v-5H6v-2h2V9a1 1 0 0 1 1-1h5V6ZM4 14v2H2v-2h2Zm0-4v2H2v-2h2Zm0-4v2H2V6h2Zm0-4v2H2V2h2Zm4 0v2H6V2h2Zm4 0v2h-2V2h2Zm4 0v2h-2V2h2Z"/>`
	dragMoveFillPath              = `<path fill="currentColor" d="m12 22l-4-4h8l-4 4Zm0-20l4 4H8l4-4Zm0 12a2 2 0 1 1 0-4a2 2 0 0 1 0 4ZM2 12l4-4v8l-4-4Zm20 0l-4 4V8l4 4Z"/>`
	dragMoveLinePath              = `<path fill="currentColor" d="m12 2l4.243 4.243l-1.415 1.414L12 4.828L9.172 7.657L7.757 6.243L12 2ZM2 12l4.243-4.243l1.414 1.415L4.828 12l2.829 2.828l-1.414 1.415L2 12Zm20 0l-4.243 4.243l-1.414-1.415L19.172 12l-2.829-2.828l1.414-1.415L22 12Zm-10 2a2 2 0 1 1 0-4a2 2 0 0 1 0 4Zm0 8l-4.243-4.243l1.415-1.414L12 19.172l2.828-2.829l1.415 1.414L12 22Z"/>`
	dragMoveTwoFillPath           = `<path fill="currentColor" d="M18 11V8l4 4l-4 4v-3h-5v5h3l-4 4l-4-4h3v-5H6v3l-4-4l4-4v3h5V6H8l4-4l4 4h-3v5h5Z"/>`
	dragMoveTwoLinePath           = `<path fill="currentColor" d="M11 11V5.828L9.172 7.657L7.757 6.243L12 2l4.243 4.243l-1.415 1.414L13 5.828V11h5.172l-1.829-1.828l1.414-1.415L22 12l-4.243 4.243l-1.414-1.415L18.172 13H13v5.172l1.828-1.829l1.415 1.414L12 22l-4.243-4.243l1.415-1.414L11 18.172V13H5.828l1.829 1.828l-1.414 1.415L2 12l4.243-4.243l1.414 1.415L5.828 11H11Z"/>`
	draggablePath                 = `<path fill="currentColor" d="M8.5 7a1.5 1.5 0 1 0 0-3a1.5 1.5 0 0 0 0 3Zm0 6.5a1.5 1.5 0 1 0 0-3a1.5 1.5 0 0 0 0 3Zm1.5 5a1.5 1.5 0 1 1-3 0a1.5 1.5 0 0 1 3 0ZM15.5 7a1.5 1.5 0 1 0 0-3a1.5 1.5 0 0 0 0 3Zm1.5 5a1.5 1.5 0 1 1-3 0a1.5 1.5 0 0 1 3 0Zm-1.5 8a1.5 1.5 0 1 0 0-3a1.5 1.5 0 0 0 0 3Z"/>`
	dribbbleFillPath              = `<path fill="currentColor" d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10c5.51 0 10-4.48 10-10S17.51 2 12 2Zm6.605 4.61a8.502 8.502 0 0 1 1.93 5.314c-.281-.054-3.101-.629-5.943-.271c-.065-.141-.12-.293-.184-.445a25.276 25.276 0 0 0-.564-1.236c3.145-1.28 4.577-3.124 4.761-3.362ZM12 3.475c2.17 0 4.154.814 5.662 2.148c-.152.216-1.443 1.941-4.48 3.08c-1.399-2.57-2.95-4.675-3.189-5A8.686 8.686 0 0 1 12 3.475Zm-3.633.803a53.9 53.9 0 0 1 3.167 4.935c-3.992 1.063-7.517 1.04-7.896 1.04a8.581 8.581 0 0 1 4.729-5.975ZM3.453 12.01v-.26c.37.01 4.512.065 8.775-1.215c.25.477.477.965.694 1.453c-.109.033-.228.065-.336.098c-4.404 1.42-6.747 5.303-6.942 5.629a8.521 8.521 0 0 1-2.19-5.705ZM12 20.547a8.482 8.482 0 0 1-5.239-1.8c.152-.315 1.888-3.656 6.703-5.337c.022-.01.033-.01.054-.022a35.316 35.316 0 0 1 1.823 6.475a8.4 8.4 0 0 1-3.341.684Zm4.761-1.465c-.086-.52-.542-3.015-1.66-6.084c2.68-.423 5.023.271 5.315.369a8.468 8.468 0 0 1-3.655 5.715Z"/>`
	dribbbleLinePath              = `<path fill="currentColor" d="M19.989 11.572a7.96 7.96 0 0 0-1.573-4.351a9.757 9.757 0 0 1-.92.87a13.156 13.156 0 0 1-3.313 2.01c.167.35.32.689.455 1.009v.003c.027.061.05.118.094.229l.017.04c1.513-.17 3.109-.107 4.656.103c.206.027.4.056.584.087Zm-9.385-7.45a46.15 46.15 0 0 1 2.692 4.27c1.223-.482 2.234-1.09 3.048-1.767c.33-.274.594-.532.796-.755A7.968 7.968 0 0 0 12 4c-.476 0-.942.042-1.396.121ZM4.253 9.997a29.21 29.21 0 0 0 2.04-.123a31.53 31.53 0 0 0 4.862-.822a54.36 54.36 0 0 0-2.7-4.227a8.018 8.018 0 0 0-4.202 5.172Zm1.53 7.038a14.21 14.21 0 0 1 1.575-1.899c1.454-1.49 3.17-2.65 5.156-3.29l.062-.018c-.165-.364-.32-.689-.476-.995c-1.836.535-3.77.869-5.697 1.042c-.94.085-1.783.122-2.403.128a7.966 7.966 0 0 0 1.784 5.032Zm9.221 2.38a35.951 35.951 0 0 0-1.632-5.709c-2 .727-3.596 1.79-4.829 3.058a9.77 9.77 0 0 0-1.317 1.655A7.964 7.964 0 0 0 12 20a7.977 7.977 0 0 0 3.005-.583Zm1.874-1.075a7.998 7.998 0 0 0 2.987-4.87c-.34-.085-.771-.17-1.245-.236a12.025 12.025 0 0 0-3.18-.033a39.39 39.39 0 0 1 1.438 5.14ZM12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10Z"/>`
	driveFillPath                 = `<path fill="currentColor" d="m7.94 4.146l3.482 6.03l-5.94 10.293L2 14.44L7.94 4.146Zm2.176 10.294H22l-3.482 6.029H6.635l3.481-6.029Zm4.343-1L8.518 3.145h6.964l5.94 10.295H14.46Z"/>`
	driveLinePath                 = `<path fill="currentColor" d="M9.097 6.15L4.31 14.443l1.755 3.031l4.785-8.288L9.097 6.15Zm-1.3 12.324h9.568l1.751-3.034H9.55l-1.752 3.034Zm11.314-5.034l-4.786-8.29H10.83l4.787 8.29h3.495ZM8.52 3.15h6.96L22 14.444l-3.48 6.03H5.49L2 14.444L8.52 3.15Zm3.485 8.036l-1.302 2.254h2.603l-1.301-2.254Z"/>`
	drizzleFillPath               = `<path fill="currentColor" d="M11 18v3H9v-3a8 8 0 1 1 7.458-10.901A5.5 5.5 0 1 1 17.5 18H11Zm2 2h2v3h-2v-3Z"/>`
	drizzleLinePath               = `<path fill="currentColor" d="M17 18v-2h.5a3.5 3.5 0 1 0-2.5-5.95V10a6 6 0 1 0-8 5.659v2.089a8 8 0 1 1 9.458-10.65A5.5 5.5 0 1 1 17.5 18H17Zm-8-2h2v4H9v-4Zm4 3h2v4h-2v-4Z"/>`
	dropFillPath                  = `<path fill="currentColor" d="M5.636 6.633L12 .269l6.364 6.364a9 9 0 1 1-12.728 0Z"/>`
	dropLinePath                  = `<path fill="currentColor" d="m12 3.097l-4.95 4.95a7 7 0 1 0 9.9 0L12 3.097Zm0-2.828l6.364 6.364a9 9 0 1 1-12.728 0L12 .269Z"/>`
	dropboxFillPath               = `<path fill="currentColor" d="m17.285 10.668l5.215 3.323l-5.252 3.346L12 13.993l-5.248 3.344L1.5 13.99l5.215-3.323L1.5 7.346L6.752 4L12 7.343L17.248 4L22.5 7.346l-5.215 3.322Zm-.074 0L12 7.348l-5.211 3.32L12 13.988l5.211-3.32ZM6.786 18.446l5.252-3.346l5.252 3.346l-5.252 3.346l-5.252-3.346Z"/>`
	dropboxLinePath               = `<path fill="currentColor" d="m8.65 17.26l3.392 2.161l3.392-2.16l1.86 1.184l-5.252 3.346l-5.252-3.346l1.86-1.184Zm-.876-8.28l2.393-1.553L7.74 5.853L5.286 7.37l2.488 1.61Zm1.84 1.19l2.39 1.548l2.391-1.547l-2.39-1.552l-2.392 1.551Zm4.231 2.74l2.424 1.568l2.45-1.502l-2.486-1.613l-2.388 1.546Zm-1.84-6.675l4.236-2.749l6.225 3.844l-4.393 2.843l4.394 2.85l-6.227 3.819l-4.235-2.742l-4.236 2.742l-6.229-3.818l4.395-2.852L1.543 7.33l6.225-3.844l4.236 2.75Zm1.836 1.192l2.394 1.553l2.488-1.61l-2.455-1.517l-2.427 1.574Zm-3.677 5.482l-2.39-1.546l-2.485 1.613l2.451 1.502l2.424-1.569Z"/>`
	dropdownListPath              = `<path fill="currentColor" d="M4 5v14h9v2H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h18a1 1 0 0 1 1 1v5h-2V5H4Zm15.707 6.293L19 10.586l-.707.707l-3 3l1.414 1.414L19 13.414l2.293 2.293l1.414-1.414l-3-3Zm-3 6L19 19.586l2.293-2.293l1.414 1.414l-3 3l-.707.707l-.707-.707l-3-3l1.414-1.414Z"/>`
	dualSimOneFillPath            = `<path fill="currentColor" d="m15 2l4.707 4.707a1 1 0 0 1 .293.707V21a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h10Zm-2 6h-3v2h1v6h2V8Z"/>`
	dualSimOneLinePath            = `<path fill="currentColor" d="m15 2l4.707 4.707a1 1 0 0 1 .293.707V21a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h10Zm-.829 2H6v16h12V7.829L14.171 4ZM13 16h-2v-6h-1V8h3v8Z"/>`
	dualSimTwoFillPath            = `<path fill="currentColor" d="m15 2l4.707 4.707a1 1 0 0 1 .293.707V21a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h10Zm-3 5.5a3 3 0 0 0-2.995 2.824L9 10.5h2a1 1 0 1 1 1.751.66l-.082.083L9 14.547V16h6v-2h-2.405l1.412-1.27l-.006-.01l.008.008A3 3 0 0 0 12 7.5Z"/>`
	dualSimTwoLinePath            = `<path fill="currentColor" d="m15 2l4.707 4.707a1 1 0 0 1 .293.707V21a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h10Zm-.829 2H6v16h12V7.829L14.171 4ZM12 7.5a3 3 0 0 1 2.009 5.228l-.008-.008l.006.01L12.595 14H15v2H9v-1.453l3.67-3.304A1 1 0 1 0 11 10.5H9a3 3 0 0 1 3-3Z"/>`
	dvFillPath                    = `<path fill="currentColor" d="M4 14.745a7 7 0 1 1 8 0V21a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-6.255ZM8 14A5 5 0 1 0 8 4a5 5 0 0 0 0 10Zm-1 4v2h2v-2H7Zm1-6a3 3 0 1 1 0-6a3 3 0 0 1 0 6Zm6 5v-1.292A8.978 8.978 0 0 0 17 9a8.967 8.967 0 0 0-2.292-6H21a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1h-7Zm4-10v2h2V7h-2Z"/>`
	dvLinePath                    = `<path fill="currentColor" d="M11.608 3H21a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1h-7v-2h6V5h-6.255A6.968 6.968 0 0 1 15 9a6.992 6.992 0 0 1-3 5.745V21a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-6.255A7 7 0 0 1 11.608 3ZM6 13.584V20h4v-6.416A5.001 5.001 0 0 0 8 4a5 5 0 0 0-2 9.584ZM8 12a3 3 0 1 1 0-6a3 3 0 0 1 0 6Zm0-2a1 1 0 1 0 0-2a1 1 0 0 0 0 2Zm9-3h2v2h-2V7ZM7 17h2v2H7v-2Z"/>`
	dvdFillPath                   = `<path fill="currentColor" d="M13 11V6l-5 7h3v5l5-7h-3Zm-1 11C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10Z"/>`
	dvdLinePath                   = `<path fill="currentColor" d="M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10Zm0-2a8 8 0 1 0 0-16a8 8 0 0 0 0 16Zm1-9h3l-5 7v-5H8l5-7v5Z"/>`
	eBikeFillPath                 = `<path fill="currentColor" d="M15.5 6.937A6.997 6.997 0 0 1 19 13v8h-4.17a3.001 3.001 0 0 1-5.66 0H5v-8a6.997 6.997 0 0 1 3.5-6.063A3.974 3.974 0 0 1 8.125 6H5V4h3.126a4.002 4.002 0 0 1 7.748 0H19v2h-3.126a4.02 4.02 0 0 1-.373.937ZM12 14a1 1 0 0 0-1 1v5a1 1 0 1 0 2 0v-5a1 1 0 0 0-1-1Zm0-7a2 2 0 1 0 0-4a2 2 0 0 0 0 4Z"/>`
	eBikeLinePath                 = `<path fill="currentColor" d="M15.5 6.937A6.997 6.997 0 0 1 19 13v8h-4.17a3.001 3.001 0 0 1-5.66 0H5v-8a6.997 6.997 0 0 1 3.5-6.063A3.974 3.974 0 0 1 8.125 6H5V4h3.126a4.002 4.002 0 0 1 7.748 0H19v2h-3.126a4.02 4.02 0 0 1-.373.937Zm-1.453 1.5A3.976 3.976 0 0 1 12 9a3.982 3.982 0 0 1-2.047-.563A5.001 5.001 0 0 0 7 13v6h2v-4a3 3 0 1 1 6 0v4h2v-6a5.001 5.001 0 0 0-2.953-4.563ZM12 14a1 1 0 0 0-1 1v5a1 1 0 1 0 2 0v-5a1 1 0 0 0-1-1Zm0-7a2 2 0 1 0 0-4a2 2 0 0 0 0 4Z"/>`
	eBikeTwoFillPath              = `<path fill="currentColor" d="M16 1a1 1 0 0 1 1 1v1h5v6h-2.019l2.746 7.545A4 4 0 1 1 15.126 19h-4.252a4.002 4.002 0 0 1-7.8-.226A2 2 0 0 1 2 17V7a1 1 0 0 1 1-1h7a1 1 0 0 1 1 1v5a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1V3h-3V1h4Zm3 15a2 2 0 1 0 1.88 1.316l-.017-.044A2 2 0 0 0 19 16ZM7 16a2 2 0 1 0 0 4a2 2 0 0 0 0-4Zm2-8H4v2h5V8Zm11-3h-3v2h3V5Z"/>`
	eBikeTwoLinePath              = `<path fill="currentColor" d="M16 1a1 1 0 0 1 1 1v1h5v6h-2.019l2.746 7.544a4 4 0 1 1-7.6 2.456h-4.253a4.002 4.002 0 0 1-7.8-.226A2 2 0 0 1 2 17V7a1 1 0 0 1 1-1h7a1 1 0 0 1 1 1v5a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1V3h-3V1h4ZM7 16a2 2 0 1 0 0 4a2 2 0 0 0 0-4Zm12-.001a2 2 0 1 0 1.88 1.316l-.017-.044A2 2 0 0 0 19 16ZM17.853 9H17v3a3 3 0 0 1-3 3h-2a3 3 0 0 1-3-3H4v3.354A4.002 4.002 0 0 1 10.874 17h4.252a4.002 4.002 0 0 1 4.568-2.94L17.853 9ZM9 8H4v2h5V8Zm11-3h-3v2h3V5Z"/>`
	earthFillPath                 = `<path fill="currentColor" d="M12 2c5.523 0 10 4.477 10 10s-4.477 10-10 10S2 17.523 2 12S6.477 2 12 2Zm4.004 10.878c-.345-.525-.594-.903-1.542-.753c-1.79.284-1.989.597-2.074 1.113l-.024.156l-.025.166c-.097.683-.094.941.22 1.27c1.265 1.328 2.023 2.285 2.253 2.845c.112.273.4 1.1.202 1.918a8.185 8.185 0 0 0 3.151-2.237c.11-.374.19-.84.19-1.404v-.105c0-.922 0-1.343-.652-1.716a7.354 7.354 0 0 0-.645-.325c-.367-.167-.61-.276-.938-.756a6.47 6.47 0 0 1-.116-.172ZM12 3.833c-2.317 0-4.41.966-5.896 2.516c.177.123.331.296.437.534c.204.457.204.928.204 1.345c0 .328 0 .64.105.865c.144.308.766.44 1.315.554c.197.042.399.084.583.135c.506.14.898.595 1.211.96c.13.151.323.374.42.43c.05-.036.211-.211.29-.498c.062-.22.044-.414-.045-.52c-.56-.66-.529-1.93-.356-2.399c.272-.739 1.122-.684 1.744-.644c.232.015.45.03.614.009c.622-.078.814-1.025.949-1.21c.292-.4 1.186-1.003 1.74-1.375A8.138 8.138 0 0 0 12 3.833Z"/>`
	earthLinePath                 = `<path fill="currentColor" d="M6.235 6.453a8 8 0 0 0 8.817 12.944c.115-.75-.137-1.47-.24-1.722c-.23-.56-.988-1.517-2.253-2.844c-.338-.355-.316-.627-.195-1.437l.013-.091c.082-.554.22-.882 2.085-1.178c.948-.15 1.197.228 1.542.753l.116.172c.328.48.571.59.938.756c.165.075.37.17.645.325c.652.373.652.794.652 1.716v.105c0 .391-.038.735-.098 1.034a8.002 8.002 0 0 0-3.105-12.341c-.553.373-1.312.902-1.577 1.265c-.135.185-.327 1.132-.95 1.21c-.162.02-.381.006-.613-.009c-.622-.04-1.472-.095-1.744.644c-.173.468-.203 1.74.356 2.4c.09.105.107.3.046.519c-.08.287-.241.462-.292.498c-.096-.056-.288-.279-.419-.43c-.313-.366-.705-.82-1.211-.96c-.184-.051-.386-.093-.583-.135c-.549-.115-1.17-.246-1.315-.554c-.106-.226-.105-.537-.105-.865c0-.417 0-.888-.204-1.345a1.276 1.276 0 0 0-.306-.43ZM12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10Z"/>`
	earthquakeFillPath            = `<path fill="currentColor" d="M11.327 1.612a1 1 0 0 1 1.246-.08l.1.08L23 11h-3v9a1 1 0 0 1-.883.993L19 21h-6.5l2.5-4l-3.5-3l4-3L13 9l.5-3l-3 3l2.5 2l-5 3l3.75 3.5L8.5 21H5a1 1 0 0 1-.993-.883L4 20v-9H1l10.327-9.388Z"/>`
	earthquakeLinePath            = `<path fill="currentColor" d="M5 21a1 1 0 0 1-.993-.883L4 20v-9H1l10.327-9.388a1 1 0 0 1 1.246-.08l.1.08L23 11h-3v9a1 1 0 0 1-.883.993L19 21H5Zm7-17.298L6 9.156V19h4.357l1.393-1.5L8 14l5-3l-2.5-2l3-3l-.5 3l2.5 2l-4 3l3.5 3l-1.25 2H18V9.157l-6-5.455Z"/>`
	edgeFillPath                  = `<path fill="currentColor" d="M20.645 8.586c-.17-.711-.441-1.448-.774-2.021c-.771-1.329-1.464-2.237-3.177-3.32C14.981 2.162 13.077 2 12.171 2c-2.415 0-4.211.86-5.525 1.887C3.345 6.47 3.001 11 3.001 11s1.221-2.045 3.54-3.526C7.944 6.579 9.942 6 11.569 6c4.317 0 4.432 4 4.432 4h-7c0-2 1-3 1-3s-5 2-5 7.044c0 .487-.003 1.372.248 2.283c.232.843.7 1.705 1.132 2.353c1.221 1.832 3.045 2.614 3.916 2.904c.996.332 2.029.416 3.01.416c2.72 0 4.877-.886 5.694-1.275v-4.172c-.758.454-2.679 1.447-5 1.447c-5 0-5-4-5-4h12v-2.49s-.039-1.593-.356-2.924Z"/>`
	edgeLinePath                  = `<path fill="currentColor" d="M8.008 14.001A4.566 4.566 0 0 0 8 14.25C8 16.632 9.753 19 13 19c2.373 0 4.528-.655 6-1.553v3.35C17.211 21.564 15.112 22 13 22c-5.502 0-8-3.47-8-7.75c0-3.231 2.041-6 4.943-7.164C8.54 8.663 8 10.341 8 10.996L18 11c0-3.406-2.548-6-6-6c-5 0-8.001 3.988-9 5.999C3.29 6.237 7.01 2 12 2c5.2 0 9 4.03 9 9v3H8l.007.001Z"/>`
	edgeNewFillPath               = `<path fill="currentColor" d="M13.817 21.835a11.23 11.23 0 0 1-.317.005c-1.073 0-2.374-.62-3.42-1.758A6.753 6.753 0 0 1 8.3 15.5c0-1.418.518-2.565 1.201-3.406C9.558 14.58 11.86 17.7 16.5 17.7c1.678 0 2.717-.452 3.28-.697c.208-.09.35-.153.436-.153c.184 0 .284.1.284.3c0 .187-.101.321-.426.752l-.073.098a9.999 9.999 0 0 1-6.184 3.835Zm-3.115.081C5.792 21.28 2 17.084 2 12c0-1.28.74-2.329 1.897-3.08C5.058 8.164 6.587 7.75 8 7.75c2.276 0 3.635.765 4.428 1.647c.05.056.098.112.144.169A2.506 2.506 0 0 0 12 9.5h-.004a2.49 2.49 0 0 0-1.2.309a4.723 4.723 0 0 0-.236.117a6 6 0 0 0-1.51 1.168A6.345 6.345 0 0 0 7.3 15.5c0 2.137.855 3.965 2.044 5.258c.414.45.874.841 1.358 1.159Zm3.15-8.32c.266-.28.648-.684.648-1.596c0-.86-.338-2.171-1.328-3.272C12.165 7.61 10.524 6.75 8 6.75c-1.587 0-3.308.46-4.647 1.33a6.35 6.35 0 0 0-.79.605A10.001 10.001 0 0 1 12 2c5.523 0 10 4 10 8.5c0 2.8-2.2 4.85-5 4.85c-2 0-3.4-.65-3.4-1.35c0-.14.11-.254.252-.404Z"/>`
	edgeNewLinePath               = `<path fill="currentColor" d="M6.949 18.204C6.3 16.775 6 15.201 6 14c0-1.496.59-3.093 1.603-4.323c.64-.778 1.474-1.436 2.465-1.818c-.48-.07-1.003-.109-1.568-.109C5.99 7.75 4 9.612 4 12a7.985 7.985 0 0 0 2.949 6.204ZM12 20a7.99 7.99 0 0 0 2.649-.449c-3.364-.557-5.648-2.613-6.62-4.963c.095 1.026.43 2.296 1.03 3.357C9.776 19.217 10.752 20 12 20Zm4.5-8c0 .474-.064.912-.188 1.315c.206.022.435.035.688.035c1.776 0 3-1.234 3-2.85C20 7.37 16.704 4 12 4a7.97 7.97 0 0 0-5.272 1.983A6.834 6.834 0 0 1 8.5 5.75c2.407 0 4.396.601 5.807 1.715C15.737 8.595 16.5 10.198 16.5 12ZM12 9.5A2.5 2.5 0 0 0 9.5 12c0 2.5 2.3 5.7 7 5.7c.442 0 .84-.031 1.196-.082a7.4 7.4 0 0 0 1.736-.468c.132-.053.247-.103.347-.147c.209-.09.352-.153.437-.153c.184 0 .284.1.284.3c0 .156-.07.276-.284.563l-.142.19l-.073.097a10.044 10.044 0 0 1-1.365 1.48A9.963 9.963 0 0 1 12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4 10 8.5c0 2.8-2.2 4.85-5 4.85c-2 0-3.4-.65-3.4-1.35c0-.14.11-.254.252-.404c.266-.28.648-.684.648-1.596A2.5 2.5 0 0 0 12 9.5Z"/>`
	editBoxFillPath               = `<path fill="currentColor" d="m16.757 2.997l-7.466 7.466l.008 4.247l4.238-.008L21 7.24v12.758a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1v-16a1 1 0 0 1 1-1h12.757Zm3.728-.9L21.9 3.511l-9.193 9.193l-1.412.002l-.002-1.416l9.192-9.193Z"/>`
	editBoxLinePath               = `<path fill="currentColor" d="m16.757 2.997l-2 2H5v14h14V9.239l2-2v12.758a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1v-16a1 1 0 0 1 1-1h12.757Zm3.728-.9L21.9 3.511l-9.193 9.193l-1.412.002l-.002-1.416l9.192-9.193Z"/>`
	editCircleFillPath            = `<path fill="currentColor" d="M16.626 3.128L9.29 10.463l.01 4.247l4.238-.008l7.331-7.331A9.956 9.956 0 0 1 22 11.997c0 5.522-4.477 10-10 10s-10-4.478-10-10c0-5.523 4.477-10 10-10a9.96 9.96 0 0 1 4.626 1.131Zm3.86-1.03l1.413 1.413l-9.192 9.193l-1.412.002l-.002-1.416l9.192-9.193Z"/>`
	editCircleLinePath            = `<path fill="currentColor" d="M12.684 4.025a8 8 0 1 0 7.287 7.287a7.935 7.935 0 0 0-.603-2.439l1.5-1.502A9.935 9.935 0 0 1 22 11.997c0 5.522-4.477 10-10 10s-10-4.478-10-10c0-5.523 4.477-10 10-10a9.981 9.981 0 0 1 4.626 1.132l-1.501 1.5a7.941 7.941 0 0 0-2.44-.604Zm7.801-1.928L21.9 3.511l-9.193 9.193l-1.412.002l-.002-1.416l9.192-9.193Z"/>`
	editFillPath                  = `<path fill="currentColor" d="M7.243 17.996H3v-4.242L14.435 2.319a1 1 0 0 1 1.414 0l2.829 2.828a1 1 0 0 1 0 1.414L7.243 17.996Zm-4.243 2h18v2H3v-2Z"/>`
	editLinePath                  = `<path fill="currentColor" d="M6.414 15.89L16.556 5.748l-1.414-1.414L5 14.476v1.414h1.414Zm.829 2H3v-4.243L14.435 2.212a1 1 0 0 1 1.414 0l2.829 2.829a1 1 0 0 1 0 1.414L7.243 17.89ZM3 19.89h18v2H3v-2Z"/>`
	editTwoFillPath               = `<path fill="currentColor" d="M9.243 18.996H21v2H3v-4.242l9.9-9.9l4.242 4.243l-7.9 7.9Zm5.07-13.556l2.122-2.121a1 1 0 0 1 1.414 0l2.829 2.828a1 1 0 0 1 0 1.414l-2.122 2.122l-4.242-4.243Z"/>`
	editTwoLinePath               = `<path fill="currentColor" d="M5 18.89h1.414l9.314-9.314l-1.414-1.414L5 17.476v1.414Zm16 2H3v-4.243L16.435 3.212a1 1 0 0 1 1.414 0l2.829 2.829a1 1 0 0 1 0 1.414L9.243 18.89H21v2ZM15.728 6.748l1.414 1.414l1.414-1.414l-1.414-1.414l-1.414 1.414Z"/>`
	ejectFillPath                 = `<path fill="currentColor" d="m12.416 3.624l7.066 10.599a.5.5 0 0 1-.416.777H4.934a.5.5 0 0 1-.416-.777l7.066-10.599a.5.5 0 0 1 .832 0ZM5 17h14a1 1 0 1 1 0 2H5a1 1 0 1 1 0-2Z"/>`
	ejectLinePath                 = `<path fill="currentColor" d="M7.737 13h8.526L12 6.606L7.737 13Zm4.679-9.376l7.066 10.599a.5.5 0 0 1-.416.777H4.934a.5.5 0 0 1-.416-.777l7.066-10.599a.5.5 0 0 1 .832 0ZM5 17h14a1 1 0 1 1 0 2H5a1 1 0 1 1 0-2Z"/>`
	emojiStickerFillPath          = `<path fill="currentColor" d="M21.902 10.598a9.986 9.986 0 0 0-9.381 3.873a4.977 4.977 0 0 1-3.854-1.246l-1.334 1.49a6.976 6.976 0 0 0 4.014 1.753A9.969 9.969 0 0 0 10.5 20.5c0 .476.033.944.098 1.402C5.738 21.221 2 17.047 2 12C2 6.477 6.477 2 12 2c5.047 0 9.22 3.739 9.902 8.598Zm-.031 2.019a7.99 7.99 0 0 0-7.964 3.35A7.958 7.958 0 0 0 12.5 20.5c0 .467.04.925.117 1.37l9.254-9.253ZM8.5 11.5a1.5 1.5 0 1 0 0-3a1.5 1.5 0 0 0 0 3Zm7 0a1.5 1.5 0 1 0 0-3a1.5 1.5 0 0 0 0 3Z"/>`
	emojiStickerLinePath          = `<path fill="currentColor" d="M10.52 19.863a9.948 9.948 0 0 1 .826-3.395a6.977 6.977 0 0 1-4.013-1.753l1.334-1.49a4.977 4.977 0 0 0 3.854 1.246a9.987 9.987 0 0 1 7.342-3.951a8 8 0 1 0-9.343 9.343Zm8.503-7.227a8.008 8.008 0 0 0-6.387 6.387l6.387-6.387ZM22 12c0 .168-.004.334-.012.5L12.5 21.988A10.11 10.11 0 0 1 12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10Zm-12-2a1.5 1.5 0 1 1-3 0a1.5 1.5 0 0 1 3 0Zm7 0a1.5 1.5 0 1 1-3 0a1.5 1.5 0 0 1 3 0Z"/>`
	emotionFillPath               = `<path fill="currentColor" d="M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10Zm-4-9a4 4 0 0 0 8 0H8Zm0-2a1.5 1.5 0 1 0 0-3a1.5 1.5 0 0 0 0 3Zm8 0a1.5 1.5 0 1 0 0-3a1.5 1.5 0 0 0 0 3Z"/>`
	emotionHappyFillPath          = `<path fill="currentColor" d="M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10Zm-5-9a5 5 0 0 0 10 0h-2a3 3 0 1 1-6 0H7Zm1-2a1.5 1.5 0 1 0 0-3a1.5 1.5 0 0 0 0 3Zm8 0a1.5 1.5 0 1 0 0-3a1.5 1.5 0 0 0 0 3Z"/>`
	emotionHappyLinePath          = `<path fill="currentColor" d="M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10Zm0-2a8 8 0 1 0 0-16a8 8 0 0 0 0 16Zm-5-7h2a3 3 0 1 0 6 0h2a5 5 0 0 1-10 0Zm1-2a1.5 1.5 0 1 1 0-3a1.5 1.5 0 0 1 0 3Zm8 0a1.5 1.5 0 1 1 0-3a1.5 1.5 0 0 1 0 3Z"/>`
	emotionLaughFillPath          = `<path fill="currentColor" d="M12 2c5.523 0 10 4.477 10 10s-4.477 10-10 10S2 17.523 2 12S6.477 2 12 2Zm0 9c-2 0-3.667.333-5 1a5 5 0 0 0 10 0c-1.333-.667-3-1-5-1ZM8.5 7c-1.152 0-2.122.78-2.412 1.84L6.05 9h4.9A2.5 2.5 0 0 0 8.5 7Zm7 0c-1.152 0-2.122.78-2.412 1.84L13.05 9h4.9a2.5 2.5 0 0 0-2.45-2Z"/>`
	emotionLaughLinePath          = `<path fill="currentColor" d="M12 2c5.523 0 10 4.477 10 10s-4.477 10-10 10S2 17.523 2 12S6.477 2 12 2Zm0 2a8 8 0 1 0 0 16a8 8 0 0 0 0-16Zm0 7c2 0 3.667.333 5 1a5 5 0 0 1-10 0c1.333-.667 3-1 5-1ZM8.5 7a2.5 2.5 0 0 1 2.45 2h-4.9A2.5 2.5 0 0 1 8.5 7Zm7 0a2.5 2.5 0 0 1 2.45 2h-4.9a2.5 2.5 0 0 1 2.45-2Z"/>`
	emotionLinePath               = `<path fill="currentColor" d="M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10Zm0-2a8 8 0 1 0 0-16a8 8 0 0 0 0 16Zm-4-7h8a4 4 0 0 1-8 0Zm0-2a1.5 1.5 0 1 1 0-3a1.5 1.5 0 0 1 0 3Zm8 0a1.5 1.5 0 1 1 0-3a1.5 1.5 0 0 1 0 3Z"/>`
	emotionNormalFillPath         = `<path fill="currentColor" d="M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10Zm-4-8v2h8v-2H8Zm0-3a1.5 1.5 0 1 0 0-3a1.5 1.5 0 0 0 0 3Zm8 0a1.5 1.5 0 1 0 0-3a1.5 1.5 0 0 0 0 3Z"/>`
	emotionNormalLinePath         = `<path fill="currentColor" d="M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10Zm0-2a8 8 0 1 0 0-16a8 8 0 0 0 0 16Zm-4-6h8v2H8v-2Zm0-3a1.5 1.5 0 1 1 0-3a1.5 1.5 0 0 1 0 3Zm8 0a1.5 1.5 0 1 1 0-3a1.5 1.5 0 0 1 0 3Z"/>`
	emotionSadFillPath            = `<path fill="currentColor" d="M12 2c5.523 0 10 4.477 10 10a9.959 9.959 0 0 1-1.065 4.496a1.975 1.975 0 0 0-.398-.775l-.123-.135L19 14.172l-1.414 1.414l-.117.127a2 2 0 0 0 1.679 3.282A9.974 9.974 0 0 1 12 22C6.477 22 2 17.523 2 12S6.477 2 12 2Zm0 13c-1.38 0-2.63.56-3.534 1.463l-.166.174l.945.86C10.035 17.182 10.982 17 12 17c.905 0 1.754.144 2.486.396l.269.1l.945-.86A4.987 4.987 0 0 0 12 15Zm-3.5-5a1.5 1.5 0 1 0 0 3a1.5 1.5 0 0 0 0-3Zm7 0a1.5 1.5 0 1 0 0 3a1.5 1.5 0 0 0 0-3Z"/>`
	emotionSadLinePath            = `<path fill="currentColor" d="M12 2c5.523 0 10 4.477 10 10c0 .727-.078 1.435-.225 2.118l-1.782-1.783a8 8 0 1 0-4.374 6.801a3.998 3.998 0 0 0 1.555 1.423A9.955 9.955 0 0 1 12 22C6.477 22 2 17.523 2 12S6.477 2 12 2Zm7 12.172l1.414 1.414a2 2 0 1 1-2.93.11l.102-.11L19 14.172ZM12 15c1.466 0 2.785.631 3.7 1.637l-.945.86C13.965 17.182 13.018 17 12 17c-1.018 0-1.965.183-2.755.496l-.945-.86A4.987 4.987 0 0 1 12 15Zm-3.5-5a1.5 1.5 0 1 1 0 3a1.5 1.5 0 0 1 0-3Zm7 0a1.5 1.5 0 1 1 0 3a1.5 1.5 0 0 1 0-3Z"/>`
	emotionTwoFillPath            = `<path fill="currentColor" d="M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10Zm-4-9a4 4 0 0 0 8 0H8Z"/>`
	emotionTwoLinePath            = `<path fill="currentColor" d="M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10Zm0-2a8 8 0 1 0 0-16a8 8 0 0 0 0 16Zm-4-7h8a4 4 0 0 1-8 0Z"/>`
	emotionUnhappyFillPath        = `<path fill="currentColor" d="M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10Zm-5-5h2a3 3 0 1 1 6 0h2a5 5 0 0 0-10 0Zm1-6a1.5 1.5 0 1 0 0-3a1.5 1.5 0 0 0 0 3Zm8 0a1.5 1.5 0 1 0 0-3a1.5 1.5 0 0 0 0 3Z"/>`
	emotionUnhappyLinePath        = `<path fill="currentColor" d="M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10Zm0-2a8 8 0 1 0 0-16a8 8 0 0 0 0 16Zm-5-3a5 5 0 0 1 10 0h-2a3 3 0 1 0-6 0H7Zm1-6a1.5 1.5 0 1 1 0-3a1.5 1.5 0 0 1 0 3Zm8 0a1.5 1.5 0 1 1 0-3a1.5 1.5 0 0 1 0 3Z"/>`
	empathizeFillPath             = `<path fill="currentColor" d="M18.364 10.98a4 4 0 0 1 0 5.656l-5.657 5.657a1 1 0 0 1-1.414 0l-5.657-5.657a4 4 0 1 1 5.657-5.657l.707.707l.707-.707a4 4 0 0 1 5.657 0ZM12 1a4 4 0 1 1 0 8a4 4 0 0 1 0-8Z"/>`
	empathizeLinePath             = `<path fill="currentColor" d="M18.364 10.98a4 4 0 0 1 0 5.656l-5.657 5.657a1 1 0 0 1-1.414 0l-5.657-5.657a4 4 0 1 1 5.657-5.657l.707.707l.707-.707a4 4 0 0 1 5.657 0ZM7.051 12.392a2 2 0 0 0 0 2.829l4.95 4.95l4.95-4.95a2 2 0 1 0-2.83-2.827l-2.123 2.118l-2.119-2.12a2 2 0 0 0-2.828 0ZM12 1a4 4 0 1 1 0 8a4 4 0 0 1 0-8Zm0 2a2 2 0 1 0 0 4a2 2 0 0 0 0-4Z"/>`
	emphasisPath                  = `<path fill="currentColor" d="M12 19a1.5 1.5 0 1 1 0 3a1.5 1.5 0 0 1 0-3Zm-5.5 0a1.5 1.5 0 1 1 0 3a1.5 1.5 0 0 1 0-3Zm11 0a1.5 1.5 0 1 1 0 3a1.5 1.5 0 0 1 0-3ZM18 3v2H8v4h9v2H8v4h10v2H6V3h12Z"/>`
	emphasisCnPath                = `<path fill="currentColor" d="M12 19a1.5 1.5 0 1 1 0 3a1.5 1.5 0 0 1 0-3Zm-5.5 0a1.5 1.5 0 1 1 0 3a1.5 1.5 0 0 1 0-3Zm11 0a1.5 1.5 0 1 1 0 3a1.5 1.5 0 0 1 0-3ZM13 2v2h6v2h-1.968a18.222 18.222 0 0 1-3.621 6.302a14.683 14.683 0 0 0 5.327 3.042l-.536 1.93A16.686 16.686 0 0 1 12 13.726a16.697 16.697 0 0 1-6.2 3.547l-.536-1.929a14.7 14.7 0 0 0 5.327-3.042a18.077 18.077 0 0 1-2.822-4.3h2.24A16.03 16.03 0 0 0 12 10.876A16.17 16.17 0 0 0 14.91 6H5V4h6V2h2Z"/>`
	englishInputPath              = `<path fill="currentColor" d="M14 10h2v.757a4.5 4.5 0 0 1 7 3.743V20h-2v-5.5c0-1.43-1.174-2.5-2.5-2.5S16 13.07 16 14.5V20h-2V10Zm-2-6v2H4v5h8v2H4v5h8v2H2V4h10Z"/>`
	equalFillPath                 = `<path fill="currentColor" d="M19 8H5v2h14V8Zm0 6H5v2h14v-2Z"/>`
	equalLinePath                 = `<path fill="currentColor" d="M19 8H5v2h14V8Zm0 6H5v2h14v-2Z"/>`
	equalizerFillPath             = `<path fill="currentColor" d="M6.17 18a3.001 3.001 0 0 1 5.66 0H22v2H11.83a3.001 3.001 0 0 1-5.66 0H2v-2h4.17Zm6-7a3.001 3.001 0 0 1 5.66 0H22v2h-4.17a3.001 3.001 0 0 1-5.66 0H2v-2h10.17Zm-6-7a3.001 3.001 0 0 1 5.66 0H22v2H11.83a3.001 3.001 0 0 1-5.66 0H2V4h4.17Z"/>`
	equalizerLinePath             = `<path fill="currentColor" d="M6.17 18a3.001 3.001 0 0 1 5.66 0H22v2H11.83a3.001 3.001 0 0 1-5.66 0H2v-2h4.17Zm6-7a3.001 3.001 0 0 1 5.66 0H22v2h-4.17a3.001 3.001 0 0 1-5.66 0H2v-2h10.17Zm-6-7a3.001 3.001 0 0 1 5.66 0H22v2H11.83a3.001 3.001 0 0 1-5.66 0H2V4h4.17ZM9 6a1 1 0 1 0 0-2a1 1 0 0 0 0 2Zm6 7a1 1 0 1 0 0-2a1 1 0 0 0 0 2Zm-6 7a1 1 0 1 0 0-2a1 1 0 0 0 0 2Z"/>`
	eraserFillPath                = `<path fill="currentColor" d="M14 18.997h7v2h-9l-3.998.002l-6.487-6.487a1 1 0 0 1 0-1.415L12.12 2.491a1 1 0 0 1 1.414 0l7.779 7.778a1 1 0 0 1 0 1.414L14 18.997Zm1.657-4.486l3.535-3.535l-6.364-6.364l-3.535 3.536l6.364 6.364Z"/>`
	eraserLinePath                = `<path fill="currentColor" d="m8.586 8.855l-4.95 4.95l5.194 5.194l1.17-.001v-.001h1.171l3.779-3.778l-6.364-6.364ZM10 7.44l6.364 6.364l2.828-2.828l-6.364-6.364L10 7.44Zm4 11.557h7v2h-9l-3.998.002l-6.487-6.487a1 1 0 0 1 0-1.415L12.12 2.491a1 1 0 0 1 1.414 0l7.779 7.778a1 1 0 0 1 0 1.414L14 18.997Z"/>`
	errorWarningFillPath          = `<path fill="currentColor" d="M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10Zm-1-7v2h2v-2h-2Zm0-8v6h2V7h-2Z"/>`
	errorWarningLinePath          = `<path fill="currentColor" d="M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10Zm0-2a8 8 0 1 0 0-16a8 8 0 0 0 0 16Zm-1-5h2v2h-2v-2Zm0-8h2v6h-2V7Z"/>`
	evernoteFillPath              = `<path fill="currentColor" d="M8.63 7.754c-.215.201-.545.217-.742.217h-2.11c-.61 0-.974 0-1.22.033c-.134.017-.298.084-.381.117c-.033.016-.033 0-.017-.016l4.816-4.94c.017-.017.033-.017.017.017a1.734 1.734 0 0 0-.116.382c-.033.249-.033.615-.033 1.23v2.212c0 .2-.017.533-.214.748Zm4.683 14.184c-.56-.366-.857-.848-.973-1.147a2.444 2.444 0 0 1-.181-.915a2.513 2.513 0 0 1 2.507-2.51c.412 0 .742.332.742.748a.736.736 0 0 1-.38.648a.95.95 0 0 1-.28.1c-.082.017-.396.05-.543.183a.776.776 0 0 0-.298.582a.92.92 0 0 0 .264.649c.297.299.693.465 1.122.465a2.035 2.035 0 0 0 2.028-2.045c0-1.014-.676-1.913-1.567-2.311c-.132-.067-.346-.117-.544-.167a6.723 6.723 0 0 0-.495-.083c-.693-.084-2.424-.632-2.54-2.178c0 0-.51 2.328-1.534 2.96c-.098.05-.23.1-.379.133c-.148.033-.312.05-.363.05c-1.665.1-3.43-.433-4.65-1.696c0 0-.825-.682-1.253-2.594c-.099-.466-.297-1.298-.412-2.08c-.05-.282-.067-.498-.083-.698c0-.814.495-1.363 1.121-1.445h3.365c.576 0 .907-.15 1.121-.35c.28-.266.347-.649.347-1.098V3.631c.08-.615.627-1.131 1.434-1.131h.396c.165 0 .363.017.544.033c.132.017.247.05.445.1c1.006.25 1.22 1.28 1.22 1.28l2.854.5c.907.166 3.15.316 3.578 2.594c1.006 5.42.396 10.675.347 10.675c-.71 5.121-4.931 4.871-4.931 4.871a3.426 3.426 0 0 1-2.03-.615Zm2.622-10.309c-.033.084-.066.183-.05.233c.018.05.051.066.084.083c.198.1.527.15 1.006.2c.478.05.808.083 1.022.05c.033 0 .067-.017.1-.067c.032-.05.016-.15.016-.233c-.05-.449-.462-.781-1.006-.848c-.545-.05-1.006.167-1.172.582Z"/>`
	evernoteLinePath              = `<path fill="currentColor" d="M10.501 8.5a1 1 0 0 1-1 1H6.002c-.336 0-.501.261-.501.532c0 1.32.254 2.371.664 3.193c.216.433.399.67.523.79c.735.76 1.886 1.16 3.092 1.089c.095-.006.199-.064.332-.208c.121-.132.203-.268.214-.293a2 2 0 0 1 2.531-1.073c.693.258 1.277.434 1.813.56c.196.046.375.083.586.123c-.077-.015.402.073.518.097c.34.07.598.146.883.29a5.088 5.088 0 0 1 1.775 1.475a32.42 32.42 0 0 0 .087-2.026a34.185 34.185 0 0 0-.558-6.673c-.075-.398-.237-.562-.664-.718a3.846 3.846 0 0 0-.587-.155c-.146-.028-.65-.11-.693-.118l-.011-.002a1296.337 1296.337 0 0 1-2.33-.407l-.527-.092a2 2 0 0 1-1.524-1.26a11.726 11.726 0 0 0-.034-.088a5.594 5.594 0 0 0-.702-.036c-.271 0-.388.124-.388.463V8.5Zm6.23 11.639c.352-.356.56-.829.587-1.327c.054-1.036-.824-2.48-2.317-2.634c-.617-.063-1.586-.306-2.842-.774c0 0-.7 1.603-2.26 1.696c-1.665.1-3.43-.433-4.65-1.696c0 0-1.748-1.64-1.748-5.372c0-.814.29-1.422.648-1.904c.96-1.292 2.505-2.78 4.133-4.304C9.001 3.15 9.702 2.5 10.89 2.5c2.04 0 2.32.664 2.605 1.414l2.854.499c.907.166 3.15.316 3.578 2.594c1.006 5.42.458 9.87.347 10.675c-.71 5.121-4.772 4.871-4.931 4.871c-2.059 0-3.178-1.373-3.183-2.677a2.494 2.494 0 0 1 1.038-2.034a2.586 2.586 0 0 1 1.527-.478c.304 0 .687.318.687.753c0 .37-.255.575-.383.645c-.223.123-1.12.174-1.12.865c0 .317.348 1.114 1.385 1.114a2.03 2.03 0 0 0 1.437-.602Zm-1.796-9.51c.166-.415.627-.632 1.172-.582c.544.067.956.4 1.006.848c0 .083.017.183-.017.233c-.032.05-.066.067-.1.067c-.213.033-.543 0-1.021-.05c-.48-.05-.808-.1-1.006-.2c-.033-.017-.066-.033-.083-.083s.016-.15.05-.233Z"/>`
	exchangeBoxFillPath           = `<path fill="currentColor" d="M3.005 3.003h18a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1h-18a1 1 0 0 1-1-1v-16a1 1 0 0 1 1-1Zm9 6h-4v2h9l-5-5v3Zm-5 4l5 5v-3h4v-2h-9Z"/>`
	exchangeBoxLinePath           = `<path fill="currentColor" d="M4.005 5.003v14h16v-14h-16Zm-1-2h18a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1h-18a1 1 0 0 1-1-1v-16a1 1 0 0 1 1-1Zm9 6v-3l5 5h-9v-2h4Zm-5 4h9v2h-4v3l-5-5Z"/>`
	exchangeCnyFillPath           = `<path fill="currentColor" d="M5.378 4.514a9.962 9.962 0 0 1 6.627-2.511c5.523 0 10 4.477 10 10a9.954 9.954 0 0 1-1.793 5.715l-2.707-5.715h2.5A8 8 0 0 0 6.279 6.416l-.9-1.902Zm13.253 14.978a9.962 9.962 0 0 1-6.626 2.51c-5.523 0-10-4.476-10-10c0-2.124.663-4.094 1.793-5.714l2.707 5.715h-2.5A8 8 0 0 0 17.73 17.59l.901 1.902Zm-5.626-5.954h3v2h-3v2h-2v-2h-3v-2h3v-1h-3v-2h2.586l-2.122-2.12l1.415-1.415l2.12 2.121l2.122-2.121l1.414 1.414l-2.12 2.122h2.585v2h-3v1Z"/>`
	exchangeCnyLinePath           = `<path fill="currentColor" d="M19.379 15.106A8.001 8.001 0 0 0 8.035 5.056l-.993-1.737a9.996 9.996 0 0 1 9.962.023c4.49 2.593 6.21 8.143 4.118 12.77l1.341.775l-4.165 2.214l-.165-4.714l1.246.719ZM4.629 8.9a8.001 8.001 0 0 0 11.345 10.05l.992 1.737a9.995 9.995 0 0 1-9.962-.024C2.514 18.07.794 12.52 2.887 7.893L1.545 7.12L5.71 4.905l.165 4.714l-1.245-.72Zm8.375 4.638h3v2h-3v2h-2v-2h-3v-2h3v-1h-3v-2h2.586L8.469 8.417l1.414-1.414l2.121 2.121l2.122-2.121l1.414 1.414l-2.122 2.121h2.586v2h-3v1Z"/>`
	exchangeDollarFillPath        = `<path fill="currentColor" d="M5.378 4.514a9.962 9.962 0 0 1 6.627-2.511c5.523 0 10 4.477 10 10a9.954 9.954 0 0 1-1.793 5.715l-2.707-5.715h2.5A8 8 0 0 0 6.279 6.416l-.9-1.902Zm13.253 14.978a9.962 9.962 0 0 1-6.626 2.51c-5.523 0-10-4.476-10-10c0-2.124.663-4.094 1.793-5.714l2.707 5.715h-2.5A8 8 0 0 0 17.73 17.59l.901 1.902Zm-10.126-5.49h5.5a.5.5 0 1 0 0-1h-4a2.5 2.5 0 1 1 0-5h1v-1h2v1h2.5v2h-5.5a.5.5 0 0 0 0 1h4a2.5 2.5 0 0 1 0 5h-1v1h-2v-1h-2.5v-2Z"/>`
	exchangeDollarLinePath        = `<path fill="currentColor" d="M19.379 15.106A8.001 8.001 0 0 0 8.035 5.056l-.993-1.737a9.996 9.996 0 0 1 9.962.023c4.49 2.593 6.21 8.143 4.118 12.77l1.341.775l-4.165 2.214l-.165-4.714l1.246.719ZM4.629 8.9a8.001 8.001 0 0 0 11.345 10.05l.992 1.737a9.995 9.995 0 0 1-9.962-.024C2.514 18.07.794 12.52 2.887 7.893L1.545 7.12L5.71 4.905l.165 4.714l-1.245-.72Zm3.875 5.103h5.5a.5.5 0 1 0 0-1h-4a2.5 2.5 0 1 1 0-5h1v-1h2v1h2.5v2h-5.5a.5.5 0 0 0 0 1h4a2.5 2.5 0 0 1 0 5h-1v1h-2v-1h-2.5v-2Z"/>`
	exchangeFillPath              = `<path fill="currentColor" d="M12.005 22.003c-5.523 0-10-4.477-10-10s4.477-10 10-10s10 4.477 10 10s-4.477 10-10 10Zm0-13h-4v2h9l-5-5v3Zm-5 4l5 5v-3h4v-2h-9Z"/>`
	exchangeFundsFillPath         = `<path fill="currentColor" d="M5.378 4.514a9.962 9.962 0 0 1 6.627-2.511c5.523 0 10 4.477 10 10a9.954 9.954 0 0 1-1.793 5.715l-2.707-5.715h2.5A8 8 0 0 0 6.279 6.416l-.9-1.902Zm13.253 14.978a9.962 9.962 0 0 1-6.626 2.51c-5.523 0-10-4.476-10-10c0-2.124.663-4.094 1.793-5.714l2.707 5.715h-2.5A8 8 0 0 0 17.73 17.59l.901 1.902Zm-5.212-4.66l-2.828-2.83l-2.829 2.83l-1.414-1.415l4.243-4.242l2.828 2.828l2.828-2.829l1.415 1.415l-4.243 4.242Z"/>`
	exchangeFundsLinePath         = `<path fill="currentColor" d="M19.379 15.106A8.001 8.001 0 0 0 8.035 5.056l-.993-1.737a9.996 9.996 0 0 1 9.962.023c4.49 2.593 6.21 8.143 4.118 12.77l1.341.775l-4.165 2.214l-.165-4.714l1.246.719ZM4.629 8.9a8.001 8.001 0 0 0 11.345 10.05l.992 1.737a9.995 9.995 0 0 1-9.962-.024C2.514 18.07.794 12.52 2.887 7.893L1.545 7.12L5.71 4.905l.165 4.714l-1.245-.72Zm8.79 5.931l-2.829-2.828l-2.828 2.828l-1.415-1.414l4.243-4.243l2.828 2.829l2.829-2.829l1.414 1.414l-4.243 4.243Z"/>`
	exchangeLinePath              = `<path fill="currentColor" d="M12.005 22.003c-5.523 0-10-4.477-10-10s4.477-10 10-10s10 4.477 10 10s-4.477 10-10 10Zm0-2a8 8 0 1 0 0-16a8 8 0 0 0 0 16Zm-5-7h9v2h-4v3l-5-5Zm5-4v-3l5 5h-9v-2h4Z"/>`
	expandLeftFillPath            = `<path fill="currentColor" d="M10.414 4.586V11H16v2h-5.586v6.414L3 12l7.414-7.414ZM18 19V5h2v14h-2Z"/>`
	expandLeftLinePath            = `<path fill="currentColor" d="m10.071 4.93l1.414 1.413L6.828 11H16v2H6.828l4.657 4.657l-1.414 1.414L3 12.001l7.071-7.072ZM18.001 19V5h2v14h-2Z"/>`
	expandLeftRightFillPath       = `<path fill="currentColor" d="m9 6l-6 6l6 6V6Zm6 12l6-6l-6-6v12Z"/>`
	expandLeftRightLinePath       = `<path fill="currentColor" d="M9.043 5.793L2.836 12l6.207 6.207l1.414-1.414L5.664 12l4.793-4.793l-1.414-1.414Zm5.914 12.414L21.164 12l-6.207-6.207l-1.414 1.414L18.336 12l-4.793 4.793l1.414 1.414Z"/>`
	expandRightFillPath           = `<path fill="currentColor" d="M13.586 4.586L21 12l-7.414 7.414V13H8v-2h5.586V4.586ZM4 19V5h2v14H4Z"/>`
	expandRightLinePath           = `<path fill="currentColor" d="m17.172 11l-4.657-4.657l1.414-1.414L21 12l-7.07 7.071l-1.415-1.414L17.172 13H8v-2h9.172ZM4 19V5h2v14H4Z"/>`
	expandUpDownFillPath          = `<path fill="currentColor" d="m18 9l-6-6l-6 6h12Zm0 6l-6 6l-6-6h12Z"/>`
	expandUpDownLinePath          = `<path fill="currentColor" d="M18.207 9.043L12 2.836L5.793 9.043l1.414 1.414L12 5.664l4.793 4.793l1.414-1.414ZM5.793 14.957L12 21.165l6.207-6.208l-1.414-1.414L12 18.336l-4.793-4.793l-1.414 1.414Z"/>`
	externalLinkFillPath          = `<path fill="currentColor" d="M10 6v2H5v11h11v-5h2v6a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h6Zm11-3v9l-3.794-3.793l-5.999 6l-1.414-1.414l5.999-6L12 3h9Z"/>`
	externalLinkLinePath          = `<path fill="currentColor" d="M10 6v2H5v11h11v-5h2v6a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h6Zm11-3v8h-2V6.413l-7.793 7.794l-1.414-1.414L17.585 5H13V3h8Z"/>`
	eyeCloseFillPath              = `<path fill="currentColor" d="m10.13 15.842l-.787 2.94l-1.932-.517l.787-2.94a10.988 10.988 0 0 1-3.237-1.871l-2.153 2.153l-1.414-1.414l2.153-2.154a10.957 10.957 0 0 1-2.371-5.07l.9-.164A16.923 16.923 0 0 0 12 10c3.704 0 7.132-1.184 9.924-3.195l.9.163a10.958 10.958 0 0 1-2.37 5.071l2.153 2.154l-1.414 1.414l-2.154-2.153a10.989 10.989 0 0 1-3.237 1.872l.788 2.939l-1.932.517l-.788-2.94a11.078 11.078 0 0 1-3.74 0Z"/>`
	eyeCloseLinePath              = `<path fill="currentColor" d="m9.343 18.782l-1.932-.518l.787-2.939a10.99 10.99 0 0 1-3.237-1.872l-2.153 2.154l-1.414-1.414l2.153-2.154a10.957 10.957 0 0 1-2.371-5.07l1.968-.359a9.002 9.002 0 0 0 17.713 0l1.968.358a10.958 10.958 0 0 1-2.372 5.071l2.154 2.154l-1.414 1.414l-2.154-2.154a10.991 10.991 0 0 1-3.237 1.872l.788 2.94l-1.932.517l-.788-2.94a11.068 11.068 0 0 1-3.74 0l-.787 2.94Z"/>`
	eyeFillPath                   = `<path fill="currentColor" d="M1.182 12C2.122 6.88 6.608 3 12 3c5.392 0 9.878 3.88 10.819 9c-.94 5.12-5.427 9-10.819 9c-5.392 0-9.878-3.88-10.818-9ZM12 17a5 5 0 1 0 0-10a5 5 0 0 0 0 10Zm0-2a3 3 0 1 1 0-6a3 3 0 0 1 0 6Z"/>`
	eyeLinePath                   = `<path fill="currentColor" d="M12 3c5.392 0 9.878 3.88 10.819 9c-.94 5.12-5.427 9-10.819 9c-5.392 0-9.878-3.88-10.818-9C2.122 6.88 6.608 3 12 3Zm0 16a9.005 9.005 0 0 0 8.778-7a9.005 9.005 0 0 0-17.555 0A9.005 9.005 0 0 0 12 19Zm0-2.5a4.5 4.5 0 1 1 0-9a4.5 4.5 0 0 1 0 9Zm0-2a2.5 2.5 0 1 0 0-5a2.5 2.5 0 0 0 0 5Z"/>`
	eyeOffFillPath                = `<path fill="currentColor" d="M4.52 5.935L1.394 2.808l1.414-1.414l19.799 19.798l-1.414 1.415l-3.31-3.31A10.949 10.949 0 0 1 12 21c-5.392 0-9.878-3.88-10.818-9A10.982 10.982 0 0 1 4.52 5.935Zm10.238 10.237l-1.464-1.464a3 3 0 0 1-4.001-4.001L7.829 9.243a5 5 0 0 0 6.929 6.929ZM7.974 3.76C9.221 3.27 10.58 3 12 3c5.392 0 9.878 3.88 10.819 9a10.947 10.947 0 0 1-2.012 4.593l-3.86-3.86a5 5 0 0 0-5.68-5.68L7.975 3.76Z"/>`
	eyeOffLinePath                = `<path fill="currentColor" d="M17.883 19.297A10.949 10.949 0 0 1 12 21c-5.392 0-9.878-3.88-10.818-9A10.982 10.982 0 0 1 4.52 5.935L1.394 2.808l1.414-1.414l19.799 19.798l-1.414 1.415l-3.31-3.31ZM5.936 7.35A8.965 8.965 0 0 0 3.223 12a9.005 9.005 0 0 0 13.201 5.838l-2.028-2.028A4.5 4.5 0 0 1 8.19 9.604L5.936 7.35Zm6.978 6.978l-3.242-3.241a2.5 2.5 0 0 0 3.241 3.241Zm7.893 2.265l-1.431-1.431A8.935 8.935 0 0 0 20.778 12A9.005 9.005 0 0 0 9.552 5.338L7.974 3.76C9.221 3.27 10.58 3 12 3c5.392 0 9.878 3.88 10.819 9a10.947 10.947 0 0 1-2.012 4.593Zm-9.084-9.084a4.5 4.5 0 0 1 4.769 4.769l-4.77-4.77Z"/>`
	eyeTwoFillPath                = `<path fill="currentColor" d="M12 2c5.523 0 10 4.477 10 10s-4.477 10-10 10S2 17.523 2 12S6.477 2 12 2Zm0 5c-.513 0-1.008.077-1.473.22a2.5 2.5 0 1 1-3.306 3.307A5 5 0 1 0 12 7Z"/>`
	eyeTwoLinePath                = `<path fill="currentColor" d="M12 2c5.523 0 10 4.477 10 10s-4.477 10-10 10S2 17.523 2 12S6.477 2 12 2Zm0 2a8 8 0 1 0 0 16a8 8 0 0 0 0-16Zm0 3a5 5 0 1 1-4.78 3.527A2.499 2.499 0 0 0 12 9.5a2.5 2.5 0 0 0-1.473-2.28A5.01 5.01 0 0 1 12 7Z"/>`
	facebookBoxFillPath           = `<path fill="currentColor" d="M15.402 21v-6.966h2.333l.349-2.708h-2.682V9.598c0-.784.218-1.319 1.342-1.319h1.434V5.857a19.19 19.19 0 0 0-2.09-.107c-2.067 0-3.482 1.262-3.482 3.58v1.996h-2.338v2.708h2.338V21H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h16a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1h-4.598Z"/>`
	facebookBoxLinePath           = `<path fill="currentColor" d="M14 19h5V5H5v14h7v-5h-2v-2h2v-1.654c0-1.337.14-1.822.4-2.311A2.726 2.726 0 0 1 13.536 6.9c.382-.205.857-.328 1.687-.381c.329-.021.755.005 1.278.08v1.9H16c-.917 0-1.296.043-1.522.164a.728.728 0 0 0-.314.314c-.12.226-.164.45-.164 1.368V12h2.5l-.5 2h-2v5ZM4 3h16a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Z"/>`
	facebookCircleFillPath        = `<path fill="currentColor" d="M12.001 2c-5.523 0-10 4.477-10 10c0 4.991 3.657 9.128 8.438 9.878v-6.987h-2.54V12h2.54V9.797c0-2.506 1.492-3.89 3.777-3.89c1.094 0 2.238.195 2.238.195v2.46h-1.26c-1.243 0-1.63.771-1.63 1.562V12h2.773l-.443 2.89h-2.33v6.988C18.343 21.128 22 16.991 22 12c0-5.523-4.477-10-10-10Z"/>`
	facebookCircleLinePath        = `<path fill="currentColor" d="M13.001 19.938a8.001 8.001 0 0 0-1-15.938a8 8 0 0 0-1 15.938V14h-2v-2h2v-1.654c0-1.337.14-1.822.4-2.311A2.725 2.725 0 0 1 12.537 6.9c.382-.205.857-.328 1.687-.381c.329-.021.755.005 1.278.08v1.9h-.5c-.917 0-1.296.043-1.522.164a.728.728 0 0 0-.314.314c-.12.226-.164.45-.164 1.368V12h2.5l-.5 2h-2v5.938Zm-1 2.062c-5.523 0-10-4.477-10-10s4.477-10 10-10s10 4.477 10 10s-4.477 10-10 10Z"/>`
	facebookFillPath              = `<path fill="currentColor" d="M14 13.5h2.5l1-4H14v-2c0-1.03 0-2 2-2h1.5V2.14c-.326-.043-1.557-.14-2.857-.14C11.928 2 10 3.657 10 6.7v2.8H7v4h3V22h4v-8.5Z"/>`
	facebookLinePath              = `<path fill="currentColor" d="M13 9h4.5l-.5 2h-4v9h-2v-9H7V9h4V7.128c0-1.783.186-2.43.534-3.082a3.635 3.635 0 0 1 1.512-1.512C13.698 2.186 14.345 2 16.128 2c.522 0 .98.05 1.372.15V4h-1.372c-1.324 0-1.727.078-2.139.298a1.63 1.63 0 0 0-.691.692c-.22.411-.298.814-.298 2.138V9Z"/>`
	fahrenheitFillPath            = `<path fill="currentColor" d="M12 12h7v2h-7v7h-2V8a4 4 0 0 1 4-4h7v2h-7a2 2 0 0 0-2 2v4Zm-7.5-2a3.5 3.5 0 1 1 0-7a3.5 3.5 0 0 1 0 7Zm0-2a1.5 1.5 0 1 0 0-3a1.5 1.5 0 0 0 0 3Z"/>`
	fahrenheitLinePath            = `<path fill="currentColor" d="M12 12h7v2h-7v7h-2V8a4 4 0 0 1 4-4h7v2h-7a2 2 0 0 0-2 2v4Zm-7.5-2a3.5 3.5 0 1 1 0-7a3.5 3.5 0 0 1 0 7Zm0-2a1.5 1.5 0 1 0 0-3a1.5 1.5 0 0 0 0 3Z"/>`
	feedbackFillPath              = `<path fill="currentColor" d="M6.455 19L2 22.5V4a1 1 0 0 1 1-1h18a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H6.455ZM11 13v2h2v-2h-2Zm0-6v5h2V7h-2Z"/>`
	feedbackLinePath              = `<path fill="currentColor" d="M6.455 19L2 22.5V4a1 1 0 0 1 1-1h18a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H6.455ZM4 18.385L5.763 17H20V5H4v13.385ZM11 13h2v2h-2v-2Zm0-6h2v5h-2V7Z"/>`
	fileAddFillPath               = `<path fill="currentColor" d="m16 2l5 5v14.008a.993.993 0 0 1-.993.992H3.993A1 1 0 0 1 3 21.008V2.992C3 2.444 3.445 2 3.993 2H16Zm-5 9H8v2h3v3h2v-3h3v-2h-3V8h-2v3Z"/>`
	fileAddLinePath               = `<path fill="currentColor" d="M15 4H5v16h14V8h-4V4ZM3 2.992C3 2.444 3.447 2 3.998 2H16l5 5v13.992A1 1 0 0 1 20.007 22H3.993A1 1 0 0 1 3 21.008V2.992ZM11 11V8h2v3h3v2h-3v3h-2v-3H8v-2h3Z"/>`
	fileChartFillPath             = `<path fill="currentColor" d="m16 2l5 5v14.008a.993.993 0 0 1-.993.992H3.993A1 1 0 0 1 3 21.008V2.992C3 2.444 3.445 2 3.993 2H16Zm-5 5v10h2V7h-2Zm4 4v6h2v-6h-2Zm-8 2v4h2v-4H7Z"/>`
	fileChartLinePath             = `<path fill="currentColor" d="M11 7h2v10h-2V7Zm4 4h2v6h-2v-6Zm-8 2h2v4H7v-4Zm8-9H5v16h14V8h-4V4ZM3 2.992C3 2.444 3.447 2 3.998 2H16l5 5v13.992A1 1 0 0 1 20.007 22H3.993A1 1 0 0 1 3 21.008V2.992Z"/>`
	fileChartTwoFillPath          = `<path fill="currentColor" d="m16 2l5 5v14.008a.993.993 0 0 1-.993.992H3.993A1 1 0 0 1 3 21.008V2.992C3 2.444 3.445 2 3.993 2H16Zm-4 6a4 4 0 1 0 4 4h-4V8Z"/>`
	fileChartTwoLinePath          = `<path fill="currentColor" d="M15 4H5v16h14V8h-4V4ZM3 2.992C3 2.444 3.447 2 3.998 2H16l5 5v13.992A1 1 0 0 1 20.007 22H3.993A1 1 0 0 1 3 21.008V2.992ZM12 8v4h4a4 4 0 1 1-4-4Z"/>`
	fileCloseFillPath             = `<path fill="currentColor" d="M18 13c1.093 0 2.117.292 3 .803V7l-5-5H3.998A.995.995 0 0 0 3 2.992v18.016a1 1 0 0 0 .993.992h8.81A6 6 0 0 1 18 13Zm3.536 8.121L19.414 19l2.122-2.121l-1.415-1.415l-2.12 2.122l-2.122-2.122l-1.414 1.415l2.12 2.12l-2.12 2.122l1.414 1.414L18 20.415l2.121 2.12l1.415-1.414Z"/>`
	fileCloseLinePath             = `<path fill="currentColor" d="M12 22v-2H5V4h10v4h4v5h2V7l-5-5H3.998A.995.995 0 0 0 3 2.992v18.016a1 1 0 0 0 .993.992H12Zm9.536-.879L19.414 19l2.122-2.121l-1.415-1.415l-2.12 2.122l-2.122-2.122l-1.414 1.415l2.12 2.12l-2.12 2.122l1.414 1.414L18 20.415l2.121 2.12l1.415-1.414Z"/>`
	fileCloudFillPath             = `<path fill="currentColor" d="M14.997 2L21 8l.001 4.26A5.466 5.466 0 0 0 17.5 11l-.221.004a5.503 5.503 0 0 0-5.127 4.205l-.016.074l-.03.02A4.75 4.75 0 0 0 10.878 22H3.993a.993.993 0 0 1-.986-.876L3 21.008V2.992c0-.498.387-.927.885-.985L4.002 2h10.995ZM17.5 13a3.5 3.5 0 0 1 3.5 3.5l-.002.103a2.75 2.75 0 0 1-.58 5.392L20.25 22h-5.5l-.168-.005a2.75 2.75 0 0 1-.579-5.393L14 16.5a3.5 3.5 0 0 1 3.5-3.5Z"/>`
	fileCloudLinePath             = `<path fill="currentColor" d="M14.997 2L21 8l.001 4.26a5.472 5.472 0 0 0-2-1.053L19 9h-5V4H5v16h5.06a4.73 4.73 0 0 0 .817 2H3.993a.993.993 0 0 1-.986-.876L3 21.008V2.992c0-.498.387-.927.885-.985L4.002 2h10.995ZM17.5 13a3.5 3.5 0 0 1 3.5 3.5l-.002.103a2.75 2.75 0 0 1-.58 5.392L20.25 22h-5.5l-.168-.005a2.75 2.75 0 0 1-.579-5.393L14 16.5a3.5 3.5 0 0 1 3.5-3.5Zm0 2a1.5 1.5 0 0 0-1.473 1.215l-.02.14L16 16.5v1.62l-1.444.406a.75.75 0 0 0 .08 1.465l.109.01h5.51a.75.75 0 0 0 .19-1.475l-1.013-.283L19 18.12V16.5l-.007-.145A1.5 1.5 0 0 0 17.5 15Z"/>`
	fileCodeFillPath              = `<path fill="currentColor" d="m16 2l5 5v14.008a.993.993 0 0 1-.993.992H3.993A1 1 0 0 1 3 21.008V2.992C3 2.444 3.445 2 3.993 2H16Zm1.657 10L14.12 8.464L12.707 9.88L14.828 12l-2.12 2.121l1.413 1.415L17.657 12ZM6.343 12l3.536 3.536l1.414-1.415L9.172 12l2.12-2.121L9.88 8.464L6.343 12Z"/>`
	fileCodeLinePath              = `<path fill="currentColor" d="M15 4H5v16h14V8h-4V4ZM3 2.992C3 2.444 3.447 2 3.998 2H16l5 5v13.992A1 1 0 0 1 20.007 22H3.993A1 1 0 0 1 3 21.008V2.992ZM17.657 12l-3.536 3.536l-1.414-1.415L14.828 12l-2.12-2.121l1.413-1.415L17.657 12ZM6.343 12L9.88 8.464l1.414 1.415L9.172 12l2.12 2.121l-1.413 1.415L6.343 12Z"/>`
	fileCopyFillPath              = `<path fill="currentColor" d="M7 6V3a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1h-3v3c0 .552-.45 1-1.007 1H4.007A1.001 1.001 0 0 1 3 21l.003-14c0-.552.45-1 1.006-1H7Zm2 0h8v10h2V4H9v2Z"/>`
	fileCopyLinePath              = `<path fill="currentColor" d="M7 6V3a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1h-3v3c0 .552-.45 1-1.007 1H4.007A1.001 1.001 0 0 1 3 21l.003-14c0-.552.45-1 1.006-1H7ZM5.002 8L5 20h10V8H5.002ZM9 6h8v10h2V4H9v2Z"/>`
	fileCopyTwoFillPath           = `<path fill="currentColor" d="M7 6V3a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1h-3v3c0 .552-.45 1-1.007 1H4.007A1.001 1.001 0 0 1 3 21l.003-14c0-.552.45-1 1.006-1H7Zm2 0h8v10h2V4H9v2Zm-2 5v2h6v-2H7Zm0 4v2h6v-2H7Z"/>`
	fileCopyTwoLinePath           = `<path fill="currentColor" d="M7 6V3a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1h-3v3c0 .552-.45 1-1.007 1H4.007A1.001 1.001 0 0 1 3 21l.003-14c0-.552.45-1 1.006-1H7ZM5.002 8L5 20h10V8H5.002ZM9 6h8v10h2V4H9v2Zm-2 5h6v2H7v-2Zm0 4h6v2H7v-2Z"/>`
	fileDamageFillPath            = `<path fill="currentColor" d="m3 14l4 2.5l3-3.5l3 4l2-2.5l3 .5l-3-3l-2 2.5l-3-5l-3.5 3.75L3 10V2.992C3 2.455 3.447 2 3.998 2H14v6a1 1 0 0 0 1 1h6v11.992A1 1 0 0 1 20.007 22H3.993A.993.993 0 0 1 3 21.008V14Zm18-7h-5V2.003L21 7Z"/>`
	fileDamageLinePath            = `<path fill="currentColor" d="M19 9h-5V4H5v7.857l1.5 1.393L10 9.5l3 5l2-2.5l3 3l-3-.5l-2 2.5l-3-4l-3 3.5l-2-1.25V20h14V9Zm2-1v12.993A1 1 0 0 1 20.007 22H3.993A.993.993 0 0 1 3 21.008V2.992C3 2.455 3.449 2 4.002 2h10.995L21 8Z"/>`
	fileDownloadFillPath          = `<path fill="currentColor" d="m16 2l5 5v14.008a.993.993 0 0 1-.993.992H3.993A1 1 0 0 1 3 21.008V2.992C3 2.444 3.445 2 3.993 2H16Zm-3 10V8h-2v4H8l4 4l4-4h-3Z"/>`
	fileDownloadLinePath          = `<path fill="currentColor" d="M13 12h3l-4 4l-4-4h3V8h2v4Zm2-8H5v16h14V8h-4V4ZM3 2.992C3 2.444 3.447 2 3.998 2H16l5 5v13.992A1 1 0 0 1 20.007 22H3.993A1 1 0 0 1 3 21.008V2.992Z"/>`
	fileEditFillPath              = `<path fill="currentColor" d="M21 15.243v5.765a.993.993 0 0 1-.993.992H3.993A1 1 0 0 1 3 20.992V9h6a1 1 0 0 0 1-1V2h10.002c.551 0 .998.455.998.992v3.765l-8.999 9l-.006 4.238l4.246.006L21 15.243Zm.778-6.435l1.414 1.414L15.414 18l-1.416-.002l.002-1.412l7.778-7.778ZM3 7l5-4.997V7H3Z"/>`
	fileEditLinePath              = `<path fill="currentColor" d="m21 6.757l-2 2V4h-9v5H5v11h14v-2.757l2-2v5.765a.993.993 0 0 1-.993.992H3.993A1 1 0 0 1 3 20.993V8l6.003-6h10.995C20.55 2 21 2.455 21 2.992v3.765Zm.778 2.05l1.414 1.415L15.414 18l-1.416-.002l.002-1.412l7.778-7.778Z"/>`
	fileExcelFillPath             = `<path fill="currentColor" d="m16 2l5 5v14.008a.993.993 0 0 1-.993.992H3.993A1 1 0 0 1 3 21.008V2.992C3 2.444 3.445 2 3.993 2H16Zm-2.8 10L16 8h-2.4L12 10.286L10.4 8H8l2.8 4L8 16h2.4l1.6-2.286L13.6 16H16l-2.8-4Z"/>`
	fileExcelLinePath             = `<path fill="currentColor" d="m13.2 12l2.8 4h-2.4L12 13.714L10.4 16H8l2.8-4L8 8h2.4l1.6 2.286L13.6 8H15V4H5v16h14V8h-3l-2.8 4ZM3 2.992C3 2.444 3.447 2 3.998 2H16l5 5v13.992A1 1 0 0 1 20.007 22H3.993A1 1 0 0 1 3 21.008V2.992Z"/>`
	fileExcelTwoFillPath          = `<path fill="currentColor" d="m2.859 2.878l12.57-1.796a.5.5 0 0 1 .571.495v20.847a.5.5 0 0 1-.57.495L2.858 21.123a1 1 0 0 1-.859-.99V3.868a1 1 0 0 1 .859-.99ZM17 3h4a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1h-4V3Zm-6.8 9L13 8h-2.4L9 10.286L7.4 8H5l2.8 4L5 16h2.4L9 13.714L10.6 16H13l-2.8-4Z"/>`
	fileExcelTwoLinePath          = `<path fill="currentColor" d="m2.859 2.878l12.57-1.796a.5.5 0 0 1 .571.495v20.847a.5.5 0 0 1-.57.495L2.858 21.123a1 1 0 0 1-.859-.99V3.868a1 1 0 0 1 .859-.99ZM4 4.735v14.53l10 1.43V3.305L4 4.735ZM17 19h3V5h-3V3h4a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1h-4v-2Zm-6.8-7l2.8 4h-2.4L9 13.714L7.4 16H5l2.8-4L5 8h2.4L9 10.286L10.6 8H13l-2.8 4Z"/>`
	fileFillPath                  = `<path fill="currentColor" d="m3 8l6.003-6h10.995C20.55 2 21 2.455 21 2.992v18.016a.993.993 0 0 1-.993.992H3.993A1 1 0 0 1 3 20.993V8Zm7-4.5L4.5 9H10V3.5Z"/>`
	fileForbidFillPath            = `<path fill="currentColor" d="M21 11.674A7 7 0 0 0 12.255 22H3.993A1 1 0 0 1 3 21.008V2.992C3 2.444 3.445 2 3.993 2H16l5 5v4.674ZM18 23a5 5 0 1 1 0-10a5 5 0 0 1 0 10Zm-1.293-2.292a3 3 0 0 0 4.001-4.001l-4.001 4Zm-1.415-1.415l4.001-4a3 3 0 0 0-4.001 4.001Z"/>`
	fileForbidLinePath            = `<path fill="currentColor" d="M11.29 20a6.96 6.96 0 0 0 .965 2H3.993A1 1 0 0 1 3 21.008V2.992C3 2.444 3.447 2 3.998 2H16l5 5v4.674a6.95 6.95 0 0 0-2-.603V8h-4V4H5v16h6.29ZM18 23a5 5 0 1 1 0-10a5 5 0 0 1 0 10Zm-1.293-2.292a3 3 0 0 0 4.001-4.001l-4.001 4Zm-1.415-1.415l4.001-4a3 3 0 0 0-4.001 4.001Z"/>`
	fileFourFillPath              = `<path fill="currentColor" d="M21 15h-7v7H3.998C3.447 22 3 21.545 3 21.008V2.992C3 2.444 3.445 2 3.993 2h16.014A1 1 0 0 1 21 3.007V15Zm0 2l-5 4.997V17h5Z"/>`
	fileFourLinePath              = `<path fill="currentColor" d="m21 16l-6.003 6H4a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h16a1 1 0 0 1 1 1v13Zm-2-1V4H5v16h9v-5h5Z"/>`
	fileGifFillPath               = `<path fill="currentColor" d="m16 2l5 5v13.992A1 1 0 0 1 20.007 22H3.993A1 1 0 0 1 3 21.008V2.992C3 2.444 3.447 2 3.998 2H16Zm-3 8h-1v5h1v-5Zm-2 0H9a2 2 0 0 0-2 2v1a2 2 0 0 0 2 2h1a1 1 0 0 0 1-1v-2H9v1h1v1H9a1 1 0 0 1-1-1v-1a1 1 0 0 1 1-1h2v-1Zm6 0h-3v5h1v-2h2v-1h-2v-1h2v-1Z"/>`
	fileGifLinePath               = `<path fill="currentColor" d="m16 2l5 5v13.992A1 1 0 0 1 20.007 22H3.993A1 1 0 0 1 3 21.008V2.992C3 2.444 3.447 2 3.998 2H16Zm-1 2H5v16h14V8h-4V4Zm-2 6v5h-1v-5h1Zm-2 0v1H9a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1h1v-1H9v-1h2v2a1 1 0 0 1-1 1H9a2 2 0 0 1-2-2v-1a2 2 0 0 1 2-2h2Zm6 0v1h-2v1h2v1h-2v2h-1v-5h3Z"/>`
	fileHistoryFillPath           = `<path fill="currentColor" d="m16 2l5 4.999v14.01a.993.993 0 0 1-.993.991H3.993A1 1 0 0 1 3 21.008V2.992C3 2.444 3.445 2 3.993 2H16Zm-3 7h-2v6h5v-2h-3V9Z"/>`
	fileHistoryLinePath           = `<path fill="currentColor" d="m16 2l5 5v13.992A1 1 0 0 1 20.007 22H3.993A1 1 0 0 1 3 21.008V2.992C3 2.444 3.447 2 3.998 2H16Zm-1 2H5v16h14V8h-4V4Zm-2 5v4h3v2h-5V9h2Z"/>`
	fileHwpFillPath               = `<path fill="currentColor" d="m16 2l5 5v13.992A1 1 0 0 1 20.007 22H3.993A1 1 0 0 1 3 21.008V2.992C3 2.444 3.447 2 3.998 2H16ZM9.333 14.667H8V18h8v-1.333l-6.667-.001v-2ZM12 14.333a1 1 0 1 0 0 2a1 1 0 0 0 0-2ZM12 9a2.5 2.5 0 1 0 0 5a2.5 2.5 0 0 0 0-5Zm0 1.333a1.167 1.167 0 1 1 0 2.334a1.167 1.167 0 0 1 0-2.334ZM12.667 6h-1.334v1.333H8v1.334h8V7.333h-3.334V6Z"/>`
	fileHwpLinePath               = `<path fill="currentColor" d="m16 2l5 5v13.992A1 1 0 0 1 20.007 22H3.993A1 1 0 0 1 3 21.008V2.992C3 2.444 3.447 2 3.998 2H16Zm0 6.667H8V7.333h3.333V6h1.334l-.001 1.333h2.333L15 4H5v16h14V8l-3-.001v.668Zm-6.667 6v1.999H16V18H8v-3.333h1.333ZM12 14.333a1 1 0 1 1 0 2a1 1 0 0 1 0-2ZM12 9a2.5 2.5 0 1 1 0 5a2.5 2.5 0 0 1 0-5Zm0 1.333a1.167 1.167 0 1 0 0 2.334a1.167 1.167 0 0 0 0-2.334Z"/>`
	fileImageFillPath             = `<path fill="currentColor" d="m21 7l-5-5H3.993A.993.993 0 0 0 3 2.992v18.016a1 1 0 0 0 .993.992h16.014a.993.993 0 0 0 .993-.992V7ZM11 9.5a1.5 1.5 0 1 1-3 0a1.5 1.5 0 0 1 3 0Zm6.5 7.5H8l5.5-7l4 7Z"/>`
	fileImageLinePath             = `<path fill="currentColor" d="M15 8V4H5v16h14V8h-4ZM3 2.992C3 2.444 3.447 2 3.998 2H16l5 5v13.992A1 1 0 0 1 20.007 22H3.993A1 1 0 0 1 3 21.008V2.992ZM11 9.5a1.5 1.5 0 1 1-3 0a1.5 1.5 0 0 1 3 0Zm6.5 7.5l-4-7L8 17h9.5Z"/>`
	fileInfoFillPath              = `<path fill="currentColor" d="m16 2l5 5v14.008a.993.993 0 0 1-.993.992H3.993A1 1 0 0 1 3 21.008V2.992C3 2.444 3.445 2 3.993 2H16Zm-5 5v2h2V7h-2Zm0 4v6h2v-6h-2Z"/>`
	fileInfoLinePath              = `<path fill="currentColor" d="M15 4H5v16h14V8h-4V4ZM3 2.992C3 2.444 3.447 2 3.998 2H16l5 5v13.992A1 1 0 0 1 20.007 22H3.993A1 1 0 0 1 3 21.008V2.992ZM11 11h2v6h-2v-6Zm0-4h2v2h-2V7Z"/>`
	fileLinePath                  = `<path fill="currentColor" d="M9 2.003V2h10.998C20.55 2 21 2.455 21 2.992v18.016a.993.993 0 0 1-.993.992H3.993A1 1 0 0 1 3 20.993V8l6-5.997ZM5.83 8H9V4.83L5.83 8ZM11 4v5a1 1 0 0 1-1 1H5v10h14V4h-8Z"/>`
	fileListFillPath              = `<path fill="currentColor" d="M20 22H4a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h16a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1ZM8 7v2h8V7H8Zm0 4v2h8v-2H8Zm0 4v2h8v-2H8Z"/>`
	fileListLinePath              = `<path fill="currentColor" d="M20 22H4a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h16a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1Zm-1-2V4H5v16h14ZM8 7h8v2H8V7Zm0 4h8v2H8v-2Zm0 4h8v2H8v-2Z"/>`
	fileListThreeFillPath         = `<path fill="currentColor" d="M19 22H5a3 3 0 0 1-3-3V3a1 1 0 0 1 1-1h14a1 1 0 0 1 1 1v12h4v4a3 3 0 0 1-3 3Zm-1-5v2a1 1 0 1 0 2 0v-2h-2ZM6 7v2h8V7H6Zm0 4v2h8v-2H6Zm0 4v2h5v-2H6Z"/>`
	fileListThreeLinePath         = `<path fill="currentColor" d="M19 22H5a3 3 0 0 1-3-3V3a1 1 0 0 1 1-1h14a1 1 0 0 1 1 1v12h4v4a3 3 0 0 1-3 3Zm-1-5v2a1 1 0 1 0 2 0v-2h-2Zm-2 3V4H4v15a1 1 0 0 0 1 1h11ZM6 7h8v2H6V7Zm0 4h8v2H6v-2Zm0 4h5v2H6v-2Z"/>`
	fileListTwoFillPath           = `<path fill="currentColor" d="M20 22H4a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h16a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1ZM8 7v2h8V7H8Zm0 4v2h8v-2H8Zm0 4v2h5v-2H8Z"/>`
	fileListTwoLinePath           = `<path fill="currentColor" d="M20 22H4a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h16a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1Zm-1-2V4H5v16h14ZM8 7h8v2H8V7Zm0 4h8v2H8v-2Zm0 4h5v2H8v-2Z"/>`
	fileLockFillPath              = `<path fill="currentColor" d="m16 2l5 5v14.008a.993.993 0 0 1-.993.992H3.993A1 1 0 0 1 3 21.008V2.992C3 2.444 3.445 2 3.993 2H16Zm-1 9v-1a3 3 0 1 0-6 0v1H8v5h8v-5h-1Zm-2 0h-2v-1a1 1 0 1 1 2 0v1Z"/>`
	fileLockLinePath              = `<path fill="currentColor" d="M15 4H5v16h14V8h-4V4ZM3 2.992C3 2.444 3.447 2 3.998 2H16l5 5v13.992A1 1 0 0 1 20.007 22H3.993A1 1 0 0 1 3 21.008V2.992ZM15 11h1v5H8v-5h1v-1a3 3 0 1 1 6 0v1Zm-2 0v-1a1 1 0 1 0-2 0v1h2Z"/>`
	fileMarkFillPath              = `<path fill="currentColor" d="M21 2.992v18.016a1 1 0 0 1-.993.992H3.993A.993.993 0 0 1 3 21.008V2.992A1 1 0 0 1 3.993 2h16.014c.548 0 .993.444.993.992ZM7 4v9l3.5-2l3.5 2V4H7Z"/>`
	fileMarkLinePath              = `<path fill="currentColor" d="M20 22H4a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h16a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1ZM7 4H5v16h14V4h-5v9l-3.5-2L7 13V4Z"/>`
	fileMusicFillPath             = `<path fill="currentColor" d="m16 2l5 5v14.008a.993.993 0 0 1-.993.992H3.993A1 1 0 0 1 3 21.008V2.992C3 2.444 3.445 2 3.993 2H16Zm-5 10.05a2.5 2.5 0 1 0 2 2.45V10h3V8h-5v4.05Z"/>`
	fileMusicLinePath             = `<path fill="currentColor" d="M16 8v2h-3v4.5a2.5 2.5 0 1 1-2-2.45V8h4V4H5v16h14V8h-3ZM3 2.992C3 2.444 3.447 2 3.998 2H16l5 5v13.992A1 1 0 0 1 20.007 22H3.993A1 1 0 0 1 3 21.008V2.992Z"/>`
	filePaperFillPath             = `<path fill="currentColor" d="M3 15V3a1 1 0 0 1 1-1h16a1 1 0 0 1 1 1v16a3 3 0 0 1-3 3H4a3 3 0 0 1-3-3v-2h16v2a1 1 0 1 0 2 0v-4H3Z"/>`
	filePaperLinePath             = `<path fill="currentColor" d="M17 17v2a1 1 0 1 0 2 0V4H5v11H3V3a1 1 0 0 1 1-1h16a1 1 0 0 1 1 1v16a3 3 0 0 1-3 3H4a3 3 0 0 1-3-3v-2h16Z"/>`
	filePaperTwoFillPath          = `<path fill="currentColor" d="M20 2a3 3 0 0 1 3 3v2h-2v12a3 3 0 0 1-3 3H4a3 3 0 0 1-3-3v-2h16v2a1 1 0 0 0 .883.993L18 20a1 1 0 0 0 .993-.883L19 19v-4H3V5a3 3 0 0 1 3-3h14Z"/>`
	filePaperTwoLinePath          = `<path fill="currentColor" d="M20 2a3 3 0 0 1 3 3v2h-2v12a3 3 0 0 1-3 3H4a3 3 0 0 1-3-3v-2h16v2a1 1 0 0 0 .883.993L18 20a1 1 0 0 0 .993-.883L19 19V4H6a1 1 0 0 0-.993.883L5 5v10H3V5a3 3 0 0 1 3-3h14Z"/>`
	filePdfFillPath               = `<path fill="currentColor" d="m16 2l5 5v14.008a.993.993 0 0 1-.993.992H3.993A1 1 0 0 1 3 21.008V2.992C3 2.444 3.445 2 3.993 2H16Zm-4 14a4 4 0 0 0 0-8H8v8h4Zm-2-6h2a2 2 0 1 1 0 4h-2v-4Z"/>`
	filePdfLinePath               = `<path fill="currentColor" d="M12 16H8V8h4a4 4 0 0 1 0 8Zm-2-6v4h2a2 2 0 1 0 0-4h-2Zm5-6H5v16h14V8h-4V4ZM3 2.992C3 2.444 3.447 2 3.998 2H16l5 5v13.992A1 1 0 0 1 20.007 22H3.993A1 1 0 0 1 3 21.008V2.992Z"/>`
	filePdfTwoFillPath            = `<path fill="currentColor" d="M3.998 2A.995.995 0 0 0 3 2.992v18.016a1 1 0 0 0 .993.992h16.014A1 1 0 0 0 21 20.992V7l-5-5H3.998ZM10.5 7.5h2c0 2.49 2.144 5.16 4.816 6.051l-.457 1.939c-3.136-.448-6.377.89-9.304 2.842l-1.18-1.613c1.086-.869 2.128-2.343 2.9-4.066c.77-1.716 1.225-3.576 1.225-5.153Zm.6 5.972c.267-.597.504-1.216.704-1.843a9.66 9.66 0 0 0 1.706 1.966c-.982.176-1.943.465-2.875.833c.165-.314.32-.633.465-.956Z"/>`
	filePdfTwoLinePath            = `<path fill="currentColor" d="M5 4h10v4h4v12H5V4ZM3.998 2A.995.995 0 0 0 3 2.992v18.016a1 1 0 0 0 .993.992h16.014A1 1 0 0 0 21 20.992V7l-5-5H3.998ZM10.5 7.5c0 1.577-.456 3.437-1.225 5.153c-.772 1.723-1.814 3.197-2.9 4.066l1.18 1.613c2.927-1.952 6.168-3.29 9.303-2.842l.458-1.939C14.644 12.661 12.5 9.99 12.5 7.5h-2Zm.6 5.972c.267-.597.504-1.216.704-1.843a9.66 9.66 0 0 0 1.706 1.966c-.982.176-1.944.465-2.875.833c.165-.314.32-.633.465-.956Z"/>`
	filePptFillPath               = `<path fill="currentColor" d="m16 2l5 5v14.008a.993.993 0 0 1-.993.992H3.993A1 1 0 0 1 3 21.008V2.992C3 2.444 3.445 2 3.993 2H16ZM8 8v8h2v-2h6V8H8Zm2 2h4v2h-4v-2Z"/>`
	filePptLinePath               = `<path fill="currentColor" d="M3 2.992C3 2.444 3.447 2 3.998 2H16l5 5v13.992A1 1 0 0 1 20.007 22H3.993A1 1 0 0 1 3 21.008V2.992ZM5 4v16h14V8h-3v6h-6v2H8V8h7V4H5Zm5 6v2h4v-2h-4Z"/>`
	filePptTwoFillPath            = `<path fill="currentColor" d="M17 3h4a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1h-4V3ZM2.859 2.878l12.57-1.796a.5.5 0 0 1 .571.495v20.847a.5.5 0 0 1-.57.495L2.858 21.123a1 1 0 0 1-.859-.99V3.868a1 1 0 0 1 .859-.99ZM5 8v8h2v-2h6V8H5Zm2 2h4v2H7v-2Z"/>`
	filePptTwoLinePath            = `<path fill="currentColor" d="m2.859 2.878l12.57-1.796a.5.5 0 0 1 .571.495v20.847a.5.5 0 0 1-.57.495L2.858 21.123a1 1 0 0 1-.859-.99V3.868a1 1 0 0 1 .859-.99ZM4 4.735v14.53l10 1.43V3.305L4 4.735ZM17 19h3V5h-3V3h4a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1h-4v-2ZM5 8h8v6H7v2H5V8Zm2 2v2h4v-2H7Z"/>`
	fileReduceFillPath            = `<path fill="currentColor" d="m16 2l5 5v14.008a.993.993 0 0 1-.993.992H3.993A1 1 0 0 1 3 21.008V2.992C3 2.444 3.445 2 3.993 2H16Zm-8 9v2h8v-2H8Z"/>`
	fileReduceLinePath            = `<path fill="currentColor" d="M15 4H5v16h14V8h-4V4ZM3 2.992C3 2.444 3.447 2 3.998 2H16l5 5v13.992A1 1 0 0 1 20.007 22H3.993A1 1 0 0 1 3 21.008V2.992ZM16 11v2H8v-2h8Z"/>`
	fileSearchFillPath            = `<path fill="currentColor" d="m16 2l5 5v14.008a.993.993 0 0 1-.993.992H3.993A1 1 0 0 1 3 21.008V2.992C3 2.444 3.445 2 3.993 2H16Zm-2.471 12.446l2.21 2.21l1.415-1.413l-2.21-2.21a4.001 4.001 0 0 0-6.276-4.861a4 4 0 0 0 4.861 6.274Zm-.618-2.032a2 2 0 1 1-2.828-2.828a2 2 0 0 1 2.828 2.828Z"/>`
	fileSearchLinePath            = `<path fill="currentColor" d="M15 4H5v16h14V8h-4V4ZM3 2.992C3 2.444 3.447 2 3.998 2H16l5 5v13.992A1 1 0 0 1 20.007 22H3.993A1 1 0 0 1 3 21.008V2.992Zm10.529 11.454a4.001 4.001 0 0 1-4.86-6.274a4 4 0 0 1 6.274 4.86l2.21 2.21l-1.413 1.415l-2.211-2.21Zm-.618-2.032a2 2 0 1 0-2.828-2.828a2 2 0 0 0 2.828 2.828Z"/>`
	fileSettingsFillPath          = `<path fill="currentColor" d="m16 2l5 5v14.008a.993.993 0 0 1-.993.992H3.993A1 1 0 0 1 3 21.008V2.992C3 2.444 3.445 2 3.993 2H16ZM8.595 12.812l-.992.572l1 1.732l.992-.573c.393.372.873.654 1.405.812V16.5h2v-1.145a3.495 3.495 0 0 0 1.405-.812l.992.573l1-1.732l-.991-.573a3.51 3.51 0 0 0 0-1.623l.991-.572l-1-1.732l-.992.573A3.496 3.496 0 0 0 13 8.645V7.5h-2v1.145a3.496 3.496 0 0 0-1.405.812l-.992-.573l-1 1.732l.992.573a3.51 3.51 0 0 0 0 1.623ZM12 13.5a1.5 1.5 0 1 1 0-3a1.5 1.5 0 0 1 0 3Z"/>`
	fileSettingsLinePath          = `<path fill="currentColor" d="M8.595 12.812a3.51 3.51 0 0 1 0-1.623l-.992-.573l1-1.732l.992.573A3.496 3.496 0 0 1 11 8.645V7.5h2v1.145c.532.158 1.012.44 1.405.812l.992-.573l1 1.732l-.992.572a3.507 3.507 0 0 1 0 1.623l.992.573l-1 1.732l-.992-.573a3.495 3.495 0 0 1-1.405.812V16.5h-2v-1.145a3.495 3.495 0 0 1-1.405-.812l-.992.573l-1-1.732l.992-.572ZM12 13.5a1.5 1.5 0 1 0 0-3a1.5 1.5 0 0 0 0 3ZM15 4H5v16h14V8h-4V4ZM3 2.992C3 2.444 3.447 2 3.998 2H16l5 5v13.992A1 1 0 0 1 20.007 22H3.993A1 1 0 0 1 3 21.008V2.992Z"/>`
	fileShieldFillPath            = `<path fill="currentColor" d="M21 7v13.992A1 1 0 0 1 20.007 22H3.993A.993.993 0 0 1 3 21.008V2.992C3 2.455 3.447 2 3.998 2h11.999L21 7ZM8 8v5.6c0 .85.446 1.643 1.187 2.114L12 17.5l2.813-1.786A2.51 2.51 0 0 0 16 13.6V8H8Zm2 2h4v3.6c0 .158-.09.318-.26.425L12 15.131l-1.74-1.106A.512.512 0 0 1 10 13.6V10Z"/>`
	fileShieldLinePath            = `<path fill="currentColor" d="M14 8V4H5v16h14V9h-3v4.62c0 .844-.446 1.633-1.188 2.102L12 17.498L9.187 15.72C8.446 15.254 8 14.465 8 13.62V8h6Zm7 0v12.993A1 1 0 0 1 20.007 22H3.993A.993.993 0 0 1 3 21.008V2.992C3 2.455 3.449 2 4.002 2h10.995L21 8Zm-11 5.62c0 .15.087.304.255.41L12 15.133l1.745-1.101c.168-.107.255-.261.255-.412V10h-4v3.62Z"/>`
	fileShieldTwoFillPath         = `<path fill="currentColor" d="M21 10H11v7.382c0 1.563.777 3.023 2.074 3.892l1.083.726H3.993A.993.993 0 0 1 3 21.008V2.992C3 2.455 3.447 2 3.998 2h11.999L21 7v3Zm-8 2h8v5.382c0 .897-.446 1.734-1.188 2.23L17 21.499l-2.813-1.885A2.684 2.684 0 0 1 13 17.383V12Z"/>`
	fileShieldTwoLinePath         = `<path fill="currentColor" d="M14 9V4H5v16h6.056a4.99 4.99 0 0 0 1.18 1.085l1.39.915H3.993A.993.993 0 0 1 3 21.008V2.992C3 2.455 3.449 2 4.002 2h10.995L21 8v1h-7Zm-2 2h9v5.949c0 .99-.501 1.916-1.336 2.465L16.5 21.498l-3.164-2.084A2.954 2.954 0 0 1 12 16.95V11Zm2 5.949c0 .316.162.614.436.795l2.064 1.36l2.064-1.36a.954.954 0 0 0 .436-.795V13h-5v3.949Z"/>`
	fileShredFillPath             = `<path fill="currentColor" d="M22 12v2H2v-2h2V2.995c0-.55.445-.995.996-.995H15l5 5v5h2ZM3 16h2v6H3v-6Zm16 0h2v6h-2v-6Zm-4 0h2v6h-2v-6Zm-4 0h2v6h-2v-6Zm-4 0h2v6H7v-6Z"/>`
	fileShredLinePath             = `<path fill="currentColor" d="M6 12h12V8h-4V4H6v8Zm-2 0V2.995c0-.55.445-.995.996-.995H15l5 5v5h2v2H2v-2h2Zm-1 4h2v6H3v-6Zm16 0h2v6h-2v-6Zm-4 0h2v6h-2v-6Zm-4 0h2v6h-2v-6Zm-4 0h2v6H7v-6Z"/>`
	fileTextFillPath              = `<path fill="currentColor" d="M21 9v11.992A1 1 0 0 1 20.007 22H3.993A.993.993 0 0 1 3 21.008V2.992C3 2.455 3.447 2 3.998 2H14v6a1 1 0 0 0 1 1h6Zm0-2h-5V2.003L21 7ZM8 7v2h3V7H8Zm0 4v2h8v-2H8Zm0 4v2h8v-2H8Z"/>`
	fileTextLinePath              = `<path fill="currentColor" d="M21 8v12.993A1 1 0 0 1 20.007 22H3.993A.993.993 0 0 1 3 21.008V2.992C3 2.455 3.449 2 4.002 2h10.995L21 8Zm-2 1h-5V4H5v16h14V9ZM8 7h3v2H8V7Zm0 4h8v2H8v-2Zm0 4h8v2H8v-2Z"/>`
	fileThreeFillPath             = `<path fill="currentColor" d="M21 9v11.992A1 1 0 0 1 20.007 22H3.993A.993.993 0 0 1 3 21.008V2.992C3 2.455 3.447 2 3.998 2H14v6a1 1 0 0 0 1 1h6Zm0-2h-5V2.003L21 7Z"/>`
	fileThreeLinePath             = `<path fill="currentColor" d="M21 8v12.993A1 1 0 0 1 20.007 22H3.993A.993.993 0 0 1 3 21.008V2.992C3 2.455 3.449 2 4.002 2h10.995L21 8Zm-2 1h-5V4H5v16h14V9Z"/>`
	fileTransferFillPath          = `<path fill="currentColor" d="m16 2l5 5v14.008a.993.993 0 0 1-.993.992H3.993A1 1 0 0 1 3 21.008V2.992C3 2.444 3.445 2 3.993 2H16Zm-4 9H8v2h4v3l4-4l-4-4v3Z"/>`
	fileTransferLinePath          = `<path fill="currentColor" d="M15 4H5v16h14V8h-4V4ZM3 2.992C3 2.444 3.447 2 3.998 2H16l5 5v13.992A1 1 0 0 1 20.007 22H3.993A1 1 0 0 1 3 21.008V2.992ZM12 11V8l4 4l-4 4v-3H8v-2h4Z"/>`
	fileTwoFillPath               = `<path fill="currentColor" d="M3 9h6a1 1 0 0 0 1-1V2h10.002c.551 0 .998.455.998.992v18.016a.993.993 0 0 1-.993.992H3.993A1 1 0 0 1 3 20.992V9Zm0-2l5-4.997V7H3Z"/>`
	fileTwoLinePath               = `<path fill="currentColor" d="m3 8l6.003-6h10.995C20.55 2 21 2.455 21 2.992v18.016a.993.993 0 0 1-.993.992H3.993A1 1 0 0 1 3 20.993V8Zm7-4v5H5v11h14V4h-9Z"/>`
	fileUnknowFillPath            = `<path fill="currentColor" d="m16 2l5 5v14.008a.993.993 0 0 1-.993.992H3.993A1 1 0 0 1 3 21.008V2.992C3 2.444 3.445 2 3.993 2H16Zm-5 13v2h2v-2h-2Zm2-1.645A3.502 3.502 0 0 0 12 6.5a3.501 3.501 0 0 0-3.433 2.813l1.962.393A1.5 1.5 0 1 1 12 11.5a1 1 0 0 0-1 1V14h2v-.645Z"/>`
	fileUnknowLinePath            = `<path fill="currentColor" d="M11 15h2v2h-2v-2Zm2-1.645V14h-2v-1.5a1 1 0 0 1 1-1a1.5 1.5 0 1 0-1.471-1.794l-1.962-.393A3.501 3.501 0 1 1 13 13.355ZM15 4H5v16h14V8h-4V4ZM3 2.992C3 2.444 3.447 2 3.998 2H16l5 5v13.992A1 1 0 0 1 20.007 22H3.993A1 1 0 0 1 3 21.008V2.992Z"/>`
	fileUploadFillPath            = `<path fill="currentColor" d="m16 2l5 5v14.008a.993.993 0 0 1-.993.992H3.993A1 1 0 0 1 3 21.008V2.992C3 2.444 3.445 2 3.993 2H16Zm-3 10h3l-4-4l-4 4h3v4h2v-4Z"/>`
	fileUploadLinePath            = `<path fill="currentColor" d="M15 4H5v16h14V8h-4V4ZM3 2.992C3 2.444 3.447 2 3.998 2H16l5 5v13.992A1 1 0 0 1 20.007 22H3.993A1 1 0 0 1 3 21.008V2.992ZM13 12v4h-2v-4H8l4-4l4 4h-3Z"/>`
	fileUserFillPath              = `<path fill="currentColor" d="m16 2l5 5v14.008a.993.993 0 0 1-.993.992H3.993A1 1 0 0 1 3 21.008V2.992C3 2.444 3.445 2 3.993 2H16Zm-4 9.5a2.5 2.5 0 1 0 0-5a2.5 2.5 0 0 0 0 5ZM7.527 17h8.945a4.5 4.5 0 0 0-8.945 0Z"/>`
	fileUserLinePath              = `<path fill="currentColor" d="M15 4H5v16h14V8h-4V4ZM3 2.992C3 2.444 3.447 2 3.998 2H16l5 5v13.992A1 1 0 0 1 20.007 22H3.993A1 1 0 0 1 3 21.008V2.992Zm9 8.508a2.5 2.5 0 1 1 0-5a2.5 2.5 0 0 1 0 5ZM7.527 17a4.5 4.5 0 0 1 8.945 0H7.527Z"/>`
	fileVideoFillPath             = `<path fill="currentColor" d="m16 2l5 5v14.008a.993.993 0 0 1-.993.992H3.993A1 1 0 0 1 3 21.008V2.992C3 2.444 3.445 2 3.993 2H16Zm-1 9.667l-4.878-3.253a.4.4 0 0 0-.622.333v6.505a.4.4 0 0 0 .622.333L15 12.333a.401.401 0 0 0 0-.666Z"/>`
	fileVideoLinePath             = `<path fill="currentColor" d="M15 4v4h4v12H5V4h10ZM3.998 2A.995.995 0 0 0 3 2.992v18.016a1 1 0 0 0 .993.992h16.014A1 1 0 0 0 21 20.992V7l-5-5H3.998Zm11.003 9.667l-4.88-3.253a.4.4 0 0 0-.621.333v6.505a.4.4 0 0 0 .622.333L15 12.333a.401.401 0 0 0 0-.666Z"/>`
	fileWarningFillPath           = `<path fill="currentColor" d="m16 2l5 5v14.008a.993.993 0 0 1-.993.992H3.993A1 1 0 0 1 3 21.008V2.992C3 2.444 3.445 2 3.993 2H16Zm-5 13v2h2v-2h-2Zm0-8v6h2V7h-2Z"/>`
	fileWarningLinePath           = `<path fill="currentColor" d="M15 4H5v16h14V8h-4V4ZM3 2.992C3 2.444 3.447 2 3.998 2H16l5 5v13.992A1 1 0 0 1 20.007 22H3.993A1 1 0 0 1 3 21.008V2.992ZM11 15h2v2h-2v-2Zm0-8h2v6h-2V7Z"/>`
	fileWordFillPath              = `<path fill="currentColor" d="m16 2l5 5v14.008a.993.993 0 0 1-.993.992H3.993A1 1 0 0 1 3 21.008V2.992C3 2.444 3.445 2 3.993 2H16Zm-2 6v4.989L12 11l-1.99 2L10 8H8v8h2l2-2l2 2h2V8h-2Z"/>`
	fileWordLinePath              = `<path fill="currentColor" d="M16 8v8h-2l-2-2l-2 2H8V8h2v5l2-2l2 2V8h1V4H5v16h14V8h-3ZM3 2.992C3 2.444 3.447 2 3.998 2H16l5 5v13.992A1 1 0 0 1 20.007 22H3.993A1 1 0 0 1 3 21.008V2.992Z"/>`
	fileWordTwoFillPath           = `<path fill="currentColor" d="M17 3h4a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1h-4V3ZM2.859 2.878l12.57-1.796a.5.5 0 0 1 .571.495v20.847a.5.5 0 0 1-.57.495L2.858 21.123a1 1 0 0 1-.859-.99V3.868a1 1 0 0 1 .859-.99ZM11 8v4.99L9 11l-1.99 2L7 8H5v8h2l2-2l2 2h2V8h-2Z"/>`
	fileWordTwoLinePath           = `<path fill="currentColor" d="M17 19h3V5h-3V3h4a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1h-4v-2ZM2.859 2.878l12.57-1.796a.5.5 0 0 1 .571.495v20.847a.5.5 0 0 1-.57.495L2.858 21.123a1 1 0 0 1-.859-.99V3.868a1 1 0 0 1 .859-.99ZM4 4.735v14.53l10 1.43V3.305L4 4.735ZM11 8h2v8h-2l-2-2l-2 2H5V8h2l.01 5L9 11l2 1.99V8Z"/>`
	fileZipFillPath               = `<path fill="currentColor" d="M10 2v2h2V2h8.007c.548 0 .993.444.993.992v18.016a1 1 0 0 1-.993.992H3.993A.993.993 0 0 1 3 21.008V2.992A1 1 0 0 1 3.993 2H10Zm2 2v2h2V4h-2Zm-2 2v2h2V6h-2Zm2 2v2h2V8h-2Zm-2 2v2h2v-2h-2Zm2 2v2h-2v3h4v-5h-2Z"/>`
	fileZipLinePath               = `<path fill="currentColor" d="M20 22H4a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h16a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1Zm-1-2V4H5v16h14Zm-5-8v5h-4v-3h2v-2h2Zm-2-8h2v2h-2V4Zm-2 2h2v2h-2V6Zm2 2h2v2h-2V8Zm-2 2h2v2h-2v-2Z"/>`
	filmFillPath                  = `<path fill="currentColor" d="M2 3.993A1 1 0 0 1 2.992 3h18.016c.548 0 .992.445.992.993v16.014a1 1 0 0 1-.992.993H2.992A.993.993 0 0 1 2 20.007V3.993ZM4 5v2h2V5H4Zm14 0v2h2V5h-2ZM4 9v2h2V9H4Zm14 0v2h2V9h-2ZM4 13v2h2v-2H4Zm14 0v2h2v-2h-2ZM4 17v2h2v-2H4Zm14 0v2h2v-2h-2Z"/>`
	filmLinePath                  = `<path fill="currentColor" d="M2 3.993A1 1 0 0 1 2.992 3h18.016c.548 0 .992.445.992.993v16.014a1 1 0 0 1-.992.993H2.992A.993.993 0 0 1 2 20.007V3.993ZM8 5v14h8V5H8ZM4 5v2h2V5H4Zm14 0v2h2V5h-2ZM4 9v2h2V9H4Zm14 0v2h2V9h-2ZM4 13v2h2v-2H4Zm14 0v2h2v-2h-2ZM4 17v2h2v-2H4Zm14 0v2h2v-2h-2Z"/>`
	filterFillPath                = `<path fill="currentColor" d="M21 4v2h-1l-6 9v7h-4v-7L4 6H3V4h18Z"/>`
	filterLinePath                = `<path fill="currentColor" d="M21 4v2h-1l-5 7.5V22H9v-8.5L4 6H3V4h18ZM6.404 6L11 12.894V20h2v-7.106L17.596 6H6.404Z"/>`
	filterOffFillPath             = `<path fill="currentColor" d="M6.929.515L21.07 14.657l-1.414 1.414l-3.823-3.822L14 14.999v7h-4v-7L4 6H3V4h4.585l-2.07-2.07L6.929.515ZM21 4v2h-1l-1.915 2.872L13.213 4H21Z"/>`
	filterOffLinePath             = `<path fill="currentColor" d="M6.929.515L21.07 14.657l-1.414 1.414l-3.823-3.822l-.834 1.25V22H9v-8.5L4 6H3V4h4.585l-2.07-2.07L6.929.515ZM9.585 6H6.404L11 12.894V20h2v-7.106l1.392-2.087L9.585 6ZM21 4v2h-1l-1.915 2.872l-1.442-1.443l.953-1.43h-2.383l-2-2H21Z"/>`
	filterThreeFillPath           = `<path fill="currentColor" d="M10 18h4v-2h-4v2ZM3 6v2h18V6H3Zm3 7h12v-2H6v2Z"/>`
	filterThreeLinePath           = `<path fill="currentColor" d="M10 18h4v-2h-4v2ZM3 6v2h18V6H3Zm3 7h12v-2H6v2Z"/>`
	filterTwoFillPath             = `<path fill="currentColor" d="M10 14L4 5V3h16v2l-6 9v6l-4 2v-8Z"/>`
	filterTwoLinePath             = `<path fill="currentColor" d="M14 14v6l-4 2v-8L4 5V3h16v2l-6 9ZM6.404 5L12 13.394L17.596 5H6.404Z"/>`
	findReplaceFillPath           = `<path fill="currentColor" d="m18.031 16.617l4.283 4.282l-1.415 1.415l-4.282-4.283A8.96 8.96 0 0 1 11 20c-4.968 0-9-4.032-9-9s4.032-9 9-9s9 4.032 9 9a8.96 8.96 0 0 1-1.969 5.617ZM16.659 9A6 6 0 0 0 11 5c-3.315 0-6 2.685-6 6h2a4.001 4.001 0 0 1 5.91-3.515L12 9h4.659ZM17 11h-2a4.001 4.001 0 0 1-5.91 3.515L10 13H5.341A6 6 0 0 0 11 17c3.315 0 6-2.685 6-6Z"/>`
	findReplaceLinePath           = `<path fill="currentColor" d="m18.033 16.618l4.28 4.282l-1.413 1.414l-4.282-4.281A8.963 8.963 0 0 1 11 20a8.998 8.998 0 0 1-8.065-5H9l-1.304 2.173A6.972 6.972 0 0 0 11 18a6.977 6.977 0 0 0 4.875-1.975l.15-.15A6.977 6.977 0 0 0 18 11c0-.695-.101-1.366-.29-2h2.067c.146.643.223 1.313.223 2a8.963 8.963 0 0 1-1.967 5.618ZM19.065 7H13l1.304-2.173A6.972 6.972 0 0 0 11 4a6.999 6.999 0 0 0-6.71 9H2.223A9.038 9.038 0 0 1 2 11c0-4.973 4.027-9 9-9a8.997 8.997 0 0 1 8.065 5Z"/>`
	finderFillPath                = `<path fill="currentColor" d="M21.001 3a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1h-18a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h18Zm-1 2h-8.465c-.69 1.977-1.035 4.644-1.035 8h3a17.15 17.15 0 0 0-.107 2.877c1.226-.211 2.704-.777 4.027-1.71l1.135 1.665c-1.642 1.095-3.303 1.779-4.976 2.043c.052.37.113.745.184 1.125h6.237V5ZM6.556 14.168l-1.11 1.664C7.603 17.27 9.793 18 12.001 18v-2c-1.792 0-3.602-.603-5.445-1.832ZM17 7a1 1 0 0 1 1 1v1a1 1 0 1 1-2 0V8a1 1 0 0 1 1-1ZM7 7c-.552 0-1 .452-1 1v1a1 1 0 1 0 2 0V8a1 1 0 0 0-1-1Z"/>`
	finderLinePath                = `<path fill="currentColor" d="M21.001 3a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1h-18a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h18Zm-10.52 1.999L4.002 5v14h8.746a25.078 25.078 0 0 1-.163-1.02c-.297.013-.491.02-.583.02c-2.208 0-4.398-.73-6.555-2.168l1.11-1.664C8.399 15.397 10.209 16 12 16c.133 0 .265-.003.398-.01a23.56 23.56 0 0 1 .007-1.99H9.501v-1c0-3.275.32-5.94.98-8.001Zm2.12 0c-.665 1.583-1.044 4.412-1.09 7.001h3.123l-.14 1.124a15.979 15.979 0 0 0-.108 2.52c1.013-.3 2.031-.79 3.06-1.476l1.11 1.664c-1.32.88-2.652 1.495-3.993 1.84c.057.433.13.876.219 1.327L20 19V5l-7.4-.001ZM7.001 7a1 1 0 0 1 1 1v1a1 1 0 0 1-2 0V8a1 1 0 0 1 1-1Zm10 0a1 1 0 0 1 1 1v1a1 1 0 1 1-2 0V8a1 1 0 0 1 1-1Z"/>`
	fingerprintFillPath           = `<path fill="currentColor" d="M17 13v1c0 2.77-.664 5.445-1.915 7.846l-.227.42l-1.746-.974a14.89 14.89 0 0 0 1.881-6.836L15 14v-1h2Zm-6-3h2v4l-.005.379a12.94 12.94 0 0 1-2.691 7.549l-.231.29l-1.549-1.264a10.944 10.944 0 0 0 2.47-6.588L11 14v-4Zm1-4a5 5 0 0 1 5 5h-2a3 3 0 0 0-6 0v3c0 2.235-.82 4.344-2.27 5.977l-.212.23l-1.448-1.38a6.97 6.97 0 0 0 1.924-4.524L7 14v-3a5 5 0 0 1 5-5Zm0-4a9 9 0 0 1 9 9v3c0 1.698-.201 3.37-.596 4.99l-.14.539l-1.93-.526c.392-1.437.614-2.922.658-4.435L19 14v-3A7 7 0 0 0 7.808 5.394L6.383 3.968A8.962 8.962 0 0 1 12 2ZM4.968 5.383l1.426 1.425a6.966 6.966 0 0 0-1.39 3.951L5 11l.004 2c0 1.12-.264 2.203-.761 3.177l-.157.29l-1.736-.992c.379-.665.6-1.407.645-2.183L3.004 13v-2a8.94 8.94 0 0 1 1.964-5.617Z"/>`
	fingerprintLinePath           = `<path fill="currentColor" d="M17 13v1c0 2.77-.664 5.445-1.915 7.846l-.227.42l-1.746-.974a14.89 14.89 0 0 0 1.881-6.836L15 14v-1h2Zm-6-3h2v4l-.005.379a12.94 12.94 0 0 1-2.691 7.549l-.231.29l-1.549-1.264a10.944 10.944 0 0 0 2.47-6.588L11 14v-4Zm1-4a5 5 0 0 1 5 5h-2a3 3 0 0 0-6 0v3c0 2.235-.82 4.344-2.27 5.977l-.212.23l-1.448-1.38a6.97 6.97 0 0 0 1.924-4.524L7 14v-3a5 5 0 0 1 5-5Zm0-4a9 9 0 0 1 9 9v3c0 1.698-.201 3.37-.596 4.99l-.14.539l-1.93-.526c.392-1.437.614-2.922.658-4.435L19 14v-3A7 7 0 0 0 7.808 5.394L6.383 3.968A8.962 8.962 0 0 1 12 2ZM4.968 5.383l1.426 1.425a6.966 6.966 0 0 0-1.39 3.951L5 11l.004 2c0 1.12-.264 2.203-.761 3.177l-.157.29l-1.736-.992c.379-.665.6-1.407.645-2.183L3.004 13v-2a8.94 8.94 0 0 1 1.964-5.617Z"/>`
	fingerprintTwoFillPath        = `<path fill="currentColor" d="M12 1a9 9 0 0 1 9 9v4a8.989 8.989 0 0 1-3.811 7.355c.527-1.692.811-3.49.811-5.355v-2.001h-2V16l-.003.315a15.93 15.93 0 0 1-1.431 6.315a9.055 9.055 0 0 1-3.576.314A12.925 12.925 0 0 0 13 16V9h-2v7l-.004.288a10.95 10.95 0 0 1-2.088 6.167a8.988 8.988 0 0 1-2.625-1.503A7.962 7.962 0 0 0 8 16v-6l.005-.2a3.98 3.98 0 0 1 .549-1.832L7.109 6.523A5.973 5.973 0 0 0 6 10v6l-.004.225a5.966 5.966 0 0 1-1.12 3.272A8.952 8.952 0 0 1 3 14v-4a9 9 0 0 1 9-9Zm0 3c-1.296 0-2.496.41-3.476 1.11l1.444 1.444A4 4 0 0 1 16 10v2h2v-2a6 6 0 0 0-6-6Z"/>`
	fingerprintTwoLinePath        = `<path fill="currentColor" d="M12 1a9 9 0 0 1 9 9v4a9 9 0 0 1-12.092 8.455c.128-.177.251-.357.369-.542l.17-.28a10.918 10.918 0 0 0 1.55-5.345L11 16V9h2v7a12.97 12.97 0 0 1-.997 5.002a7.028 7.028 0 0 0 2.27-.38c.442-1.36.693-2.807.724-4.308L15 16v-3.001h2V16a17.06 17.06 0 0 1-.298 3.185a6.978 6.978 0 0 0 2.294-4.944L19 14v-4A7 7 0 0 0 7.808 4.394L6.383 2.968A8.962 8.962 0 0 1 12 1Zm-5 9a5 5 0 0 1 10 0v1h-2v-1a3 3 0 0 0-5.995-.176L9 10v6c0 1.567-.4 3.04-1.104 4.323l-.024.04c-.23.414-.491.808-.782 1.179a9.034 9.034 0 0 1-1.237-.97l-.308-.3A8.97 8.97 0 0 1 3 14v-4c0-2.125.736-4.078 1.968-5.617l1.426 1.425a6.966 6.966 0 0 0-1.39 3.951L5 10v4a6.97 6.97 0 0 0 1.57 4.417a6.91 6.91 0 0 0 .426-2.176L7 16v-6Z"/>`
	fireFillPath                  = `<path fill="currentColor" d="M12 23a7.5 7.5 0 0 1-5.138-12.963C8.204 8.774 11.5 6.5 11 1.5c6 4 9 8 3 14c1 0 2.5 0 5-2.47c.27.773.5 1.604.5 2.47A7.5 7.5 0 0 1 12 23Z"/>`
	fireLinePath                  = `<path fill="currentColor" d="M12 23a7.5 7.5 0 0 0 7.5-7.5c0-.866-.23-1.697-.5-2.47c-1.667 1.647-2.933 2.47-3.8 2.47c3.995-7 1.8-10-4.2-14c.5 5-2.796 7.274-4.138 8.537A7.5 7.5 0 0 0 12 23Zm.71-17.765c3.241 2.75 3.257 4.887.753 9.274c-.761 1.333.202 2.991 1.737 2.991c.688 0 1.384-.2 2.119-.595a5.5 5.5 0 1 1-9.087-5.412c.126-.118.765-.685.793-.71c.424-.38.773-.717 1.118-1.086c1.23-1.318 2.114-2.78 2.566-4.462Z"/>`
	firefoxFillPath               = `<path fill="currentColor" d="M12.001 2c5.523 0 10 4.477 10 10s-4.477 10-10 10s-10-4.477-10-10c0-1.463.314-2.854.88-4.106c.466-.939 1.233-1.874 1.85-2.194c-.653 1.283-.973 2.54-1.04 3.383c.454-1.5 1.315-2.757 2.52-3.644c2.066-1.519 4.848-1.587 5.956-.62c-2.056.707-4.296 3.548-3.803 6.876c.08.55.245 1.083.489 1.582c-.384-1.01-.418-2.433.202-3.358c.692-1.03 1.678-1.248 2.206-1.136c-.208-.044-.668.836-.736.991a2.97 2.97 0 0 0-.251 1.25a3.394 3.394 0 0 0 1.03 2.38c1.922 1.871 5.023 1.135 6.411-1.002c.954-1.471 1.07-3.968-.154-5.952a6.916 6.916 0 0 0-1.084-1.32c-1.85-1.766-4.48-2.57-6.982-2.205c-1.106.177-2.047.496-2.824.956C7.756 2.798 9.912 2 12 2Z"/>`
	firefoxLinePath               = `<path fill="currentColor" d="M12.001 2c5.523 0 10 4.477 10 10s-4.477 10-10 10s-10-4.477-10-10c0-1.463.314-2.854.88-4.106c.466-.939 1.233-1.874 1.85-2.194c-.653 1.283-.973 2.54-1.04 3.383c.454-1.5 1.315-2.757 2.52-3.644c2.066-1.519 4.848-1.587 5.956-.62c-2.056.707-4.296 3.548-3.803 6.876c.08.55.245 1.083.489 1.582c-.384-1.01-.418-2.433.202-3.358c.692-1.03 1.678-1.248 2.206-1.136c-.208-.044-.668.836-.736.991a2.97 2.97 0 0 0-.251 1.25a3.394 3.394 0 0 0 1.03 2.38c1.922 1.871 5.023 1.135 6.411-1.002c.954-1.471 1.07-3.968-.154-5.952a6.916 6.916 0 0 0-1.084-1.32c-1.85-1.766-4.48-2.57-6.982-2.205c-1.106.177-2.047.496-2.824.956C7.756 2.798 9.912 2 12 2ZM6.876 7.705c-2.253.781-3.501 3.17-2.579 6.46a8.004 8.004 0 0 0 7.455 5.831L12 20a8 8 0 0 0 7.985-7.504l.009-.212a6.17 6.17 0 0 1-.463.98l-.14.227c-2.104 3.239-6.681 4.075-9.48 1.348a5.392 5.392 0 0 1-.962-1.257l-.106-.201c-1.736-.387-2.584-1.326-2.543-2.817c.027-.991.23-1.96.575-2.86Z"/>`
	firstAidKitFillPath           = `<path fill="currentColor" d="M16 1a1 1 0 0 1 1 1v3h4a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1h4V2a1 1 0 0 1 1-1h8Zm-3 8h-2v3H8v2h2.999L11 17h2l-.001-3H16v-2h-3V9Zm2-6H9v2h6V3Z"/>`
	firstAidKitLinePath           = `<path fill="currentColor" d="M16 1a1 1 0 0 1 1 1v3h4a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1h4V2a1 1 0 0 1 1-1h8Zm4 6H4v12h16V7Zm-7 2v3h3v2h-3.001L13 17h-2l-.001-3H8v-2h3V9h2Zm2-6H9v2h6V3Z"/>`
	flagFillPath                  = `<path fill="currentColor" d="M3 3h9.382a1 1 0 0 1 .894.553L14 5h6a1 1 0 0 1 1 1v11a1 1 0 0 1-1 1h-6.382a1 1 0 0 1-.894-.553L12 16H5v6H3V3Z"/>`
	flagLinePath                  = `<path fill="currentColor" d="M12.382 3a1 1 0 0 1 .894.553L14 5h6a1 1 0 0 1 1 1v11a1 1 0 0 1-1 1h-6.382a1 1 0 0 1-.894-.553L12 16H5v6H3V3h9.382Zm-.618 2H5v9h8.236l1 2H19V7h-6.236l-1-2Z"/>`
	flagTwoFillPath               = `<path fill="currentColor" d="M2 3h19.138a.5.5 0 0 1 .434.748L18 10l3.573 6.252a.5.5 0 0 1-.435.748H4v5H2V3Z"/>`
	flagTwoLinePath               = `<path fill="currentColor" d="M21.138 3a.5.5 0 0 1 .434.748L18 10l3.573 6.252a.5.5 0 0 1-.435.748H4v5H2V3h19.138Zm-2.584 2H4v10h14.554l-2.857-5l2.857-5Z"/>`
	flashlightFillPath            = `<path fill="currentColor" d="M13 10h7l-9 13v-9H4l9-13v9Z"/>`
	flashlightLinePath            = `<path fill="currentColor" d="M13 9h8L11 24v-9H4l9-15v9Zm-2 2V7.22L7.532 13H13v4.394L17.263 11H11Z"/>`
	flaskFillPath                 = `<path fill="currentColor" d="M16 2v2h-1v3.243a8 8 0 0 0 .736 3.352l4.281 9.276A1.5 1.5 0 0 1 18.655 22H5.344a1.5 1.5 0 0 1-1.362-2.129l4.281-9.276A8 8 0 0 0 9 7.243V4H8V2h8Zm-3 2h-2v4h2V4Z"/>`
	flaskLinePath                 = `<path fill="currentColor" d="M16 2v2h-1v3.243a8 8 0 0 0 .736 3.352l4.281 9.276A1.5 1.5 0 0 1 18.655 22H5.344a1.5 1.5 0 0 1-1.362-2.129l4.281-9.276A8 8 0 0 0 9 7.243V4H8V2h8Zm-2.613 8.001h-2.776a9.986 9.986 0 0 1-.374 1.071l-.158.362L6.124 20h11.75l-3.954-8.566A9.99 9.99 0 0 1 13.387 10ZM11 7.243c0 .253-.01.506-.028.758h2.057a9.59 9.59 0 0 1-.02-.364L13 7.243V4h-2v3.243Z"/>`
	flickrFillPath                = `<path fill="currentColor" d="M11 12a5 5 0 1 1-10 0a5 5 0 0 1 10 0Zm12 0a5 5 0 1 1-10 0a5 5 0 0 1 10 0Z"/>`
	flickrLinePath                = `<path fill="currentColor" d="M6 17A5 5 0 1 0 6 7a5 5 0 0 0 0 10Zm3-5a3 3 0 1 1-6 0a3 3 0 0 1 6 0Zm9 5a5 5 0 1 0 0-10a5 5 0 0 0 0 10Zm3-5a3 3 0 1 1-6 0a3 3 0 0 1 6 0Z"/>`
	flightLandFillPath            = `<path fill="currentColor" d="M20.949 14.888a1.5 1.5 0 0 1-1.837 1.06L3.445 11.752a1 1 0 0 1-.74-.983l.09-5.403l1.449.388l.915 3.351l5.095 1.366l-.37-8.382l1.933.518l2.81 9.035l5.261 1.41a1.5 1.5 0 0 1 1.061 1.837ZM4 19h16v2H4v-2Z"/>`
	flightLandLinePath            = `<path fill="currentColor" d="M20.949 14.888a1.5 1.5 0 0 1-1.837 1.06L3.445 11.752a1 1 0 0 1-.74-.983l.09-5.403l1.449.388l.915 3.351l5.095 1.366l-.37-8.382l1.933.518l2.81 9.035l5.261 1.41a1.5 1.5 0 0 1 1.061 1.837ZM4 19h16v2H4v-2Z"/>`
	flightTakeoffFillPath         = `<path fill="currentColor" d="M21.949 10.112a1.5 1.5 0 0 1-1.06 1.837L5.221 16.147a1 1 0 0 1-1.133-.48l-2.623-4.725l1.449-.389l2.468 2.445l5.095-1.365l-4.51-7.074l1.931-.518l6.952 6.42l5.26-1.41a1.5 1.5 0 0 1 1.838 1.061ZM4 19h16v2H4v-2Z"/>`
	flightTakeoffLinePath         = `<path fill="currentColor" d="M21.949 10.112a1.5 1.5 0 0 1-1.06 1.837L5.221 16.147a1 1 0 0 1-1.133-.48l-2.623-4.725l1.449-.389l2.468 2.445l5.095-1.365l-4.51-7.074l1.931-.518l6.952 6.42l5.26-1.41a1.5 1.5 0 0 1 1.838 1.061ZM4 19h16v2H4v-2Z"/>`
	floodFillPath                 = `<path fill="currentColor" d="M16 17.472A5.978 5.978 0 0 0 20 19h2v2h-2a7.964 7.964 0 0 1-4-1.07A7.96 7.96 0 0 1 12 21a7.964 7.964 0 0 1-4-1.07A7.96 7.96 0 0 1 4 21H2v-2h2c1.537 0 2.94-.578 4-1.528A5.978 5.978 0 0 0 12 19c1.537 0 2.94-.578 4-1.528Zm-3.427-15.94l.1.08L23 11h-3v6a4.992 4.992 0 0 1-4-2a4.991 4.991 0 0 1-4 2a4.993 4.993 0 0 1-4-2a4.991 4.991 0 0 1-4 2l-.001-6H1l10.327-9.388a1 1 0 0 1 1.14-.145l.106.065Z"/>`
	floodLinePath                 = `<path fill="currentColor" d="M16 17.472A5.978 5.978 0 0 0 20 19h2v2h-2a7.964 7.964 0 0 1-4-1.07A7.96 7.96 0 0 1 12 21a7.964 7.964 0 0 1-4-1.07A7.96 7.96 0 0 1 4 21H2v-2h2c1.537 0 2.94-.578 4-1.528A5.978 5.978 0 0 0 12 19c1.537 0 2.94-.578 4-1.528Zm-3.427-15.94l.1.08L23 11h-3v6c-.701 0-1.374-.12-2-.341V9.157l-6-5.455l-6 5.454l.001 7.502a5.98 5.98 0 0 1-1.702.335L4 17v-6H1l10.327-9.388a1 1 0 0 1 1.246-.08Z"/>`
	flowChartPath                 = `<path fill="currentColor" d="M6 21.5A3.5 3.5 0 1 1 9.355 17H15v-2h2V9.242L14.757 7H9v2H3V3h6v2h5.757L18 1.756L22.243 6L19 9.241V15h2v6h-6v-2H9.355A3.502 3.502 0 0 1 6 21.5Zm0-5a1.5 1.5 0 1 0 0 3a1.5 1.5 0 0 0 0-3Zm13 .5h-2v2h2v-2ZM18 4.586L16.586 6L18 7.414L19.414 6L18 4.586ZM7 5H5v2h2V5Z"/>`
	flutterFillPath               = `<path fill="currentColor" d="m13.504 2.001l-10 10l3.083 3.083l13.08-13.083h-6.163Zm-.005 9.198l-5.376 5.42L13.496 22h6.188l-5.387-5.4l5.389-5.4h-6.188Z"/>`
	flutterLinePath               = `<path fill="currentColor" d="M14.598 10.684h2.828l-5.657 5.658l5.657 5.656h-2.828L8.94 16.341l5.657-5.657Zm-.194-8.68h2.829L5.919 13.318l-1.414-1.414l9.9-9.9Z"/>`
	focusFillPath                 = `<path fill="currentColor" d="M12 2c5.52 0 10 4.48 10 10s-4.48 10-10 10S2 17.52 2 12S6.48 2 12 2Zm0 8c-1.1 0-2 .9-2 2s.9 2 2 2s2-.9 2-2s-.9-2-2-2Z"/>`
	focusLinePath                 = `<path fill="currentColor" d="M12 20a8 8 0 1 0 0-16a8 8 0 0 0 0 16Zm0 2C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10Zm0-8a2 2 0 1 1 0-4a2 2 0 0 1 0 4Z"/>`
	focusThreeFillPath            = `<path fill="currentColor" d="m13 1l.001 3.062A8.004 8.004 0 0 1 19.938 11H23v2l-3.062.001a8.004 8.004 0 0 1-6.937 6.937L13 23h-2v-3.062a8.004 8.004 0 0 1-6.938-6.937L1 13v-2h3.062A8.004 8.004 0 0 1 11 4.062V1h2Zm-1 9a2 2 0 1 0 0 4a2 2 0 0 0 0-4Z"/>`
	focusThreeLinePath            = `<path fill="currentColor" d="m13 1l.001 3.062A8.004 8.004 0 0 1 19.938 11H23v2l-3.062.001a8.004 8.004 0 0 1-6.937 6.937L13 23h-2v-3.062a8.004 8.004 0 0 1-6.938-6.937L1 13v-2h3.062A8.004 8.004 0 0 1 11 4.062V1h2Zm-1 5a6 6 0 1 0 0 12a6 6 0 0 0 0-12Zm0 4a2 2 0 1 1 0 4a2 2 0 0 1 0-4Z"/>`
	focusTwoFillPath              = `<path fill="currentColor" d="M12 2c5.52 0 10 4.48 10 10s-4.48 10-10 10S2 17.52 2 12S6.48 2 12 2Zm0 18c4.427 0 8-3.573 8-8s-3.573-8-8-8a7.99 7.99 0 0 0-8 8c0 4.427 3.573 8 8 8Zm0-2c-3.32 0-6-2.68-6-6s2.68-6 6-6s6 2.68 6 6s-2.68 6-6 6Zm0-8c-1.1 0-2 .9-2 2s.9 2 2 2s2-.9 2-2s-.9-2-2-2Z"/>`
	focusTwoLinePath              = `<path fill="currentColor" d="M12 20a8 8 0 1 0 0-16a8 8 0 0 0 0 16Zm0 2C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10Zm0-6a4 4 0 1 0 0-8a4 4 0 0 0 0 8Zm0 2a6 6 0 1 1 0-12a6 6 0 0 1 0 12Zm0-4a2 2 0 1 1 0-4a2 2 0 0 1 0 4Z"/>`
	foggyFillPath                 = `<path fill="currentColor" d="M1.584 13.007a8 8 0 1 1 14.873-5.908a5.5 5.5 0 0 1 6.52 5.908H1.584ZM4 19h17v2H4v-2Zm-2-4h21v2H2v-2Z"/>`
	foggyLinePath                 = `<path fill="currentColor" d="M1.584 13.007a8 8 0 1 1 14.873-5.908a5.5 5.5 0 0 1 6.52 5.908h-2.013A3.5 3.5 0 0 0 15 10.05V10a6 6 0 1 0-11.193 3.007H1.584ZM4 19h17v2H4v-2Zm-2-4h21v2H2v-2Z"/>`
	folderAddFillPath             = `<path fill="currentColor" d="M12.414 5H21a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h7.414l2 2ZM11 12H8v2h3v3h2v-3h3v-2h-3V9h-2v3Z"/>`
	folderAddLinePath             = `<path fill="currentColor" d="M12.414 5H21a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h7.414l2 2ZM4 5v14h16V7h-8.414l-2-2H4Zm7 7V9h2v3h3v2h-3v3h-2v-3H8v-2h3Z"/>`
	folderChartFillPath           = `<path fill="currentColor" d="M12.414 5H21a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h7.414l2 2ZM11 9v8h2V9h-2Zm4 3v5h2v-5h-2Zm-8 2v3h2v-3H7Z"/>`
	folderChartLinePath           = `<path fill="currentColor" d="M12.414 5H21a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h7.414l2 2ZM4 5v14h16V7h-8.414l-2-2H4Zm7 4h2v8h-2V9Zm4 3h2v5h-2v-5Zm-8 2h2v3H7v-3Z"/>`
	folderChartTwoFillPath        = `<path fill="currentColor" d="M12.414 5H21a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h7.414l2 2ZM12 9a4 4 0 1 0 4 4h-4V9Z"/>`
	folderChartTwoLinePath        = `<path fill="currentColor" d="M12.414 5H21a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h7.414l2 2ZM4 5v14h16V7h-8.414l-2-2H4Zm8 4v4h4a4 4 0 1 1-4-4Z"/>`
	folderDownloadFillPath        = `<path fill="currentColor" d="M12.414 5H21a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h7.414l2 2ZM13 13V9h-2v4H8l4 4l4-4h-3Z"/>`
	folderDownloadLinePath        = `<path fill="currentColor" d="M12.414 5H21a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h7.414l2 2ZM4 5v14h16V7h-8.414l-2-2H4Zm9 8h3l-4 4l-4-4h3V9h2v4Z"/>`
	folderFillPath                = `<path fill="currentColor" d="M12.414 5H21a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h7.414l2 2Z"/>`
	folderFiveFillPath            = `<path fill="currentColor" d="M13.414 5H20a1 1 0 0 1 1 1v1H3V4a1 1 0 0 1 1-1h7.414l2 2ZM3.087 9h17.826a1 1 0 0 1 .997 1.083l-.833 10a1 1 0 0 1-.997.917H3.92a1 1 0 0 1-.996-.917l-.834-10A1 1 0 0 1 3.087 9Z"/>`
	folderFiveLinePath            = `<path fill="currentColor" d="M3.087 9h17.826a1 1 0 0 1 .997 1.083l-.833 10a1 1 0 0 1-.997.917H3.92a1 1 0 0 1-.996-.917l-.834-10A1 1 0 0 1 3.087 9ZM4.84 19h14.32l.667-8H4.174l.666 8Zm8.574-14H20a1 1 0 0 1 1 1v1H3V4a1 1 0 0 1 1-1h7.414l2 2Z"/>`
	folderForbidFillPath          = `<path fill="currentColor" d="M22 11.255A7 7 0 0 0 12.255 21H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h7.414l2 2H21a1 1 0 0 1 1 1v5.255ZM18 22a5 5 0 1 1 0-10a5 5 0 0 1 0 10Zm-1.293-2.292a3 3 0 0 0 4.001-4.001l-4.001 4Zm-1.415-1.415l4.001-4a3 3 0 0 0-4.001 4.001Z"/>`
	folderForbidLinePath          = `<path fill="currentColor" d="M22 11.255a6.972 6.972 0 0 0-2-.965V7h-8.414l-2-2H4v14h7.29a6.96 6.96 0 0 0 .965 2H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h7.414l2 2H21a1 1 0 0 1 1 1v5.255ZM18 22a5 5 0 1 1 0-10a5 5 0 0 1 0 10Zm-1.293-2.292a3 3 0 0 0 4.001-4.001l-4.001 4Zm-1.415-1.415l4.001-4a3 3 0 0 0-4.001 4.001Z"/>`
	folderFourFillPath            = `<path fill="currentColor" d="M8 21V11h14v9a1 1 0 0 1-1 1H8Zm-2 0H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h7.414l2 2H21a1 1 0 0 1 1 1v3H7a1 1 0 0 0-1 1v11Z"/>`
	folderFourLinePath            = `<path fill="currentColor" d="M12.414 5H21a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h7.414l2 2ZM8 19h12v-8H8v8Zm-2 0v-9a1 1 0 0 1 1-1h13V7h-8.414l-2-2H4v14h2Z"/>`
	folderHistoryFillPath         = `<path fill="currentColor" d="m10.414 3l2 2H21a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h7.414ZM13 9h-2v6h5v-2h-3V9Z"/>`
	folderHistoryLinePath         = `<path fill="currentColor" d="m10.414 3l2 2H21a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h7.414Zm-.828 2H4v14h16V7h-8.414l-2-2ZM13 9v4h3v2h-5V9h2Z"/>`
	folderImageFillPath           = `<path fill="currentColor" d="M12.414 5H21a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h7.414l2 2ZM10 10.5a1.5 1.5 0 1 0-3 0a1.5 1.5 0 0 0 3 0Zm8 6.5l-4-6l-7 6h11Z"/>`
	folderImageLinePath           = `<path fill="currentColor" d="M4 5v14h16V7h-8.414l-2-2H4Zm8.414 0H21a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h7.414l2 2ZM10 10.5a1.5 1.5 0 1 1-3 0a1.5 1.5 0 0 1 3 0Zm8 6.5l-4-6l-7 6h11Z"/>`
	folderInfoFillPath            = `<path fill="currentColor" d="M12.414 5H21a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h7.414l2 2ZM11 9v2h2V9h-2Zm0 3v5h2v-5h-2Z"/>`
	folderInfoLinePath            = `<path fill="currentColor" d="M12.414 5H21a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h7.414l2 2ZM4 5v14h16V7h-8.414l-2-2H4Zm7 7h2v5h-2v-5Zm0-3h2v2h-2V9Z"/>`
	folderKeyholeFillPath         = `<path fill="currentColor" d="m10.414 3l2 2H21a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h7.414ZM12 9a2 2 0 0 0-1 3.732V17h2l.001-4.268A2 2 0 0 0 12 9Z"/>`
	folderKeyholeLinePath         = `<path fill="currentColor" d="m10.414 3l2 2H21a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h7.414Zm-.828 2H4v14h16V7h-8.414l-2-2ZM12 9a2 2 0 0 1 1.001 3.732L13 17h-2v-4.268A2 2 0 0 1 12 9Z"/>`
	folderLinePath                = `<path fill="currentColor" d="M4 5v14h16V7h-8.414l-2-2H4Zm8.414 0H21a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h7.414l2 2Z"/>`
	folderLockFillPath            = `<path fill="currentColor" d="M12.414 5H21a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h7.414l2 2ZM15 13v-1a3 3 0 1 0-6 0v1H8v4h8v-4h-1Zm-2 0h-2v-1a1 1 0 1 1 2 0v1Z"/>`
	folderLockLinePath            = `<path fill="currentColor" d="M12.414 5H21a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h7.414l2 2ZM4 5v14h16V7h-8.414l-2-2H4Zm11 8h1v4H8v-4h1v-1a3 3 0 1 1 6 0v1Zm-2 0v-1a1 1 0 1 0-2 0v1h2Z"/>`
	folderMusicFillPath           = `<path fill="currentColor" d="M12.414 5H21a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h7.414l2 2ZM11 13.05a2.5 2.5 0 1 0 2 2.45V11h3V9h-5v4.05Z"/>`
	folderMusicLinePath           = `<path fill="currentColor" d="M12.414 5H21a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h7.414l2 2ZM4 5v14h16V7h-8.414l-2-2H4Zm7 8.05V9h5v2h-3v4.5a2.5 2.5 0 1 1-2-2.45Z"/>`
	folderOpenFillPath            = `<path fill="currentColor" d="M3 21a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h7.414l2 2H20a1 1 0 0 1 1 1v3H4v9.996L6 11h16.5l-2.31 9.242a1 1 0 0 1-.97.758H3Z"/>`
	folderOpenLinePath            = `<path fill="currentColor" d="M3 21a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h7.414l2 2H20a1 1 0 0 1 1 1v3h-2V7h-7.414l-2-2H4v11.998L5.5 11h17l-2.31 9.242a1 1 0 0 1-.97.758H3Zm16.938-8H7.062l-1.5 6h12.876l1.5-6Z"/>`
	folderReceivedFillPath        = `<path fill="currentColor" d="M22 13.126A6 6 0 0 0 13.303 21H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h7.414l2 2H21a1 1 0 0 1 1 1v7.126ZM20 17h3v2h-3v3.5L15 18l5-4.5V17Z"/>`
	folderReceivedLinePath        = `<path fill="currentColor" d="M22 13h-2V7h-8.414l-2-2H4v14h9v2H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h7.414l2 2H21a1 1 0 0 1 1 1v7Zm-2 4h3v2h-3v3.5L15 18l5-4.5V17Z"/>`
	folderReduceFillPath          = `<path fill="currentColor" d="M12.414 5H21a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h7.414l2 2ZM8 12v2h8v-2H8Z"/>`
	folderReduceLinePath          = `<path fill="currentColor" d="M12.414 5H21a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h7.414l2 2ZM4 5v14h16V7h-8.414l-2-2H4Zm4 7h8v2H8v-2Z"/>`
	folderSettingsFillPath        = `<path fill="currentColor" d="M12.414 5H21a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h7.414l2 2Zm-3.823 8.809l-.991.572l1 1.731l.991-.572c.393.371.872.653 1.405.811v1.145h1.998V16.35a3.495 3.495 0 0 0 1.405-.811l.992.572l.999-1.73l-.991-.573a3.507 3.507 0 0 0 0-1.622l.991-.572l-1-1.732l-.992.573a3.495 3.495 0 0 0-1.404-.812V8.5h-1.999v1.144a3.494 3.494 0 0 0-1.404.812L8.6 9.883l-1 1.732l.991.572a3.508 3.508 0 0 0 0 1.622Zm3.404.688a1.5 1.5 0 1 1 0-2.998a1.5 1.5 0 0 1 0 2.998Z"/>`
	folderSettingsLinePath        = `<path fill="currentColor" d="M12.414 5H21a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h7.414l2 2ZM4 5v14h16V7h-8.414l-2-2H4Zm4.591 8.809a3.508 3.508 0 0 1 0-1.622l-.991-.572l1-1.732l.991.573a3.494 3.494 0 0 1 1.404-.812V8.5h2v1.144c.532.159 1.01.44 1.404.812l.991-.573l1 1.732l-.991.572a3.508 3.508 0 0 1 0 1.622l.991.572l-1 1.731l-.991-.572a3.495 3.495 0 0 1-1.404.811v1.145h-2V16.35a3.495 3.495 0 0 1-1.404-.811l-.991.572l-1-1.73l.991-.573Zm3.404.688a1.5 1.5 0 1 0 0-2.999a1.5 1.5 0 0 0 0 3Z"/>`
	folderSharedFillPath          = `<path fill="currentColor" d="M22 13.126A6 6 0 0 0 13.303 21H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h7.414l2 2H21a1 1 0 0 1 1 1v7.126ZM18 17v-3.5l5 4.5l-5 4.5V19h-3v-2h3Z"/>`
	folderSharedLinePath          = `<path fill="currentColor" d="M22 13h-2V7h-8.414l-2-2H4v14h9v2H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h7.414l2 2H21a1 1 0 0 1 1 1v7Zm-4 4v-3.5l5 4.5l-5 4.5V19h-3v-2h3Z"/>`
	folderShieldFillPath          = `<path fill="currentColor" d="M12.414 5H21a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h7.414l2 2ZM8 9v4.904c0 .892.446 1.724 1.187 2.219L12 17.998l2.813-1.875A2.667 2.667 0 0 0 16 13.904V9H8Zm2 4.904V11h4v2.904a.667.667 0 0 1-.297.555L12 15.594l-1.703-1.135a.667.667 0 0 1-.297-.555Z"/>`
	folderShieldLinePath          = `<path fill="currentColor" d="M12.414 5H21a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h7.414l2 2ZM4 5v14h16V7h-8.414l-2-2H4Zm4 4h8v4.904c0 .892-.446 1.724-1.188 2.219L12 17.998l-2.813-1.875A2.667 2.667 0 0 1 8 13.904V9Zm2 4.904c0 .223.111.431.297.555L12 15.594l1.703-1.135a.667.667 0 0 0 .297-.555V11h-4v2.904Z"/>`
	folderShieldTwoFillPath       = `<path fill="currentColor" d="M22 10H12v7.382c0 1.409.632 2.734 1.705 3.618H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h7.414l2 2H21a1 1 0 0 1 1 1v4Zm-8 2h8v5.382c0 .897-.446 1.734-1.188 2.23L18 21.499l-2.813-1.885A2.684 2.684 0 0 1 14 17.383V12Z"/>`
	folderShieldTwoLinePath       = `<path fill="currentColor" d="M22 9h-2V7h-8.414l-2-2H4v14h7.447a4.97 4.97 0 0 0 1.664 2H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h7.414l2 2H21a1 1 0 0 1 1 1v3Zm-9 2h9v5.949c0 .99-.501 1.916-1.336 2.465L17.5 21.498l-3.164-2.084A2.954 2.954 0 0 1 13 16.95V11Zm2 5.949c0 .316.162.614.436.795l2.064 1.36l2.064-1.36a.954.954 0 0 0 .436-.795V13h-5v3.949Z"/>`
	folderThreeFillPath           = `<path fill="currentColor" d="M22 8v12a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V7h19a1 1 0 0 1 1 1Zm-9.586-3H2V4a1 1 0 0 1 1-1h7.414l2 2Z"/>`
	folderThreeLinePath           = `<path fill="currentColor" d="M12.414 5H21a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h7.414l2 2ZM4 7v12h16V7H4Z"/>`
	folderTransferFillPath        = `<path fill="currentColor" d="M12.414 5H21a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h7.414l2 2ZM12 12H8v2h4v3l4-4l-4-4v3Z"/>`
	folderTransferLinePath        = `<path fill="currentColor" d="M12.414 5H21a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h7.414l2 2ZM4 5v14h16V7h-8.414l-2-2H4Zm8 7V9l4 4l-4 4v-3H8v-2h4Z"/>`
	folderTwoFillPath             = `<path fill="currentColor" d="M22 11v9a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1v-9h20Zm0-2H2V4a1 1 0 0 1 1-1h7.414l2 2H21a1 1 0 0 1 1 1v3Z"/>`
	folderTwoLinePath             = `<path fill="currentColor" d="M12.414 5H21a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h7.414l2 2ZM20 11H4v8h16v-8Zm0-2V7h-8.414l-2-2H4v4h16Z"/>`
	folderUnknowFillPath          = `<path fill="currentColor" d="M12.414 5H21a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h7.414l2 2ZM11 16v2h2v-2h-2Zm-2.433-5.187l1.962.393A1.5 1.5 0 1 1 12 13h-1v2h1a3.5 3.5 0 1 0-3.433-4.187Z"/>`
	folderUnknowLinePath          = `<path fill="currentColor" d="M12.414 5H21a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h7.414l2 2ZM4 5v14h16V7h-8.414l-2-2H4Zm7 11h2v2h-2v-2Zm-2.433-5.187A3.501 3.501 0 1 1 12 15h-1v-2h1a1.5 1.5 0 1 0-1.471-1.794l-1.962-.393Z"/>`
	folderUploadFillPath          = `<path fill="currentColor" d="M12.414 5H21a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h7.414l2 2ZM13 13h3l-4-4l-4 4h3v4h2v-4Z"/>`
	folderUploadLinePath          = `<path fill="currentColor" d="M12.414 5H21a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h7.414l2 2ZM4 5v14h16V7h-8.414l-2-2H4Zm9 8v4h-2v-4H8l4-4l4 4h-3Z"/>`
	folderUserFillPath            = `<path fill="currentColor" d="M12.414 5H21a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h7.414l2 2ZM12 13a2.5 2.5 0 1 0 0-5a2.5 2.5 0 0 0 0 5Zm-4 5h8a4 4 0 0 0-8 0Z"/>`
	folderUserLinePath            = `<path fill="currentColor" d="M12.414 5H21a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h7.414l2 2ZM4 5v14h16V7h-8.414l-2-2H4Zm4 13a4 4 0 0 1 8 0H8Zm4-5a2.5 2.5 0 1 1 0-5a2.5 2.5 0 0 1 0 5Z"/>`
	folderVideoFillPath           = `<path fill="currentColor" d="M21 5h-8.586l-2-2H3a1 1 0 0 0-1 1v16a1 1 0 0 0 1 1h18a1 1 0 0 0 1-1V6a1 1 0 0 0-1-1Zm-6 7.667a.4.4 0 0 1 0 .666l-4.878 3.252a.4.4 0 0 1-.622-.333V9.747a.4.4 0 0 1 .622-.333L15 12.667Z"/>`
	folderVideoLinePath           = `<path fill="currentColor" d="M4 19V5h5.586l2 2H20v12H4ZM21 5h-8.586l-2-2H3a1 1 0 0 0-1 1v16a1 1 0 0 0 1 1h18a1 1 0 0 0 1-1V6a1 1 0 0 0-1-1Zm-6 7.667l-4.878-3.253a.4.4 0 0 0-.622.333v6.505a.4.4 0 0 0 .622.333L15 13.333a.401.401 0 0 0 0-.666Z"/>`
	folderWarningFillPath         = `<path fill="currentColor" d="M12.414 5H21a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h7.414l2 2ZM11 9v5h2V9h-2Zm0 6v2h2v-2h-2Z"/>`
	folderWarningLinePath         = `<path fill="currentColor" d="M12.414 5H21a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h7.414l2 2ZM4 5v14h16V7h-8.414l-2-2H4Zm7 10h2v2h-2v-2Zm0-6h2v5h-2V9Z"/>`
	folderZipFillPath             = `<path fill="currentColor" d="M21 5a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h7.414l2 2H16v2h2V5h3Zm-3 8h-2v2h-2v3h4v-5Zm-2-2h-2v2h2v-2Zm2-2h-2v2h2V9Zm-2-2h-2v2h2V7Z"/>`
	folderZipLinePath             = `<path fill="currentColor" d="m10.414 3l2 2H21a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h7.414ZM18 18h-4v-3h2v-2h-2v-2h2V9h-2V7h-2.414l-2-2H4v14h16V7h-4v2h2v2h-2v2h2v5Z"/>`
	foldersFillPath               = `<path fill="currentColor" d="M6 7V4a1 1 0 0 1 1-1h6.414l2 2H21a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1h-3v3a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V8a1 1 0 0 1 1-1h3Zm0 2H4v10h12v-2H6V9Z"/>`
	foldersLinePath               = `<path fill="currentColor" d="M6 7V4a1 1 0 0 1 1-1h6.414l2 2H21a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1h-3v3a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V8a1 1 0 0 1 1-1h3Zm0 2H4v10h12v-2H6V9Zm2-4v10h12V7h-5.414l-2-2H8Z"/>`
	fontColorPath                 = `<path fill="currentColor" d="M15.246 14H8.754l-1.6 4H5l6-15h2l6 15h-2.154l-1.6-4Zm-.8-2L12 5.885L9.554 12h4.892ZM3 20h18v2H3v-2Z"/>`
	fontFamilyPath                = `<path fill="currentColor" d="M5.554 22H3.4L11 3h2l7.6 19h-2.154l-2.4-6H7.954l-2.4 6Zm3.2-8h6.492L12 5.885L8.754 14Z"/>`
	fontMonoPath                  = `<path fill="currentColor" d="M6 4h13v2H8v6h10v2H8v7H6V4Z"/>`
	fontSansPath                  = `<path fill="currentColor" d="M7 4h12v2h-9v6h8v2h-8v7H7V4Z"/>`
	fontSansSerifPath             = `<path fill="currentColor" d="M5 4h14v4h-1.5C17 6 17 5 15 5h-5v7h3c1 0 2-.5 2-2h1v5h-1c0-1.5-1-2-2-2h-3v4.5c0 2.5 3.5 2.5 3.5 2.5v1H5v-1c2-.5 2-1.5 2-2.5v-10c0-1 0-2-2-2.5V4Z"/>`
	fontSizePath                  = `<path fill="currentColor" d="M11.245 15h-6.49l-2 5H.6L7 4h2l6.4 16h-2.155l-2-5Zm-.8-2L8 6.885L5.554 13h4.891ZM21 12.535V12h2v8h-2v-.535a4 4 0 1 1 0-6.93ZM19 18a2 2 0 1 0 0-4a2 2 0 0 0 0 4Z"/>`
	fontSizeTwoPath               = `<path fill="currentColor" d="M10 6v15H8V6H2V4h14v2h-6Zm8 8v7h-2v-7h-3v-2h8v2h-3Z"/>`
	footballFillPath              = `<path fill="currentColor" d="M12 2c5.523 0 10 4.477 10 10s-4.477 10-10 10S2 17.523 2 12S6.477 2 12 2Zm1.67 14h-3.34l-1.38 1.897l.554 1.706A7.993 7.993 0 0 0 12 20c.871 0 1.71-.14 2.496-.397l.553-1.706L13.669 16Zm-8.376-5.128l-1.292.938L4 12c0 1.73.549 3.331 1.482 4.64h1.91l1.323-1.82l-1.028-3.17l-2.393-.778Zm13.412 0l-2.393.778l-1.028 3.17l1.322 1.82h1.91A7.963 7.963 0 0 0 20 12l-.003-.191l-1.291-.937ZM14.29 4.333l-1.29.94V7.79l2.694 1.957l2.24-.727l.554-1.703a8.014 8.014 0 0 0-4.196-2.984Zm-4.582 0a8.014 8.014 0 0 0-4.196 2.985l.554 1.702l2.239.727L11 7.79V5.273l-1.291-.94Z"/>`
	footballLinePath              = `<path fill="currentColor" d="M12 2c5.523 0 10 4.477 10 10s-4.477 10-10 10S2 17.523 2 12S6.477 2 12 2Zm1.67 14h-3.34l-1.38 1.897l.554 1.706A7.993 7.993 0 0 0 12 20c.871 0 1.71-.14 2.496-.397l.553-1.706L13.669 16Zm-8.376-5.128l-1.292.938L4 12c0 1.73.549 3.331 1.482 4.64h1.91l1.323-1.82l-1.028-3.17l-2.393-.778Zm13.412 0l-2.393.778l-1.028 3.17l1.322 1.82h1.91A7.963 7.963 0 0 0 20 12l-.003-.19l-1.291-.938ZM12 9.536l-2.344 1.702l.896 2.762h2.895l.896-2.762L12 9.536Zm2.291-5.203L13 5.273V7.79l2.694 1.957l2.24-.727l.554-1.703a8.014 8.014 0 0 0-4.196-2.984Zm-4.583 0a8.014 8.014 0 0 0-4.195 2.985l.554 1.702l2.239.727L11 7.79V5.273l-1.292-.94Z"/>`
	footprintFillPath             = `<path fill="currentColor" d="M4 18h5.5v1.25a2.75 2.75 0 1 1-5.5 0V18ZM8 6.12c2 0 3 2.88 3 4.88c0 1-.5 2-1 3.5L9.5 16H4c0-1-.5-2.5-.5-5S5.498 6.12 8 6.12Zm12.054 7.978l-.217 1.231a2.75 2.75 0 1 1-5.416-.955l.216-1.23l5.417.954ZM18.178 1.705c2.464.434 4.018 3.124 3.584 5.586c-.434 2.462-1.187 3.853-1.36 4.838l-5.417-.955l-.232-1.565c-.232-1.564-.55-2.635-.377-3.62c.347-1.97 1.832-4.632 3.802-4.284Z"/>`
	footprintLinePath             = `<path fill="currentColor" d="M4 18h5.5v1.25a2.75 2.75 0 1 1-5.5 0V18Zm4.058-4l.045-.133C8.87 11.762 9 11.371 9 11c0-.75-.203-1.643-.528-2.273C8.23 8.257 8.06 8.12 8 8.12c-1.28 0-2.5 1.364-2.5 2.88c0 .959.075 1.773.227 2.758l.038.242h2.293ZM8 6.12c2 0 3 2.88 3 4.88c0 1-.5 2-1 3.5L9.5 16H4c0-1-.5-2.5-.5-5S5.498 6.12 8 6.12Zm12.054 7.978l-.217 1.231a2.75 2.75 0 1 1-5.416-.955l.216-1.23l5.417.954Zm-1.05-4.247c.165-.5.301-.894.303-.9c.202-.658.361-1.302.485-2.007c.263-1.493-.702-3.048-1.962-3.27c-.059-.01-.25.095-.57.515c-.43.565-.784 1.41-.915 2.147c-.058.33-.049.404.27 2.263c.045.255.082.486.116.717l.02.138l2.253.397Zm-.826-8.146c2.464.434 4.018 3.124 3.584 5.586c-.434 2.462-1.187 3.853-1.36 4.838l-5.417-.955l-.232-1.565c-.232-1.564-.55-2.635-.377-3.62c.347-1.97 1.832-4.632 3.802-4.284Z"/>`
	forbidFillPath                = `<path fill="currentColor" d="M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10ZM8.523 7.109A6.04 6.04 0 0 0 7.11 8.523l8.368 8.368a6.037 6.037 0 0 0 1.414-1.414L8.523 7.109Z"/>`
	forbidLinePath                = `<path fill="currentColor" d="M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10Zm0-2a8 8 0 1 0 0-16a8 8 0 0 0 0 16ZM8.523 7.109l8.368 8.368a6.037 6.037 0 0 1-1.414 1.414L7.109 8.523A6.04 6.04 0 0 1 8.523 7.11Z"/>`
	forbidTwoFillPath             = `<path fill="currentColor" d="M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10Zm4.891-13.477a6.036 6.036 0 0 0-1.414-1.414l-8.368 8.368a6.041 6.041 0 0 0 1.414 1.414l8.368-8.368Z"/>`
	forbidTwoLinePath             = `<path fill="currentColor" d="M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10Zm0-2a8 8 0 1 0 0-16a8 8 0 0 0 0 16Zm4.891-11.477l-8.368 8.368a6.036 6.036 0 0 1-1.414-1.414l8.368-8.368a6.041 6.041 0 0 1 1.414 1.414Z"/>`
	formatClearPath               = `<path fill="currentColor" d="M12.651 14.065L11.605 20H9.574l1.35-7.661l-7.41-7.41L4.93 3.515L20.485 19.07l-1.414 1.414l-6.42-6.42Zm-.878-6.535l.27-1.53h-1.8l-2-2H20v2h-5.927L13.5 9.256L11.773 7.53Z"/>`
	forwardFifteenFillPath        = `<path fill="currentColor" d="M12 2C6.477 2 2 6.477 2 12s4.477 10 10 10s10-4.477 10-10h-2a8 8 0 1 1-1.865-5.135L16.5 8.5H12v4.25h2.875a.625.625 0 1 1 0 1.25H12v1.5h2.875a2.125 2.125 0 0 0 0-4.25H13.5V10h3.25V9H22V3l-2.447 2.446A9.977 9.977 0 0 0 12 2ZM8.5 8.5H10v7H8.5v-7Z"/>`
	forwardFifteenLinePath        = `<path fill="currentColor" d="M12 2C6.477 2 2 6.477 2 12s4.477 10 10 10s10-4.477 10-10h-2a8 8 0 1 1-1.384-4.5H16v1h-4v4.25h2.875a.625.625 0 1 1 0 1.25H12v1.5h2.875a2.125 2.125 0 0 0 0-4.25H13.5V10h3.25v-.5H22v-6h-2V6a9.985 9.985 0 0 0-8-4ZM8.5 8.5H10v7H8.5v-7Z"/>`
	forwardFiveFillPath           = `<path fill="currentColor" d="M2 12C2 6.477 6.477 2 12 2a9.977 9.977 0 0 1 7.553 3.446L22 3v6h-6l2.135-2.135A8 8 0 1 0 20 12h2c0 5.523-4.477 10-10 10S2 17.523 2 12Zm12.5-2V8.5h-5v4.25h3.125a.625.625 0 1 1 0 1.25H9.5v1.5h3.125a2.125 2.125 0 0 0 0-4.25H11V10h3.5Z"/>`
	forwardFiveLinePath           = `<path fill="currentColor" d="M12 2C6.477 2 2 6.477 2 12s4.477 10 10 10s10-4.477 10-10h-2a8 8 0 1 1-1.384-4.5H16v2h6v-6h-2V6a9.985 9.985 0 0 0-8-4ZM9.5 8.5h5V10H11v1.25h1.625a2.125 2.125 0 0 1 0 4.25H9.5V14h3.125a.625.625 0 1 0 0-1.25H9.5V8.5Z"/>`
	forwardTenFillPath            = `<path fill="currentColor" d="M12 2C6.477 2 2 6.477 2 12s4.477 10 10 10s10-4.477 10-10h-2a8 8 0 1 1-1.865-5.135l-1.997 1.997A2.5 2.5 0 0 0 12 10.75v2.5a2.5 2.5 0 0 0 5 0v-2.5c0-.681-.273-1.3-.715-1.75H22V3l-2.447 2.446A9.977 9.977 0 0 0 12 2Zm3.5 8.75v2.5a1 1 0 1 1-2 0v-2.5a1 1 0 1 1 2 0ZM10 8.5H8.5v7H10v-7Z"/>`
	forwardTenLinePath            = `<path fill="currentColor" d="M12 2C6.477 2 2 6.477 2 12s4.477 10 10 10s10-4.477 10-10h-2a8 8 0 1 1-1.384-4.5H16v1.25a2.5 2.5 0 0 0-4 2v2.5a2.5 2.5 0 0 0 5 0v-2.5c0-.455-.122-.882-.334-1.25H22v-6h-2V6a9.985 9.985 0 0 0-8-4Zm3.5 8.75v2.5a1 1 0 1 1-2 0v-2.5a1 1 0 1 1 2 0ZM10 8.5H8.5v7H10v-7Z"/>`
	forwardThirtyFillPath         = `<path fill="currentColor" d="M2 12C2 6.477 6.477 2 12 2a9.977 9.977 0 0 1 7.553 3.446L22 3v6h-5.215c.442.45.715 1.069.715 1.75v2.5a2.5 2.5 0 0 1-5 0v-2.5a2.5 2.5 0 0 1 3.853-2.103l1.782-1.782A8 8 0 1 0 20 12h2c0 5.523-4.477 10-10 10S2 17.523 2 12Zm13-2.25a1 1 0 0 0-1 1v2.5a1 1 0 1 0 2 0v-2.5a1 1 0 0 0-1-1Zm-5 3.625a.625.625 0 0 0-.625-.625H7.5v-1.5h1.875a.625.625 0 1 0 0-1.25H6.75V8.5h2.625a2.125 2.125 0 0 1 1.62 3.5a2.125 2.125 0 0 1-1.62 3.5H6.75V14h2.625c.345 0 .625-.28.625-.625Z"/>`
	forwardThirtyLinePath         = `<path fill="currentColor" d="M2 12C2 6.477 6.477 2 12 2a9.985 9.985 0 0 1 8 4V3.5h2v6h-4.834c.212.368.334.795.334 1.25v2.5a2.5 2.5 0 0 1-5 0v-2.5A2.5 2.5 0 0 1 16 8.458V7.5h2.616A8 8 0 1 0 20 12h2c0 5.523-4.477 10-10 10S2 17.523 2 12Zm13-2.25a1 1 0 0 0-1 1v2.5a1 1 0 1 0 2 0v-2.5a1 1 0 0 0-1-1Zm-5.625 3a.625.625 0 1 1 0 1.25H6.75v1.5h2.625a2.125 2.125 0 0 0 1.62-3.5a2.125 2.125 0 0 0-1.62-3.5H6.75V10h2.625a.625.625 0 1 1 0 1.25H7.5v1.5h1.875Z"/>`
	fourKFillPath                 = `<path fill="currentColor" d="M3 3h18a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Zm8.5 10.5V12h-1V9H9v3H7.5V9H6v4.5h3V15h1.5v-1.5h1ZM18 15l-2.25-3L18 9h-1.75l-1.75 2.25V9H13v6h1.5v-2.25L16.25 15H18Z"/>`
	fourKLinePath                 = `<path fill="currentColor" d="M4 5v14h16V5H4ZM3 3h18a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Zm8.5 10.5h-1V15H9v-1.5H6V9h1.5v3H9V9h1.5v3h1v1.5ZM18 15h-1.75l-1.75-2.25V15H13V9h1.5v2.25L16.25 9H18l-2.25 3L18 15Z"/>`
	fridgeFillPath                = `<path fill="currentColor" d="M19.998 12v10a1 1 0 0 1-1 1h-14a1 1 0 0 1-1-1V12h16Zm-11 2h-2v5h2v-5Zm10-13a1 1 0 0 1 1 1v8h-16V2a1 1 0 0 1 1-1h14Zm-10 3h-2v4h2V4Z"/>`
	fridgeLinePath                = `<path fill="currentColor" d="M18.998 1a1 1 0 0 1 1 1v20a1 1 0 0 1-1 1h-14a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1h14Zm-1 11h-12v9h12v-9Zm-8 2v4h-2v-4h2Zm8-11h-12v7h12V3Zm-8 2v3h-2V5h2Z"/>`
	fullscreenExitFillPath        = `<path fill="currentColor" d="M18 7h4v2h-6V3h2v4ZM8 9H2V7h4V3h2v6Zm10 8v4h-2v-6h6v2h-4ZM8 15v6H6v-4H2v-2h6Z"/>`
	fullscreenExitLinePath        = `<path fill="currentColor" d="M18 7h4v2h-6V3h2v4ZM8 9H2V7h4V3h2v6Zm10 8v4h-2v-6h6v2h-4ZM8 15v6H6v-4H2v-2h6Z"/>`
	fullscreenFillPath            = `<path fill="currentColor" d="M16 3h6v6h-2V5h-4V3ZM2 3h6v2H4v4H2V3Zm18 16v-4h2v6h-6v-2h4ZM4 19h4v2H2v-6h2v4Z"/>`
	fullscreenLinePath            = `<path fill="currentColor" d="M8 3v2H4v4H2V3h6ZM2 21v-6h2v4h4v2H2Zm20 0h-6v-2h4v-4h2v6Zm0-12h-2V5h-4V3h6v6Z"/>`
	functionFillPath              = `<path fill="currentColor" d="M3 3h8v8H3V3Zm0 10h8v8H3v-8ZM13 3h8v8h-8V3Zm0 10h8v8h-8v-8Z"/>`
	functionLinePath              = `<path fill="currentColor" d="M3 3h8v8H3V3Zm0 10h8v8H3v-8ZM13 3h8v8h-8V3Zm0 10h8v8h-8v-8Zm2-8v4h4V5h-4Zm0 10v4h4v-4h-4ZM5 5v4h4V5H5Zm0 10v4h4v-4H5Z"/>`
	functionsPath                 = `<path fill="currentColor" d="m5 18l7.68-6L5 6V4h14v2H8.263L16 12l-7.737 6H19v2H5v-2Z"/>`
	fundsBoxFillPath              = `<path fill="currentColor" d="M3.005 3.003h18a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1h-18a1 1 0 0 1-1-1v-16a1 1 0 0 1 1-1Zm11.793 6.793l-2.45 2.45l-2.121-2.122l-4.243 4.243l1.414 1.414l2.829-2.828l2.121 2.121l3.864-3.864l1.793 1.793v-5h-5l1.793 1.793Z"/>`
	fundsBoxLinePath              = `<path fill="currentColor" d="M4.005 5.003v14h16v-14h-16Zm-1-2h18a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1h-18a1 1 0 0 1-1-1v-16a1 1 0 0 1 1-1Zm11.793 6.793l-1.793-1.793h5v5l-1.793-1.793l-3.864 3.864l-2.121-2.121l-2.829 2.828l-1.414-1.414l4.243-4.243l2.121 2.122l2.45-2.45Z"/>`
	fundsFillPath                 = `<path fill="currentColor" d="m3.901 17.864l3.911-3.911l2.829 2.828l4.571-4.571l1.793 1.793v-5h-5l1.793 1.793l-3.157 3.157l-2.829-2.829l-4.945 4.946a9.965 9.965 0 0 1-.862-4.067c0-5.523 4.477-10 10-10s10 4.477 10 10s-4.477 10-10 10a9.987 9.987 0 0 1-8.104-4.14Z"/>`
	fundsLinePath                 = `<path fill="currentColor" d="m4.41 14.526l3.402-3.402l2.829 2.829l3.157-3.157l-1.793-1.793h5v5l-1.793-1.793l-4.571 4.571l-2.829-2.828l-2.474 2.474a8 8 0 1 0-.927-1.9Zm-1.537 1.558l-.01-.01l.004-.004a9.965 9.965 0 0 1-.862-4.067c0-5.523 4.477-10 10-10s10 4.477 10 10s-4.477 10-10 10c-4.07 0-7.57-2.43-9.132-5.919Z"/>`
	galleryFillPath               = `<path fill="currentColor" d="M17.409 19c-.776-2.399-2.277-3.885-4.266-5.602A10.953 10.953 0 0 1 20 11V3h1.008c.548 0 .992.445.992.993v16.014a1 1 0 0 1-.992.993H2.992A.993.993 0 0 1 2 20.007V3.993A1 1 0 0 1 2.992 3H6V1h2v4H4v7c5.22 0 9.662 2.462 11.313 7h2.096ZM18 1v4h-8V3h6V1h2Zm-1.5 9a1.5 1.5 0 1 1 0-3a1.5 1.5 0 0 1 0 3Z"/>`
	galleryLinePath               = `<path fill="currentColor" d="M20 13c-1.678 0-3.249.46-4.593 1.259A14.984 14.984 0 0 1 18.147 19H20v-6Zm-3.996 6C14.044 14.302 9.408 11 4 11v8h12.004ZM4 9c3.83 0 7.323 1.435 9.974 3.796A10.949 10.949 0 0 1 20 11V3h1.008c.548 0 .992.445.992.993v16.014a1 1 0 0 1-.992.993H2.992A.993.993 0 0 1 2 20.007V3.993A1 1 0 0 1 2.992 3H6V1h2v4H4v4Zm14-8v4h-8V3h6V1h2Zm-1.5 9a1.5 1.5 0 1 1 0-3a1.5 1.5 0 0 1 0 3Z"/>`
	galleryUploadFillPath         = `<path fill="currentColor" d="M8 1v2h8V1h2v2h3.008c.548 0 .992.445.992.993v16.014a1 1 0 0 1-.992.993H2.992A.993.993 0 0 1 2 20.007V3.993A1 1 0 0 1 2.992 3H6V1h2Zm4 7l-4 4h3v4h2v-4h3l-4-4Z"/>`
	galleryUploadLinePath         = `<path fill="currentColor" d="M8 1v4H4v14h16V3h1.008c.548 0 .992.445.992.993v16.014a1 1 0 0 1-.992.993H2.992A.993.993 0 0 1 2 20.007V3.993A1 1 0 0 1 2.992 3H6V1h2Zm4 7l4 4h-3v4h-2v-4H8l4-4Zm6-7v4h-8V3h6V1h2Z"/>`
	gameFillPath                  = `<path fill="currentColor" d="M12 2a9.98 9.98 0 0 1 7.743 3.671L13.414 12l6.329 6.329A9.98 9.98 0 0 1 12 22C6.477 22 2 17.523 2 12S6.477 2 12 2Zm0 3a1.5 1.5 0 1 0 0 3a1.5 1.5 0 0 0 0-3Z"/>`
	gameLinePath                  = `<path fill="currentColor" d="M12 2a9.98 9.98 0 0 1 7.743 3.671L13.414 12l6.329 6.329A9.98 9.98 0 0 1 12 22C6.477 22 2 17.523 2 12S6.477 2 12 2Zm0 2a8 8 0 1 0 4.697 14.477l.208-.157l-6.32-6.32l6.32-6.321l-.208-.156a7.965 7.965 0 0 0-4.394-1.517L12 4Zm0 1a1.5 1.5 0 1 1 0 3a1.5 1.5 0 0 1 0-3Z"/>`
	gamepadFillPath               = `<path fill="currentColor" d="M17 4a6 6 0 0 1 6 6v4a6 6 0 0 1-6 6H7a6 6 0 0 1-6-6v-4a6 6 0 0 1 6-6h10Zm-7 5H8v2H6v2h1.999L8 15h2l-.001-2H12v-2h-2V9Zm8 4h-2v2h2v-2Zm-2-4h-2v2h2V9Z"/>`
	gamepadLinePath               = `<path fill="currentColor" d="M17 4a6 6 0 0 1 6 6v4a6 6 0 0 1-6 6H7a6 6 0 0 1-6-6v-4a6 6 0 0 1 6-6h10Zm0 2H7a4 4 0 0 0-3.995 3.8L3 10v4a4 4 0 0 0 3.8 3.995L7 18h10a4 4 0 0 0 3.995-3.8L21 14v-4a4 4 0 0 0-3.8-3.995L17 6Zm-7 3v2h2v2H9.999L10 15H8l-.001-2H6v-2h2V9h2Zm8 4v2h-2v-2h2Zm-2-4v2h-2V9h2Z"/>`
	gasStationFillPath            = `<path fill="currentColor" d="M3 19V4a1 1 0 0 1 1-1h9a1 1 0 0 1 1 1v8h2a2 2 0 0 1 2 2v4a1 1 0 1 0 2 0v-7h-2a1 1 0 0 1-1-1V6.414l-1.657-1.657l1.414-1.414l4.95 4.95A.997.997 0 0 1 22 9v9a3 3 0 1 1-6 0v-4h-2v5h1v2H2v-2h1ZM5 5v6h7V5H5Z"/>`
	gasStationLinePath            = `<path fill="currentColor" d="M14 19h1v2H2v-2h1V4a1 1 0 0 1 1-1h9a1 1 0 0 1 1 1v8h2a2 2 0 0 1 2 2v4a1 1 0 1 0 2 0v-7h-2a1 1 0 0 1-1-1V6.414l-1.657-1.657l1.414-1.414l4.95 4.95A.997.997 0 0 1 22 9v9a3 3 0 1 1-6 0v-4h-2v5Zm-9 0h7v-6H5v6ZM5 5v6h7V5H5Z"/>`
	gatsbyFillPath                = `<path fill="currentColor" d="M12.001 2c-5.5 0-10 4.5-10 10s4.5 10 10 10s10-4.5 10-10s-4.5-10-10-10ZM6.43 17.571c-1.5-1.5-2.286-3.5-2.286-5.428l7.786 7.714c-2-.071-4-.786-5.5-2.286Zm7.285 2.072l-9.357-9.357c.786-3.5 3.929-6.143 7.643-6.143c2.643 0 4.929 1.286 6.357 3.214l-1.071.929C16.072 6.643 14.144 5.57 12 5.57c-2.786 0-5.143 1.786-6.071 4.286l8.214 8.214c2.071-.714 3.643-2.5 4.143-4.642h-3.429V12h5c0 3.714-2.643 6.857-6.143 7.643Z"/>`
	gatsbyLinePath                = `<path fill="currentColor" d="M11.752 21.997c-5.221-.128-9.45-4.257-9.736-9.438l-.012-.313l9.748 9.751ZM12 2a9.988 9.988 0 0 1 8.193 4.265l-1.638 1.148A8.003 8.003 0 0 0 4.535 9.12L14.88 19.466A8.018 8.018 0 0 0 19.749 14H15.5v-2H22c0 4.726-3.279 8.686-7.686 9.73L2.27 9.686C3.314 5.28 7.275 2 12 2Z"/>`
	genderlessFillPath            = `<path fill="currentColor" d="M11 7.066V1h2v6.066A7.501 7.501 0 0 1 12 22a7.5 7.5 0 0 1-1-14.934Z"/>`
	genderlessLinePath            = `<path fill="currentColor" d="M13 7.066A7.501 7.501 0 0 1 12 22a7.5 7.5 0 0 1-1-14.934V1h2v6.066ZM12 20a5.5 5.5 0 1 0 0-11a5.5 5.5 0 0 0 0 11Z"/>`
	ghostFillPath                 = `<path fill="currentColor" d="M12 2a9 9 0 0 1 9 9v7.5a3.5 3.5 0 0 1-6.39 1.976a2.999 2.999 0 0 1-5.223 0a3.5 3.5 0 0 1-6.382-1.783L3 18.499V11a9 9 0 0 1 9-9Zm0 10c-1.105 0-2 1.12-2 2.5s.895 2.5 2 2.5s2-1.12 2-2.5s-.895-2.5-2-2.5ZM9.5 8a1.5 1.5 0 1 0 0 3a1.5 1.5 0 0 0 0-3Zm5 0a1.5 1.5 0 1 0 0 3a1.5 1.5 0 0 0 0-3Z"/>`
	ghostLinePath                 = `<path fill="currentColor" d="M12 2a9 9 0 0 1 9 9v7.5a3.5 3.5 0 0 1-6.39 1.976a2.999 2.999 0 0 1-5.223 0a3.5 3.5 0 0 1-6.382-1.783L3 18.499V11a9 9 0 0 1 9-9Zm0 2a7 7 0 0 0-6.996 6.76L5 11v7.446l.002.138a1.5 1.5 0 0 0 2.645.88l.088-.116a2 2 0 0 1 3.393.142a.999.999 0 0 0 1.74.003a2 2 0 0 1 3.296-.278l.097.13a1.5 1.5 0 0 0 2.732-.701L19 18.5V11a7 7 0 0 0-7-7Zm0 8c1.105 0 2 1.12 2 2.5s-.895 2.5-2 2.5s-2-1.12-2-2.5s.895-2.5 2-2.5ZM9.5 8a1.5 1.5 0 1 1 0 3a1.5 1.5 0 0 1 0-3Zm5 0a1.5 1.5 0 1 1 0 3a1.5 1.5 0 0 1 0-3Z"/>`
	ghostSmileFillPath            = `<path fill="currentColor" d="M12 2a9 9 0 0 1 9 9v7.5a3.5 3.5 0 0 1-6.39 1.976a2.999 2.999 0 0 1-5.223 0a3.5 3.5 0 0 1-6.382-1.783L3 18.499V11a9 9 0 0 1 9-9Zm4 11h-2a2 2 0 0 1-3.995.15L10 13H8l.005.2a4 4 0 0 0 7.99 0L16 13Zm-4-6a2 2 0 1 0 0 4a2 2 0 0 0 0-4Z"/>`
	ghostSmileLinePath            = `<path fill="currentColor" d="M12 2a9 9 0 0 1 9 9v7.5a3.5 3.5 0 0 1-6.39 1.976a2.999 2.999 0 0 1-5.223 0a3.5 3.5 0 0 1-6.382-1.783L3 18.499V11a9 9 0 0 1 9-9Zm0 2a7 7 0 0 0-6.996 6.76L5 11v7.446l.002.138a1.5 1.5 0 0 0 2.645.88l.088-.116a2 2 0 0 1 3.393.142a.999.999 0 0 0 1.74.003a2 2 0 0 1 3.296-.278l.097.13a1.5 1.5 0 0 0 2.732-.701L19 18.5V11a7 7 0 0 0-7-7Zm4 9a4 4 0 0 1-7.995.2L8 13h2a2 2 0 1 0 4 0h2Zm-4-6a2 2 0 1 1 0 4a2 2 0 0 1 0-4Z"/>`
	ghostTwoFillPath              = `<path fill="currentColor" d="M12 2c3.5 0 6 3 7 6c3 1 4 3.73 4 6l-2.775.793a1 1 0 0 0-.725.961v1.496A1.75 1.75 0 0 1 17.75 19h-.596a2 2 0 0 0-1.668.896C14.558 21.3 13.396 22 12 22c-1.396 0-2.558-.701-3.486-2.104A2 2 0 0 0 6.846 19H6.25a1.75 1.75 0 0 1-1.75-1.75v-1.496a1 1 0 0 0-.725-.961L1 14c0-2.266 1-5 4-6c1-3 3.5-6 7-6Zm0 10c-.828 0-1.5 1.12-1.5 2.5S11.172 17 12 17s1.5-1.12 1.5-2.5S12.828 12 12 12ZM9.5 8a1.5 1.5 0 1 0 0 3a1.5 1.5 0 0 0 0-3Zm5 0a1.5 1.5 0 1 0 0 3a1.5 1.5 0 0 0 0-3Z"/>`
	ghostTwoLinePath              = `<path fill="currentColor" d="M12 2c3.5 0 6 3 7 6c3 1 4 3.73 4 6l-2.775.793a1 1 0 0 0-.725.961v1.496A1.75 1.75 0 0 1 17.75 19h-.596a2 2 0 0 0-1.668.896C14.558 21.3 13.396 22 12 22c-1.396 0-2.558-.701-3.486-2.104A2 2 0 0 0 6.846 19H6.25a1.75 1.75 0 0 1-1.75-1.75v-1.496a1 1 0 0 0-.725-.961L1 14c0-2.266 1-5 4-6c1-3 3.5-6 7-6Zm0 2C9.89 4 7.935 5.788 6.989 8.371l-.092.261l-.316.95l-.949.315c-1.255.419-2.067 1.341-2.424 2.56l-.023.086l1.14.327a3 3 0 0 1 2.17 2.703l.005.181V17h.346a4 4 0 0 1 3.2 1.6l.136.192C10.758 19.663 11.316 20 12 20c.638 0 1.167-.293 1.703-1.04l.115-.168a4 4 0 0 1 3.1-1.785l.236-.007h.346v-1.246a3 3 0 0 1 2.003-2.83l.173-.054l1.139-.327l-.023-.087c-.337-1.151-1.08-2.037-2.22-2.484l-.204-.075l-.95-.316l-.315-.949C16.195 5.91 14.18 4 12 4Zm0 8c.828 0 1.5 1.12 1.5 2.5S12.828 17 12 17s-1.5-1.12-1.5-2.5s.672-2.5 1.5-2.5ZM9.5 8a1.5 1.5 0 1 1 0 3a1.5 1.5 0 0 1 0-3Zm5 0a1.5 1.5 0 1 1 0 3a1.5 1.5 0 0 1 0-3Z"/>`
	giftFillPath                  = `<path fill="currentColor" d="M15.005 2.003a4 4 0 0 1 3.464 6.001l4.536-.001v2h-2v10a1 1 0 0 1-1 1h-16a1 1 0 0 1-1-1v-10h-2v-2l4.536.001a4 4 0 0 1 6.465-4.646a3.983 3.983 0 0 1 2.999-1.355Zm-2 8h-2v10h2v-10Zm-4-6a2 2 0 0 0-.15 3.994l.15.006h2v-2a2 2 0 0 0-1.697-1.977l-.154-.018l-.15-.005Zm6 0a2 2 0 0 0-1.995 1.85l-.005.15v2h2a2 2 0 0 0 1.994-1.85l.006-.15a2 2 0 0 0-2-2Z"/>`
	giftLinePath                  = `<path fill="currentColor" d="M15.005 2.003a4 4 0 0 1 3.464 6.001l4.536-.001v2h-2v10a1 1 0 0 1-1 1h-16a1 1 0 0 1-1-1v-10h-2v-2l4.536.001a4 4 0 0 1 6.465-4.646a3.983 3.983 0 0 1 2.999-1.355Zm-4 8h-6v9h6v-9Zm8 0h-6v9h6v-9Zm-10-6a2 2 0 0 0-.15 3.994l.15.006h2v-2a2 2 0 0 0-1.697-1.977l-.154-.018l-.15-.005Zm6 0a2 2 0 0 0-1.995 1.85l-.005.15v2h2a2 2 0 0 0 1.994-1.85l.006-.15a2 2 0 0 0-2-2Z"/>`
	giftTwoFillPath               = `<path fill="currentColor" d="M20.005 13.003v7a1 1 0 0 1-1 1h-14a1 1 0 0 1-1-1v-7h16Zm-5.5-11a3.5 3.5 0 0 1 3.163 5.001l3.337-.001a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-18a1 1 0 0 1-1-1v-3a1 1 0 0 1 1-1l3.337.001a3.5 3.5 0 0 1 5.664-3.95a3.48 3.48 0 0 1 2.499-1.051Zm-5 2a1.5 1.5 0 0 0-.145 2.993l.145.007h1.5v-1.5A1.5 1.5 0 0 0 9.649 4.01l-.144-.007Zm5 0l-.145.007a1.5 1.5 0 0 0-1.348 1.348l-.007.145v1.5h1.5l.144-.007a1.5 1.5 0 0 0 0-2.986l-.144-.007Z"/>`
	giftTwoLinePath               = `<path fill="currentColor" d="M14.505 2.003a3.5 3.5 0 0 1 3.163 5.001l3.337-.001a1 1 0 0 1 1 1v4a1 1 0 0 1-1 1h-1v8a1 1 0 0 1-1 1h-14a1 1 0 0 1-1-1v-8h-1a1 1 0 0 1-1-1v-4a1 1 0 0 1 1-1l3.337.001a3.5 3.5 0 0 1 5.664-3.95a3.48 3.48 0 0 1 2.499-1.051Zm3.5 11h-12v7h12v-7Zm2-4h-16v2h16v-2Zm-10.5-5a1.5 1.5 0 0 0-.145 2.993l.145.007h1.5v-1.5A1.5 1.5 0 0 0 9.649 4.01l-.144-.007Zm5 0l-.145.007a1.5 1.5 0 0 0-1.348 1.348l-.007.145v1.5h1.5l.144-.007a1.5 1.5 0 0 0 0-2.986l-.144-.007Z"/>`
	gitBranchFillPath             = `<path fill="currentColor" d="M7.105 15.21A3.001 3.001 0 1 1 5 15.17V8.83a3.001 3.001 0 1 1 2 0V12c.836-.628 1.874-1 3-1h4a3.001 3.001 0 0 0 2.895-2.21a3.001 3.001 0 1 1 2.032.064A5.002 5.002 0 0 1 14 13h-4a3.001 3.001 0 0 0-2.895 2.21Z"/>`
	gitBranchLinePath             = `<path fill="currentColor" d="M7.105 15.21A3.001 3.001 0 1 1 5 15.17V8.83a3.001 3.001 0 1 1 2 0V12c.836-.628 1.874-1 3-1h4a3.001 3.001 0 0 0 2.895-2.21a3.001 3.001 0 1 1 2.032.064A5.002 5.002 0 0 1 14 13h-4a3.001 3.001 0 0 0-2.895 2.21ZM6 17a1 1 0 1 0 0 2a1 1 0 0 0 0-2ZM6 5a1 1 0 1 0 0 2a1 1 0 0 0 0-2Zm12 0a1 1 0 1 0 0 2a1 1 0 0 0 0-2Z"/>`
	gitClosePullRequestFillPath   = `<path fill="currentColor" d="M3 6a3 3 0 1 1 4 2.83v6.34a3.001 3.001 0 1 1-2 0V8.83A3.001 3.001 0 0 1 3 6Zm12.293-2.707a1 1 0 0 1 1.414 0L18 4.586l1.293-1.293a1 1 0 1 1 1.414 1.414L19.414 6l1.293 1.293a1 1 0 0 1-1.414 1.414L18 7.414l-1.293 1.293a1 1 0 1 1-1.414-1.414L16.586 6l-1.293-1.293a1 1 0 0 1 0-1.414ZM18 10a1 1 0 0 1 1 1v4.17a3.001 3.001 0 1 1-2 0V11a1 1 0 0 1 1-1Z"/>`
	gitClosePullRequestLinePath   = `<path fill="currentColor" d="M6 5a1 1 0 1 0 0 2a1 1 0 0 0 0-2ZM3 6a3 3 0 1 1 4 2.83v6.34a3.001 3.001 0 1 1-2 0V8.83A3.001 3.001 0 0 1 3 6Zm12.293-2.707a1 1 0 0 1 1.414 0L18 4.586l1.293-1.293a1 1 0 1 1 1.414 1.414L19.414 6l1.293 1.293a1 1 0 0 1-1.414 1.414L18 7.414l-1.293 1.293a1 1 0 1 1-1.414-1.414L16.586 6l-1.293-1.293a1 1 0 0 1 0-1.414ZM18 10a1 1 0 0 1 1 1v4.17a3.001 3.001 0 1 1-2 0V11a1 1 0 0 1 1-1ZM6 17a1 1 0 1 0 0 2a1 1 0 0 0 0-2Zm12 0a1 1 0 1 0 0 2a1 1 0 0 0 0-2Z"/>`
	gitCommitFillPath             = `<path fill="currentColor" d="M15.874 13a4.002 4.002 0 0 1-7.748 0H3v-2h5.126a4.002 4.002 0 0 1 7.748 0H21v2h-5.126Z"/>`
	gitCommitLinePath             = `<path fill="currentColor" d="M15.874 13a4.002 4.002 0 0 1-7.748 0H3v-2h5.126a4.002 4.002 0 0 1 7.748 0H21v2h-5.126ZM12 14a2 2 0 1 0 0-4a2 2 0 0 0 0 4Z"/>`
	gitMergeFillPath              = `<path fill="currentColor" d="M7.105 8.79A3.001 3.001 0 0 0 10 11h4a5.002 5.002 0 0 1 4.927 4.146A3.001 3.001 0 0 1 18 21a3 3 0 0 1-1.105-5.79A3.001 3.001 0 0 0 14 13h-4a4.978 4.978 0 0 1-3-1v3.17a3.001 3.001 0 1 1-2 0V8.83a3.001 3.001 0 1 1 2.105-.04Z"/>`
	gitMergeLinePath              = `<path fill="currentColor" d="M7.105 8.79A3.001 3.001 0 0 0 10 11h4a5.002 5.002 0 0 1 4.927 4.146A3.001 3.001 0 0 1 18 21a3 3 0 0 1-1.105-5.79A3.001 3.001 0 0 0 14 13h-4a4.978 4.978 0 0 1-3-1v3.17a3.001 3.001 0 1 1-2 0V8.83a3.001 3.001 0 1 1 2.105-.04ZM6 7a1 1 0 1 0 0-2a1 1 0 0 0 0 2Zm0 12a1 1 0 1 0 0-2a1 1 0 0 0 0 2Zm12 0a1 1 0 1 0 0-2a1 1 0 0 0 0 2Z"/>`
	gitPullRequestFillPath        = `<path fill="currentColor" d="M15 5h2a2 2 0 0 1 2 2v8.17a3.001 3.001 0 1 1-2 0V7h-2v3l-4.5-4L15 2v3ZM5 8.83a3.001 3.001 0 1 1 2 0v6.34a3.001 3.001 0 1 1-2 0V8.83Z"/>`
	gitPullRequestLinePath        = `<path fill="currentColor" d="M15 5h2a2 2 0 0 1 2 2v8.17a3.001 3.001 0 1 1-2 0V7h-2v3l-4.5-4L15 2v3ZM5 8.83a3.001 3.001 0 1 1 2 0v6.34a3.001 3.001 0 1 1-2 0V8.83ZM6 7a1 1 0 1 0 0-2a1 1 0 0 0 0 2Zm0 12a1 1 0 1 0 0-2a1 1 0 0 0 0 2Zm12 0a1 1 0 1 0 0-2a1 1 0 0 0 0 2Z"/>`
	gitRepositoryCommitsFillPath  = `<path fill="currentColor" d="M14 17v6h-2v-6H9l4-5l4 5h-3Zm2 2h3v-3h-.8L13 9.5L7.647 16H6.5a1.5 1.5 0 0 0 0 3H10v2H6.5A3.5 3.5 0 0 1 3 17.5V5a3 3 0 0 1 3-3h14a1 1 0 0 1 1 1v17a1 1 0 0 1-1 1h-4v-2ZM7 5v2h2V5H7Zm0 3v2h2V8H7Z"/>`
	gitRepositoryCommitsLinePath  = `<path fill="currentColor" d="M18 16v-2h1V4H6v10.035c.163-.023.33-.035.5-.035H8v2H6.5a1.5 1.5 0 0 0 0 3H10v2H6.5A3.5 3.5 0 0 1 3 17.5V5a3 3 0 0 1 3-3h14a1 1 0 0 1 1 1v17a1 1 0 0 1-1 1h-4v-2h3v-3h-1ZM7 5h2v2H7V5Zm0 3h2v2H7V8Zm7 9v6h-2v-6H9l4-5l4 5h-3Z"/>`
	gitRepositoryFillPath         = `<path fill="currentColor" d="M13 21v2.5l-3-2l-3 2V21h-.5A3.5 3.5 0 0 1 3 17.5V5a3 3 0 0 1 3-3h14a1 1 0 0 1 1 1v17a1 1 0 0 1-1 1h-7Zm-6-2v-2h6v2h6v-3H6.5a1.5 1.5 0 0 0 0 3H7ZM7 5v2h2V5H7Zm0 3v2h2V8H7Zm0 3v2h2v-2H7Z"/>`
	gitRepositoryLinePath         = `<path fill="currentColor" d="M13 21v2.5l-3-2l-3 2V21h-.5A3.5 3.5 0 0 1 3 17.5V5a3 3 0 0 1 3-3h14a1 1 0 0 1 1 1v17a1 1 0 0 1-1 1h-7Zm0-2h6v-3H6.5a1.5 1.5 0 0 0 0 3H7v-2h6v2Zm6-5V4H6v10.035c.163-.023.33-.035.5-.035H19ZM7 5h2v2H7V5Zm0 3h2v2H7V8Zm0 3h2v2H7v-2Z"/>`
	gitRepositoryPrivateFillPath  = `<path fill="currentColor" d="M18 8h2a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V9a1 1 0 0 1 1-1h2V7a6 6 0 1 1 12 0v1Zm-2 0V7a4 4 0 0 0-8 0v1h8Zm-9 3v2h2v-2H7Zm0 3v2h2v-2H7Zm0 3v2h2v-2H7Z"/>`
	gitRepositoryPrivateLinePath  = `<path fill="currentColor" d="M6 10v10h13V10H6Zm12-2h2a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V9a1 1 0 0 1 1-1h2V7a6 6 0 1 1 12 0v1Zm-2 0V7a4 4 0 0 0-8 0v1h8Zm-9 3h2v2H7v-2Zm0 3h2v2H7v-2Zm0 3h2v2H7v-2Z"/>`
	githubFillPath                = `<path fill="currentColor" d="M12.001 2c-5.525 0-10 4.475-10 10a9.994 9.994 0 0 0 6.837 9.488c.5.087.688-.213.688-.476c0-.237-.013-1.024-.013-1.862c-2.512.463-3.162-.612-3.362-1.175c-.113-.288-.6-1.175-1.025-1.413c-.35-.187-.85-.65-.013-.662c.788-.013 1.35.725 1.538 1.025c.9 1.512 2.337 1.087 2.912.825c.088-.65.35-1.087.638-1.337c-2.225-.25-4.55-1.113-4.55-4.938c0-1.088.387-1.987 1.025-2.688c-.1-.25-.45-1.275.1-2.65c0 0 .837-.262 2.75 1.026a9.28 9.28 0 0 1 2.5-.338c.85 0 1.7.112 2.5.337c1.913-1.3 2.75-1.024 2.75-1.024c.55 1.375.2 2.4.1 2.65c.637.7 1.025 1.587 1.025 2.687c0 3.838-2.337 4.688-4.563 4.938c.363.312.676.912.676 1.85c0 1.337-.013 2.412-.013 2.75c0 .262.188.574.688.474A10.016 10.016 0 0 0 22 12c0-5.525-4.475-10-10-10Z"/>`
	githubLinePath                = `<path fill="currentColor" d="M5.884 18.653c-.3-.2-.558-.456-.86-.816a50.59 50.59 0 0 1-.466-.579c-.463-.575-.755-.841-1.056-.95a1 1 0 1 1 .675-1.882c.752.27 1.261.735 1.947 1.588c-.094-.117.34.427.433.539c.19.227.33.365.44.438c.204.137.588.196 1.15.14c.024-.382.094-.753.202-1.096c-2.968-.725-4.648-2.64-4.648-6.396c0-1.238.37-2.355 1.058-3.291c-.218-.894-.185-1.975.302-3.192a1 1 0 0 1 .63-.583c.081-.024.127-.034.208-.047c.803-.123 1.937.17 3.415 1.097a11.731 11.731 0 0 1 2.687-.308c.912 0 1.819.103 2.684.308c1.477-.933 2.614-1.227 3.422-1.097c.085.014.158.032.218.051a1 1 0 0 1 .616.58c.487 1.215.52 2.296.302 3.19c.691.936 1.058 2.045 1.058 3.292c0 3.758-1.674 5.666-4.642 6.393c.125.415.19.878.19 1.38c0 .664-.002 1.299-.007 2.01c0 .19-.002.394-.005.706a1 1 0 0 1-.018 1.957c-1.14.228-1.984-.532-1.984-1.524l.002-.447l.005-.705c.005-.707.008-1.338.008-1.997c0-.697-.184-1.152-.426-1.361c-.661-.57-.326-1.654.541-1.751c2.966-.334 4.336-1.483 4.336-4.66c0-.955-.312-1.745-.913-2.405a1 1 0 0 1-.189-1.044c.166-.415.236-.957.095-1.614l-.01.002c-.491.14-1.11.44-1.858.95a1 1 0 0 1-.833.135a9.626 9.626 0 0 0-2.592-.35c-.89 0-1.772.12-2.592.35a1 1 0 0 1-.829-.133c-.753-.507-1.374-.807-1.87-.947c-.143.653-.072 1.194.093 1.607a1 1 0 0 1-.189 1.044c-.597.656-.913 1.459-.913 2.404c0 3.172 1.371 4.33 4.322 4.66c.865.098 1.202 1.178.545 1.749c-.193.167-.43.732-.43 1.364v3.149c0 .986-.834 1.726-1.96 1.529a1 1 0 0 1-.04-1.963v-.99c-.91.062-1.661-.087-2.254-.484Z"/>`
	gitlabFillPath                = `<path fill="currentColor" d="m21.663 9.987l-.028-.072l-2.719-7.094a.71.71 0 0 0-.706-.449a.711.711 0 0 0-.654.522L15.72 8.52H8.282L6.443 2.895a.711.711 0 0 0-.652-.524a.72.72 0 0 0-.707.45L2.362 9.925l-.028.07a5.057 5.057 0 0 0 1.674 5.838l.01.007l.024.019l4.147 3.104l2.05 1.553l1.247.944a.843.843 0 0 0 1.016 0l1.247-.944l2.05-1.553l4.172-3.123l.01-.008a5.055 5.055 0 0 0 1.682-5.845Z"/>`
	gitlabLinePath                = `<path fill="currentColor" d="M5.544 2.673a1.549 1.549 0 0 1 1.8.098c.246.198.426.466.515.769l1.446 4.428h5.39L16.14 3.54a1.54 1.54 0 0 1 .515-.769l.004-.003a1.554 1.554 0 0 1 1.795-.096l.002.002c.274.173.486.43.605.73l.004.011l2.473 6.451a5.45 5.45 0 0 1-1.813 6.303l-6.73 5.064h-.002a1.659 1.659 0 0 1-2 0l-6.731-5.065a5.452 5.452 0 0 1-1.806-6.294l2.48-6.469c.12-.302.333-.558.607-.732Zm.811 2.063L4.16 10.464c-.28.737-.337 1.604-.12 2.362c.217.755.671 1.42 1.295 1.896l6.66 5.01l6.653-5.005a3.65 3.65 0 0 0 1.308-1.904c.22-.76.159-1.638-.123-2.378l-2.189-5.71L16 9.769H8L6.355 4.736Z"/>`
	globalFillPath                = `<path fill="currentColor" d="M2.05 13h5.477a17.9 17.9 0 0 0 2.925 8.881a10.005 10.005 0 0 1-8.403-8.88Zm0-2a10.005 10.005 0 0 1 8.402-8.88A17.9 17.9 0 0 0 7.527 11H2.05Zm19.9 0h-5.477a17.9 17.9 0 0 0-2.925-8.88A10.005 10.005 0 0 1 21.95 11Zm0 2a10.005 10.005 0 0 1-8.402 8.881a17.9 17.9 0 0 0 2.925-8.88h5.478ZM9.53 13h4.94A15.908 15.908 0 0 1 12 20.592A15.908 15.908 0 0 1 9.53 13Zm0-2A15.908 15.908 0 0 1 12 3.41A15.908 15.908 0 0 1 14.47 11H9.53Z"/>`
	globalLinePath                = `<path fill="currentColor" d="M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10Zm-2.29-2.333A17.9 17.9 0 0 1 8.027 13H4.062a8.008 8.008 0 0 0 5.648 6.667ZM10.03 13c.151 2.439.848 4.73 1.97 6.752A15.905 15.905 0 0 0 13.97 13h-3.94Zm9.908 0h-3.965a17.9 17.9 0 0 1-1.683 6.667A8.008 8.008 0 0 0 19.938 13ZM4.062 11h3.965A17.9 17.9 0 0 1 9.71 4.333A8.008 8.008 0 0 0 4.062 11Zm5.969 0h3.938A15.905 15.905 0 0 0 12 4.248A15.905 15.905 0 0 0 10.03 11Zm4.259-6.667A17.9 17.9 0 0 1 15.973 11h3.965a8.008 8.008 0 0 0-5.648-6.667Z"/>`
	globeFillPath                 = `<path fill="currentColor" d="M13 21h5v2H6v-2h5v-1.05a10.002 10.002 0 0 1-7.684-4.988l1.737-.992A8 8 0 1 0 15.97 3.053l.993-1.737A9.996 9.996 0 0 1 22 10c0 5.185-3.946 9.449-9 9.95V21Zm-1-4a7 7 0 1 1 0-14a7 7 0 0 1 0 14Z"/>`
	globeLinePath                 = `<path fill="currentColor" d="M13 21h5v2H6v-2h5v-1.05a10.002 10.002 0 0 1-7.684-4.988l1.737-.992A8 8 0 1 0 15.97 3.053l.993-1.737A9.996 9.996 0 0 1 22 10c0 5.185-3.946 9.449-9 9.95V21Zm-1-4a7 7 0 1 1 0-14a7 7 0 0 1 0 14Zm0-2a5 5 0 1 0 0-10a5 5 0 0 0 0 10Z"/>`
	gobletFillPath                = `<path fill="currentColor" d="M11 19v-5.111L3 5V3h18v2l-8 8.889V19h5v2H6v-2h5ZM7.49 7h9.02l1.8-2H5.69l1.8 2Z"/>`
	gobletLinePath                = `<path fill="currentColor" d="M11 19v-5.111L3 5V3h18v2l-8 8.889V19h5v2H6v-2h5ZM7.49 7h9.02l1.8-2H5.69l1.8 2Zm1.8 2L12 12.01L14.71 9H9.29Z"/>`
	googleFillPath                = `<path fill="currentColor" d="M3.064 7.51A9.996 9.996 0 0 1 12 2c2.695 0 4.959.991 6.69 2.605l-2.867 2.868C14.786 6.482 13.468 5.977 12 5.977c-2.605 0-4.81 1.76-5.595 4.123c-.2.6-.314 1.24-.314 1.9c0 .66.114 1.3.314 1.9c.786 2.364 2.99 4.123 5.595 4.123c1.345 0 2.49-.355 3.386-.955a4.6 4.6 0 0 0 1.996-3.018H12v-3.868h9.418c.118.654.182 1.336.182 2.045c0 3.046-1.09 5.61-2.982 7.35C16.964 21.105 14.7 22 12 22A9.996 9.996 0 0 1 2 12c0-1.614.386-3.14 1.064-4.49Z"/>`
	googleLinePath                = `<path fill="currentColor" d="M12 11h8.533c.044.385.067.78.067 1.184c0 2.734-.98 5.036-2.678 6.6c-1.485 1.371-3.518 2.175-5.942 2.175A8.976 8.976 0 0 1 3 11.98A8.976 8.976 0 0 1 11.98 3c2.42 0 4.453.89 6.008 2.339L16.526 6.8C15.368 5.681 13.803 5 12 5a7 7 0 0 0 0 14c3.527 0 6.144-2.608 6.577-6H12v-2Z"/>`
	googlePlayFillPath            = `<path fill="currentColor" d="M3.61 1.814L13.793 12L3.611 22.186a.996.996 0 0 1-.61-.92V2.735a1 1 0 0 1 .609-.921ZM14.5 12.707l2.302 2.302l-10.937 6.333l8.635-8.635Zm3.199-3.198l2.807 1.626a1 1 0 0 1 0 1.73l-2.808 1.626L15.207 12l2.492-2.491ZM5.865 2.658L16.803 8.99L14.5 11.293L5.865 2.658Z"/>`
	googlePlayLinePath            = `<path fill="currentColor" d="M4.001 1.734a1 1 0 0 1 .501.135l16.004 9.265a1 1 0 0 1 0 1.731L4.502 22.131a1 1 0 0 1-1.501-.866V2.735a1 1 0 0 1 1-1Zm8.292 11.68l-4.498 4.498l5.699-3.299l-1.2-1.2ZM5 6.118v11.76l5.88-5.88L5 6.12Zm10.284 4.302L13.707 12l1.578 1.577L18.009 12l-2.725-1.579Zm-7.49-4.336l4.5 4.5l1.199-1.2l-5.699-3.3Z"/>`
	governmentFillPath            = `<path fill="currentColor" d="M2 19V8H1V6h3V4a1 1 0 0 1 1-1h14a1 1 0 0 1 1 1v2h3v2h-1v11h1v2H1v-2h1Zm11 0v-7h-2v7h2Zm-5 0v-7H6v7h2Zm10 0v-7h-2v7h2ZM6 5v1h12V5H6Z"/>`
	governmentLinePath            = `<path fill="currentColor" d="M20 6h3v2h-1v11h1v2H1v-2h1V8H1V6h3V4a1 1 0 0 1 1-1h14a1 1 0 0 1 1 1v2Zm0 2H4v11h3v-7h2v7h2v-7h2v7h2v-7h2v7h3V8ZM6 5v1h12V5H6Z"/>`
	gpsFillPath                   = `<path fill="currentColor" d="m12 16l3 6H9l3-6Zm-2.627.255a5 5 0 1 1 5.255 0l-1.356-2.711a2 2 0 1 0-2.544 0l-1.355 2.71Zm-2.241 4.482A9.997 9.997 0 0 1 2 12C2 6.477 6.477 2 12 2s10 4.477 10 10a9.997 9.997 0 0 1-5.131 8.737l-1.344-2.688a7 7 0 1 0-7.05 0l-1.343 2.688Z"/>`
	gpsLinePath                   = `<path fill="currentColor" d="M7.132 20.737A9.997 9.997 0 0 1 2 12C2 6.477 6.477 2 12 2s10 4.477 10 10a9.997 9.997 0 0 1-5.132 8.737l-.896-1.791a8 8 0 1 0-7.945 0l-.895 1.791Zm1.792-3.584a6 6 0 1 1 6.151 0l-.898-1.797a4 4 0 1 0-4.354 0l-.899 1.797ZM12 16l3 6H9l3-6Z"/>`
	gradienterFillPath            = `<path fill="currentColor" d="M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10ZM8.126 11H4.062a8.079 8.079 0 0 0 0 2h4.064a4.007 4.007 0 0 1 0-2Zm7.748 0a4.01 4.01 0 0 1 0 2h4.064a8.069 8.069 0 0 0 0-2h-4.064ZM12 14a2 2 0 1 0 0-4a2 2 0 0 0 0 4Z"/>`
	gradienterLinePath            = `<path fill="currentColor" d="M2.049 13H4.06a8.001 8.001 0 0 0 15.877 0h2.012c-.502 5.053-4.765 9-9.95 9c-5.186 0-9.45-3.947-9.951-9Zm0-2c.502-5.053 4.765-9 9.95-9c5.186 0 9.45 3.947 9.951 9h-2.012A8.001 8.001 0 0 0 4.06 11H2.05Zm9.95 3a2 2 0 1 1 0-4a2 2 0 0 1 0 4Z"/>`
	graduationCapFillPath         = `<path fill="currentColor" d="M12 2L0 9l12 7l10-5.833V17.5h2V9L12 2ZM3.999 13.49V18a9.985 9.985 0 0 0 8 4A9.985 9.985 0 0 0 20 18v-4.509l-8 4.667l-8-4.668Z"/>`
	graduationCapLinePath         = `<path fill="currentColor" d="M4 11.333L0 9l12-7l12 7v8.5h-2v-7.333l-2 1.166v6.678l-.223.275A9.983 9.983 0 0 1 12 22a9.983 9.983 0 0 1-7.777-3.714L4 18.011v-6.678ZM6 12.5v4.792A7.979 7.979 0 0 0 12 20a7.978 7.978 0 0 0 6-2.708V12.5L12 16l-6-3.5ZM3.97 9L12 13.685L20.03 9L12 4.315L3.97 9Z"/>`
	gridFillPath                  = `<path fill="currentColor" d="M14 10v4h-4v-4h4Zm2 0h5v4h-5v-4Zm-2 11h-4v-5h4v5Zm2 0v-5h5v4a1 1 0 0 1-1 1h-4ZM14 3v5h-4V3h4Zm2 0h4a1 1 0 0 1 1 1v4h-5V3Zm-8 7v4H3v-4h5Zm0 11H4a1 1 0 0 1-1-1v-4h5v5ZM8 3v5H3V4a1 1 0 0 1 1-1h4Z"/>`
	gridLinePath                  = `<path fill="currentColor" d="M14 10h-4v4h4v-4Zm2 0v4h3v-4h-3Zm-2 9v-3h-4v3h4Zm2 0h3v-3h-3v3ZM14 5h-4v3h4V5Zm2 0v3h3V5h-3Zm-8 5H5v4h3v-4Zm0 9v-3H5v3h3ZM8 5H5v3h3V5ZM4 3h16a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Z"/>`
	groupFillPath                 = `<path fill="currentColor" d="M2 22a8 8 0 1 1 16 0H2Zm8-9c-3.315 0-6-2.685-6-6s2.685-6 6-6s6 2.685 6 6s-2.685 6-6 6Zm7.363 2.233A7.505 7.505 0 0 1 22.983 22H20c0-2.61-1-4.986-2.637-6.767Zm-2.023-2.276A7.98 7.98 0 0 0 18 7a7.964 7.964 0 0 0-1.015-3.903A5 5 0 0 1 21 8a4.999 4.999 0 0 1-5.66 4.957Z"/>`
	groupLinePath                 = `<path fill="currentColor" d="M2 22a8 8 0 1 1 16 0h-2a6 6 0 0 0-12 0H2Zm8-9c-3.315 0-6-2.685-6-6s2.685-6 6-6s6 2.685 6 6s-2.685 6-6 6Zm0-2c2.21 0 4-1.79 4-4s-1.79-4-4-4s-4 1.79-4 4s1.79 4 4 4Zm8.284 3.703A8.002 8.002 0 0 1 23 22h-2a6.001 6.001 0 0 0-3.537-5.473l.82-1.824Zm-.688-11.29A5.5 5.5 0 0 1 21 8.5a5.499 5.499 0 0 1-5 5.478v-2.013a3.5 3.5 0 0 0 1.041-6.609l.555-1.943Z"/>`
	groupTwoFillPath              = `<path fill="currentColor" d="M10 19.748V16.4c0-1.283.995-2.292 2.467-2.868A8.48 8.48 0 0 0 9.5 13c-1.89 0-3.636.617-5.047 1.66A8.017 8.017 0 0 0 10 19.748Zm8.88-3.662C18.485 15.553 17.17 15 15.5 15c-2.006 0-3.5.797-3.5 1.4V20a7.996 7.996 0 0 0 6.88-3.914ZM9.55 11.5a2.25 2.25 0 1 0 0-4.5a2.25 2.25 0 0 0 0 4.5Zm5.95 1a2 2 0 1 0 0-4a2 2 0 0 0 0 4ZM12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10Z"/>`
	groupTwoLinePath              = `<path fill="currentColor" d="M9.55 11.5a2.25 2.25 0 1 1 0-4.5a2.25 2.25 0 0 1 0 4.5Zm.45 8.248V16.4c0-.488.144-.937.404-1.338a6.474 6.474 0 0 0-5.033 1.417A8.012 8.012 0 0 0 10 19.749ZM4.453 14.66A8.462 8.462 0 0 1 9.5 13a8.48 8.48 0 0 1 2.967.532C13.345 13.19 14.392 13 15.5 13c1.66 0 3.185.424 4.206 1.156a8 8 0 1 0-15.253.504Zm14.426 1.426C18.486 15.553 17.171 15 15.5 15c-2.006 0-3.5.797-3.5 1.4V20a7.996 7.996 0 0 0 6.88-3.914ZM12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10Zm3.5-9.5a2 2 0 1 1 0-4a2 2 0 0 1 0 4Z"/>`
	guideFillPath                 = `<path fill="currentColor" d="M13 8v8a3 3 0 0 1-3 3H7.83a3.001 3.001 0 1 1 0-2H10a1 1 0 0 0 1-1V8a3 3 0 0 1 3-3h3V2l5 4l-5 4V7h-3a1 1 0 0 0-1 1Z"/>`
	guideLinePath                 = `<path fill="currentColor" d="M13 8v8a3 3 0 0 1-3 3H7.83a3.001 3.001 0 1 1 0-2H10a1 1 0 0 0 1-1V8a3 3 0 0 1 3-3h3V2l5 4l-5 4V7h-3a1 1 0 0 0-1 1ZM5 19a1 1 0 1 0 0-2a1 1 0 0 0 0 2Z"/>`
	hFivePath                     = `<path fill="currentColor" d="M22 8v2h-4.323l-.464 2.636A4.006 4.006 0 0 1 22.25 16.5a4 4 0 0 1-7.846 1.103l1.923-.551a2 2 0 1 0 .363-1.804l-1.81-.904L16 8h6ZM4 4v7h7V4h2v16h-2v-7H4v7H2V4h2Z"/>`
	hFourPath                     = `<path fill="currentColor" d="M13 20h-2v-7H4v7H2V4h2v7h7V4h2v16Zm9-12v8h1.5v2H22v2h-2v-2h-5.5v-1.34l5-8.66H22Zm-2 3.133L17.19 16H20v-4.867Z"/>`
	hOnePath                      = `<path fill="currentColor" d="M13 20h-2v-7H4v7H2V4h2v7h7V4h2v16Zm8-12v12h-2v-9.796l-2 .536V8.67L19.5 8H21Z"/>`
	hSixPath                      = `<path fill="currentColor" d="m21.097 8l-2.598 4.5a4 4 0 1 1-3.453 1.981L18.788 8h2.309ZM4 4v7h7V4h2v16h-2v-7H4v7H2V4h2Zm14.5 10.5a2 2 0 1 0 0 4a2 2 0 0 0 0-4Z"/>`
	hThreePath                    = `<path fill="currentColor" d="m22 8l-.002 2l-2.505 2.883a3.752 3.752 0 0 1-.993 7.367a3.751 3.751 0 0 1-3.682-3.033l1.964-.382a1.75 1.75 0 1 0 .924-1.895l-1.307-1.547L19.35 10H15V8h7ZM4 4v7h7V4h2v16h-2v-7H4v7H2V4h2Z"/>`
	hTwoPath                      = `<path fill="currentColor" d="M4 4v7h7V4h2v16h-2v-7H4v7H2V4h2Zm14.5 4a3.75 3.75 0 0 1 2.978 6.03l-.148.18L18.034 18H22v2h-7v-1.556l4.82-5.546a1.75 1.75 0 1 0-3.065-1.292l-.005.144h-2A3.75 3.75 0 0 1 18.5 8Z"/>`
	hailFillPath                  = `<path fill="currentColor" d="M18.995 17.794a4 4 0 0 0-5.085-3.644A4.001 4.001 0 0 0 6 15c0 1.08.428 2.059 1.122 2.778a8 8 0 1 1 9.335-10.68a5.5 5.5 0 0 1 2.537 10.696ZM10 17a2 2 0 1 1 0-4a2 2 0 0 1 0 4Zm5 3a2 2 0 1 1 0-4a2 2 0 0 1 0 4Zm-5 3a2 2 0 1 1 0-4a2 2 0 0 1 0 4Z"/>`
	hailLinePath                  = `<path fill="currentColor" d="M6 17.419A8.003 8.003 0 0 1 9 2a8.003 8.003 0 0 1 7.458 5.099A5.5 5.5 0 0 1 19 17.793v-2.13a3.5 3.5 0 1 0-4-5.612V10a6 6 0 1 0-9 5.197v2.222ZM10 17a2 2 0 1 1 0-4a2 2 0 0 1 0 4Zm5 3a2 2 0 1 1 0-4a2 2 0 0 1 0 4Zm-5 3a2 2 0 1 1 0-4a2 2 0 0 1 0 4Z"/>`
	hammerFillPath                = `<path fill="currentColor" d="M17 8V2h3a1 1 0 0 1 1 1v4a1 1 0 0 1-1 1h-3Zm-2 14a1 1 0 0 1-1 1h-4a1 1 0 0 1-1-1V8H2.5V6.074a1 1 0 0 1 .496-.863L8.5 2H15v20Z"/>`
	hammerLinePath                = `<path fill="currentColor" d="M20 2a1 1 0 0 1 1 1v5a1 1 0 0 1-1 1h-5v13a1 1 0 0 1-1 1h-4a1 1 0 0 1-1-1V9H3.5a1 1 0 0 1-1-1V5.618a1 1 0 0 1 .553-.894L8.5 2H20Zm-5 2H8.972L4.5 6.236V7H11v14h2V7h2V4Zm4 0h-2v3h2V4Z"/>`
	handCoinFillPath              = `<path fill="currentColor" d="M9.335 11.502h2.17a4.5 4.5 0 0 1 4.5 4.5H9.004v1h8v-1a5.578 5.578 0 0 0-.885-3h2.886a5 5 0 0 1 4.516 2.852c-2.365 3.121-6.194 5.149-10.516 5.149c-2.761 0-5.1-.59-7-1.625v-9.304a6.966 6.966 0 0 1 3.33 1.428Zm-4.33 7.5a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1v-9a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v9Zm13-14a3 3 0 1 1 0 6.001a3 3 0 0 1 0-6Zm-7-3a3 3 0 1 1 0 6.001a3 3 0 0 1 0-6Z"/>`
	handCoinLinePath              = `<path fill="currentColor" d="M5.005 9.003a1 1 0 0 1 1 1a6.97 6.97 0 0 1 4.33 1.5h2.17c1.332 0 2.53.58 3.354 1.5h3.146a5 5 0 0 1 4.516 2.851c-2.365 3.121-6.194 5.149-10.516 5.149c-2.79 0-5.15-.603-7.061-1.658a.998.998 0 0 1-.94.658h-3a1 1 0 0 1-1-1v-9a1 1 0 0 1 1-1h3Zm1 3v5.022l.045.032c1.794 1.26 4.133 1.946 6.955 1.946c3.004 0 5.798-1.156 7.835-3.13l.133-.133l-.12-.1a2.994 2.994 0 0 0-1.643-.63l-.205-.007h-2.112c.073.322.112.656.112 1v1h-9v-2l6.79-.001l-.034-.079a2.501 2.501 0 0 0-2.092-1.415l-.164-.005h-2.93a4.985 4.985 0 0 0-3.57-1.5Zm-2-1h-1v7h1v-7Zm14-6a3 3 0 1 1 0 6a3 3 0 0 1 0-6Zm0 2a1 1 0 1 0 0 2a1 1 0 0 0 0-2Zm-7-5a3 3 0 1 1 0 6a3 3 0 0 1 0-6Zm0 2a1 1 0 1 0 0 2a1 1 0 0 0 0-2Z"/>`
	handHeartFillPath             = `<path fill="currentColor" d="M9.335 11.502h2.17a4.5 4.5 0 0 1 4.5 4.5H9.004v1h8v-1a5.578 5.578 0 0 0-.885-3h2.886a5 5 0 0 1 4.516 2.852c-2.365 3.12-6.194 5.149-10.516 5.149c-2.761 0-5.1-.591-7-1.625v-9.304a6.966 6.966 0 0 1 3.33 1.428Zm-5.33-2.5a1 1 0 0 1 .993.884l.007.116v9a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1v-9a1 1 0 0 1 1-1h2Zm9.646-5.424l.354.354l.353-.354a2.5 2.5 0 0 1 3.536 3.535l-3.89 3.89l-3.888-3.89a2.5 2.5 0 1 1 3.535-3.535Z"/>`
	handHeartLinePath             = `<path fill="currentColor" d="M5.005 9.003a1 1 0 0 1 1 1a6.97 6.97 0 0 1 4.33 1.5h2.17c1.332 0 2.529.578 3.353 1.498l3.147.002a5 5 0 0 1 4.516 2.851c-2.365 3.12-6.194 5.149-10.516 5.149c-2.79 0-5.15-.604-7.061-1.658a.998.998 0 0 1-.94.658h-3a1 1 0 0 1-1-1v-9a1 1 0 0 1 1-1h3Zm1 3v5.02l.045.034c1.794 1.26 4.133 1.946 6.955 1.946c3.004 0 5.798-1.156 7.835-3.13l.133-.133l-.12-.1a2.994 2.994 0 0 0-1.643-.63l-.205-.007l-2.112-.001c.073.321.112.656.112 1v1h-9v-2h6.79l-.034-.079a2.5 2.5 0 0 0-2.092-1.415l-.164-.005h-2.93a4.984 4.984 0 0 0-3.57-1.5Zm-2-1h-1v7h1v-7Zm9.646-7.425l.354.354l.353-.354a2.5 2.5 0 0 1 3.536 3.535l-3.89 3.89l-3.888-3.89a2.5 2.5 0 1 1 3.535-3.535ZM11.53 4.992a.5.5 0 0 0-.059.637l.058.07l2.475 2.475l2.476-2.475a.5.5 0 0 0 .058-.638l-.058-.069a.5.5 0 0 0-.638-.058l-.07.058l-1.769 1.769l-1.767-1.77l-.068-.057a.5.5 0 0 0-.638.058Z"/>`
	handSanitizerFillPath         = `<path fill="currentColor" d="M17 2v2l-4-.001V6h3v2a4 4 0 0 1 4 4v8a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2v-8a4 4 0 0 1 4-4V6h3V3.999L7.5 4c-.63 0-1.37.49-2.2 1.6L3.7 4.4C4.87 2.84 6.13 2 7.5 2H17Zm-4 10h-2v2H9v2h2v2h2v-2h2v-2h-2v-2Z"/>`
	handSanitizerLinePath         = `<path fill="currentColor" d="M17 2v2l-4-.001V6h3v2a4 4 0 0 1 4 4v8a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2v-8a4 4 0 0 1 4-4V6h3V3.999L7.5 4c-.63 0-1.37.49-2.2 1.6L3.7 4.4C4.87 2.84 6.13 2 7.5 2H17Zm-1 8H8a2 2 0 0 0-2 2v8h12v-8a2 2 0 0 0-2-2Zm-3 2v2h2v2h-2v2h-2v-2H9v-2h2v-2h2Z"/>`
	handbagFillPath               = `<path fill="currentColor" d="M12 2a7 7 0 0 1 7 7h1.074a1 1 0 0 1 .997.923l.846 11a1 1 0 0 1-.92 1.074L20.92 22H3.08a1 1 0 0 1-1-1l.003-.077l.846-11A1 1 0 0 1 3.926 9H5a7 7 0 0 1 7-7Zm2 11h-4v2h4v-2Zm-2-9a5 5 0 0 0-4.995 4.783L7 9h10a5 5 0 0 0-4.783-4.995L12 4Z"/>`
	handbagLinePath               = `<path fill="currentColor" d="M12 2a7 7 0 0 1 7 7h1.074a1 1 0 0 1 .997.923l.846 11a1 1 0 0 1-.92 1.074L20.92 22H3.08a1 1 0 0 1-1-1l.003-.077l.846-11A1 1 0 0 1 3.926 9H5a7 7 0 0 1 7-7Zm7.147 9H4.852l-.693 9H19.84l-.693-9ZM14 13v2h-4v-2h4Zm-2-9a5 5 0 0 0-4.995 4.783L7 9h10a5 5 0 0 0-4.783-4.995L12 4Z"/>`
	hardDriveFillPath             = `<path fill="currentColor" d="M13.95 2H20a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1v-8.05c.329.033.663.05 1 .05c5.523 0 10-4.477 10-10c0-.337-.017-.671-.05-1ZM15 16v2h2v-2h-2ZM11.938 2A8 8 0 0 1 3 10.938V3a1 1 0 0 1 1-1h7.938Z"/>`
	hardDriveLinePath             = `<path fill="currentColor" d="M5 10.938A8.004 8.004 0 0 0 11.938 4H5v6.938Zm0 2.013V20h14V4h-5.05A10.003 10.003 0 0 1 5 12.95ZM4 2h16a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1Zm11 14h2v2h-2v-2Z"/>`
	hardDriveThreeFillPath        = `<path fill="currentColor" d="M5.5 2a1 1 0 0 0-.992.876l-1.5 12A1 1 0 0 0 3 15v6a1 1 0 0 0 1 1h16a1 1 0 0 0 1-1v-6c0-.041-.003-.083-.008-.124l-1.5-12A1 1 0 0 0 18.5 2h-13ZM5 16h14v4H5v-4Zm10 1h2v2h-2v-2Zm-2 0h-2v2h2v-2Z"/>`
	hardDriveThreeLinePath        = `<path fill="currentColor" d="M4.508 2.876A1 1 0 0 1 5.5 2h13a1 1 0 0 1 .992.876l1.5 12c.005.041.008.083.008.124v6a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1v-6a1 1 0 0 1 .008-.124l1.5-12ZM6.383 4l-1.25 10h13.734l-1.25-10H6.383ZM19 16H5v4h14v-4Zm-4 1h2v2h-2v-2Zm-2 0h-2v2h2v-2Z"/>`
	hardDriveTwoFillPath          = `<path fill="currentColor" d="M21 3v18a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h16a1 1 0 0 1 1 1ZM5 16v4h14v-4H5Zm10 1h2v2h-2v-2Z"/>`
	hardDriveTwoLinePath          = `<path fill="currentColor" d="M5 14h14V4H5v10Zm0 2v4h14v-4H5ZM4 2h16a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1Zm11 15h2v2h-2v-2Z"/>`
	hashtagPath                   = `<path fill="currentColor" d="m7.784 14l.42-4H4V8h4.415l.525-5h2.011l-.525 5h3.989l.525-5h2.011l-.525 5H20v2h-3.784l-.42 4H20v2h-4.415l-.525 5h-2.011l.525-5H9.585l-.525 5H7.049l.525-5H4v-2h3.784Zm2.011 0h3.99l.42-4h-3.99l-.42 4Z"/>`
	hazeFillPath                  = `<path fill="currentColor" d="M6.083 13a6 6 0 1 1 11.834 0H6.083ZM2 15h10v2H2v-2Zm12 0h8v2h-8v-2Zm2 4h4v2h-4v-2ZM4 19h10v2H4v-2Zm7-18h2v3h-2V1ZM3.515 4.929l1.414-1.414L7.05 5.636L5.636 7.05L3.515 4.93ZM19.07 3.515l1.414 1.414l-2.121 2.121l-1.414-1.414l2.121-2.121ZM23 11v2h-3v-2h3ZM4 11v2H1v-2h3Z"/>`
	hazeLinePath                  = `<path fill="currentColor" d="M6.083 13a6 6 0 1 1 11.834 0h-2.043a4 4 0 1 0-7.748 0H6.083ZM2 15h10v2H2v-2Zm12 0h8v2h-8v-2Zm2 4h4v2h-4v-2ZM4 19h10v2H4v-2Zm7-18h2v3h-2V1ZM3.515 4.929l1.414-1.414L7.05 5.636L5.636 7.05L3.515 4.93ZM19.07 3.515l1.414 1.414l-2.121 2.121l-1.414-1.414l2.121-2.121ZM23 11v2h-3v-2h3ZM4 11v2H1v-2h3Z"/>`
	hazeTwoFillPath               = `<path fill="currentColor" d="M12 19a1.5 1.5 0 1 1 0 3a1.5 1.5 0 0 1 0-3Zm7.5 0a1.5 1.5 0 1 1 0 3a1.5 1.5 0 0 1 0-3Zm-15 0a1.5 1.5 0 1 1 0 3a1.5 1.5 0 0 1 0-3ZM17 7a5 5 0 0 1 0 10c-1.844 0-3.51-1.04-5-3.121C10.51 15.959 8.844 17 7 17A5 5 0 0 1 7 7c1.844 0 3.51 1.04 5 3.121C13.49 8.041 15.156 7 17 7Zm-5-5a1.5 1.5 0 1 1 0 3a1.5 1.5 0 0 1 0-3ZM4.5 2a1.5 1.5 0 1 1 0 3a1.5 1.5 0 0 1 0-3Zm15 0a1.5 1.5 0 1 1 0 3a1.5 1.5 0 0 1 0-3Z"/>`
	hazeTwoLinePath               = `<path fill="currentColor" d="M12 19a1.5 1.5 0 1 1 0 3a1.5 1.5 0 0 1 0-3Zm7.5 0a1.5 1.5 0 1 1 0 3a1.5 1.5 0 0 1 0-3Zm-15 0a1.5 1.5 0 1 1 0 3a1.5 1.5 0 0 1 0-3ZM17 7a5 5 0 0 1 0 10c-1.844 0-3.51-1.04-5-3.121C10.51 15.959 8.844 17 7 17A5 5 0 0 1 7 7c1.844 0 3.51 1.04 5 3.121C13.49 8.041 15.156 7 17 7ZM7 9a3 3 0 1 0 0 6c1.254 0 2.51-.875 3.759-2.854l.089-.147l-.09-.145c-1.197-1.896-2.4-2.78-3.601-2.85L7 9Zm10 0c-1.254 0-2.51.875-3.759 2.854l-.09.146l.09.146c1.198 1.896 2.4 2.78 3.602 2.85L17 15a3 3 0 1 0 0-6Zm-5-7a1.5 1.5 0 1 1 0 3a1.5 1.5 0 0 1 0-3ZM4.5 2a1.5 1.5 0 1 1 0 3a1.5 1.5 0 0 1 0-3Zm15 0a1.5 1.5 0 1 1 0 3a1.5 1.5 0 0 1 0-3Z"/>`
	hdFillPath                    = `<path fill="currentColor" d="M3 3h18a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Zm4.5 8.25V9H6v6h1.5v-2.25h2V15H11V9H9.5v2.25h-2Zm7-.75H16a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-.5.5h-1.5v-3ZM13 9v6h3a2 2 0 0 0 2-2v-2a2 2 0 0 0-2-2h-3Z"/>`
	hdLinePath                    = `<path fill="currentColor" d="M4 5v14h16V5H4ZM3 3h18a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Zm4.5 8.25h2V9H11v6H9.5v-2.25h-2V15H6V9h1.5v2.25Zm7-.75v3H16a.5.5 0 0 0 .5-.5v-2a.5.5 0 0 0-.5-.5h-1.5ZM13 9h3a2 2 0 0 1 2 2v2a2 2 0 0 1-2 2h-3V9Z"/>`
	headingPath                   = `<path fill="currentColor" d="M17 11V4h2v17h-2v-8H7v8H5V4h2v7h10Z"/>`
	headphoneFillPath             = `<path fill="currentColor" d="M4 12h3a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2v-7C2 6.477 6.477 2 12 2s10 4.477 10 10v7a2 2 0 0 1-2 2h-3a2 2 0 0 1-2-2v-5a2 2 0 0 1 2-2h3a8 8 0 1 0-16 0Z"/>`
	headphoneLinePath             = `<path fill="currentColor" d="M12 4a8 8 0 0 0-8 8h3a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2v-7C2 6.477 6.477 2 12 2s10 4.477 10 10v7a2 2 0 0 1-2 2h-3a2 2 0 0 1-2-2v-5a2 2 0 0 1 2-2h3a8 8 0 0 0-8-8ZM4 14v5h3v-5H4Zm13 0v5h3v-5h-3Z"/>`
	healthBookFillPath            = `<path fill="currentColor" d="M20 2a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6a1 1 0 0 1-1-1v-2H3v-2h2v-2H3v-2h2v-2H3V9h2V7H3V5h2V3a1 1 0 0 1 1-1h14Zm-6 6h-2v3H9v2h2.999L12 16h2l-.001-3H17v-2h-3V8Z"/>`
	healthBookLinePath            = `<path fill="currentColor" d="M20 2a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6a1 1 0 0 1-1-1v-2H3v-2h2v-2H3v-2h2v-2H3V9h2V7H3V5h2V3a1 1 0 0 1 1-1h14Zm-1 2H7v16h12V4Zm-5 4v3h3v2h-3.001L14 16h-2l-.001-3H9v-2h3V8h2Z"/>`
	heartAddFillPath              = `<path fill="currentColor" d="M19 14v3h3v2h-3v3h-2v-3h-3v-2h3v-3h2Zm1.243-9.243a6 6 0 0 1 .507 7.91a6 6 0 0 0-8.06 8.127l-.69.691l-8.479-8.492a6 6 0 0 1 8.48-8.464a5.998 5.998 0 0 1 8.242.228Z"/>`
	heartAddLinePath              = `<path fill="currentColor" d="M19 14v3h3v2h-3v3h-2v-3h-3v-2h3v-3h2Zm1.243-9.243a6 6 0 0 1 .237 8.235l-1.42-1.418c1.33-1.524 1.26-3.914-.233-5.404a4.001 4.001 0 0 0-5.49-.153l-1.335 1.198l-1.336-1.197a4 4 0 0 0-5.686 5.605l8.432 8.446L12 21.485l-8.48-8.492A6 6 0 0 1 12 4.529a5.998 5.998 0 0 1 8.242.228Z"/>`
	heartFillPath                 = `<path fill="currentColor" d="M12.001 4.529a5.998 5.998 0 0 1 8.242.228a6 6 0 0 1 .236 8.236l-8.48 8.492l-8.478-8.492a6 6 0 0 1 8.48-8.464Z"/>`
	heartLinePath                 = `<path fill="currentColor" d="M12.001 4.529a5.998 5.998 0 0 1 8.242.228a6 6 0 0 1 .236 8.236l-8.48 8.492l-8.478-8.492a6 6 0 0 1 8.48-8.464Zm6.826 1.641a3.998 3.998 0 0 0-5.49-.153l-1.335 1.198l-1.336-1.197a4 4 0 0 0-5.686 5.605L12 18.654l7.02-7.03a4 4 0 0 0-.193-5.454Z"/>`
	heartPulseFillPath            = `<path fill="currentColor" d="M16.5 3C19.538 3 22 5.5 22 9c0 7-7.5 11-10 12.5c-1.978-1.186-7.084-3.937-9.131-8.5h4.697l.934-1.556l3 5L13.566 13H17v-2h-4.566l-.934 1.556l-3-5L6.434 11H2.21A9.552 9.552 0 0 1 2 9c0-3.5 2.5-6 5.5-6C9.36 3 11 4 12 5c1-1 2.64-2 4.5-2Z"/>`
	heartPulseLinePath            = `<path fill="currentColor" d="M16.5 3C19.538 3 22 5.5 22 9c0 7-7.5 11-10 12.5c-1.977-1.186-7.083-3.937-9.131-8.499L1 13v-2h1.21A9.552 9.552 0 0 1 2 9c0-3.5 2.5-6 5.5-6C9.36 3 11 4 12 5c1-1 2.64-2 4.5-2Zm0 2c-1.076 0-2.24.57-3.086 1.414L12 7.828l-1.414-1.414C9.74 5.57 8.576 5 7.5 5C5.56 5 4 6.657 4 9c0 .685.09 1.352.267 2h2.167L8.5 7.556l3 5L12.434 11H17v2h-3.434L11.5 16.444l-3-5L7.566 13H5.108c.79 1.374 1.985 2.668 3.537 3.903c.745.593 1.54 1.146 2.421 1.7c.299.189.595.37.934.572c.339-.202.635-.383.934-.571a26.752 26.752 0 0 0 2.42-1.701C18.335 14.533 20 11.943 20 9c0-2.36-1.537-4-3.5-4Z"/>`
	heartThreeFillPath            = `<path fill="currentColor" d="M16.5 3C19.538 3 22 5.5 22 9c0 7-7.5 11-10 12.5C9.5 20 2 16 2 9c0-3.5 2.5-6 5.5-6C9.36 3 11 4 12 5c1-1 2.64-2 4.5-2Z"/>`
	heartThreeLinePath            = `<path fill="currentColor" d="M16.5 3C19.538 3 22 5.5 22 9c0 7-7.5 11-10 12.5C9.5 20 2 16 2 9c0-3.5 2.5-6 5.5-6C9.36 3 11 4 12 5c1-1 2.64-2 4.5-2Zm-3.566 15.604a26.752 26.752 0 0 0 2.42-1.701C18.335 14.533 20 11.943 20 9c0-2.36-1.537-4-3.5-4c-1.076 0-2.24.57-3.086 1.414L12 7.828l-1.414-1.414C9.74 5.57 8.576 5 7.5 5C5.56 5 4 6.657 4 9c0 2.944 1.666 5.533 4.645 7.903c.745.593 1.54 1.146 2.421 1.7c.299.189.595.37.934.572c.339-.202.635-.383.934-.571Z"/>`
	heartTwoFillPath              = `<path fill="currentColor" d="M20.243 4.757a6 6 0 0 1 .236 8.236l-8.48 8.492l-8.478-8.492a6 6 0 0 1 6.74-9.553L6.343 7.358l1.414 1.415L12 4.53l-.013-.014l.014.013a5.998 5.998 0 0 1 8.242.228Z"/>`
	heartTwoLinePath              = `<path fill="currentColor" d="M20.243 4.757a6 6 0 0 1 .236 8.236l-8.48 8.492l-8.478-8.492a6 6 0 0 1 8.48-8.464a5.998 5.998 0 0 1 8.242.228ZM5.172 6.172a4 4 0 0 0-.192 5.451L12 18.654l7.02-7.03a4 4 0 0 0-5.646-5.64l-4.202 4.203l-1.415-1.414l2.825-2.827l-.082-.069a4.001 4.001 0 0 0-5.328.295Z"/>`
	heartsFillPath                = `<path fill="currentColor" d="M17.363 11.045a3.614 3.614 0 0 1 5.084 0a3.55 3.55 0 0 1 0 5.047L17 21.5l-5.447-5.408a3.55 3.55 0 0 1 0-5.047a3.614 3.614 0 0 1 5.084 0l.363.36l.363-.36Zm1.88-6.288a5.986 5.986 0 0 1 1.689 3.338A5.619 5.619 0 0 0 17 8.808a5.617 5.617 0 0 0-6.856.818a5.55 5.55 0 0 0-.178 7.701l.178.185l2.421 2.404L11 21.485l-8.48-8.492A6 6 0 0 1 11 4.529a5.998 5.998 0 0 1 8.242.228Z"/>`
	heartsLinePath                = `<path fill="currentColor" d="M19.243 4.757a5.998 5.998 0 0 1 1.65 5.38c.568.16 1.106.463 1.554.908a3.55 3.55 0 0 1 0 5.047L17 21.5l-3.022-3L11 21.485l-8.48-8.492A6 6 0 0 1 11 4.529a5.998 5.998 0 0 1 8.242.228Zm-6.281 7.708a1.55 1.55 0 0 0 0 2.208L17 18.682l4.038-4.009a1.55 1.55 0 0 0 0-2.208a1.614 1.614 0 0 0-2.268.002l-1.772 1.754l-1.407-1.396l-.363-.36a1.613 1.613 0 0 0-2.266 0Zm-8.79-6.293a4 4 0 0 0-.192 5.451L11 18.654l1.559-1.562l-1.006-1a3.55 3.55 0 0 1 0-5.047a3.614 3.614 0 0 1 5.084 0l.363.36l.363-.36a3.584 3.584 0 0 1 1.465-.882a4.003 4.003 0 0 0-1.001-3.993a3.998 3.998 0 0 0-5.49-.153l-1.335 1.198l-1.336-1.197a4 4 0 0 0-5.494.154Z"/>`
	heavyShowersFillPath          = `<path fill="currentColor" d="M13 18v5h-2v-5H9v3H7v-3.252a8 8 0 1 1 9.458-10.65A5.5 5.5 0 1 1 17.5 18H17v3.001h-2v-3h-2Z"/>`
	heavyShowersLinePath          = `<path fill="currentColor" d="M5 16.93a8 8 0 1 1 11.458-9.831A5.5 5.5 0 0 1 19 17.793v-2.13a3.5 3.5 0 1 0-4-5.612V10a6 6 0 1 0-10 4.472v2.458ZM7 14h2v6H7v-6Zm8 0h2v6h-2v-6Zm-4 3h2v6h-2v-6Z"/>`
	hexagonFillPath               = `<path fill="currentColor" d="M17.5 2.5L23 12l-5.5 9.5h-11L1 12l5.5-9.5h11Z"/>`
	hexagonLinePath               = `<path fill="currentColor" d="M17.5 2.5L23 12l-5.5 9.5h-11L1 12l5.5-9.5h11Zm-1.153 2H7.653L3.311 12l4.342 7.5h8.694l4.342-7.5l-4.342-7.5Z"/>`
	historyFillPath               = `<path fill="currentColor" d="M12 2c5.523 0 10 4.477 10 10s-4.477 10-10 10S2 17.523 2 12h2a8 8 0 1 0 1.865-5.135L8 9H2V3l2.447 2.446A9.977 9.977 0 0 1 12 2Zm1 5v4.585l3.243 3.243l-1.415 1.415L11 12.413V7h2Z"/>`
	historyLinePath               = `<path fill="currentColor" d="M12 2c5.523 0 10 4.477 10 10s-4.477 10-10 10S2 17.523 2 12h2a8 8 0 1 0 1.385-4.5H8v2H2v-6h2V6a9.985 9.985 0 0 1 8-4Zm1 5v4.585l3.243 3.243l-1.415 1.415L11 12.413V7h2Z"/>`
	homeEightFillPath             = `<path fill="currentColor" d="M20 20a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-9H1l10.327-9.388a1 1 0 0 1 1.346 0L23 11h-3v9ZM9 10v6h6v-6H9Zm2 2h2v2h-2v-2Z"/>`
	homeEightLinePath             = `<path fill="currentColor" d="M19 21H5a1 1 0 0 1-1-1v-9H1l10.327-9.388a1 1 0 0 1 1.346 0L23 11h-3v9a1 1 0 0 1-1 1ZM6 19h12V9.158l-6-5.455l-6 5.455V19Zm3-9h6v6H9v-6Zm2 2v2h2v-2h-2Z"/>`
	homeFillPath                  = `<path fill="currentColor" d="M21 20a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V9.489a1 1 0 0 1 .386-.79l8-6.222a1 1 0 0 1 1.228 0l8 6.222a1 1 0 0 1 .386.79v10.51Z"/>`
	homeFiveFillPath              = `<path fill="currentColor" d="M21 20a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V9.489a1 1 0 0 1 .386-.79l8-6.222a1 1 0 0 1 1.228 0l8 6.222a1 1 0 0 1 .386.79v10.51Zm-10-7v6h2v-6h-2Z"/>`
	homeFiveLinePath              = `<path fill="currentColor" d="M13 19h6V9.978l-7-5.445l-7 5.445V19h6v-6h2v6Zm8 1a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V9.489a1 1 0 0 1 .386-.79l8-6.222a1 1 0 0 1 1.228 0l8 6.222a1 1 0 0 1 .386.79v10.51Z"/>`
	homeFourFillPath              = `<path fill="currentColor" d="M20 20a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-9H1l10.327-9.388a1 1 0 0 1 1.346 0L23 11h-3v9Zm-9-7v6h2v-6h-2Z"/>`
	homeFourLinePath              = `<path fill="currentColor" d="M19 21H5a1 1 0 0 1-1-1v-9H1l10.327-9.388a1 1 0 0 1 1.346 0L23 11h-3v9a1 1 0 0 1-1 1Zm-6-2h5V9.158l-6-5.455l-6 5.455V19h5v-6h2v6Z"/>`
	homeGearFillPath              = `<path fill="currentColor" d="M20 20a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-9H1l10.327-9.388a1 1 0 0 1 1.346 0L23 11h-3v9ZM8.592 13.808l-.991.572l1 1.733l.993-.573a3.5 3.5 0 0 0 1.405.811v1.145h2.002V16.35a3.5 3.5 0 0 0 1.405-.81l.992.572L16.4 14.38l-.991-.572a3.504 3.504 0 0 0 0-1.62l.991-.572l-1-1.734l-.993.574A3.499 3.499 0 0 0 13 9.644V8.5h-2.002v1.144a3.5 3.5 0 0 0-1.405.812l-.992-.574L7.6 11.616l.991.572a3.505 3.505 0 0 0 0 1.62Zm3.408.69a1.5 1.5 0 1 1-.002-3.001a1.5 1.5 0 0 1 .002 3Z"/>`
	homeGearLinePath              = `<path fill="currentColor" d="M19 21H5a1 1 0 0 1-1-1v-9H1l10.327-9.388a1 1 0 0 1 1.346 0L23 11h-3v9a1 1 0 0 1-1 1ZM6 19h12V9.158l-6-5.455l-6 5.455V19Zm2.591-5.191a3.508 3.508 0 0 1 0-1.622l-.991-.572l1-1.732l.991.573a3.494 3.494 0 0 1 1.404-.812V8.5h2v1.144c.532.159 1.01.44 1.404.812l.991-.573l1 1.732l-.991.572a3.508 3.508 0 0 1 0 1.622l.991.572l-1 1.731l-.991-.572a3.494 3.494 0 0 1-1.404.811v1.145h-2V16.35a3.495 3.495 0 0 1-1.404-.811l-.991.573l-1-1.732l.991-.572Zm3.404.688a1.5 1.5 0 1 0 0-2.998a1.5 1.5 0 0 0 0 2.998Z"/>`
	homeHeartFillPath             = `<path fill="currentColor" d="M20 20a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-9H1l10.327-9.388a1 1 0 0 1 1.346 0L23 11h-3v9Zm-8-3l3.359-3.359a2.25 2.25 0 0 0-3.182-3.182l-.177.177l-.177-.177a2.25 2.25 0 1 0-3.182 3.182L12 17.001Z"/>`
	homeHeartLinePath             = `<path fill="currentColor" d="M20 20a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-9H1l10.327-9.388a1 1 0 0 1 1.346 0L23 11h-3v9Zm-2-1V9.158l-6-5.455l-6 5.455V19h12Zm-6-2l-3.359-3.359a2.25 2.25 0 1 1 3.182-3.182l.177.177l.177-.177a2.25 2.25 0 1 1 3.182 3.182L12 17.001Z"/>`
	homeLinePath                  = `<path fill="currentColor" d="M21 20a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V9.489a1 1 0 0 1 .386-.79l8-6.222a1 1 0 0 1 1.228 0l8 6.222a1 1 0 0 1 .386.79v10.51Zm-2-1V9.978l-7-5.445l-7 5.445V19h14Z"/>`
	homeOfficeFillPath            = `<path fill="currentColor" d="M20.8 9H12v8h-1v4H5a1 1 0 0 1-1-1v-9H1l10.327-9.388a1 1 0 0 1 1.346 0L20.8 9ZM14 11h9v7h-9v-7Zm-1 10h11v-2H13v2Z"/>`
	homeOfficeLinePath            = `<path fill="currentColor" d="M12.673 1.612L20.8 9h-2.973L12 3.703L6 9.158V19h5v2H5a1 1 0 0 1-1-1v-9H1l10.327-9.388a1 1 0 0 1 1.346 0ZM14 11h9v7h-9v-7Zm2 2v3h5v-3h-5Zm8 8H13v-2h11v2Z"/>`
	homeSevenFillPath             = `<path fill="currentColor" d="M20 20a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-9H1l10.327-9.388a1 1 0 0 1 1.346 0L23 11h-3v9Zm-8-5a2.5 2.5 0 1 0 0-5a2.5 2.5 0 0 0 0 5Z"/>`
	homeSevenLinePath             = `<path fill="currentColor" d="M19 21H5a1 1 0 0 1-1-1v-9H1l10.327-9.388a1 1 0 0 1 1.346 0L23 11h-3v9a1 1 0 0 1-1 1ZM6 19h12V9.158l-6-5.455l-6 5.455V19Zm6-4a2.5 2.5 0 1 1 0-5a2.5 2.5 0 0 1 0 5Z"/>`
	homeSixFillPath               = `<path fill="currentColor" d="M21 20a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V9.489a1 1 0 0 1 .386-.79l8-6.222a1 1 0 0 1 1.228 0l8 6.222a1 1 0 0 1 .386.79v10.51ZM7 15v2h10v-2H7Z"/>`
	homeSixLinePath               = `<path fill="currentColor" d="M21 20a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V9.489a1 1 0 0 1 .386-.79l8-6.222a1 1 0 0 1 1.228 0l8 6.222a1 1 0 0 1 .386.79v10.51Zm-2-1V9.978l-7-5.445l-7 5.445V19h14ZM7 15h10v2H7v-2Z"/>`
	homeSmileFillPath             = `<path fill="currentColor" d="M20 20a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-9H1l10.327-9.388a1 1 0 0 1 1.346 0L23 11h-3v9ZM7.5 13a4.5 4.5 0 1 0 9 0h-2a2.5 2.5 0 0 1-5 0h-2Z"/>`
	homeSmileLinePath             = `<path fill="currentColor" d="M6 19h12V9.158l-6-5.455l-6 5.455V19Zm13 2H5a1 1 0 0 1-1-1v-9H1l10.327-9.388a1 1 0 0 1 1.346 0L23 11h-3v9a1 1 0 0 1-1 1ZM7.5 13h2a2.5 2.5 0 0 0 5 0h2a4.5 4.5 0 1 1-9 0Z"/>`
	homeSmileTwoFillPath          = `<path fill="currentColor" d="M21 20a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V9.314a1 1 0 0 1 .38-.785l8-6.311a1 1 0 0 1 1.24 0l8 6.31a1 1 0 0 1 .38.786V20ZM7 12a5 5 0 0 0 10 0h-2a3 3 0 1 1-6 0H7Z"/>`
	homeSmileTwoLinePath          = `<path fill="currentColor" d="M19 19V9.799l-7-5.522l-7 5.522v9.2h14Zm2 1a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V9.314a1 1 0 0 1 .38-.785l8-6.311a1 1 0 0 1 1.24 0l8 6.31a1 1 0 0 1 .38.786V20ZM7 12h2a3 3 0 1 0 6 0h2a5 5 0 0 1-10 0Z"/>`
	homeThreeFillPath             = `<path fill="currentColor" d="M20 20a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-9H1l10.327-9.388a1 1 0 0 1 1.346 0L23 11h-3v9ZM8 15v2h8v-2H8Z"/>`
	homeThreeLinePath             = `<path fill="currentColor" d="M19 21H5a1 1 0 0 1-1-1v-9H1l10.327-9.388a1 1 0 0 1 1.346 0L23 11h-3v9a1 1 0 0 1-1 1ZM6 19h12V9.158l-6-5.455l-6 5.455V19Zm2-4h8v2H8v-2Z"/>`
	homeTwoFillPath               = `<path fill="currentColor" d="M20 20a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-9H1l10.327-9.388a1 1 0 0 1 1.346 0L23 11h-3v9Z"/>`
	homeTwoLinePath               = `<path fill="currentColor" d="M19 21H5a1 1 0 0 1-1-1v-9H1l10.327-9.388a1 1 0 0 1 1.346 0L23 11h-3v9a1 1 0 0 1-1 1ZM6 19h12V9.158l-6-5.455l-6 5.455V19Z"/>`
	homeWifiFillPath              = `<path fill="currentColor" d="M20 20a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-9H1l10.327-9.388a1 1 0 0 1 1.346 0L23 11h-3v9ZM7 11v2a5 5 0 0 1 5 5h2a7 7 0 0 0-7-7Zm0 4v3h3a3 3 0 0 0-3-3Z"/>`
	homeWifiLinePath              = `<path fill="currentColor" d="M6 19h12V9.158l-6-5.455l-6 5.455V19Zm13 2H5a1 1 0 0 1-1-1v-9H1l10.327-9.388a1 1 0 0 1 1.346 0L23 11h-3v9a1 1 0 0 1-1 1ZM8 10a7 7 0 0 1 7 7h-2a5 5 0 0 0-5-5v-2Zm0 4a3 3 0 0 1 3 3H8v-3Z"/>`
	honorOfKingsFillPath          = `<path fill="currentColor" d="M21.16 4.258c.033 3.5.59 4.81.787 6.701a9.98 9.98 0 0 1-2.875 8.112c-3.666 3.666-9.471 3.89-13.4.673l2.852-2.853a6.002 6.002 0 0 0 8.368-8.368l4.267-4.265Zm-2.83-.002l-2.852 2.853a6.002 6.002 0 0 0-8.368 8.368l-4.267 4.265c-.034-3.5-.591-4.811-.788-6.701A9.98 9.98 0 0 1 4.93 4.929c3.666-3.666 9.471-3.89 13.4-.673ZM12 8a4 4 0 1 1 0 8a4 4 0 0 1 0-8Zm0 2.5a1.5 1.5 0 1 0 0 3a1.5 1.5 0 0 0 0-3Z"/>`
	honorOfKingsLinePath          = `<path fill="currentColor" d="m18.33 4.256l-1.424 1.423a8.001 8.001 0 0 0-12.272 9.444l2.417-2.417a5.002 5.002 0 0 1 7.707-4.879l-1.464 1.465a3.001 3.001 0 0 0-4.001 4l-6.45 6.45c-.034-3.5-.591-4.811-.788-6.701A9.98 9.98 0 0 1 4.93 4.929c3.666-3.666 9.471-3.89 13.4-.673Zm2.83.002c.033 3.5.59 4.81.787 6.701a9.98 9.98 0 0 1-2.875 8.112c-3.666 3.666-9.471 3.89-13.4.673l1.424-1.423a8.001 8.001 0 0 0 12.272-9.444l-2.417 2.417a5.002 5.002 0 0 1-7.707 4.878l1.464-1.464a3.001 3.001 0 0 0 4.001-4l6.45-6.45Z"/>`
	honourFillPath                = `<path fill="currentColor" d="M21 4v14.721a.5.5 0 0 1-.298.458L12 23.03l-8.702-3.85A.5.5 0 0 1 3 18.722V4H1V2h22v2h-2ZM8 12v2h8v-2H8Zm0-4v2h8V8H8Z"/>`
	honourLinePath                = `<path fill="currentColor" d="M21 4v14.721a.5.5 0 0 1-.298.458L12 23.03l-8.702-3.85A.5.5 0 0 1 3 18.722V4H1V2h22v2h-2ZM5 4v13.745l7 3.1l7-3.1V4H5Zm3 4h8v2H8V8Zm0 4h8v2H8v-2Z"/>`
	hospitalFillPath              = `<path fill="currentColor" d="M21 20h2v2H1v-2h2V3a1 1 0 0 1 1-1h16a1 1 0 0 1 1 1v17ZM11 8H9v2h2v2h2v-2h2V8h-2V6h-2v2Zm3 12h2v-6H8v6h2v-4h4v4Z"/>`
	hospitalLinePath              = `<path fill="currentColor" d="M8 20v-6h8v6h3V4H5v16h3Zm2 0h4v-4h-4v4Zm11 0h2v2H1v-2h2V3a1 1 0 0 1 1-1h16a1 1 0 0 1 1 1v17ZM11 8V6h2v2h2v2h-2v2h-2v-2H9V8h2Z"/>`
	hotelBedFillPath              = `<path fill="currentColor" d="M22 11v9h-2v-3H4v3H2V4h2v10h8V7h6a4 4 0 0 1 4 4ZM8 13a3 3 0 1 1 0-6a3 3 0 0 1 0 6Z"/>`
	hotelBedLinePath              = `<path fill="currentColor" d="M22 11v9h-2v-3H4v3H2V4h2v10h8V7h6a4 4 0 0 1 4 4Zm-2 3v-3a2 2 0 0 0-2-2h-4v5h6ZM8 11a1 1 0 1 0 0-2a1 1 0 0 0 0 2Zm0 2a3 3 0 1 1 0-6a3 3 0 0 1 0 6Z"/>`
	hotelFillPath                 = `<path fill="currentColor" d="M17 19h2v-8h-6v8h2v-6h2v6ZM3 19V4a1 1 0 0 1 1-1h14a1 1 0 0 1 1 1v5h2v10h1v2H2v-2h1Zm4-8v2h2v-2H7Zm0 4v2h2v-2H7Zm0-8v2h2V7H7Z"/>`
	hotelLinePath                 = `<path fill="currentColor" d="M22 21H2v-2h1V4a1 1 0 0 1 1-1h14a1 1 0 0 1 1 1v5h2v10h1v2Zm-5-2h2v-8h-6v8h2v-6h2v6Zm0-10V5H5v14h6V9h6ZM7 11h2v2H7v-2Zm0 4h2v2H7v-2Zm0-8h2v2H7V7Z"/>`
	hotspotFillPath               = `<path fill="currentColor" d="M11 2v9h7v10a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h6Zm2 5a2 2 0 0 1 2 2h-2V7Zm0-3a5 5 0 0 1 5 5h-2a3 3 0 0 0-3-3V4Zm0-3a8 8 0 0 1 8 8h-2a6 6 0 0 0-6-6V1Z"/>`
	hotspotLinePath               = `<path fill="currentColor" d="M11 2v2H7v16h10v-9h2v10a1 1 0 0 1-1 1H6a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h5Zm2 5a2 2 0 0 1 2 2h-2V7Zm0-3a5 5 0 0 1 5 5h-2a3 3 0 0 0-3-3V4Zm0-3a8 8 0 0 1 8 8h-2a6 6 0 0 0-6-6V1Z"/>`
	hourglassFillPath             = `<path fill="currentColor" d="M6 4H4V2h16v2h-2v2c0 1.615-.816 2.915-1.844 3.977c-.703.726-1.558 1.395-2.425 2.023c.867.628 1.722 1.297 2.425 2.023C17.184 15.085 18 16.385 18 18v2h2v2H4v-2h2v-2c0-1.615.816-2.915 1.844-3.977c.703-.726 1.558-1.395 2.425-2.023c-.867-.628-1.722-1.297-2.425-2.023C6.816 8.915 6 7.615 6 6V4Zm2 0v2c0 .685.26 1.335.771 2h6.458c.51-.665.771-1.315.771-2V4H8Zm4 9.222c-1.045.738-1.992 1.441-2.719 2.192a6.84 6.84 0 0 0-.51.586h6.458a6.851 6.851 0 0 0-.51-.586c-.727-.751-1.674-1.454-2.719-2.192Z"/>`
	hourglassLinePath             = `<path fill="currentColor" d="M6 4H4V2h16v2h-2v2c0 1.615-.816 2.915-1.844 3.977c-.703.726-1.558 1.395-2.425 2.023c.867.628 1.722 1.297 2.425 2.023C17.184 15.085 18 16.385 18 18v2h2v2H4v-2h2v-2c0-1.615.816-2.915 1.844-3.977c.703-.726 1.558-1.395 2.425-2.023c-.867-.628-1.722-1.297-2.425-2.023C6.816 8.915 6 7.615 6 6V4Zm2 0v2c0 .885.434 1.71 1.281 2.586c.727.751 1.674 1.454 2.719 2.192c1.045-.738 1.992-1.441 2.719-2.192C15.566 7.71 16 6.885 16 6V4H8Zm4 9.222c-1.045.738-1.992 1.441-2.719 2.192C8.434 16.29 8 17.115 8 18v2h8v-2c0-.885-.434-1.71-1.281-2.586c-.727-.751-1.674-1.454-2.719-2.192Z"/>`
	hourglassTwoFillPath          = `<path fill="currentColor" d="M4 2h16v4.46L13.537 12L20 17.54V22H4v-4.46L10.463 12L4 6.46V2Zm12.297 5L18 5.54V4H6v1.54L7.703 7h8.594ZM12 13.317L6 18.46V20h1l5-3l5 3h1v-1.54l-6-5.143Z"/>`
	hourglassTwoLinePath          = `<path fill="currentColor" d="M4 2h16v4.46L13.537 12L20 17.54V22H4v-4.46L10.463 12L4 6.46V2Zm8 8.683l6-5.143V4H6v1.54l6 5.143Zm0 2.634L6 18.46V20h12v-1.54l-6-5.143Z"/>`
	hqFillPath                    = `<path fill="currentColor" d="M3 3h18a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Zm4.5 8.25V9H6v6h1.5v-2.25h2V15H11V9H9.5v2.25h-2ZM16.25 15H17a1 1 0 0 0 1-1v-4a1 1 0 0 0-1-1h-3a1 1 0 0 0-1 1v4a1 1 0 0 0 1 1h.75v1.5h1.5V15Zm-1.75-4.5h2v3h-2v-3Z"/>`
	hqLinePath                    = `<path fill="currentColor" d="M4 5v14h16V5H4ZM3 3h18a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Zm4.5 8.25h2V9H11v6H9.5v-2.25h-2V15H6V9h1.5v2.25ZM16.25 15v1.5h-1.5V15H14a1 1 0 0 1-1-1v-4a1 1 0 0 1 1-1h3a1 1 0 0 1 1 1v4a1 1 0 0 1-1 1h-.75Zm-1.75-4.5v3h2v-3h-2Z"/>`
	htmlFiveFillPath              = `<path fill="currentColor" d="m12 18.178l4.62-1.256l.623-6.778H9.026L8.822 7.89h8.626l.227-2.211H6.325l.636 6.678h7.82l-.261 2.866l-2.52.667l-2.52-.667l-.158-1.844h-2.27l.329 3.544L12 18.178ZM3 2h18l-1.623 18L12 22l-7.377-2L3 2Z"/>`
	htmlFiveLinePath              = `<path fill="currentColor" d="m12 18.178l-4.62-1.256l-.328-3.544h2.27l.158 1.844l2.52.667l2.52-.667l.26-2.866H6.96l-.635-6.678h11.35l-.227 2.21H8.822l.204 2.256h8.217l-.624 6.778L12 18.178ZM3 2h18l-1.623 18L12 22l-7.377-2L3 2Zm2.188 2L6.49 18.434L12 19.928l5.51-1.494L18.812 4H5.188Z"/>`
	ieFillPath                    = `<path fill="currentColor" d="M8.613 20.12c-2.744 1.49-5.113 1.799-6.422.49c-1.344-1.34-.628-4.851 1.313-8.373A23.204 23.204 0 0 1 7.128 7.32c.187-.187 1.125-1.123 1.187-1.123c0 0-.5.312-.562.312c-1.95 1.095-3.663 3.08-4.037 3.525a9.004 9.004 0 0 1 9.468-7.009c3.095-1.402 5.974-1.726 7.192-.51c1.125 1.123 1.062 2.995.125 5.242c-.01.021-.018.043-.027.064a8.96 8.96 0 0 1 1.027 4.18c0 .378-.024.752-.07 1.12h-.804a4.037 4.037 0 0 1-.142.002H8.69v.187c.062 1.997 1.812 3.744 3.937 3.744c1.5 0 2.937-.811 3.562-1.997h4.78A9.003 9.003 0 0 1 8.613 20.12Zm-.607-.32a9.03 9.03 0 0 1-3.972-4.743c-1.161 2.282-1.46 4.19-.469 5.18c.813.812 2.438.624 4.438-.436l.003-.002ZM20.173 7.291l.015-.034c.75-1.622.813-2.994.125-3.806c-.869-.867-2.54-.75-4.522.168a9.032 9.032 0 0 1 4.382 3.672Zm-3.609 3.461v-.062c-.125-2.06-1.75-3.62-3.75-3.62c-2.125 0-3.936 1.685-4.061 3.62v.062h7.811Z"/>`
	ieLinePath                    = `<path fill="currentColor" d="M18.16 10a6.003 6.003 0 0 0-11.318 0H18.16ZM6.584 13a6.002 6.002 0 0 0 11.08 2.057h3.304A9.003 9.003 0 0 1 8.613 20.12c-2.744 1.491-5.113 1.8-6.422.492c-1.344-1.342-.628-4.852 1.313-8.374a23.625 23.625 0 0 1 2.498-3.665c.36-.433.735-.851 1.126-1.252c-.275.055-1.88.851-3.412 2.714a9.004 9.004 0 0 1 9.468-7.009c3.095-1.402 5.974-1.726 7.192-.51c1.125 1.123 1.062 2.995.125 5.242c-.01.021-.018.043-.027.064a8.96 8.96 0 0 1 1.027 4.18c0 .337-.019.67-.055 1H6.584Zm1.422 6.8a9.03 9.03 0 0 1-3.972-4.743c-1.161 2.282-1.46 4.19-.469 5.18c.813.812 2.438.624 4.438-.436l.003-.002ZM20.173 7.291l.015-.034c.75-1.622.813-2.994.125-3.806c-.869-.867-2.54-.75-4.522.168a9.032 9.032 0 0 1 4.382 3.672Z"/>`
	imageAddFillPath              = `<path fill="currentColor" d="M21 15v3h3v2h-3v3h-2v-3h-3v-2h3v-3h2Zm.008-12c.548 0 .992.445.992.993v9.349A5.99 5.99 0 0 0 20 13V5H4l.001 14l9.292-9.293a.999.999 0 0 1 1.32-.084l.094.085l3.545 3.55a6.003 6.003 0 0 0-3.91 7.743L2.992 21A.993.993 0 0 1 2 20.007V3.993A1 1 0 0 1 2.992 3h18.016ZM8 7a2 2 0 1 1 0 4a2 2 0 0 1 0-4Z"/>`
	imageAddLinePath              = `<path fill="currentColor" d="M21 15v3h3v2h-3v3h-2v-3h-3v-2h3v-3h2Zm.008-12c.548 0 .992.445.992.993V13h-2V5H4v13.999L14 9l3 3v2.829l-3-3L6.827 19H14v2H2.992A.993.993 0 0 1 2 20.007V3.993A1 1 0 0 1 2.992 3h18.016ZM8 7a2 2 0 1 1 0 4a2 2 0 0 1 0-4Z"/>`
	imageEditFillPath             = `<path fill="currentColor" d="M20 3a1 1 0 0 1 1 1v1.757l-2 2V5H5v8.1l4-4l4.328 4.329l-1.327 1.327l-.006 4.239l4.246.006l1.33-1.33L18.899 19H19v-2.758l2-2V20a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h16Zm1.778 4.808l1.414 1.414L15.414 17l-1.416-.002l.002-1.412l7.778-7.778ZM15.5 7a1.5 1.5 0 1 1 0 3a1.5 1.5 0 0 1 0-3Z"/>`
	imageEditLinePath             = `<path fill="currentColor" d="M20 3a1 1 0 0 1 1 1v1.757l-2 2V5H5v8.1l4-4l4.328 4.329l-1.415 1.413L9 11.93l-4 3.999V19h10.533l.708.001l1.329-1.33L18.9 19h.1v-2.758l2-2V20a1 1 0 0 1-1 1H4c-.55 0-1-.45-1-1V4a1 1 0 0 1 1-1h16Zm1.778 4.808l1.414 1.414L15.414 17l-1.416-.002l.002-1.412l7.778-7.778ZM15.5 7a1.5 1.5 0 1 1 0 3a1.5 1.5 0 0 1 0-3Z"/>`
	imageFillPath                 = `<path fill="currentColor" d="M20 5H4v14l9.292-9.294a1 1 0 0 1 1.415 0L20 15.01V5ZM2 3.993A1 1 0 0 1 2.992 3h18.016c.548 0 .992.445.992.993v16.014a1 1 0 0 1-.992.993H2.992A.993.993 0 0 1 2 20.007V3.993ZM8 11a2 2 0 1 1 0-4a2 2 0 0 1 0 4Z"/>`
	imageLinePath                 = `<path fill="currentColor" d="M2.992 21A.993.993 0 0 1 2 20.007V3.993A1 1 0 0 1 2.992 3h18.016c.548 0 .992.445.992.993v16.014a1 1 0 0 1-.992.993H2.992ZM20 15V5H4v14L14 9l6 6Zm0 2.828l-6-6L6.828 19H20v-1.172ZM8 11a2 2 0 1 1 0-4a2 2 0 0 1 0 4Z"/>`
	imageTwoFillPath              = `<path fill="currentColor" d="m5 11.1l2-2l5.5 5.5l3.5-3.5l3 3V5H5v6.1ZM4 3h16a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Zm11.5 7a1.5 1.5 0 1 1 0-3a1.5 1.5 0 0 1 0 3Z"/>`
	imageTwoLinePath              = `<path fill="currentColor" d="m5 11.1l2-2l5.5 5.5l3.5-3.5l3 3V5H5v6.1Zm0 2.829V19h3.1l2.986-2.985L7 11.929l-2 2ZM10.929 19H19v-2.071l-3-3L10.929 19ZM4 3h16a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Zm11.5 7a1.5 1.5 0 1 1 0-3a1.5 1.5 0 0 1 0 3Z"/>`
	inboxArchiveFillPath          = `<path fill="currentColor" d="M4 3h16l2 4v13a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V7.004L4 3Zm9 11v-4h-2v4H8l4 4l4-4h-3Zm6.764-7l-1-2H5.237l-1 2h15.527Z"/>`
	inboxArchiveLinePath          = `<path fill="currentColor" d="m20 3l2 4v13a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V7.004L4 3h16Zm0 6H4v10h16V9Zm-7 1v4h3l-4 4l-4-4h3v-4h2Zm5.764-5H5.237l-1 2h15.527l-1-2Z"/>`
	inboxFillPath                 = `<path fill="currentColor" d="M3 3h18a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Zm6 9a3 3 0 1 0 6 0h5V5H4v7h5Z"/>`
	inboxLinePath                 = `<path fill="currentColor" d="M21 3a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h18ZM7.416 14H4v5h16v-5h-3.416a5.001 5.001 0 0 1-9.168 0ZM20 5H4v7h5a3 3 0 1 0 6 0h5V5Z"/>`
	inboxTwoFillPath              = `<path fill="currentColor" d="M5 3a1 1 0 0 0-.976.783l-2 9A1 1 0 0 0 2 13v7a1 1 0 0 0 1 1h18a1 1 0 0 0 1-1v-7a.988.988 0 0 0-.024-.217l-2-9A1 1 0 0 0 19 3H5Zm14.753 9H15a3 3 0 1 1-6 0H4.247l1.555-7h12.396l1.555 7Z"/>`
	inboxTwoLinePath              = `<path fill="currentColor" d="M4.024 3.783A1 1 0 0 1 5 3h14a1 1 0 0 1 .976.783l2 9A.988.988 0 0 1 22 13v7a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1v-7a1 1 0 0 1 .024-.217l2-9ZM5.802 5l-1.555 7H9a3 3 0 1 0 6 0h4.753l-1.555-7H5.802Zm10.782 9a5.001 5.001 0 0 1-9.168 0H4v5h16v-5h-3.416Z"/>`
	inboxUnarchiveFillPath        = `<path fill="currentColor" d="m20 3l2 4v13a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V7.004L4 3h16Zm-8 7l-4 4h3v4h2v-4h3l-4-4Zm6.764-5H5.236l-.999 2h15.527l-1-2Z"/>`
	inboxUnarchiveLinePath        = `<path fill="currentColor" d="m20 3l2 4v13a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V7.004L4 3h16Zm0 6H4v10h16V9Zm-8 1l4 4h-3v4h-2v-4H8l4-4Zm6.764-5H5.236l-.999 2h15.527l-1-2Z"/>`
	increaseDecreaseFillPath      = `<path fill="currentColor" d="M3.005 3.003h18a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1h-18a1 1 0 0 1-1-1v-16a1 1 0 0 1 1-1Zm6 8v-2h-2v2h-2v2h2v2h2v-2h2v-2h-2Zm4 0v2h6v-2h-6Z"/>`
	increaseDecreaseLinePath      = `<path fill="currentColor" d="M3.005 3.003h18a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1h-18a1 1 0 0 1-1-1v-16a1 1 0 0 1 1-1Zm1 2v14h16v-14h-16Zm5 6h2v2h-2v2h-2v-2h-2v-2h2v-2h2v2Zm4 0h6v2h-6v-2Z"/>`
	indentDecreasePath            = `<path fill="currentColor" d="M3 4h18v2H3V4Zm0 15h18v2H3v-2Zm8-5h10v2H11v-2Zm0-5h10v2H11V9Zm-8 3.5L7 9v7l-4-3.5Z"/>`
	indentIncreasePath            = `<path fill="currentColor" d="M3 4h18v2H3V4Zm0 15h18v2H3v-2Zm8-5h10v2H11v-2Zm0-5h10v2H11V9Zm-4 3.5L3 16V9l4 3.5Z"/>`
	indeterminateCircleFillPath   = `<path fill="currentColor" d="M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10ZM7 11v2h10v-2H7Z"/>`
	indeterminateCircleLinePath   = `<path fill="currentColor" d="M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10Zm0-2a8 8 0 1 0 0-16a8 8 0 0 0 0 16Zm-5-9h10v2H7v-2Z"/>`
	infinityFillPath              = `<path fill="currentColor" d="M3 12a3.5 3.5 0 0 0 3.5 3.5c1.204 0 2.02-.434 2.7-1.113c.621-.623 1.121-1.44 1.655-2.387c-.534-.947-1.034-1.764-1.656-2.387C8.52 8.933 7.704 8.5 6.5 8.5A3.5 3.5 0 0 0 3 12Zm3.5 5.5a5.5 5.5 0 1 1 0-11c1.796 0 3.105.691 4.113 1.7c.536.534.987 1.162 1.387 1.802c.4-.64.851-1.268 1.387-1.803C14.395 7.191 15.703 6.5 17.5 6.5a5.5 5.5 0 1 1 0 11c-1.796 0-3.105-.691-4.113-1.7c-.536-.534-.987-1.162-1.387-1.802c-.4.64-.851 1.268-1.387 1.803C9.605 16.809 8.297 17.5 6.5 17.5Zm6.645-5.5c.534.947 1.034 1.764 1.656 2.387c.68.68 1.496 1.113 2.699 1.113a3.5 3.5 0 1 0 0-7c-1.203 0-2.02.434-2.7 1.113c-.621.623-1.121 1.44-1.655 2.387Z"/>`
	infinityLinePath              = `<path fill="currentColor" d="M3 12a3.5 3.5 0 0 1 3.5-3.5c1.204 0 2.02.434 2.7 1.113c.726.727 1.285 1.72 1.926 2.873l.034.06c.6 1.082 1.283 2.311 2.227 3.255c1.008 1.008 2.316 1.699 4.113 1.699a5.5 5.5 0 1 0-4.158-9.1a23.58 23.58 0 0 1 1.122 1.857A3.5 3.5 0 1 1 17.5 15.5c-1.203 0-2.02-.434-2.7-1.113c-.726-.727-1.285-1.72-1.926-2.873l-.034-.06c-.6-1.082-1.283-2.311-2.227-3.255C9.605 7.191 8.297 6.5 6.5 6.5a5.5 5.5 0 1 0 4.158 9.1a23.577 23.577 0 0 1-1.122-1.857A3.5 3.5 0 0 1 3 12Z"/>`
	informationFillPath           = `<path fill="currentColor" d="M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10Zm-1-11v6h2v-6h-2Zm0-4v2h2V7h-2Z"/>`
	informationLinePath           = `<path fill="currentColor" d="M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10Zm0-2a8 8 0 1 0 0-16a8 8 0 0 0 0 16ZM11 7h2v2h-2V7Zm0 4h2v6h-2v-6Z"/>`
	infraredThermometerFillPath   = `<path fill="currentColor" d="M21 2v9h-3.001L18 12a4 4 0 0 1-4 4h-1.379l-.613 3.111l.911 1.321A1 1 0 0 1 12.096 22H3l2.313-10.024L3 11l4-9h14Zm-5.001 9h-2.394l-.591 3H14a2 2 0 0 0 2-2l-.001-1Z"/>`
	infraredThermometerLinePath   = `<path fill="currentColor" d="M21 2v9h-3.001L18 12a4 4 0 0 1-4 4h-1.379l-.613 3.111l.911 1.321A1 1 0 0 1 12.096 22H3l2.313-10.024L3 11l4-9h14Zm-2 2H8.3L5.655 9.95l1.985.837L5.514 20h4.678l-.309-.448L11.96 9H19V4Zm-3.001 7h-2.394l-.591 3H14a2 2 0 0 0 2-2l-.001-1Z"/>`
	inkBottleFillPath             = `<path fill="currentColor" d="m16 8.997l4.371 1.748a1 1 0 0 1 .629.929v9.323a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1v-9.323a1 1 0 0 1 .629-.929L8 8.997h8Zm4 5H8v5h12v-5Zm-4-11a1 1 0 0 1 1 1v4H7v-4a1 1 0 0 1 1-1h8Z"/>`
	inkBottleLinePath             = `<path fill="currentColor" d="m16 8.997l4.371 1.748a1 1 0 0 1 .629.929v9.323a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1v-9.323a1 1 0 0 1 .629-.929L8 8.997h8Zm-.385 2h-7.23L5 12.35v7.646h14v-1H8v-5h11V12.35l-3.385-1.354Zm.385-8a1 1 0 0 1 1 1v4H7v-4a1 1 0 0 1 1-1h8Zm-1 2H9v1h6v-1Z"/>`
	inputCursorMovePath           = `<path fill="currentColor" d="M8 21v-2h3V5H8V3h8v2h-3v14h3v2H8ZM18.05 7.05L23 12l-4.95 4.95l-1.414-1.414L20.172 12l-3.536-3.536L18.05 7.05Zm-12.1 0l1.414 1.414L3.828 12l3.536 3.536L5.95 16.95L1 12l4.95-4.95Z"/>`
	inputMethodFillPath           = `<path fill="currentColor" d="M4 3h16a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Zm5.869 12h4.262l.82 2h2.216L13 7h-2L6.833 17H9.05l.82-2Zm.82-2L12 9.8l1.312 3.2h-2.623Z"/>`
	inputMethodLinePath           = `<path fill="currentColor" d="M5 5v14h14V5H5ZM4 3h16a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Zm5.869 12l-.82 2H6.833L11 7h2l4.167 10H14.95l-.82-2H9.87Zm.82-2h2.623L12 9.8L10.688 13Z"/>`
	insertColumnLeftPath          = `<path fill="currentColor" d="M20 3a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1h-6a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h6Zm-1 2h-4v14h4V5ZM6 7a5 5 0 1 1 0 10A5 5 0 0 1 6 7Zm1 2H5v1.999L3 11v2l2-.001V15h2v-2.001L9 13v-2l-2-.001V9Z"/>`
	insertColumnRightPath         = `<path fill="currentColor" d="M10 3a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h6ZM9 5H5v14h4V5Zm9 2a5 5 0 1 1 0 10a5 5 0 0 1 0-10Zm1 2h-2v1.999L15 11v2l2-.001V15h2v-2.001L21 13v-2l-2-.001V9Z"/>`
	insertRowBottomPath           = `<path fill="currentColor" d="M12 13a5 5 0 1 1 0 10a5 5 0 0 1 0-10Zm1 2h-2v1.999L9 17v2l2-.001V21h2v-2.001L15 19v-2l-2-.001V15Zm7-12a1 1 0 0 1 1 1v6a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h16ZM5 5v4h14V5H5Z"/>`
	insertRowTopPath              = `<path fill="currentColor" d="M20 13a1 1 0 0 1 1 1v6a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1v-6a1 1 0 0 1 1-1h16Zm-1 2H5v4h14v-4ZM12 1a5 5 0 1 1 0 10a5 5 0 0 1 0-10Zm1 2h-2v1.999L9 5v2l2-.001V9h2V6.999L15 7V5l-2-.001V3Z"/>`
	instagramFillPath             = `<path fill="currentColor" d="M13.028 2.001a78.82 78.82 0 0 1 2.189.022l.194.007c.224.008.445.018.712.03c1.064.05 1.79.218 2.427.465c.66.254 1.216.598 1.772 1.154a4.908 4.908 0 0 1 1.153 1.771c.247.637.415 1.364.465 2.428c.012.266.022.488.03.712l.006.194a79 79 0 0 1 .023 2.188l.001.746v1.31a78.836 78.836 0 0 1-.023 2.189l-.006.194c-.008.224-.018.445-.03.712c-.05 1.064-.22 1.79-.466 2.427a4.884 4.884 0 0 1-1.153 1.772a4.915 4.915 0 0 1-1.772 1.153c-.637.247-1.363.415-2.427.465c-.267.012-.488.022-.712.03l-.194.006a79 79 0 0 1-2.189.023l-.746.001h-1.309a78.836 78.836 0 0 1-2.189-.023l-.194-.006a60.64 60.64 0 0 1-.712-.03c-1.064-.05-1.79-.22-2.428-.466a4.89 4.89 0 0 1-1.771-1.153a4.904 4.904 0 0 1-1.154-1.772c-.247-.637-.415-1.363-.465-2.427a74.367 74.367 0 0 1-.03-.712l-.005-.194A79.053 79.053 0 0 1 2 13.028v-2.056a78.82 78.82 0 0 1 .022-2.188l.007-.194c.008-.224.018-.446.03-.712c.05-1.065.218-1.79.465-2.428A4.88 4.88 0 0 1 3.68 3.68a4.897 4.897 0 0 1 1.77-1.155c.638-.247 1.363-.415 2.428-.465l.712-.03l.194-.005A79.053 79.053 0 0 1 10.972 2h2.056Zm-1.028 5A5 5 0 1 0 12 17a5 5 0 0 0 0-10Zm0 2A3 3 0 1 1 12.001 15a3 3 0 0 1 0-6Zm5.25-3.5a1.25 1.25 0 0 0 0 2.498a1.25 1.25 0 0 0 0-2.5Z"/>`
	instagramLinePath             = `<path fill="currentColor" d="M12.001 9a3 3 0 1 0 0 6a3 3 0 0 0 0-6Zm0-2a5 5 0 1 1 0 10a5 5 0 0 1 0-10Zm6.5-.25a1.25 1.25 0 0 1-2.5 0a1.25 1.25 0 0 1 2.5 0ZM12.001 4c-2.474 0-2.878.007-4.029.058c-.784.037-1.31.142-1.798.332a2.886 2.886 0 0 0-1.08.703a2.89 2.89 0 0 0-.704 1.08c-.19.49-.295 1.015-.331 1.798C4.007 9.075 4 9.461 4 12c0 2.475.007 2.878.058 4.029c.037.783.142 1.31.331 1.797c.17.435.37.748.702 1.08c.337.336.65.537 1.08.703c.494.191 1.02.297 1.8.333C9.075 19.994 9.461 20 12 20c2.475 0 2.878-.007 4.029-.058c.782-.037 1.308-.142 1.797-.331a2.91 2.91 0 0 0 1.08-.703c.337-.336.538-.649.704-1.08c.19-.492.296-1.018.332-1.8c.052-1.103.058-1.49.058-4.028c0-2.474-.007-2.878-.058-4.029c-.037-.782-.143-1.31-.332-1.798a2.912 2.912 0 0 0-.703-1.08a2.884 2.884 0 0 0-1.08-.704c-.49-.19-1.016-.295-1.798-.331C14.926 4.006 14.54 4 12 4Zm0-2c2.717 0 3.056.01 4.123.06c1.064.05 1.79.217 2.427.465c.66.254 1.216.598 1.772 1.153a4.908 4.908 0 0 1 1.153 1.772c.247.637.415 1.363.465 2.428c.047 1.066.06 1.405.06 4.122c0 2.717-.01 3.056-.06 4.122c-.05 1.065-.218 1.79-.465 2.428a4.884 4.884 0 0 1-1.153 1.772a4.915 4.915 0 0 1-1.772 1.153c-.637.247-1.363.415-2.427.465c-1.067.047-1.406.06-4.123.06c-2.717 0-3.056-.01-4.123-.06c-1.064-.05-1.789-.218-2.427-.465a4.89 4.89 0 0 1-1.772-1.153a4.905 4.905 0 0 1-1.153-1.772c-.248-.637-.415-1.363-.465-2.428c-.048-1.066-.06-1.405-.06-4.122c0-2.717.01-3.056.06-4.122c.05-1.066.217-1.79.465-2.428a4.88 4.88 0 0 1 1.153-1.772a4.897 4.897 0 0 1 1.772-1.153c.637-.248 1.362-.415 2.427-.465C8.945 2.013 9.284 2 12.001 2Z"/>`
	installFillPath               = `<path fill="currentColor" d="M11 2v5H8l4 4l4-4h-3V2h7a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h7Zm8 14H5v4h14v-4Zm-2 1v2h-2v-2h2Z"/>`
	installLinePath               = `<path fill="currentColor" d="M9 2v2H5l-.001 10h14L19 4h-4V2h5a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h5Zm9.999 14h-14L5 20h14l-.001-4ZM17 17v2h-2v-2h2ZM13 2v5h3l-4 4l-4-4h3V2h2Z"/>`
	instanceFillPath              = `<path fill="currentColor" d="m12 1l9.5 5.5v11L12 23l-9.5-5.5v-11L12 1ZM6.499 9.97L11 12.578v5.048h2v-5.048l4.501-2.606l-1.002-1.731L12 10.845L7.501 8.24L6.499 9.97Z"/>`
	instanceLinePath              = `<path fill="currentColor" d="M4.5 7.653v8.694l7.5 4.342l7.5-4.342V7.653L12 3.311L4.5 7.653ZM12 1l9.5 5.5v11L12 23l-9.5-5.5v-11L12 1ZM6.499 9.97L11 12.577v5.049h2v-5.049l4.501-2.605l-1.002-1.731L12 10.844L7.501 8.24L6.499 9.97Z"/>`
	invisionFillPath              = `<path fill="currentColor" d="M4.001 3h16a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1h-16a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Zm2.988 11.065c-.06.267-.091.555-.091.79c0 .927.483 1.542 1.51 1.542c.85 0 1.54-.526 2.037-1.375l-.303 1.267h1.69l.966-4.031c.242-1.02.71-1.55 1.419-1.55c.558 0 .905.36.905.957c0 .173-.015.361-.075.565l-.498 1.853a2.893 2.893 0 0 0-.106.785c0 .88.498 1.523 1.54 1.523c.89 0 1.6-.596 1.992-2.025l-.664-.267c-.332.958-.62 1.13-.846 1.13c-.226 0-.347-.156-.347-.47c0-.141.03-.298.076-.487l.483-1.805c.12-.424.166-.8.166-1.145c0-1.35-.785-2.055-1.736-2.055c-.89 0-1.796.835-2.248 1.715l.331-1.579h-2.58l-.362 1.39h1.207l-.744 3.098c-.584 1.35-1.656 1.372-1.79 1.34c-.222-.051-.363-.139-.363-.438c0-.172.03-.42.106-.718l1.132-4.672H6.928l-.362 1.39h1.192l-.77 3.272Zm1.637-5.44a1.125 1.125 0 1 0 0-2.25a1.125 1.125 0 0 0 0 2.25Z"/>`
	invisionLinePath              = `<path fill="currentColor" d="M4.001 3h16a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1h-16a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Zm1 2v14h14V5h-14Zm1.988 9.065l.77-3.271H6.565l.362-1.39h2.868l-1.132 4.67a3.071 3.071 0 0 0-.106.72c0 .298.141.386.362.437c.135.032 1.207.01 1.791-1.34l.744-3.097h-1.207l.362-1.39h2.58l-.332 1.578c.453-.88 1.359-1.715 2.25-1.715c.95 0 1.735.704 1.735 2.055c0 .345-.046.721-.166 1.145l-.483 1.805a2.158 2.158 0 0 0-.076.487c0 .314.121.47.347.47c.227 0 .514-.172.846-1.13l.664.267c-.393 1.429-1.102 2.025-1.993 2.025c-1.041 0-1.539-.643-1.539-1.523c0-.25.03-.518.106-.785l.498-1.853a1.96 1.96 0 0 0 .075-.565c0-.596-.347-.958-.905-.958c-.71 0-1.178.53-1.419 1.55l-.966 4.032h-1.69l.303-1.267c-.497.85-1.187 1.375-2.038 1.375c-1.026 0-1.509-.615-1.509-1.542c0-.235.03-.523.09-.79Zm1.637-5.44a1.125 1.125 0 1 1 0-2.25a1.125 1.125 0 0 1 0 2.25Z"/>`
	italicPath                    = `<path fill="currentColor" d="M15 20H7v-2h2.927l2.116-12H9V4h8v2h-2.927l-2.116 12H15v2Z"/>`
	javascriptFillPath            = `<path fill="currentColor" d="M6 3a3 3 0 0 0-3 3v12a3 3 0 0 0 3 3h12a3 3 0 0 0 3-3V6a3 3 0 0 0-3-3H6Zm7.334 13.055c.72.58 1.438.865 2.156.858c.44 0 .778-.08 1.012-.242a.75.75 0 0 0 .341-.66a.971.971 0 0 0-.34-.748c-.235-.205-.679-.41-1.332-.616c-.784-.227-1.39-.52-1.815-.88c-.418-.36-.63-.862-.638-1.507c0-.609.264-1.118.792-1.529c.514-.41 1.17-.616 1.97-.616c1.114 0 2.009.271 2.683.814l-.77 1.199a2.597 2.597 0 0 0-.935-.462a3.211 3.211 0 0 0-.946-.165c-.38 0-.685.07-.913.209c-.227.14-.34.323-.34.55c0 .25.139.462.417.638c.28.169.756.356 1.43.561c.814.242 1.394.565 1.738.968c.345.403.517.917.517 1.54c0 .638-.245 1.188-.737 1.65c-.484.455-1.188.693-2.112.715c-1.21 0-2.222-.363-3.036-1.089l.858-1.188Zm-5.53.638c.235.147.517.22.847.22c.345 0 .63-.099.858-.297c.227-.205.341-.561.341-1.067v-5.302h1.485v5.588c-.022.865-.271 1.489-.748 1.87a2.466 2.466 0 0 1-.891.484a3.296 3.296 0 0 1-.935.143c-.55 0-1.038-.095-1.463-.286c-.455-.205-.836-.568-1.144-1.089l1.034-.847c.19.257.396.451.616.583Z"/>`
	javascriptLinePath            = `<path fill="currentColor" d="m13.334 16.055l-.858 1.188c.814.726 1.826 1.089 3.036 1.089c.924-.022 1.628-.26 2.112-.715c.492-.462.737-1.012.737-1.65c0-.623-.172-1.137-.517-1.54c-.344-.403-.924-.726-1.738-.968c-.674-.205-1.15-.392-1.43-.561c-.278-.176-.418-.389-.418-.638c0-.227.114-.41.341-.55c.228-.14.532-.209.913-.209c.28 0 .594.055.946.165c.352.095.664.25.935.462l.77-1.199c-.674-.543-1.569-.814-2.684-.814c-.799 0-1.455.205-1.969.616c-.528.41-.792.92-.792 1.529c.008.645.22 1.148.638 1.507c.426.36 1.03.653 1.815.88c.653.205 1.097.41 1.331.616a.971.971 0 0 1 .341.748a.75.75 0 0 1-.34.66c-.235.161-.573.242-1.013.242c-.718.007-1.437-.279-2.156-.858Zm-5.53.638a2.18 2.18 0 0 1-.616-.583l-1.034.847c.308.52.69.884 1.144 1.089c.425.19.913.286 1.463.286c.3 0 .612-.048.935-.143a2.46 2.46 0 0 0 .891-.484c.477-.381.726-1.005.748-1.87v-5.588H9.85v5.302c0 .506-.114.862-.34 1.067c-.228.198-.514.297-.859.297c-.33 0-.612-.073-.847-.22ZM3 6a3 3 0 0 1 3-3h12a3 3 0 0 1 3 3v12a3 3 0 0 1-3 3H6a3 3 0 0 1-3-3V6Zm3-1a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V6a1 1 0 0 0-1-1H6Z"/>`
	kakaoTalkFillPath             = `<path fill="currentColor" d="M12 3c5.8 0 10.501 3.664 10.501 8.185c0 4.52-4.701 8.184-10.5 8.184a13.51 13.51 0 0 1-1.727-.11l-4.408 2.883c-.501.265-.678.236-.472-.413l.892-3.678c-2.88-1.46-4.785-3.99-4.785-6.866c0-4.52 4.7-8.185 10.5-8.185Zm5.908 8.06l1.47-1.424a.472.472 0 0 0-.656-.678l-1.928 1.866V9.282a.472.472 0 0 0-.944 0v2.557a.472.472 0 0 0 0 .222V13.5a.472.472 0 0 0 .944 0v-1.363l.427-.413l1.428 2.033a.472.472 0 1 0 .773-.543l-1.514-2.155Zm-2.958 1.924h-1.46V9.297a.472.472 0 0 0-.943 0v4.159c0 .26.21.472.471.472h1.932a.472.472 0 1 0 0-.944Zm-5.857-1.091l.696-1.708l.638 1.707H9.093Zm2.523.487l.002-.016a.469.469 0 0 0-.127-.32l-1.046-2.8a.69.69 0 0 0-.627-.474a.696.696 0 0 0-.653.447l-1.662 4.075a.472.472 0 0 0 .874.357l.332-.813h2.07l.298.8a.472.472 0 1 0 .884-.33l-.345-.926ZM8.294 9.302a.472.472 0 0 0-.471-.472H4.578a.472.472 0 1 0 0 .944h1.16v3.736a.472.472 0 0 0 .944 0V9.774h1.14a.472.472 0 0 0 .472-.472Z"/>`
	kakaoTalkLinePath             = `<path fill="currentColor" d="M5.679 18.123C3.093 16.566 1.5 14.112 1.5 11.405C1.501 6.701 6.249 3 12.001 3s10.5 3.701 10.5 8.405c0 4.704-4.748 8.405-10.5 8.405c-.442 0-.881-.022-1.318-.065l-3.765 2.458c-.615.326-.957.425-1.485.066c-.62-.424-.596-.892-.382-1.56l.628-2.586ZM3.5 11.405c0 2.132 1.418 4.123 3.781 5.32l.706.359l-.186.77l-.401 1.648l2.8-1.83l.365.046c.474.061.953.092 1.435.092c4.741 0 8.5-2.93 8.5-6.405S16.742 5 12.001 5s-8.5 2.93-8.5 6.405Zm14.407-.346l1.514 2.155a.472.472 0 1 1-.773.543l-1.428-2.033l-.427.413V13.5a.472.472 0 1 1-.944 0v-1.439a.472.472 0 0 1 0-.222V9.282a.472.472 0 0 1 .944 0v1.542l1.928-1.866a.472.472 0 0 1 .656.678l-1.47 1.423Zm-2.958 1.925a.472.472 0 1 1 0 .944h-1.932a.472.472 0 0 1-.471-.472V9.297a.472.472 0 1 1 .943 0v3.687h1.46Zm-5.857-1.091h1.334l-.638-1.708l-.696 1.707Zm2.523.487l.345.925a.472.472 0 1 1-.884.33l-.298-.799h-2.07l-.332.813a.472.472 0 1 1-.874-.357l1.662-4.075a.696.696 0 0 1 .653-.447a.69.69 0 0 1 .627.474l1.046 2.8a.469.469 0 0 1 .127.32l-.002.016ZM8.294 9.302c0 .26-.21.472-.471.472h-1.14v3.736a.472.472 0 0 1-.945 0V9.774h-1.16a.472.472 0 1 1 0-.944h3.245c.26 0 .471.211.471.472Z"/>`
	keyFillPath                   = `<path fill="currentColor" d="M17 14h-4.341a6 6 0 1 1 0-4H23v4h-2v4h-4v-4ZM7 14a2 2 0 1 0 0-4a2 2 0 0 0 0 4Z"/>`
	keyLinePath                   = `<path fill="currentColor" d="M12.917 13A6.002 6.002 0 0 1 1 12a6 6 0 0 1 11.917-1H23v2h-2v4h-2v-4h-2v4h-2v-4h-2.083ZM7 16a4 4 0 1 0 0-8a4 4 0 0 0 0 8Z"/>`
	keyTwoFillPath                = `<path fill="currentColor" d="m10.313 11.566l7.94-7.94l2.121 2.12l-1.414 1.415l2.121 2.121l-3.535 3.536l-2.121-2.121l-2.99 2.99a5.002 5.002 0 0 1-7.97 5.848a5 5 0 0 1 5.848-7.97Zm-.899 5.848a2 2 0 1 0-2.828-2.828a2 2 0 0 0 2.828 2.828Z"/>`
	keyTwoLinePath                = `<path fill="currentColor" d="m10.758 11.828l7.849-7.849l1.414 1.414l-1.414 1.414l2.474 2.475l-1.414 1.415l-2.475-2.475l-1.414 1.414l2.121 2.121l-1.414 1.414l-2.121-2.12l-2.192 2.191a5.002 5.002 0 0 1-7.708 6.293a5 5 0 0 1 6.294-7.707Zm-.637 6.293A3 3 0 1 0 5.88 13.88a3 3 0 0 0 4.242 4.242Z"/>`
	keyboardBoxFillPath           = `<path fill="currentColor" d="M3 3h18a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Zm2 4v2h2V7H5Zm0 4v2h2v-2H5Zm0 4v2h14v-2H5Zm4-4v2h2v-2H9Zm0-4v2h2V7H9Zm4 0v2h2V7h-2Zm4 0v2h2V7h-2Zm-4 4v2h2v-2h-2Zm4 0v2h2v-2h-2Z"/>`
	keyboardBoxLinePath           = `<path fill="currentColor" d="M4 5v14h16V5H4ZM3 3h18a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Zm3 4h2v2H6V7Zm0 4h2v2H6v-2Zm0 4h12v2H6v-2Zm5-4h2v2h-2v-2Zm0-4h2v2h-2V7Zm5 0h2v2h-2V7Zm0 4h2v2h-2v-2Z"/>`
	keyboardFillPath              = `<path fill="currentColor" d="M3 17h18v2H3v-2Zm0-6h3v3H3v-3Zm5 0h3v3H8v-3ZM3 5h3v3H3V5Zm10 0h3v3h-3V5Zm5 0h3v3h-3V5Zm-5 6h3v3h-3v-3Zm5 0h3v3h-3v-3ZM8 5h3v3H8V5Z"/>`
	keyboardLinePath              = `<path fill="currentColor" d="M3 17h18v2H3v-2Zm0-6h3v3H3v-3Zm5 0h3v3H8v-3ZM3 5h3v3H3V5Zm10 0h3v3h-3V5Zm5 0h3v3h-3V5Zm-5 6h3v3h-3v-3Zm5 0h3v3h-3v-3ZM8 5h3v3H8V5Z"/>`
	keynoteFillPath               = `<path fill="currentColor" d="M19 2c.552 0 1.086.43 1.195.977l1.61 8.046c.108.54-.26.977-.797.977H13v8h4v2H7v-2h4v-8H2.992c-.548 0-.906-.43-.797-.977l1.61-8.046C3.913 2.437 4.445 2 5 2h13.998Z"/>`
	keynoteLinePath               = `<path fill="currentColor" d="M4.44 10h15.12l-1.2-6H5.64l-1.2 6ZM13 12v8h4v2H7v-2h4v-8H2.992c-.548 0-.906-.43-.797-.977l1.61-8.046C3.913 2.437 4.445 2 5 2h13.998c.553 0 1.087.43 1.197.977l1.609 8.046c.108.54-.26.977-.797.977H13Z"/>`
	kickFillPath                  = `<path fill="currentColor" d="M3 3h18v18H3V3Zm7.564 2.536h-4.31v12.928h4.31V15.59H12v1.436h1.436v1.436h4.31v-4.309h-1.437v-1.436h-1.436v-1.436h1.436V9.845h1.436V5.536h-4.309v1.436H12V8.41h-1.436V5.536Z"/>`
	kickLinePath                  = `<path fill="currentColor" d="M3 2h8v2h2V2h8v8h-2v4h2v8h-8v-2h-2v2H3V2Zm10 16h2v2h4v-4h-2v-2h-2v-4h2V8h2V4h-4v2h-2v2H9V4H5v16h4v-4h4v2Z"/>`
	knifeBloodFillPath            = `<path fill="currentColor" d="M4.343 1.408L22.374 19.44a1.5 1.5 0 1 1-2.121 2.122l-4.596-4.596L12.12 20.5L8 16.38V19a1 1 0 1 1-2 0v-4a1 1 0 0 0-1.993-.117L4.001 15v1a1 1 0 1 1-2 0V7.214A7.976 7.976 0 0 1 4.17 1.587l.173-.179Z"/>`
	knifeBloodLinePath            = `<path fill="currentColor" d="M4.343 1.408L22.374 19.44a1.5 1.5 0 1 1-2.121 2.122l-4.596-4.596L12.12 20.5L8 16.38V19a1 1 0 1 1-2 0v-4a1 1 0 0 0-1.993-.117L4.001 15v1a1 1 0 1 1-2 0V7.214A7.976 7.976 0 0 1 4.17 1.587l.173-.179Zm.241 3.07l-.051.11a5.993 5.993 0 0 0-.522 2.103l-.01.31v.119a5.983 5.983 0 0 0 1.58 4.003l.176.185l6.364 6.364l2.828-2.829L4.584 4.478Z"/>`
	knifeFillPath                 = `<path fill="currentColor" d="M22.374 19.44a1.5 1.5 0 1 1-2.121 2.12l-4.596-4.595L12.12 20.5l-7.778-7.778A8 8 0 0 1 4.17 1.587l.173-.179L22.374 19.44Z"/>`
	knifeLinePath                 = `<path fill="currentColor" d="M4.343 1.408L22.374 19.44a1.5 1.5 0 1 1-2.121 2.122l-4.596-4.596L12.12 20.5l-7.778-7.778A8 8 0 0 1 4.17 1.587l.173-.179Zm.241 3.07l-.051.11a6.005 6.005 0 0 0 1.048 6.535l.176.185l6.364 6.364l2.828-2.829L4.584 4.478Z"/>`
	landscapeFillPath             = `<path fill="currentColor" d="m16 21l-4.762-8.73L15 6l8 15h-7ZM8 10l6 11H2l6-11ZM5.5 8a2.5 2.5 0 1 1 0-5a2.5 2.5 0 0 1 0 5Z"/>`
	landscapeLinePath             = `<path fill="currentColor" d="M11.27 12.216L15 6l8 15H2L9 8l2.27 4.216Zm1.12 2.022L14.987 19h4.68l-4.77-8.942l-2.507 4.18ZM5.348 19h7.304L9 12.219L5.348 19ZM5.5 8a2.5 2.5 0 1 1 0-5a2.5 2.5 0 0 1 0 5Z"/>`
	layoutBottomFillPath          = `<path fill="currentColor" d="M22 16v4a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1v-4h20ZM21 3a1 1 0 0 1 1 1v10H2V4a1 1 0 0 1 1-1h18Z"/>`
	layoutBottomLinePath          = `<path fill="currentColor" d="M21 3a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h18ZM4 16v3h16v-3H4Zm0-2h16V5H4v9Z"/>`
	layoutBottomTwoFillPath       = `<path fill="currentColor" d="M21 3a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h18Zm-2 13H5v2h14v-2Z"/>`
	layoutBottomTwoLinePath       = `<path fill="currentColor" d="M21 3a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h18Zm-1 2H4v14h16V5Zm-2 10v2H6v-2h12Z"/>`
	layoutColumnFillPath          = `<path fill="currentColor" d="M12 5v14h7V5h-7ZM4 3h16a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Z"/>`
	layoutColumnLinePath          = `<path fill="currentColor" d="M11 5H5v14h6V5Zm2 0v14h6V5h-6ZM4 3h16a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Z"/>`
	layoutFillPath                = `<path fill="currentColor" d="M16 21V10h5v10a1 1 0 0 1-1 1h-4Zm-2 0H4a1 1 0 0 1-1-1V10h11v11Zm7-13H3V4a1 1 0 0 1 1-1h16a1 1 0 0 1 1 1v4Z"/>`
	layoutFiveFillPath            = `<path fill="currentColor" d="M7 10v11H3a1 1 0 0 1-1-1V10h5Zm15 0v10a1 1 0 0 1-1 1H9V10h13Zm-1-7a1 1 0 0 1 1 1v4H2V4a1 1 0 0 1 1-1h18Z"/>`
	layoutFiveLinePath            = `<path fill="currentColor" d="M3 21a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h18a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3Zm4-11H4v9h3v-9Zm13 0H9v9h11v-9Zm0-5H4v3h16V5Z"/>`
	layoutFourFillPath            = `<path fill="currentColor" d="M11 13v8H4a1 1 0 0 1-1-1v-7h8Zm2-10h7a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1h-7V3ZM3 4a1 1 0 0 1 1-1h7v8H3V4Z"/>`
	layoutFourLinePath            = `<path fill="currentColor" d="M20 3a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h16Zm-9 10H5v6h6v-6Zm2 6h6V5h-6v14ZM11 5H5v6h6V5Z"/>`
	layoutGridFillPath            = `<path fill="currentColor" d="M22 12.999V20a1 1 0 0 1-1 1h-8v-8.001h9Zm-11 0V21H3a1 1 0 0 1-1-1v-7.001h9ZM11 3v7.999H2V4a1 1 0 0 1 1-1h8Zm10 0a1 1 0 0 1 1 1v6.999h-9V3h8Z"/>`
	layoutGridLinePath            = `<path fill="currentColor" d="M21 3a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h18ZM11 13H4v6h7v-6Zm9 0h-7v6h7v-6Zm-9-8H4v6h7V5Zm9 0h-7v6h7V5Z"/>`
	layoutLeftFillPath            = `<path fill="currentColor" d="M21 3a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H9V3h12ZM7 21H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h4v18Z"/>`
	layoutLeftLinePath            = `<path fill="currentColor" d="M21 3a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h18ZM7 5H4v14h3V5Zm13 0H9v14h11V5Z"/>`
	layoutLeftTwoFillPath         = `<path fill="currentColor" d="M21 3a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h18ZM7 6H5v12h2V6Z"/>`
	layoutLeftTwoLinePath         = `<path fill="currentColor" d="M21 3a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h18Zm-1 2H4v14h16V5ZM8 7v10H6V7h2Z"/>`
	layoutLinePath                = `<path fill="currentColor" d="M5 8h14V5H5v3Zm9 11v-9H5v9h9Zm2 0h3v-9h-3v9ZM4 3h16a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Z"/>`
	layoutMasonryFillPath         = `<path fill="currentColor" d="M22 9.999V20a1 1 0 0 1-1 1h-8V9.999h9Zm-11 6V21H3a1 1 0 0 1-1-1v-4.001h9ZM11 3v10.999H2V4a1 1 0 0 1 1-1h8Zm10 0a1 1 0 0 1 1 1v3.999h-9V3h8Z"/>`
	layoutMasonryLinePath         = `<path fill="currentColor" d="M22 20a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h18a1 1 0 0 1 1 1v16Zm-11-5H4v4h7v-4Zm9-4h-7v8h7v-8Zm-9-6H4v8h7V5Zm9 0h-7v4h7V5Z"/>`
	layoutRightFillPath           = `<path fill="currentColor" d="M21 3a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1h-4V3h4Zm-6 18H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h12v18Z"/>`
	layoutRightLinePath           = `<path fill="currentColor" d="M21 3a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h18Zm-6 2H4v14h11V5Zm5 0h-3v14h3V5Z"/>`
	layoutRightTwoFillPath        = `<path fill="currentColor" d="M21 3a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h18Zm-2 3h-2v12h2V6Z"/>`
	layoutRightTwoLinePath        = `<path fill="currentColor" d="M21 3a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h18Zm-1 2H4v14h16V5Zm-2 2v10h-2V7h2Z"/>`
	layoutRowFillPath             = `<path fill="currentColor" d="M19 12H5v7h14v-7ZM4 3h16a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Z"/>`
	layoutRowLinePath             = `<path fill="currentColor" d="M19 11V5H5v6h14Zm0 2H5v6h14v-6ZM4 3h16a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Z"/>`
	layoutSixFillPath             = `<path fill="currentColor" d="M15 10v11H3a1 1 0 0 1-1-1V10h13Zm7 0v10a1 1 0 0 1-1 1h-4V10h5Zm-1-7a1 1 0 0 1 1 1v4H2V4a1 1 0 0 1 1-1h18Z"/>`
	layoutSixLinePath             = `<path fill="currentColor" d="M3 21a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h18a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3Zm12-11H4v9h11v-9Zm5 0h-3v9h3v-9Zm0-5H4v3h16V5Z"/>`
	layoutThreeFillPath           = `<path fill="currentColor" d="M8 10v11H4a1 1 0 0 1-1-1V10h5Zm13 0v10a1 1 0 0 1-1 1H10V10h11Zm-1-7a1 1 0 0 1 1 1v4H3V4a1 1 0 0 1 1-1h16Z"/>`
	layoutThreeLinePath           = `<path fill="currentColor" d="M4 21a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h16a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H4Zm4-11H5v9h3v-9Zm11 0h-9v9h9v-9Zm0-5H5v3h14V5Z"/>`
	layoutTopFillPath             = `<path fill="currentColor" d="M22 10v10a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V10h20Zm-1-7a1 1 0 0 1 1 1v4H2V4a1 1 0 0 1 1-1h18Z"/>`
	layoutTopLinePath             = `<path fill="currentColor" d="M21 3a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h18ZM4 10v9h16v-9H4Zm0-2h16V5H4v3Z"/>`
	layoutTopTwoFillPath          = `<path fill="currentColor" d="M21 3a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h18Zm-2 3H5v2h14V6Z"/>`
	layoutTopTwoLinePath          = `<path fill="currentColor" d="M21 3a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h18Zm-1 2H4v14h16V5Zm-2 2v2H6V7h12Z"/>`
	layoutTwoFillPath             = `<path fill="currentColor" d="M11 3v18H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h7Zm10 10v7a1 1 0 0 1-1 1h-7v-8h8ZM20 3a1 1 0 0 1 1 1v7h-8V3h7Z"/>`
	layoutTwoLinePath             = `<path fill="currentColor" d="M21 20a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h16a1 1 0 0 1 1 1v16ZM11 5H5v14h6V5Zm8 8h-6v6h6v-6Zm0-8h-6v6h6V5Z"/>`
	leafFillPath                  = `<path fill="currentColor" d="M20.998 3v2c0 9.627-5.373 14-12 14H7.096c.212-3.012 1.15-4.835 3.598-7.001c1.204-1.065 1.102-1.68.509-1.327C7.119 13.102 5.09 16.386 5 21.63l-.003.37h-2c0-1.363.116-2.6.346-3.732c-.23-1.294-.346-3.05-.346-5.268c0-5.523 4.477-10 10-10c2 0 4 1 8 0Z"/>`
	leafLinePath                  = `<path fill="currentColor" d="M20.998 3v2c0 9.627-5.373 14-12 14H5.241a17.14 17.14 0 0 0-.243 3h-2c0-1.363.116-2.6.346-3.732c-.23-1.294-.346-3.05-.346-5.268c0-5.523 4.477-10 10-10c2 0 4 1 8 0Zm-8 2a8 8 0 0 0-8 8c0 .362.003.711.01 1.046c1.254-1.978 3.091-3.541 5.494-4.914l.992 1.736C8.64 12.5 6.746 14.354 5.774 17h3.224c6.015 0 9.871-3.973 9.997-11.612c-1.372.133-2.647.048-4.22-.188c-1.15-.173-1.376-.2-1.777-.2Z"/>`
	lifebuoyFillPath              = `<path fill="currentColor" d="M12 2c5.523 0 10 4.477 10 10s-4.477 10-10 10S2 17.523 2 12S6.477 2 12 2ZM7.197 14.682l-2.175 2.173a8.547 8.547 0 0 0 1.818 1.9l.305.223l2.173-2.175a5.527 5.527 0 0 1-1.98-1.883l-.14-.238Zm9.606 0a5.527 5.527 0 0 1-1.883 1.98l-.238.14l2.173 2.176a8.552 8.552 0 0 0 1.9-1.818l.223-.305l-2.175-2.173ZM12 8a4 4 0 1 0 0 8a4 4 0 0 0 0-8ZM7.145 5.022a8.549 8.549 0 0 0-1.9 1.818l-.223.305l2.175 2.173a5.527 5.527 0 0 1 1.883-1.98l.238-.14l-2.173-2.176Zm9.71 0l-2.173 2.175a5.527 5.527 0 0 1 1.98 1.883l.14.238l2.176-2.173a8.548 8.548 0 0 0-1.818-1.9l-.305-.223Z"/>`
	lifebuoyLinePath              = `<path fill="currentColor" d="M12 2c5.523 0 10 4.477 10 10s-4.477 10-10 10S2 17.523 2 12S6.477 2 12 2Zm0 15a4.987 4.987 0 0 1-1.828-.345l-2.236 2.237A7.963 7.963 0 0 0 12 20a7.963 7.963 0 0 0 4.064-1.108l-2.236-2.236A4.987 4.987 0 0 1 12 17Zm-8-5a7.96 7.96 0 0 0 1.108 4.064l2.237-2.236A4.987 4.987 0 0 1 7 12c0-.645.122-1.261.345-1.828L5.108 7.936A7.963 7.963 0 0 0 4 12Zm14.892-4.064l-2.236 2.236c.222.567.344 1.183.344 1.828s-.122 1.261-.345 1.828l2.237 2.236A7.963 7.963 0 0 0 20 12a7.963 7.963 0 0 0-1.108-4.064ZM12 9a3 3 0 1 0 0 6a3 3 0 0 0 0-6Zm0-5a7.963 7.963 0 0 0-4.064 1.108l2.236 2.237A4.987 4.987 0 0 1 12 7c.645 0 1.261.122 1.828.345l2.236-2.237A7.963 7.963 0 0 0 12 4Z"/>`
	lightbulbFillPath             = `<path fill="currentColor" d="M11 18H7.941c-.297-1.273-1.637-2.314-2.187-3a8 8 0 1 1 12.49.002c-.55.685-1.888 1.726-2.185 2.998H13v-5h-2v5Zm5 2v1a2 2 0 0 1-2 2h-4a2 2 0 0 1-2-2v-1h8Z"/>`
	lightbulbFlashFillPath        = `<path fill="currentColor" d="M7.941 18c-.297-1.273-1.637-2.314-2.187-3a8 8 0 1 1 12.49.002c-.55.685-1.888 1.726-2.185 2.998H7.941ZM16 20v1a2 2 0 0 1-2 2h-4a2 2 0 0 1-2-2v-1h8Zm-3-9.995V6l-4.5 6.005H11v4l4.5-6H13Z"/>`
	lightbulbFlashLinePath        = `<path fill="currentColor" d="M9.973 18h4.054c.132-1.202.745-2.194 1.74-3.277c.113-.122.832-.867.917-.973a6 6 0 1 0-9.37-.002c.086.107.807.853.918.974c.996 1.084 1.609 2.076 1.741 3.278ZM14 20h-4v1h4v-1Zm-8.246-5a8 8 0 1 1 12.49.002C17.624 15.774 16 17 16 18.5V21a2 2 0 0 1-2 2h-4a2 2 0 0 1-2-2v-2.5C8 17 6.375 15.774 5.754 15ZM13 10.004h2.5l-4.5 6v-4H8.5L13 6v4.005Z"/>`
	lightbulbLinePath             = `<path fill="currentColor" d="M9.973 18H11v-5h2v5h1.027c.132-1.202.745-2.194 1.74-3.277c.113-.122.832-.867.917-.973a6 6 0 1 0-9.37-.002c.086.107.807.853.918.974c.996 1.084 1.609 2.076 1.741 3.278ZM10 20v1h4v-1h-4Zm-4.246-5a8 8 0 1 1 12.49.002C17.624 15.774 16 17 16 18.5V21a2 2 0 0 1-2 2h-4a2 2 0 0 1-2-2v-2.5C8 17 6.375 15.774 5.754 15Z"/>`
	lineChartFillPath             = `<path fill="currentColor" d="M5 3v16h16v2H3V3h2Zm14.94 2.94l2.12 2.12L16 14.122l-3-3l-3.94 3.94l-2.12-2.122L13 6.88l3 3l3.94-3.94Z"/>`
	lineChartLinePath             = `<path fill="currentColor" d="M5 3v16h16v2H3V3h2Zm15.293 3.293l1.414 1.414L16 13.414l-3-2.999l-4.293 4.292l-1.414-1.414L13 7.586l3 2.999l4.293-4.292Z"/>`
	lineFillPath                  = `<path fill="currentColor" d="M18.663 10.84a.526.526 0 0 1-.524.526h-1.463v.937h1.463a.525.525 0 1 1 0 1.05H16.15a.526.526 0 0 1-.522-.525V8.852c0-.287.235-.525.525-.525h1.988a.526.526 0 0 1-.002 1.05h-1.463v.938h1.463c.29 0 .524.237.524.526Zm-4.097 2.485a.539.539 0 0 1-.166.026a.515.515 0 0 1-.425-.209l-2.036-2.764v2.45a.525.525 0 0 1-1.047 0V8.852a.522.522 0 0 1 .52-.523a.54.54 0 0 1 .412.212l2.052 2.775V8.852c0-.287.235-.525.525-.525c.287 0 .525.238.525.525v3.976a.525.525 0 0 1-.36.497Zm-4.95.027a.526.526 0 0 1-.523-.524V8.852c0-.287.235-.525.525-.525c.289 0 .524.238.524.525v3.976a.527.527 0 0 1-.526.524Zm-1.53 0H6.099a.528.528 0 0 1-.525-.524V8.852c0-.287.238-.525.525-.525c.29 0 .525.238.525.525v3.451h1.464a.525.525 0 0 1 0 1.05Zm3.915-10.78c-5.513 0-10 3.643-10 8.119c0 4.009 3.558 7.368 8.363 8.006c.325.069.769.215.881.492c.1.25.066.638.032.9l-.137.85c-.037.25-.2.988.874.537c1.076-.449 5.764-3.398 7.864-5.812C21.314 14.09 22 12.477 22 10.69c0-4.476-4.488-8.119-10-8.119Z"/>`
	lineHeightPath                = `<path fill="currentColor" d="M11 4h10v2H11V4ZM6 7v4H4V7H1l4-4l4 4H6Zm0 10h3l-4 4l-4-4h3v-4h2v4Zm5 1h10v2H11v-2Zm-2-7h12v2H9v-2Z"/>`
	lineLinePath                  = `<path fill="currentColor" d="M22.001 10.69c0 1.787-.687 3.4-2.123 4.974c-2.1 2.414-6.788 5.363-7.864 5.812c-1.074.451-.911-.286-.874-.537l.137-.85c.034-.262.068-.65-.032-.9c-.112-.277-.556-.423-.881-.492C5.559 18.06 2 14.7 2 10.691c0-4.476 4.487-8.119 10-8.119s10 3.643 10 8.119Zm-3.6 3.626c1.113-1.22 1.6-2.362 1.6-3.625c0-3.269-3.51-6.119-8-6.119s-8 2.85-8 6.119c0 2.904 2.728 5.506 6.626 6.024l.147.025c1.079.226 1.884.614 2.329 1.708l.037.096c1.805-1.176 4.173-2.979 5.26-4.228Zm-.262-4.001a.526.526 0 0 1 0 1.05h-1.463v.938h1.463a.525.525 0 1 1 0 1.05H16.15a.526.526 0 0 1-.522-.525V8.852c0-.287.235-.525.525-.525h1.988a.526.526 0 0 1-.002 1.05h-1.463v.938h1.463Zm-3.213 2.513a.525.525 0 0 1-.526.523a.515.515 0 0 1-.425-.209l-2.036-2.764v2.45a.525.525 0 0 1-1.047 0V8.852a.522.522 0 0 1 .52-.523a.54.54 0 0 1 .412.212l2.052 2.775V8.852c0-.287.235-.525.525-.525c.287 0 .525.238.525.525v3.976Zm-4.784 0a.527.527 0 0 1-.526.524a.526.526 0 0 1-.523-.524V8.852c0-.287.235-.525.525-.525c.289 0 .524.238.524.525v3.976Zm-2.055.524H6.098a.528.528 0 0 1-.525-.524V8.852c0-.287.238-.525.525-.525c.29 0 .525.238.525.525v3.451h1.464a.525.525 0 0 1 0 1.05Z"/>`
	linkPath                      = `<path fill="currentColor" d="m18.364 15.535l-1.414-1.414l1.414-1.414a5 5 0 0 0-7.07-7.071L9.878 7.05L8.465 5.636l1.414-1.414a7 7 0 0 1 9.9 9.9l-1.415 1.413Zm-2.828 2.829l-1.414 1.414a7 7 0 1 1-9.9-9.9l1.414-1.414l1.415 1.414l-1.415 1.415a5 5 0 0 0 7.071 7.07l1.415-1.413l1.414 1.414Zm-.707-10.607l1.414 1.414l-7.071 7.072l-1.414-1.415l7.07-7.07Z"/>`
	linkMPath                     = `<path fill="currentColor" d="m17.657 14.828l-1.414-1.414L17.657 12A4 4 0 1 0 12 6.343l-1.414 1.414l-1.414-1.414l1.414-1.414a6 6 0 0 1 8.485 8.485l-1.414 1.414Zm-2.828 2.829l-1.415 1.414a6 6 0 0 1-8.485-8.485L6.343 9.17l1.415 1.415L6.343 12A4 4 0 0 0 12 17.657l1.415-1.415l1.414 1.415Zm0-9.9l1.414 1.414l-7.071 7.072l-1.414-1.415l7.07-7.07Z"/>`
	linkUnlinkPath                = `<path fill="currentColor" d="M17 17h5v2h-3v3h-2v-5ZM7 7H2V5h3V2h2v5Zm11.364 8.536L16.95 14.12l1.414-1.414a5 5 0 0 0-7.071-7.071L9.879 7.05L8.464 5.636L9.88 4.222a7 7 0 0 1 9.9 9.9l-1.415 1.414Zm-2.829 2.828l-1.414 1.414a7 7 0 0 1-9.9-9.9l1.415-1.414L7.05 9.88l-1.414 1.414a5 5 0 0 0 7.071 7.071l1.414-1.414l1.415 1.414Zm-.707-10.607l1.415 1.415l-7.071 7.07l-1.415-1.414l7.071-7.07Z"/>`
	linkUnlinkMPath               = `<path fill="currentColor" d="m17.657 14.829l-1.414-1.415L17.657 12A4 4 0 1 0 12 6.343l-1.414 1.414l-1.414-1.414l1.414-1.414a6 6 0 0 1 8.485 8.485l-1.414 1.415Zm-2.828 2.828l-1.415 1.414a6 6 0 0 1-8.485-8.485l1.414-1.414l1.414 1.414L6.343 12A4 4 0 0 0 12 17.657l1.414-1.414l1.415 1.414Zm0-9.9l1.414 1.415l-7.071 7.07l-1.415-1.413l7.072-7.072ZM5.775 2.293l1.932-.518L8.743 5.64l-1.932.518l-1.036-3.864Zm9.483 16.068l1.932-.518l1.035 3.864l-1.932.518l-1.035-3.864ZM2.293 5.775l3.864 1.036l-.518 1.932l-3.864-1.036l.518-1.932Zm16.068 9.483l3.864 1.035l-.518 1.932l-3.864-1.035l.518-1.932Z"/>`
	linkedinBoxFillPath           = `<path fill="currentColor" d="M18.336 18.339h-2.665v-4.177c0-.996-.02-2.278-1.39-2.278c-1.389 0-1.601 1.084-1.601 2.205v4.25h-2.666V9.75h2.56v1.17h.035c.358-.674 1.228-1.387 2.528-1.387c2.7 0 3.2 1.778 3.2 4.091v4.715ZM7.004 8.575a1.546 1.546 0 0 1-1.548-1.549a1.548 1.548 0 1 1 1.547 1.549Zm1.336 9.764H5.667V9.75H8.34v8.589ZM19.67 3H4.33C3.594 3 3 3.58 3 4.297v15.406C3 20.42 3.594 21 4.328 21h15.339C20.4 21 21 20.42 21 19.703V4.297C21 3.581 20.4 3 19.666 3h.003Z"/>`
	linkedinBoxLinePath           = `<path fill="currentColor" d="M4.001 3h16a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1h-16a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Zm1 2v14h14V5h-14Zm2.5 4a1.5 1.5 0 1 1 0-3a1.5 1.5 0 0 1 0 3Zm-1 1h2v7.5h-2V10Zm5.5.43c.584-.565 1.266-.93 2-.93c2.071 0 3.5 1.679 3.5 3.75v4.25h-2v-4.25a1.75 1.75 0 1 0-3.5 0v4.25h-2V10h2v.43Z"/>`
	linkedinFillPath              = `<path fill="currentColor" d="M6.94 5a2 2 0 1 1-4-.002a2 2 0 0 1 4 .002ZM7 8.48H3V21h4V8.48Zm6.32 0H9.34V21h3.94v-6.57c0-3.66 4.77-4 4.77 0V21H22v-7.93c0-6.17-7.06-5.94-8.72-2.91l.04-1.68Z"/>`
	linkedinLinePath              = `<path fill="currentColor" d="M12.001 9.55c.917-.937 2.111-1.55 3.5-1.55a5.5 5.5 0 0 1 5.5 5.5V21h-2v-7.5a3.5 3.5 0 1 0-7 0V21h-2V8.5h2v1.05Zm-7-3.05a1.5 1.5 0 1 1 0-3a1.5 1.5 0 0 1 0 3Zm-1 2h2V21h-2V8.5Z"/>`
	linksFillPath                 = `<path fill="currentColor" d="m13.06 8.11l1.415 1.415a7 7 0 0 1 0 9.9l-.354.353a7 7 0 1 1-9.9-9.9l1.415 1.415a5 5 0 0 0 7.07 7.07l.354-.353a5 5 0 0 0 0-7.07l-1.414-1.415L13.06 8.11Zm6.718 6.011l-1.414-1.414a5 5 0 0 0-7.071-7.071l-.354.353a5 5 0 0 0 0 7.071l1.414 1.415l-1.414 1.414l-1.414-1.414a7 7 0 0 1 0-9.9l.353-.353a7 7 0 0 1 9.9 9.9Z"/>`
	linksLinePath                 = `<path fill="currentColor" d="m13.06 8.11l1.415 1.415a7 7 0 0 1 0 9.9l-.354.353a7 7 0 1 1-9.9-9.9l1.415 1.415a5 5 0 0 0 7.07 7.07l.354-.353a5 5 0 0 0 0-7.07l-1.414-1.415L13.06 8.11Zm6.718 6.011l-1.414-1.414a5 5 0 0 0-7.071-7.071l-.354.353a5 5 0 0 0 0 7.071l1.414 1.415l-1.414 1.414l-1.414-1.414a7 7 0 0 1 0-9.9l.353-.353a7 7 0 0 1 9.9 9.9Z"/>`
	listCheckPath                 = `<path fill="currentColor" d="M8 4h13v2H8V4Zm-5-.5h3v3H3v-3Zm0 7h3v3H3v-3Zm0 7h3v3H3v-3ZM8 11h13v2H8v-2Zm0 7h13v2H8v-2Z"/>`
	listCheckThreePath            = `<path fill="currentColor" d="M8 6v3H5V6h3ZM3 4v7h7V4H3Zm10 0h8v2h-8V4Zm0 7h8v2h-8v-2Zm0 7h8v2h-8v-2Zm-2.293-1.793l-1.414-1.414L6 18.086l-1.793-1.793l-1.414 1.414L6 20.914l4.707-4.707Z"/>`
	listCheckTwoPath              = `<path fill="currentColor" d="M11 4h10v2H11V4Zm0 4h6v2h-6V8Zm0 6h10v2H11v-2Zm0 4h6v2h-6v-2ZM3 4h6v6H3V4Zm2 2v2h2V6H5Zm-2 8h6v6H3v-6Zm2 2v2h2v-2H5Z"/>`
	listIndefinitePath            = `<path fill="currentColor" d="M13 4h8v2h-8V4Zm0 7h8v2h-8v-2Zm0 7h8v2h-8v-2Zm-6.5 1a2 2 0 1 1 0-4a2 2 0 0 1 0 4Zm0 2a4 4 0 1 0 0-8a4 4 0 0 0 0 8ZM5 6v3h3V6H5ZM3 4h7v7H3V4Z"/>`
	listOrderedPath               = `<path fill="currentColor" d="M8 4h13v2H8V4ZM5 3v3h1v1H3V6h1V4H3V3h2ZM3 14v-2.5h2V11H3v-1h3v2.5H4v.5h2v1H3Zm2 5.5H3v-1h2V18H3v-1h3v4H3v-1h2v-.5ZM8 11h13v2H8v-2Zm0 7h13v2H8v-2Z"/>`
	listOrderedTwoPath            = `<path fill="currentColor" d="M5.75 3.5H4.717l-1.467.393v1.553l1-.268V8.5H3V10h4V8.5H5.75v-5ZM10 4h11v2H10V4Zm0 7h11v2H10v-2Zm0 7h11v2H10v-2Zm-7.125-2.375a2.125 2.125 0 1 1 3.812 1.292l-.004.006L5.316 18.5H7V20H3v-1.121l2.472-2.844a.625.625 0 1 0-1.094-.466l-.013.306h-1.49v-.25Z"/>`
	listRadioPath                 = `<path fill="currentColor" d="M8.5 7a2 2 0 1 0-4 0a2 2 0 0 0 4 0Zm2 0a4 4 0 1 1-8 0a4 4 0 0 1 8 0ZM21 4h-8v2h8V4Zm0 7h-8v2h8v-2Zm0 7h-8v2h8v-2ZM6.5 19a2 2 0 1 1 0-4a2 2 0 0 1 0 4Zm0 2a4 4 0 1 0 0-8a4 4 0 0 0 0 8Zm0-13a1 1 0 1 0 0-2a1 1 0 0 0 0 2Z"/>`
	listSettingsFillPath          = `<path fill="currentColor" d="M2 18h7v2H2v-2Zm0-7h9v2H2v-2Zm0-7h20v2H2V4Zm18.674 9.025l1.156-.391l1 1.732l-.916.805a4.014 4.014 0 0 1 0 1.658l.916.805l-1 1.732l-1.156-.391a4 4 0 0 1-1.435.83L19 21h-2l-.24-1.196a3.997 3.997 0 0 1-1.434-.83l-1.156.392l-1-1.732l.916-.805a4.014 4.014 0 0 1 0-1.658l-.916-.805l1-1.732l1.156.391c.41-.37.898-.655 1.435-.83L17 11h2l.24 1.196a3.99 3.99 0 0 1 1.434.83ZM18 17a1 1 0 1 0 0-2a1 1 0 0 0 0 2Z"/>`
	listSettingsLinePath          = `<path fill="currentColor" d="M2 18h7v2H2v-2Zm0-7h9v2H2v-2Zm0-7h20v2H2V4Zm18.674 9.025l1.156-.391l1 1.732l-.916.805a4.014 4.014 0 0 1 0 1.658l.916.805l-1 1.732l-1.156-.391a4 4 0 0 1-1.435.83L19 21h-2l-.24-1.196a3.997 3.997 0 0 1-1.434-.83l-1.156.392l-1-1.732l.916-.805a4.014 4.014 0 0 1 0-1.658l-.916-.805l1-1.732l1.156.391c.41-.37.898-.655 1.435-.83L17 11h2l.24 1.196a3.99 3.99 0 0 1 1.434.83ZM18 18a2 2 0 1 0 0-4a2 2 0 0 0 0 4Z"/>`
	listUnorderedPath             = `<path fill="currentColor" d="M8 4h13v2H8V4ZM4.5 6.5a1.5 1.5 0 1 1 0-3a1.5 1.5 0 0 1 0 3Zm0 7a1.5 1.5 0 1 1 0-3a1.5 1.5 0 0 1 0 3Zm0 6.9a1.5 1.5 0 1 1 0-3a1.5 1.5 0 0 1 0 3ZM8 11h13v2H8v-2Zm0 7h13v2H8v-2Z"/>`
	liveFillPath                  = `<path fill="currentColor" d="M16 4a1 1 0 0 1 1 1v4.2l5.213-3.65a.5.5 0 0 1 .787.41v12.08a.5.5 0 0 1-.787.41L17 14.8V19a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V5a1 1 0 0 1 1-1h14ZM7.4 8.829a.4.4 0 0 0-.392.32L7 9.228v5.542a.4.4 0 0 0 .542.374l.073-.036l4.355-2.771a.401.401 0 0 0 .063-.625l-.063-.05L7.615 8.89a.4.4 0 0 0-.215-.06Z"/>`
	liveLinePath                  = `<path fill="currentColor" d="M16 4a1 1 0 0 1 1 1v4.2l5.213-3.65a.5.5 0 0 1 .787.41v12.08a.5.5 0 0 1-.787.41L17 14.8V19a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V5a1 1 0 0 1 1-1h14Zm-1 2H3v12h12V6ZM7.4 8.829a.4.4 0 0 1 .215.062l4.355 2.771a.4.4 0 0 1 0 .675L7.615 15.11A.4.4 0 0 1 7 14.77V9.23a.4.4 0 0 1 .4-.4ZM21 8.84l-4 2.8v.718l4 2.8V8.84Z"/>`
	loaderFillPath                = `<path fill="currentColor" d="M12 2a1 1 0 0 1 1 1v3a1 1 0 1 1-2 0V3a1 1 0 0 1 1-1Zm0 15a1 1 0 0 1 1 1v3a1 1 0 1 1-2 0v-3a1 1 0 0 1 1-1Zm8.66-10a1 1 0 0 1-.366 1.366l-2.598 1.5a1 1 0 1 1-1-1.732l2.598-1.5A1 1 0 0 1 20.66 7ZM7.67 14.5a1 1 0 0 1-.367 1.366l-2.598 1.5a1 1 0 1 1-1-1.732l2.598-1.5a1 1 0 0 1 1.366.366ZM20.66 17a1 1 0 0 1-1.366.366l-2.598-1.5a1 1 0 0 1 1-1.732l2.598 1.5A1 1 0 0 1 20.66 17ZM7.67 9.5a1 1 0 0 1-1.367.366l-2.598-1.5a1 1 0 1 1 1-1.732l2.598 1.5A1 1 0 0 1 7.67 9.5Z"/>`
	loaderFiveFillPath            = `<path fill="currentColor" d="M12 3a9 9 0 0 1 9 9h-2a7 7 0 0 0-7-7V3Z"/>`
	loaderFiveLinePath            = `<path fill="currentColor" d="M12 3a9 9 0 0 1 9 9h-2a7 7 0 0 0-7-7V3Z"/>`
	loaderFourFillPath            = `<path fill="currentColor" d="M18.364 5.636L16.95 7.05A7 7 0 1 0 19 12h2a9 9 0 1 1-2.636-6.364Z"/>`
	loaderFourLinePath            = `<path fill="currentColor" d="M18.364 5.636L16.95 7.05A7 7 0 1 0 19 12h2a9 9 0 1 1-2.636-6.364Z"/>`
	loaderLinePath                = `<path fill="currentColor" d="M12 2a1 1 0 0 1 1 1v3a1 1 0 1 1-2 0V3a1 1 0 0 1 1-1Zm0 15a1 1 0 0 1 1 1v3a1 1 0 1 1-2 0v-3a1 1 0 0 1 1-1Zm8.66-10a1 1 0 0 1-.366 1.366l-2.598 1.5a1 1 0 1 1-1-1.732l2.598-1.5A1 1 0 0 1 20.66 7ZM7.67 14.5a1 1 0 0 1-.367 1.366l-2.598 1.5a1 1 0 1 1-1-1.732l2.598-1.5a1 1 0 0 1 1.366.366ZM20.66 17a1 1 0 0 1-1.366.366l-2.598-1.5a1 1 0 0 1 1-1.732l2.598 1.5A1 1 0 0 1 20.66 17ZM7.67 9.5a1 1 0 0 1-1.367.366l-2.598-1.5a1 1 0 1 1 1-1.732l2.598 1.5A1 1 0 0 1 7.67 9.5Z"/>`
	loaderThreeFillPath           = `<path fill="currentColor" d="M3.055 13H5.07a7.002 7.002 0 0 0 13.858 0h2.016a9.001 9.001 0 0 1-17.89 0Zm0-2a9.001 9.001 0 0 1 17.89 0h-2.016A7.002 7.002 0 0 0 5.07 11H3.055Z"/>`
	loaderThreeLinePath           = `<path fill="currentColor" d="M3.055 13H5.07a7.002 7.002 0 0 0 13.858 0h2.016a9.001 9.001 0 0 1-17.89 0Zm0-2a9.001 9.001 0 0 1 17.89 0h-2.016A7.002 7.002 0 0 0 5.07 11H3.055Z"/>`
	loaderTwoFillPath             = `<path fill="currentColor" d="M12 2a1 1 0 0 1 1 1v3a1 1 0 1 1-2 0V3a1 1 0 0 1 1-1Zm0 15a1 1 0 0 1 1 1v3a1 1 0 1 1-2 0v-3a1 1 0 0 1 1-1Zm10-5a1 1 0 0 1-1 1h-3a1 1 0 1 1 0-2h3a1 1 0 0 1 1 1ZM7 12a1 1 0 0 1-1 1H3a1 1 0 1 1 0-2h3a1 1 0 0 1 1 1Zm12.071 7.071a1 1 0 0 1-1.414 0l-2.121-2.121a1 1 0 0 1 1.414-1.414l2.121 2.12a1 1 0 0 1 0 1.415ZM8.464 8.464a1 1 0 0 1-1.414 0l-2.12-2.12a1 1 0 0 1 1.414-1.415l2.12 2.121a1 1 0 0 1 0 1.414ZM4.93 19.071a1 1 0 0 1 0-1.414l2.121-2.121a1 1 0 0 1 1.414 1.414l-2.12 2.121a1 1 0 0 1-1.415 0ZM15.536 8.464a1 1 0 0 1 0-1.414l2.12-2.121a1 1 0 1 1 1.415 1.414L16.95 8.464a1 1 0 0 1-1.414 0Z"/>`
	loaderTwoLinePath             = `<path fill="currentColor" d="M12 2a1 1 0 0 1 1 1v3a1 1 0 1 1-2 0V3a1 1 0 0 1 1-1Zm0 15a1 1 0 0 1 1 1v3a1 1 0 1 1-2 0v-3a1 1 0 0 1 1-1Zm10-5a1 1 0 0 1-1 1h-3a1 1 0 1 1 0-2h3a1 1 0 0 1 1 1ZM7 12a1 1 0 0 1-1 1H3a1 1 0 1 1 0-2h3a1 1 0 0 1 1 1Zm12.071 7.071a1 1 0 0 1-1.414 0l-2.121-2.121a1 1 0 0 1 1.414-1.414l2.121 2.12a1 1 0 0 1 0 1.415ZM8.464 8.464a1 1 0 0 1-1.414 0l-2.12-2.12a1 1 0 0 1 1.414-1.415l2.12 2.121a1 1 0 0 1 0 1.414ZM4.93 19.071a1 1 0 0 1 0-1.414l2.121-2.121a1 1 0 0 1 1.414 1.414l-2.12 2.121a1 1 0 0 1-1.415 0ZM15.536 8.464a1 1 0 0 1 0-1.414l2.12-2.121a1 1 0 1 1 1.415 1.414L16.95 8.464a1 1 0 0 1-1.414 0Z"/>`
	lockFillPath                  = `<path fill="currentColor" d="M19 10h1a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V11a1 1 0 0 1 1-1h1V9a7 7 0 0 1 14 0v1Zm-2 0V9A5 5 0 0 0 7 9v1h10Zm-6 4v4h2v-4h-2Z"/>`
	lockLinePath                  = `<path fill="currentColor" d="M19 10h1a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V11a1 1 0 0 1 1-1h1V9a7 7 0 0 1 14 0v1ZM5 12v8h14v-8H5Zm6 2h2v4h-2v-4Zm6-4V9A5 5 0 0 0 7 9v1h10Z"/>`
	lockPasswordFillPath          = `<path fill="currentColor" d="M18 8h2a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V9a1 1 0 0 1 1-1h2V7a6 6 0 1 1 12 0v1Zm-2 0V7a4 4 0 0 0-8 0v1h8Zm-5 6v2h2v-2h-2Zm-4 0v2h2v-2H7Zm8 0v2h2v-2h-2Z"/>`
	lockPasswordLinePath          = `<path fill="currentColor" d="M18 8h2a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V9a1 1 0 0 1 1-1h2V7a6 6 0 1 1 12 0v1ZM5 10v10h14V10H5Zm6 4h2v2h-2v-2Zm-4 0h2v2H7v-2Zm8 0h2v2h-2v-2Zm1-6V7a4 4 0 0 0-8 0v1h8Z"/>`
	lockTwoFillPath               = `<path fill="currentColor" d="M18 8h2a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V9a1 1 0 0 1 1-1h2V7a6 6 0 1 1 12 0v1Zm-7 7.732V18h2v-2.268A2 2 0 0 0 12 12a2 2 0 0 0-1 3.732ZM16 8V7a4 4 0 0 0-8 0v1h8Z"/>`
	lockTwoLinePath               = `<path fill="currentColor" d="M6 8V7a6 6 0 1 1 12 0v1h2a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V9a1 1 0 0 1 1-1h2Zm13 2H5v10h14V10Zm-8 5.732A2 2 0 0 1 12 12a2 2 0 0 1 1 3.732V18h-2v-2.268ZM8 8h8V7a4 4 0 0 0-8 0v1Z"/>`
	lockUnlockFillPath            = `<path fill="currentColor" d="M7 10h13a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V11a1 1 0 0 1 1-1h1V9a7 7 0 0 1 13.262-3.131l-1.789.894A5 5 0 0 0 7 9v1Zm3 5v2h4v-2h-4Z"/>`
	lockUnlockLinePath            = `<path fill="currentColor" d="M7 10h13a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V11a1 1 0 0 1 1-1h1V9a7 7 0 0 1 13.262-3.131l-1.789.894A5 5 0 0 0 7 9v1Zm-2 2v8h14v-8H5Zm5 3h4v2h-4v-2Z"/>`
	loginBoxFillPath              = `<path fill="currentColor" d="M10 11H4V3a1 1 0 0 1 1-1h14a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-8h6v3l5-4l-5-4v3Z"/>`
	loginBoxLinePath              = `<path fill="currentColor" d="M4 15h2v5h12V4H6v5H4V3a1 1 0 0 1 1-1h14a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-6Zm6-4V8l5 4l-5 4v-3H2v-2h8Z"/>`
	loginCircleFillPath           = `<path fill="currentColor" d="M10 11H2.048c.502-5.053 4.765-9 9.95-9c5.523 0 10 4.477 10 10s-4.477 10-10 10c-5.185 0-9.448-3.947-9.95-9h7.95v3l5-4l-5-4v3Z"/>`
	loginCircleLinePath           = `<path fill="currentColor" d="M10 11V8l5 4l-5 4v-3H1v-2h9Zm-7.542 4h2.124A8.003 8.003 0 0 0 20 12A8 8 0 0 0 4.582 9H2.458C3.732 4.943 7.522 2 12 2c5.523 0 10 4.477 10 10s-4.477 10-10 10c-4.478 0-8.268-2.943-9.542-7Z"/>`
	logoutBoxFillPath             = `<path fill="currentColor" d="M5 2h14a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1Zm4 9V8l-5 4l5 4v-3h6v-2H9Z"/>`
	logoutBoxLinePath             = `<path fill="currentColor" d="M4 18h2v2h12V4H6v2H4V3a1 1 0 0 1 1-1h14a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-3Zm2-7h7v2H6v3l-5-4l5-4v3Z"/>`
	logoutBoxRFillPath            = `<path fill="currentColor" d="M5 22a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h14a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H5Zm10-6l5-4l-5-4v3H9v2h6v3Z"/>`
	logoutBoxRLinePath            = `<path fill="currentColor" d="M5 22a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h14a1 1 0 0 1 1 1v3h-2V4H6v16h12v-2h2v3a1 1 0 0 1-1 1H5Zm13-6v-3h-7v-2h7V8l5 4l-5 4Z"/>`
	logoutCircleFillPath          = `<path fill="currentColor" d="M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10ZM7 11V8l-5 4l5 4v-3h8v-2H7Z"/>`
	logoutCircleLinePath          = `<path fill="currentColor" d="M5 11h8v2H5v3l-5-4l5-4v3Zm-1 7h2.708a8 8 0 1 0 0-12H4a9.985 9.985 0 0 1 8-4c5.523 0 10 4.477 10 10s-4.477 10-10 10a9.985 9.985 0 0 1-8-4Z"/>`
	logoutCircleRFillPath         = `<path fill="currentColor" d="M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10Zm5-6l5-4l-5-4v3H9v2h8v3Z"/>`
	logoutCircleRLinePath         = `<path fill="currentColor" d="M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2a9.985 9.985 0 0 1 8 4h-2.71a8 8 0 1 0 .001 12h2.71A9.985 9.985 0 0 1 12 22Zm7-6v-3h-8v-2h8V8l5 4l-5 4Z"/>`
	loopLeftFillPath              = `<path fill="currentColor" d="M12 4a7.986 7.986 0 0 0-6.357 3.143L8 9.5H2v-6l2.219 2.219A9.982 9.982 0 0 1 12 2c5.523 0 10 4.477 10 10h-2a8 8 0 0 0-8-8Zm-8 8a8 8 0 0 0 14.357 4.857L16 14.5h6v6l-2.219-2.219A9.982 9.982 0 0 1 12 22C6.477 22 2 17.523 2 12h2Z"/>`
	loopLeftLinePath              = `<path fill="currentColor" d="M12 4a7.992 7.992 0 0 0-6.616 3.5H8v2H2v-6h2V6a9.984 9.984 0 0 1 8-4c5.523 0 10 4.477 10 10h-2a8 8 0 0 0-8-8Zm-8 8a8 8 0 0 0 14.616 4.5H16v-2h6v6h-2V18a9.984 9.984 0 0 1-8 4C6.477 22 2 17.523 2 12h2Z"/>`
	loopRightFillPath             = `<path fill="currentColor" d="M12 4c2.59 0 4.894 1.23 6.357 3.143L16 9.5h6v-6l-2.219 2.219A9.982 9.982 0 0 0 12 2C6.477 2 2 6.477 2 12h2a8 8 0 0 1 8-8Zm8 8a8 8 0 0 1-14.357 4.857L8 14.5H2v6l2.219-2.219A9.982 9.982 0 0 0 12 22c5.523 0 10-4.477 10-10h-2Z"/>`
	loopRightLinePath             = `<path fill="currentColor" d="M12 4a7.992 7.992 0 0 1 6.616 3.5H16v2h6v-6h-2V6a9.984 9.984 0 0 0-8-4C6.477 2 2 6.477 2 12h2a8 8 0 0 1 8-8Zm8 8a8 8 0 0 1-14.616 4.5H8v-2H2v6h2V18a9.984 9.984 0 0 0 8 4c5.523 0 10-4.477 10-10h-2Z"/>`
	luggageCartFillPath           = `<path fill="currentColor" d="M5.5 20a1.5 1.5 0 1 1 0 3a1.5 1.5 0 0 1 0-3Zm13 0a1.5 1.5 0 1 1 0 3a1.5 1.5 0 0 1 0-3ZM2.172 1.758L6 5.586V17h14v2H5a1 1 0 0 1-1-1V6.414L.758 3.172l1.414-1.414ZM16 3a1 1 0 0 1 1 1v2h2.994C20.55 6 21 6.456 21 6.996v8.01a1 1 0 0 1-1.006.994H8.007A1.008 1.008 0 0 1 7 15.005v-8.01A1 1 0 0 1 8.007 6H11V4a1 1 0 0 1 1-1h4Zm-5 5h-1v6h1V8Zm7 0h-1v6h1V8Zm-3-3h-2v1h2V5Z"/>`
	luggageCartLinePath           = `<path fill="currentColor" d="M5.5 20a1.5 1.5 0 1 1 0 3a1.5 1.5 0 0 1 0-3Zm13 0a1.5 1.5 0 1 1 0 3a1.5 1.5 0 0 1 0-3ZM2.172 1.758L6 5.586V17h14v2H5a1 1 0 0 1-1-1V6.414L.758 3.172l1.414-1.414ZM16 3a1 1 0 0 1 1 1v2h2.994C20.55 6 21 6.456 21 6.996v8.01a1 1 0 0 1-1.006.994H8.007A1.008 1.008 0 0 1 7 15.005v-8.01A1 1 0 0 1 8.007 6H11V4a1 1 0 0 1 1-1h4Zm-6 5H9v6h1V8Zm6 0h-4v6h4V8Zm3 0h-1v6h1V8Zm-4-3h-2v1h2V5Z"/>`
	luggageDepositFillPath        = `<path fill="currentColor" d="M15 3a1 1 0 0 1 1 1v2h4a1 1 0 0 1 1 1v12h2v2H1v-2h2V7a1 1 0 0 1 1-1h4V4a1 1 0 0 1 1-1h6Zm-5 5H8v11h2V8Zm6 0h-2v11h2V8Zm-2-3h-4v1h4V5Z"/>`
	luggageDepositLinePath        = `<path fill="currentColor" d="M15 3a1 1 0 0 1 1 1v2h4a1 1 0 0 1 1 1v12h2v2H1v-2h2V7a1 1 0 0 1 1-1h4V4a1 1 0 0 1 1-1h6ZM8 8H5v11h3V8Zm6 0h-4v11h4V8Zm5 0h-3v11h3V8Zm-5-3h-4v1h4V5Z"/>`
	lungsFillPath                 = `<path fill="currentColor" d="M8.5 5.5c1.412.47 2.048 2.159 2.327 4.023l-4.523 2.611l1 1.732l3.71-2.141C11.06 13.079 11 14.309 11 15c0 3-1 6-5 6s-4 0-4-4C2 9.5 5.5 4.5 8.5 5.5ZM22.001 17v.436c-.005 3.564-.15 3.564-4 3.564c-4 0-5-3-5-6c0-.691-.06-1.92-.014-3.274l3.71 2.14l1-1.732l-4.523-2.61c.279-1.865.915-3.553 2.327-4.024c3-1 6.5 4 6.5 11.5ZM13 2v9h-2V2h2Z"/>`
	lungsLinePath                 = `<path fill="currentColor" d="M22.001 17c-.001 4-.001 4-4 4c-4 0-5-3-5-6c0-.378-.018-.918-.026-1.55l2.023 1.169L15 15c0 2.776.816 4 3 4c1.14 0 1.61-.007 1.963-.038c.03-.351.037-.822.037-1.962c0-3.205-.703-6.033-1.835-7.9c-.838-1.382-1.613-1.842-2.032-1.703c-.293.098-.605.65-.831 1.623l-1.79-1.033c.369-1.197.982-2.151 1.988-2.487c3-1 6.503 4 6.5 11.5ZM8.5 5.5c1.007.336 1.62 1.29 1.989 2.487L8.699 9.02c-.226-.973-.539-1.525-.831-1.623c-.42-.14-1.195.32-2.032 1.702C4.703 10.967 4 13.795 4 17c0 1.14.007 1.61.037 1.962C4.39 18.993 4.86 19 6 19c2.184 0 3-1.224 3-4l.004-.382l2.023-1.168c-.01.633-.027 1.172-.027 1.55c0 3-1 6-5 6s-4 0-4-4C2 9.5 5.5 4.5 8.5 5.5ZM13 2v7.422l4.696 2.712l-1 1.732L12 11.155l-4.696 2.711l-1-1.732L11 9.422V2h2Z"/>`
	macFillPath                   = `<path fill="currentColor" d="M14 18v2l2 1v1H8l-.004-.996L10 20v-2H2.992A.998.998 0 0 1 2 16.992V4.008C2 3.451 2.455 3 2.992 3h18.016c.548 0 .992.449.992 1.007v12.985c0 .557-.455 1.008-.992 1.008H14ZM4 14v2h16v-2H4Z"/>`
	macLinePath                   = `<path fill="currentColor" d="M14 18v2l2 1v1H8l-.004-.996L10 20v-2H2.992A.998.998 0 0 1 2 16.992V4.008C2 3.451 2.455 3 2.992 3h18.016c.548 0 .992.449.992 1.007v12.985c0 .557-.455 1.008-.992 1.008H14ZM4 5v9h16V5H4Z"/>`
	macbookFillPath               = `<path fill="currentColor" d="M2 4.007C2 3.45 2.455 3 2.992 3h18.016c.548 0 .992.45.992 1.007V17H2V4.007ZM1 19h22v2H1v-2Z"/>`
	macbookLinePath               = `<path fill="currentColor" d="M4 5v11h16V5H4Zm-2-.993C2 3.451 2.455 3 2.992 3h18.016c.548 0 .992.449.992 1.007V18H2V4.007ZM1 19h22v2H1v-2Z"/>`
	magicFillPath                 = `<path fill="currentColor" d="m15.224 15.508l-2.213 4.65a.6.6 0 0 1-.977.155l-3.542-3.739a.6.6 0 0 0-.358-.182l-5.106-.668a.6.6 0 0 1-.45-.882L5.04 10.32a.6.6 0 0 0 .063-.397L4.16 4.86a.6.6 0 0 1 .7-.7l5.062.943a.6.6 0 0 0 .397-.063l4.523-2.461a.6.6 0 0 1 .882.45l.668 5.105a.6.6 0 0 0 .182.358l3.739 3.542a.6.6 0 0 1-.155.977l-4.65 2.213a.6.6 0 0 0-.284.284Zm.797 1.927l1.414-1.414l4.242 4.242l-1.414 1.414l-4.242-4.242Z"/>`
	magicLinePath                 = `<path fill="currentColor" d="M15.199 9.944a2.6 2.6 0 0 1-.79-1.55l-.403-3.083l-2.731 1.486a2.6 2.6 0 0 1-1.719.272L6.5 6.5l.57 3.056a2.6 2.6 0 0 1-.273 1.719l-1.486 2.73l3.083.403a2.6 2.6 0 0 1 1.55.79l2.138 2.258l1.336-2.807a2.6 2.6 0 0 1 1.23-1.231l2.808-1.336l-2.257-2.138Zm.025 5.564l-2.213 4.65a.6.6 0 0 1-.977.155l-3.542-3.739a.6.6 0 0 0-.358-.182l-5.106-.668a.6.6 0 0 1-.45-.882L5.04 10.32a.6.6 0 0 0 .063-.397L4.16 4.86a.6.6 0 0 1 .7-.7l5.062.943a.6.6 0 0 0 .397-.063l4.523-2.461a.6.6 0 0 1 .882.45l.668 5.105a.6.6 0 0 0 .182.358l3.739 3.542a.6.6 0 0 1-.155.977l-4.65 2.213a.6.6 0 0 0-.284.284Zm.797 1.927l1.414-1.414l4.242 4.242l-1.414 1.414l-4.242-4.242Z"/>`
	mailAddFillPath               = `<path fill="currentColor" d="M22 13.341A6 6 0 0 0 14.341 21H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h18a1 1 0 0 1 1 1v9.341Zm-9.94-1.658L5.648 6.238L4.353 7.762l7.72 6.555l7.581-6.56l-1.308-1.513l-6.285 5.439ZM21 18h3v2h-3v3h-2v-3h-3v-2h3v-3h2v3Z"/>`
	mailAddLinePath               = `<path fill="currentColor" d="M22 13h-2V7.238l-7.928 7.1L4 7.216V19h10v2H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h18a1 1 0 0 1 1 1v9ZM4.511 5l7.55 6.662L19.502 5H4.511ZM21 18h3v2h-3v3h-2v-3h-3v-2h3v-3h2v3Z"/>`
	mailCheckFillPath             = `<path fill="currentColor" d="M22 13.341A6 6 0 0 0 14.341 21H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h18a1 1 0 0 1 1 1v9.341Zm-9.94-1.658L5.648 6.238L4.353 7.762l7.72 6.555l7.581-6.56l-1.308-1.513l-6.285 5.439ZM19 22l-3.536-3.535l1.415-1.415L19 19.172l3.535-3.536l1.415 1.414L19 22Z"/>`
	mailCheckLinePath             = `<path fill="currentColor" d="M22 14h-2V7.238l-7.928 7.1L4 7.216V19h10v2H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h18a1 1 0 0 1 1 1v10ZM4.511 5l7.55 6.662L19.502 5H4.511ZM19 22l-3.536-3.535l1.415-1.415L19 19.172l3.535-3.536l1.415 1.414L19 22Z"/>`
	mailCloseFillPath             = `<path fill="currentColor" d="M22 13.341A6 6 0 0 0 14.341 21H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h18a1 1 0 0 1 1 1v9.341Zm-9.94-1.658L5.648 6.238L4.353 7.762l7.72 6.555l7.581-6.56l-1.308-1.513l-6.285 5.439ZM21.415 19l2.121 2.121l-1.414 1.415L20 20.413l-2.121 2.121l-1.415-1.414L18.587 19l-2.121-2.121l1.414-1.415L20 17.587l2.121-2.121l1.415 1.414L21.413 19Z"/>`
	mailCloseLinePath             = `<path fill="currentColor" d="M22 14h-2V7.238l-7.928 7.1L4 7.216V19h11v2H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h18a1 1 0 0 1 1 1v10ZM4.511 5l7.55 6.662L19.502 5H4.511Zm16.903 14l2.121 2.121l-1.414 1.415L20 20.413l-2.121 2.121l-1.415-1.414L18.587 19l-2.121-2.121l1.414-1.415L20 17.587l2.121-2.121l1.415 1.414L21.413 19Z"/>`
	mailDownloadFillPath          = `<path fill="currentColor" d="M22 12.803A6 6 0 0 0 13.803 21H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h18a1 1 0 0 1 1 1v8.803Zm-9.94-1.12L5.648 6.238L4.353 7.762l7.72 6.555l7.581-6.56l-1.308-1.513l-6.285 5.439ZM20 18h3l-4 4l-4-4h3v-4h2v4Z"/>`
	mailDownloadLinePath          = `<path fill="currentColor" d="m20 7.238l-7.928 7.1L4 7.216V19h9v2H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h18a1 1 0 0 1 1 1v8h-2V7.238ZM19.501 5H4.511l7.55 6.662L19.502 5ZM20 18h3l-4 4l-4-4h3v-4h2v4Z"/>`
	mailFillPath                  = `<path fill="currentColor" d="M3 3h18a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Zm9.06 8.683L5.648 6.238L4.353 7.762l7.72 6.555l7.581-6.56l-1.308-1.513l-6.285 5.439Z"/>`
	mailForbidFillPath            = `<path fill="currentColor" d="m15.266 11.554l4.388-3.798l-1.308-1.512l-6.285 5.439l-6.414-5.445l-1.294 1.524l7.702 6.54A6.967 6.967 0 0 0 11 18c0 1.074.242 2.09.674 3H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h18a1 1 0 0 1 1 1v8.255A6.968 6.968 0 0 0 18 11a6.98 6.98 0 0 0-2.734.554Zm1.44 9.154a3 3 0 0 0 4.001-4.001l-4 4Zm-1.414-1.415l4.001-4a3 3 0 0 0-4.001 4.001ZM18 23a5 5 0 1 1 0-10a5 5 0 0 1 0 10Z"/>`
	mailForbidLinePath            = `<path fill="currentColor" d="m20 7.238l-7.928 7.1L4 7.216V19h7.07c.102.706.308 1.378.604 2H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h18a1 1 0 0 1 1 1v8.255a6.972 6.972 0 0 0-2-.965V7.238ZM19.501 5H4.511l7.55 6.662L19.502 5Zm-2.794 15.708a3 3 0 0 0 4.001-4.001l-4.001 4Zm-1.415-1.415l4.001-4a3 3 0 0 0-4.001 4.001ZM18 23a5 5 0 1 1 0-10a5 5 0 0 1 0 10Z"/>`
	mailLinePath                  = `<path fill="currentColor" d="M3 3h18a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Zm17 4.238l-7.928 7.1L4 7.216V19h16V7.238ZM4.511 5l7.55 6.662L19.502 5H4.511Z"/>`
	mailLockFillPath              = `<path fill="currentColor" d="M22 12a5.002 5.002 0 0 0-7.9 3H13v6H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h18a1 1 0 0 1 1 1v8Zm-9.94-.317L5.648 6.238L4.353 7.762l7.72 6.555l7.581-6.56l-1.308-1.513l-6.285 5.439ZM22 17h1v5h-8v-5h1v-1a3 3 0 1 1 6 0v1Zm-2 0v-1a1 1 0 1 0-2 0v1h2Z"/>`
	mailLockLinePath              = `<path fill="currentColor" d="m20 7.238l-7.928 7.1L4 7.216V19h9v2H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h18a1 1 0 0 1 1 1v7h-2V7.238ZM19.501 5H4.511l7.55 6.662L19.502 5ZM22 17h1v5h-8v-5h1v-1a3 3 0 1 1 6 0v1Zm-2 0v-1a1 1 0 1 0-2 0v1h2Z"/>`
	mailOpenFillPath              = `<path fill="currentColor" d="m2.243 6.854l9.247-5.546a1 1 0 0 1 1.028 0l9.24 5.546a.5.5 0 0 1 .242.429V20a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V7.283a.5.5 0 0 1 .243-.429Zm16.103 1.39l-6.285 5.439l-6.414-5.445l-1.294 1.524l7.72 6.555l7.581-6.561l-1.308-1.512Z"/>`
	mailOpenLinePath              = `<path fill="currentColor" d="m2.243 6.854l9.247-5.546a1 1 0 0 1 1.028 0l9.24 5.546a.5.5 0 0 1 .242.429V20a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V7.283a.5.5 0 0 1 .243-.429ZM4 8.132V19h16V8.132l-7.996-4.8L4 8.132Zm8.06 5.566l5.296-4.463l1.288 1.53l-6.57 5.537l-6.71-5.53l1.272-1.544l5.424 4.47Z"/>`
	mailSendFillPath              = `<path fill="currentColor" d="M2 5.5V3.993A1 1 0 0 1 2.992 3h18.016c.548 0 .992.445.992.993v16.014a1 1 0 0 1-.992.993H2.992A.993.993 0 0 1 2 20.007V19h18V7.3l-8 7.2l-10-9ZM0 10h5v2H0v-2Zm0 5h8v2H0v-2Z"/>`
	mailSendLinePath              = `<path fill="currentColor" d="M21 3a1 1 0 0 1 1 1v16.007a1 1 0 0 1-.992.993H2.992A.993.993 0 0 1 2 20.007V19h18V7.3l-8 7.2l-10-9V4a1 1 0 0 1 1-1h18ZM8 15v2H0v-2h8Zm-3-5v2H0v-2h5Zm14.566-5H4.434L12 11.81L19.566 5Z"/>`
	mailSettingsFillPath          = `<path fill="currentColor" d="M22 13.341A6 6 0 0 0 14.341 21H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h18a1 1 0 0 1 1 1v9.341Zm-9.94-1.658L5.648 6.238L4.353 7.762l7.72 6.555l7.581-6.56l-1.308-1.513l-6.285 5.439Zm4.99 7.866a3.023 3.023 0 0 1 0-1.098l-1.014-.585l1-1.732l1.014.586c.278-.238.599-.425.95-.55V15h2v1.17c.351.125.672.312.95.55l1.014-.586l1 1.732l-1.014.585a3.023 3.023 0 0 1 0 1.098l1.014.585l-1 1.732l-1.014-.586a2.997 2.997 0 0 1-.95.55V23h-2v-1.17a2.997 2.997 0 0 1-.95-.55l-1.014.586l-1-1.732l1.014-.585ZM20 20a1 1 0 1 0 0-2a1 1 0 0 0 0 2Z"/>`
	mailSettingsLinePath          = `<path fill="currentColor" d="m20 7.238l-7.928 7.1L4 7.216V19h10v2H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h18a1 1 0 0 1 1 1v9h-2V7.238ZM19.501 5H4.511l7.55 6.662L19.502 5ZM17.05 19.549a3.023 3.023 0 0 1 0-1.098l-1.014-.585l1-1.732l1.014.586c.278-.238.599-.425.95-.55V15h2v1.17c.351.125.672.312.95.55l1.014-.586l1 1.732l-1.014.585a3.023 3.023 0 0 1 0 1.098l1.014.585l-1 1.732l-1.014-.586a2.997 2.997 0 0 1-.95.55V23h-2v-1.17a2.997 2.997 0 0 1-.95-.55l-1.014.586l-1-1.732l1.014-.585ZM20 20a1 1 0 1 0 0-2a1 1 0 0 0 0 2Z"/>`
	mailStarFillPath              = `<path fill="currentColor" d="M22 14.044A6 6 0 0 0 13.689 21H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h18a1 1 0 0 1 1 1v10.044Zm-9.94-2.361L5.648 6.238L4.353 7.762l7.72 6.555l7.581-6.56l-1.308-1.513l-6.285 5.439ZM19.5 21.75l-2.645 1.39l.505-2.945l-2.14-2.086l2.957-.43L19.5 15l1.323 2.68l2.957.43l-2.14 2.085l.505 2.946L19.5 21.75Z"/>`
	mailStarLinePath              = `<path fill="currentColor" d="M22 13h-2V7.238l-7.928 7.1L4 7.216V19h10v2H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h18a1 1 0 0 1 1 1v9ZM4.511 5l7.55 6.662L19.502 5H4.511ZM19.5 21.75l-2.645 1.39l.505-2.945l-2.14-2.086l2.957-.43L19.5 15l1.323 2.68l2.957.43l-2.14 2.085l.505 2.946L19.5 21.75Z"/>`
	mailUnreadFillPath            = `<path fill="currentColor" d="M18.803 8.493A5.022 5.022 0 0 0 22 8.9V20a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h13.1c-.066.323-.1.658-.1 1a4.98 4.98 0 0 0 1.193 3.241l-5.132 4.442l-6.414-5.445l-1.294 1.524l7.72 6.555l6.73-5.824ZM21 7a3 3 0 1 1 0-6a3 3 0 0 1 0 6Z"/>`
	mailUnreadLinePath            = `<path fill="currentColor" d="M16.1 3a5.022 5.022 0 0 0 0 2H4.511l7.55 6.662l5.049-4.52c.426.527.958.966 1.563 1.285l-6.601 5.911L4 7.216V19h16V8.9a5.022 5.022 0 0 0 2 0V20a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h13.1ZM21 1a3 3 0 1 1 0 6a3 3 0 0 1 0-6Z"/>`
	mailVolumeFillPath            = `<path fill="currentColor" d="M20 14.5v9L16.667 21H14v-4h2.667L20 14.5ZM21 3a1 1 0 0 1 1 1v10.529A6 6 0 0 0 12.34 21H3.002a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h18Zm0 14a2 2 0 0 1 .15 3.994L21 21v-4ZM5.647 6.238L4.353 7.762l7.72 6.555l7.581-6.56l-1.308-1.513l-6.286 5.438l-6.413-5.444Z"/>`
	mailVolumeLinePath            = `<path fill="currentColor" d="M20 14.5v9L16.667 21H14v-4h2.667L20 14.5ZM21 3a1 1 0 0 1 1 1v9h-2V7.237l-7.928 7.101L4 7.215V19h8v2H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h18Zm0 14a2 2 0 0 1 .15 3.994L21 21v-4ZM19.5 5H4.511l7.55 6.662L19.5 5Z"/>`
	mapFillPath                   = `<path fill="currentColor" d="m2 5l7-3l6 3l6.303-2.701a.5.5 0 0 1 .697.46V19l-7 3l-6-3l-6.303 2.701a.5.5 0 0 1-.697-.46V5Z"/>`
	mapLinePath                   = `<path fill="currentColor" d="m2 5l7-3l6 3l6.303-2.701a.5.5 0 0 1 .697.46V19l-7 3l-6-3l-6.303 2.701a.5.5 0 0 1-.697-.46V5Zm12.935 2.204l-6-3L4 6.319v12.648l5.065-2.17l6 3L20 17.68V5.033l-5.065 2.17Z"/>`
	mapPinAddFillPath             = `<path fill="currentColor" d="M18.364 17.364L12 23.728l-6.364-6.364a9 9 0 1 1 12.728 0ZM11 10H8v2h3v3h2v-3h3v-2h-3V7h-2v3Z"/>`
	mapPinAddLinePath             = `<path fill="currentColor" d="m12 20.9l4.95-4.95a7 7 0 1 0-9.9 0L12 20.9Zm0 2.828l-6.364-6.364a9 9 0 1 1 12.728 0L12 23.728ZM11 10V7h2v3h3v2h-3v3h-2v-3H8v-2h3Z"/>`
	mapPinFillPath                = `<path fill="currentColor" d="M18.364 17.364L12 23.728l-6.364-6.364a9 9 0 1 1 12.728 0ZM12 15a4 4 0 1 0 0-8a4 4 0 0 0 0 8Zm0-2a2 2 0 1 1 0-4a2 2 0 0 1 0 4Z"/>`
	mapPinFiveFillPath            = `<path fill="currentColor" d="M17.657 15.657L12 21.314l-5.657-5.657a8 8 0 1 1 11.314 0ZM5 22h14v2H5v-2Z"/>`
	mapPinFiveLinePath            = `<path fill="currentColor" d="m12 18.485l4.243-4.242a6 6 0 1 0-8.486 0L12 18.485Zm5.657-2.828L12 21.314l-5.657-5.657a8 8 0 1 1 11.314 0ZM5 22h14v2H5v-2Z"/>`
	mapPinFourFillPath            = `<path fill="currentColor" d="M11 17.938A8.001 8.001 0 0 1 12 2a8 8 0 0 1 1 15.938V21h-2v-3.062ZM5 22h14v2H5v-2Z"/>`
	mapPinFourLinePath            = `<path fill="currentColor" d="M11 17.938A8.001 8.001 0 0 1 12 2a8 8 0 0 1 1 15.938V21h-2v-3.062ZM12 16a6 6 0 1 0 0-12a6 6 0 0 0 0 12Zm-7 6h14v2H5v-2Z"/>`
	mapPinLinePath                = `<path fill="currentColor" d="m12 20.9l4.95-4.95a7 7 0 1 0-9.9 0L12 20.9Zm0 2.828l-6.364-6.364a9 9 0 1 1 12.728 0L12 23.728ZM12 13a2 2 0 1 0 0-4a2 2 0 0 0 0 4Zm0 2a4 4 0 1 1 0-8a4 4 0 0 1 0 8Z"/>`
	mapPinRangeFillPath           = `<path fill="currentColor" d="M11 17.938A8.001 8.001 0 0 1 12 2a8 8 0 0 1 1 15.938v2.074c3.946.092 7 .723 7 1.488c0 .828-3.582 1.5-8 1.5s-8-.672-8-1.5c0-.765 3.054-1.396 7-1.488v-2.074ZM12 12a2 2 0 1 0 0-4a2 2 0 0 0 0 4Z"/>`
	mapPinRangeLinePath           = `<path fill="currentColor" d="M11 17.938A8.001 8.001 0 0 1 12 2a8 8 0 0 1 1 15.938v2.074c3.946.092 7 .723 7 1.488c0 .828-3.582 1.5-8 1.5s-8-.672-8-1.5c0-.765 3.054-1.396 7-1.488v-2.074ZM12 16a6 6 0 1 0 0-12a6 6 0 0 0 0 12Zm0-4a2 2 0 1 1 0-4a2 2 0 0 1 0 4Z"/>`
	mapPinThreeFillPath           = `<path fill="currentColor" d="M11 19.945A9.001 9.001 0 0 1 12 2a9 9 0 0 1 1 17.945V24h-2v-4.055Z"/>`
	mapPinThreeLinePath           = `<path fill="currentColor" d="M11 19.945A9.001 9.001 0 0 1 12 2a9 9 0 0 1 1 17.945V24h-2v-4.055ZM12 18a7 7 0 1 0 0-14a7 7 0 0 0 0 14Z"/>`
	mapPinTimeFillPath            = `<path fill="currentColor" d="M13 11V6h-2v7h6v-2h-4Zm5.364 6.364L12 23.728l-6.364-6.364a9 9 0 1 1 12.728 0Z"/>`
	mapPinTimeLinePath            = `<path fill="currentColor" d="M16.95 15.95a7 7 0 1 0-9.9 0L12 20.9l4.95-4.95ZM12 23.728l-6.364-6.364a9 9 0 1 1 12.728 0L12 23.728ZM13 11h4v2h-6V6h2v5Z"/>`
	mapPinTwoFillPath             = `<path fill="currentColor" d="M18.364 17.364L12 23.728l-6.364-6.364a9 9 0 1 1 12.728 0ZM12 13a2 2 0 1 0 0-4a2 2 0 0 0 0 4Z"/>`
	mapPinTwoLinePath             = `<path fill="currentColor" d="m12 23.728l-6.364-6.364a9 9 0 1 1 12.728 0L12 23.728Zm4.95-7.778a7 7 0 1 0-9.9 0L12 20.9l4.95-4.95ZM12 13a2 2 0 1 1 0-4a2 2 0 0 1 0 4Z"/>`
	mapPinUserFillPath            = `<path fill="currentColor" d="M17.084 15.812a7 7 0 1 0-10.168 0A5.996 5.996 0 0 1 12 13a5.996 5.996 0 0 1 5.084 2.812ZM12 23.728l-6.364-6.364a9 9 0 1 1 12.728 0L12 23.728ZM12 12a3 3 0 1 1 0-6a3 3 0 0 1 0 6Z"/>`
	mapPinUserLinePath            = `<path fill="currentColor" d="M17.084 15.812a7 7 0 1 0-10.168 0A5.996 5.996 0 0 1 12 13a5.996 5.996 0 0 1 5.084 2.812Zm-8.699 1.473L12 20.899l3.615-3.614a4 4 0 0 0-7.23 0ZM12 23.728l-6.364-6.364a9 9 0 1 1 12.728 0L12 23.728ZM12 10a1 1 0 1 0 0-2a1 1 0 0 0 0 2Zm0 2a3 3 0 1 1 0-6a3 3 0 0 1 0 6Z"/>`
	mapTwoFillPath                = `<path fill="currentColor" d="m2 5l7-3l6 3l6.303-2.701a.5.5 0 0 1 .697.46V19l-7 3l-6-3l-6.303 2.701a.5.5 0 0 1-.697-.46V5Zm13 14.764V7.176l-.065.028L9 4.236v12.588l.065-.028L15 19.764Z"/>`
	mapTwoLinePath                = `<path fill="currentColor" d="m2 5l7-3l6 3l6.303-2.701a.5.5 0 0 1 .697.46V19l-7 3l-6-3l-6.303 2.701a.5.5 0 0 1-.697-.46V5Zm14 14.395l4-1.714V5.033l-4 1.714v12.648Zm-2-.131V6.736l-4-2v12.528l4 2Zm-6-2.011V4.605L4 6.319v12.648l4-1.714Z"/>`
	markPenFillPath               = `<path fill="currentColor" d="m15.95 2.39l5.657 5.657a1 1 0 0 1 0 1.414l-7.778 7.778l-2.122.707l-1.414 1.415a1 1 0 0 1-1.414 0l-4.243-4.243a1 1 0 0 1 0-1.414L6.05 12.29l.707-2.122l7.779-7.778a1 1 0 0 1 1.414 0Zm.707 3.536l-6.364 6.364l1.414 1.414l6.364-6.364l-1.414-1.414ZM4.283 16.886l2.828 2.828l-1.414 1.414l-4.243-1.414l2.829-2.828Z"/>`
	markPenLinePath               = `<path fill="currentColor" d="M15.243 4.511L8.505 11.25l-.707 2.12l-1.04 1.042l2.828 2.828l1.04-1.04l2.122-.708l6.737-6.737l-4.242-4.243Zm6.364 3.536a1 1 0 0 1 0 1.414l-7.778 7.778l-2.122.707l-1.414 1.415a1 1 0 0 1-1.414 0l-4.243-4.243a1 1 0 0 1 0-1.414L6.05 12.29l.707-2.122l7.779-7.778a1 1 0 0 1 1.414 0l5.657 5.657Zm-6.364-.707l1.414 1.414l-4.95 4.95l-1.414-1.414l4.95-4.95Zm-10.96 9.546l2.828 2.828l-1.414 1.414l-4.243-1.414l2.829-2.828Z"/>`
	markdownFillPath              = `<path fill="currentColor" d="M3 3h18a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Zm4 12.5v-4l2 2l2-2v4h2v-7h-2l-2 2l-2-2H5v7h2Zm11-3v-4h-2v4h-2l3 3l3-3h-2Z"/>`
	markdownLinePath              = `<path fill="currentColor" d="M3 3h18a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Zm1 2v14h16V5H4Zm3 10.5H5v-7h2l2 2l2-2h2v7h-2v-4l-2 2l-2-2v4Zm11-3h2l-3 3l-3-3h2v-4h2v4Z"/>`
	markupFillPath                = `<path fill="currentColor" d="M12 21.997c-5.523 0-10-4.478-10-10c0-5.523 4.477-10 10-10s10 4.477 10 10c0 5.522-4.477 10-10 10Zm5.051-3.796l-.862-3.447a1 1 0 0 0-.97-.757H8.781a1 1 0 0 0-.97.757l-.862 3.447A7.967 7.967 0 0 0 12 19.997a7.967 7.967 0 0 0 5.051-1.796ZM10 11.997h4v-1.5l-1.039-3.635a1 1 0 0 0-1.922 0L10 10.497v1.5Z"/>`
	markupLinePath                = `<path fill="currentColor" d="m10 10.497l1.039-3.635a1 1 0 0 1 1.922 0L14 10.497v1.5h.72a1 1 0 0 1 .97.757l1.361 5.447a8 8 0 1 0-10.102 0l1.362-5.447a1 1 0 0 1 .97-.757H10v-1.5Zm2 9.5a7.951 7.951 0 0 0 3.265-.694l-1.327-5.306h-3.876l-1.327 5.305a7.948 7.948 0 0 0 3.265.695Zm0 2c-5.523 0-10-4.478-10-10c0-5.523 4.477-10 10-10s10 4.477 10 10c0 5.522-4.477 10-10 10Z"/>`
	mastercardFillPath            = `<path fill="currentColor" d="M12.001 6.654a6.786 6.786 0 0 1 2.596 5.344A6.786 6.786 0 0 1 12 17.342a6.786 6.786 0 0 1-2.596-5.344A6.786 6.786 0 0 1 12 6.654Zm-.87-.582A7.783 7.783 0 0 0 8.402 12a7.782 7.782 0 0 0 2.728 5.926a6.798 6.798 0 1 1 .003-11.854Zm1.742 11.854A7.783 7.783 0 0 0 15.601 12a7.783 7.783 0 0 0-2.73-5.928a6.798 6.798 0 1 1 .003 11.854Z"/>`
	mastercardLinePath            = `<path fill="currentColor" d="M12.001 18.294a7.3 7.3 0 1 1 0-12.588a7.3 7.3 0 1 1 0 12.588Zm1.702-1.383a5.3 5.3 0 1 0 0-9.82A7.273 7.273 0 0 1 15.6 12c0 1.89-.719 3.613-1.898 4.91ZM10.299 7.09a5.3 5.3 0 1 0 0 9.82A7.274 7.274 0 0 1 8.401 12c0-1.89.719-3.614 1.898-4.91Zm1.702 1.115a5.284 5.284 0 0 0-1.6 3.795c0 1.488.613 2.832 1.6 3.795a5.284 5.284 0 0 0 1.6-3.795a5.284 5.284 0 0 0-1.6-3.795Z"/>`
	mastodonFillPath              = `<path fill="currentColor" d="M21.26 13.99c-.275 1.41-2.457 2.955-4.963 3.254c-1.306.156-2.593.3-3.965.236c-2.244-.103-4.014-.535-4.014-.535c0 .218.014.426.04.62c.292 2.215 2.196 2.347 4 2.41c1.82.061 3.44-.45 3.44-.45l.075 1.646s-1.273.684-3.54.81c-1.252.068-2.805-.032-4.613-.51c-3.923-1.039-4.598-5.22-4.701-9.464c-.032-1.26-.012-2.447-.012-3.44c0-4.34 2.843-5.611 2.843-5.611C7.283 2.298 9.742 2.021 12.3 2h.062c2.557.02 5.018.298 6.451.956c0 0 2.843 1.272 2.843 5.61c0 0 .036 3.201-.396 5.424Zm-2.957-5.087c0-1.074-.274-1.927-.823-2.558c-.566-.631-1.307-.955-2.228-.955c-1.065 0-1.872.41-2.405 1.228l-.518.87l-.519-.87C11.277 5.8 10.47 5.39 9.406 5.39c-.921 0-1.663.324-2.229.955c-.549.631-.822 1.484-.822 2.558v5.253h2.081V9.057c0-1.075.452-1.62 1.357-1.62c1 0 1.501.647 1.501 1.927v2.79h2.07v-2.79c0-1.28.5-1.927 1.5-1.927c.905 0 1.358.545 1.358 1.62v5.1h2.08V8.902Z"/>`
	mastodonLinePath              = `<path fill="currentColor" d="M3.019 12.008c-.032-1.26-.012-2.448-.012-3.442c0-4.338 2.843-5.61 2.843-5.61C7.283 2.298 9.742 2.021 12.3 2h.062c2.557.02 5.018.298 6.451.956c0 0 2.843 1.272 2.843 5.61c0 0 .036 3.201-.396 5.424c-.275 1.41-2.457 2.955-4.963 3.254c-1.306.156-2.593.3-3.965.236c-2.244-.102-4.014-.535-4.014-.535c0 .218.014.426.04.62c.084.633.299 1.095.605 1.435c.766.85 2.106.93 3.395.974c1.82.063 3.44-.449 3.44-.449l.075 1.646s-1.273.684-3.54.81c-1.252.068-2.804-.032-4.613-.51c-1.532-.406-2.568-1.29-3.27-2.471c-1.093-1.843-1.368-4.406-1.431-6.992Zm3.3 4.937v-2.548l2.474.605a20.628 20.628 0 0 0 1.303.245c.752.116 1.538.2 2.328.235c1.019.047 1.9-.017 3.636-.224c1.663-.199 3.148-1.196 3.236-1.65c.082-.422.151-.922.206-1.482c.07-.705.114-1.47.137-2.245c.015-.51.02-.945.017-1.256v-.059c0-1.43-.369-2.438-.963-3.158a3.008 3.008 0 0 0-.584-.548c-.09-.064-.135-.089-.13-.087c-1.013-.465-3.093-.752-5.617-.773h-.046c-2.54.02-4.62.308-5.65.782c.023-.01-.021.014-.112.078a3.008 3.008 0 0 0-.584.548c-.594.72-.963 1.729-.963 3.158c0 .232 0 .397-.003.875a77.501 77.501 0 0 0 .014 2.518c.054 2.197.264 3.835.7 5.041c.212.587.472 1.07.78 1.45a5.701 5.701 0 0 1-.18-1.505ZM8.085 6.37a1.143 1.143 0 1 1 0 2.287a1.143 1.143 0 0 1 0-2.287Z"/>`
	medalFillPath                 = `<path fill="currentColor" d="M12 7a8 8 0 1 1 0 16a8 8 0 0 1 0-16Zm0 3.5l-1.322 2.68l-2.958.43l2.14 2.085l-.505 2.946L12 17.25l2.645 1.39l-.505-2.945l2.14-2.086l-2.958-.43L12 10.5Zm1-8.501L18 2v3l-1.363 1.138A9.935 9.935 0 0 0 13 5.05V1.999Zm-2 0v3.05a9.935 9.935 0 0 0-3.636 1.088L6 5V2l5-.001Z"/>`
	medalLinePath                 = `<path fill="currentColor" d="M12 7a8 8 0 1 1 0 16a8 8 0 0 1 0-16Zm0 2a6 6 0 1 0 0 12a6 6 0 0 0 0-12Zm0 1.5l1.322 2.68l2.958.43l-2.14 2.085l.505 2.946L12 17.25l-2.645 1.39l.505-2.945l-2.14-2.086l2.958-.43L12 10.5ZM18 2v3l-1.363 1.138A9.935 9.935 0 0 0 13 5.05V1.999L18 2Zm-7-.001v3.05a9.935 9.935 0 0 0-3.636 1.088L6 5V2l5-.001Z"/>`
	medalTwoFillPath              = `<path fill="currentColor" d="m12 8.5l2.116 5.088l5.492.44l-4.184 3.585l1.278 5.36L12 20.1l-4.702 2.872l1.278-5.36l-4.184-3.584l5.492-.44L12 8.5ZM8 2v9H6V2h2Zm10 0v9h-2V2h2Zm-5 0v5h-2V2h2Z"/>`
	medalTwoLinePath              = `<path fill="currentColor" d="m12 8.5l2.116 5.088l5.492.44l-4.184 3.585l1.278 5.36L12 20.1l-4.702 2.872l1.278-5.36l-4.184-3.584l5.492-.44L12 8.5Zm0 5.207l-.739 1.776l-1.916.154l1.46 1.251l-.447 1.871L12 17.756l1.641 1.003l-.446-1.87l1.46-1.252l-1.916-.154L12 13.707ZM8 2v9H6V2h2Zm10 0v9h-2V2h2Zm-5 0v5h-2V2h2Z"/>`
	medicineBottleFillPath        = `<path fill="currentColor" d="M17 5v2a3 3 0 0 1 3 3v11a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V10a3 3 0 0 1 3-3V5h10Zm-4 6h-2v2H9v2h1.999L11 17h2l-.001-2H15v-2h-2v-2Zm6-9v2H5V2h14Z"/>`
	medicineBottleLinePath        = `<path fill="currentColor" d="M19 2v2h-2v3a3 3 0 0 1 3 3v11a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V10a3 3 0 0 1 3-3V4H5V2h14Zm-2 7H7a1 1 0 0 0-1 1v10h12V10a1 1 0 0 0-1-1Zm-4 2v2h2v2h-2.001L13 17h-2l-.001-2H9v-2h2v-2h2Zm2-7H9v3h6V4Z"/>`
	mediumFillPath                = `<path fill="currentColor" d="M4.001 3h16a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1h-16a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Zm13.3 12.94c-.1-.05-.15-.2-.15-.301V8.006c0-.1.05-.25.15-.351l.955-1.105V6.5h-3.415l-2.56 6.478L9.367 6.5H5.852v.05l.904 1.256c.201.2.251.502.251.753v5.523c.05.302 0 .653-.15.954L5.5 16.894v.05h3.616v-.05L7.76 15.087c-.15-.302-.201-.603-.15-.954V9.11c.05.1.1.1.15.301l3.414 7.633h.05L14.54 8.76c-.05.3-.05.652-.05.904v5.925c0 .15-.05.25-.15.351l-1.005.954v.05h4.921v-.05l-.954-.954Z"/>`
	mediumLinePath                = `<path fill="currentColor" d="M4.001 3h16a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1h-16a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Zm1 2v14h14V5h-14Zm12.3 10.94l.955.954v.05h-4.921v-.05l1.004-.954c.1-.1.15-.2.15-.351V9.664c0-.252 0-.603.051-.904l-3.314 8.285h-.05L7.76 9.412c-.05-.2-.1-.2-.15-.3v5.02c-.051.352 0 .653.15.955l1.356 1.807v.05H5.5v-.05l1.356-1.858c.15-.3.2-.652.15-.954V8.56c0-.251-.05-.553-.25-.753L5.851 6.55V6.5h3.516l2.912 6.478L14.841 6.5h3.415v.05l-.954 1.105c-.1.1-.15.251-.15.351v7.633c0 .1.05.251.15.301Z"/>`
	megaphoneFillPath             = `<path fill="currentColor" d="M21 10.063V4a1 1 0 0 0-1-1h-1c-1.979 1.979-5.697 3.087-8 3.613v10.774c2.303.526 6.021 1.634 8 3.613h1a1 1 0 0 0 1-1v-6.063a2 2 0 0 0 0-3.874ZM5 7a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h1l1 5h2V7H5Z"/>`
	megaphoneLinePath             = `<path fill="currentColor" d="M9 17s7 1 10 4h1a1 1 0 0 0 1-1v-6.063a2 2 0 0 0 0-3.874V4a1 1 0 0 0-1-1h-1C16 6 9 7 9 7H5a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h1l1 5h2v-5Zm2-8.339c.683-.146 1.527-.35 2.44-.617c1.678-.494 3.81-1.271 5.56-2.47v12.851c-1.75-1.198-3.883-1.975-5.56-2.469A33.967 33.967 0 0 0 11 15.34V8.66ZM5 9h4v6H5V9Z"/>`
	memoriesFillPath              = `<path fill="currentColor" d="M22 12c0-5.523-4.477-10-10-10a9.977 9.977 0 0 0-7.553 3.446L2 3v6h6L5.865 6.865A8 8 0 1 1 4 12H2c0 5.523 4.477 10 10 10s10-4.477 10-10ZM10.777 8.518l4.599 3.066a.5.5 0 0 1 0 .832l-4.599 3.066a.5.5 0 0 1-.777-.416V8.934a.5.5 0 0 1 .777-.416Z"/>`
	memoriesLinePath              = `<path fill="currentColor" d="M22 12c0-5.523-4.477-10-10-10a9.985 9.985 0 0 0-8 4V3.5H2v6h6v-2H5.385A8 8 0 1 1 4 12H2c0 5.523 4.477 10 10 10s10-4.477 10-10ZM10.777 8.518l4.599 3.066a.5.5 0 0 1 0 .832l-4.599 3.066a.5.5 0 0 1-.777-.416V8.934a.5.5 0 0 1 .777-.416Z"/>`
	menFillPath                   = `<path fill="currentColor" d="M18.586 5H14V3h8v8h-2V6.414l-3.537 3.537a7.5 7.5 0 1 1-1.414-1.414L18.586 5Z"/>`
	menLinePath                   = `<path fill="currentColor" d="M15.05 8.537L18.585 5H14V3h8v8h-2V6.414l-3.537 3.537a7.5 7.5 0 1 1-1.414-1.414ZM10.5 20a5.5 5.5 0 1 0 0-11a5.5 5.5 0 0 0 0 11Z"/>`
	mentalHealthFillPath          = `<path fill="currentColor" d="M11 2a8.002 8.002 0 0 1 7.934 6.965l2.25 3.539c.148.233.118.58-.225.728L19 14.07V17a2 2 0 0 1-2 2h-1.999L15 22H6v-3.694c0-1.18-.436-2.297-1.245-3.305A8 8 0 0 1 11 2Zm-.53 5.763a1.75 1.75 0 0 0-2.475 2.474L11 13.243l3.005-3.006a1.75 1.75 0 1 0-2.475-2.474l-.53.53l-.53-.53Z"/>`
	mentalHealthLinePath          = `<path fill="currentColor" d="M11 2a8.002 8.002 0 0 1 7.934 6.965l2.25 3.539c.148.233.118.58-.225.728L19 14.07V17a2 2 0 0 1-2 2h-1.999L15 22H6v-3.694c0-1.18-.436-2.297-1.245-3.305A8 8 0 0 1 11 2Zm0 2a6 6 0 0 0-4.684 9.75C7.41 15.114 8 16.667 8 18.306V20h5l.002-3H17v-4.248l1.55-.664l-1.543-2.425l-.057-.442A6.001 6.001 0 0 0 11 4Zm-.53 3.763l.53.53l.53-.53a1.75 1.75 0 0 1 2.475 2.474L11 13.243l-3.005-3.006a1.75 1.75 0 1 1 2.475-2.474Z"/>`
	menuAddFillPath               = `<path fill="currentColor" d="m18 15l-.001 3H21v2h-3.001L18 23h-2l-.001-3H13v-2h2.999L16 15h2Zm-7 3v2H3v-2h8Zm10-7v2H3v-2h18Zm0-7v2H3V4h18Z"/>`
	menuAddLinePath               = `<path fill="currentColor" d="m18 15l-.001 3H21v2h-3.001L18 23h-2l-.001-3H13v-2h2.999L16 15h2Zm-7 3v2H3v-2h8Zm10-7v2H3v-2h18Zm0-7v2H3V4h18Z"/>`
	menuFillPath                  = `<path fill="currentColor" d="M3 4h18v2H3V4Zm0 7h18v2H3v-2Zm0 7h18v2H3v-2Z"/>`
	menuFiveFillPath              = `<path fill="currentColor" d="M18 18v2H6v-2h12Zm3-7v2H3v-2h18Zm-3-7v2H6V4h12Z"/>`
	menuFiveLinePath              = `<path fill="currentColor" d="M18 18v2H6v-2h12Zm3-7v2H3v-2h18Zm-3-7v2H6V4h12Z"/>`
	menuFoldFillPath              = `<path fill="currentColor" d="M21 18v2H3v-2h18ZM6.95 3.55v9.9L2 8.5l4.95-4.95ZM21 11v2h-9v-2h9Zm0-7v2h-9V4h9Z"/>`
	menuFoldLinePath              = `<path fill="currentColor" d="M21 18v2H3v-2h18ZM6.596 3.903L8.01 5.318L4.828 8.5l3.182 3.18l-1.414 1.415L2 8.5l4.596-4.597ZM21 11v2h-9v-2h9Zm0-7v2h-9V4h9Z"/>`
	menuFourFillPath              = `<path fill="currentColor" d="M16 18v2H5v-2h11Zm5-7v2H3v-2h18Zm-2-7v2H8V4h11Z"/>`
	menuFourLinePath              = `<path fill="currentColor" d="M16 18v2H5v-2h11Zm5-7v2H3v-2h18Zm-2-7v2H8V4h11Z"/>`
	menuLinePath                  = `<path fill="currentColor" d="M3 4h18v2H3V4Zm0 7h18v2H3v-2Zm0 7h18v2H3v-2Z"/>`
	menuSearchFillPath            = `<path fill="currentColor" d="M18.617 13.032a5.5 5.5 0 1 1 1.414-1.414l2.676 2.675l-1.414 1.414l-2.675-2.675ZM3 4h5v2H3V4Zm0 7h5v2H3v-2Zm0 7h18v2H3v-2Z"/>`
	menuSearchLinePath            = `<path fill="currentColor" d="M15.5 5a3.5 3.5 0 1 0 0 7a3.5 3.5 0 0 0 0-7ZM10 8.5a5.5 5.5 0 1 1 10.032 3.117l2.675 2.676l-1.414 1.414l-2.675-2.675A5.5 5.5 0 0 1 10 8.5ZM3 4h5v2H3V4Zm0 7h5v2H3v-2Zm18 7v2H3v-2h18Z"/>`
	menuThreeFillPath             = `<path fill="currentColor" d="M3 4h18v2H3V4Zm6 7h12v2H9v-2Zm-6 7h18v2H3v-2Z"/>`
	menuThreeLinePath             = `<path fill="currentColor" d="M3 4h18v2H3V4Zm6 7h12v2H9v-2Zm-6 7h18v2H3v-2Z"/>`
	menuTwoFillPath               = `<path fill="currentColor" d="M3 4h18v2H3V4Zm0 7h12v2H3v-2Zm0 7h18v2H3v-2Z"/>`
	menuTwoLinePath               = `<path fill="currentColor" d="M3 4h18v2H3V4Zm0 7h12v2H3v-2Zm0 7h18v2H3v-2Z"/>`
	menuUnfoldFillPath            = `<path fill="currentColor" d="M21 18v2H3v-2h18ZM17.05 3.55L22 8.5l-4.95 4.95v-9.9ZM12 11v2H3v-2h9Zm0-7v2H3V4h9Z"/>`
	menuUnfoldLinePath            = `<path fill="currentColor" d="M21 18v2H3v-2h18ZM17.404 3.903L22 8.5l-4.596 4.596l-1.414-1.415L19.172 8.5L15.99 5.318l1.414-1.415ZM12 11v2H3v-2h9Zm0-7v2H3V4h9Z"/>`
	mergeCellsHorizontalPath      = `<path fill="currentColor" d="M20 3a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h16Zm-9 2H5v5.999h2V9l3 3l-3 3v-2H5v6h6v-2h2v2h6v-6h-2v2l-3-3l3-3v1.999h2V5h-6v2h-2V5Zm2 8v2h-2v-2h2Zm0-4v2h-2V9h2Z"/>`
	mergeCellsVerticalPath        = `<path fill="currentColor" d="M21 20a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h16a1 1 0 0 1 1 1v16Zm-2-9V5h-5.999v2H15l-3 3l-3-3h2V5H5v6h2v2H5v6h6v-2H9l3-3l3 3h-1.999v2H19v-6h-2v-2h2Zm-8 2H9v-2h2v2Zm4 0h-2v-2h2v2Z"/>`
	messageFillPath               = `<path fill="currentColor" d="M6.455 19L2 22.5V4a1 1 0 0 1 1-1h18a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H6.455ZM8 10v2h8v-2H8Z"/>`
	messageLinePath               = `<path fill="currentColor" d="M6.455 19L2 22.5V4a1 1 0 0 1 1-1h18a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H6.455Zm-.692-2H20V5H4v13.385L5.763 17ZM8 10h8v2H8v-2Z"/>`
	messageThreeFillPath          = `<path fill="currentColor" d="M2 8.994A5.99 5.99 0 0 1 8 3h8c3.313 0 6 2.695 6 5.994V21H8c-3.313 0-6-2.695-6-5.994V8.994ZM14 11v2h2v-2h-2Zm-6 0v2h2v-2H8Z"/>`
	messageThreeLinePath          = `<path fill="currentColor" d="M2 8.994A5.99 5.99 0 0 1 8 3h8c3.313 0 6 2.695 6 5.994V21H8c-3.313 0-6-2.695-6-5.994V8.994ZM20 19V8.994A4.004 4.004 0 0 0 16 5H8a3.99 3.99 0 0 0-4 3.994v6.012A4.004 4.004 0 0 0 8 19h12Zm-6-8h2v2h-2v-2Zm-6 0h2v2H8v-2Z"/>`
	messageTwoFillPath            = `<path fill="currentColor" d="M6.455 19L2 22.5V4a1 1 0 0 1 1-1h18a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H6.455ZM7 10v2h2v-2H7Zm4 0v2h2v-2h-2Zm4 0v2h2v-2h-2Z"/>`
	messageTwoLinePath            = `<path fill="currentColor" d="M6.455 19L2 22.5V4a1 1 0 0 1 1-1h18a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H6.455Zm-.692-2H20V5H4v13.385L5.763 17ZM11 10h2v2h-2v-2Zm-4 0h2v2H7v-2Zm8 0h2v2h-2v-2Z"/>`
	messengerFillPath             = `<path fill="currentColor" d="M12.001 2c5.633 0 10 4.127 10 9.7c0 5.573-4.367 9.7-10 9.7a10.893 10.893 0 0 1-2.895-.384a.8.8 0 0 0-.534.039l-1.985.876a.8.8 0 0 1-1.123-.707l-.054-1.78a.797.797 0 0 0-.269-.57c-1.945-1.74-3.14-4.258-3.14-7.174c0-5.573 4.366-9.7 10-9.7ZM5.996 14.537c-.282.447.268.951.689.631l3.155-2.394a.6.6 0 0 1 .723 0l2.336 1.75a1.5 1.5 0 0 0 2.17-.4l2.937-4.66c.282-.448-.268-.952-.689-.633l-3.155 2.396a.6.6 0 0 1-.723 0l-2.337-1.75a1.5 1.5 0 0 0-2.169.4l-2.937 4.66Z"/>`
	messengerLinePath             = `<path fill="currentColor" d="M7.765 19.225c.59-.26 1.25-.309 1.868-.139c.77.21 1.565.316 2.368.314c4.585 0 8-3.287 8-7.7s-3.415-7.7-8-7.7s-8 3.287-8 7.7c0 2.27.896 4.272 2.466 5.676a2.8 2.8 0 0 1 .942 2.006l.356-.157ZM12.001 2c5.633 0 10 4.127 10 9.7c0 5.573-4.367 9.7-10 9.7a10.893 10.893 0 0 1-2.895-.384a.8.8 0 0 0-.534.039l-1.985.876a.8.8 0 0 1-1.123-.707l-.054-1.78a.797.797 0 0 0-.269-.57c-1.945-1.74-3.14-4.258-3.14-7.174c0-5.573 4.366-9.7 10-9.7ZM5.996 14.537l2.937-4.66a1.5 1.5 0 0 1 2.17-.4l2.336 1.75a.6.6 0 0 0 .723 0l3.155-2.396c.421-.319.971.185.689.633l-2.938 4.66a1.5 1.5 0 0 1-2.168.4l-2.337-1.75a.6.6 0 0 0-.723 0l-3.155 2.395c-.421.319-.971-.185-.689-.633Z"/>`
	metaFillPath                  = `<path fill="currentColor" d="M16.92 4.5c-1.851 0-3.298 1.394-4.608 3.165C10.512 5.373 9.007 4.5 7.206 4.5C3.534 4.5.72 9.28.72 14.338c0 3.165 1.531 5.162 4.096 5.162c1.846 0 3.174-.87 5.535-4.997c0 0 .984-1.737 1.66-2.934c.238.383.487.795.75 1.238l1.107 1.862c2.156 3.608 3.358 4.831 5.534 4.831c2.5 0 3.89-2.024 3.89-5.255c0-5.297-2.877-9.745-6.372-9.745Zm-8.37 8.886c-1.913 3-2.575 3.673-3.64 3.673c-1.097 0-1.749-.963-1.749-2.68c0-3.672 1.831-7.427 4.014-7.427c1.182 0 2.17.682 3.683 2.848c-1.437 2.204-2.307 3.586-2.307 3.586Zm7.224-.377L14.45 10.8a45.161 45.161 0 0 0-1.032-1.608c1.193-1.841 2.176-2.759 3.347-2.759c2.43 0 4.375 3.58 4.375 7.976c0 1.676-.549 2.649-1.686 2.649c-1.09 0-1.61-.72-3.68-4.05Z"/>`
	metaLinePath                  = `<path fill="currentColor" d="M20.974 16.163c-.285.892-.775 1.337-1.47 1.337c-.877 0-1.74-.526-2.587-1.58c-.589-.73-1.414-2.12-2.477-4.168a58.288 58.288 0 0 0-1.269-2.33c.31-.488.586-.88.829-1.176c.957-1.164 1.959-1.746 3.005-1.746c.835 0 1.63.536 2.386 1.608c.776 1.101 1.32 2.461 1.632 4.08c.306 1.594.29 2.919-.049 3.975Zm-8.97-4.733c.21.385.43.8.66 1.242c1.125 2.167 2.023 3.668 2.695 4.503c1.248 1.55 2.63 2.325 4.146 2.325c.856 0 1.588-.27 2.197-.81c.525-.467.917-1.105 1.177-1.916c.443-1.38.479-3.035.108-4.963c-.366-1.901-1.02-3.52-1.962-4.856c-1.154-1.637-2.494-2.455-4.02-2.455c-1.676 0-3.193.825-4.55 2.476c-.142.173-.292.37-.45.594a10.318 10.318 0 0 0-.45-.594C10.198 5.326 8.68 4.5 7.005 4.5c-1.526 0-2.866.818-4.02 2.455c-.942 1.336-1.596 2.955-1.962 4.856c-.37 1.928-.335 3.582.108 4.963c.26.81.652 1.45 1.177 1.915c.609.54 1.341.811 2.197.811c1.516 0 2.898-.775 4.146-2.325c.672-.835 1.57-2.336 2.694-4.502c.23-.444.45-.858.66-1.243Zm-1.166-2.008c-.39.674-.812 1.45-1.268 2.33c-1.063 2.048-1.89 3.436-2.477 4.168c-.848 1.053-1.71 1.579-2.588 1.579c-.694 0-1.184-.445-1.47-1.337c-.338-1.056-.354-2.381-.048-3.974c.311-1.62.855-2.98 1.632-4.081C5.375 7.036 6.17 6.5 7.005 6.5c1.046 0 2.048.582 3.005 1.746c.243.296.519.688.828 1.176Z"/>`
	meteorFillPath                = `<path fill="currentColor" d="M21 1v12A9 9 0 1 1 7.375 5.278L14 1.453v2.77L21 1Zm-9 7a5 5 0 1 0 0 10a5 5 0 0 0 0-10Z"/>`
	meteorLinePath                = `<path fill="currentColor" d="M21 1v12A9 9 0 1 1 7.375 5.278L14 1.453v2.77L21 1Zm-2 3.122l-7 3.224v-2.43L8.597 6.881a6.997 6.997 0 0 0-3.592 5.845L5 13a7 7 0 0 0 13.996.24L19 13V4.122ZM12 8a5 5 0 1 1 0 10a5 5 0 0 1 0-10Zm0 2a3 3 0 1 0 0 6a3 3 0 0 0 0-6Z"/>`
	micFillPath                   = `<path fill="currentColor" d="M12 1a5 5 0 0 1 5 5v4a5 5 0 0 1-10 0V6a5 5 0 0 1 5-5ZM3.055 11H5.07a7.002 7.002 0 0 0 13.858 0h2.016A9.004 9.004 0 0 1 13 18.945V23h-2v-4.055A9.004 9.004 0 0 1 3.055 11Z"/>`
	micLinePath                   = `<path fill="currentColor" d="M12 3a3 3 0 0 0-3 3v4a3 3 0 1 0 6 0V6a3 3 0 0 0-3-3Zm0-2a5 5 0 0 1 5 5v4a5 5 0 0 1-10 0V6a5 5 0 0 1 5-5ZM3.055 11H5.07a7.002 7.002 0 0 0 13.858 0h2.016A9.004 9.004 0 0 1 13 18.945V23h-2v-4.055A9.004 9.004 0 0 1 3.055 11Z"/>`
	micOffFillPath                = `<path fill="currentColor" d="M16.426 17.839A8.94 8.94 0 0 1 13 18.945V23h-2v-4.055A9.004 9.004 0 0 1 3.056 11h2.016a7.002 7.002 0 0 0 9.87 5.354l-1.55-1.55A5 5 0 0 1 7.001 10V8.414L1.394 2.808l1.414-1.415l19.799 19.8l-1.415 1.414l-4.767-4.768Zm2.95-2.679l-1.443-1.442c.509-.81.856-1.73.997-2.718h2.016a8.95 8.95 0 0 1-1.57 4.16Zm-2.91-2.909l-8.78-8.78A5 5 0 0 1 17 6v4a4.959 4.959 0 0 1-.533 2.251Z"/>`
	micOffLinePath                = `<path fill="currentColor" d="m16.426 17.839l4.768 4.768l1.414-1.415l-19.8-19.799l-1.413 1.415L7 8.414V10a5 5 0 0 0 6.39 4.804l1.55 1.55A7.002 7.002 0 0 1 5.071 11H3.057a9.004 9.004 0 0 0 7.945 7.945V23h2v-4.055a8.94 8.94 0 0 0 3.425-1.106Zm-4.872-4.872a3.002 3.002 0 0 1-2.52-2.52l2.52 2.52Zm7.822 2.193l-1.443-1.442c.509-.81.856-1.73.997-2.718h2.016a8.95 8.95 0 0 1-1.57 4.16Zm-2.91-2.909l-1.548-1.548a2.96 2.96 0 0 0 .083-.703V6a3 3 0 0 0-5.818-1.032L7.687 3.471A5 5 0 0 1 17 6v4c0 .81-.192 1.575-.534 2.251Z"/>`
	micTwoFillPath                = `<path fill="currentColor" d="M12 1a5 5 0 0 1 5 5v6a5 5 0 0 1-10 0V6a5 5 0 0 1 5-5ZM2.19 13.961l1.962-.392a8.003 8.003 0 0 0 15.692 0l1.962.392C20.895 18.545 16.85 22 11.999 22s-8.896-3.455-9.808-8.039Z"/>`
	micTwoLinePath                = `<path fill="currentColor" d="M12 3a3 3 0 0 0-3 3v6a3 3 0 1 0 6 0V6a3 3 0 0 0-3-3Zm0-2a5 5 0 0 1 5 5v6a5 5 0 0 1-10 0V6a5 5 0 0 1 5-5ZM2.19 13.961l1.962-.392a8.003 8.003 0 0 0 15.692 0l1.962.392C20.895 18.545 16.85 22 11.999 22s-8.896-3.455-9.808-8.039Z"/>`
	mickeyFillPath                = `<path fill="currentColor" d="M18.5 2a4.5 4.5 0 0 1 .883 8.913a8 8 0 1 1-14.765-.001A4.499 4.499 0 0 1 5.5 2a4.5 4.5 0 0 1 4.493 4.254A7.998 7.998 0 0 1 12 6a7.99 7.99 0 0 1 2.006.254A4.5 4.5 0 0 1 18.5 2Z"/>`
	mickeyLinePath                = `<path fill="currentColor" d="M4.617 10.913A4.501 4.501 0 0 1 5.5 2a4.5 4.5 0 0 1 4.493 4.254A8.014 8.014 0 0 1 12 6c.693 0 1.365.088 2.007.254a4.5 4.5 0 1 1 5.376 4.66a8 8 0 1 1-14.766 0ZM3 6.5a2.5 2.5 0 0 0 2.766 2.486a8.04 8.04 0 0 1 2.158-1.871A2.5 2.5 0 1 0 3 6.5Zm15.234 2.486a2.5 2.5 0 1 0-2.158-1.871a8.039 8.039 0 0 1 2.158 1.871ZM6 14a6 6 0 1 0 12 0a6 6 0 0 0-12 0Z"/>`
	microscopeFillPath            = `<path fill="currentColor" d="m13.196 2.268l3.25 5.63a1 1 0 0 1-.366 1.365l-1.3.75l1.001 1.732l-1.732 1l-1-1.733l-1.299.751a1 1 0 0 1-1.366-.366L8.546 8.215a5.002 5.002 0 0 0-3.222 6.56A4.976 4.976 0 0 1 8 14c1.684 0 3.174.833 4.08 2.109l7.688-4.439l1 1.732l-7.878 4.549A5.022 5.022 0 0 1 12.9 20H21v2l-17 .001A4.978 4.978 0 0 1 3 19c0-1.007.298-1.945.81-2.73a7.003 7.003 0 0 1 3.717-9.82l-.393-.682a2 2 0 0 1 .732-2.732l2.598-1.5a2 2 0 0 1 2.732.732Z"/>`
	microscopeLinePath            = `<path fill="currentColor" d="m13.196 2.268l3.25 5.63a1 1 0 0 1-.366 1.365l-1.3.75l1.001 1.732l-1.732 1l-1-1.733l-1.299.751a1 1 0 0 1-1.366-.366L8.546 8.215a5.002 5.002 0 0 0-3.222 6.56A4.976 4.976 0 0 1 8 14c1.684 0 3.174.833 4.08 2.109l7.688-4.439l1 1.732l-7.878 4.549A5.022 5.022 0 0 1 12.9 20H21v2l-17 .001A4.978 4.978 0 0 1 3 19c0-1.007.298-1.945.81-2.73a7.003 7.003 0 0 1 3.717-9.82l-.393-.682a2 2 0 0 1 .732-2.732l2.598-1.5a2 2 0 0 1 2.732.732ZM8 16a3 3 0 0 0-2.83 4h5.66A3 3 0 0 0 8 16Zm3.464-12.732l-2.598 1.5l2.75 4.763l2.598-1.5l-2.75-4.763Z"/>`
	microsoftFillPath             = `<path fill="currentColor" d="M11.501 3v8.5h-8.5V3h8.5Zm0 18h-8.5v-8.5h8.5V21Zm1-18h8.5v8.5h-8.5V3Zm8.5 9.5V21h-8.5v-8.5h8.5Z"/>`
	microsoftLinePath             = `<path fill="currentColor" d="M11.001 5h-6v6h6V5Zm2 0v6h6V5h-6Zm6 8h-6v6h6v-6Zm-8 6v-6h-6v6h6Zm-8-16h18v18h-18V3Z"/>`
	microsoftLoopFillPath         = `<path fill="currentColor" d="M22 12c0 5.523-4.477 10-10 10H6.665A7.99 7.99 0 0 0 10 15.5h2A3.5 3.5 0 1 0 8.5 12v3.5A6.5 6.5 0 0 1 2 22V12C2 6.477 6.477 2 12 2s10 4.477 10 10Z"/>`
	microsoftLoopLinePath         = `<path fill="currentColor" d="M12 4a8 8 0 1 1 0 16H7.69a6.48 6.48 0 0 0 1.734-3.5H12A4.5 4.5 0 1 0 7.5 12v3.5A4.502 4.502 0 0 1 4 19.889V12a8 8 0 0 1 8-8Zm0 18c5.523 0 10-4.477 10-10S17.523 2 12 2S2 6.477 2 12v10h10Zm-2.5-7.5V12a2.5 2.5 0 1 1 2.5 2.5H9.5Z"/>`
	mindMapPath                   = `<path fill="currentColor" d="M18 3a3 3 0 1 1 0 6h-3a3.001 3.001 0 0 1-2.829-2H11c-1.1 0-2 .9-2 2v.171a3.001 3.001 0 0 1 0 5.658V15c0 1.1.9 2 2 2h1.17A3.001 3.001 0 0 1 15 15h3a3 3 0 1 1 0 6h-3a3.001 3.001 0 0 1-2.829-2H11c-2.21 0-4-1.79-4-4H5a3 3 0 1 1 0-6h2a4 4 0 0 1 4-4h1.17A3.001 3.001 0 0 1 15 3h3Zm0 14h-3a1 1 0 1 0 0 2h3a1 1 0 1 0 0-2ZM8 11H5a1 1 0 1 0 0 2h3a1 1 0 1 0 0-2Zm10-6h-3a1 1 0 1 0 0 2h3a1 1 0 1 0 0-2Z"/>`
	miniProgramFillPath           = `<path fill="currentColor" d="m15.84 12.691l-.066.02a1.524 1.524 0 0 1-.414.062c-.61 0-.954-.412-.77-.921c.136-.372.491-.686.925-.831c.672-.245 1.142-.804 1.142-1.455c0-.877-.853-1.587-1.905-1.587s-1.905.71-1.905 1.587v4.868c0 1.17-.678 2.197-1.693 2.778a3.829 3.829 0 0 1-1.904.502c-1.984 0-3.598-1.471-3.598-3.28c0-.576.164-1.117.451-1.587c.444-.73 1.184-1.287 2.07-1.541c.152-.048.307-.073.46-.073c.612 0 .958.414.773.924c-.126.347-.466.645-.861.803a2.229 2.229 0 0 0-.139.052c-.628.26-1.061.798-1.061 1.422c0 .877.853 1.587 1.905 1.587s1.904-.71 1.904-1.587V9.566c0-1.17.679-2.197 1.694-2.778a3.83 3.83 0 0 1 1.904-.502c1.984 0 3.598 1.471 3.598 3.28a3.04 3.04 0 0 1-.451 1.587c-.442.726-1.178 1.282-2.058 1.538ZM2.002 12c0 5.523 4.477 10 10 10s10-4.477 10-10s-4.477-10-10-10s-10 4.477-10 10Z"/>`
	miniProgramLinePath           = `<path fill="currentColor" d="M12.001 22c-5.523 0-10-4.477-10-10s4.477-10 10-10s10 4.477 10 10s-4.477 10-10 10Zm0-2a8 8 0 1 0 0-16a8 8 0 0 0 0 16Zm1-6a3.5 3.5 0 1 1-4.977-3.174a1 1 0 1 1 .845 1.813A1.5 1.5 0 1 0 11 14v-4a3.5 3.5 0 1 1 4.977 3.174a1 1 0 0 1-.845-1.813A1.5 1.5 0 1 0 13.001 10v4Z"/>`
	mistFillPath                  = `<path fill="currentColor" d="M4 4h4v2H4V4Zm12 15h4v2h-4v-2ZM2 9h10v2H2V9Zm12 0h6v2h-6V9ZM4 14h6v2H4v-2Zm8 0h10v2H12v-2ZM10 4h12v2H10V4ZM2 19h12v2H2v-2Z"/>`
	mistLinePath                  = `<path fill="currentColor" d="M4 4h4v2H4V4Zm12 15h4v2h-4v-2ZM2 9h5v2H2V9Zm7 0h3v2H9V9Zm5 0h6v2h-6V9ZM4 14h6v2H4v-2Zm8 0h3v2h-3v-2Zm5 0h5v2h-5v-2ZM10 4h12v2H10V4ZM2 19h12v2H2v-2Z"/>`
	moneyCnyBoxFillPath           = `<path fill="currentColor" d="M3.005 3.003h18a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1h-18a1 1 0 0 1-1-1v-16a1 1 0 0 1 1-1Zm10 10v-1h3v-2h-2.586l2.121-2.121l-1.414-1.415l-2.121 2.122l-2.121-2.122l-1.415 1.415l2.122 2.12H8.005v2h3v1h-3v2h3v2h2v-2h3v-2h-3Z"/>`
	moneyCnyBoxLinePath           = `<path fill="currentColor" d="M3.005 3.003h18a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1h-18a1 1 0 0 1-1-1v-16a1 1 0 0 1 1-1Zm1 2v14h16v-14h-16Zm9 8h3v2h-3v2h-2v-2h-3v-2h3v-1h-3v-2h2.586L8.469 7.882l1.415-1.415l2.12 2.122l2.122-2.122l1.414 1.415l-2.12 2.12h2.585v2h-3v1Z"/>`
	moneyCnyCircleFillPath        = `<path fill="currentColor" d="M12.005 22.003c-5.523 0-10-4.477-10-10s4.477-10 10-10s10 4.477 10 10s-4.477 10-10 10Zm1-9v-1h3v-2h-2.586l2.121-2.121l-1.414-1.415l-2.121 2.122l-2.121-2.122l-1.415 1.415l2.122 2.12H8.005v2h3v1h-3v2h3v2h2v-2h3v-2h-3Z"/>`
	moneyCnyCircleLinePath        = `<path fill="currentColor" d="M12.005 22.003c-5.523 0-10-4.477-10-10s4.477-10 10-10s10 4.477 10 10s-4.477 10-10 10Zm0-2a8 8 0 1 0 0-16a8 8 0 0 0 0 16Zm1-7h3v2h-3v2h-2v-2h-3v-2h3v-1h-3v-2h2.586L8.469 7.882l1.415-1.415l2.12 2.122l2.122-2.122l1.414 1.415l-2.12 2.12h2.585v2h-3v1Z"/>`
	moneyDollarBoxFillPath        = `<path fill="currentColor" d="M3.005 3.003h18a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1h-18a1 1 0 0 1-1-1v-16a1 1 0 0 1 1-1Zm5.5 11v2h2.5v2h2v-2h1a2.5 2.5 0 0 0 0-5h-4a.5.5 0 1 1 0-1h5.5v-2h-2.5v-2h-2v2h-1a2.5 2.5 0 1 0 0 5h4a.5.5 0 0 1 0 1h-5.5Z"/>`
	moneyDollarBoxLinePath        = `<path fill="currentColor" d="M3.005 3.003h18a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1h-18a1 1 0 0 1-1-1v-16a1 1 0 0 1 1-1Zm1 2v14h16v-14h-16Zm4.5 9h5.5a.5.5 0 1 0 0-1h-4a2.5 2.5 0 1 1 0-5h1v-2h2v2h2.5v2h-5.5a.5.5 0 0 0 0 1h4a2.5 2.5 0 0 1 0 5h-1v2h-2v-2h-2.5v-2Z"/>`
	moneyDollarCircleFillPath     = `<path fill="currentColor" d="M12.005 22.003c-5.523 0-10-4.477-10-10s4.477-10 10-10s10 4.477 10 10s-4.477 10-10 10Zm-3.5-8v2h2.5v2h2v-2h1a2.5 2.5 0 0 0 0-5h-4a.5.5 0 1 1 0-1h5.5v-2h-2.5v-2h-2v2h-1a2.5 2.5 0 1 0 0 5h4a.5.5 0 0 1 0 1h-5.5Z"/>`
	moneyDollarCircleLinePath     = `<path fill="currentColor" d="M12.005 22.003c-5.523 0-10-4.477-10-10s4.477-10 10-10s10 4.477 10 10s-4.477 10-10 10Zm0-2a8 8 0 1 0 0-16a8 8 0 0 0 0 16Zm-3.5-6h5.5a.5.5 0 1 0 0-1h-4a2.5 2.5 0 1 1 0-5h1v-2h2v2h2.5v2h-5.5a.5.5 0 0 0 0 1h4a2.5 2.5 0 0 1 0 5h-1v2h-2v-2h-2.5v-2Z"/>`
	moneyEuroBoxFillPath          = `<path fill="currentColor" d="M3.005 3.003h18a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1h-18a1 1 0 0 1-1-1v-16a1 1 0 0 1 1-1Zm7.05 8a2.5 2.5 0 0 1 4.064-1.41l1.7-1.133a4.5 4.5 0 0 0-7.787 2.543H7.005v2h1.027a4.5 4.5 0 0 0 7.788 2.543l-1.701-1.134a2.5 2.5 0 0 1-4.064-1.41h4.95v-2h-4.95Z"/>`
	moneyEuroBoxLinePath          = `<path fill="currentColor" d="M3.005 3.003h18a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1h-18a1 1 0 0 1-1-1v-16a1 1 0 0 1 1-1Zm1 2v14h16v-14h-16Zm6.05 6h4.95v2h-4.95a2.5 2.5 0 0 0 4.064 1.41l1.7 1.133a4.5 4.5 0 0 1-7.787-2.543H7.005v-2h1.027A4.5 4.5 0 0 1 15.82 8.46l-1.701 1.134a2.5 2.5 0 0 0-4.064 1.41Z"/>`
	moneyEuroCircleFillPath       = `<path fill="currentColor" d="M12.005 22.003c-5.523 0-10-4.477-10-10s4.477-10 10-10s10 4.477 10 10s-4.477 10-10 10Zm-1.95-11a2.5 2.5 0 0 1 4.064-1.41l1.7-1.133a4.5 4.5 0 0 0-7.787 2.543H7.005v2h1.027a4.5 4.5 0 0 0 7.788 2.543l-1.701-1.134a2.5 2.5 0 0 1-4.064-1.41h4.95v-2h-4.95Z"/>`
	moneyEuroCircleLinePath       = `<path fill="currentColor" d="M12.005 22.003c-5.523 0-10-4.477-10-10s4.477-10 10-10s10 4.477 10 10s-4.477 10-10 10Zm0-2a8 8 0 1 0 0-16a8 8 0 0 0 0 16Zm-1.95-9h4.95v2h-4.95a2.5 2.5 0 0 0 4.064 1.41l1.7 1.133a4.5 4.5 0 0 1-7.787-2.543H7.005v-2h1.027A4.5 4.5 0 0 1 15.82 8.46l-1.701 1.134a2.5 2.5 0 0 0-4.064 1.41Z"/>`
	moneyPoundBoxFillPath         = `<path fill="currentColor" d="M3.005 3.003h18a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1h-18a1 1 0 0 1-1-1v-16a1 1 0 0 1 1-1Zm6 10v2h-1v2h8v-2h-5v-2h3v-2h-3v-1a1.5 1.5 0 0 1 2.76-.815l1.986-.497a3.501 3.501 0 0 0-6.746 1.312v1h-1v2h1Z"/>`
	moneyPoundBoxLinePath         = `<path fill="currentColor" d="M3.005 3.003h18a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1h-18a1 1 0 0 1-1-1v-16a1 1 0 0 1 1-1Zm1 2v14h16v-14h-16Zm5 8h-1v-2h1v-1A3.5 3.5 0 0 1 15.75 8.69l-1.987.497a1.499 1.499 0 0 0-2.76.815v1h3v2h-3v2h5v2h-8v-2h1v-2Z"/>`
	moneyPoundCircleFillPath      = `<path fill="currentColor" d="M12.005 22.003c-5.523 0-10-4.477-10-10s4.477-10 10-10s10 4.477 10 10s-4.477 10-10 10Zm-3-9v2h-1v2h8v-2h-5v-2h3v-2h-3v-1a1.5 1.5 0 0 1 2.76-.815l1.986-.497a3.501 3.501 0 0 0-6.746 1.312v1h-1v2h1Z"/>`
	moneyPoundCircleLinePath      = `<path fill="currentColor" d="M12.005 22.003c-5.523 0-10-4.477-10-10s4.477-10 10-10s10 4.477 10 10s-4.477 10-10 10Zm0-2a8 8 0 1 0 0-16a8 8 0 0 0 0 16Zm-3-7h-1v-2h1v-1A3.5 3.5 0 0 1 15.75 8.69l-1.987.497a1.499 1.499 0 0 0-2.76.815v1h3v2h-3v2h5v2h-8v-2h1v-2Z"/>`
	moonClearFillPath             = `<path fill="currentColor" d="M9.822 2.238a9 9 0 0 0 11.94 11.94C20.768 18.654 16.775 22 12 22C6.477 22 2 17.523 2 12c0-4.775 3.346-8.768 7.822-9.762Zm8.342.053L19 2.5v1l-.836.209a2 2 0 0 0-1.455 1.455L16.5 6h-1l-.209-.836a2 2 0 0 0-1.455-1.455L13 3.5v-1l.836-.209A2 2 0 0 0 15.29.836L15.5 0h1l.209.836a2 2 0 0 0 1.455 1.455Zm5 5L24 7.5v1l-.836.209a2 2 0 0 0-1.455 1.455L21.5 11h-1l-.209-.836a2 2 0 0 0-1.455-1.455L18 8.5v-1l.836-.209a2 2 0 0 0 1.455-1.455L20.5 5h1l.209.836a2 2 0 0 0 1.455 1.455Z"/>`
	moonClearLinePath             = `<path fill="currentColor" d="M10 6a8 8 0 0 0 11.955 6.956C21.474 18.03 17.2 22 12 22C6.477 22 2 17.523 2 12c0-5.2 3.97-9.474 9.044-9.955A7.963 7.963 0 0 0 10 6Zm-6 6a8 8 0 0 0 8 8a8.006 8.006 0 0 0 6.957-4.045c-.316.03-.636.045-.957.045c-5.523 0-10-4.477-10-10c0-.321.015-.64.045-.957A8.006 8.006 0 0 0 4 12Zm14.164-9.709L19 2.5v1l-.836.209a2 2 0 0 0-1.455 1.455L16.5 6h-1l-.209-.836a2 2 0 0 0-1.455-1.455L13 3.5v-1l.836-.209A2 2 0 0 0 15.29.836L15.5 0h1l.209.836a2 2 0 0 0 1.455 1.455Zm5 5L24 7.5v1l-.836.209a2 2 0 0 0-1.455 1.455L21.5 11h-1l-.209-.836a2 2 0 0 0-1.455-1.455L18 8.5v-1l.836-.209a2 2 0 0 0 1.455-1.455L20.5 5h1l.209.836a2 2 0 0 0 1.455 1.455Z"/>`
	moonCloudyFillPath            = `<path fill="currentColor" d="M8.67 5.007a7 7 0 0 1 7.55-3.901a4.5 4.5 0 0 0 5.674 5.674a7.038 7.038 0 0 1-.759 4.593A5.5 5.5 0 0 1 17.5 21H9a8 8 0 0 1-.33-15.993Zm2.177.207a8.016 8.016 0 0 1 5.61 4.885a5.533 5.533 0 0 1 2.96.245a4.97 4.97 0 0 0 .488-1.37a6.502 6.502 0 0 1-5.878-5.88a5.003 5.003 0 0 0-3.18 2.12Z"/>`
	moonCloudyLinePath            = `<path fill="currentColor" d="M8.67 5.007a7 7 0 0 1 7.55-3.901a4.5 4.5 0 0 0 5.674 5.674a7.038 7.038 0 0 1-.759 4.593A5.5 5.5 0 0 1 17.5 21H9a8 8 0 0 1-.33-15.993Zm2.177.207a8.016 8.016 0 0 1 5.61 4.885a5.533 5.533 0 0 1 2.96.245a4.97 4.97 0 0 0 .488-1.37a6.502 6.502 0 0 1-5.878-5.88a5.003 5.003 0 0 0-3.18 2.12ZM17.5 19a3.5 3.5 0 1 0-2.5-5.95V13a6 6 0 1 0-6 6h8.5Z"/>`
	moonFillPath                  = `<path fill="currentColor" d="M11.38 2.019a7.5 7.5 0 1 0 10.6 10.6A9.996 9.996 0 0 1 12.001 22C6.477 22 2 17.523 2 12c0-5.315 4.146-9.66 9.38-9.98Z"/>`
	moonFoggyFillPath             = `<path fill="currentColor" d="M16 20.334V18h-2v-4H3.332A9.512 9.512 0 0 1 3 11.5c0-4.56 3.213-8.37 7.5-9.29a8 8 0 0 0 11.49 9.724a9.505 9.505 0 0 1-5.99 8.4ZM7 20h7v2H7v-2Zm-5-4h10v2H2v-2Z"/>`
	moonFoggyLinePath             = `<path fill="currentColor" d="M16 20.335v-2.2a7.523 7.523 0 0 0 3.623-4.281a9 9 0 0 1-10.622-8.99A7.518 7.518 0 0 0 5.151 10H3.117a9.505 9.505 0 0 1 8.538-7.963a7 7 0 0 0 10.316 8.728A9.503 9.503 0 0 1 16 20.335ZM7 20h7v2H7v-2Zm-3-8h6v2H4v-2Zm-2 4h10v2H2v-2Z"/>`
	moonLinePath                  = `<path fill="currentColor" d="M10 7a7 7 0 0 0 12 4.9v.1c0 5.523-4.477 10-10 10S2 17.523 2 12S6.477 2 12 2h.1A6.98 6.98 0 0 0 10 7Zm-6 5a8 8 0 0 0 15.062 3.762A9 9 0 0 1 8.238 4.938A7.999 7.999 0 0 0 4 12Z"/>`
	moreFillPath                  = `<path fill="currentColor" d="M5 10c-1.1 0-2 .9-2 2s.9 2 2 2s2-.9 2-2s-.9-2-2-2Zm14 0c-1.1 0-2 .9-2 2s.9 2 2 2s2-.9 2-2s-.9-2-2-2Zm-7 0c-1.1 0-2 .9-2 2s.9 2 2 2s2-.9 2-2s-.9-2-2-2Z"/>`
	moreLinePath                  = `<path fill="currentColor" d="M4.5 10.5c-.825 0-1.5.675-1.5 1.5s.675 1.5 1.5 1.5S6 12.825 6 12s-.675-1.5-1.5-1.5Zm15 0c-.825 0-1.5.675-1.5 1.5s.675 1.5 1.5 1.5S21 12.825 21 12s-.675-1.5-1.5-1.5Zm-7.5 0c-.825 0-1.5.675-1.5 1.5s.675 1.5 1.5 1.5s1.5-.675 1.5-1.5s-.675-1.5-1.5-1.5Z"/>`
	moreTwoFillPath               = `<path fill="currentColor" d="M12 3c-1.1 0-2 .9-2 2s.9 2 2 2s2-.9 2-2s-.9-2-2-2Zm0 14c-1.1 0-2 .9-2 2s.9 2 2 2s2-.9 2-2s-.9-2-2-2Zm0-7c-1.1 0-2 .9-2 2s.9 2 2 2s2-.9 2-2s-.9-2-2-2Z"/>`
	moreTwoLinePath               = `<path fill="currentColor" d="M12 3c-.825 0-1.5.675-1.5 1.5S11.175 6 12 6s1.5-.675 1.5-1.5S12.825 3 12 3Zm0 15c-.825 0-1.5.675-1.5 1.5S11.175 21 12 21s1.5-.675 1.5-1.5S12.825 18 12 18Zm0-7.5c-.825 0-1.5.675-1.5 1.5s.675 1.5 1.5 1.5s1.5-.675 1.5-1.5s-.675-1.5-1.5-1.5Z"/>`
	motorbikeFillPath             = `<path fill="currentColor" d="M8.365 10L11.2 8h3.492L13.6 5H11V3h4l1.092 3H20v3h-2.816l1.456 4.002a4.5 4.5 0 1 1-1.985.392L15.419 10h-.947l-1.582 5.87l-2.925 1.069A4.5 4.5 0 1 1 4 13.256V12H2v-2h6.365ZM5.5 20a2.5 2.5 0 1 0 0-5a2.5 2.5 0 0 0 0 5Zm13 0a2.5 2.5 0 1 0 0-5a2.5 2.5 0 0 0 0 5Z"/>`
	motorbikeLinePath             = `<path fill="currentColor" d="M4 13.256V12H2v-2h6.365L11.2 8h3.492L13.6 5H11V3h4l1.092 3H20v3h-2.816l1.456 4.002a4.5 4.5 0 1 1-1.985.392L15.419 10h-.947l-1.582 5.87l-.002-.001l.002.005l-2.925 1.065A4.5 4.5 0 1 1 4 13.256Zm2-.229a4.5 4.5 0 0 1 3.281 2.033l1.957-.713L12.403 10h-.547L9 12H6v1.027ZM5.5 20a2.5 2.5 0 1 0 0-5a2.5 2.5 0 0 0 0 5Zm13 0a2.5 2.5 0 1 0 0-5a2.5 2.5 0 0 0 0 5Z"/>`
	mouseFillPath                 = `<path fill="currentColor" d="M11.141 2h1.718c2.014 0 3.094.278 4.071.801A5.452 5.452 0 0 1 19.2 5.07c.522.978.801 2.058.801 4.072v5.718c0 2.014-.279 3.094-.801 4.071a5.452 5.452 0 0 1-2.27 2.269c-.977.522-2.057.801-4.071.801H11.14c-2.014 0-3.094-.279-4.072-.801A5.452 5.452 0 0 1 4.8 18.931c-.522-.978-.8-2.058-.8-4.071V9.14c0-2.014.278-3.094.801-4.072A5.452 5.452 0 0 1 7.07 2.801C8.047 2.278 9.127 2 11.141 2ZM11 6v5h2V6h-2Z"/>`
	mouseLinePath                 = `<path fill="currentColor" d="M11.141 4c-1.582 0-2.387.169-3.128.565a3.453 3.453 0 0 0-1.448 1.448C6.169 6.753 6 7.559 6 9.14v5.718c0 1.582.169 2.387.565 3.128c.337.63.818 1.112 1.448 1.448c.74.396 1.546.565 3.128.565h1.718c1.582 0 2.387-.169 3.128-.565a3.452 3.452 0 0 0 1.448-1.448c.396-.74.565-1.546.565-3.128V9.14c0-1.582-.169-2.387-.565-3.128a3.452 3.452 0 0 0-1.448-1.448C15.247 4.169 14.441 4 12.86 4h-1.72Zm0-2h1.718c2.014 0 3.094.278 4.071.801A5.452 5.452 0 0 1 19.2 5.07c.522.978.801 2.058.801 4.072v5.718c0 2.014-.279 3.094-.801 4.071a5.452 5.452 0 0 1-2.27 2.269c-.977.522-2.057.801-4.071.801H11.14c-2.014 0-3.094-.279-4.072-.801A5.452 5.452 0 0 1 4.8 18.931c-.522-.978-.8-2.058-.8-4.071V9.14c0-2.014.278-3.094.801-4.072A5.452 5.452 0 0 1 7.07 2.801C8.047 2.278 9.127 2 11.141 2ZM11 6h2v5h-2V6Z"/>`
	movieFillPath                 = `<path fill="currentColor" d="M2 3.993A1 1 0 0 1 2.992 3h18.016c.548 0 .992.445.992.993v16.014a1 1 0 0 1-.992.993H2.992A.993.993 0 0 1 2 20.007V3.993Zm8.622 4.422a.4.4 0 0 0-.622.332v6.506a.4.4 0 0 0 .622.332l4.879-3.252a.401.401 0 0 0 0-.666l-4.88-3.252Z"/>`
	movieLinePath                 = `<path fill="currentColor" d="M2 3.993A1 1 0 0 1 2.992 3h18.016c.548 0 .992.445.992.993v16.014a1 1 0 0 1-.992.993H2.992A.993.993 0 0 1 2 20.007V3.993ZM4 5v14h16V5H4Zm6.622 3.415l4.879 3.252a.4.4 0 0 1 0 .666l-4.88 3.252a.4.4 0 0 1-.621-.332V8.747a.4.4 0 0 1 .622-.332Z"/>`
	movieTwoFillPath              = `<path fill="currentColor" d="M18.001 20H20v2h-8C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10a9.985 9.985 0 0 1-3.999 8ZM12 10a2 2 0 1 0 0-4a2 2 0 0 0 0 4Zm-4 4a2 2 0 1 0 0-4a2 2 0 0 0 0 4Zm8 0a2 2 0 1 0 0-4a2 2 0 0 0 0 4Zm-4 4a2 2 0 1 0 0-4a2 2 0 0 0 0 4Z"/>`
	movieTwoLinePath              = `<path fill="currentColor" d="M12 20h8v2h-8C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10a9.956 9.956 0 0 1-2 6h-2.708A8 8 0 1 0 12 20Zm0-10a2 2 0 1 1 0-4a2 2 0 0 1 0 4Zm-4 4a2 2 0 1 1 0-4a2 2 0 0 1 0 4Zm8 0a2 2 0 1 1 0-4a2 2 0 0 1 0 4Zm-4 4a2 2 0 1 1 0-4a2 2 0 0 1 0 4Z"/>`
	musicFillPath                 = `<path fill="currentColor" d="M12 13.535V3h8v3h-6v11a4 4 0 1 1-2-3.465Z"/>`
	musicLinePath                 = `<path fill="currentColor" d="M12 13.535V3h8v2h-6v12a4 4 0 1 1-2-3.465ZM10 19a2 2 0 1 0 0-4a2 2 0 0 0 0 4Z"/>`
	musicTwoFillPath              = `<path fill="currentColor" d="M20 3v14a4 4 0 1 1-2-3.465V6H9v11a4 4 0 1 1-2-3.465V3h13Z"/>`
	musicTwoLinePath              = `<path fill="currentColor" d="M20 3v14a4 4 0 1 1-2-3.465V5H9v12a4 4 0 1 1-2-3.465V3h13ZM5 19a2 2 0 1 0 0-4a2 2 0 0 0 0 4Zm11 0a2 2 0 1 0 0-4a2 2 0 0 0 0 4Z"/>`
	mvFillPath                    = `<path fill="currentColor" d="M2 3.993A1 1 0 0 1 2.992 3h18.016c.548 0 .992.445.992.993v16.014a1 1 0 0 1-.992.993H2.992A.993.993 0 0 1 2 20.007V3.993Zm10 8.178A3 3 0 1 0 14 15V7.999h3V6h-5v6.17Z"/>`
	mvLinePath                    = `<path fill="currentColor" d="M2 3.993A1 1 0 0 1 2.992 3h18.016c.548 0 .992.445.992.993v16.014a1 1 0 0 1-.992.993H2.992A.993.993 0 0 1 2 20.007V3.993ZM4 5v14h16V5H4Zm8 7.17V6h5v2h-3v7a3 3 0 1 1-2-2.83Z"/>`
	navigationFillPath            = `<path fill="currentColor" d="m2.9 2.3l18.804 6.27a.5.5 0 0 1 .028.938L13 13l-4.425 8.85a.5.5 0 0 1-.928-.086L2.261 2.912a.5.5 0 0 1 .638-.612Z"/>`
	navigationLinePath            = `<path fill="currentColor" d="m4.965 5.096l3.546 12.41l3.04-6.08l5.637-2.255L4.965 5.096ZM2.899 2.3l18.806 6.268a.5.5 0 0 1 .028.939L13 13l-4.425 8.85a.5.5 0 0 1-.928-.086L2.261 2.91a.5.5 0 0 1 .638-.611Z"/>`
	neteaseCloudMusicFillPath     = `<path fill="currentColor" d="M12.001 22c-5.523 0-10-4.477-10-10s4.477-10 10-10s10 4.477 10 10s-4.477 10-10 10Zm-1.086-10.432c.24-.84 1.075-1.541 1.99-1.648c.187.694.388 1.373.545 2.063c.053.23.037.495-.018.727c-.213.892-1.248 1.242-1.978.685c-.53-.405-.742-1.12-.539-1.827Zm3.817-.197c-.125-.465-.256-.927-.393-1.42c.5.13.907.36 1.255.697c1.257 1.222 1.385 3.3.294 4.732c-1.135 1.49-3.155 2.134-5.028 1.605c-2.302-.65-3.808-2.952-3.441-5.316c.274-1.768 1.27-3.004 2.9-3.733c.407-.182.58-.56.42-.93c-.157-.364-.54-.504-.944-.343c-2.721 1.088-4.32 4.134-3.67 6.987c.713 3.118 3.495 5.162 6.675 4.859c1.732-.166 3.164-.948 4.216-2.347c1.506-2.002 1.297-4.783-.463-6.499c-.666-.65-1.471-1.018-2.39-1.153c-.083-.013-.217-.052-.232-.106c-.087-.313-.18-.632-.206-.954c-.029-.357.29-.64.65-.645c.253-.003.434.13.603.3c.303.3.704.322.988.062c.29-.264.296-.678.018-1.008c-.566-.672-1.586-.891-2.43-.523c-.847.37-1.321 1.187-1.2 2.093c.038.28.11.557.167.842l-.26.072a3.863 3.863 0 0 0-2.098 1.414c-.921 1.22-.936 2.828-.041 3.947c1.274 1.594 3.747 1.284 4.523-.568c.284-.677.275-1.368.087-2.065Z"/>`
	neteaseCloudMusicLinePath     = `<path fill="currentColor" d="M10.422 11.375c-.294 1.028.012 2.065.784 2.653c1.061.81 2.565.3 2.874-.995c.08-.337.103-.722.027-1.056c-.23-1.001-.521-1.988-.792-2.996c-1.33.154-2.543 1.172-2.893 2.394Zm5.548-.287c.273 1.012.285 2.017-.127 3c-1.128 2.69-4.722 3.14-6.573.826c-1.302-1.627-1.28-3.961.06-5.734c.78-1.032 1.804-1.707 3.048-2.054l.379-.104c-.084-.415-.188-.816-.243-1.224c-.176-1.317.512-2.503 1.744-3.04c1.226-.535 2.708-.216 3.53.76c.406.479.395 1.08-.025 1.464c-.412.377-.997.346-1.435-.09c-.247-.246-.51-.44-.877-.436c-.525.006-.987.418-.945.937c.037.468.172.93.3 1.386c.022.078.216.135.338.153c1.333.197 2.504.731 3.472 1.676c2.558 2.493 2.861 6.531.672 9.44c-1.529 2.032-3.61 3.169-6.127 3.409c-4.621.44-8.664-2.53-9.7-7.058C2.516 10.255 4.84 5.831 8.796 4.25c.586-.234 1.143-.031 1.371.498c.232.537-.019 1.086-.61 1.35c-2.368 1.06-3.817 2.855-4.215 5.423c-.533 3.434 1.656 6.777 5 7.722c2.723.769 5.658-.167 7.308-2.33c1.586-2.08 1.4-5.1-.427-6.874A3.978 3.978 0 0 0 15.4 9.026c.198.716.389 1.388.57 2.062Z"/>`
	netflixFillPath               = `<path fill="currentColor" d="m11.292 3.814l2.018 5.707l.396 1.116l.007-4.81l.01-4.818h4.27L18 11.871c.003 5.98-.003 10.89-.015 10.9c-.012.009-.209 0-.436-.027a48.722 48.722 0 0 0-3.34-.282a14.57 14.57 0 0 1-.636-.038c-.003-.003-.273-.762-.776-2.184v-.004l-2.144-6.061l-.34-.954l-.008 4.586c-.006 4.365-.01 4.61-.057 4.61c-.163 0-1.57.09-2.04.136c-.308.027-.926.09-1.37.145c-.446.051-.816.085-.823.078C6.007 22.77 6 17.867 6 11.883V1.002h.005V1h4.288l.028.08c.007.016.065.176.157.437l.641 1.778l.173.496l-.001.023Z"/>`
	netflixLinePath               = `<path fill="currentColor" d="M15.985 17.208L16.001 2h2v20a7.593 7.593 0 0 0-2.02-.5L8 6.302V21.5a7.335 7.335 0 0 0-2 .5V2h2l7.984 15.208Z"/>`
	newspaperFillPath             = `<path fill="currentColor" d="M19 22H5a3 3 0 0 1-3-3V3a1 1 0 0 1 1-1h14a1 1 0 0 1 1 1v7h4v9a3 3 0 0 1-3 3Zm-1-10v7a1 1 0 1 0 2 0v-7h-2ZM5 6v6h6V6H5Zm0 7v2h10v-2H5Zm0 3v2h10v-2H5Zm2-8h2v2H7V8Z"/>`
	newspaperLinePath             = `<path fill="currentColor" d="M16 20V4H4v15a1 1 0 0 0 1 1h11Zm3 2H5a3 3 0 0 1-3-3V3a1 1 0 0 1 1-1h14a1 1 0 0 1 1 1v7h4v9a3 3 0 0 1-3 3Zm-1-10v7a1 1 0 1 0 2 0v-7h-2ZM6 6h6v6H6V6Zm2 2v2h2V8H8Zm-2 5h8v2H6v-2Zm0 3h8v2H6v-2Z"/>`
	nftFillPath                   = `<path fill="currentColor" d="M9 12a2 2 0 1 0 0-4a2 2 0 0 0 0 4Zm3-11l9.5 5.5v11L12 23l-9.5-5.5v-11L12 1ZM4.5 7.653v8.694l2.372 1.373l8.073-5.92l4.555 2.734v-6.88L12 3.31L4.5 7.653Z"/>`
	nftLinePath                   = `<path fill="currentColor" d="M9 12a2 2 0 1 0 0-4a2 2 0 0 0 0 4Zm12.5-5.5L12 1L2.5 6.5v11L12 23l9.5-5.5v-11ZM12 3.311l7.5 4.342v6.88l-4.562-2.736l-7.971 5.978L4.5 16.347V7.653L12 3.311Zm0 17.378l-3.152-1.825l6.214-4.66l3.998 2.398L12 20.689Z"/>`
	nodeTreePath                  = `<path fill="currentColor" d="M10 2a1 1 0 0 1 1 1v4a1 1 0 0 1-1 1H8v2h5V9a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v4a1 1 0 0 1-1 1h-6a1 1 0 0 1-1-1v-1H8v6h5v-1a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v4a1 1 0 0 1-1 1h-6a1 1 0 0 1-1-1v-1H7a1 1 0 0 1-1-1V8H4a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h6Zm9 16h-4v2h4v-2Zm0-8h-4v2h4v-2ZM9 4H5v2h4V4Z"/>`
	notificationBadgeFillPath     = `<path fill="currentColor" d="M13.341 4A6 6 0 0 0 21 11.659V21a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V5a1 1 0 0 1 1-1h9.341ZM19 10a4 4 0 1 1 0-8a4 4 0 0 1 0 8Z"/>`
	notificationBadgeLinePath     = `<path fill="currentColor" d="M13.341 4A5.99 5.99 0 0 0 13 6H5v14h14v-8a5.99 5.99 0 0 0 2-.341V21a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V5a1 1 0 0 1 1-1h9.341ZM19 8a2 2 0 1 0 0-4a2 2 0 0 0 0 4Zm0 2a4 4 0 1 1 0-8a4 4 0 0 1 0 8Z"/>`
	notificationFillPath          = `<path fill="currentColor" d="M12 2c4.97 0 9 4.043 9 9.031V20H3v-8.969C3 6.043 7.03 2 12 2ZM9.5 21h5a2.5 2.5 0 0 1-5 0Z"/>`
	notificationFourFillPath      = `<path fill="currentColor" d="m20 18.667l.4.533a.5.5 0 0 1-.4.8H4a.5.5 0 0 1-.4-.8l.4-.533V10a8 8 0 1 1 16 0v8.667ZM9.5 21h5a2.5 2.5 0 0 1-5 0Z"/>`
	notificationFourLinePath      = `<path fill="currentColor" d="M18 10a6 6 0 0 0-12 0v8h12v-8Zm2 8.667l.4.533a.5.5 0 0 1-.4.8H4a.5.5 0 0 1-.4-.8l.4-.533V10a8 8 0 1 1 16 0v8.667ZM9.5 21h5a2.5 2.5 0 0 1-5 0Z"/>`
	notificationLinePath          = `<path fill="currentColor" d="M5 18h14v-6.969C19 7.148 15.866 4 12 4s-7 3.148-7 7.031V18Zm7-16c4.97 0 9 4.043 9 9.031V20H3v-8.969C3 6.043 7.03 2 12 2ZM9.5 21h5a2.5 2.5 0 0 1-5 0Z"/>`
	notificationOffFillPath       = `<path fill="currentColor" d="M18.587 20H4a.5.5 0 0 1-.4-.8l.4-.533V10c0-1.33.325-2.584.899-3.687L1.395 2.808l1.414-1.414l19.799 19.798l-1.415 1.415L18.587 20ZM20 15.786L7.561 3.345A8 8 0 0 1 20 10v5.786ZM9.501 21h5a2.5 2.5 0 0 1-5 0Z"/>`
	notificationOffLinePath       = `<path fill="currentColor" d="M18.587 20H4a.5.5 0 0 1-.4-.8l.4-.533V10c0-1.33.325-2.584.899-3.687L1.395 2.808l1.414-1.414l19.799 19.798l-1.415 1.415L18.587 20ZM6.409 7.822A5.985 5.985 0 0 0 6 10v8h10.586L6.409 7.822ZM20 15.786l-2-2V10a6 6 0 0 0-8.99-5.203L7.56 3.345A8 8 0 0 1 20 10v5.786ZM9.501 21h5a2.5 2.5 0 0 1-5 0Z"/>`
	notificationThreeFillPath     = `<path fill="currentColor" d="M20 17h2v2H2v-2h2v-7a8 8 0 1 1 16 0v7ZM9 21h6v2H9v-2Z"/>`
	notificationThreeLinePath     = `<path fill="currentColor" d="M20 17h2v2H2v-2h2v-7a8 8 0 1 1 16 0v7Zm-2 0v-7a6 6 0 0 0-12 0v7h12Zm-9 4h6v2H9v-2Z"/>`
	notificationTwoFillPath       = `<path fill="currentColor" d="M22 20H2v-2h1v-6.969C3 6.043 7.03 2 12 2s9 4.043 9 9.031V18h1v2ZM9.5 21h5a2.5 2.5 0 0 1-5 0Z"/>`
	notificationTwoLinePath       = `<path fill="currentColor" d="M22 20H2v-2h1v-6.969C3 6.043 7.03 2 12 2s9 4.043 9 9.031V18h1v2ZM5 18h14v-6.969C19 7.148 15.866 4 12 4s-7 3.148-7 7.031V18Zm4.5 3h5a2.5 2.5 0 0 1-5 0Z"/>`
	notionFillPath                = `<path fill="currentColor" d="M6.104 5.91c.584.474.802.438 1.898.365l10.332-.62c.22 0 .037-.22-.036-.256l-1.716-1.24c-.329-.255-.767-.548-1.606-.475l-10.005.73c-.364.036-.437.219-.292.365l1.425 1.13Zm.62 2.408v10.87c0 .585.292.803.95.767l11.354-.657c.657-.036.73-.438.73-.912V7.588c0-.474-.182-.73-.584-.693l-11.866.693c-.438.036-.584.255-.584.73Zm11.21.583c.072.328 0 .657-.33.694l-.547.109v8.025c-.475.256-.913.402-1.278.402c-.584 0-.73-.183-1.168-.73l-3.579-5.618v5.436l1.133.255s0 .657-.914.657l-2.519.146c-.073-.146 0-.51.256-.584l.657-.182v-7.187l-.913-.073c-.073-.329.11-.803.621-.84l2.702-.181l3.724 5.69V9.887l-.95-.109c-.072-.402.22-.693.585-.73l2.52-.146ZM4.131 3.429l10.406-.766c1.277-.11 1.606-.036 2.41.547l3.321 2.335c.548.401.731.51.731.948v12.805c0 .803-.292 1.277-1.314 1.35l-12.085.73c-.767.036-1.132-.073-1.534-.584L3.62 17.62c-.438-.584-.62-1.021-.62-1.533V4.706c0-.657.292-1.204 1.132-1.277Z"/>`
	notionLinePath                = `<path fill="currentColor" d="M16.285 2.955a1.889 1.889 0 0 0-1.211-.31l-11.06.961a.989.989 0 0 0-.903.986v11.575c0 .408.133.806.378 1.133l2.767 3.69a.99.99 0 0 0 .867.392l12.853-.989a.989.989 0 0 0 .913-.986V6.527a.939.939 0 0 0-.418-.781l-4.186-2.791Zm-1.057 1.46a.111.111 0 0 1 .071.02l2.746 1.83l-10.207.816l-1.86-1.86l9.25-.805Zm3.883 14.262l-10.722.825V8.82l10.722-.858v10.714ZM4.89 6.646l1.722 1.722V18.5l-1.7-2.267a.111.111 0 0 1-.022-.066V6.646Zm7.09 3.477l-1.977.13v7.562l1.996-.13v-4.337l3.512 4.169l1.976-.13V9.825l-1.996.13v4.337l-3.511-4.169Z"/>`
	npmjsFillPath                 = `<path fill="currentColor" d="M20.001 3a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1h-16a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h16Zm-3 4h-10v10h5V9.5h2.5V17h2.5V7Z"/>`
	npmjsLinePath                 = `<path fill="currentColor" d="M20.001 3a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1h-16a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h16Zm-1 2h-14v14h14V5Zm-2 2v10h-2.5V9.5h-2.5V17h-5V7h10Z"/>`
	numberEightPath               = `<path fill="currentColor" d="M12 1.5a5.5 5.5 0 0 1 3.352 9.86c1.888 1.05 3.148 2.96 3.148 5.14c0 3.314-2.91 6-6.5 6s-6.5-2.686-6.5-6c0-2.181 1.261-4.09 3.147-5.141A5.5 5.5 0 0 1 12 1.5Zm0 11c-2.52 0-4.5 1.828-4.5 4c0 2.172 1.98 4 4.5 4s4.5-1.828 4.5-4c0-2.172-1.98-4-4.5-4Zm0-9a3.5 3.5 0 1 0 0 7a3.5 3.5 0 0 0 0-7Z"/>`
	numberFivePath                = `<path fill="currentColor" d="M18 2v2H9.3l-.676 6.445a6.5 6.5 0 1 1-2.93 7.133l1.94-.486A4.502 4.502 0 0 0 16.5 16a4.5 4.5 0 0 0-4.5-4.5c-2.022 0-3.277.639-3.96 1.53l-1.575-1.182L7.501 2H18Z"/>`
	numberFourPath                = `<path fill="currentColor" d="M16 1.5V16h3v2h-3v4h-2v-4H4v-1.102L14 1.5h2ZM14 16V5.171L6.968 16H14Z"/>`
	numberNinePath                = `<path fill="currentColor" d="M12 1.5a6.5 6.5 0 0 1 5.619 9.77l-6.196 10.729H9.114l4.439-7.686A6.5 6.5 0 1 1 12 1.5Zm0 2a4.5 4.5 0 1 0 0 9a4.5 4.5 0 0 0 0-9Z"/>`
	numberOnePath                 = `<path fill="currentColor" d="M14 1.5V22h-2V3.704L7.5 4.91V2.839l5-1.339H14Z"/>`
	numberSevenPath               = `<path fill="currentColor" d="M19 2v1.5L10.763 22H8.574l8.013-18H6V2h13Z"/>`
	numberSixPath                 = `<path fill="currentColor" d="m14.886 2l-4.438 7.686A6.5 6.5 0 1 1 6.4 12.7L12.576 2h2.31ZM12 11.5a4.5 4.5 0 1 0 0 9a4.5 4.5 0 0 0 0-9Z"/>`
	numberThreePath               = `<path fill="currentColor" d="M18 2v1.362L12.81 9.55a6.501 6.501 0 1 1-7.117 8.028l1.941-.486A4.502 4.502 0 0 0 16.5 16a4.5 4.5 0 0 0-6.505-4.03l-.228.122l-.69-1.207L14.856 4H6.502V2H18Z"/>`
	numberTwoPath                 = `<path fill="currentColor" d="M16 7.5a4 4 0 1 0-8 0H6a6 6 0 1 1 10.663 3.776l-7.319 8.723L18 20v2H6v-1.127l9.064-10.802A3.982 3.982 0 0 0 16 7.5Z"/>`
	numberZeroPath                = `<path fill="currentColor" d="M12 1.5c1.321 0 2.484.348 3.447.994c.963.645 1.726 1.588 2.249 2.778c.522 1.19.804 2.625.804 4.257v4.942c0 1.632-.282 3.068-.804 4.257c-.523 1.19-1.286 2.133-2.25 2.778c-.962.646-2.125.994-3.446.994c-1.321 0-2.484-.348-3.447-.994c-.963-.645-1.726-1.588-2.249-2.778c-.522-1.19-.804-2.625-.804-4.257V9.529c0-1.632.282-3.068.804-4.257c.523-1.19 1.286-2.133 2.25-2.778C9.515 1.848 10.678 1.5 12 1.5Zm0 2c-.916 0-1.694.226-2.333.655c-.637.427-1.158 1.07-1.532 1.92c-.412.94-.635 2.108-.635 3.454v4.942c0 1.346.223 2.514.635 3.453c.374.852.895 1.494 1.532 1.921c.639.428 1.417.655 2.333.655c.916 0 1.694-.227 2.333-.655c.637-.427 1.158-1.07 1.531-1.92c.413-.94.636-2.108.636-3.454V9.529c0-1.346-.223-2.514-.636-3.453c-.373-.851-.894-1.494-1.53-1.921c-.64-.429-1.418-.655-2.334-.655Z"/>`
	numbersFillPath               = `<path fill="currentColor" d="M9 18H4v-8h5v8Zm6 0h-5V6h5v12Zm6 0h-5V2h5v16Zm1 4H3v-2h19v2Z"/>`
	numbersLinePath               = `<path fill="currentColor" d="M9 18H4v-8h5v8Zm-2-2v-4H6v4h1Zm6 0V8h-1v8h1Zm2 2h-5V6h5v12Zm4-2V4h-1v12h1Zm2 2h-5V2h5v16Zm1 4H3v-2h19v2Z"/>`
	nurseFillPath                 = `<path fill="currentColor" d="M14.957 15.564A8.009 8.009 0 0 1 19.94 22H4.062a8.009 8.009 0 0 1 4.982-6.436L12.001 20l2.956-4.436ZM18.001 2v6A6 6 0 0 1 6 8V2h12Zm-2 6H8a4 4 0 0 0 8 0Z"/>`
	nurseLinePath                 = `<path fill="currentColor" d="M12 15a8.001 8.001 0 0 1 7.939 7H4.062a8.001 8.001 0 0 1 7.939-7Zm-1.813 2.28A6.022 6.022 0 0 0 6.803 20h5.199l-1.813-2.72Zm3.627 0L12.001 20h5.198a6.022 6.022 0 0 0-3.385-2.72ZM18.001 2v6A6 6 0 0 1 6 8V2h12ZM8 8a4 4 0 0 0 8 0H8Zm8-4H8v2h8V4Z"/>`
	octagonFillPath               = `<path fill="currentColor" d="m15.936 2.501l5.565 5.565v7.87l-5.565 5.565h-7.87l-5.565-5.565v-7.87l5.565-5.565h7.87Z"/>`
	octagonLinePath               = `<path fill="currentColor" d="m15.936 2.501l5.565 5.565v7.87l-5.565 5.565h-7.87l-5.565-5.565v-7.87l5.565-5.565h7.87Zm-.828 2H8.894L4.501 8.894v6.214L8.894 19.5h6.214l4.393-4.393V8.894l-4.393-4.393Z"/>`
	oilFillPath                   = `<path fill="currentColor" d="M8 5h11a1 1 0 0 1 1 1v15a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V11l4-6Zm5-4h5a1 1 0 0 1 1 1v2h-7V2a1 1 0 0 1 1-1ZM6 12v7h2v-7H6Z"/>`
	oilLinePath                   = `<path fill="currentColor" d="M9.07 7L6 11.606V20h12V7H9.07ZM8 5h11a1 1 0 0 1 1 1v15a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V11l4-6Zm5-4h5a1 1 0 0 1 1 1v2h-7V2a1 1 0 0 1 1-1ZM8 12h2v6H8v-6Z"/>`
	omegaPath                     = `<path fill="currentColor" d="M14 20v-2.157c1.863-1.192 3.5-3.875 3.5-6.959c0-3.073-2-6.029-5.5-6.029s-5.5 2.956-5.5 6.03c0 3.083 1.637 5.766 3.5 6.958V20H3v-2h4.76C5.666 16.505 4 13.989 4 10.884C4 6.247 7.5 3 12 3s8 3.247 8 7.884c0 3.105-1.666 5.621-3.76 7.116H21v2h-7Z"/>`
	openArmFillPath               = `<path fill="currentColor" d="M12.001 12a5 5 0 1 1 0-10a5 5 0 0 1 0 10Zm6 5v5h-2v-5c0-4.451 2.644-8.285 6.447-10.016l.828 1.82A9.002 9.002 0 0 0 18.001 17Zm-10 0v5h-2v-5A9.002 9.002 0 0 0 .727 8.805l.827-1.821A11.002 11.002 0 0 1 8.001 17Z"/>`
	openArmLinePath               = `<path fill="currentColor" d="M18.001 17v5h-2v-5c0-4.451 2.644-8.285 6.447-10.016l.828 1.82A9.002 9.002 0 0 0 18.001 17Zm-10 0v5h-2v-5A9.002 9.002 0 0 0 .727 8.805l.827-1.821A11.002 11.002 0 0 1 8.001 17Zm4-5a5 5 0 1 1 0-10a5 5 0 0 1 0 10Zm0-2a3 3 0 1 0 0-6a3 3 0 0 0 0 6Z"/>`
	openSourceFillPath            = `<path fill="currentColor" d="M12.001 2c5.523 0 10 4.477 10 10c0 4.13-2.504 7.676-6.077 9.201l-2.518-6.55A3 3 0 0 0 12 9a3 3 0 0 0-1.404 5.652l-2.518 6.55A10.003 10.003 0 0 1 2 12C2 6.477 6.477 2 12 2Z"/>`
	openSourceLinePath            = `<path fill="currentColor" d="M12.001 2c5.523 0 10 4.477 10 10c0 4.4-2.841 8.136-6.789 9.473l-.226.074l-2.904-7.55A2.016 2.016 0 0 0 14.001 12a2 2 0 1 0-2.083 1.998l-2.903 7.549l-.225-.074C4.842 20.136 2 16.4 2 12C2 6.477 6.477 2 12 2Zm0 2a8 8 0 0 0-4.099 14.872l1.48-3.849a4 4 0 1 1 5.239 0c.565 1.474 1.059 2.757 1.479 3.85A8 8 0 0 0 12 4Z"/>`
	openaiFillPath                = `<path fill="currentColor" d="M20.562 10.188c.25-.688.313-1.376.25-2.063c-.062-.688-.312-1.375-.625-2c-.562-.938-1.375-1.688-2.312-2.125c-1-.438-2.063-.563-3.125-.313c-.5-.5-1.063-.937-1.688-1.25C12.437 2.126 11.687 2 11 2a5.17 5.17 0 0 0-3 .938c-.875.624-1.5 1.5-1.813 2.5c-.75.187-1.375.5-2 .875c-.562.437-1 1-1.375 1.562c-.562.938-.75 2-.625 3.063a5.438 5.438 0 0 0 1.25 2.874a4.695 4.695 0 0 0-.25 2.063c.063.688.313 1.375.625 2c.563.938 1.375 1.688 2.313 2.125c1 .438 2.062.563 3.125.313c.5.5 1.062.937 1.687 1.25c.625.312 1.375.437 2.063.437a5.17 5.17 0 0 0 3-.938c.875-.625 1.5-1.5 1.812-2.5a4.543 4.543 0 0 0 1.938-.875c.562-.437 1.062-.937 1.375-1.562c.562-.938.75-2 .625-3.063c-.125-1.062-.5-2.062-1.188-2.874Zm-7.5 10.5c-1 0-1.75-.313-2.437-.875c0 0 .062-.063.125-.063l4-2.313a.488.488 0 0 0 .25-.25c.062-.125.062-.187.062-.312V11.25l1.688 1v4.625a3.685 3.685 0 0 1-3.688 3.813ZM5 17.25c-.438-.75-.625-1.625-.438-2.5c0 0 .063.063.125.063l4 2.312a.563.563 0 0 0 .313.063c.125 0 .25 0 .312-.063l4.875-2.813v1.938l-4.062 2.375A3.71 3.71 0 0 1 7.312 19c-1-.25-1.812-.875-2.312-1.75ZM3.937 8.562a3.807 3.807 0 0 1 1.938-1.624v4.75c0 .124 0 .25.062.312a.488.488 0 0 0 .25.25l4.875 2.813l-1.687 1l-4-2.313a3.697 3.697 0 0 1-1.75-2.25c-.25-.938-.188-2.063.312-2.938ZM17.75 11.75l-4.875-2.813l1.687-1l4 2.313c.625.375 1.125.875 1.438 1.5c.312.625.5 1.313.437 2.063a3.718 3.718 0 0 1-.75 1.937c-.437.563-1 1-1.687 1.25v-4.75c0-.125 0-.25-.063-.313c0 0-.062-.124-.187-.187Zm1.687-2.5s-.062-.063-.125-.063l-4-2.312c-.125-.063-.187-.063-.312-.063s-.25 0-.313.063L9.812 9.688V7.75l4.063-2.375c.625-.375 1.312-.5 2.062-.5c.688 0 1.375.25 2 .688c.563.437 1.063 1 1.313 1.625s.312 1.375.187 2.062Zm-10.5 3.5l-1.687-1V7.062c0-.687.187-1.437.562-2C8.187 4.438 8.75 4 9.375 3.688a3.365 3.365 0 0 1 2.062-.312c.688.063 1.375.375 1.938.813c0 0-.063.062-.125.062l-4 2.313a.488.488 0 0 0-.25.25c-.063.125-.063.187-.063.312v5.625Zm.875-2L12 9.5l2.187 1.25v2.5L12 14.5l-2.188-1.25v-2.5Z"/>`
	openaiLinePath                = `<path fill="currentColor" d="M11 4c.649 0 1.25.206 1.741.556c-1.292.673-2.48 1.52-3.741 2.248l1 1.732c1.575-.91 3.052-2.05 4.76-2.706a3.001 3.001 0 0 1 4.057 3.09C17.588 8.137 16.26 7.531 15 6.804l-1 1.732c1.575.91 3.302 1.618 4.723 2.77a3.001 3.001 0 0 1-.648 5.058C18.14 14.908 18 13.455 18 12h-2c0 1.818.25 3.668-.037 5.476a3.001 3.001 0 0 1-4.705 1.967c1.293-.673 2.482-1.52 3.742-2.247l-1-1.732c-1.575.91-3.052 2.05-4.76 2.706a3.001 3.001 0 0 1-4.057-3.09c1.23.782 2.557 1.388 3.817 2.116l1-1.732c-1.575-.91-3.302-1.618-4.724-2.77a3.001 3.001 0 0 1 .649-5.058C5.86 9.092 6 10.545 6 12h2c0-1.818-.25-3.669.037-5.476A3.001 3.001 0 0 1 11 4Zm3.793-.258a5.001 5.001 0 0 0-8.548 1.71a5.001 5.001 0 0 0-2.793 8.258a5.001 5.001 0 0 0 5.756 6.548a5.001 5.001 0 0 0 8.548-1.71a5.001 5.001 0 0 0 2.793-8.258a5.001 5.001 0 0 0-5.756-6.548Z"/>`
	openbaseFillPath              = `<path fill="currentColor" d="m12 2.76l10 3.236l-.9 9.468l-9.1 6.86l-9.1-6.864L2.01 6L12 2.76Zm0 .825l-8.81 2.85L12 20.793l8.806-14.358L12 3.585Z"/>`
	openbaseLinePath              = `<path fill="currentColor" d="M12 3L2 5.996l1 9.464l9 7.04l9-7.04l1-9.464L12 3Zm7.837 4.436L12 19.96L4.163 7.436L12 5.088l7.837 2.348Z"/>`
	operaFillPath                 = `<path fill="currentColor" d="M8.71 6.365c-1.107 1.305-1.822 3.236-1.872 5.4v.47c.051 2.165.765 4.093 1.872 5.4c1.434 1.862 3.566 3.044 5.95 3.044a7.208 7.208 0 0 0 4.005-1.226a9.94 9.94 0 0 1-7.139 2.535A9.998 9.998 0 0 1 2.001 12c0-5.524 4.477-10 10-10h.038a9.97 9.97 0 0 1 6.627 2.546a7.24 7.24 0 0 0-4.008-1.226c-2.382 0-4.514 1.183-5.95 3.045h.002ZM22.001 12a9.969 9.969 0 0 1-3.335 7.454c-2.565 1.25-4.955.376-5.747-.17c2.52-.554 4.423-3.6 4.423-7.284c0-3.685-1.903-6.73-4.423-7.283c.791-.545 3.182-1.42 5.747-.171A9.967 9.967 0 0 1 22.001 12Z"/>`
	operaLinePath                 = `<path fill="currentColor" d="M14.767 19.51a8.003 8.003 0 0 0 0-15.02C16.712 5.977 18 8.935 18 12s-1.289 6.024-3.235 7.51ZM9.235 4.49a8.003 8.003 0 0 0 0 15.02C7.29 18.023 6.001 15.065 6.001 12S7.29 5.976 9.235 4.49ZM12.001 22c-5.523 0-10-4.477-10-10s4.477-10 10-10s10 4.477 10 10s-4.477 10-10 10Zm0-3.5c2 0 4-3.033 4-6.5s-2-6.5-4-6.5s-4 3.033-4 6.5s2 6.5 4 6.5Z"/>`
	orderPlayFillPath             = `<path fill="currentColor" d="M17 4V2.067a.5.5 0 0 1 .82-.384l4.12 3.433a.5.5 0 0 1-.321.884H2V4h15ZM2 18h20v2H2v-2Zm0-7h20v2H2v-2Z"/>`
	orderPlayLinePath             = `<path fill="currentColor" d="M17 4V2.067a.5.5 0 0 1 .82-.384l4.12 3.433a.5.5 0 0 1-.321.884H2V4h15ZM2 18h20v2H2v-2Zm0-7h20v2H2v-2Z"/>`
	organizationChartPath         = `<path fill="currentColor" d="M15 3a1 1 0 0 1 1 1v4a1 1 0 0 1-1 1h-2v2h4a1 1 0 0 1 1 1v3h2a1 1 0 0 1 1 1v4a1 1 0 0 1-1 1h-6a1 1 0 0 1-1-1v-4a1 1 0 0 1 1-1h2v-2H8v2h2a1 1 0 0 1 1 1v4a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1v-4a1 1 0 0 1 1-1h2v-3a1 1 0 0 1 1-1h4V9H9a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h6ZM9 17H5v2h4v-2Zm10 0h-4v2h4v-2ZM14 5h-4v2h4V5Z"/>`
	outletFillPath                = `<path fill="currentColor" d="M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10Zm2-12v4h2v-4h-2Zm-6 0v4h2v-4H8Z"/>`
	outletLinePath                = `<path fill="currentColor" d="M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10Zm0-2a8 8 0 1 0 0-16a8 8 0 0 0 0 16Zm2-10h2v4h-2v-4Zm-6 0h2v4H8v-4Z"/>`
	outletTwoFillPath             = `<path fill="currentColor" d="M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10ZM11 7v4h2V7h-2Zm3 5v4h2v-4h-2Zm-6 0v4h2v-4H8Z"/>`
	outletTwoLinePath             = `<path fill="currentColor" d="M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10Zm0-2a8 8 0 1 0 0-16a8 8 0 0 0 0 16ZM11 7h2v4h-2V7Zm3 5h2v4h-2v-4Zm-6 0h2v4H8v-4Z"/>`
	overlinePath                  = `<path fill="currentColor" d="M15.246 18H8.754l-1.6 4H5l6-15h2l6 15h-2.154l-1.6-4Zm-.8-2L12 9.885L9.554 16h4.892ZM4 3h16v2H4V3Z"/>`
	pTwoPFillPath                 = `<path fill="currentColor" d="M20 5a3 3 0 1 1-6 0a3 3 0 0 1 6 0ZM7 3a4 4 0 0 0-4 4v2h2V7a2 2 0 0 1 2-2h3V3H7Zm10 18a4 4 0 0 0 4-4v-2h-2v2a2 2 0 0 1-2 2h-3v2h3ZM7 16a3 3 0 1 0 0-6a3 3 0 0 0 0 6Zm10-7a4 4 0 0 0-4 4h8a4 4 0 0 0-4-4ZM3 21a4 4 0 0 1 8 0H3Z"/>`
	pTwoPLinePath                 = `<path fill="currentColor" d="M17 6a1 1 0 1 1 0-2a1 1 0 0 1 0 2Zm0 2a3 3 0 1 0 0-6a3 3 0 0 0 0 6ZM7 3a4 4 0 0 0-4 4v2h2V7a2 2 0 0 1 2-2h3V3H7Zm10 18a4 4 0 0 0 4-4v-2h-2v2a2 2 0 0 1-2 2h-3v2h3Zm-9-8a1 1 0 1 0-2 0a1 1 0 0 0 2 0Zm2 0a3 3 0 1 1-6 0a3 3 0 0 1 6 0Zm7-2a2 2 0 0 0-2 2h-2a4 4 0 0 1 8 0h-2a2 2 0 0 0-2-2ZM5 21a2 2 0 1 1 4 0h2a4 4 0 0 0-8 0h2Z"/>`
	pageSeparatorPath             = `<path fill="currentColor" d="M17 21v-4H7v4H5v-5a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v5h-2ZM7 3v4h10V3h2v5a1 1 0 0 1-1 1H6a1 1 0 0 1-1-1V3h2ZM2 9l4 3l-4 3V9Zm20 0v6l-4-3l4-3Z"/>`
	pagesFillPath                 = `<path fill="currentColor" d="M20 22H4a1 1 0 0 1-1-1V8h18v13a1 1 0 0 1-1 1Zm1-16H3V3a1 1 0 0 1 1-1h16a1 1 0 0 1 1 1v3ZM7 11v4h4v-4H7Zm0 6v2h10v-2H7Zm6-5v2h4v-2h-4Z"/>`
	pagesLinePath                 = `<path fill="currentColor" d="M5 8v12h14V8H5Zm0-2h14V4H5v2Zm15 16H4a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h16a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1ZM7 10h4v4H7v-4Zm0 6h10v2H7v-2Zm6-5h4v2h-4v-2Z"/>`
	paintBrushFillPath            = `<path fill="currentColor" d="M4 2.997h16a1 1 0 0 1 1 1v5a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1v-5a1 1 0 0 1 1-1Zm2 9h6a1 1 0 0 1 1 1v3h1v6h-4v-6h1v-2H5a1 1 0 0 1-1-1v-2h2v1Zm11.732 1.732L19.5 11.96l1.768 1.768a2.5 2.5 0 1 1-3.536 0Z"/>`
	paintBrushLinePath            = `<path fill="currentColor" d="M5 4.997v3h14v-3H5Zm-1-2h16a1 1 0 0 1 1 1v5a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1v-5a1 1 0 0 1 1-1Zm2 9h6a1 1 0 0 1 1 1v3h1v6h-4v-6h1v-2H5a1 1 0 0 1-1-1v-2h2v1Zm11.732 1.732L19.5 11.96l1.768 1.768a2.5 2.5 0 1 1-3.536 0Z"/>`
	paintFillPath                 = `<path fill="currentColor" d="m19.228 18.732l1.767-1.768l1.768 1.768a2.5 2.5 0 1 1-3.535 0ZM8.878 1.08l11.314 11.313a1 1 0 0 1 0 1.414l-8.485 8.486a1 1 0 0 1-1.414 0l-8.485-8.486a1 1 0 0 1 0-1.414l7.778-7.778l-2.122-2.121L8.88 1.08ZM11 6.03L3.929 13.1H18.07L11 6.03Z"/>`
	paintLinePath                 = `<path fill="currentColor" d="m19.228 18.732l1.767-1.768l1.768 1.768a2.5 2.5 0 1 1-3.535 0ZM8.878 1.08l11.314 11.313a1 1 0 0 1 0 1.414l-8.485 8.486a1 1 0 0 1-1.414 0l-8.485-8.486a1 1 0 0 1 0-1.414l7.778-7.778l-2.122-2.121L8.88 1.08ZM11 6.03L3.929 13.1l7.07 7.072l7.072-7.072L11 6.03Z"/>`
	paletteFillPath               = `<path fill="currentColor" d="M12 2c5.522 0 10 3.978 10 8.889a5.558 5.558 0 0 1-5.556 5.555h-1.966c-.922 0-1.667.745-1.667 1.667c0 .422.167.811.422 1.1c.267.3.434.689.434 1.122C13.667 21.256 12.9 22 12 22C6.478 22 2 17.522 2 12S6.478 2 12 2ZM7.5 12a1.5 1.5 0 1 0 0-3a1.5 1.5 0 0 0 0 3Zm9 0a1.5 1.5 0 1 0 0-3a1.5 1.5 0 0 0 0 3ZM12 9a1.5 1.5 0 1 0 0-3a1.5 1.5 0 0 0 0 3Z"/>`
	paletteLinePath               = `<path fill="currentColor" d="M12 2c5.522 0 10 3.978 10 8.889a5.558 5.558 0 0 1-5.556 5.555h-1.966c-.922 0-1.667.745-1.667 1.667c0 .422.167.811.422 1.1c.267.3.434.689.434 1.122C13.667 21.256 12.9 22 12 22C6.478 22 2 17.522 2 12S6.478 2 12 2Zm-1.189 16.111a3.664 3.664 0 0 1 3.667-3.667h1.966A3.558 3.558 0 0 0 20 10.89C20 7.139 16.468 4 12 4a8 8 0 0 0-.676 15.972a3.648 3.648 0 0 1-.513-1.86ZM7.5 12a1.5 1.5 0 1 1 0-3a1.5 1.5 0 0 1 0 3Zm9 0a1.5 1.5 0 1 1 0-3a1.5 1.5 0 0 1 0 3ZM12 9a1.5 1.5 0 1 1 0-3a1.5 1.5 0 0 1 0 3Z"/>`
	pantoneFillPath               = `<path fill="currentColor" d="m4 18.922l-1.349-.545a1 1 0 0 1-.553-1.302l1.903-4.708v6.555ZM8.86 21H7a1 1 0 0 1-1-1v-6.078L8.86 21ZM6.023 5.968l9.271-3.746a1 1 0 0 1 1.302.552l5.62 13.908a1 1 0 0 1-.553 1.302L12.39 21.73a1 1 0 0 1-1.302-.553L5.469 7.27a1 1 0 0 1 .554-1.301ZM9 9a1 1 0 1 0 0-2a1 1 0 0 0 0 2Z"/>`
	pantoneLinePath               = `<path fill="currentColor" d="m5.765 8l-.295-.73a1 1 0 0 1 .553-1.302l9.271-3.746a1 1 0 0 1 1.302.552l5.62 13.908a1 1 0 0 1-.553 1.302L12.39 21.73a1 1 0 0 1-1.302-.553L11 20.959v.04H7a1 1 0 0 1-1-1v-.269l-3.35-1.353a1 1 0 0 1-.553-1.302L5.765 8Zm2.236 11h2.208l-2.208-5.467V19Zm-2-6.244l-1.674 4.141l1.674.711v-4.852Zm1.698-5.309l4.87 12.054l7.417-2.997l-4.87-12.054L7.7 7.447Zm2.978 2.033a1 1 0 1 1-.75-1.855a1 1 0 0 1 .75 1.855Z"/>`
	paragraphPath                 = `<path fill="currentColor" d="M12 6v15h-2v-5a6 6 0 0 1 0-12h10v2h-3v15h-2V6h-3Zm-2 0a4 4 0 1 0 0 8V6Z"/>`
	parentFillPath                = `<path fill="currentColor" d="M7 11a4.5 4.5 0 1 1 0-9a4.5 4.5 0 0 1 0 9Zm10.5 4a4 4 0 1 1 0-8a4 4 0 0 1 0 8Zm0 1a4.5 4.5 0 0 1 4.5 4.5v.5h-9v-.5a4.5 4.5 0 0 1 4.5-4.5ZM7 12a5 5 0 0 1 5 5v4H2v-4a5 5 0 0 1 5-5Z"/>`
	parentLinePath                = `<path fill="currentColor" d="M7 9a2.5 2.5 0 1 0 0-5a2.5 2.5 0 0 0 0 5Zm0 2a4.5 4.5 0 1 1 0-9a4.5 4.5 0 0 1 0 9Zm10.5 2a2 2 0 1 0 0-4a2 2 0 0 0 0 4Zm0 2a4 4 0 1 1 0-8a4 4 0 0 1 0 8Zm2.5 6v-.5a2.5 2.5 0 0 0-5 0v.5h-2v-.5a4.5 4.5 0 1 1 9 0v.5h-2Zm-10 0v-4a3 3 0 1 0-6 0v4H2v-4a5 5 0 0 1 10 0v4h-2Z"/>`
	parenthesesFillPath           = `<path fill="currentColor" d="M6.923 21C5.113 18.664 4 15.493 4 12c0-3.493 1.113-6.664 2.923-9h2.014C7.235 5.388 6.2 8.542 6.2 12s1.035 6.612 2.737 9H6.923Zm10.151 0H15.06c1.702-2.388 2.737-5.542 2.737-9s-1.035-6.612-2.737-9h2.014c1.81 2.336 2.923 5.507 2.923 9c0 3.493-1.112 6.664-2.923 9Z"/>`
	parenthesesLinePath           = `<path fill="currentColor" d="M6.923 21C5.113 18.664 4 15.493 4 12c0-3.493 1.113-6.664 2.923-9h2.014C7.235 5.388 6.2 8.542 6.2 12s1.035 6.612 2.737 9H6.923Zm10.151 0H15.06c1.702-2.388 2.737-5.542 2.737-9s-1.035-6.612-2.737-9h2.014c1.81 2.336 2.923 5.507 2.923 9c0 3.493-1.112 6.664-2.923 9Z"/>`
	parkingBoxFillPath            = `<path fill="currentColor" d="M11 14h1.5a3.5 3.5 0 1 0 0-7H9v10h2v-3ZM4 3h16a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Zm7 6h1.5a1.5 1.5 0 0 1 0 3H11V9Z"/>`
	parkingBoxLinePath            = `<path fill="currentColor" d="M4 3h16a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Zm1 2v14h14V5H5Zm4 2h3.5a3.5 3.5 0 1 1 0 7H11v3H9V7Zm2 2v3h1.5a1.5 1.5 0 0 0 0-3H11Z"/>`
	parkingFillPath               = `<path fill="currentColor" d="M6 3h7a6 6 0 0 1 0 12h-3v6H6V3Zm4 4v4h3a2 2 0 1 0 0-4h-3Z"/>`
	parkingLinePath               = `<path fill="currentColor" d="M6 3h7a6 6 0 0 1 0 12H8v6H6V3Zm2 2v8h5a4 4 0 0 0 0-8H8Z"/>`
	passExpiredFillPath           = `<path fill="currentColor" d="M9 10a1 1 0 1 1-2 0a1 1 0 0 1 2 0ZM2 4a1 1 0 0 0-1 1v14a1 1 0 0 0 1 1h20a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1H2Zm9 6a3 3 0 1 1-6 0a3 3 0 0 1 6 0Zm-5.473 7.025l-1.414-1.414A5.486 5.486 0 0 1 8.003 14c1.518 0 2.894.617 3.888 1.61l-1.414 1.415A3.486 3.486 0 0 0 8.002 16c-.967 0-1.84.39-2.475 1.025ZM16 10.585l1.793-1.792l1.414 1.414L17.414 12l1.793 1.793l-1.414 1.414L16 13.414l-1.793 1.793l-1.414-1.414L14.586 12l-1.793-1.793l1.414-1.414L16 10.586Z"/>`
	passExpiredLinePath           = `<path fill="currentColor" d="M3 18h18V6H3v12ZM1 5a1 1 0 0 1 1-1h20a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V5Zm8 5a1 1 0 1 0-2 0a1 1 0 0 0 2 0Zm2 0a3 3 0 1 1-6 0a3 3 0 0 1 6 0Zm-2.998 6c-.967 0-1.84.39-2.475 1.025l-1.414-1.414A5.486 5.486 0 0 1 8.002 14a5.49 5.49 0 0 1 3.889 1.61l-1.414 1.415A3.486 3.486 0 0 0 8.002 16Zm9.79-7.207L16 10.586l-1.793-1.793l-1.414 1.414L14.586 12l-1.793 1.793l1.414 1.414L16 13.414l1.793 1.793l1.414-1.414L17.414 12l1.793-1.793l-1.414-1.414Z"/>`
	passPendingFillPath           = `<path fill="currentColor" d="M2 4a1 1 0 0 0-1 1v14a1 1 0 0 0 1 1h20a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1H2Zm7 6a1 1 0 1 0-2 0a1 1 0 0 0 2 0Zm2 0a3 3 0 1 1-6 0a3 3 0 0 1 6 0Zm-5.473 7.025l-1.414-1.414A5.486 5.486 0 0 1 8.003 14c1.518 0 2.894.617 3.888 1.61l-1.414 1.415A3.486 3.486 0 0 0 8.002 16c-.967 0-1.84.39-2.475 1.025ZM13 15V9h2v6h-2Zm4 0V9h2v6h-2Z"/>`
	passPendingLinePath           = `<path fill="currentColor" d="M3 18h18V6H3v12ZM1 5a1 1 0 0 1 1-1h20a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V5Zm8 5a1 1 0 1 0-2 0a1 1 0 0 0 2 0Zm2 0a3 3 0 1 1-6 0a3 3 0 0 1 6 0Zm-2.998 6c-.967 0-1.84.39-2.475 1.025l-1.414-1.414A5.486 5.486 0 0 1 8.002 14a5.49 5.49 0 0 1 3.889 1.61l-1.414 1.415A3.486 3.486 0 0 0 8.002 16ZM13 9v6h2V9h-2Zm4 0v6h2V9h-2Z"/>`
	passValidFillPath             = `<path fill="currentColor" d="M2 4a1 1 0 0 0-1 1v14a1 1 0 0 0 1 1h20a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1H2Zm7 6a1 1 0 1 0-2 0a1 1 0 0 0 2 0Zm2 0a3 3 0 1 1-6 0a3 3 0 0 1 6 0Zm-5.473 7.025l-1.414-1.414A5.486 5.486 0 0 1 8.003 14c1.518 0 2.894.617 3.888 1.61l-1.414 1.415A3.486 3.486 0 0 0 8.002 16c-.967 0-1.84.39-2.475 1.025Zm14.68-6.318l-4 4l-.707.707l-.707-.707l-2.5-2.5l1.414-1.414l1.793 1.793l3.293-3.293l1.414 1.414Z"/>`
	passValidLinePath             = `<path fill="currentColor" d="M3 18h18V6H3v12ZM1 5a1 1 0 0 1 1-1h20a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V5Zm8 5a1 1 0 1 0-2 0a1 1 0 0 0 2 0Zm2 0a3 3 0 1 1-6 0a3 3 0 0 1 6 0Zm-2.998 6c-.967 0-1.84.39-2.475 1.025l-1.414-1.414A5.486 5.486 0 0 1 8.002 14a5.49 5.49 0 0 1 3.889 1.61l-1.414 1.415A3.486 3.486 0 0 0 8.002 16Zm8.205-1.293l4-4l-1.414-1.414l-3.293 3.293l-1.793-1.793l-1.414 1.414l2.5 2.5l.707.707l.707-.707Z"/>`
	passportFillPath              = `<path fill="currentColor" d="M20 2a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h16Zm-4 14H8v2h8v-2ZM12 6a4 4 0 1 0 0 8a4 4 0 0 0 0-8Zm0 2a2 2 0 1 1 0 4a2 2 0 0 1 0-4Z"/>`
	passportLinePath              = `<path fill="currentColor" d="M20 2a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h16Zm-1 2H5v16h14V4Zm-3 12v2H8v-2h8ZM12 6a4 4 0 1 1 0 8a4 4 0 0 1 0-8Zm0 2a2 2 0 1 0 0 4a2 2 0 0 0 0-4Z"/>`
	patreonFillPath               = `<path fill="currentColor" d="M15.001 17a7.5 7.5 0 1 1 0-15a7.5 7.5 0 0 1 0 15Zm-13-15h4v20h-4V2Z"/>`
	patreonLinePath               = `<path fill="currentColor" d="M15.001 17a7.5 7.5 0 1 1 0-15a7.5 7.5 0 0 1 0 15Zm0-2a5.5 5.5 0 1 0 0-11a5.5 5.5 0 0 0 0 11Zm-13-13h5v20h-5V2Zm2 2v16h1V4h-1Z"/>`
	pauseCircleFillPath           = `<path fill="currentColor" d="M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10ZM9 9v6h2V9H9Zm4 0v6h2V9h-2Z"/>`
	pauseCircleLinePath           = `<path fill="currentColor" d="M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10Zm0-2a8 8 0 1 0 0-16a8 8 0 0 0 0 16ZM9 9h2v6H9V9Zm4 0h2v6h-2V9Z"/>`
	pauseFillPath                 = `<path fill="currentColor" d="M6 5h2v14H6V5Zm10 0h2v14h-2V5Z"/>`
	pauseLinePath                 = `<path fill="currentColor" d="M6 5h2v14H6V5Zm10 0h2v14h-2V5Z"/>`
	pauseMiniFillPath             = `<path fill="currentColor" d="M15 7a1 1 0 1 1 2 0v10a1 1 0 1 1-2 0V7ZM7 7a1 1 0 0 1 2 0v10a1 1 0 1 1-2 0V7Z"/>`
	pauseMiniLinePath             = `<path fill="currentColor" d="M15 7a1 1 0 1 1 2 0v10a1 1 0 1 1-2 0V7ZM7 7a1 1 0 0 1 2 0v10a1 1 0 1 1-2 0V7Z"/>`
	paypalFillPath                = `<path fill="currentColor" d="M20.067 8.478c.492.88.557 2.014.3 3.327c-.74 3.806-3.275 5.12-6.513 5.12h-.5a.805.805 0 0 0-.794.68l-.041.22l-.63 3.993l-.032.17a.804.804 0 0 1-.794.679H7.72a.483.483 0 0 1-.477-.558L7.418 21h1.519l.949-6.02h1.386c4.678 0 7.749-2.203 8.795-6.502Zm-2.96-5.09c.762.868.984 1.81.753 3.285c-.02.123-.04.24-.063.36c-.735 3.773-3.088 5.446-6.955 5.446H8.957c-.63 0-1.173.414-1.353 1.002l-.015-.002l-.93 5.894H3.123a.051.051 0 0 1-.051-.06L5.67 2.803A.95.95 0 0 1 6.608 2h5.975c2.183 0 3.717.469 4.524 1.388Z"/>`
	paypalLinePath                = `<path fill="currentColor" d="M8.496 20.667h1.551l.538-3.376a2.805 2.805 0 0 1 2.77-2.366h.5c2.677 0 4.06-.983 4.55-3.503c.208-1.066.117-1.73-.171-2.102c-1.207 3.054-3.79 4.16-6.962 4.16h-.884c-.384 0-.793.209-.852.58l-1.04 6.607Zm-4.944-.294a.551.551 0 0 1-.544-.637l2.674-16.96A.92.92 0 0 1 6.59 2h6.424c2.213 0 3.942.467 4.9 1.558c.869.99 1.122 2.084.87 3.692c.36.191.668.425.916.706c.819.933.979 2.26.669 3.85c-.741 3.805-3.276 5.12-6.514 5.12h-.5a.805.805 0 0 0-.795.679l-.702 4.383a.804.804 0 0 1-.794.679H6.72a.483.483 0 0 1-.477-.558l.274-1.736H3.552Zm6.836-8.894h.885c3.189 0 4.894-1.212 5.482-4.229c.02-.101.037-.203.054-.309c.166-1.06.05-1.553-.399-2.063c-.465-.53-1.603-.878-3.396-.878h-5.5L5.247 18.373h1.561l.73-4.628l.008.001a2.915 2.915 0 0 1 2.842-2.267Z"/>`
	penNibFillPath                = `<path fill="currentColor" d="m4.929 21.482l5.846-5.846a1.999 1.999 0 0 0 1.932-3.346a2 2 0 0 0-3.346 1.932l-5.846 5.846l-1.06-1.06c2.828-3.3 3.888-6.954 5.302-13.082l6.364-.707l5.657 5.657l-.707 6.363c-6.128 1.415-9.782 2.475-13.081 5.304l-1.061-1.06ZM16.596 2.037l6.347 6.346a.5.5 0 0 1-.277.848l-1.474.23l-5.656-5.657l.212-1.485a.5.5 0 0 1 .848-.282Z"/>`
	penNibLinePath                = `<path fill="currentColor" d="m16.596 1.037l6.347 6.346a.5.5 0 0 1-.277.848l-1.474.23l-5.656-5.657l.212-1.485a.5.5 0 0 1 .848-.282ZM4.595 20.148c3.722-3.331 7.995-4.328 12.643-5.52l.446-4.018l-4.297-4.297l-4.018.446c-1.192 4.648-2.189 8.92-5.52 12.643l-1.395-1.395c2.829-3.3 3.89-6.953 5.303-13.081l6.364-.707l5.657 5.657l-.707 6.363c-6.128 1.415-9.782 2.475-13.081 5.304l-1.395-1.395Zm5.284-6.03a2 2 0 1 1 2.828-2.828a2 2 0 0 1-2.828 2.828Z"/>`
	pencilFillPath                = `<path fill="currentColor" d="m12.9 6.854l4.242 4.243l-9.9 9.9H3v-4.243l9.9-9.9Zm1.414-1.414l2.121-2.121a1 1 0 0 1 1.414 0l2.829 2.828a1 1 0 0 1 0 1.414l-2.122 2.122l-4.242-4.243Z"/>`
	pencilLinePath                = `<path fill="currentColor" d="m15.728 9.576l-1.414-1.414L5 17.476v1.414h1.414l9.314-9.314Zm1.414-1.414l1.414-1.414l-1.414-1.414l-1.414 1.414l1.414 1.414Zm-9.9 12.728H3v-4.243L16.435 3.212a1 1 0 0 1 1.414 0l2.829 2.829a1 1 0 0 1 0 1.414L7.243 20.89Z"/>`
	pencilRulerFillPath           = `<path fill="currentColor" d="M5 18v2h4v-2H5ZM3 7l4-5l4 5v15H3V7Zm18 1h-2v2h2v2h-3v2h3v2h-2v2h2v3a1 1 0 0 1-1 1h-6a1 1 0 0 1-1-1V5a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v3Z"/>`
	pencilRulerLinePath           = `<path fill="currentColor" d="M5 8v12h4V8H5ZM3 7l4-5l4 5v15H3V7Zm16 9v-2h-3v-2h3v-2h-2V8h2V6h-4v14h4v-2h-2v-2h2ZM14 4h6a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1h-6a1 1 0 0 1-1-1V5a1 1 0 0 1 1-1Z"/>`
	pencilRulerTwoFillPath        = `<path fill="currentColor" d="m5.636 12.707l1.829 1.829l1.414-1.415l-1.829-1.828l1.415-1.414l1.828 1.828l1.414-1.414L9.88 8.465l1.414-1.415l1.828 1.829l1.415-1.414l-1.829-1.829l2.829-2.828a1 1 0 0 1 1.414 0l4.242 4.242a1 1 0 0 1 0 1.415L8.465 21.192a1 1 0 0 1-1.415 0L2.808 16.95a1 1 0 0 1 0-1.414l2.828-2.829Zm8.485 5.656l4.243-4.242L21 16.757V21h-4.242l-2.637-2.637ZM5.636 9.878L2.808 7.05a1 1 0 0 1 0-1.415l2.828-2.828a1 1 0 0 1 1.414 0l2.83 2.828l-4.244 4.243Z"/>`
	pencilRulerTwoLinePath        = `<path fill="currentColor" d="m7.05 14.121l-2.12 2.122l2.828 2.828L19.071 7.757L16.243 4.93L14.12 7.05l1.415 1.415l-1.415 1.414l-1.414-1.414l-1.414 1.414l1.414 1.414l-1.414 1.414l-1.414-1.414l-1.414 1.414l1.414 1.414l-1.414 1.415L7.05 14.12Zm9.9-11.313l4.242 4.242a1 1 0 0 1 0 1.415L8.465 21.192a1 1 0 0 1-1.415 0L2.808 16.95a1 1 0 0 1 0-1.414L15.536 2.808a1 1 0 0 1 1.414 0Zm-2.83 15.555l1.415-1.414l2.242 2.243h1.414v-1.414l-2.242-2.243l1.414-1.414L21 16.757V21h-4.242l-2.637-2.637ZM5.636 9.878L2.808 7.05a1 1 0 0 1 0-1.415l2.828-2.828a1 1 0 0 1 1.414 0l2.83 2.828L8.464 7.05l-2.12-2.122l-1.415 1.415l2.121 2.12l-1.414 1.415Z"/>`
	pentagonFillPath              = `<path fill="currentColor" d="m12 .7l10.747 7.808l-4.105 12.634H5.358L1.253 8.508L12 .7Z"/>`
	pentagonLinePath              = `<path fill="currentColor" d="m12 3.03l8.53 6.198l-3.258 10.029H6.728L3.469 9.228L12 3.031Zm10.747 5.478L12 .7L1.253 8.508l4.105 12.634h13.284l4.105-12.634Z"/>`
	percentFillPath               = `<path fill="currentColor" d="M17.505 21.003a3.5 3.5 0 1 1 0-7a3.5 3.5 0 0 1 0 7Zm-11-11a3.5 3.5 0 1 1 0-7a3.5 3.5 0 0 1 0 7Zm12.571-6.485l1.414 1.414L4.934 20.488L3.52 19.074L19.076 3.518Z"/>`
	percentLinePath               = `<path fill="currentColor" d="M17.505 21.003a3.5 3.5 0 1 1 0-7a3.5 3.5 0 0 1 0 7Zm0-2a1.5 1.5 0 1 0 0-3a1.5 1.5 0 0 0 0 3Zm-11-9a3.5 3.5 0 1 1 0-7a3.5 3.5 0 0 1 0 7Zm0-2a1.5 1.5 0 1 0 0-3a1.5 1.5 0 0 0 0 3Zm12.571-4.485l1.414 1.414L4.934 20.488L3.52 19.074L19.076 3.518Z"/>`
	phoneCameraFillPath           = `<path fill="currentColor" d="M14.803 4A6 6 0 0 0 23 12.197V19a.996.996 0 0 1-1.003 1.001H2.002A1 1 0 0 1 1 19V5c0-.552.44-1 1.002-1h12.8ZM20 11a4 4 0 1 1 0-8a4 4 0 0 1 0 8Zm0-2a2 2 0 1 0 0-4a2 2 0 0 0 0 4Zm-1 6v3h2v-3h-2Z"/>`
	phoneCameraLinePath           = `<path fill="currentColor" d="M14.803 4a5.958 5.958 0 0 0-.72 2H3v12h18v-5.083a5.958 5.958 0 0 0 2-.72V19a.996.996 0 0 1-1.003 1.001H2.002A1 1 0 0 1 1 19V5c0-.552.44-1 1.002-1h12.8ZM20 9a2 2 0 1 0 0-4a2 2 0 0 0 0 4Zm0 2a4 4 0 1 1 0-8a4 4 0 0 1 0 8Zm-2 2h2v3h-2v-3Z"/>`
	phoneFillPath                 = `<path fill="currentColor" d="M21 16.42v3.536a1 1 0 0 1-.93.998c-.437.03-.794.046-1.07.046c-8.837 0-16-7.163-16-16c0-.276.015-.633.046-1.07A1 1 0 0 1 4.044 3H7.58a.5.5 0 0 1 .498.45c.023.23.044.413.064.552A13.901 13.901 0 0 0 9.35 8.003c.095.2.033.439-.147.567l-2.158 1.542a13.047 13.047 0 0 0 6.844 6.844l1.54-2.154a.462.462 0 0 1 .573-.149a13.897 13.897 0 0 0 4 1.205c.139.02.322.041.55.064a.5.5 0 0 1 .449.498Z"/>`
	phoneFindFillPath             = `<path fill="currentColor" d="M18 2a1 1 0 0 1 1 1v8.529A6 6 0 0 0 9 16c0 3.238 2.76 6 6 6H6a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h12Zm-3 10a4 4 0 0 1 3.446 6.032l2.21 2.21l-1.413 1.415l-2.211-2.21A4 4 0 1 1 15 12Zm0 2a2 2 0 1 0 0 4a2 2 0 0 0 0-4Z"/>`
	phoneFindLinePath             = `<path fill="currentColor" d="M18 2a1 1 0 0 1 1 1v8h-2V4H7v16h4v2H6a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h12Zm-3 10a4 4 0 0 1 3.446 6.032l2.21 2.21l-1.413 1.415l-2.212-2.21A4 4 0 1 1 15 12Zm0 2a2 2 0 1 0 0 4a2 2 0 0 0 0-4Z"/>`
	phoneLinePath                 = `<path fill="currentColor" d="M9.366 10.682a10.556 10.556 0 0 0 3.952 3.952l.884-1.238a1 1 0 0 1 1.294-.296a11.421 11.421 0 0 0 4.583 1.364a1 1 0 0 1 .921.997v4.462a1 1 0 0 1-.898.995A15.51 15.51 0 0 1 18.5 21C9.94 21 3 14.06 3 5.5c0-.538.027-1.072.082-1.602A1 1 0 0 1 4.077 3h4.462a1 1 0 0 1 .997.921A11.421 11.421 0 0 0 10.9 8.504a1 1 0 0 1-.296 1.294l-1.238.884Zm-2.522-.657l1.9-1.357A13.41 13.41 0 0 1 7.647 5H5.01c-.006.166-.009.333-.009.5C5 12.956 11.044 19 18.5 19c.167 0 .334-.003.5-.01v-2.637a13.41 13.41 0 0 1-3.668-1.097l-1.357 1.9a12.45 12.45 0 0 1-1.588-.75l-.058-.033a12.556 12.556 0 0 1-4.702-4.702l-.033-.058a12.441 12.441 0 0 1-.75-1.588Z"/>`
	phoneLockFillPath             = `<path fill="currentColor" d="M18 2a1 1 0 0 1 1 1l.001 7.1A5.002 5.002 0 0 0 13.1 14H12v8H6a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h12Zm0 10a3 3 0 0 1 3 3v1h1v5a1 1 0 0 1-1 1h-6a1 1 0 0 1-1-1v-5h1v-1a3 3 0 0 1 3-3Zm0 2c-.513 0-1 .45-1 1v1h2v-1a1 1 0 0 0-1-1Z"/>`
	phoneLockLinePath             = `<path fill="currentColor" d="M18 2a1 1 0 0 1 1 1v7h-2V4H7v16h5v2H6a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h12Zm0 10a3 3 0 0 1 3 3v1h1v5a1 1 0 0 1-1 1h-6a1 1 0 0 1-1-1v-5h1v-1a3 3 0 0 1 3-3Zm2 6h-4v2h4v-2Zm-2-4c-.508 0-1 .45-1 1v1h2v-1a1 1 0 0 0-1-1Z"/>`
	pictureInPictureExitFillPath  = `<path fill="currentColor" d="M21 3a1 1 0 0 1 1 1v7h-2V5H4v14h6v2H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h18Zm0 10a1 1 0 0 1 1 1v6a1 1 0 0 1-1 1h-8a1 1 0 0 1-1-1v-6a1 1 0 0 1 1-1h8Zm-9.5-6L9.457 9.043l2.25 2.25l-1.414 1.414l-2.25-2.25L6 12.5V7h5.5Z"/>`
	pictureInPictureExitLinePath  = `<path fill="currentColor" d="M21 3a1 1 0 0 1 1 1v7h-2V5H4v14h6v2H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h18Zm0 10a1 1 0 0 1 1 1v6a1 1 0 0 1-1 1h-8a1 1 0 0 1-1-1v-6a1 1 0 0 1 1-1h8Zm-1 2h-6v4h6v-4Zm-8.5-8L9.457 9.043l2.25 2.25l-1.414 1.414l-2.25-2.25L6 12.5V7h5.5Z"/>`
	pictureInPictureFillPath      = `<path fill="currentColor" d="M21 3a1 1 0 0 1 1 1v7h-2V5H4v14h6v2H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h18Zm0 10a1 1 0 0 1 1 1v6a1 1 0 0 1-1 1h-8a1 1 0 0 1-1-1v-6a1 1 0 0 1 1-1h8Z"/>`
	pictureInPictureLinePath      = `<path fill="currentColor" d="M21 3a1 1 0 0 1 1 1v7h-2V5H4v14h6v2H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h18Zm0 10a1 1 0 0 1 1 1v6a1 1 0 0 1-1 1h-8a1 1 0 0 1-1-1v-6a1 1 0 0 1 1-1h8Zm-1 2h-6v4h6v-4Z"/>`
	pictureInPictureTwoFillPath   = `<path fill="currentColor" d="M21 3a1 1 0 0 1 1 1v7h-2V5H4v14h6v2H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h18Zm0 10a1 1 0 0 1 1 1v6a1 1 0 0 1-1 1h-8a1 1 0 0 1-1-1v-6a1 1 0 0 1 1-1h8ZM6.707 6.293l2.25 2.25L11 6.5V12H5.5l2.043-2.043l-2.25-2.25l1.414-1.414Z"/>`
	pictureInPictureTwoLinePath   = `<path fill="currentColor" d="M21 3a1 1 0 0 1 1 1v7h-2V5H4v14h6v2H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h18Zm0 10a1 1 0 0 1 1 1v6a1 1 0 0 1-1 1h-8a1 1 0 0 1-1-1v-6a1 1 0 0 1 1-1h8Zm-1 2h-6v4h6v-4ZM6.707 6.293l2.25 2.25L11 6.5V12H5.5l2.043-2.043l-2.25-2.25l1.414-1.414Z"/>`
	pieChartBoxFillPath           = `<path fill="currentColor" d="M3 3h18a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Zm13.9 10H11V7.1a5.002 5.002 0 0 0 1 9.9a5.002 5.002 0 0 0 4.9-4Zm0-2A5.006 5.006 0 0 0 13 7.1V11h3.9Z"/>`
	pieChartBoxLinePath           = `<path fill="currentColor" d="M3 3h18a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Zm1 2v14h16V5H4Zm12.9 8A5.002 5.002 0 0 1 7 12a5.002 5.002 0 0 1 4-4.9V13h5.9Zm0-2H13V7.1a5.006 5.006 0 0 1 3.9 3.9Z"/>`
	pieChartFillPath              = `<path fill="currentColor" d="M11 2.05V13h10.95c-.501 5.053-4.765 9-9.95 9c-5.523 0-10-4.477-10-10c0-5.185 3.947-9.449 9-9.95Zm2 0A10.003 10.003 0 0 1 21.95 11H13V2.05Z"/>`
	pieChartLinePath              = `<path fill="currentColor" d="M9 2.458v2.124A8.003 8.003 0 0 0 12 20a8.003 8.003 0 0 0 7.419-5h2.123c-1.274 4.057-5.064 7-9.542 7c-5.523 0-10-4.477-10-10c0-4.478 2.943-8.268 7-9.542ZM12 2c5.523 0 10 4.477 10 10c0 .338-.017.671-.05 1H11V2.05c.329-.033.662-.05 1-.05Zm1 2.062V11h6.938A8.004 8.004 0 0 0 13 4.062Z"/>`
	pieChartTwoFillPath           = `<path fill="currentColor" d="M11 2.05V13h10.95c-.501 5.053-4.765 9-9.95 9c-5.523 0-10-4.477-10-10c0-5.185 3.947-9.449 9-9.95Zm2-1.507c5.553.478 9.979 4.904 10.457 10.457H13V.543Z"/>`
	pieChartTwoLinePath           = `<path fill="currentColor" d="M12 .5C18.351.5 23.5 5.649 23.5 12c0 .337-.015.67-.043 1h-1.506c-.502 5.053-4.766 9-9.951 9c-5.523 0-10-4.477-10-10c0-5.185 3.947-9.449 9-9.95V.542c.33-.029.663-.043 1-.043Zm-1 3.562A8.001 8.001 0 0 0 12 20a8.001 8.001 0 0 0 7.938-7H11V4.062Zm2-1.51V11h8.448A9.503 9.503 0 0 0 13 2.552Z"/>`
	pinDistanceFillPath           = `<path fill="currentColor" d="M11.39 10.39L7.5 14.277L3.61 10.39a5.5 5.5 0 1 1 7.78 0ZM7.5 8.5a2 2 0 1 0 0-4a2 2 0 0 0 0 4Zm12.89 10.89l-3.89 3.888l-3.89-3.889a5.5 5.5 0 1 1 7.78 0ZM16.5 17.5a2 2 0 1 0 0-4a2 2 0 0 0 0 4Z"/>`
	pinDistanceLinePath           = `<path fill="currentColor" d="M9.975 8.975a3.5 3.5 0 1 0-4.95 0L7.5 11.45l2.475-2.475ZM7.5 14.278L3.61 10.39a5.5 5.5 0 1 1 7.78 0L7.5 14.28ZM7.5 8a1.5 1.5 0 1 1 0-3a1.5 1.5 0 0 1 0 3Zm9 12.45l2.475-2.475a3.5 3.5 0 1 0-4.95 0L16.5 20.45Zm3.89-1.06l-3.89 3.888l-3.89-3.889a5.5 5.5 0 1 1 7.78 0ZM16.5 17a1.5 1.5 0 1 1 0-3a1.5 1.5 0 0 1 0 3Z"/>`
	pingPongFillPath              = `<path fill="currentColor" d="M11.5 2a9.5 9.5 0 0 1 9.5 9.5c0 1.53-.361 2.974-1.003 4.254l2.463 2.464a1 1 0 0 1 0 1.414l-2.828 2.828a1 1 0 0 1-1.415 0l-2.463-2.463A9.462 9.462 0 0 1 11.5 21a9.5 9.5 0 0 1 0-19Zm5.303 13.388l-1.414 1.414l3.536 3.535l1.414-1.414l-3.536-3.535Zm1.864-6.105l-9.384 9.384A7.51 7.51 0 0 0 11.5 19a7.48 7.48 0 0 0 2.74-.516l-.972-.974a1 1 0 0 1 0-1.414l2.828-2.828a1 1 0 0 1 1.414 0l.974.972A7.48 7.48 0 0 0 19 11.5c0-.772-.117-1.516-.333-2.217Z"/>`
	pingPongLinePath              = `<path fill="currentColor" d="M11.5 2a9.5 9.5 0 0 1 9.5 9.5c0 1.53-.361 2.974-1.003 4.254l2.463 2.464a1 1 0 0 1 0 1.414l-2.828 2.828a1 1 0 0 1-1.415 0l-2.463-2.463A9.462 9.462 0 0 1 11.5 21a9.5 9.5 0 0 1 0-19Zm5.303 13.388l-1.414 1.414l3.536 3.535l1.414-1.414l-3.536-3.535Zm1.864-6.105l-9.384 9.384A7.51 7.51 0 0 0 11.5 19a7.48 7.48 0 0 0 2.74-.516l-.972-.974a1 1 0 0 1 0-1.414l2.828-2.828a1 1 0 0 1 1.414 0l.974.972A7.48 7.48 0 0 0 19 11.5c0-.772-.117-1.516-.333-2.217ZM11.5 4a7.5 7.5 0 0 0-4.136 13.757L17.757 7.364A7.493 7.493 0 0 0 11.5 4Z"/>`
	pinterestFillPath             = `<path fill="currentColor" d="M13.372 2.094a10.003 10.003 0 0 0-5.369 19.074a7.756 7.756 0 0 1 .162-2.292c.185-.839 1.296-5.463 1.296-5.463a3.738 3.738 0 0 1-.324-1.577c0-1.485.857-2.593 1.923-2.593a1.334 1.334 0 0 1 1.342 1.508c0 .9-.578 2.262-.88 3.54a1.544 1.544 0 0 0 1.575 1.923c1.897 0 3.17-2.431 3.17-5.301c0-2.201-1.457-3.848-4.143-3.848a4.746 4.746 0 0 0-4.93 4.794a2.96 2.96 0 0 0 .648 1.97a.48.48 0 0 1 .162.554c-.046.184-.162.623-.208.785a.354.354 0 0 1-.51.253c-1.384-.554-2.036-2.077-2.036-3.816c0-2.847 2.384-6.255 7.154-6.255c3.796 0 6.319 2.777 6.319 5.747c0 3.909-2.176 6.848-5.393 6.848a2.861 2.861 0 0 1-2.454-1.246s-.579 2.316-.692 2.754a8.025 8.025 0 0 1-1.019 2.131c.923.28 1.882.42 2.846.416a9.988 9.988 0 0 0 9.996-10.002a10.002 10.002 0 0 0-8.635-9.904Z"/>`
	pinterestLinePath             = `<path fill="currentColor" d="M8.492 19.191c.023-.336.071-.671.143-1.001c.063-.295.254-1.13.534-2.34l.007-.03l.387-1.668c.079-.34.14-.604.181-.692a3.46 3.46 0 0 1-.284-1.423c0-1.337.756-2.373 1.736-2.373c.36-.006.704.15.942.426s.348.643.302.996c0 .453-.085.798-.454 2.035a28.2 28.2 0 0 0-.165.571c-.051.188-.095.358-.132.522c-.096.386-.008.797.237 1.105a1.2 1.2 0 0 0 1.006.457c1.492 0 2.6-1.985 2.6-4.548c0-1.97-1.29-3.274-3.432-3.274A3.878 3.878 0 0 0 9.201 9.1a4.13 4.13 0 0 0-1.195 2.961a2.553 2.553 0 0 0 .512 1.644c.181.14.25.383.175.59c-.041.168-.14.552-.177.68a.41.41 0 0 1-.215.296a.388.388 0 0 1-.355.003c-1.16-.479-1.796-1.778-1.796-3.44c0-2.985 2.491-5.584 6.192-5.584c3.135 0 5.481 2.329 5.481 5.14c0 3.532-1.932 6.104-4.69 6.104a2.508 2.508 0 0 1-2.046-.959l-.043.177l-.207.852l-.002.008c-.146.6-.248 1.017-.288 1.173c-.106.355-.24.703-.4 1.04a8 8 0 1 0-1.655-.593ZM12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10Z"/>`
	pinyinInputPath               = `<path fill="currentColor" d="m17.934 3.036l1.732 1L18.531 6H21v2h-2v4h2v2h-2v7h-2v-7h-3.084c-.325 2.862-1.564 5.394-3.37 7.193l-1.562-1.27c1.52-1.438 2.596-3.522 2.917-5.922L10 14v-2l2-.001V8h-2V6h2.467l-1.133-1.964l1.732-1L14.777 6h1.444l1.713-2.964ZM5 13.803l-2 .536v-2.071l2-.536V8H3V6h2V3h2v3h2v2H7v3.197l2-.536v2.07l-2 .536V18.5A2.5 2.5 0 0 1 4.5 21H3v-2h1.5a.5.5 0 0 0 .492-.41L5 18.5v-4.697ZM17 8h-3v4h3V8Z"/>`
	pixelfedFillPath              = `<path fill="currentColor" d="M12.001 2c5.523 0 10 4.477 10 10s-4.477 10-10 10s-10-4.477-10-10s4.477-10 10-10Zm1.031 6.099h-2.624c-.988 0-1.789.776-1.789 1.733v6.748l2.595-2.471h1.818c1.713 0 3.101-1.345 3.101-3.005s-1.388-3.005-3.1-3.005Z"/>`
	pixelfedLinePath              = `<path fill="currentColor" d="M12.001 2c5.523 0 10 4.477 10 10s-4.477 10-10 10s-10-4.477-10-10s4.477-10 10-10Zm0 2a8 8 0 1 0 0 16a8 8 0 0 0 0-16Zm1.031 4.099c1.713 0 3.101 1.345 3.101 3.005s-1.388 3.005-3.1 3.005h-1.819L8.62 16.58V9.832c0-.957.801-1.733 1.79-1.733h2.623Z"/>`
	planeFillPath                 = `<path fill="currentColor" d="M14 8.947L22 14v2l-8-2.526v5.36l3 1.666V22l-4.5-1L8 22v-1.5l3-1.667v-5.36L3 16v-2l8-5.053V3.5a1.5 1.5 0 0 1 3 0v5.447Z"/>`
	planeLinePath                 = `<path fill="currentColor" d="M14 8.947L22 14v2l-8-2.526v5.36l3 1.666V22l-4.5-1L8 22v-1.5l3-1.667v-5.36L3 16v-2l8-5.053V3.5a1.5 1.5 0 0 1 3 0v5.447Z"/>`
	planetFillPath                = `<path fill="currentColor" d="M5.322 5.966A9.169 9.169 0 0 1 7.2 4.386a4.482 4.482 0 0 0-.844-.157c-.572-.043-.823.093-.93.2c-.106.107-.242.357-.2.93c.015.183.047.386.097.607Zm15.404 8.245c.061.123.12.245.177.366c.476 1.02.791 2.018.859 2.914c.067.891-.106 1.82-.78 2.494c-.674.674-1.603.847-2.495.78c-.78-.06-1.637-.306-2.52-.683h-.003a13.258 13.258 0 0 1-.462-.207c-2.033-.962-4.359-2.654-6.542-4.838c-2.181-2.181-3.872-4.505-4.835-6.536c-.073-.155-.143-.31-.209-.463l.001-.002c-.379-.885-.626-1.745-.685-2.527c-.068-.892.105-1.82.78-2.495c.673-.674 1.602-.847 2.494-.78c.896.068 1.892.383 2.913.86c.124.057.248.117.373.18a8.996 8.996 0 0 1 8.572 2.362a8.996 8.996 0 0 1 2.362 8.575Zm-1.113 2.593a9.035 9.035 0 0 1-1.576 1.871c.218.05.419.082.6.095c.573.044.824-.092.93-.2c.108-.106.244-.357.2-.93a4.468 4.468 0 0 0-.154-.836Zm-13.977 1.56a8.993 8.993 0 0 1-2.417-8.341c1.082 1.98 2.705 4.1 4.68 6.075c1.977 1.977 4.098 3.6 6.08 4.683a8.993 8.993 0 0 1-8.343-2.417Z"/>`
	planetLinePath                = `<path fill="currentColor" d="M3.918 8.037A9 9 0 0 0 15.966 20.08c.873.373 1.719.618 2.49.681c.902.074 1.844-.096 2.526-.777c.752-.752.88-1.816.746-2.812c-.123-.91-.48-1.92-1.002-2.962A9 9 0 0 0 9.791 3.273c-1.044-.523-2.055-.881-2.965-1.005c-.997-.135-2.062-.007-2.815.746c-.682.683-.851 1.626-.777 2.528c.064.773.31 1.62.684 2.495Zm1.404-2.071a4.135 4.135 0 0 1-.095-.587c-.048-.587.09-.843.198-.95c.12-.12.423-.275 1.132-.179c.198.027.413.072.643.135a9.04 9.04 0 0 0-1.878 1.58Zm14.29 10.837a4.9 4.9 0 0 1 .134.637c.096.708-.06 1.011-.178 1.13c-.109.108-.364.246-.95.199a4.116 4.116 0 0 1-.581-.094a9.04 9.04 0 0 0 1.575-1.872Zm-3.73 1.023c-1.677-.878-3.625-2.323-5.507-4.205c-1.88-1.88-3.324-3.825-4.203-5.5A7.018 7.018 0 0 1 9.97 5.298a7 7 0 0 1 5.912 12.528Zm-2.277.99a7 7 0 0 1-8.42-8.419c.964 1.516 2.25 3.112 3.776 4.638c1.528 1.528 3.126 2.815 4.644 3.78Z"/>`
	plantFillPath                 = `<path fill="currentColor" d="M20.998 3v2a7 7 0 0 1-7 7h-1v1h5v7a2 2 0 0 1-2 2h-8a2 2 0 0 1-2-2v-7h5v-3a7 7 0 0 1 7-7h3Zm-15.5-1a7.49 7.49 0 0 1 6.124 3.169A7.962 7.962 0 0 0 9.998 10v1h-.5a7.5 7.5 0 0 1-7.5-7.5V2h3.5Z"/>`
	plantLinePath                 = `<path fill="currentColor" d="M5.998 2a6.999 6.999 0 0 1 6.197 3.741A6.491 6.491 0 0 1 17.498 3h3.5v2.5a6.5 6.5 0 0 1-6.5 6.5h-1.5v1h5v7a2 2 0 0 1-2 2h-8a2 2 0 0 1-2-2v-7h5v-2h-2a7 7 0 0 1-7-7V2h4Zm10 13h-8v5h8v-5Zm3-10h-1.5a4.5 4.5 0 0 0-4.5 4.5v.5h1.5a4.5 4.5 0 0 0 4.5-4.5V5Zm-13-1h-2a5 5 0 0 0 5 5h2a5 5 0 0 0-5-5Z"/>`
	playCircleFillPath            = `<path fill="currentColor" d="M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10ZM10.622 8.415a.4.4 0 0 0-.622.332v6.506a.4.4 0 0 0 .622.332l4.879-3.252a.401.401 0 0 0 0-.666l-4.88-3.252Z"/>`
	playCircleLinePath            = `<path fill="currentColor" d="M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10Zm0-2a8 8 0 1 0 0-16a8 8 0 0 0 0 16ZM10.622 8.415l4.879 3.252a.4.4 0 0 1 0 .666l-4.88 3.252a.4.4 0 0 1-.621-.332V8.747a.4.4 0 0 1 .622-.332Z"/>`
	playFillPath                  = `<path fill="currentColor" d="M19.376 12.416L8.777 19.482A.5.5 0 0 1 8 19.066V4.934a.5.5 0 0 1 .777-.416l10.599 7.066a.5.5 0 0 1 0 .832Z"/>`
	playLinePath                  = `<path fill="currentColor" d="M16.394 12L10 7.737v8.526L16.394 12Zm2.982.416L8.777 19.482A.5.5 0 0 1 8 19.066V4.934a.5.5 0 0 1 .777-.416l10.599 7.066a.5.5 0 0 1 0 .832Z"/>`
	playListAddFillPath           = `<path fill="currentColor" d="M2 18h10v2H2v-2Zm0-7h20v2H2v-2Zm0-7h20v2H2V4Zm16 14v-3h2v3h3v2h-3v3h-2v-3h-3v-2h3Z"/>`
	playListAddLinePath           = `<path fill="currentColor" d="M2 18h10v2H2v-2Zm0-7h20v2H2v-2Zm0-7h20v2H2V4Zm16 14v-3h2v3h3v2h-3v3h-2v-3h-3v-2h3Z"/>`
	playListFillPath              = `<path fill="currentColor" d="M2 18h10v2H2v-2Zm0-7h14v2H2v-2Zm0-7h20v2H2V4Zm17 11.17V9h5v2h-3v7a3 3 0 1 1-2-2.83Z"/>`
	playListLinePath              = `<path fill="currentColor" d="M2 18h10v2H2v-2Zm0-7h14v2H2v-2Zm0-7h20v2H2V4Zm17 11.17V9h5v2h-3v7a3 3 0 1 1-2-2.83ZM18 19a1 1 0 1 0 0-2a1 1 0 0 0 0 2Z"/>`
	playListTwoFillPath           = `<path fill="currentColor" d="M22 18v2H2v-2h20ZM2 3.5l8 5l-8 5v-10ZM22 11v2H12v-2h10Zm0-7v2H12V4h10Z"/>`
	playListTwoLinePath           = `<path fill="currentColor" d="M22 18v2H2v-2h20ZM2 3.5l8 5l-8 5v-10ZM22 11v2H12v-2h10ZM4 7.109v2.783L6.226 8.5L4 7.109ZM22 4v2H12V4h10Z"/>`
	playMiniFillPath              = `<path fill="currentColor" d="m7.752 5.439l10.508 6.13a.5.5 0 0 1 0 .863l-10.508 6.13A.5.5 0 0 1 7 18.13V5.87a.5.5 0 0 1 .752-.431Z"/>`
	playMiniLinePath              = `<path fill="currentColor" d="M9 8.482v7.036L15.03 12L9 8.482ZM7.752 5.44l10.508 6.13a.5.5 0 0 1 0 .863l-10.508 6.13A.5.5 0 0 1 7 18.13V5.87a.5.5 0 0 1 .752-.431Z"/>`
	playstationFillPath           = `<path fill="currentColor" d="M22.585 17.011c-.43.543-1.483.93-1.483.93l-7.832 2.817V18.68l5.764-2.057c.654-.234.754-.566.223-.74c-.531-.175-1.492-.125-2.147.111l-3.84 1.354v-2.155l.221-.076s1.11-.393 2.67-.566c1.561-.172 3.472.024 4.972.593c1.69.535 1.88 1.323 1.452 1.866Zm-8.57-3.537V8.162c0-.624-.115-1.198-.7-1.36c-.447-.144-.725.272-.725.895V21l-3.583-1.139V4c1.523.283 3.743.953 4.936 1.355c3.035 1.043 4.064 2.342 4.064 5.267c0 2.851-1.758 3.932-3.992 2.852Zm-11.583 4.99c-1.736-.49-2.025-1.51-1.234-2.097c.731-.542 1.975-.95 1.975-.95l5.138-1.83v2.086l-3.698 1.325c-.653.234-.753.566-.223.74c.532.175 1.493.125 2.147-.11l1.774-.644v1.865l-.354.06c-1.774.29-3.663.169-5.525-.445Z"/>`
	playstationLinePath           = `<path fill="currentColor" d="M22.585 17.011c-.43.543-1.483.93-1.483.93l-7.832 2.817V18.68l5.764-2.057c.654-.234.754-.566.223-.74c-.531-.175-1.492-.125-2.147.111l-3.84 1.354v-2.155l.221-.076s1.11-.393 2.67-.566c1.561-.172 3.472.024 4.972.593c1.69.535 1.88 1.323 1.452 1.866Zm-8.57-3.537V8.162c0-.624-.115-1.198-.7-1.36c-.447-.144-.725.272-.725.895V21l-3.583-1.139V4c1.523.283 3.743.953 4.936 1.355c3.035 1.043 4.064 2.342 4.064 5.267c0 2.851-1.758 3.932-3.992 2.852Zm-11.583 4.99c-1.736-.49-2.025-1.51-1.234-2.097c.731-.542 1.975-.95 1.975-.95l5.138-1.83v2.086l-3.698 1.325c-.653.234-.753.566-.223.74c.532.175 1.493.125 2.147-.11l1.774-.644v1.865l-.354.06c-1.774.29-3.663.169-5.525-.445Z"/>`
	plugFillPath                  = `<path fill="currentColor" d="M13 18v2h6v2h-6a2 2 0 0 1-2-2v-2H8a4 4 0 0 1-4-4v-4h16v4a4 4 0 0 1-4 4h-3Zm3-12h3a1 1 0 0 1 1 1v2H4V7a1 1 0 0 1 1-1h3V2h2v4h4V2h2v4Zm-4 8.5a1 1 0 1 0 0-2a1 1 0 0 0 0 2Z"/>`
	plugLinePath                  = `<path fill="currentColor" d="M13 18v2h6v2h-6a2 2 0 0 1-2-2v-2H8a4 4 0 0 1-4-4V7a1 1 0 0 1 1-1h3V2h2v4h4V2h2v4h3a1 1 0 0 1 1 1v7a4 4 0 0 1-4 4h-3Zm-5-2h8a2 2 0 0 0 2-2v-3H6v3a2 2 0 0 0 2 2Zm10-8H6v1h12V8Zm-6 6.5a1 1 0 1 1 0-2a1 1 0 0 1 0 2Z"/>`
	plugTwoFillPath               = `<path fill="currentColor" d="M13 18v2h6v2h-6a2 2 0 0 1-2-2v-2H8a4 4 0 0 1-4-4v-4h16v4a4 4 0 0 1-4 4h-3Zm4-12h2a1 1 0 0 1 1 1v2H4V7a1 1 0 0 1 1-1h2V2h2v4h6V2h2v4Zm-5 8.5a1 1 0 1 0 0-2a1 1 0 0 0 0 2ZM11 2h2v3h-2V2Z"/>`
	plugTwoLinePath               = `<path fill="currentColor" d="M13 18v2h6v2h-6a2 2 0 0 1-2-2v-2H8a4 4 0 0 1-4-4V7a1 1 0 0 1 1-1h2V2h2v4h6V2h2v4h2a1 1 0 0 1 1 1v7a4 4 0 0 1-4 4h-3Zm-5-2h8a2 2 0 0 0 2-2v-3H6v3a2 2 0 0 0 2 2Zm10-8H6v1h12V8Zm-6 6.5a1 1 0 1 1 0-2a1 1 0 0 1 0 2ZM11 2h2v3h-2V2Z"/>`
	polaroidFillPath              = `<path fill="currentColor" d="M20.659 10a6 6 0 1 0 0 4H21v6a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h16a1 1 0 0 1 1 1v6h-.341ZM5 6v3h2V6H5Zm10 10a4 4 0 1 1 0-8a4 4 0 0 1 0 8Zm0-2a2 2 0 1 0 0-4a2 2 0 0 0 0 4Z"/>`
	polaroidLinePath              = `<path fill="currentColor" d="M21 6h-2V5H5v14h14v-1h2v2a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h16a1 1 0 0 1 1 1v2ZM6 6h2v3H6V6Zm9 10a4 4 0 1 0 0-8a4 4 0 0 0 0 8Zm0 2a6 6 0 1 1 0-12a6 6 0 0 1 0 12Zm0-4a2 2 0 1 1 0-4a2 2 0 0 1 0 4Z"/>`
	polaroidTwoFillPath           = `<path fill="currentColor" d="M3 3.993C3 3.445 3.445 3 3.993 3h16.014c.548 0 .993.445.993.993v16.014a.994.994 0 0 1-.993.993H3.993A.993.993 0 0 1 3 20.007V3.993ZM6 17v2h12v-2H6ZM5 5v2h2V5H5Zm7 7a2 2 0 1 1 0-4a2 2 0 0 1 0 4Zm0 2a4 4 0 1 0 0-8a4 4 0 0 0 0 8Z"/>`
	polaroidTwoLinePath           = `<path fill="currentColor" d="M19 15V5H5v10h14ZM3 3.993C3 3.445 3.445 3 3.993 3h16.014c.548 0 .993.445.993.993v16.014a.994.994 0 0 1-.993.993H3.993A.993.993 0 0 1 3 20.007V3.993ZM12 12a2 2 0 1 0 0-4a2 2 0 0 0 0 4Zm0 2a4 4 0 1 1 0-8a4 4 0 0 1 0 8ZM6 6h2v2H6V6Zm0 11v2h12v-2H6Z"/>`
	policeCarFillPath             = `<path fill="currentColor" d="M22 13.5V21a1 1 0 0 1-1 1h-1a1 1 0 0 1-1-1v-1H5v1a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1v-7.5l-1.243-.31A1 1 0 0 1 0 12.22v-.72a.5.5 0 0 1 .5-.5h1.929L4.48 6.212A2 2 0 0 1 6.319 5H8V3h3v2h2V3h3v2h1.681a2 2 0 0 1 1.838 1.212L21.572 11H23.5a.5.5 0 0 1 .5.5v.72a1 1 0 0 1-.758.97L22 13.5ZM4 15v2a1 1 0 0 0 1 1h3.245a.5.5 0 0 0 .44-.736C7.88 15.754 6.318 15 4 15Zm16 0c-2.317 0-3.879.755-4.686 2.264a.5.5 0 0 0 .441.736H19a1 1 0 0 0 1-1v-2ZM6 7l-1.451 3.629A1 1 0 0 0 5.477 12h13.046a1.001 1.001 0 0 0 .928-1.371L18 7H6Z"/>`
	policeCarLinePath             = `<path fill="currentColor" d="M4 13v5h16v-5H4Zm1.618-2h12.764a1 1 0 0 0 .894-1.447L18 7H6L4.724 9.553A1 1 0 0 0 5.618 11ZM22 13.5V21a1 1 0 0 1-1 1h-1a1 1 0 0 1-1-1v-1H5v1a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1v-7.5l-1.243-.31A1 1 0 0 1 0 12.22v-.72a.5.5 0 0 1 .5-.5H2l2.447-4.894A2 2 0 0 1 6.237 5H8V3h3v2h2V3h3v2h1.764a2 2 0 0 1 1.789 1.106L22 11h1.5a.5.5 0 0 1 .5.5v.72a1 1 0 0 1-.758.97L22 13.5ZM5 14c2.317 0 3.879.755 4.686 2.264a.5.5 0 0 1-.441.736H6a1 1 0 0 1-1-1v-2Zm14 0v2a1 1 0 0 1-1 1h-3.245a.5.5 0 0 1-.44-.736C15.12 14.754 16.682 14 19 14Z"/>`
	presentationFillPath          = `<path fill="currentColor" d="M8 4a2 2 0 1 1-4 0a2 2 0 0 1 4 0ZM5 16v6H3V10a3 3 0 0 1 5.106-2.137l2.374 2.243l2.313-2.313l1.414 1.414l-3.687 3.687L9 11.46V22H7v-6H5Zm5-11h9v9h-9v2h4.365l2.824 6h2.21l-2.823-6H20a1 1 0 0 0 1-1V4a1 1 0 0 0-1-1H10v2Z"/>`
	presentationLinePath          = `<path fill="currentColor" d="M8 4a2 2 0 1 1-4 0a2 2 0 0 1 4 0ZM5 16v6H3V10a3 3 0 0 1 5.106-2.137l2.374 2.243l2.313-2.313l1.414 1.414l-3.687 3.687L9 11.46V22H7v-6H5Zm1-7a1 1 0 0 0-1 1v4h2v-4a1 1 0 0 0-1-1Zm13-4h-9V3h10a1 1 0 0 1 1 1v11a1 1 0 0 1-1 1h-3.424l2.823 6h-2.21l-2.824-6H10v-2h9V5Z"/>`
	priceTagFillPath              = `<path fill="currentColor" d="m3.005 7l8.445-5.63a1 1 0 0 1 1.11 0L21.005 7v14a1 1 0 0 1-1 1h-16a1 1 0 0 1-1-1V7Zm9 4a2 2 0 1 0 0-4a2 2 0 0 0 0 4Z"/>`
	priceTagLinePath              = `<path fill="currentColor" d="m3.005 7l8.445-5.63a1 1 0 0 1 1.11 0L21.005 7v14a1 1 0 0 1-1 1h-16a1 1 0 0 1-1-1V7Zm2 1.07V20h14V8.07l-7-4.666l-7 4.666Zm7 2.93a2 2 0 1 1 0-4a2 2 0 0 1 0 4Z"/>`
	priceTagThreeFillPath         = `<path fill="currentColor" d="m10.904 2.1l9.9 1.414l1.414 9.9l-9.193 9.192a1 1 0 0 1-1.414 0l-9.9-9.9a1 1 0 0 1 0-1.413L10.905 2.1Zm2.829 8.485a2 2 0 1 0 2.828-2.828a2 2 0 0 0-2.828 2.828Z"/>`
	priceTagThreeLinePath         = `<path fill="currentColor" d="m10.904 2.1l9.9 1.414l1.414 9.9l-9.193 9.192a1 1 0 0 1-1.414 0l-9.9-9.9a1 1 0 0 1 0-1.413L10.905 2.1Zm.707 2.121L3.833 12l8.485 8.485l7.779-7.778l-1.061-7.425l-7.425-1.06Zm2.122 6.364a2 2 0 1 1 2.828-2.828a2 2 0 0 1-2.828 2.828Z"/>`
	priceTagTwoFillPath           = `<path fill="currentColor" d="m3.005 7l8.445-5.63a1 1 0 0 1 1.11 0L21.005 7v14a1 1 0 0 1-1 1h-16a1 1 0 0 1-1-1V7Zm9 4a2 2 0 1 0 0-4a2 2 0 0 0 0 4Zm-4 5v2h8v-2h-8Zm0-3v2h8v-2h-8Z"/>`
	priceTagTwoLinePath           = `<path fill="currentColor" d="m3.005 7l8.445-5.63a1 1 0 0 1 1.11 0L21.005 7v14a1 1 0 0 1-1 1h-16a1 1 0 0 1-1-1V7Zm2 1.07V20h14V8.07l-7-4.666l-7 4.666Zm3 7.93h8v2h-8v-2Zm0-3h8v2h-8v-2Zm4-2a2 2 0 1 1 0-4a2 2 0 0 1 0 4Z"/>`
	printerCloudFillPath          = `<path fill="currentColor" d="M7 2h10a1 1 0 0 1 1 1v3H6V3a1 1 0 0 1 1-1Zm15 7a1 1 0 0 0-1-1H3a1 1 0 0 0-1 1v10a1 1 0 0 0 1 1h2v-5h7.194c.243-.891.715-1.688 1.417-2.39C14.685 11.538 15.98 11 17.5 11c1.519 0 2.815.537 3.89 1.61c.227.229.43.466.61.714V9ZM8 10v2H5v-2h3Zm13 6.5a3.5 3.5 0 1 0-7 0l.003.102a2.751 2.751 0 0 0 .58 5.393l.167.005h5.5l.168-.005a2.75 2.75 0 0 0 .58-5.392L21 16.5ZM7 17h3.562A4.617 4.617 0 0 0 10 19.25c0 1.032.29 1.949.871 2.75H7v-5Z"/>`
	printerCloudLinePath          = `<path fill="currentColor" d="M17 2a1 1 0 0 1 1 1v4h3a1 1 0 0 1 1 1v5.324a5.925 5.925 0 0 0-.61-.713A5.595 5.595 0 0 0 20 11.583V9H4v8h2v-1a1 1 0 0 1 1-1h5.194a5.305 5.305 0 0 0-.07.283A4.945 4.945 0 0 0 10.562 17H8.001v3h2.054a4.48 4.48 0 0 0 .817 2H7a1 1 0 0 1-1-1v-2H3a1 1 0 0 1-1-1V8a1 1 0 0 1 1-1h3V3a1 1 0 0 1 1-1h10Zm-1 2H8v3h8V4Zm-8 6v2H5v-2h3Zm13 6.5a3.5 3.5 0 1 0-7 0l.003.102a2.751 2.751 0 0 0 .58 5.393l.167.005h5.5l.168-.005a2.75 2.75 0 0 0 .58-5.392L21 16.5Zm-4.993-.145a1.5 1.5 0 0 1 2.986 0L19 16.5v1.62c.696.199 1.177.334 1.444.406A.75.75 0 0 1 20.255 20h-5.51a.75.75 0 0 1-.19-1.474c.238-.064.645-.178 1.22-.342L16 18.12V16.5l.007-.145Z"/>`
	printerFillPath               = `<path fill="currentColor" d="M7 17h10v5H7v-5Zm12 3v-5H5v5H3a1 1 0 0 1-1-1V9a1 1 0 0 1 1-1h18a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1h-2ZM5 10v2h3v-2H5Zm2-8h10a1 1 0 0 1 1 1v3H6V3a1 1 0 0 1 1-1Z"/>`
	printerLinePath               = `<path fill="currentColor" d="M17 2a1 1 0 0 1 1 1v4h3a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1h-3v2a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1v-2H3a1 1 0 0 1-1-1V8a1 1 0 0 1 1-1h3V3a1 1 0 0 1 1-1h10Zm-1 15H8v3h8v-3Zm4-8H4v8h2v-1a1 1 0 0 1 1-1h10a1 1 0 0 1 1 1v1h2V9ZM8 10v2H5v-2h3Zm8-6H8v3h8V4Z"/>`
	productHuntFillPath           = `<path fill="currentColor" d="M12.001 22c-5.523 0-10-4.477-10-10s4.477-10 10-10s10 4.477 10 10s-4.477 10-10 10Zm1.334-10H10.5V9h2.834a1.5 1.5 0 0 1 0 3Zm0-5H8.5v10h2v-3h2.834a3.5 3.5 0 1 0 0-7Z"/>`
	productHuntLinePath           = `<path fill="currentColor" d="M12.001 22c-5.523 0-10-4.477-10-10s4.477-10 10-10s10 4.477 10 10s-4.477 10-10 10Zm0-2a8 8 0 1 0 0-16a8 8 0 0 0 0 16Zm1.334-8a1.5 1.5 0 0 0 0-3H10.5v3h2.834Zm0-5a3.5 3.5 0 1 1 0 7H10.5v3h-2V7h4.834Z"/>`
	profileFillPath               = `<path fill="currentColor" d="M2 3.993A1 1 0 0 1 2.992 3h18.016c.548 0 .992.445.992.993v16.014a1 1 0 0 1-.992.993H2.992A.993.993 0 0 1 2 20.007V3.993ZM6 15v2h12v-2H6Zm0-8v6h6V7H6Zm8 0v2h4V7h-4Zm0 4v2h4v-2h-4ZM8 9h2v2H8V9Z"/>`
	profileLinePath               = `<path fill="currentColor" d="M21.008 3c.548 0 .992.445.992.993v16.014a1 1 0 0 1-.992.993H2.992A.993.993 0 0 1 2 20.007V3.993A1 1 0 0 1 2.992 3h18.016ZM20 5H4v14h16V5Zm-2 10v2H6v-2h12Zm-6-8v6H6V7h6Zm6 4v2h-4v-2h4Zm-8-2H8v2h2V9Zm8-2v2h-4V7h4Z"/>`
	prohibitedFillPath            = `<path fill="currentColor" d="M19.743 18.329A9.958 9.958 0 0 0 22 12c0-5.523-4.477-10-10-10a9.959 9.959 0 0 0-6.329 2.257L19.743 18.33ZM4.257 5.67A9.959 9.959 0 0 0 2 12c0 5.523 4.477 10 10 10a9.958 9.958 0 0 0 6.329-2.257L4.257 5.67Z"/>`
	prohibitedLinePath            = `<path fill="currentColor" d="M7.094 5.68L18.32 16.906A8 8 0 0 0 7.094 5.68Zm9.812 12.64L5.68 7.094A8 8 0 0 0 16.906 18.32ZM4.929 4.929A9.972 9.972 0 0 1 12 2c5.523 0 10 4.477 10 10a9.972 9.972 0 0 1-2.929 7.071A9.972 9.972 0 0 1 12 22C6.477 22 2 17.523 2 12a9.972 9.972 0 0 1 2.929-7.071Z"/>`
	projectorFillPath             = `<path fill="currentColor" d="M11.111 12a4.502 4.502 0 0 0 8.777 0H22v8a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1v-8h9.111ZM5 16h2v2H5v-2Zm10.5-2.5a2.5 2.5 0 1 1 0-5a2.5 2.5 0 0 1 0 5ZM11.111 10H2V4a1 1 0 0 1 1-1h18a1 1 0 0 1 1 1v6h-2.111a4.502 4.502 0 0 0-8.777 0Z"/>`
	projectorLinePath             = `<path fill="currentColor" d="M3 3h18a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Zm8.126 9H4v7h16v-7h-1.126a4.002 4.002 0 0 1-7.748 0Zm0-2a4.002 4.002 0 0 1 7.748 0H20V5H4v5h7.126ZM15 13a2 2 0 1 0 0-4a2 2 0 0 0 0 4Zm-9 2h2v2H6v-2Z"/>`
	projectorTwoFillPath          = `<path fill="currentColor" d="M22 19v2h-2v-2H4v2H2v-2a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1h9.81a6.481 6.481 0 0 1 4.69-2c1.843 0 3.508.767 4.69 2H22a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1Zm-5.5-5a4.5 4.5 0 1 0 0-9a4.5 4.5 0 0 0 0 9Zm0-2a2.5 2.5 0 1 1 0-5a2.5 2.5 0 0 1 0 5ZM4 13v2h2v-2H4Zm4 0v2h2v-2H8Z"/>`
	projectorTwoLinePath          = `<path fill="currentColor" d="M22 19v2h-2v-2H4v2H2v-2a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1h10.528A5.985 5.985 0 0 1 17 3c1.777 0 3.374.772 4.472 2H22a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1ZM11.341 7H3v10h18v-3.528A6 6 0 0 1 11.341 7ZM17 13a4 4 0 1 0 0-8a4 4 0 0 0 0 8ZM5 13h2v2H5v-2Zm3 0h2v2H8v-2Z"/>`
	psychotherapyFillPath         = `<path fill="currentColor" d="M11 2a8.002 8.002 0 0 1 7.934 6.965l2.25 3.539c.148.233.118.58-.225.728L19 14.07V17a2 2 0 0 1-2 2h-1.999L15 22H6v-3.694c0-1.18-.436-2.297-1.245-3.305A8 8 0 0 1 11 2Zm0 5a1 1 0 0 0-1 1v.999L9 9a1 1 0 0 0 0 2l1-.001V12a1 1 0 1 0 2 0v-1h1a1 1 0 1 0 0-2h-1V8a1 1 0 0 0-1-1Z"/>`
	psychotherapyLinePath         = `<path fill="currentColor" d="M11 2a8.002 8.002 0 0 1 7.934 6.965l2.25 3.539c.148.233.118.58-.225.728L19 14.07V17a2 2 0 0 1-2 2h-1.999L15 22H6v-3.694c0-1.18-.436-2.297-1.245-3.305A8 8 0 0 1 11 2Zm0 2a6 6 0 0 0-4.684 9.75C7.41 15.114 8 16.667 8 18.306V20h5l.002-3H17v-4.248l1.55-.664l-1.543-2.425l-.057-.442A6.001 6.001 0 0 0 11 4Zm0 3a1 1 0 0 1 1 1v1h1a1 1 0 1 1 0 2h-1v1a1 1 0 1 1-2 0v-1.001L9 11a1 1 0 1 1 0-2l1-.001V8a1 1 0 0 1 1-1Z"/>`
	pulseFillPath                 = `<path fill="currentColor" d="m9 7.539l6 14L18.66 13H23v-2h-5.66L15 16.461l-6-14L5.34 11H1v2h5.66L9 7.539Z"/>`
	pulseLinePath                 = `<path fill="currentColor" d="m9 7.539l6 14L18.66 13H23v-2h-5.66L15 16.461l-6-14L5.34 11H1v2h5.66L9 7.539Z"/>`
	pushpinFillPath               = `<path fill="currentColor" d="m22.313 10.175l-1.415 1.414l-.707-.707l-4.242 4.243l-.707 3.535l-1.415 1.415l-4.242-4.243l-4.95 4.95l-1.414-1.414l4.95-4.95l-4.243-4.243l1.414-1.414l3.536-.707L13.12 3.81l-.707-.707l1.414-1.414l8.486 8.485Z"/>`
	pushpinLinePath               = `<path fill="currentColor" d="m13.827 1.69l8.486 8.485l-1.415 1.414l-.707-.707l-4.242 4.243l-.707 3.535l-1.415 1.415l-4.242-4.243l-4.95 4.95l-1.414-1.414l4.95-4.95l-4.243-4.243l1.414-1.414l3.536-.707L13.12 3.81l-.707-.707l1.414-1.414Zm.707 3.535l-4.67 4.671l-2.822.565l6.5 6.5l.564-2.822l4.671-4.67l-4.243-4.244Z"/>`
	pushpinTwoFillPath            = `<path fill="currentColor" d="M18 3v2h-1v6l2 3v2h-6v7h-2v-7H5v-2l2-3V5H6V3h12Z"/>`
	pushpinTwoLinePath            = `<path fill="currentColor" d="M18 3v2h-1v6l2 3v2h-6v7h-2v-7H5v-2l2-3V5H6V3h12ZM9 5v6.606L7.404 14h9.192L15 11.606V5H9Z"/>`
	qqFillPath                    = `<path fill="currentColor" d="M19.914 14.529a32.024 32.024 0 0 0-.676-1.886l-.91-2.246c.002-.026.013-.468.013-.696C18.34 5.86 16.508 2 12 2C7.494 2 5.66 5.86 5.66 9.7c0 .229.011.671.012.697l-.91 2.246a31.99 31.99 0 0 0-.675 1.886c-.86 2.737-.581 3.87-.369 3.895c.455.054 1.771-2.06 1.771-2.06c0 1.224.637 2.822 2.016 3.976c-.515.157-1.147.399-1.554.695c-.365.267-.319.54-.253.65c.289.481 4.955.307 6.303.157c1.347.15 6.014.324 6.302-.158c.066-.11.112-.382-.253-.649c-.407-.296-1.039-.538-1.555-.695c1.379-1.154 2.016-2.752 2.016-3.977c0 0 1.316 2.115 1.771 2.06c.212-.025.49-1.157-.37-3.894Z"/>`
	qqLinePath                    = `<path fill="currentColor" d="m17.536 12.514l-.696-1.796c0-.021.01-.375.01-.558C16.85 7.088 15.447 4 12 4c-3.446 0-4.848 3.088-4.848 6.16c0 .183.009.537.01.557l-.696 1.797c-.19.514-.38 1.05-.517 1.51c-.657 2.189-.444 3.095-.282 3.115c.348.043 1.354-1.648 1.354-1.648c0 .98.487 2.258 1.542 3.18c-.394.127-.878.32-1.188.557c-.28.214-.245.431-.194.52c.22.385 3.79.245 4.82.125c1.03.12 4.599.26 4.82-.126c.05-.088.085-.305-.194-.519c-.311-.237-.795-.43-1.19-.556c1.055-.923 1.542-2.202 1.542-3.181c0 0 1.007 1.691 1.355 1.648c.162-.02.378-.928-.283-3.116a26.91 26.91 0 0 0-.516-1.509Zm1.021 8.227c-.373.652-.833.892-1.438 1.057a4.91 4.91 0 0 1-.794.138c-.44.045-.986.065-1.613.064a33.217 33.217 0 0 1-2.71-.116c-.692.065-1.785.114-2.71.116a16.048 16.048 0 0 1-1.614-.064a4.917 4.917 0 0 1-.793-.138c-.605-.164-1.065-.405-1.44-1.059a2.274 2.274 0 0 1-.239-1.652c-.592-.132-1.001-.482-1.279-.911a2.43 2.43 0 0 1-.309-.71a4.027 4.027 0 0 1-.116-1.106c.013-.785.187-1.762.532-2.912c.14-.466.327-1.008.567-1.655l.554-1.43a15.362 15.362 0 0 1-.002-.203C5.153 5.605 7.589 2 12 2c4.413 0 6.848 3.605 6.848 8.16l-.001.203l.553 1.43l.01.026c.225.606.413 1.153.556 1.626c.348 1.15.522 2.128.535 2.916c.007.407-.03.776-.118 1.108c-.066.246-.161.48-.31.708c-.276.427-.684.776-1.277.91c.13.554.055 1.14-.24 1.654Z"/>`
	qrCodeFillPath                = `<path fill="currentColor" d="M16 17v-1h-3v-3h3v2h2v2h-1v2h-2v2h-2v-3h2v-1h1Zm5 4h-4v-2h2v-2h2v4ZM3 3h8v8H3V3Zm10 0h8v8h-8V3ZM3 13h8v8H3v-8Zm15 0h3v2h-3v-2ZM6 6v2h2V6H6Zm0 10v2h2v-2H6ZM16 6v2h2V6h-2Z"/>`
	qrCodeLinePath                = `<path fill="currentColor" d="M16 17v-1h-3v-3h3v2h2v2h-1v2h-2v2h-2v-3h2v-1h1Zm5 4h-4v-2h2v-2h2v4ZM3 3h8v8H3V3Zm2 2v4h4V5H5Zm8-2h8v8h-8V3Zm2 2v4h4V5h-4ZM3 13h8v8H3v-8Zm2 2v4h4v-4H5Zm13-2h3v2h-3v-2ZM6 6h2v2H6V6Zm0 10h2v2H6v-2ZM16 6h2v2h-2V6Z"/>`
	qrScanFillPath                = `<path fill="currentColor" d="M21 15v5.007a.994.994 0 0 1-.993.993H3.993A.993.993 0 0 1 3 20.007V15h18ZM2 11h20v2H2v-2Zm19-2H3V3.993C3 3.445 3.445 3 3.993 3h16.014c.548 0 .993.445.993.993V9Z"/>`
	qrScanLinePath                = `<path fill="currentColor" d="M21 16v5H3v-5h2v3h14v-3h2ZM3 11h18v2H3v-2Zm18-3h-2V5H5v3H3V3h18v5Z"/>`
	qrScanTwoFillPath             = `<path fill="currentColor" d="M15 3h6v6h-6V3ZM9 3v6H3V3h6Zm6 18v-6h6v6h-6Zm-6 0H3v-6h6v6ZM3 11h18v2H3v-2Z"/>`
	qrScanTwoLinePath             = `<path fill="currentColor" d="M15 3h6v5h-2V5h-4V3ZM9 3v2H5v3H3V3h6Zm6 18v-2h4v-3h2v5h-6Zm-6 0H3v-5h2v3h4v2ZM3 11h18v2H3v-2Z"/>`
	questionAnswerFillPath        = `<path fill="currentColor" d="M8 18h10.237L20 19.385V9h1a1 1 0 0 1 1 1v13.5L17.546 20H9a1 1 0 0 1-1-1v-1Zm-2.545-2L1 19.5V4a1 1 0 0 1 1-1h15a1 1 0 0 1 1 1v12H5.455Z"/>`
	questionAnswerLinePath        = `<path fill="currentColor" d="M5.455 15L1 18.5V3a1 1 0 0 1 1-1h15a1 1 0 0 1 1 1v12H5.455Zm-.692-2H16V4H3v10.385L4.763 13ZM8 17h10.237L20 18.385V8h1a1 1 0 0 1 1 1v13.5L17.546 19H9a1 1 0 0 1-1-1v-1Z"/>`
	questionFillPath              = `<path fill="currentColor" d="M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10Zm-1-7v2h2v-2h-2Zm2-1.645A3.502 3.502 0 0 0 12 6.5a3.501 3.501 0 0 0-3.433 2.813l1.962.393A1.5 1.5 0 1 1 12 11.5a1 1 0 0 0-1 1V14h2v-.645Z"/>`
	questionLinePath              = `<path fill="currentColor" d="M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10Zm0-2a8 8 0 1 0 0-16a8 8 0 0 0 0 16Zm-1-5h2v2h-2v-2Zm2-1.645V14h-2v-1.5a1 1 0 0 1 1-1a1.5 1.5 0 1 0-1.471-1.794l-1.962-.393A3.501 3.501 0 1 1 13 13.355Z"/>`
	questionMarkPath              = `<path fill="currentColor" d="M12 19a1.5 1.5 0 1 1 0 3a1.5 1.5 0 0 1 0-3Zm0-17a6 6 0 0 1 6 6c0 2.165-.753 3.29-2.674 4.923C13.399 14.56 13 15.297 13 17h-2c0-2.474.787-3.695 3.031-5.601C15.548 10.11 16 9.434 16 8a4 4 0 0 0-8 0v1H6V8a6 6 0 0 1 6-6Z"/>`
	questionnaireFillPath         = `<path fill="currentColor" d="M6.455 19L2 22.5V4a1 1 0 0 1 1-1h18a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H6.455ZM11 14v2h2v-2h-2ZM8.567 8.813l1.962.393A1.5 1.5 0 1 1 12 11h-1v2h1a3.5 3.5 0 1 0-3.433-4.187Z"/>`
	questionnaireLinePath         = `<path fill="currentColor" d="M5.763 17H20V5H4v13.385L5.763 17Zm.692 2L2 22.5V4a1 1 0 0 1 1-1h18a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H6.455ZM11 14h2v2h-2v-2ZM8.567 8.813A3.501 3.501 0 1 1 12 13h-1v-2h1a1.5 1.5 0 1 0-1.471-1.794l-1.962-.393Z"/>`
	quillPenFillPath              = `<path fill="currentColor" d="M21 1.997c-15 0-17 14-18 20h1.998c.666-3.334 2.333-5.167 5.002-5.5c4-.5 7-4 8-7l-1.5-1l1-1c1-1 2.004-2.5 3.5-5.5Z"/>`
	quillPenLinePath              = `<path fill="currentColor" d="M6.94 14.033a29.79 29.79 0 0 0-.606 1.782c.96-.696 2.101-1.138 3.418-1.303c2.513-.314 4.746-1.974 5.876-4.059L14.172 9l1.413-1.415l1-1.002c.43-.429.915-1.224 1.428-2.367c-5.593.867-9.018 4.291-11.074 9.818ZM17 8.997l1 1c-1 3-4 6-8 6.5c-2.669.333-4.336 2.166-5.002 5.5H3c1-6 3-20 18-20c-1 2.997-1.998 4.996-2.997 5.997L17 8.997Z"/>`
	quoteTextPath                 = `<path fill="currentColor" d="M21 4H3v2h18V4Zm0 7H8v2h13v-2Zm0 7H8v2h13v-2ZM5 11H3v9h2v-9Z"/>`
	radarFillPath                 = `<path fill="currentColor" d="m14.368 4.398l-3.484 6.035l1.732 1l3.485-6.035c4.169 2.772 6.305 7.08 4.56 10.102c-1.86 3.222-7.19 3.355-11.91.63C4.028 13.403 1.48 8.721 3.34 5.5c1.745-3.023 6.543-3.327 11.028-1.102Zm1.516-2.625l1.732 1l-1.5 2.598l-1.732-1l1.5-2.598ZM6.732 20H17v2H5.018a.998.998 0 0 1-1.015-.922a.995.995 0 0 1 .131-.578l2.25-3.897l1.732 1L6.732 20Z"/>`
	radarLinePath                 = `<path fill="currentColor" d="m12.507 3.623l-1.024 1.772c-2.91-.879-5.513-.45-6.41 1.105c-1.178 2.04.79 5.653 4.677 7.897c3.888 2.245 8.001 2.142 9.178.103c.898-1.555-.032-4.024-2.248-6.105l1.023-1.772c3.082 2.71 4.462 6.27 2.957 8.877c-1.86 3.222-7.188 3.355-11.91.63C4.03 13.403 1.48 8.721 3.34 5.5c1.505-2.606 5.28-3.191 9.166-1.877Zm3.377-1.85l1.732 1l-5 8.66l-1.732-1l5-8.66ZM6.732 20H17v2H5.018a.998.998 0 0 1-1.015-.922a.995.995 0 0 1 .131-.578l2.25-3.897l1.732 1L6.732 20Z"/>`
	radioButtonFillPath           = `<path fill="currentColor" d="M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10Zm0-6a4 4 0 1 0 0-8a4 4 0 0 0 0 8Z"/>`
	radioButtonLinePath           = `<path fill="currentColor" d="M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10Zm0-2a8 8 0 1 0 0-16a8 8 0 0 0 0 16Zm0-3a5 5 0 1 1 0-10a5 5 0 0 1 0 10Z"/>`
	radioFillPath                 = `<path fill="currentColor" d="M17 10h3V6H4v4h11V8h2v2ZM6 3V1h2v2h13.008c.548 0 .992.445.992.993v16.014a1 1 0 0 1-.992.993H2.992A.993.993 0 0 1 2 20.007V3.993A1 1 0 0 1 2.992 3H6Zm1 16a3 3 0 1 0 0-6a3 3 0 0 0 0 6Z"/>`
	radioLinePath                 = `<path fill="currentColor" d="M17 10V8h-2v2H5V6h14v4h-2ZM6 3V1h2v2h13.008c.548 0 .992.445.992.993v16.014a1 1 0 0 1-.992.993H2.992A.993.993 0 0 1 2 20.007V3.993A1 1 0 0 1 2.992 3H6ZM4 5v14h16V5H4Zm4 13a3 3 0 1 1 0-6a3 3 0 0 1 0 6Z"/>`
	radioTwoFillPath              = `<path fill="currentColor" d="M6 3V1h2v2h13.008c.548 0 .992.445.992.993v16.014a1 1 0 0 1-.992.993H2.992A.993.993 0 0 1 2 20.007V3.993A1 1 0 0 1 2.992 3H6Zm3 12a3 3 0 1 0 0-6a3 3 0 0 0 0 6Zm5-6v2h4V9h-4Zm0 4v2h4v-2h-4Z"/>`
	radioTwoLinePath              = `<path fill="currentColor" d="M6 3V1h2v2h13.008c.548 0 .992.445.992.993v16.014a1 1 0 0 1-.992.993H2.992A.993.993 0 0 1 2 20.007V3.993A1 1 0 0 1 2.992 3H6ZM4 5v14h16V5H4Zm5 10a3 3 0 1 1 0-6a3 3 0 0 1 0 6Zm5-6h4v2h-4V9Zm0 4h4v2h-4v-2Z"/>`
	rainbowFillPath               = `<path fill="currentColor" d="M12 4c6.075 0 11 4.925 11 11v5h-3v-5a8 8 0 0 0-7.75-7.996L12 7a8 8 0 0 0-7.996 7.75L4 15v5H1v-5C1 8.925 5.925 4 12 4Zm0 4a7 7 0 0 1 7 7v5h-3v-5a4 4 0 0 0-3.8-3.995L12 11a4 4 0 0 0-3.995 3.8L8 15v5H5v-5a7 7 0 0 1 7-7Zm0 4a3 3 0 0 1 3 3v5H9v-5a3 3 0 0 1 3-3Z"/>`
	rainbowLinePath               = `<path fill="currentColor" d="M12 4c6.075 0 11 4.925 11 11v5h-2v-5a9 9 0 0 0-8.735-8.996L12 6a9 9 0 0 0-8.996 8.735L3 15v5H1v-5C1 8.925 5.925 4 12 4Zm0 4a7 7 0 0 1 7 7v5h-2v-5a5 5 0 0 0-4.783-4.995L12 10a5 5 0 0 0-4.995 4.783L7 15v5H5v-5a7 7 0 0 1 7-7Zm0 4a3 3 0 0 1 3 3v5h-2v-5a1 1 0 0 0-.883-.993L12 14a1 1 0 0 0-.993.883L11 15v5H9v-5a3 3 0 0 1 3-3Z"/>`
	rainyFillPath                 = `<path fill="currentColor" d="m15.86 18l-3.153-3.153a1 1 0 0 0-1.414 0L8.18 17.96a8.001 8.001 0 1 1 7.8-11.873A6 6 0 1 1 17 18h-1.139Zm-5.628.732L12 16.965l1.768 1.767a2.5 2.5 0 1 1-3.536 0Z"/>`
	rainyLinePath                 = `<path fill="currentColor" d="M16 18v-2h1a4 4 0 1 0-2.157-7.37A6 6 0 1 0 8 15.917v2.022A8.001 8.001 0 0 1 9 2a7.998 7.998 0 0 1 6.98 4.087A6 6 0 1 1 17 18h-1Zm-5.768.732L12 16.965l1.768 1.767a2.5 2.5 0 1 1-3.536 0Z"/>`
	reactjsFillPath               = `<path fill="currentColor" d="M14.448 16.24a21.883 21.883 0 0 1-1.747 2.175c1.673 1.623 3.228 2.383 4.091 1.884c.863-.498.982-2.225.413-4.484c-.853.19-1.779.334-2.757.424Zm-1.31.087a27.48 27.48 0 0 1-2.275 0c.376.492.758.948 1.137 1.363c.38-.415.761-.871 1.138-1.364Zm5.04-7.894c2.665.764 4.406 2.034 4.406 3.567c0 1.533-1.74 2.803-4.405 3.567c.67 2.69.44 4.832-.887 5.598c-1.327.767-3.297-.105-5.292-2.031c-1.994 1.925-3.964 2.798-5.291 2.031c-1.328-.766-1.557-2.908-.887-5.598c-2.665-.764-4.405-2.034-4.405-3.567c0-1.533 1.74-2.803 4.405-3.567c-.67-2.69-.44-4.832.887-5.599c1.327-.766 3.297.106 5.291 2.032c1.995-1.926 3.965-2.798 5.292-2.032c1.327.767 1.557 2.909.887 5.599Zm-.973-.248c.57-2.26.45-3.986-.413-4.485c-.863-.498-2.418.262-4.09 1.885a21.932 21.932 0 0 1 1.746 2.175c.978.09 1.904.234 2.757.425Zm-10.41 7.63c-.569 2.26-.45 3.986.414 4.484c.863.498 2.418-.261 4.09-1.884a21.866 21.866 0 0 1-1.746-2.176a21.883 21.883 0 0 1-2.757-.425Zm4.068-8.142a27.507 27.507 0 0 1 2.275 0A20.537 20.537 0 0 0 12 6.31c-.38.416-.76.872-1.137 1.364Zm-1.31.087a21.865 21.865 0 0 1 1.746-2.175C9.627 3.962 8.072 3.202 7.21 3.7c-.863.499-.983 2.226-.413 4.485c.853-.19 1.779-.334 2.757-.425Zm4.34 7.52A25.373 25.373 0 0 0 15.788 12a25.363 25.363 0 0 0-1.893-3.28a25.37 25.37 0 0 0-3.787 0A25.368 25.368 0 0 0 8.213 12a25.39 25.39 0 0 0 1.894 3.28a25.398 25.398 0 0 0 3.787 0Zm1.285-.132c.615-.08 1.2-.182 1.75-.303a20.512 20.512 0 0 0-.612-1.667a27.546 27.546 0 0 1-1.137 1.97ZM8.822 8.851c-.615.08-1.2.183-1.75.304c.17.536.375 1.094.613 1.667a27.518 27.518 0 0 1 1.137-1.97Zm-1.75 5.994c.55.121 1.135.223 1.75.303a27.528 27.528 0 0 1-1.137-1.97a20.51 20.51 0 0 0-.613 1.667Zm-.978-.245c.262-.834.6-1.708 1.01-2.6a21.88 21.88 0 0 1-1.01-2.6c-2.241.636-3.677 1.604-3.677 2.6s1.436 1.963 3.677 2.6ZM16.93 9.155a20.479 20.479 0 0 0-1.75-.304a27.541 27.541 0 0 1 1.137 1.97c.238-.572.442-1.13.613-1.666Zm.977.245c-.26.834-.6 1.708-1.01 2.6c.41.892.75 1.766 1.01 2.6c2.242-.637 3.678-1.604 3.678-2.6s-1.436-1.963-3.678-2.6ZM12 13.879a1.88 1.88 0 1 1 0-3.758a1.88 1.88 0 0 1 0 3.758Z"/>`
	reactjsLinePath               = `<path fill="currentColor" d="M12.001 13.5a1.5 1.5 0 1 1 0-3a1.5 1.5 0 0 1 0 3Zm-.528 2.994c.175.211.35.414.528.609c.177-.195.353-.398.528-.609a24.932 24.932 0 0 1-1.056 0Zm-1.995-.125a20.686 20.686 0 0 1-2.285-.367a10.8 10.8 0 0 0-.17 1.015c-.19 1.583.075 2.545.478 2.777c.403.233 1.368-.019 2.645-.974c.263-.197.528-.416.794-.655a20.665 20.665 0 0 1-1.462-1.796Zm7.331-.367a20.69 20.69 0 0 1-2.285.367a20.665 20.665 0 0 1-1.462 1.796c.266.24.531.458.794.655c1.277.955 2.242 1.207 2.645.974c.403-.232.667-1.194.479-2.777a11.374 11.374 0 0 0-.17-1.015Zm1.45-.388c.577 2.639.274 4.74-1.008 5.48c-1.282.74-3.253-.048-5.25-1.867c-1.997 1.819-3.968 2.606-5.25 1.866c-1.282-.74-1.585-2.84-1.009-5.48c-2.574-.82-4.241-2.133-4.241-3.613s1.667-2.793 4.241-3.613c-.576-2.64-.273-4.74 1.009-5.48c1.282-.74 3.253.047 5.25 1.866c1.997-1.819 3.968-2.606 5.25-1.866c1.282.74 1.585 2.84 1.009 5.48c2.573.82 4.24 2.133 4.24 3.613s-1.668 2.793-4.241 3.614Zm-7.32-9.779c-.265-.239-.53-.458-.793-.655c-1.277-.955-2.242-1.207-2.645-.974c-.403.232-.667 1.194-.479 2.777c.04.327.096.666.17 1.016a20.677 20.677 0 0 1 2.286-.368c.475-.653.965-1.254 1.462-1.796Zm3.585 1.796a20.63 20.63 0 0 1 2.285.368c.075-.35.132-.69.17-1.015c.19-1.584-.075-2.546-.478-2.778c-.403-.233-1.368.019-2.645.974c-.263.197-.528.416-.794.655c.497.542.987 1.143 1.462 1.796Zm-1.995-.125c-.175-.21-.351-.414-.528-.609c-.177.195-.353.398-.528.609a24.868 24.868 0 0 1 1.056 0Zm-4.156 7.198a24.907 24.907 0 0 1-.528-.914c-.095.257-.183.51-.263.762c.257.055.521.106.79.152Zm1.932.234a22.915 22.915 0 0 0 3.392 0A22.957 22.957 0 0 0 15.393 12a22.863 22.863 0 0 0-1.696-2.938a22.896 22.896 0 0 0-3.392 0A22.91 22.91 0 0 0 8.609 12a22.926 22.926 0 0 0 1.696 2.938Zm5.852-4.728c.095-.257.183-.51.263-.761a17.974 17.974 0 0 0-.79-.153a25.076 25.076 0 0 1 .527.914ZM6.131 9.837c-.34.11-.662.23-.964.36c-1.465.628-2.166 1.338-2.166 1.803c0 .465.7 1.175 2.166 1.803c.302.13.624.25.964.36c.222-.7.497-1.426.825-2.163a20.678 20.678 0 0 1-.825-2.163Zm1.45-.388c.081.25.169.504.264.76a24.929 24.929 0 0 1 .528-.913c-.27.046-.534.097-.791.153Zm10.29 4.714c.34-.11.662-.23.964-.36C20.3 13.175 21 12.465 21 12c0-.465-.7-1.175-2.166-1.803c-.302-.13-.625-.25-.965-.36c-.22.7-.496 1.426-.824 2.163c.328.737.603 1.463.825 2.163Zm-1.45.389a19.245 19.245 0 0 0-.264-.762a25.108 25.108 0 0 1-.528.914c.27-.046.534-.097.791-.152Z"/>`
	recordCircleFillPath          = `<path fill="currentColor" d="M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10Zm0-7a3 3 0 1 0 0-6a3 3 0 0 0 0 6Z"/>`
	recordCircleLinePath          = `<path fill="currentColor" d="M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10Zm0-2a8 8 0 1 0 0-16a8 8 0 0 0 0 16Zm0-5a3 3 0 1 1 0-6a3 3 0 0 1 0 6Z"/>`
	recordMailFillPath            = `<path fill="currentColor" d="M9.743 15h4.514a5.5 5.5 0 1 1 4.243 2h-13a5.5 5.5 0 1 1 4.243-2ZM5.5 13a1.5 1.5 0 1 0 0-3a1.5 1.5 0 0 0 0 3Zm13 0a1.5 1.5 0 1 0 0-3a1.5 1.5 0 0 0 0 3Z"/>`
	recordMailLinePath            = `<path fill="currentColor" d="M14.257 15a5.5 5.5 0 1 1 4.243 2h-13a5.5 5.5 0 1 1 4.243-2h4.514ZM5.5 15a3.5 3.5 0 1 0 0-7a3.5 3.5 0 0 0 0 7Zm13 0a3.5 3.5 0 1 0 0-7a3.5 3.5 0 0 0 0 7Z"/>`
	rectangleFillPath             = `<path fill="currentColor" d="M3 4h18a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V5a1 1 0 0 1 1-1Z"/>`
	rectangleLinePath             = `<path fill="currentColor" d="M3 4h18a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V5a1 1 0 0 1 1-1Zm1 2v12h16V6H4Z"/>`
	recycleFillPath               = `<path fill="currentColor" d="m19.561 12.098l1.532 2.652A3.5 3.5 0 0 1 18.06 20H16v2l-5-3.5l5-3.5v2h2.062a.5.5 0 0 0 .471-.668l-.038-.082l-1.53-2.652l2.597-1.5ZM7.736 9.384l.531 6.08l-1.731-1l-1.032 1.786a.5.5 0 0 0 .343.742l.09.008H9v3H5.937a3.5 3.5 0 0 1-3.031-5.25l1.032-1.786l-1.733-1l5.531-2.58ZM13.75 2.97a3.5 3.5 0 0 1 1.28 1.28l1.031 1.786l1.733-1l-.532 6.08l-5.53-2.58l1.73-1l-1.03-1.786a.5.5 0 0 0-.814-.074l-.052.074l-1.53 2.652l-2.598-1.5l1.53-2.652a3.5 3.5 0 0 1 4.782-1.28Z"/>`
	recycleLinePath               = `<path fill="currentColor" d="m19.56 12.098l1.532 2.652A3.5 3.5 0 0 1 18.061 20h-2.063v2.5l-5-3.5l5-3.5V18h2.063a1.5 1.5 0 0 0 1.299-2.25l-1.532-2.652l1.733-1ZM7.304 9.133l.53 6.08l-2.165-1.25l-1.03 1.786A1.5 1.5 0 0 0 5.937 18h3.062v2H5.937a3.5 3.5 0 0 1-3.032-5.25l1.031-1.787l-2.165-1.249l5.532-2.58Zm6.446-6.165a3.5 3.5 0 0 1 1.28 1.281l1.032 1.786l2.165-1.25l-.531 6.08l-5.531-2.58l2.165-1.25l-1.031-1.786a1.5 1.5 0 0 0-2.598 0L9.168 7.903l-1.732-1L8.968 4.25a3.5 3.5 0 0 1 4.78-1.281Z"/>`
	redPacketFillPath             = `<path fill="currentColor" d="M21.005 5.94a11.985 11.985 0 0 1-6.806 3.863a2.5 2.5 0 0 0-4.388 0A11.985 11.985 0 0 1 3.005 5.94V3.003a1 1 0 0 1 1-1h16a1 1 0 0 1 1 1V5.94Zm0 2.787v12.276a1 1 0 0 1-1 1h-16a1 1 0 0 1-1-1V8.727a13.944 13.944 0 0 0 6.63 3.076a2.501 2.501 0 0 0 4.739 0a13.944 13.944 0 0 0 6.63-3.076Z"/>`
	redPacketLinePath             = `<path fill="currentColor" d="M14.178 9.766a9.981 9.981 0 0 0 4.827-2.622V4.003h-14v3.141a9.98 9.98 0 0 0 4.827 2.622a2.5 2.5 0 0 1 4.346 0Zm.208 2a2.501 2.501 0 0 1-4.762 0a11.94 11.94 0 0 1-4.62-2.015v10.252h14V9.75a11.94 11.94 0 0 1-4.618 2.016ZM4.005 2.004h16a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1h-16a1 1 0 0 1-1-1v-18a1 1 0 0 1 1-1Z"/>`
	redditFillPath                = `<path fill="currentColor" d="M12.001 22c-5.523 0-10-4.477-10-10s4.477-10 10-10s10 4.477 10 10s-4.477 10-10 10Zm6.67-10a1.46 1.46 0 0 0-2.47-1a7.12 7.12 0 0 0-3.85-1.23l.65-3.12l2.14.45a1 1 0 1 0 .13-.61L12.821 6a.31.31 0 0 0-.37.24l-.74 3.47a7.14 7.14 0 0 0-3.9 1.23a1.46 1.46 0 1 0-1.61 2.39a2.87 2.87 0 0 0 0 .44c0 2.24 2.61 4.06 5.83 4.06s5.83-1.82 5.83-4.06a2.885 2.885 0 0 0 0-.44a1.46 1.46 0 0 0 .81-1.33Zm-10 1a1 1 0 1 1 2 0a1 1 0 0 1-2 0Zm5.81 2.75a3.84 3.84 0 0 1-2.47.77a3.84 3.84 0 0 1-2.47-.77a.27.27 0 0 1 .38-.38a3.27 3.27 0 0 0 2.08.63a3.28 3.28 0 0 0 2.09-.61a.28.28 0 1 1 .39.4v-.04Zm-.18-1.71a1 1 0 1 1 1-1a1 1 0 0 1-1.01 1.04l.01-.04Z"/>`
	redditLinePath                = `<path fill="currentColor" d="m11.053 7.815l.751-3.536a2 2 0 0 1 2.372-1.54l3.196.68a2 2 0 1 1-.415 1.956l-3.197-.68l-.666 3.135c1.785.137 3.558.73 5.164 1.7A3.192 3.192 0 0 1 23 12.203v.021a3.193 3.193 0 0 1-1.207 2.55a2.852 2.852 0 0 1-.008.123c0 3.998-4.45 7.03-9.799 7.03c-5.333 0-9.708-3.024-9.705-6.953a5.316 5.316 0 0 1-.01-.181a3.193 3.193 0 0 1 3.454-5.35a11.446 11.446 0 0 1 5.329-1.628Zm9.285 5.526A1.19 1.19 0 0 0 21 12.266a1.192 1.192 0 0 0-2.016-.806l-.585.56l-.67-.455c-1.615-1.098-3.452-1.725-5.23-1.764h-1.006c-1.875.028-3.652.6-5.237 1.675l-.664.45l-.583-.55a1.192 1.192 0 1 0-1.315 1.952l.633.29l-.053.695a3.95 3.95 0 0 0 .003.584c0 2.71 3.356 5.03 7.708 5.03c4.371 0 7.799-2.336 7.802-5.107a3.304 3.304 0 0 0 0-.507l-.052-.672l.604-.3ZM6.951 13.5a1.5 1.5 0 1 1 3 0a1.5 1.5 0 0 1-3 0Zm7 0a1.5 1.5 0 1 1 3 0a1.5 1.5 0 0 1-3 0Zm-1.985 5.103c-1.397 0-2.766-.37-3.881-1.21a.424.424 0 0 1 .597-.597c.945.693 2.123.99 3.269.99s2.33-.275 3.284-.959a.439.439 0 0 1 .732.206a.469.469 0 0 1-.12.423c-.683.797-2.483 1.147-3.88 1.147Z"/>`
	refreshFillPath               = `<path fill="currentColor" d="M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10Zm4.82-4.924A7 7 0 0 0 9.032 5.658l.975 1.755A5 5 0 0 1 17 12h-3l2.82 5.076Zm-1.852 1.266l-.975-1.755A5 5 0 0 1 7 12h3L7.18 6.924a7 7 0 0 0 7.788 11.418Z"/>`
	refreshLinePath               = `<path fill="currentColor" d="M5.463 4.433A9.961 9.961 0 0 1 12 2c5.523 0 10 4.477 10 10c0 2.136-.67 4.116-1.81 5.74L17 12h3A8 8 0 0 0 6.46 6.228l-.997-1.795Zm13.074 15.134A9.961 9.961 0 0 1 12 22C6.477 22 2 17.523 2 12c0-2.136.67-4.116 1.81-5.74L7 12H4a8 8 0 0 0 13.54 5.772l.997 1.795Z"/>`
	refundFillPath                = `<path fill="currentColor" d="M22.005 7h-20V4a1 1 0 0 1 1-1h18a1 1 0 0 1 1 1v3Zm0 2v11a1 1 0 0 1-1 1h-18a1 1 0 0 1-1-1V9h20Zm-11 5v-2.5l-4.5 4.5h10.5v-2h-6Z"/>`
	refundLinePath                = `<path fill="currentColor" d="M20.005 8V5h-16v3h16Zm0 2h-16v9h16v-9Zm-17-7h18a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1h-18a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Zm8 11h6v2h-10.5l4.5-4.5V14Z"/>`
	refundTwoFillPath             = `<path fill="currentColor" d="M12.005 2c5.523 0 10 4.477 10 10s-4.477 10-10 10a9.96 9.96 0 0 1-6.383-2.302l-.244-.209l.901-1.902a8 8 0 1 0-2.27-5.837l-.004.25h2.5l-2.706 5.716A9.954 9.954 0 0 1 2.005 12c0-5.523 4.477-10 10-10Zm1 4v2h2.5v2h-5.5a.5.5 0 0 0-.09.992l.09.008h4a2.5 2.5 0 0 1 0 5h-1v2h-2v-2h-2.5v-2h5.5a.5.5 0 0 0 .09-.992l-.09-.008h-4a2.5 2.5 0 1 1 0-5h1V6h2Z"/>`
	refundTwoLinePath             = `<path fill="currentColor" d="M5.676 4.257c3.928-3.219 9.733-2.995 13.4.672c3.905 3.905 3.905 10.237 0 14.142c-3.905 3.905-10.237 3.905-14.142 0a9.993 9.993 0 0 1-2.678-9.304l.077-.313l1.934.51a8 8 0 1 0 3.053-4.45l-.22.166l1.017 1.017l-4.596 1.06l1.06-4.596l1.096 1.096ZM13.005 6v2h2.5v2h-5.5a.5.5 0 0 0-.09.992l.09.008h4a2.5 2.5 0 0 1 0 5h-1v2h-2v-2h-2.5v-2h5.5a.5.5 0 0 0 .09-.992l-.09-.008h-4a2.5 2.5 0 1 1 0-5h1V6h2Z"/>`
	registeredFillPath            = `<path fill="currentColor" d="M12 2c5.523 0 10 4.477 10 10s-4.477 10-10 10S2 17.523 2 12S6.477 2 12 2Zm.5 5H8v10h2v-3h2.217l2.18 3h2.472l-2.55-3.51a3.5 3.5 0 0 0-1.627-6.486L12.5 7Zm0 2a1.5 1.5 0 0 1 1.493 1.355L14 10.5l-.007.145a1.5 1.5 0 0 1-1.348 1.348L12.5 12H10V9h2.5Z"/>`
	registeredLinePath            = `<path fill="currentColor" d="M12 2c5.523 0 10 4.477 10 10s-4.477 10-10 10S2 17.523 2 12S6.477 2 12 2Zm0 2a8 8 0 1 0 0 16a8 8 0 0 0 0-16Zm.5 3a3.5 3.5 0 0 1 1.82 6.49L16.868 17h-2.472l-2.18-3H10v3H8V7h4.5Zm0 2H10v3h2.5a1.5 1.5 0 0 0 1.493-1.355L14 10.5A1.5 1.5 0 0 0 12.5 9Z"/>`
	remixiconFillPath             = `<path fill="currentColor" d="M16.53 17.53L20.001 21h-17V4h10.667v.008A7.118 7.118 0 0 1 14.137 4c-.089.37-.136.76-.136 1.166c0 2.318 2.015 4.333 4.667 4.333a4.18 4.18 0 0 0 2.032-.538a7.002 7.002 0 0 1-4.17 8.567ZM18.501 7.5a2.5 2.5 0 1 1 0-5a2.5 2.5 0 0 1 0 5Z"/>`
	remixiconLinePath             = `<path fill="currentColor" d="m6.365 6l8.784 9.663l.72-.283c1.685-.661 2.864-2.156 3.092-3.896A6.502 6.502 0 0 1 12.078 6H6.364ZM14 5a4.5 4.5 0 0 0 6.714 3.918c.186.618.286 1.271.286 1.947c0 2.891-1.822 5.365-4.4 6.377L20 21H3V4h11.111A4.512 4.512 0 0 0 14 5Zm4.5 2.5a2.5 2.5 0 1 1 0-5a2.5 2.5 0 0 1 0 5ZM5 7.47V19h10.48L5.001 7.47Z"/>`
	remoteControlFillPath         = `<path fill="currentColor" d="M17 12a1 1 0 0 1 1 1v9H6v-9a1 1 0 0 1 1-1h10Zm-7 2H8v2h2v-2Zm2-8a6 6 0 0 1 5.368 3.316l-1.79.895a4 4 0 0 0-7.156 0l-1.79-.895A6 6 0 0 1 12 6Zm0-4a10 10 0 0 1 8.947 5.527l-1.79.895A8 8 0 0 0 12 4a8 8 0 0 0-7.157 4.422l-1.79-.895A10 10 0 0 1 12 2Z"/>`
	remoteControlLinePath         = `<path fill="currentColor" d="M17 12a1 1 0 0 1 1 1v9h-2v-8H8v8H6v-9a1 1 0 0 1 1-1h10Zm-5 4v2h-2v-2h2Zm0-10a6 6 0 0 1 5.368 3.316l-1.79.895a4 4 0 0 0-7.156 0l-1.79-.895A6 6 0 0 1 12 6Zm0-4a10 10 0 0 1 8.947 5.527l-1.79.895A8 8 0 0 0 12 4a8 8 0 0 0-7.157 4.422l-1.79-.895A10 10 0 0 1 12 2Z"/>`
	remoteControlTwoFillPath      = `<path fill="currentColor" d="M18 2a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h12Zm-3 13h-2v2h2v-2Zm-4 0H9v2h2v-2Zm2-9h-2v2H9v2h1.999L11 12h2l-.001-2H15V8h-2V6Z"/>`
	remoteControlTwoLinePath      = `<path fill="currentColor" d="M18 2a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h12Zm-1 2H7v16h10V4Zm-2 11v2h-2v-2h2Zm-4 0v2H9v-2h2Zm2-9v2h2v2h-2.001L13 12h-2l-.001-2H9V8h2V6h2Z"/>`
	repeatFillPath                = `<path fill="currentColor" d="M6 4h15a1 1 0 0 1 1 1v7h-2V6H6v3L1 5l5-4v3Zm12 16H3a1 1 0 0 1-1-1v-7h2v6h14v-3l5 4l-5 4v-3Z"/>`
	repeatLinePath                = `<path fill="currentColor" d="M6 4h15a1 1 0 0 1 1 1v7h-2V6H6v3L1 5l5-4v3Zm12 16H3a1 1 0 0 1-1-1v-7h2v6h14v-3l5 4l-5 4v-3Z"/>`
	repeatOneFillPath             = `<path fill="currentColor" d="M8 20v1.932a.5.5 0 0 1-.82.385l-4.12-3.433A.5.5 0 0 1 3.382 18H18a2 2 0 0 0 2-2V8h2v8a4 4 0 0 1-4 4H8Zm8-16V2.067a.5.5 0 0 1 .82-.384l4.12 3.433a.5.5 0 0 1-.321.884H6a2 2 0 0 0-2 2v8H2V8a4 4 0 0 1 4-4h10Zm-5 4h2v8h-2v-6H9V9l2-1Z"/>`
	repeatOneLinePath             = `<path fill="currentColor" d="M8 20v1.932a.5.5 0 0 1-.82.385l-4.12-3.433A.5.5 0 0 1 3.382 18H18a2 2 0 0 0 2-2V8h2v8a4 4 0 0 1-4 4H8Zm8-17.933a.5.5 0 0 1 .82-.384l4.12 3.433a.5.5 0 0 1-.321.884H6a2 2 0 0 0-2 2v8H2V8a4 4 0 0 1 4-4h10V2.067ZM11 8h2v8h-2v-6H9V9l2-1Z"/>`
	repeatTwoFillPath             = `<path fill="currentColor" d="M8 20v1.932a.5.5 0 0 1-.82.385l-4.12-3.433A.5.5 0 0 1 3.382 18H18a2 2 0 0 0 2-2V8h2v8a4 4 0 0 1-4 4H8Zm8-16V2.067a.5.5 0 0 1 .82-.384l4.12 3.433a.5.5 0 0 1-.321.884H6a2 2 0 0 0-2 2v8H2V8a4 4 0 0 1 4-4h10Z"/>`
	repeatTwoLinePath             = `<path fill="currentColor" d="M8 20v1.932a.5.5 0 0 1-.82.384l-4.12-3.432A.5.5 0 0 1 3.382 18H18a2 2 0 0 0 2-2V8h2v8a4 4 0 0 1-4 4H8Zm8-16V2.067a.5.5 0 0 1 .82-.384l4.12 3.433a.5.5 0 0 1-.321.884H6a2 2 0 0 0-2 2v8H2V8a4 4 0 0 1 4-4h10Z"/>`
	replayFifteenFillPath         = `<path fill="currentColor" d="M12 2c5.523 0 10 4.477 10 10s-4.477 10-10 10S2 17.523 2 12h2a8 8 0 1 0 1.865-5.135L8 9H2V3l2.447 2.446A9.977 9.977 0 0 1 12 2ZM8.5 8.5H10v7H8.5v-7Zm8.25 0H12v4.25h2.875a.625.625 0 1 1 0 1.25H12v1.5h2.875a2.125 2.125 0 0 0 0-4.25H13.5V10h3.25V8.5Z"/>`
	replayFifteenLinePath         = `<path fill="currentColor" d="M12 2c5.523 0 10 4.477 10 10s-4.477 10-10 10S2 17.523 2 12h2a8 8 0 1 0 1.385-4.5H8v2H2v-6h2V6a9.985 9.985 0 0 1 8-4ZM8.5 15.5v-7H10v7H8.5Zm3.5-7h4.75V10H13.5v1.25h1.375a2.125 2.125 0 0 1 0 4.25H12V14h2.875a.625.625 0 1 0 0-1.25H12V8.5Z"/>`
	replayFiveFillPath            = `<path fill="currentColor" d="M22 12c0-5.523-4.477-10-10-10a9.977 9.977 0 0 0-7.553 3.446L2 3v6h6L5.865 6.865A8 8 0 1 1 4 12H2c0 5.523 4.477 10 10 10s10-4.477 10-10Zm-7.5-2V8.5h-5v4.25h3.125a.625.625 0 1 1 0 1.25H9.5v1.5h3.125a2.125 2.125 0 0 0 0-4.25H11V10h3.5Z"/>`
	replayFiveLinePath            = `<path fill="currentColor" d="M12 2c5.523 0 10 4.477 10 10s-4.477 10-10 10S2 17.523 2 12h2a8 8 0 1 0 1.385-4.5H8v2H2v-6h2V6a9.985 9.985 0 0 1 8-4ZM9.5 8.5h5V10H11v1.25h1.625a2.125 2.125 0 0 1 0 4.25H9.5V14h3.125a.625.625 0 1 0 0-1.25H9.5V8.5Z"/>`
	replayTenFillPath             = `<path fill="currentColor" d="M12 2c5.523 0 10 4.477 10 10s-4.477 10-10 10S2 17.523 2 12h2a8 8 0 1 0 1.865-5.135L8 9H2V3l2.447 2.446A9.977 9.977 0 0 1 12 2Zm2.5 6.25a2.5 2.5 0 0 0-2.5 2.5v2.5a2.5 2.5 0 0 0 5 0v-2.5a2.5 2.5 0 0 0-2.5-2.5Zm1 2.5v2.5a1 1 0 1 1-2 0v-2.5a1 1 0 1 1 2 0ZM10 8.5H8.5v7H10v-7Z"/>`
	replayTenLinePath             = `<path fill="currentColor" d="M12 2c5.523 0 10 4.477 10 10s-4.477 10-10 10S2 17.523 2 12h2a8 8 0 1 0 1.385-4.5H8v2H2v-6h2V6a9.985 9.985 0 0 1 8-4Zm3.5 11.25a1 1 0 1 1-2 0v-2.5a1 1 0 1 1 2 0v2.5Zm-1-5a2.5 2.5 0 0 0-2.5 2.5v2.5a2.5 2.5 0 0 0 5 0v-2.5a2.5 2.5 0 0 0-2.5-2.5Zm-6 7.25v-7H10v7H8.5Z"/>`
	replayThirtyFillPath          = `<path fill="currentColor" d="M22 12c0-5.523-4.477-10-10-10a9.977 9.977 0 0 0-7.553 3.446L2 3v6h4.75v1h2.625a.625.625 0 1 1 0 1.25H7.5v1.5h1.875a.625.625 0 1 1 0 1.25H6.75v1.5h2.625a2.125 2.125 0 0 0 1.62-3.5a2.125 2.125 0 0 0-1.62-3.5H7.5L5.865 6.865A8 8 0 1 1 4 12H2c0 5.523 4.477 10 10 10s10-4.477 10-10Zm-9.5-1.25a2.5 2.5 0 0 1 5 0v2.5a2.5 2.5 0 0 1-5 0v-2.5Zm2.5-1a1 1 0 0 0-1 1v2.5a1 1 0 1 0 2 0v-2.5a1 1 0 0 0-1-1Z"/>`
	replayThirtyLinePath          = `<path fill="currentColor" d="M22 12c0-5.523-4.477-10-10-10a9.985 9.985 0 0 0-8 4V3.5H2v6h4.75v.5h2.625a.625.625 0 1 1 0 1.25H7.5v1.5h1.875a.625.625 0 1 1 0 1.25H6.75v1.5h2.625a2.125 2.125 0 0 0 1.62-3.5a2.125 2.125 0 0 0-1.62-3.5H8v-1H5.385A8 8 0 1 1 4 12H2c0 5.523 4.477 10 10 10s10-4.477 10-10Zm-9.5-1.25a2.5 2.5 0 0 1 5 0v2.5a2.5 2.5 0 0 1-5 0v-2.5Zm2.5-1a1 1 0 0 0-1 1v2.5a1 1 0 1 0 2 0v-2.5a1 1 0 0 0-1-1Z"/>`
	replyAllFillPath              = `<path fill="currentColor" d="M14 4.5V9c5.523 0 10 4.477 10 10c0 .273-.01.543-.032.81a9.002 9.002 0 0 0-7.655-4.805L16 15h-2v4.5L6 12l8-7.5Zm-6 0v2.737L2.92 12l5.079 4.761L8 19.5L0 12l8-7.5Z"/>`
	replyAllLinePath              = `<path fill="currentColor" d="M14 4.5V9c5.523 0 10 4.477 10 10c0 .273-.01.543-.032.81a9.002 9.002 0 0 0-7.655-4.805L16 15h-2v4.5L6 12l8-7.5Zm-6 0v2.737L2.92 12l5.079 4.761L8 19.5L0 12l8-7.5Zm4 4.616L8.924 12L12 14.883V13h4.034l.347.007c1.285.043 2.524.31 3.676.766A7.982 7.982 0 0 0 14 11h-2V9.116Z"/>`
	replyFillPath                 = `<path fill="currentColor" d="M11 20L1 12l10-8v5c5.523 0 10 4.477 10 10c0 .273-.01.543-.032.81A8.999 8.999 0 0 0 13 15h-2v5Z"/>`
	replyLinePath                 = `<path fill="currentColor" d="M11 20L1 12l10-8v5c5.523 0 10 4.477 10 10c0 .273-.01.543-.032.81a9.002 9.002 0 0 0-7.655-4.805L13 15h-2v5Zm-2-7h4.034l.347.007c1.285.043 2.524.31 3.676.766A7.982 7.982 0 0 0 11 11H9V8.161L4.202 12L9 15.839V13Z"/>`
	reservedFillPath              = `<path fill="currentColor" d="M13 15v4h3v2H8v-2h3v-4H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h16a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1h-7ZM8 8v2h8V8H8Z"/>`
	reservedLinePath              = `<path fill="currentColor" d="M13 15v4h3v2H8v-2h3v-4H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h16a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1h-7Zm-8-2h14V5H5v8Zm3-5h8v2H8V8Z"/>`
	restTimeFillPath              = `<path fill="currentColor" d="M11 6v8h8a8 8 0 1 1-16 0c0-4.335 3.58-8 8-8Zm10-4v2l-5.327 6H21v2h-8v-2l5.326-6H13V2h8Z"/>`
	restTimeLinePath              = `<path fill="currentColor" d="M11 6v2a6 6 0 1 0 5.996 6.225L17 14h2a8 8 0 1 1-16 0c0-4.335 3.58-8 8-8Zm10-4v2l-5.327 6H21v2h-8v-2l5.326-6H13V2h8Z"/>`
	restartFillPath               = `<path fill="currentColor" d="M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10Zm4.82-4.924a7 7 0 1 0-1.853 1.266l-.974-1.755A5 5 0 1 1 17 12h-3l2.82 5.076Z"/>`
	restartLinePath               = `<path fill="currentColor" d="M18.537 19.567A9.961 9.961 0 0 1 12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10c0 2.136-.67 4.116-1.81 5.74L17 12h3a8 8 0 1 0-2.46 5.772l.997 1.795Z"/>`
	restaurantFillPath            = `<path fill="currentColor" d="M21 2v20h-2v-8h-3V7a5 5 0 0 1 5-5ZM9 13.9V22H7v-8.1A5.002 5.002 0 0 1 3 9V3h2v7h2V3h2v7h2V3h2v6a5.002 5.002 0 0 1-4 4.9Z"/>`
	restaurantLinePath            = `<path fill="currentColor" d="M21 2v20h-2v-7h-4V8a6 6 0 0 1 6-6Zm-2 2.53C18.17 5 17 6.17 17 8v5h2V4.53ZM9 13.9V22H7v-8.1A5.002 5.002 0 0 1 3 9V3h2v7h2V3h2v7h2V3h2v6a5.002 5.002 0 0 1-4 4.9Z"/>`
	restaurantTwoFillPath         = `<path fill="currentColor" d="m4.222 3.808l6.718 6.717l-2.829 2.829l-3.889-3.89a4 4 0 0 1 0-5.656Zm10.046 8.339l-.853.853l7.07 7.071l-1.413 1.414L12 14.415l-7.072 7.07l-1.414-1.414l9.339-9.339c-.588-1.457.02-3.555 1.621-5.156c1.953-1.953 4.644-2.428 6.01-1.061c1.368 1.367.893 4.058-1.06 6.01c-1.602 1.602-3.7 2.21-5.157 1.622Z"/>`
	restaurantTwoLinePath         = `<path fill="currentColor" d="m14.268 12.147l-.853.853l7.07 7.071l-1.413 1.414L12 14.415l-7.072 7.07l-1.414-1.414l9.339-9.339c-.588-1.457.02-3.555 1.621-5.156c1.953-1.953 4.644-2.428 6.01-1.061c1.368 1.367.893 4.058-1.06 6.01c-1.602 1.602-3.7 2.21-5.157 1.622ZM4.222 3.807l6.718 6.718l-2.829 2.829l-3.889-3.89a4 4 0 0 1 0-5.656Zm13.789 5.304c1.257-1.257 1.516-2.726 1.06-3.182c-.455-.456-1.924-.196-3.181 1.06c-1.258 1.258-1.517 2.727-1.061 3.183c.456.455 1.925.196 3.182-1.06Z"/>`
	rewindFillPath                = `<path fill="currentColor" d="m12.001 10.666l9.223-6.148a.5.5 0 0 1 .777.416v14.132a.5.5 0 0 1-.777.416L12 13.333v5.733a.5.5 0 0 1-.777.416L.625 12.416a.5.5 0 0 1 0-.832l10.599-7.066a.5.5 0 0 1 .777.416v5.732Z"/>`
	rewindLinePath                = `<path fill="currentColor" d="m12.001 10.666l9.223-6.148a.5.5 0 0 1 .777.416v14.132a.5.5 0 0 1-.777.416L12 13.333v5.733a.5.5 0 0 1-.777.416L.625 12.416a.5.5 0 0 1 0-.832l10.599-7.066a.5.5 0 0 1 .777.416v5.732Zm-2 5.597V7.737L3.607 12L10 16.263Zm10 0V7.737L13.607 12L20 16.263Z"/>`
	rewindMiniFillPath            = `<path fill="currentColor" d="M11 17.035a.5.5 0 0 1-.788.408l-7.133-5.035a.5.5 0 0 1 0-.817l7.133-5.035a.5.5 0 0 1 .788.409v10.07Zm1.079-4.627a.5.5 0 0 1 0-.817l7.133-5.035a.5.5 0 0 1 .788.409v10.07a.5.5 0 0 1-.788.408l-7.133-5.035Z"/>`
	rewindMiniLinePath            = `<path fill="currentColor" d="M9 9.86L5.968 12L9 14.14V9.86Zm1.909 7.463a.5.5 0 0 1-.697.12l-7.133-5.035a.5.5 0 0 1 0-.817l7.133-5.035a.5.5 0 0 1 .788.409v10.07a.5.5 0 0 1-.091.288ZM18 14.14V9.86L14.968 12L18 14.14Zm-5.921-1.732a.5.5 0 0 1 0-.817l7.133-5.035a.5.5 0 0 1 .788.409v10.07a.5.5 0 0 1-.788.408l-7.133-5.035Z"/>`
	rfidFillPath                  = `<path fill="currentColor" d="M18.364 18.364a9 9 0 0 0 0-12.728l1.414-1.414c4.296 4.295 4.296 11.26 0 15.556l-1.414-1.414ZM5.636 5.636a9 9 0 0 0 0 12.728l-1.414 1.414c-4.296-4.296-4.296-11.26 0-15.556l1.414 1.414Zm9.9 9.9a5 5 0 0 0 0-7.072L16.95 7.05a7 7 0 0 1 0 9.9l-1.414-1.415ZM8.463 8.463a5 5 0 0 0 0 7.071L7.05 16.95a7 7 0 0 1 0-9.9l1.414 1.414ZM12 14a2 2 0 1 0 0-4a2 2 0 0 0 0 4Z"/>`
	rfidLinePath                  = `<path fill="currentColor" d="M18.364 18.364a9 9 0 0 0 0-12.728l1.414-1.414c4.296 4.295 4.296 11.26 0 15.556l-1.414-1.414ZM5.636 5.636a9 9 0 0 0 0 12.728l-1.414 1.414c-4.296-4.296-4.296-11.26 0-15.556l1.414 1.414Zm9.9 9.9a5 5 0 0 0 0-7.072L16.95 7.05a7 7 0 0 1 0 9.9l-1.414-1.415ZM8.463 8.463a5 5 0 0 0 0 7.071L7.05 16.95a7 7 0 0 1 0-9.9l1.414 1.414ZM12 14a2 2 0 1 0 0-4a2 2 0 0 0 0 4Z"/>`
	rhythmFillPath                = `<path fill="currentColor" d="M2 9h2v12H2V9Zm6-6h2v18H8V3Zm6 9h2v9h-2v-9Zm6-6h2v15h-2V6Z"/>`
	rhythmLinePath                = `<path fill="currentColor" d="M2 9h2v12H2V9Zm6-6h2v18H8V3Zm6 9h2v9h-2v-9Zm6-6h2v15h-2V6Z"/>`
	ridingFillPath                = `<path fill="currentColor" d="M5.5 21a4.5 4.5 0 1 1 0-9a4.5 4.5 0 0 1 0 9Zm0-3a1.5 1.5 0 1 0 0-3a1.5 1.5 0 0 0 0 3Zm13 3a4.5 4.5 0 1 1 0-9a4.5 4.5 0 0 1 0 9Zm0-3a1.5 1.5 0 1 0 0-3a1.5 1.5 0 0 0 0 3Zm-6.969-8.203L13 12v6h-2v-5l-2.719-2.266A2 2 0 0 1 8 7.671l2.828-2.828a2 2 0 0 1 2.829 0l1.414 1.414a6.969 6.969 0 0 0 3.917 1.975l-.01 2.015a8.962 8.962 0 0 1-5.321-2.575L11.53 9.797ZM16 5a2 2 0 1 1 0-4a2 2 0 0 1 0 4Z"/>`
	ridingLinePath                = `<path fill="currentColor" d="M5.5 21a4.5 4.5 0 1 1 0-9a4.5 4.5 0 0 1 0 9Zm0-2a2.5 2.5 0 1 0 0-5a2.5 2.5 0 0 0 0 5Zm13 2a4.5 4.5 0 1 1 0-9a4.5 4.5 0 0 1 0 9Zm0-2a2.5 2.5 0 1 0 0-5a2.5 2.5 0 0 0 0 5Zm-7.477-8.695L13 12v6h-2v-5l-2.719-2.266A2 2 0 0 1 8 7.671l2.828-2.828a2 2 0 0 1 2.829 0l1.414 1.414a6.969 6.969 0 0 0 3.917 1.975l-.01 2.015a8.962 8.962 0 0 1-5.321-2.575l-2.634 2.633ZM16 5a2 2 0 1 1 0-4a2 2 0 0 1 0 4Z"/>`
	roadMapFillPath               = `<path fill="currentColor" d="M16.95 11.95a6.996 6.996 0 0 0 1.858-6.582l2.495-1.07a.5.5 0 0 1 .697.46V19l-7 3l-6-3l-6.303 2.701a.5.5 0 0 1-.697-.46V7l3.129-1.341a6.993 6.993 0 0 0 1.921 6.29L12 16.9l4.95-4.95Zm-1.414-1.414L12 14.07l-3.536-3.535a5 5 0 1 1 7.072 0Z"/>`
	roadMapLinePath               = `<path fill="currentColor" d="M4 6.143v12.824l5.065-2.17l6 3L20 17.68V4.857l1.303-.558a.5.5 0 0 1 .697.46V19l-7 3l-6-3l-6.303 2.701a.5.5 0 0 1-.697-.46V7l2-.857Zm12.243 5.1L12 15.485l-4.243-4.242a6 6 0 1 1 8.486 0ZM12 12.657l2.828-2.829a4 4 0 1 0-5.656 0L12 12.657Z"/>`
	roadsterFillPath              = `<path fill="currentColor" d="M22 13.5V21a1 1 0 0 1-1 1h-1a1 1 0 0 1-1-1v-1H5v1a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1v-7.5l-1.243-.31A1 1 0 0 1 0 12.22v-.72a.5.5 0 0 1 .5-.5h1.875l2.138-5.702A2 2 0 0 1 6.386 4h11.228a2 2 0 0 1 1.873 1.298L21.625 11H23.5a.5.5 0 0 1 .5.5v.72a1 1 0 0 1-.758.97L22 13.5ZM4 15v2a1 1 0 0 0 1 1h3.245a.5.5 0 0 0 .44-.736C7.88 15.754 6.318 15 4 15Zm16 0c-2.317 0-3.879.755-4.686 2.264a.5.5 0 0 0 .441.736H19a1 1 0 0 0 1-1v-2ZM6 6l-1.561 4.684A1 1 0 0 0 5.387 12h13.226a1 1 0 0 0 .948-1.316L18 6H6Z"/>`
	roadsterLinePath              = `<path fill="currentColor" d="M19 20H5v1a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1v-7.5l-1.243-.31A1 1 0 0 1 0 12.22v-.72a.5.5 0 0 1 .5-.5H2l2.48-5.788A2 2 0 0 1 6.32 4h11.36a2 2 0 0 1 1.838 1.212L22 11h1.5a.5.5 0 0 1 .5.5v.72a1 1 0 0 1-.758.97L22 13.5V21a1 1 0 0 1-1 1h-1a1 1 0 0 1-1-1v-1Zm1-2v-5H4v5h16ZM5.477 11h13.046a1.001 1.001 0 0 0 .928-1.371L18 6H6L4.549 9.629A1 1 0 0 0 5.477 11ZM5 14c2.317 0 3.879.755 4.686 2.264a.5.5 0 0 1-.441.736H6a1 1 0 0 1-1-1v-2Zm14 0v2a1 1 0 0 1-1 1h-3.245a.5.5 0 0 1-.44-.736C15.12 14.754 16.682 14 19 14Z"/>`
	robotFillPath                 = `<path fill="currentColor" d="M13 4.055A9 9 0 0 1 21 13v9H3v-9a9 9 0 0 1 8-8.945V1h2v3.055ZM12 18a5 5 0 1 0 0-10a5 5 0 0 0 0 10Zm0-2a3 3 0 1 1 0-6a3 3 0 0 1 0 6Zm0-2a1 1 0 1 0 0-2a1 1 0 0 0 0 2Z"/>`
	robotLinePath                 = `<path fill="currentColor" d="M13 4.055A9 9 0 0 1 21 13v9H3v-9a9 9 0 0 1 8-8.945V1h2v3.055ZM19 20v-7a7 7 0 1 0-14 0v7h14Zm-7-2a5 5 0 1 1 0-10a5 5 0 0 1 0 10Zm0-2a3 3 0 1 0 0-6a3 3 0 0 0 0 6Zm0-2a1 1 0 1 1 0-2a1 1 0 0 1 0 2Z"/>`
	robotTwoFillPath              = `<path fill="currentColor" d="M13.5 2c0 .444-.193.843-.5 1.118V5h5a3 3 0 0 1 3 3v10a3 3 0 0 1-3 3H6a3 3 0 0 1-3-3V8a3 3 0 0 1 3-3h5V3.118A1.5 1.5 0 1 1 13.5 2ZM0 10h2v6H0v-6Zm24 0h-2v6h2v-6ZM9 14.5a1.5 1.5 0 1 0 0-3a1.5 1.5 0 0 0 0 3Zm7.5-1.5a1.5 1.5 0 1 0-3 0a1.5 1.5 0 0 0 3 0Z"/>`
	robotTwoLinePath              = `<path fill="currentColor" d="M13.5 2c0 .444-.193.843-.5 1.118V5h5a3 3 0 0 1 3 3v10a3 3 0 0 1-3 3H6a3 3 0 0 1-3-3V8a3 3 0 0 1 3-3h5V3.118A1.5 1.5 0 1 1 13.5 2ZM6 7a1 1 0 0 0-1 1v10a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V8a1 1 0 0 0-1-1H6Zm-4 3H0v6h2v-6Zm20 0h2v6h-2v-6ZM9 14.5a1.5 1.5 0 1 0 0-3a1.5 1.5 0 0 0 0 3Zm6 0a1.5 1.5 0 1 0 0-3a1.5 1.5 0 0 0 0 3Z"/>`
	rocketFillPath                = `<path fill="currentColor" d="M5.33 15.929a13.064 13.064 0 0 1-.33-2.93c0-5.087 2.903-9.436 7-11.181C16.099 3.563 19 7.912 19 13c0 1.01-.114 1.991-.33 2.929l2.02 1.795a.5.5 0 0 1 .097.631l-2.457 4.096a.5.5 0 0 1-.782.096l-2.255-2.254a1 1 0 0 0-.707-.293H9.415a1 1 0 0 0-.707.293l-2.255 2.254a.5.5 0 0 1-.782-.096l-2.457-4.096a.5.5 0 0 1 .096-.63l2.02-1.796Zm6.67-2.93a2 2 0 1 0 0-4a2 2 0 0 0 0 4Z"/>`
	rocketLinePath                = `<path fill="currentColor" d="M5 13c0-5.088 2.902-9.437 7-11.182C16.097 3.563 19 7.912 19 13c0 .823-.076 1.626-.221 2.403l1.94 1.832a.5.5 0 0 1 .096.603l-2.495 4.575a.5.5 0 0 1-.793.114l-2.235-2.234a1 1 0 0 0-.707-.293H9.414a1 1 0 0 0-.707.293l-2.235 2.234a.5.5 0 0 1-.792-.114l-2.496-4.575a.5.5 0 0 1 .096-.603l1.94-1.832C5.076 14.626 5 13.823 5 13Zm1.475 6.695l.817-.817A3 3 0 0 1 9.414 18h5.171a3 3 0 0 1 2.122.878l.817.817l.982-1.8l-1.1-1.038a2 2 0 0 1-.593-1.82A11.11 11.11 0 0 0 17 13c0-3.87-1.995-7.3-5-8.96C8.995 5.7 7 9.13 7 13c0 .691.063 1.372.186 2.036a2 2 0 0 1-.593 1.82l-1.1 1.04l.982 1.8ZM12 13a2 2 0 1 1 0-4a2 2 0 0 1 0 4Z"/>`
	rocketTwoFillPath             = `<path fill="currentColor" d="M8.498 20.005h7.004A6.522 6.522 0 0 1 12 23.507a6.522 6.522 0 0 1-3.502-3.502ZM18 14.81l2 2.268v1.927H4v-1.927l2-2.268V9.005C6 5.52 8.504 2.558 12 1.46c3.496 1.098 6 4.061 6 7.545v5.804Zm-6-3.805a2 2 0 1 0 0-4a2 2 0 0 0 0 4Z"/>`
	rocketTwoLinePath             = `<path fill="currentColor" d="M15.502 20.005A6.522 6.522 0 0 1 12 23.507a6.522 6.522 0 0 1-3.502-3.502h2.26c.326.488.747.912 1.242 1.243c.495-.33.916-.755 1.242-1.243h2.26ZM18 14.81l2 2.268v1.927H4v-1.927l2-2.268V9.005C6 5.52 8.504 2.558 12 1.46c3.496 1.098 6 4.061 6 7.545v5.804Zm-.73 2.195L16 15.565v-6.56c0-2.318-1.57-4.43-4-5.421c-2.43.99-4 3.103-4 5.42v6.561l-1.27 1.44h10.54Zm-5.27-6a2 2 0 1 1 0-4a2 2 0 0 1 0 4Z"/>`
	rotateLockFillPath            = `<path fill="currentColor" d="M12 2c5.523 0 10 4.477 10 10c0 2.136-.67 4.116-1.811 5.741L17 12h3a8 8 0 1 0-2.46 5.772l.998 1.795A9.961 9.961 0 0 1 12 22C6.477 22 2 17.523 2 12S6.477 2 12 2Zm0 5a3 3 0 0 1 3 3v1h1v5H8v-5h1v-1a3 3 0 0 1 3-3Zm0 2a1 1 0 0 0-.993.883L11 10v1h2v-1a1 1 0 0 0-.883-.993L12 9Z"/>`
	rotateLockLinePath            = `<path fill="currentColor" d="M12 2c5.523 0 10 4.477 10 10c0 2.136-.67 4.116-1.811 5.741L17 12h3a8 8 0 1 0-2.46 5.772l.998 1.795A9.961 9.961 0 0 1 12 22C6.477 22 2 17.523 2 12S6.477 2 12 2Zm0 5a3 3 0 0 1 3 3v1h1v5H8v-5h1v-1a3 3 0 0 1 3-3Zm2 6h-4v1h4v-1Zm-2-4a1 1 0 0 0-.993.883L11 10v1h2v-1a1 1 0 0 0-.883-.993L12 9Z"/>`
	roundedCornerPath             = `<path fill="currentColor" d="M21 19v2h-2v-2h2Zm-4 0v2h-2v-2h2Zm-4 0v2h-2v-2h2Zm-4 0v2H7v-2h2Zm-4 0v2H3v-2h2Zm16-4v2h-2v-2h2ZM5 15v2H3v-2h2Zm0-4v2H3v-2h2Zm11-8a5.002 5.002 0 0 1 4.995 4.783L21 8v5h-2V8a3.01 3.01 0 0 0-2.824-2.995L16 5h-5V3h5ZM5 7v2H3V7h2Zm0-4v2H3V3h2Zm4 0v2H7V3h2Z"/>`
	routeFillPath                 = `<path fill="currentColor" d="M4 15V8.5a4.5 4.5 0 0 1 9 0v7a2.5 2.5 0 0 0 5 0V8.83a3.001 3.001 0 1 1 2 0v6.67a4.5 4.5 0 1 1-9 0v-7a2.5 2.5 0 0 0-5 0V15h3l-4 5l-4-5h3Z"/>`
	routeLinePath                 = `<path fill="currentColor" d="M4 15V8.5a4.5 4.5 0 0 1 9 0v7a2.5 2.5 0 0 0 5 0V8.83a3.001 3.001 0 1 1 2 0v6.67a4.5 4.5 0 1 1-9 0v-7a2.5 2.5 0 0 0-5 0V15h3l-4 5l-4-5h3Zm15-8a1 1 0 1 0 0-2a1 1 0 0 0 0 2Z"/>`
	routerFillPath                = `<path fill="currentColor" d="M11 14v-3h2v3h5a1 1 0 0 1 1 1v6a1 1 0 0 1-1 1H6a1 1 0 0 1-1-1v-6a1 1 0 0 1 1-1h5ZM2.51 8.837C3.835 4.864 7.584 2 12 2c4.418 0 8.166 2.864 9.49 6.837l-1.898.632a8.004 8.004 0 0 0-15.183 0L2.51 8.837Zm3.796 1.265a6.003 6.003 0 0 1 11.388 0l-1.898.633a4.002 4.002 0 0 0-7.592 0l-1.898-.633Z"/>`
	routerLinePath                = `<path fill="currentColor" d="M11 14v-3h2v3h5a1 1 0 0 1 1 1v6a1 1 0 0 1-1 1H6a1 1 0 0 1-1-1v-6a1 1 0 0 1 1-1h5ZM2.51 8.837C3.835 4.864 7.584 2 12 2c4.418 0 8.166 2.864 9.49 6.837l-1.898.632a8.004 8.004 0 0 0-15.183 0L2.51 8.837Zm3.796 1.265a6.003 6.003 0 0 1 11.388 0l-1.898.633a4.002 4.002 0 0 0-7.592 0l-1.898-.633ZM7 16v4h10v-4H7Z"/>`
	rssFillPath                   = `<path fill="currentColor" d="M3 3c9.941 0 18 8.059 18 18h-3c0-8.284-6.716-15-15-15V3Zm0 7c6.075 0 11 4.925 11 11h-3a8 8 0 0 0-8-8v-3Zm0 7a4 4 0 0 1 4 4H3v-4Z"/>`
	rssLinePath                   = `<path fill="currentColor" d="M3 17a4 4 0 0 1 4 4H3v-4Zm0-7c6.075 0 11 4.925 11 11h-2a9 9 0 0 0-9-9v-2Zm0-7c9.941 0 18 8.059 18 18h-2c0-8.837-7.163-16-16-16V3Z"/>`
	rulerFillPath                 = `<path fill="currentColor" d="m4.929 13.314l2.121 2.121l1.415-1.414l-2.122-2.122l2.122-2.12l2.828 2.828l1.414-1.415L9.88 8.364L12 6.243l2.121 2.12l1.415-1.413l-2.122-2.122L16.243 2a1 1 0 0 1 1.414 0l4.95 4.95a1 1 0 0 1 0 1.414l-14.85 14.85a1 1 0 0 1-1.414 0l-4.95-4.95a1 1 0 0 1 0-1.415l3.536-3.535Z"/>`
	rulerLinePath                 = `<path fill="currentColor" d="m6.343 14.728l-2.828 2.828l3.535 3.536L20.485 7.657L16.95 4.12l-2.121 2.122l1.414 1.414l-1.414 1.414l-1.415-1.414l-2.121 2.121l2.121 2.121L12 13.314l-2.12-2.122l-2.122 2.122l1.415 1.414l-1.415 1.414l-1.414-1.414ZM17.657 2l4.95 4.95a1 1 0 0 1 0 1.414l-14.85 14.85a1 1 0 0 1-1.414 0l-4.95-4.95a1 1 0 0 1 0-1.415L16.243 2a1 1 0 0 1 1.414 0Z"/>`
	rulerTwoFillPath              = `<path fill="currentColor" d="M15 21h-2v-3h-2v3H9v-2H7v2H4a1 1 0 0 1-1-1v-3h2v-2H3v-2h3v-2H3V9h2V7H3V4a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v9h9a1 1 0 0 1 1 1v6a1 1 0 0 1-1 1h-3v-2h-2v2Z"/>`
	rulerTwoLinePath              = `<path fill="currentColor" d="M17 19h2v-5h-9V5H5v2h2v2H5v2h3v2H5v2h2v2H5v2h2v-2h2v2h2v-3h2v3h2v-2h2v2Zm-5-7h8a1 1 0 0 1 1 1v7a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h7a1 1 0 0 1 1 1v8Z"/>`
	runFillPath                   = `<path fill="currentColor" d="M9.83 8.79L8 9.456V13H6V8.05h.015l5.268-1.918c.244-.093.51-.14.782-.131a2.616 2.616 0 0 1 2.427 1.82c.186.583.356.977.51 1.181A4.992 4.992 0 0 0 19 11v2a6.986 6.986 0 0 1-5.402-2.547l-.581 3.297L15 15.67V23h-2v-5.986l-2.05-1.987l-.947 4.298l-6.894-1.215l.348-1.97l4.924.868L9.83 8.79ZM13.5 5.5a2 2 0 1 1 0-4a2 2 0 0 1 0 4Z"/>`
	runLinePath                   = `<path fill="currentColor" d="M9.83 8.79L8 9.456V13H6V8.05h.015l5.268-1.918c.244-.093.51-.14.782-.131a2.616 2.616 0 0 1 2.427 1.82c.186.583.356.977.51 1.181A4.992 4.992 0 0 0 19 11v2a6.986 6.986 0 0 1-5.402-2.547l-.697 3.956L15 16.17V23h-2v-5.898l-2.27-1.904l-.727 4.127l-6.894-1.215l.348-1.97l4.924.868L9.83 8.79ZM13.5 5.5a2 2 0 1 1 0-4a2 2 0 0 1 0 4Z"/>`
	safariFillPath                = `<path fill="currentColor" d="m16.701 6.8l-6.114 3.786L6.802 16.7l-.104-.104l-1.415 1.414l.708.707l1.414-1.414L7.3 17.2l6.114-3.785L17.2 7.3l.104.104L18.72 5.99l-.708-.708l-1.414 1.415l.104.104Zm-4.7 15.2c-5.523 0-10-4.477-10-10s4.477-10 10-10s10 4.477 10 10s-4.477 10-10 10Zm-.5-19v2h1V3h-1Zm0 16v2h1v-2h-1ZM8.095 3.876l.765 1.848l.924-.383l-.765-1.847l-.924.382Zm6.123 14.783l.765 1.847l.924-.382l-.765-1.848l-.924.383Zm.765-15.165l-.765 1.847l.924.383l.765-1.848l-.924-.382ZM8.86 18.276l-.765 1.848l.924.382l.765-1.848l-.924-.382ZM21.001 11.5h-2v1h2v-1Zm-16 0h-2v1h2v-1Zm15.458 3.616l-1.835-.795l-.397.918l1.835.794l.397-.918ZM5.775 8.76L3.94 7.967l-.397.918l1.835.794l.397-.918Zm14.35-.667l-1.848.765l.383.924l1.847-.765l-.383-.924ZM5.342 14.217l-1.847.765l.382.924l1.848-.765l-.383-.924ZM18.72 18.01l-1.415-1.414l-.707.707l1.414 1.415l.707-.708ZM7.404 6.697L5.99 5.282l-.708.708l1.415 1.414l.707-.707Zm3.908 4.615l3.611-2.235l-2.235 3.61l-1.376-1.375Z"/>`
	safariLinePath                = `<path fill="currentColor" d="m17.813 6.503l-4.398 6.911l-6.911 4.398A7.973 7.973 0 0 0 11 19.938V18h2v1.938a7.96 7.96 0 0 0 3.906-1.618l-1.37-1.37l1.414-1.414l1.37 1.37A7.96 7.96 0 0 0 19.939 13h-1.938v-2h1.938a7.974 7.974 0 0 0-2.126-4.497Zm-.315-.315a7.973 7.973 0 0 0-4.497-2.126V6h-2V4.062A7.96 7.96 0 0 0 7.095 5.68l1.37 1.37l-1.414 1.414l-1.37-1.37A7.96 7.96 0 0 0 4.063 11H6v2H4.063a7.973 7.973 0 0 0 2.126 4.497l4.398-6.911l6.911-4.398ZM12.001 22c-5.523 0-10-4.477-10-10s4.477-10 10-10s10 4.477 10 10s-4.477 10-10 10Z"/>`
	safeFillPath                  = `<path fill="currentColor" d="M18.005 20h-12v2h-2v-2h-1a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h18a1 1 0 0 1 1 1v15a1 1 0 0 1-1 1h-1v2h-2v-2Zm-7-6.126V17h2v-3.126a4.002 4.002 0 0 0-1-7.874a4 4 0 0 0-1 7.874Zm1-1.874a2 2 0 1 1 0-4a2 2 0 0 1 0 4Z"/>`
	safeLinePath                  = `<path fill="currentColor" d="M18.005 20h-12v2h-2v-2h-1a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h18a1 1 0 0 1 1 1v15a1 1 0 0 1-1 1h-1v2h-2v-2Zm-14-2h16V5h-16v13Zm9-4.126V17h-2v-3.126a4.002 4.002 0 0 1 1-7.874a4 4 0 0 1 1 7.874Zm-1-1.874a2 2 0 1 0 0-4a2 2 0 0 0 0 4Z"/>`
	safeTwoFillPath               = `<path fill="currentColor" d="M10.005 20h-4v2h-2v-2h-1a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h7V1.59a.5.5 0 0 1 .582-.493L21.17 2.86a1 1 0 0 1 .836.987V6h1v2h-1v7h1v2h-1v2.152a1 1 0 0 1-.836.987l-1.164.194V22h-2v-1.334l-7.418 1.237a.5.5 0 0 1-.582-.494V20Zm2-.361l8-1.334V4.694l-8-1.333v16.278Zm4.5-5.64c-.828 0-1.5-1.119-1.5-2.5c0-1.38.671-2.5 1.5-2.5c.828 0 1.5 1.12 1.5 2.5c0 1.381-.672 2.5-1.5 2.5Z"/>`
	safeTwoLinePath               = `<path fill="currentColor" d="M20.005 20.333V22h-2v-1.334l-7.418 1.237a.5.5 0 0 1-.582-.494V20h-4v2h-2v-2h-1a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h7V1.59a.5.5 0 0 1 .582-.492L21.17 2.86a1 1 0 0 1 .836.987V6h1v2h-1v7h1v2h-1v2.152a1 1 0 0 1-.836.987l-1.164.194ZM4.005 5v13h6V5h-6Zm8 14.639l8-1.334V4.694l-8-1.333v16.278Zm4.5-5.64c-.828 0-1.5-1.119-1.5-2.5c0-1.38.671-2.5 1.5-2.5c.828 0 1.5 1.12 1.5 2.5c0 1.381-.672 2.5-1.5 2.5Z"/>`
	sailboatFillPath              = `<path fill="currentColor" d="M3 18h18a.5.5 0 0 1 .4.8l-2.1 2.8a1 1 0 0 1-.8.4h-13a1 1 0 0 1-.8-.4l-2.1-2.8A.5.5 0 0 1 3 18ZM15 2.425V15a1 1 0 0 1-1 1H4.04a.5.5 0 0 1-.39-.812L14.11 2.113a.5.5 0 0 1 .89.312Z"/>`
	sailboatLinePath              = `<path fill="currentColor" d="M3 18h18a.5.5 0 0 1 .4.8l-2.1 2.8a1 1 0 0 1-.8.4h-13a1 1 0 0 1-.8-.4l-2.1-2.8A.5.5 0 0 1 3 18Zm4.161-4H13V6.7L7.161 14ZM15 2.425V15a1 1 0 0 1-1 1H4.04a.5.5 0 0 1-.39-.812L14.11 2.113a.5.5 0 0 1 .89.312Z"/>`
	saveFillPath                  = `<path fill="currentColor" d="M18 21v-8H6v8H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h13l4 4v13a1 1 0 0 1-1 1h-2Zm-2 0H8v-6h8v6Z"/>`
	saveLinePath                  = `<path fill="currentColor" d="M7 19v-6h10v6h2V7.828L16.172 5H5v14h2ZM4 3h13l4 4v13a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Zm5 12v4h6v-4H9Z"/>`
	saveThreeFillPath             = `<path fill="currentColor" d="M4 3h14l2.707 2.707a1 1 0 0 1 .293.707V20a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Zm3 1v5h9V4H7Zm-1 8v7h12v-7H6Zm7-7h2v3h-2V5Z"/>`
	saveThreeLinePath             = `<path fill="currentColor" d="M18 19h1V6.828L17.172 5H16v4H7V5H5v14h1v-7h12v7ZM4 3h14l2.707 2.707a1 1 0 0 1 .293.707V20a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Zm4 11v5h8v-5H8Z"/>`
	saveTwoFillPath               = `<path fill="currentColor" d="M4 3h13l3.707 3.707a1 1 0 0 1 .293.707V20a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Zm8 15a3 3 0 1 0 0-6a3 3 0 0 0 0 6ZM5 5v4h10V5H5Z"/>`
	saveTwoLinePath               = `<path fill="currentColor" d="M5 5v14h14V7.828L16.172 5H5ZM4 3h13l3.707 3.707a1 1 0 0 1 .293.707V20a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Zm8 15a3 3 0 1 1 0-6a3 3 0 0 1 0 6ZM6 6h9v4H6V6Z"/>`
	scalesFillPath                = `<path fill="currentColor" d="M12.998 2v1h7v2h-7v14h4v2h-10v-2h4V5h-7V3h7V2h2Zm-8 4.343l2.828 2.829a4 4 0 1 1-5.657 0L5 6.343Zm14 0l2.828 2.829a4 4 0 1 1-5.657 0l2.829-2.829Zm0 2.829l-1.414 1.414A1.987 1.987 0 0 0 16.998 12l4 .001c0-.54-.212-1.041-.586-1.415l-1.414-1.414Zm-14 0l-1.414 1.414A1.987 1.987 0 0 0 2.998 12l4 .001c0-.54-.212-1.041-.586-1.415L4.998 9.172Z"/>`
	scalesLinePath                = `<path fill="currentColor" d="M12.998 2v1h7v2h-7v14h4v2h-10v-2h4V5h-7V3h7V2h2Zm-8 4.343l2.828 2.829a4 4 0 1 1-5.657 0L5 6.343Zm14 0l2.828 2.829a4 4 0 1 1-5.657 0l2.829-2.829Zm-14 2.829l-1.414 1.414a2 2 0 1 0 2.828 0L4.998 9.172Zm14 0l-1.414 1.414a2 2 0 1 0 2.828 0l-1.414-1.414Z"/>`
	scalesThreeFillPath           = `<path fill="currentColor" d="M12.998 2v1.278l5 1.668l3.633-1.21l.632 1.896l-3.031 1.011l3.095 8.512A5.983 5.983 0 0 1 17.998 17a5.983 5.983 0 0 1-4.328-1.845l3.094-8.512l-3.766-1.256V19h4v2h-10v-2h4V5.387L7.232 6.643l3.095 8.512A5.983 5.983 0 0 1 6 17a5.983 5.983 0 0 1-4.33-1.845l3.095-8.512l-3.03-1.01l.632-1.898L6 4.945l4.999-1.667V2h2Zm5 7.103L16.581 13h2.835l-1.418-3.897Zm-12 0L4.582 13h2.835L5.999 9.103Z"/>`
	scalesThreeLinePath           = `<path fill="currentColor" d="M12.998 2v1.278l5 1.668l3.633-1.21l.632 1.896l-3.031 1.011l3.095 8.512A5.983 5.983 0 0 1 17.998 17a5.983 5.983 0 0 1-4.328-1.845l3.094-8.512l-3.766-1.256V19h4v2h-10v-2h4V5.387L7.232 6.643l3.095 8.512A5.983 5.983 0 0 1 6 17a5.983 5.983 0 0 1-4.33-1.845l3.095-8.512l-3.03-1.01l.632-1.898L6 4.945l4.999-1.667V2h2Zm5 7.103l-1.958 5.386a3.982 3.982 0 0 0 1.959.511c.7 0 1.37-.18 1.958-.51l-1.959-5.387Zm-12 0L4.04 14.489A3.982 3.982 0 0 0 5.999 15c.7 0 1.37-.18 1.958-.51L5.999 9.102Z"/>`
	scalesTwoFillPath             = `<path fill="currentColor" d="M5.998 2c0 .513.49 1 1 1h10c.513 0 1-.49 1-1h2a3 3 0 0 1-3 3h-4l.001 2.062A8.001 8.001 0 0 1 19.998 15v6a1 1 0 0 1-1 1h-14a1 1 0 0 1-1-1v-6a8.001 8.001 0 0 1 7-7.938V5h-4c-1.66 0-3-1.34-3-3h2Zm6 9a4 4 0 1 0 3.446 1.968l-2.739 2.74l-.094.082a1 1 0 0 1-1.32-1.497l2.739-2.74A3.981 3.981 0 0 0 11.998 11Z"/>`
	scalesTwoLinePath             = `<path fill="currentColor" d="M5.998 2c0 .513.49 1 1 1h10c.513 0 1-.49 1-1h2a3 3 0 0 1-3 3h-4l.001 2.062A8.001 8.001 0 0 1 19.998 15v6a1 1 0 0 1-1 1h-14a1 1 0 0 1-1-1v-6a8.001 8.001 0 0 1 7-7.938V5h-4c-1.66 0-3-1.34-3-3h2Zm6 7c-3.238 0-6 2.76-6 6v5h12v-5c0-3.238-2.762-6-6-6Zm0 2c.742 0 1.437.202 2.032.554l-2.74 2.739a1 1 0 0 0 1.32 1.497l.095-.083l2.74-2.739A4 4 0 1 1 11.998 11Z"/>`
	scanFillPath                  = `<path fill="currentColor" d="M4.257 5.671L12 13.414L13.414 12L5.671 4.257A9.959 9.959 0 0 1 12 2c5.523 0 10 4.477 10 10s-4.477 10-10 10S2 17.523 2 12c0-2.401.846-4.605 2.257-6.329Z"/>`
	scanLinePath                  = `<path fill="currentColor" d="M5.671 4.257L13.414 12L12 13.414l-6.32-6.32a8 8 0 1 0 3.706-2.658L7.85 2.9A9.963 9.963 0 0 1 12 2c5.523 0 10 4.477 10 10s-4.477 10-10 10S2 17.523 2 12a9.98 9.98 0 0 1 3.671-7.743Z"/>`
	scanTwoFillPath               = `<path fill="currentColor" d="m4.257 5.671l2.137 2.137a7 7 0 1 0 1.414-1.414L5.67 4.257A9.959 9.959 0 0 1 12 2c5.523 0 10 4.477 10 10s-4.477 10-10 10S2 17.523 2 12c0-2.401.846-4.605 2.257-6.329Zm3.571 3.572L12 13.414L13.414 12L9.243 7.828a5 5 0 1 1-1.414 1.414Z"/>`
	scanTwoLinePath               = `<path fill="currentColor" d="M5.671 4.257L13.414 12L12 13.414L8.554 9.968a4 4 0 1 0 3.696-1.96l-1.804-1.805a6 6 0 1 1-3.337 2.32L5.68 7.094a8 8 0 1 0 3.196-2.461L7.374 3.132A9.957 9.957 0 0 1 12 2c5.523 0 10 4.477 10 10s-4.477 10-10 10S2 17.523 2 12a9.98 9.98 0 0 1 3.671-7.743Z"/>`
	schoolFillPath                = `<path fill="currentColor" d="M23 19h-1V9h-4V6.586l-6-6l-6 6V9H2v10H1v2h22v-2ZM6 19H4v-8h2v8Zm12-8h2v8h-2v-8Zm-7 1h2v7h-2v-7Z"/>`
	schoolLinePath                = `<path fill="currentColor" d="m12 .586l6 6V9h4v10h1v2H1v-2h1V9h4V6.586l6-6ZM18 19h2v-8h-2v8ZM6 11H4v8h2v-8Zm2-3.586V19h3v-7h2v7h3V7.414l-4-4l-4 4Z"/>`
	scissorsCutFillPath           = `<path fill="currentColor" d="M9.879 11.997L7.562 9.68a4 4 0 1 1 2.121-2.121L12 9.875l6.374-6.374a2 2 0 0 1 2.829 0l.707.707L9.683 16.434a4 4 0 1 1-2.121-2.121l2.317-2.316ZM6 7.997a2 2 0 1 0 0-4a2 2 0 0 0 0 4Zm0 12a2 2 0 1 0 0-4a2 2 0 0 0 0 4Zm9.535-6.587l6.375 6.375l-.707.707a2 2 0 0 1-2.829 0l-4.96-4.96l2.12-2.122ZM16 10.997h2v2h-2v-2Zm4 0h2v2h-2v-2Zm-14 0h2v2H6v-2Zm-4 0h2v2H2v-2Z"/>`
	scissorsCutLinePath           = `<path fill="currentColor" d="M10 5.997c0 .732-.197 1.419-.54 2.01L12 10.581l6.728-6.728a2 2 0 0 1 2.828 0l-12.11 12.11a4 4 0 1 1-1.414-1.414l2.554-2.553l-2.554-2.554A4 4 0 1 1 10 5.997Zm-2 0a2 2 0 1 0-4 0a2 2 0 0 0 4 0Zm13.556 14.142a2 2 0 0 1-2.828 0l-5.317-5.317l1.415-1.414l6.73 6.73ZM16 10.997h2v2h-2v-2Zm4 0h2v2h-2v-2Zm-14 0h2v2H6v-2Zm-4 0h2v2H2v-2Zm4 9a2 2 0 1 0 0-4a2 2 0 0 0 0 4Z"/>`
	scissorsFillPath              = `<path fill="currentColor" d="M9.683 7.559L12 9.875l6.374-6.374a2 2 0 0 1 2.829 0l.707.707L9.683 16.434a4 4 0 1 1-2.121-2.121l2.317-2.316L7.562 9.68a4 4 0 1 1 2.121-2.121ZM6 7.997a2 2 0 1 0 0-4a2 2 0 0 0 0 4Zm0 12a2 2 0 1 0 0-4a2 2 0 0 0 0 4Zm9.535-6.587l6.375 6.375l-.707.707a2 2 0 0 1-2.829 0l-4.96-4.96l2.12-2.122Z"/>`
	scissorsLinePath              = `<path fill="currentColor" d="M9.446 8.029L12 10.582l6.728-6.728a2 2 0 0 1 2.828 0l-12.11 12.11a4 4 0 1 1-1.414-1.414l2.554-2.553l-2.554-2.554a4 4 0 1 1 1.414-1.414Zm5.38 5.379l6.73 6.73a2 2 0 0 1-2.828 0l-5.317-5.316l1.415-1.414Zm-7.412 3.174a2 2 0 1 0-2.828 2.828a2 2 0 0 0 2.828-2.828Zm0-9.171a2 2 0 1 0-2.828-2.828A2 2 0 0 0 7.414 7.41Z"/>`
	scissorsTwoFillPath           = `<path fill="currentColor" d="m12 14.118l-2.317 2.317a4 4 0 1 1-2.121-2.121l2.317-2.317L4.21 6.329a2 2 0 0 1 0-2.828l.708-.707L12 9.875l7.081-7.081l.708.707a2 2 0 0 1 0 2.828l-5.668 5.668l2.317 2.316a4 4 0 1 1-2.121 2.121L12 14.119Zm-6 5.879a2 2 0 1 0 0-4a2 2 0 0 0 0 4Zm12 0a2 2 0 1 0 0-4a2 2 0 0 0 0 4Z"/>`
	scissorsTwoLinePath           = `<path fill="currentColor" d="m12 13.41l-2.554 2.555a4 4 0 1 1-1.414-1.414l2.554-2.554l-6.021-6.021a2 2 0 0 1 0-2.829L12 10.582l7.435-7.435a2 2 0 0 1 0 2.829l-6.02 6.02l2.553 2.554a4 4 0 1 1-1.414 1.414L12 13.412Zm-6 6.587a2 2 0 1 0 0-4a2 2 0 0 0 0 4Zm12 0a2 2 0 1 0 0-4a2 2 0 0 0 0 4Z"/>`
	screenshotFillPath            = `<path fill="currentColor" d="m11.993 14.407l-1.552 1.552a4 4 0 1 1-1.418-1.41l1.555-1.556l-3.124-3.125a1.5 1.5 0 0 1 0-2.121l.354-.354l4.185 4.185l4.189-4.189l.353.354a1.5 1.5 0 0 1 0 2.12l-3.128 3.13l1.561 1.56a4 4 0 1 1-1.414 1.414l-1.561-1.56ZM19 13V5H5v8H3V4a1 1 0 0 1 1-1h16a1 1 0 0 1 1 1v9h-2ZM7 20a2 2 0 1 0 0-4a2 2 0 0 0 0 4Zm10 0a2 2 0 1 0 0-4a2 2 0 0 0 0 4Z"/>`
	screenshotLinePath            = `<path fill="currentColor" d="m11.993 14.407l-1.552 1.552a4 4 0 1 1-1.418-1.41l1.555-1.556l-4.185-4.185l1.415-1.415l4.185 4.185l4.189-4.189l1.414 1.414l-4.19 4.19l1.562 1.56a4 4 0 1 1-1.414 1.414l-1.561-1.56ZM7 20a2 2 0 1 0 0-4a2 2 0 0 0 0 4Zm10 0a2 2 0 1 0 0-4a2 2 0 0 0 0 4Zm2-7V5H5v8H3V4a1 1 0 0 1 1-1h16a1 1 0 0 1 1 1v9h-2Z"/>`
	screenshotTwoFillPath         = `<path fill="currentColor" d="M3 3h2v2H3V3Zm4 0h2v2H7V3Zm4 0h2v2h-2V3Zm4 0h2v2h-2V3Zm4 0h2v2h-2V3Zm0 4h2v2h-2V7ZM3 19h2v2H3v-2Zm0-4h2v2H3v-2Zm0-4h2v2H3v-2Zm0-4h2v2H3V7Zm7.667 4l1.036-1.555A1 1 0 0 1 12.535 9h2.93a1 1 0 0 1 .832.445L17.333 11H20a1 1 0 0 1 1 1v8a1 1 0 0 1-1 1H8a1 1 0 0 1-1-1v-8a1 1 0 0 1 1-1h2.667ZM14 18a2 2 0 1 0 0-4a2 2 0 0 0 0 4Z"/>`
	screenshotTwoLinePath         = `<path fill="currentColor" d="M3 3h2v2H3V3Zm4 0h2v2H7V3Zm4 0h2v2h-2V3Zm4 0h2v2h-2V3Zm4 0h2v2h-2V3Zm0 4h2v2h-2V7ZM3 19h2v2H3v-2Zm0-4h2v2H3v-2Zm0-4h2v2H3v-2Zm0-4h2v2H3V7Zm7.667 4l1.036-1.555A1 1 0 0 1 12.535 9h2.93a1 1 0 0 1 .832.445L17.333 11H20a1 1 0 0 1 1 1v8a1 1 0 0 1-1 1H8a1 1 0 0 1-1-1v-8a1 1 0 0 1 1-1h2.667ZM9 19h10v-6h-2.737l-1.333-2h-1.86l-1.333 2H9v6Zm5-1a2 2 0 1 1 0-4a2 2 0 0 1 0 4Z"/>`
	sdCardFillPath                = `<path fill="currentColor" d="M4.293 6.707L9 2h10a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V7.414a1 1 0 0 1 .293-.707ZM15 5v4h2V5h-2Zm-3 0v4h2V5h-2ZM9 5v4h2V5H9Z"/>`
	sdCardLinePath                = `<path fill="currentColor" d="M6 7.828V20h12V4H9.828L6 7.828Zm-1.707-1.12L9 2h10a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V7.414a1 1 0 0 1 .293-.707ZM15 5h2v4h-2V5Zm-3 0h2v4h-2V5ZM9 6h2v3H9V6Z"/>`
	sdCardMiniFillPath            = `<path fill="currentColor" d="M7 2h12a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-8.58a1 1 0 0 1 .292-.707l1.562-1.567A.5.5 0 0 0 6 9.793V3a1 1 0 0 1 1-1Zm8 2v4h2V4h-2Zm-3 0v4h2V4h-2ZM9 4v4h2V4H9Z"/>`
	sdCardMiniLinePath            = `<path fill="currentColor" d="M8 4v5.793a2.5 2.5 0 0 1-.73 1.765L6 12.833V20h12V4H8ZM7 2h12a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-8.58a1 1 0 0 1 .292-.707l1.562-1.567A.5.5 0 0 0 6 9.793V3a1 1 0 0 1 1-1Zm8 3h2v4h-2V5Zm-3 0h2v4h-2V5ZM9 5h2v4H9V5Z"/>`
	searchEyeFillPath             = `<path fill="currentColor" d="m18.031 16.617l4.283 4.282l-1.415 1.415l-4.282-4.283A8.96 8.96 0 0 1 11 20c-4.968 0-9-4.032-9-9s4.032-9 9-9s9 4.032 9 9a8.96 8.96 0 0 1-1.969 5.617Zm-5.853-9.44a4 4 0 1 0 2.646 2.646a2 2 0 1 1-2.646-2.647Z"/>`
	searchEyeLinePath             = `<path fill="currentColor" d="m18.031 16.617l4.283 4.282l-1.415 1.415l-4.282-4.283A8.96 8.96 0 0 1 11 20c-4.968 0-9-4.032-9-9s4.032-9 9-9s9 4.032 9 9a8.96 8.96 0 0 1-1.969 5.617Zm-2.006-.742A6.977 6.977 0 0 0 18 11c0-3.867-3.133-7-7-7s-7 3.133-7 7s3.133 7 7 7a6.977 6.977 0 0 0 4.875-1.975l.15-.15Zm-3.847-8.699a2 2 0 1 0 2.646 2.646a4 4 0 1 1-2.646-2.646Z"/>`
	searchFillPath                = `<path fill="currentColor" d="m18.031 16.617l4.283 4.282l-1.415 1.415l-4.282-4.283A8.96 8.96 0 0 1 11 20c-4.968 0-9-4.032-9-9s4.032-9 9-9s9 4.032 9 9a8.96 8.96 0 0 1-1.969 5.617Z"/>`
	searchLinePath                = `<path fill="currentColor" d="m18.031 16.617l4.283 4.282l-1.415 1.415l-4.282-4.283A8.96 8.96 0 0 1 11 20c-4.968 0-9-4.032-9-9s4.032-9 9-9s9 4.032 9 9a8.96 8.96 0 0 1-1.969 5.617Zm-2.006-.742A6.977 6.977 0 0 0 18 11c0-3.867-3.133-7-7-7s-7 3.133-7 7s3.133 7 7 7a6.977 6.977 0 0 0 4.875-1.975l.15-.15Z"/>`
	searchTwoFillPath             = `<path fill="currentColor" d="M11 2c4.968 0 9 4.032 9 9s-4.032 9-9 9s-9-4.032-9-9s4.032-9 9-9Zm8.485 16.071l2.829 2.828l-1.415 1.415l-2.828-2.829l1.414-1.414Z"/>`
	searchTwoLinePath             = `<path fill="currentColor" d="M11 2c4.968 0 9 4.032 9 9s-4.032 9-9 9s-9-4.032-9-9s4.032-9 9-9Zm0 16c3.867 0 7-3.133 7-7s-3.133-7-7-7s-7 3.133-7 7s3.133 7 7 7Zm8.485.071l2.829 2.828l-1.415 1.415l-2.828-2.829l1.414-1.414Z"/>`
	securePaymentFillPath         = `<path fill="currentColor" d="m11.005 2l7.298 2.28a1 1 0 0 1 .702.955V7h2a1 1 0 0 1 1 1v2h-13V8a1 1 0 0 1 1-1h7V5.97l-6-1.876l-6 1.876v7.404a4 4 0 0 0 1.558 3.169l.189.136l4.253 2.9L14.787 17h-4.782a1 1 0 0 1-1-1v-4h13v4a1 1 0 0 1-1 1l-3.22.001c-.387.51-.857.96-1.4 1.33L11.005 22l-5.38-3.668a6 6 0 0 1-2.62-4.958V5.235a1 1 0 0 1 .702-.954L11.005 2Z"/>`
	securePaymentLinePath         = `<path fill="currentColor" d="m11.005 2l7.298 2.28a1 1 0 0 1 .702.955V7h2a1 1 0 0 1 1 1v8a1 1 0 0 1-1 1l-3.22.001c-.387.51-.857.96-1.4 1.33L11.005 22l-5.38-3.668a6 6 0 0 1-2.62-4.958V5.235a1 1 0 0 1 .702-.954L11.005 2Zm0 2.094l-6 1.876v7.404a4 4 0 0 0 1.558 3.169l.189.136l4.253 2.9L14.787 17h-4.782a1 1 0 0 1-1-1V8a1 1 0 0 1 1-1h7V5.97l-6-1.876Zm0 7.906v3h9v-3h-9Zm0-2h9V9h-9v1Z"/>`
	seedlingFillPath              = `<path fill="currentColor" d="M21.998 7v2.5a6.5 6.5 0 0 1-6.5 6.5h-2.5v5h-2v-7l.019-1a6.5 6.5 0 0 1 6.481-6h4.5Zm-16-4a7.003 7.003 0 0 1 6.643 4.786A7.48 7.48 0 0 0 10.014 13H8.998a7 7 0 0 1-7-7V3h4Z"/>`
	seedlingLinePath              = `<path fill="currentColor" d="M5.998 3a7.002 7.002 0 0 1 6.913 5.895A6.479 6.479 0 0 1 17.498 7h4.5v2.5a6.5 6.5 0 0 1-6.5 6.5h-2.5v5h-2v-8h-2a7 7 0 0 1-7-7V3h4Zm14 6h-2.5a4.5 4.5 0 0 0-4.5 4.5v.5h2.5a4.5 4.5 0 0 0 4.5-4.5V9Zm-14-4h-2v1a5 5 0 0 0 5 5h2v-1a5 5 0 0 0-5-5Z"/>`
	sendBackwardPath              = `<path fill="currentColor" d="M14 3a1 1 0 0 1 1 1v5h5a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H10a1 1 0 0 1-1-1v-5H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h10Zm-1 2H5v8h4v-3a1 1 0 0 1 1-1h3V5Z"/>`
	sendPlaneFillPath             = `<path fill="currentColor" d="M1.946 9.316c-.522-.175-.526-.456.011-.635L21.043 2.32c.529-.176.832.12.684.638l-5.453 19.086c-.151.529-.456.547-.68.045L12 14l6-8l-8 6l-8.054-2.684Z"/>`
	sendPlaneLinePath             = `<path fill="currentColor" d="m21.726 2.957l-5.453 19.086c-.15.529-.475.553-.717.07L11 13L1.923 9.37c-.51-.205-.504-.51.034-.689L21.043 2.32c.528-.176.832.12.683.638Zm-2.69 2.14L6.811 9.17l5.637 2.255l3.04 6.081l3.546-12.41Z"/>`
	sendPlaneTwoFillPath          = `<path fill="currentColor" d="M3 13h6v-2H3V1.846a.5.5 0 0 1 .741-.438l18.462 10.154a.5.5 0 0 1 0 .876L3.741 22.593A.5.5 0 0 1 3 22.154V13Z"/>`
	sendPlaneTwoLinePath          = `<path fill="currentColor" d="M3.5 1.346a.5.5 0 0 1 .241.062l18.462 10.154a.5.5 0 0 1 0 .876L3.741 22.593A.5.5 0 0 1 3 22.154V1.846a.5.5 0 0 1 .5-.5ZM5 4.383V11h5v2H5v6.617L18.85 12L5 4.383Z"/>`
	sendToBackPath                = `<path fill="currentColor" d="M11 3a1 1 0 0 1 1 1v2h5a1 1 0 0 1 1 1v5h2a1 1 0 0 1 1 1v7a1 1 0 0 1-1 1h-7a1 1 0 0 1-1-1v-2H7a1 1 0 0 1-1-1v-5H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h7Zm5 5h-4v3a1 1 0 0 1-1 1H8v4h4v-3a1 1 0 0 1 1-1h3V8Z"/>`
	sensorFillPath                = `<path fill="currentColor" d="M6 8v2h12V8h-3V2h2v4h5v2h-2v12a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V8H2V6h5V2h2v6H6Zm7-6v6h-2V2h2Z"/>`
	sensorLinePath                = `<path fill="currentColor" d="M6 8v11h12V8h-3V2h2v4h5v2h-2v12a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V8H2V6h5V2h2v6H6Zm7-6v6h-2V2h2Z"/>`
	seoFillPath                   = `<path fill="currentColor" d="M8 3a7 7 0 0 0 0 14h1.07a7.06 7.06 0 0 1 0-2H8A5 5 0 0 1 8 5h8a5 5 0 0 1 4.9 6a7.021 7.021 0 0 1 1.426 2A7 7 0 0 0 16 3H8Zm3 13a5 5 0 1 1 9.172 2.757l2.535 2.536l-1.414 1.414l-2.536-2.535A5 5 0 0 1 11 16Z"/>`
	seoLinePath                   = `<path fill="currentColor" d="M8 3a7 7 0 0 0 0 14h1.07a7.06 7.06 0 0 1 0-2H8A5 5 0 0 1 8 5h8a5 5 0 0 1 4.9 6a7.021 7.021 0 0 1 1.426 2A7 7 0 0 0 16 3H8Zm8 10a3 3 0 1 0 0 6a3 3 0 0 0 0-6Zm-5 3a5 5 0 1 1 9.172 2.757l2.535 2.536l-1.414 1.414l-2.536-2.535A5 5 0 0 1 11 16Z"/>`
	separatorPath                 = `<path fill="currentColor" d="M2 11h2v2H2v-2Zm4 0h12v2H6v-2Zm14 0h2v2h-2v-2Z"/>`
	serverFillPath                = `<path fill="currentColor" d="M4 3h16a1 1 0 0 1 1 1v7H3V4a1 1 0 0 1 1-1ZM3 13h18v7a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1v-7Zm4 3v2h3v-2H7ZM7 6v2h3V6H7Z"/>`
	serverLinePath                = `<path fill="currentColor" d="M5 11h14V5H5v6Zm16-7v16a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h16a1 1 0 0 1 1 1Zm-2 9H5v6h14v-6ZM7 15h3v2H7v-2Zm0-8h3v2H7V7Z"/>`
	serviceFillPath               = `<path fill="currentColor" d="M14.121 10.48a1 1 0 0 0-1.414 0l-.707.707a2 2 0 0 1-2.828-2.829l5.63-5.632a6.5 6.5 0 0 1 6.377 10.568l-2.108 2.135l-4.95-4.95ZM3.161 4.47a6.503 6.503 0 0 1 8.009-.938L7.757 6.944a4 4 0 0 0 5.513 5.795l.144-.138l4.243 4.243l-4.243 4.242a2 2 0 0 1-2.828 0L3.16 13.662a6.5 6.5 0 0 1 0-9.193Z"/>`
	serviceLinePath               = `<path fill="currentColor" d="M3.161 4.47a6.5 6.5 0 0 1 8.84-.329a6.5 6.5 0 0 1 9.178 9.154l-7.765 7.791a2 2 0 0 1-2.719.102l-.11-.102l-7.764-7.79a6.5 6.5 0 0 1 .34-8.827Zm1.414 1.413a4.5 4.5 0 0 0-.146 6.211l.146.153L12 19.672l5.303-5.304l-3.535-3.535l-1.06 1.06a3 3 0 0 1-4.244-4.242l2.102-2.102a4.501 4.501 0 0 0-5.837.188l-.154.146Zm8.486 2.829a1 1 0 0 1 1.414 0l4.242 4.242l.708-.707a4.5 4.5 0 0 0-6.211-6.51l-.153.146l-3.182 3.182a1 1 0 0 0-.078 1.327l.078.088a1 1 0 0 0 1.327.077l.087-.077l1.768-1.768Z"/>`
	settingsFillPath              = `<path fill="currentColor" d="m12 1l9.5 5.5v11L12 23l-9.5-5.5v-11L12 1Zm0 14a3 3 0 1 0 0-6a3 3 0 0 0 0 6Z"/>`
	settingsFiveFillPath          = `<path fill="currentColor" d="M2.132 13.63a9.942 9.942 0 0 1 .001-3.26c1.101.026 2.092-.502 2.477-1.431c.385-.93.058-2.003-.74-2.763a9.942 9.942 0 0 1 2.306-2.307c.76.798 1.834 1.125 2.763.74c.93-.385 1.458-1.376 1.431-2.477a9.942 9.942 0 0 1 3.261 0c-.027 1.102.502 2.092 1.431 2.477c.93.385 2.003.058 2.763-.74a9.939 9.939 0 0 1 2.307 2.306c-.798.76-1.125 1.834-.74 2.764c.385.93 1.375 1.458 2.477 1.43a9.945 9.945 0 0 1 0 3.262c-1.102-.027-2.092.501-2.477 1.43c-.385.93-.058 2.004.74 2.764a9.939 9.939 0 0 1-2.306 2.306c-.76-.798-1.834-1.125-2.764-.74c-.93.385-1.458 1.376-1.43 2.478a9.94 9.94 0 0 1-3.262-.001c.027-1.101-.502-2.092-1.43-2.477c-.93-.385-2.004-.058-2.764.74a9.943 9.943 0 0 1-2.306-2.306c.798-.76 1.125-1.834.74-2.763c-.385-.93-1.376-1.458-2.478-1.431ZM12.001 15a3 3 0 1 0 0-6a3 3 0 0 0 0 6Z"/>`
	settingsFiveLinePath          = `<path fill="currentColor" d="M2.213 14.06a9.945 9.945 0 0 1 .001-4.12c1.11.131 2.079-.236 2.396-1.001c.316-.765-.109-1.71-.986-2.402a9.945 9.945 0 0 1 2.913-2.914c.692.878 1.637 1.303 2.402.986c.765-.317 1.133-1.286 1.002-2.396a9.945 9.945 0 0 1 4.12 0c-.131 1.11.236 2.08 1.001 2.396c.765.317 1.71-.108 2.402-.985a9.945 9.945 0 0 1 2.914 2.912c-.878.692-1.303 1.638-.986 2.403c.317.765 1.286 1.132 2.396 1.001a9.944 9.944 0 0 1 0 4.12c-1.11-.13-2.08.237-2.396 1.002c-.317.764.108 1.71.985 2.402a9.947 9.947 0 0 1-2.912 2.914c-.693-.878-1.638-1.304-2.403-.987c-.765.317-1.132 1.286-1.001 2.397a9.944 9.944 0 0 1-4.12-.001c.13-1.11-.237-2.079-1.002-2.396c-.765-.317-1.71.109-2.402.986a9.944 9.944 0 0 1-2.914-2.913c.878-.692 1.303-1.637.987-2.402c-.317-.765-1.286-1.133-2.397-1.002Zm1.788-1.85c1.1.305 2.007 1.002 2.456 2.086c.45 1.085.3 2.22-.262 3.212c.097.102.196.201.298.298c.993-.563 2.127-.712 3.212-.262c1.084.449 1.78 1.356 2.085 2.456c.14.004.28.004.42 0c.305-1.1 1.002-2.007 2.087-2.456c1.084-.45 2.219-.3 3.212.262c.101-.097.2-.196.297-.298c-.562-.993-.711-2.127-.262-3.212c.45-1.084 1.357-1.781 2.456-2.085c.004-.14.004-.28 0-.421c-1.1-.304-2.007-1.001-2.456-2.086c-.45-1.084-.3-2.22.262-3.212a7.852 7.852 0 0 0-.297-.297c-.993.562-2.128.711-3.212.262C13.212 6.007 12.515 5.1 12.21 4a7.938 7.938 0 0 0-.42 0c-.305 1.1-1.002 2.008-2.086 2.457c-1.085.45-2.22.3-3.212-.262a7.586 7.586 0 0 0-.298.297c.563.993.712 2.128.262 3.212C6.007 10.789 5.1 11.485 4 11.79c-.004.14-.004.28 0 .42ZM12 15a3 3 0 1 1 0-6a3 3 0 0 1 0 6Zm0-2a1 1 0 1 0 0-2a1 1 0 0 0 0 2Z"/>`
	settingsFourFillPath          = `<path fill="currentColor" d="M5.334 4.545a9.99 9.99 0 0 1 3.542-2.048A3.993 3.993 0 0 0 12 4a3.993 3.993 0 0 0 3.124-1.502a9.99 9.99 0 0 1 3.542 2.048A3.993 3.993 0 0 0 18.928 8a3.993 3.993 0 0 0 2.863 1.955a10.038 10.038 0 0 1 0 4.09c-1.16.178-2.23.86-2.863 1.955a3.993 3.993 0 0 0-.262 3.455a9.988 9.988 0 0 1-3.542 2.047A3.993 3.993 0 0 0 12 20a3.993 3.993 0 0 0-3.124 1.503a9.988 9.988 0 0 1-3.542-2.048A3.992 3.992 0 0 0 5.072 16a3.993 3.993 0 0 0-2.863-1.954a10.043 10.043 0 0 1 0-4.091A3.993 3.993 0 0 0 5.072 8a3.993 3.993 0 0 0 .262-3.454ZM13.5 14.597a3 3 0 1 0-3-5.196a3 3 0 0 0 3 5.196Z"/>`
	settingsFourLinePath          = `<path fill="currentColor" d="M2 12c0-.865.11-1.704.316-2.504A3 3 0 0 0 4.99 4.867a9.99 9.99 0 0 1 4.335-2.506a3 3 0 0 0 5.348 0a9.99 9.99 0 0 1 4.335 2.506a3 3 0 0 0 2.675 4.63c.206.8.316 1.638.316 2.503c0 .864-.11 1.703-.316 2.503a3 3 0 0 0-2.675 4.63a9.99 9.99 0 0 1-4.335 2.505a3 3 0 0 0-5.348 0a9.99 9.99 0 0 1-4.335-2.505a3 3 0 0 0-2.675-4.63C2.11 13.703 2 12.864 2 12Zm4.804 3c.63 1.091.81 2.346.564 3.524c.408.29.842.541 1.297.75A4.993 4.993 0 0 1 12 18c1.26 0 2.438.471 3.335 1.274c.455-.209.889-.46 1.297-.75A4.993 4.993 0 0 1 17.196 15a4.993 4.993 0 0 1 2.77-2.25a8.142 8.142 0 0 0 0-1.5A4.993 4.993 0 0 1 17.195 9a4.993 4.993 0 0 1-.564-3.524a7.991 7.991 0 0 0-1.297-.75A4.993 4.993 0 0 1 12 6a4.993 4.993 0 0 1-3.335-1.274a7.99 7.99 0 0 0-1.297.75A4.993 4.993 0 0 1 6.804 9a4.993 4.993 0 0 1-2.77 2.25a8.125 8.125 0 0 0 0 1.5A4.993 4.993 0 0 1 6.805 15ZM12 15a3 3 0 1 1 0-6a3 3 0 0 1 0 6Zm0-2a1 1 0 1 0 0-2a1 1 0 0 0 0 2Z"/>`
	settingsLinePath              = `<path fill="currentColor" d="m12 1l9.5 5.5v11L12 23l-9.5-5.5v-11L12 1Zm0 2.311L4.5 7.653v8.694l7.5 4.342l7.5-4.342V7.653L12 3.311ZM12 16a4 4 0 1 1 0-8a4 4 0 0 1 0 8Zm0-2a2 2 0 1 0 0-4a2 2 0 0 0 0 4Z"/>`
	settingsSixFillPath           = `<path fill="currentColor" d="M17.5 2.474L23 12l-5.5 9.526h-11L1 12l5.5-9.526h11ZM8.634 8.17l5 8.66l1.732-1l-5-8.66l-1.732 1Z"/>`
	settingsSixLinePath           = `<path fill="currentColor" d="M17.5 2.474L23 12l-5.5 9.526h-11L1 12l5.5-9.526h11Zm-1.155 2h-8.69L3.309 12l4.346 7.526h8.69L20.691 12l-4.346-7.526ZM8.634 8.17l1.732-1l5 8.66l-1.732 1l-5-8.66Z"/>`
	settingsThreeFillPath         = `<path fill="currentColor" d="M9.954 2.21a9.99 9.99 0 0 1 4.09-.002A3.993 3.993 0 0 0 16 5.07a3.992 3.992 0 0 0 3.457.261A9.988 9.988 0 0 1 21.5 8.877a3.992 3.992 0 0 0-1.5 3.122c0 1.264.586 2.391 1.501 3.124a10.042 10.042 0 0 1-2.045 3.543a3.992 3.992 0 0 0-3.456.261a3.993 3.993 0 0 0-1.955 2.86a9.99 9.99 0 0 1-4.09.004A3.993 3.993 0 0 0 8 18.927a3.992 3.992 0 0 0-3.457-.26A9.99 9.99 0 0 1 2.5 15.121A3.992 3.992 0 0 0 4 11.999c0-1.264-.587-2.39-1.502-3.124a10.043 10.043 0 0 1 2.045-3.542A3.993 3.993 0 0 0 8 5.07a3.993 3.993 0 0 0 1.954-2.86ZM12 15a3 3 0 1 0 0-6a3 3 0 0 0 0 6Z"/>`
	settingsThreeLinePath         = `<path fill="currentColor" d="M3.34 17a10.017 10.017 0 0 1-.979-2.326a3 3 0 0 0 .003-5.347a9.99 9.99 0 0 1 2.5-4.337a3 3 0 0 0 4.632-2.674a9.99 9.99 0 0 1 5.007.003a3 3 0 0 0 4.632 2.671a10.056 10.056 0 0 1 2.503 4.336a3 3 0 0 0-.002 5.347a9.99 9.99 0 0 1-2.501 4.337a3 3 0 0 0-4.632 2.674a9.99 9.99 0 0 1-5.007-.002a3 3 0 0 0-4.631-2.672A10.018 10.018 0 0 1 3.339 17Zm5.66.196a4.992 4.992 0 0 1 2.25 2.77c.499.047 1 .048 1.499.002a4.993 4.993 0 0 1 2.25-2.772a4.993 4.993 0 0 1 3.526-.564c.29-.408.54-.843.748-1.298A4.993 4.993 0 0 1 18 12c0-1.26.47-2.437 1.273-3.334a8.152 8.152 0 0 0-.75-1.298A4.993 4.993 0 0 1 15 6.804a4.993 4.993 0 0 1-2.25-2.77c-.5-.047-1-.048-1.5-.001A4.993 4.993 0 0 1 9 6.804a4.993 4.993 0 0 1-3.526.564c-.29.408-.54.843-.747 1.298A4.993 4.993 0 0 1 6 12c0 1.26-.471 2.437-1.273 3.334a8.16 8.16 0 0 0 .75 1.298A4.993 4.993 0 0 1 9 17.196ZM12 15a3 3 0 1 1 0-6a3 3 0 0 1 0 6Zm0-2a1 1 0 1 0 0-2a1 1 0 0 0 0 2Z"/>`
	settingsTwoFillPath           = `<path fill="currentColor" d="m8.687 4l2.607-2.607a1 1 0 0 1 1.414 0L15.315 4H19a1 1 0 0 1 1 1v3.686l2.607 2.607a1 1 0 0 1 0 1.414L20 15.314V19a1 1 0 0 1-1 1h-3.686l-2.607 2.607a1 1 0 0 1-1.414 0L8.687 20H5.001a1 1 0 0 1-1-1v-3.686l-2.607-2.607a1 1 0 0 1 0-1.414l2.607-2.607V5a1 1 0 0 1 1-1h3.686Zm3.314 11a3 3 0 1 0 0-6a3 3 0 0 0 0 6Z"/>`
	settingsTwoLinePath           = `<path fill="currentColor" d="m8.687 4l2.607-2.607a1 1 0 0 1 1.414 0L15.315 4H19a1 1 0 0 1 1 1v3.686l2.607 2.607a1 1 0 0 1 0 1.414L20 15.314V19a1 1 0 0 1-1 1h-3.686l-2.607 2.607a1 1 0 0 1-1.414 0L8.687 20H5.001a1 1 0 0 1-1-1v-3.686l-2.607-2.607a1 1 0 0 1 0-1.414l2.607-2.607V5a1 1 0 0 1 1-1h3.686ZM6.001 6v3.515L3.516 12L6 14.485V18h3.515L12 20.485L14.486 18h3.515v-3.515L20.486 12l-2.485-2.485V6h-3.515l-2.485-2.485L9.516 6H6Zm6 10a4 4 0 1 1 0-8a4 4 0 0 1 0 8Zm0-2a2 2 0 1 0 0-4a2 2 0 0 0 0 4Z"/>`
	shakeHandsFillPath            = `<path fill="currentColor" d="M19.291 6h.71a1 1 0 0 1 1 1v7a1 1 0 0 1-1 1h-2l-4.17-5.836a2 2 0 0 0-2.201-.753l-2.486.746a2 2 0 0 1-1.988-.502l-.293-.293a1 1 0 0 1 .152-1.539l5.401-3.6a2 2 0 0 1 2.183-.024l4.156 2.645A1 1 0 0 0 19.29 6ZM5.027 14.295l-1.616 1.414a1 1 0 0 0 .041 1.538l5.14 4.04a1 1 0 0 0 1.487-.29l.704-1.232a2 2 0 0 0-.257-2.338l-2.702-2.973a2 2 0 0 0-2.797-.16ZM7.046 5H3a1 1 0 0 0-1 1v7.516a2 2 0 0 0 .35 1.13a2.61 2.61 0 0 1 .074-.066l1.615-1.414a3.5 3.5 0 0 1 4.895.28l2.702 2.972a3.5 3.5 0 0 1 .45 4.09l-.655 1.146a2 2 0 0 0 1.738-.155l4.41-2.646a1 1 0 0 0 .299-1.438l-5.267-7.379a.5.5 0 0 0-.55-.188l-2.486.745a3.5 3.5 0 0 1-3.48-.877l-.293-.293a2.5 2.5 0 0 1 .38-3.848L7.047 5Z"/>`
	shakeHandsLinePath            = `<path fill="currentColor" d="M11.861 2.39a3 3 0 0 1 3.275-.034L19.29 5H21a1 1 0 0 1 1 1v9a1 1 0 0 1-1 1h-1.52a2.65 2.65 0 0 1-1.285 2.449l-5.093 3.056a2 2 0 0 1-2.07-.008a2 2 0 0 1-2.561.073l-5.14-4.039a2.001 2.001 0 0 1-.565-2.446A2 2 0 0 1 2 13.51V6a1 1 0 0 1 1-1h4.947l3.914-2.61ZM4.173 13.646l.692-.605a3 3 0 0 1 4.195.24l2.702 2.972a3 3 0 0 1 .396 3.487l5.008-3.005a.657.657 0 0 0 .279-.79l-4.427-6.198a1 1 0 0 0-1.101-.377l-2.486.745a3 3 0 0 1-2.983-.752l-.293-.292A1.997 1.997 0 0 1 5.68 7H4v6.51l.173.135Zm9.89-9.602a1 1 0 0 0-1.093.012l-5.4 3.6l.292.293a1 1 0 0 0 .995.25l2.485-.745a3 3 0 0 1 3.303 1.13L18.515 14H20V7h-.709a2 2 0 0 1-1.074-.313l-4.155-2.644ZM6.181 14.545l-1.616 1.414l5.14 4.039l.705-1.232a1 1 0 0 0-.129-1.169L7.58 14.625a1 1 0 0 0-1.398-.08Z"/>`
	shapeFillPath                 = `<path fill="currentColor" d="M5 8a3 3 0 1 1 0-6a3 3 0 0 1 0 6Zm14 0a3 3 0 1 1 0-6a3 3 0 0 1 0 6Zm0 14a3 3 0 1 1 0-6a3 3 0 0 1 0 6ZM5 22a3 3 0 1 1 0-6a3 3 0 0 1 0 6ZM9 4h6v2H9V4Zm0 14h6v2H9v-2ZM4 9h2v6H4V9Zm14 0h2v6h-2V9Z"/>`
	shapeLinePath                 = `<path fill="currentColor" d="M7.83 20A3.001 3.001 0 1 1 4 16.17V7.83A3.001 3.001 0 1 1 7.83 4h8.34A3.001 3.001 0 1 1 20 7.83v8.34A3.001 3.001 0 1 1 16.17 20H7.83Zm0-2h8.34A3.009 3.009 0 0 1 18 16.17V7.83A3.008 3.008 0 0 1 16.17 6H7.83A3.008 3.008 0 0 1 6 7.83v8.34A3.008 3.008 0 0 1 7.83 18ZM5 6a1 1 0 1 0 0-2a1 1 0 0 0 0 2Zm14 0a1 1 0 1 0 0-2a1 1 0 0 0 0 2Zm0 14a1 1 0 1 0 0-2a1 1 0 0 0 0 2ZM5 20a1 1 0 1 0 0-2a1 1 0 0 0 0 2Z"/>`
	shapeTwoFillPath              = `<path fill="currentColor" d="M2 2h5v5H2V2Zm0 15h5v5H2v-5ZM17 2h5v5h-5V2Zm0 15h5v5h-5v-5ZM8 4h8v2H8V4ZM4 8h2v8H4V8Zm14 0h2v8h-2V8ZM8 18h8v2H8v-2Z"/>`
	shapeTwoLinePath              = `<path fill="currentColor" d="M20 16h2v6h-6v-2H8v2H2v-6h2V8H2V2h6v2h8V2h6v6h-2v8Zm-2 0V8h-2V6H8v2H6v8h2v2h8v-2h2ZM4 4v2h2V4H4Zm0 14v2h2v-2H4ZM18 4v2h2V4h-2Zm0 14v2h2v-2h-2Z"/>`
	shapesFillPath                = `<path fill="currentColor" d="m12 1l6 10H6l6-10Zm1 12.5h8v8h-8v-8ZM6.75 22a4.75 4.75 0 1 0 0-9.5a4.75 4.75 0 0 0 0 9.5Z"/>`
	shapesLinePath                = `<path fill="currentColor" d="M12 1L6 11h12L12 1Zm0 3.887L14.468 9H9.532L12 4.887ZM6.75 20a2.75 2.75 0 1 1 0-5.5a2.75 2.75 0 0 1 0 5.5Zm0 2a4.75 4.75 0 1 0 0-9.5a4.75 4.75 0 0 0 0 9.5ZM15 15.5v4h4v-4h-4Zm-2 6v-8h8v8h-8Z"/>`
	shareBoxFillPath              = `<path fill="currentColor" d="M10 3v2H5v14h14v-5h2v6a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h6Zm7.707 4.707L12 13.414L10.586 12l5.707-5.707L13 3h8v8l-3.293-3.293Z"/>`
	shareBoxLinePath              = `<path fill="currentColor" d="M10 3v2H5v14h14v-5h2v6a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h6Zm7.586 2H13V3h8v8h-2V6.414l-7 7L10.586 12l7-7Z"/>`
	shareCircleFillPath           = `<path fill="currentColor" d="M11 2.05v2.012A8.001 8.001 0 0 0 12 20a8.001 8.001 0 0 0 7.938-7h2.013c-.502 5.053-4.766 9-9.951 9c-5.523 0-10-4.477-10-10c0-5.185 3.947-9.449 9-9.95Zm7.707 4.657L12 13.414L10.586 12l6.707-6.707L14 2h8v8l-3.293-3.293Z"/>`
	shareCircleLinePath           = `<path fill="currentColor" d="M11 2.05v2.012A8.001 8.001 0 0 0 12 20a8.001 8.001 0 0 0 7.938-7h2.013c-.502 5.053-4.766 9-9.951 9c-5.523 0-10-4.477-10-10c0-5.185 3.947-9.449 9-9.95Zm9 3.364l-8 8L10.586 12l8-8H14V2h8v8h-2V5.414Z"/>`
	shareFillPath                 = `<path fill="currentColor" d="m13.576 17.271l-5.11-2.787a3.5 3.5 0 1 1 0-4.968l5.11-2.787a3.5 3.5 0 1 1 .958 1.755l-5.11 2.787a3.514 3.514 0 0 1 0 1.457l5.11 2.788a3.5 3.5 0 1 1-.958 1.755Z"/>`
	shareForwardBoxFillPath       = `<path fill="currentColor" d="M9 3v2H4v14h16v-9h2v10a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h6Zm7 2V1l7 6h-9a2 2 0 0 0-2 2v6h-2V9a4 4 0 0 1 4-4h2Z"/>`
	shareForwardBoxLinePath       = `<path fill="currentColor" d="M9 3v2H4v14h16v-9h2v10a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h6Zm9.95 2L16 2.05L17.414.636l5.34 5.34A.6.6 0 0 1 22.33 7H14a2 2 0 0 0-2 2v6h-2V9a4 4 0 0 1 4-4h4.95Z"/>`
	shareForwardFillPath          = `<path fill="currentColor" d="M13 14h-2a8.999 8.999 0 0 0-7.968 4.81A10.133 10.133 0 0 1 3 18C3 12.477 7.477 8 13 8V3l10 8l-10 8v-5Z"/>`
	shareForwardLinePath          = `<path fill="currentColor" d="M13 14h-2a8.999 8.999 0 0 0-7.968 4.81A10.133 10.133 0 0 1 3 18C3 12.477 7.477 8 13 8V2.5L23.5 11L13 19.5V14Zm-2-2h4v3.308L20.321 11L15 6.692V10h-2a7.982 7.982 0 0 0-6.057 2.774A10.987 10.987 0 0 1 11 12Z"/>`
	shareForwardTwoFillPath       = `<path fill="currentColor" d="M4 19h16v-5h2v6a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1v-6h2v5Zm8-9H9a5.992 5.992 0 0 0-4.854 2.473A8.003 8.003 0 0 1 12 6V2l8 6l-8 6v-4Z"/>`
	shareForwardTwoLinePath       = `<path fill="currentColor" d="M4 19h16v-5h2v6a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1v-6h2v5ZM16.172 7l-3.95-3.95l1.414-1.414L20 8l-6.364 6.364l-1.414-1.415L16.172 9H5V7h11.172Z"/>`
	shareLinePath                 = `<path fill="currentColor" d="m13.12 17.023l-4.199-2.29a4 4 0 1 1 0-5.465l4.2-2.29a4 4 0 1 1 .958 1.755l-4.2 2.29a4.008 4.008 0 0 1 0 1.954l4.2 2.29a4 4 0 1 1-.959 1.755ZM6 14a2 2 0 1 0 0-4a2 2 0 0 0 0 4Zm11-6a2 2 0 1 0 0-4a2 2 0 0 0 0 4Zm0 12a2 2 0 1 0 0-4a2 2 0 0 0 0 4Z"/>`
	shieldCheckFillPath           = `<path fill="currentColor" d="m12 1l8.217 1.826a1 1 0 0 1 .783.976v9.987a6 6 0 0 1-2.672 4.992L12 23l-6.328-4.219A6 6 0 0 1 3 13.79V3.802a1 1 0 0 1 .783-.976L12 1Zm4.452 7.222l-4.95 4.949l-2.828-2.828l-1.414 1.414L11.503 16l6.364-6.364l-1.415-1.414Z"/>`
	shieldCheckLinePath           = `<path fill="currentColor" d="m12 1l8.217 1.826a1 1 0 0 1 .783.976v9.987a6 6 0 0 1-2.672 4.992L12 23l-6.328-4.219A6 6 0 0 1 3 13.79V3.802a1 1 0 0 1 .783-.976L12 1Zm0 2.049L5 4.604v9.185a4 4 0 0 0 1.781 3.328L12 20.597l5.219-3.48A4 4 0 0 0 19 13.79V4.604L12 3.05Zm4.452 5.173l1.415 1.414L11.503 16L7.26 11.757l1.414-1.414l2.828 2.828l4.95-4.95Z"/>`
	shieldCrossFillPath           = `<path fill="currentColor" d="M3.783 2.826L12 1l8.217 1.826a1 1 0 0 1 .783.976v9.987a6 6 0 0 1-2.672 4.992L12 23l-6.328-4.219A6 6 0 0 1 3 13.79V3.802a1 1 0 0 1 .783-.976ZM11 10H8v2h3v3h2v-3h3v-2h-3V7h-2v3Z"/>`
	shieldCrossLinePath           = `<path fill="currentColor" d="M3.783 2.826L12 1l8.217 1.826a1 1 0 0 1 .783.976v9.987a6 6 0 0 1-2.672 4.992L12 23l-6.328-4.219A6 6 0 0 1 3 13.79V3.802a1 1 0 0 1 .783-.976ZM5 4.604v9.185a4 4 0 0 0 1.781 3.328L12 20.597l5.219-3.48A4 4 0 0 0 19 13.79V4.604L12 3.05L5 4.604ZM11 10V7h2v3h3v2h-3v3h-2v-3H8v-2h3Z"/>`
	shieldFillPath                = `<path fill="currentColor" d="M3.783 2.826L12 1l8.217 1.826a1 1 0 0 1 .783.976v9.987a6 6 0 0 1-2.672 4.992L12 23l-6.328-4.219A6 6 0 0 1 3 13.79V3.802a1 1 0 0 1 .783-.976Z"/>`
	shieldFlashFillPath           = `<path fill="currentColor" d="M3.783 2.826L12 1l8.217 1.826a1 1 0 0 1 .783.976v9.987a6 6 0 0 1-2.672 4.992L12 23l-6.328-4.219A6 6 0 0 1 3 13.79V3.802a1 1 0 0 1 .783-.976ZM13 10V5l-5 7h3v5l5-7h-3Z"/>`
	shieldFlashLinePath           = `<path fill="currentColor" d="M3.783 2.826L12 1l8.217 1.826a1 1 0 0 1 .783.976v9.987a6 6 0 0 1-2.672 4.992L12 23l-6.328-4.219A6 6 0 0 1 3 13.79V3.802a1 1 0 0 1 .783-.976ZM5 4.604v9.185a4 4 0 0 0 1.781 3.328L12 20.597l5.219-3.48A4 4 0 0 0 19 13.79V4.604L12 3.05L5 4.604ZM13 10h3l-5 7v-5H8l5-7v5Z"/>`
	shieldKeyholeFillPath         = `<path fill="currentColor" d="m12 1l8.217 1.826a1 1 0 0 1 .783.976v9.987a6 6 0 0 1-2.672 4.992L12 23l-6.328-4.219A6 6 0 0 1 3 13.79V3.802a1 1 0 0 1 .783-.976L12 1Zm0 6a2 2 0 0 0-1 3.732V15h2l.001-4.268A2 2 0 0 0 12 7Z"/>`
	shieldKeyholeLinePath         = `<path fill="currentColor" d="m12 1l8.217 1.826a1 1 0 0 1 .783.976v9.987a6 6 0 0 1-2.672 4.992L12 23l-6.328-4.219A6 6 0 0 1 3 13.79V3.802a1 1 0 0 1 .783-.976L12 1Zm0 2.049L5 4.604v9.185a4 4 0 0 0 1.781 3.328L12 20.597l5.219-3.48A4 4 0 0 0 19 13.79V4.604L12 3.05ZM12 7a2 2 0 0 1 1.001 3.732L13 15h-2v-4.268A2 2 0 0 1 12 7Z"/>`
	shieldLinePath                = `<path fill="currentColor" d="M3.783 2.826L12 1l8.217 1.826a1 1 0 0 1 .783.976v9.987a6 6 0 0 1-2.672 4.992L12 23l-6.328-4.219A6 6 0 0 1 3 13.79V3.802a1 1 0 0 1 .783-.976ZM5 4.604v9.185a4 4 0 0 0 1.781 3.328L12 20.597l5.219-3.48A4 4 0 0 0 19 13.79V4.604L12 3.05L5 4.604Z"/>`
	shieldStarFillPath            = `<path fill="currentColor" d="M3.783 2.826L12 1l8.217 1.826a1 1 0 0 1 .783.976v9.987a6 6 0 0 1-2.672 4.992L12 23l-6.328-4.219A6 6 0 0 1 3 13.79V3.802a1 1 0 0 1 .783-.976ZM12 13.5l2.939 1.545l-.561-3.272l2.377-2.318l-3.285-.478L12 6l-1.47 2.977l-3.285.478l2.377 2.318l-.56 3.272L12 13.5Z"/>`
	shieldStarLinePath            = `<path fill="currentColor" d="M5 4.604v9.185a4 4 0 0 0 1.781 3.328L12 20.597l5.219-3.48A4 4 0 0 0 19 13.79V4.604L12 3.05L5 4.604ZM3.783 2.826L12 1l8.217 1.826a1 1 0 0 1 .783.976v9.987a6 6 0 0 1-2.672 4.992L12 23l-6.328-4.219A6 6 0 0 1 3 13.79V3.802a1 1 0 0 1 .783-.976ZM12 13.5l-2.939 1.545l.561-3.272l-2.377-2.318l3.285-.478L12 6l1.47 2.977l3.285.478l-2.377 2.318l.56 3.272L12 13.5Z"/>`
	shieldUserFillPath            = `<path fill="currentColor" d="M3.783 2.826L12 1l8.217 1.826a1 1 0 0 1 .783.976v9.987a6 6 0 0 1-2.672 4.992L12 23l-6.328-4.219A6 6 0 0 1 3 13.79V3.802a1 1 0 0 1 .783-.976ZM12 11a2.5 2.5 0 1 0 0-5a2.5 2.5 0 0 0 0 5Zm-4.473 5h8.945a4.5 4.5 0 0 0-8.945 0Z"/>`
	shieldUserLinePath            = `<path fill="currentColor" d="M3.783 2.826L12 1l8.217 1.826a1 1 0 0 1 .783.976v9.987a6 6 0 0 1-2.672 4.992L12 23l-6.328-4.219A6 6 0 0 1 3 13.79V3.802a1 1 0 0 1 .783-.976ZM5 4.604v9.185a4 4 0 0 0 1.781 3.328L12 20.597l5.219-3.48A4 4 0 0 0 19 13.79V4.604L12 3.05L5 4.604ZM12 11a2.5 2.5 0 1 1 0-5a2.5 2.5 0 0 1 0 5Zm-4.473 5a4.5 4.5 0 0 1 8.945 0H7.527Z"/>`
	shiningFillPath               = `<path fill="currentColor" d="M1 11c5.523 0 10-4.477 10-10h2c0 5.523 4.477 10 10 10v2c-5.523 0-10 4.477-10 10h-2c0-5.523-4.477-10-10-10v-2Z"/>`
	shiningLinePath               = `<path fill="currentColor" d="M1 11c5.523 0 10-4.477 10-10h2c0 5.523 4.477 10 10 10v2c-5.523 0-10 4.477-10 10h-2c0-5.523-4.477-10-10-10v-2Zm4.803 1A12.044 12.044 0 0 1 12 18.197A12.043 12.043 0 0 1 18.197 12A12.044 12.044 0 0 1 12 5.803A12.044 12.044 0 0 1 5.803 12Z"/>`
	shiningTwoFillPath            = `<path fill="currentColor" d="M12 .5L16 8l7.5 4l-7.5 4l-4 7.5L8 16L.5 12L8 8l4-7.5Z"/>`
	shiningTwoLinePath            = `<path fill="currentColor" d="m16 8l7.5 4l-7.5 4l-4 7.5L8 16L.5 12L8 8l4-7.5L16 8Zm3.25 4l-4.728-2.522L12 4.75L9.478 9.478L4.75 12l4.728 2.522L12 19.25l2.522-4.728L19.25 12Z"/>`
	shipFillPath                  = `<path fill="currentColor" d="M4 10.4V4a1 1 0 0 1 1-1h5V1h4v2h5a1 1 0 0 1 1 1v6.4l1.086.326a1 1 0 0 1 .683 1.2l-1.517 6.068A4.992 4.992 0 0 1 16 16a4.992 4.992 0 0 1-4 2a4.992 4.992 0 0 1-4-2a4.992 4.992 0 0 1-4.252 1.994l-1.516-6.068a1 1 0 0 1 .682-1.2L4 10.4Zm2-.6L12 8l2.754.826l1.809.543L18 9.8V5H6v4.8ZM4 20a5.978 5.978 0 0 0 4-1.528A5.978 5.978 0 0 0 12 20a5.978 5.978 0 0 0 4-1.528A5.978 5.978 0 0 0 20 20h2v2h-2a7.963 7.963 0 0 1-4-1.07A7.963 7.963 0 0 1 12 22a7.963 7.963 0 0 1-4-1.07A7.963 7.963 0 0 1 4 22H2v-2h2Z"/>`
	shipLinePath                  = `<path fill="currentColor" d="M4 10.4V4a1 1 0 0 1 1-1h5V1h4v2h5a1 1 0 0 1 1 1v6.4l1.086.326a1 1 0 0 1 .683 1.2l-1.517 6.068a4.99 4.99 0 0 1-1.902-.273l1.25-5.351L12 10l-7.6 2.37l1.25 5.351a4.99 4.99 0 0 1-1.902.273l-1.516-6.068a1 1 0 0 1 .682-1.2L4 10.4Zm2-.6L12 8l6 1.8V5H6v4.8ZM4 20a5.978 5.978 0 0 0 4-1.528A5.978 5.978 0 0 0 12 20a5.978 5.978 0 0 0 4-1.528A5.978 5.978 0 0 0 20 20h2v2h-2a7.963 7.963 0 0 1-4-1.07A7.963 7.963 0 0 1 12 22a7.963 7.963 0 0 1-4-1.07A7.963 7.963 0 0 1 4 22H2v-2h2Z"/>`
	shipTwoFillPath               = `<path fill="currentColor" d="M9 4h5.446a1 1 0 0 1 .848.47L18.75 10h4.408a.5.5 0 0 1 .439.74l-3.937 7.217A4.992 4.992 0 0 1 15 16a4.992 4.992 0 0 1-4 2a4.992 4.992 0 0 1-4-2a4.992 4.992 0 0 1-4.55 1.97l-1.236-6.791A1 1 0 0 1 2.198 10H3V5a1 1 0 0 1 1-1h1V1h4v3Zm-4 6h11.392l-2.5-4H5v4ZM3 20a5.978 5.978 0 0 0 4-1.528A5.978 5.978 0 0 0 11 20a5.978 5.978 0 0 0 4-1.528A5.978 5.978 0 0 0 19 20h2v2h-2a7.963 7.963 0 0 1-4-1.07A7.963 7.963 0 0 1 11 22a7.963 7.963 0 0 1-4-1.07A7.963 7.963 0 0 1 3 22H1v-2h2Z"/>`
	shipTwoLinePath               = `<path fill="currentColor" d="M9 4h5.446a1 1 0 0 1 .848.47L18.75 10h4.408a.5.5 0 0 1 .439.74L19.637 18H19a6.01 6.01 0 0 1-1.535-.198L20.63 12H3.4l1.048 5.824A6.012 6.012 0 0 1 3 18h-.545l-1.24-6.821A1 1 0 0 1 2.197 10H3V5a1 1 0 0 1 1-1h1V1h4v3Zm-4 6h11.392l-2.5-4H5v4ZM3 20a5.978 5.978 0 0 0 4-1.528A5.978 5.978 0 0 0 11 20a5.978 5.978 0 0 0 4-1.528A5.978 5.978 0 0 0 19 20h2v2h-2a7.963 7.963 0 0 1-4-1.07A7.963 7.963 0 0 1 11 22a7.963 7.963 0 0 1-4-1.07A7.963 7.963 0 0 1 3 22H1v-2h2Z"/>`
	shirtFillPath                 = `<path fill="currentColor" d="M6.998 4v7l5-2.5l5 2.5V4h3a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1h-16a1 1 0 0 1-1-1V5a1 1 0 0 1 1-1h3Zm5 4l-4.5-5h9l-4.5 5Zm1 3.236l-1-.5l-1 .5V20h2v-8.764Zm2 2.764v2h4v-2h-4Z"/>`
	shirtLinePath                 = `<path fill="currentColor" d="M12.998 20h6v-4h-4v-2h4V6h-2v5l-4-1.6V20Zm-2 0V9.4l-4 1.6V6h-2v14h6Zm-4-16V3h10v1h3a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1h-16a1 1 0 0 1-1-1V5a1 1 0 0 1 1-1h3Zm5 4l3.5-3h-7l3.5 3Z"/>`
	shoppingBagFillPath           = `<path fill="currentColor" d="M12.005 1a5 5 0 0 1 5 5v2h3a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1h-16a1 1 0 0 1-1-1V9a1 1 0 0 1 1-1h3V6a5 5 0 0 1 5-5Zm5 10h-2v1a1 1 0 0 0 1.993.116l.007-.117v-1Zm-8 0h-2v1a1 1 0 0 0 1.993.116L9.005 12v-1Zm3-8A3 3 0 0 0 9.01 5.823L9.005 6v2h6V6a3 3 0 0 0-2.824-2.995L12.005 3Z"/>`
	shoppingBagLinePath           = `<path fill="currentColor" d="M7.005 8V6a5 5 0 0 1 10 0v2h3a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1h-16a1 1 0 0 1-1-1V9a1 1 0 0 1 1-1h3Zm0 2h-2v10h14V10h-2v2h-2v-2h-6v2h-2v-2Zm2-2h6V6a3 3 0 0 0-6 0v2Z"/>`
	shoppingBagThreeFillPath      = `<path fill="currentColor" d="M6.505 2h11a1 1 0 0 1 .8.4l2.7 3.6v15a1 1 0 0 1-1 1h-16a1 1 0 0 1-1-1V6l2.7-3.6a1 1 0 0 1 .8-.4Zm12 4l-1.5-2h-10l-1.5 2h13Zm-9.5 4h-2v2a5 5 0 0 0 10 0v-2h-2v2a3 3 0 0 1-6 0v-2Z"/>`
	shoppingBagThreeLinePath      = `<path fill="currentColor" d="M6.505 2h11a1 1 0 0 1 .8.4l2.7 3.6v15a1 1 0 0 1-1 1h-16a1 1 0 0 1-1-1V6l2.7-3.6a1 1 0 0 1 .8-.4Zm12.5 6h-14v12h14V8Zm-.5-2l-1.5-2h-10l-1.5 2h13Zm-9.5 4v2a3 3 0 1 0 6 0v-2h2v2a5 5 0 0 1-10 0v-2h2Z"/>`
	shoppingBagTwoFillPath        = `<path fill="currentColor" d="M20.005 22h-16a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h16a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1Zm-11-16h-2v2a5 5 0 0 0 10 0V6h-2v2a3 3 0 0 1-6 0V6Z"/>`
	shoppingBagTwoLinePath        = `<path fill="currentColor" d="M20.005 22h-16a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h16a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1Zm-1-2V4h-14v16h14Zm-10-14v2a3 3 0 1 0 6 0V6h2v2a5 5 0 0 1-10 0V6h2Z"/>`
	shoppingBasketFillPath        = `<path fill="currentColor" d="M12.005 2a6 6 0 0 1 6 6v1h4v2h-1.167l-.757 9.083a1 1 0 0 1-.996.917H4.925a1 1 0 0 1-.997-.917L3.171 11H2.005V9h4V8a6 6 0 0 1 6-6Zm1 11h-2v4h2v-4Zm-4 0h-2v4h2v-4Zm8 0h-2v4h2v-4Zm-5-9A4 4 0 0 0 8.01 7.8l-.005.2v1h8V8a4 4 0 0 0-3.8-3.995l-.2-.005Z"/>`
	shoppingBasketLinePath        = `<path fill="currentColor" d="M12.005 2a6 6 0 0 1 6 6v1h4v2h-1.167l-.757 9.083a1 1 0 0 1-.996.917H4.925a1 1 0 0 1-.997-.917L3.171 11H2.005V9h4V8a6 6 0 0 1 6-6Zm6.826 9H5.178l.667 8h12.319l.667-8Zm-5.826 2v4h-2v-4h2Zm-4 0v4h-2v-4h2Zm8 0v4h-2v-4h2Zm-5-9A4 4 0 0 0 8.01 7.8l-.005.2v1h8V8a4 4 0 0 0-3.8-3.995l-.2-.005Z"/>`
	shoppingBasketTwoFillPath     = `<path fill="currentColor" d="m15.37 3.44l3.212 5.562h3.423v2h-1.167l-.757 9.083a1 1 0 0 1-.996.917H4.925a1 1 0 0 1-.997-.917l-.757-9.083H2.005v-2h3.422L8.639 3.44l1.732 1l-2.634 4.562h8.535L13.639 4.44l1.732-1Zm-2.365 9.562h-2v4h2v-4Zm-4 0h-2v4h2v-4Zm8 0h-2v4h2v-4Z"/>`
	shoppingBasketTwoLinePath     = `<path fill="currentColor" d="m15.37 3.44l3.212 5.562h3.423v2h-1.167l-.757 9.083a1 1 0 0 1-.996.917H4.925a1 1 0 0 1-.997-.917l-.757-9.083H2.005v-2h3.422L8.639 3.44l1.732 1l-2.634 4.562h8.535L13.639 4.44l1.732-1Zm3.46 7.562H5.179l.667 8h12.319l.667-8Zm-5.825 2v4h-2v-4h2Zm-4 0v4h-2v-4h2Zm8 0v4h-2v-4h2Z"/>`
	shoppingCartFillPath          = `<path fill="currentColor" d="M6.005 9h13.938l.5-2H8.005V5h13.72a1 1 0 0 1 .97 1.243l-2.5 10a1 1 0 0 1-.97.757H5.004a1 1 0 0 1-1-1V4h-2V2h3a1 1 0 0 1 1 1v6Zm0 14a2 2 0 1 1 0-4a2 2 0 0 1 0 4Zm12 0a2 2 0 1 1 0-4a2 2 0 0 1 0 4Z"/>`
	shoppingCartLinePath          = `<path fill="currentColor" d="M4.005 16V4h-2V2h3a1 1 0 0 1 1 1v12h12.438l2-8H8.005V5h13.72a1 1 0 0 1 .97 1.243l-2.5 10a1 1 0 0 1-.97.757H5.004a1 1 0 0 1-1-1Zm2 7a2 2 0 1 1 0-4a2 2 0 0 1 0 4Zm12 0a2 2 0 1 1 0-4a2 2 0 0 1 0 4Z"/>`
	shoppingCartTwoFillPath       = `<path fill="currentColor" d="M4.004 6.417L.762 3.174L2.176 1.76l3.243 3.242H20.66a1 1 0 0 1 .958 1.288l-2.4 8a1 1 0 0 1-.958.712H6.004v2h11v2h-12a1 1 0 0 1-1-1V6.417Zm1.5 16.585a1.5 1.5 0 1 1 0-3a1.5 1.5 0 0 1 0 3Zm12 0a1.5 1.5 0 1 1 0-3a1.5 1.5 0 0 1 0 3Z"/>`
	shoppingCartTwoLinePath       = `<path fill="currentColor" d="M4.004 6.417L.762 3.174L2.176 1.76l3.243 3.242H20.66a1 1 0 0 1 .958 1.288l-2.4 8a1 1 0 0 1-.958.712H6.004v2h11v2h-12a1 1 0 0 1-1-1V6.417Zm2 .585v6h11.512l1.8-6H6.004Zm-.5 16a1.5 1.5 0 1 1 0-3a1.5 1.5 0 0 1 0 3Zm12 0a1.5 1.5 0 1 1 0-3a1.5 1.5 0 0 1 0 3Z"/>`
	showersFillPath               = `<path fill="currentColor" d="M15 18H9v3H7v-3.252a8 8 0 1 1 9.458-10.65A5.5 5.5 0 1 1 17.5 18H17v3.001h-2v-3Zm-4 2h2v3h-2v-3Z"/>`
	showersLinePath               = `<path fill="currentColor" d="M5 16.93a8 8 0 1 1 11.458-9.831A5.5 5.5 0 0 1 19 17.793v-2.13a3.5 3.5 0 1 0-4-5.612V10a6 6 0 1 0-10 4.472v2.458ZM7 16h2v4H7v-4Zm8 0h2v4h-2v-4Zm-4 3h2v4h-2v-4Z"/>`
	shuffleFillPath               = `<path fill="currentColor" d="M18 17.883V16l5 3l-5 3v-2.09a9 9 0 0 1-6.997-5.365L11 14.54l-.003.006A9 9 0 0 1 2.725 20H2v-2h.725a7 7 0 0 0 6.434-4.243L9.912 12l-.753-1.757A7 7 0 0 0 2.725 6H2V4h.725a9 9 0 0 1 8.272 5.455L11 9.46l.003-.006A9 9 0 0 1 18 4.09V2l5 3l-5 3V6.117a7 7 0 0 0-5.159 4.126L12.088 12l.753 1.757A7 7 0 0 0 18 17.883Z"/>`
	shuffleLinePath               = `<path fill="currentColor" d="M18 17.883V16l5 3l-5 3v-2.09a9 9 0 0 1-6.997-5.365L11 14.54l-.003.006A9 9 0 0 1 2.725 20H2v-2h.725a7 7 0 0 0 6.434-4.243L9.912 12l-.753-1.757A7 7 0 0 0 2.725 6H2V4h.725a9 9 0 0 1 8.272 5.455L11 9.46l.003-.006A9 9 0 0 1 18 4.09V2l5 3l-5 3V6.117a7 7 0 0 0-5.159 4.126L12.088 12l.753 1.757A7 7 0 0 0 18 17.883Z"/>`
	shutDownFillPath              = `<path fill="currentColor" d="M11 2.05V12h2V2.05c5.053.501 9 4.765 9 9.95c0 5.523-4.477 10-10 10S2 17.523 2 12c0-5.185 3.947-9.449 9-9.95Z"/>`
	shutDownLinePath              = `<path fill="currentColor" d="m6.265 3.807l1.147 1.639a8 8 0 1 0 9.176 0l1.147-1.639A9.988 9.988 0 0 1 22 12c0 5.523-4.477 10-10 10S2 17.523 2 12a9.988 9.988 0 0 1 4.265-8.193ZM11 12V2h2v10h-2Z"/>`
	sideBarFillPath               = `<path fill="currentColor" d="M3 3h18a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Zm6 2v14h11V5H9Z"/>`
	sideBarLinePath               = `<path fill="currentColor" d="M3 3h18a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Zm5 2H4v14h4V5Zm2 0v14h10V5H10Z"/>`
	signalTowerFillPath           = `<path fill="currentColor" d="M6.116 20.087A9.986 9.986 0 0 1 2 12C2 6.477 6.477 2 12 2s10 4.477 10 10a9.986 9.986 0 0 1-4.116 8.087l-1.015-1.739a8 8 0 1 0-9.738 0l-1.015 1.739Zm2.034-3.485a6 6 0 1 1 7.7 0l-1.03-1.766a4 4 0 1 0-5.64 0l-1.03 1.766ZM11 13h2l1 9h-4l1-9Z"/>`
	signalTowerLinePath           = `<path fill="currentColor" d="m6.116 20.087l1.015-1.739a8 8 0 1 1 9.738 0l1.015 1.739A9.986 9.986 0 0 0 22 12c0-5.523-4.477-10-10-10S2 6.477 2 12a9.986 9.986 0 0 0 4.116 8.087Zm2.034-3.485a6 6 0 1 1 7.7 0l-1.03-1.766a4 4 0 1 0-5.64 0l-1.03 1.766ZM11 13h2v9h-2v-9Z"/>`
	signalWifiErrorFillPath       = `<path fill="currentColor" d="M12.001 3c4.284 0 8.22 1.497 11.31 3.996L22.499 8h-4.498v5.571L12 21L.691 6.997A17.925 17.925 0 0 1 12 3Zm10 16v2h-2v-2h2Zm0-9v7h-2v-7h2Z"/>`
	signalWifiErrorLinePath       = `<path fill="currentColor" d="M12.001 3c4.284 0 8.22 1.497 11.31 3.996l-1.257 1.556A15.933 15.933 0 0 0 12.001 5a15.92 15.92 0 0 0-8.419 2.392l8.419 10.425l6-7.429v3.183L12 21L.691 6.997A17.925 17.925 0 0 1 12 3Zm10 16v2h-2v-2h2Zm0-9v7h-2v-7h2Z"/>`
	signalWifiFillPath            = `<path fill="currentColor" d="M12.001 3c4.284 0 8.22 1.497 11.31 3.996L12 21L.691 6.997A17.925 17.925 0 0 1 12 3Z"/>`
	signalWifiLinePath            = `<path fill="currentColor" d="M12.001 3c4.284 0 8.22 1.497 11.31 3.996L12 21L.691 6.997A17.925 17.925 0 0 1 12 3Zm0 2c-3.028 0-5.923.842-8.42 2.392L12 17.817L20.42 7.39A15.921 15.921 0 0 0 12 5Z"/>`
	signalWifiOffFillPath         = `<path fill="currentColor" d="M2.809 1.394L20.486 19.07l-1.414 1.414l-3.683-3.682L12.001 21L.691 6.997a18 18 0 0 1 2.95-1.942L1.395 2.808L2.81 1.394ZM12 3c4.284 0 8.22 1.497 11.31 3.996l-5.407 6.693L7.726 3.511c1.37-.334 2.802-.51 4.275-.51Z"/>`
	signalWifiOffLinePath         = `<path fill="currentColor" d="M2.809 1.394L20.486 19.07l-1.414 1.414l-3.683-3.681L12.001 21L.691 6.997a18 18 0 0 1 2.95-1.942L1.395 2.808L2.81 1.394Zm.771 5.998L12 17.817l1.967-2.436l-8.835-8.836c-.532.253-1.05.536-1.552.847ZM12.001 3c4.284 0 8.22 1.497 11.31 3.996l-5.407 6.693l-1.422-1.422l3.939-4.876A15.921 15.921 0 0 0 12 5.001c-.873 0-1.735.07-2.58.206L7.727 3.51c1.37-.334 2.802-.51 4.275-.51Z"/>`
	signalWifiOneFillPath         = `<path fill="currentColor" d="M12.001 3c4.284 0 8.22 1.497 11.31 3.996L12 21L.691 6.997A17.925 17.925 0 0 1 12 3Zm0 2c-3.028 0-5.923.842-8.42 2.392l5.108 6.324A7.971 7.971 0 0 1 12.001 13c1.181 0 2.303.256 3.312.716L20.42 7.39A15.921 15.921 0 0 0 12 5Z"/>`
	signalWifiOneLinePath         = `<path fill="currentColor" d="M12.001 3c4.284 0 8.22 1.497 11.31 3.996L12 21L.691 6.997A17.925 17.925 0 0 1 12 3Zm0 12a6.01 6.01 0 0 0-2 .34l2 2.477l2-2.477a6.066 6.066 0 0 0-2-.34Zm0-10c-3.028 0-5.923.842-8.42 2.392l5.108 6.324A7.971 7.971 0 0 1 12.001 13c1.181 0 2.303.256 3.312.716L20.42 7.39A15.921 15.921 0 0 0 12 5Z"/>`
	signalWifiThreeFillPath       = `<path fill="currentColor" d="M12.001 3c4.284 0 8.22 1.497 11.31 3.996L12 21L.691 6.997A17.925 17.925 0 0 1 12 3Zm0 2c-3.028 0-5.923.842-8.42 2.392l1.904 2.357A12.94 12.94 0 0 1 12 8c2.375 0 4.6.637 6.516 1.749l1.904-2.358A15.921 15.921 0 0 0 12 5Z"/>`
	signalWifiThreeLinePath       = `<path fill="currentColor" d="M12.001 3c4.284 0 8.22 1.497 11.31 3.996L12 21L.691 6.997A17.925 17.925 0 0 1 12 3Zm0 7c-1.898 0-3.683.48-5.241 1.327l5.24 6.49l5.242-6.49A10.95 10.95 0 0 0 12.001 10Zm0-5c-3.028 0-5.923.842-8.42 2.392l1.904 2.357A12.94 12.94 0 0 1 12 8c2.375 0 4.6.637 6.516 1.749l1.904-2.358A15.921 15.921 0 0 0 12 5Z"/>`
	signalWifiTwoFillPath         = `<path fill="currentColor" d="M12.001 3c4.284 0 8.22 1.497 11.31 3.996L12 21L.691 6.997A17.925 17.925 0 0 1 12 3Zm0 2c-3.028 0-5.923.842-8.42 2.392l3.178 3.935A10.95 10.95 0 0 1 12.001 10c1.898 0 3.683.48 5.242 1.327L20.42 7.39A15.921 15.921 0 0 0 12 5Z"/>`
	signalWifiTwoLinePath         = `<path fill="currentColor" d="M12.001 3c4.284 0 8.22 1.497 11.31 3.996L12 21L.691 6.997A17.925 17.925 0 0 1 12 3Zm0 9c-1.42 0-2.764.33-3.959.915l3.959 4.902l3.958-4.902A8.963 8.963 0 0 0 12.001 12Zm0-7c-3.028 0-5.923.842-8.42 2.392l3.178 3.935A10.95 10.95 0 0 1 12.001 10c1.898 0 3.683.48 5.242 1.327L20.42 7.39A15.921 15.921 0 0 0 12 5Z"/>`
	simCardFillPath               = `<path fill="currentColor" d="M5 2h10l4.707 4.707a1 1 0 0 1 .293.707V21a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1Zm3 10v6h8v-6H8Z"/>`
	simCardLinePath               = `<path fill="currentColor" d="M6 4v16h12V7.828L14.172 4H6ZM5 2h10l4.707 4.707a1 1 0 0 1 .293.707V21a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1Zm3 10h8v6H8v-6Z"/>`
	simCardTwoFillPath            = `<path fill="currentColor" d="M5 2h10l4.707 4.707a1 1 0 0 1 .293.707V21a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1Zm8 16v-8H8v2h3v6h2Zm-5-5v2h2v-2H8Zm6 0v2h2v-2h-2Zm0-3v2h2v-2h-2Zm-6 6v2h2v-2H8Zm6 0v2h2v-2h-2Z"/>`
	simCardTwoLinePath            = `<path fill="currentColor" d="M6 4v16h12V7.828L14.172 4H6ZM5 2h10l4.707 4.707a1 1 0 0 1 .293.707V21a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1Zm8 8v8h-2v-6H8v-2h5Zm-5 3h2v2H8v-2Zm6 0h2v2h-2v-2Zm0-3h2v2h-2v-2Zm-6 6h2v2H8v-2Zm6 0h2v2h-2v-2Z"/>`
	singleQuotesLPath             = `<path fill="currentColor" d="M9.583 17.321C8.553 16.227 8 15 8 13.011c0-3.5 2.457-6.637 6.03-8.188l.893 1.378c-3.335 1.804-3.987 4.145-4.247 5.621c.537-.278 1.24-.375 1.929-.311c1.804.167 3.226 1.648 3.226 3.489a3.5 3.5 0 0 1-3.5 3.5a3.871 3.871 0 0 1-2.748-1.179Z"/>`
	singleQuotesRPath             = `<path fill="currentColor" d="M14.417 6.679C15.447 7.773 16 9 16 10.989c0 3.5-2.456 6.637-6.03 8.188l-.893-1.378c3.335-1.804 3.987-4.145 4.248-5.621c-.537.278-1.24.375-1.93.311C9.591 12.322 8.17 10.841 8.17 9a3.5 3.5 0 0 1 3.5-3.5c1.073 0 2.1.49 2.748 1.179Z"/>`
	sipFillPath                   = `<path fill="currentColor" d="m13.96 6.501l2.829-2.828a1 1 0 0 1 1.414 0l2.121 2.121a1 1 0 0 1 0 1.414l-2.828 2.829l1.768 1.768l-1.415 1.414l-7.07-7.071l1.413-1.415l1.768 1.768Zm-3.182 2.475l4.243 4.243l-7.778 7.778H3v-4.243l7.778-7.778Z"/>`
	sipLinePath                   = `<path fill="currentColor" d="m6.457 18.954l8.564-8.564l-1.414-1.414l-8.564 8.564l1.414 1.414Zm5.735-11.392l-1.414-1.414l1.414-1.415l1.768 1.768l2.829-2.828a1 1 0 0 1 1.414 0l2.121 2.121a1 1 0 0 1 0 1.414l-2.828 2.829l1.768 1.768l-1.415 1.414l-1.414-1.414l-9.192 9.192H3v-4.243l9.192-9.192Z"/>`
	sketchingPath                 = `<path fill="currentColor" d="M10.036 7.698c-1.651 1.861-3.523 4.546-5.141 7.784a1 1 0 1 1-1.79-.895c1.692-3.383 3.66-6.215 5.434-8.216c.886-.999 1.74-1.81 2.506-2.38c.382-.285.76-.523 1.123-.693c.351-.166.753-.298 1.166-.298a1.24 1.24 0 0 1 1.116.69c.157.312.174.645.17.87c-.008.477-.135 1.073-.298 1.68c-.335 1.243-.923 2.891-1.507 4.518l-.082.228c-.566 1.574-1.123 3.123-1.485 4.36c-.098.334-.177.633-.239.895c.694-.557 1.55-1.396 2.457-2.288l.03-.029c.881-.866 1.814-1.782 2.6-2.411c.391-.312.812-.609 1.218-.78c.34-.145 1.12-.38 1.727.227c.384.384.49.884.518 1.256c.03.39-.016.81-.087 1.21c-.14.8-.424 1.733-.683 2.575l-.041.135c-.232.751-.438 1.422-.555 1.96c.26-.26.58-.674.954-1.285a1 1 0 1 1 1.706 1.045c-.543.886-1.105 1.606-1.701 2.053c-.624.468-1.44.732-2.266.319c-.608-.305-.746-.91-.777-1.246c-.033-.363.02-.759.089-1.115c.13-.673.385-1.497.625-2.276l.055-.178c.267-.868.51-1.679.625-2.334l.024-.145a8.35 8.35 0 0 0-.181.14c-.698.559-1.561 1.405-2.478 2.306l-.03.03c-.881.865-1.814 1.782-2.6 2.41c-.391.313-.813.61-1.218.781c-.34.145-1.12.38-1.727-.227c-.309-.309-.388-.699-.413-.936a3.488 3.488 0 0 1 .023-.803c.068-.528.226-1.17.426-1.85c.38-1.298.955-2.9 1.512-4.449l.092-.255c.593-1.652 1.149-3.214 1.457-4.36l.074-.286a6.896 6.896 0 0 0-.224.16c-.623.464-1.377 1.17-2.204 2.103Z"/>`
	skipBackFillPath              = `<path fill="currentColor" d="m8 11.333l10.223-6.815a.5.5 0 0 1 .777.416v14.132a.5.5 0 0 1-.777.416L8 12.667V19a1 1 0 1 1-2 0V5a1 1 0 0 1 2 0v6.333Z"/>`
	skipBackLinePath              = `<path fill="currentColor" d="M7 4a1 1 0 0 1 1 1v6.333l10.223-6.815a.5.5 0 0 1 .777.416v14.132a.5.5 0 0 1-.777.416L8 12.667V19a1 1 0 1 1-2 0V5a1 1 0 0 1 1-1Zm10 3.737L10.606 12L17 16.263V7.737Z"/>`
	skipBackMiniFillPath          = `<path fill="currentColor" d="M7 6a1 1 0 0 1 1 1v10a1 1 0 1 1-2 0V7a1 1 0 0 1 1-1Zm2.079 6.409a.5.5 0 0 1 0-.818l7.133-5.035a.5.5 0 0 1 .788.409v10.07a.5.5 0 0 1-.788.409l-7.133-5.035Z"/>`
	skipBackMiniLinePath          = `<path fill="currentColor" d="M7 6a1 1 0 0 1 1 1v10a1 1 0 1 1-2 0V7a1 1 0 0 1 1-1Zm8 8.14V9.86L11.968 12L15 14.14Zm-5.921-1.732a.5.5 0 0 1 0-.816l7.133-5.036a.5.5 0 0 1 .788.409v10.07a.5.5 0 0 1-.788.409l-7.133-5.035Z"/>`
	skipDownFillPath              = `<path fill="currentColor" d="M18 17H6v-2h12v2Zm-6-4l6-6H6l6 6Z"/>`
	skipDownLinePath              = `<path fill="currentColor" d="M12 10.086L7.207 5.293L5.793 6.707L12 12.914l6.207-6.207l-1.414-1.414L12 10.086ZM18 17H6v-2h12v2Z"/>`
	skipForwardFillPath           = `<path fill="currentColor" d="M16 12.667L5.777 19.482A.5.5 0 0 1 5 19.066V4.934a.5.5 0 0 1 .777-.416L16 11.333V5a1 1 0 1 1 2 0v14a1 1 0 1 1-2 0v-6.333Z"/>`
	skipForwardLinePath           = `<path fill="currentColor" d="M16 12.667L5.777 19.482A.5.5 0 0 1 5 19.066V4.934a.5.5 0 0 1 .777-.416L16 11.333V5a1 1 0 1 1 2 0v14a1 1 0 1 1-2 0v-6.333Zm-9-4.93v8.526L13.394 12L7 7.737Z"/>`
	skipForwardMiniFillPath       = `<path fill="currentColor" d="M7.788 17.444A.5.5 0 0 1 7 17.035V6.965a.5.5 0 0 1 .788-.409l7.133 5.035a.499.499 0 0 1 0 .818l-7.133 5.034ZM16 7a1 1 0 1 1 2 0v10a1 1 0 1 1-2 0V7Z"/>`
	skipForwardMiniLinePath       = `<path fill="currentColor" d="M12.032 12L9 9.86v4.28L12.032 12ZM7.5 17.535a.5.5 0 0 1-.5-.5V6.965a.5.5 0 0 1 .788-.409l7.133 5.035a.499.499 0 0 1 0 .818l-7.133 5.034a.5.5 0 0 1-.288.092ZM16 7a1 1 0 1 1 2 0v10a1 1 0 1 1-2 0V7Z"/>`
	skipLeftFillPath              = `<path fill="currentColor" d="M7 18V6h2v12H7Zm4-6l6-6v12l-6-6Z"/>`
	skipLeftLinePath              = `<path fill="currentColor" d="m13.914 12l4.793-4.793l-1.414-1.414L11.086 12l6.207 6.207l1.414-1.414L13.914 12ZM7 18V6h2v12H7Z"/>`
	skipRightFillPath             = `<path fill="currentColor" d="M17 6v12h-2V6h2Zm-4 6l-6 6V6l6 6Z"/>`
	skipRightLinePath             = `<path fill="currentColor" d="m10.086 12l-4.793 4.793l1.414 1.414L12.914 12L6.707 5.793L5.293 7.207L10.086 12ZM17 6v12h-2V6h2Z"/>`
	skipUpFillPath                = `<path fill="currentColor" d="M6 7h12v2H6V7Zm6 4l6 6H6l6-6Z"/>`
	skipUpLinePath                = `<path fill="currentColor" d="m12 13.914l4.793 4.793l1.414-1.414L12 11.086l-6.207 6.207l1.414 1.414L12 13.914ZM6 7h12v2H6V7Z"/>`
	skullFillPath                 = `<path fill="currentColor" d="M18 18v3a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1v-3H3a1 1 0 0 1-1-1v-5C2 6.477 6.477 2 12 2s10 4.477 10 10v5a1 1 0 0 1-1 1h-3ZM7.5 14a1.5 1.5 0 1 0 0-3a1.5 1.5 0 0 0 0 3Zm9 0a1.5 1.5 0 1 0 0-3a1.5 1.5 0 0 0 0 3Z"/>`
	skullLinePath                 = `<path fill="currentColor" d="M20 12a8 8 0 1 0-16 0v4h3a1 1 0 0 1 1 1v3h8v-3a1 1 0 0 1 1-1h3v-4Zm-2 6v3a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1v-3H3a1 1 0 0 1-1-1v-5C2 6.477 6.477 2 12 2s10 4.477 10 10v5a1 1 0 0 1-1 1h-3ZM7.5 14a1.5 1.5 0 1 1 0-3a1.5 1.5 0 0 1 0 3Zm9 0a1.5 1.5 0 1 1 0-3a1.5 1.5 0 0 1 0 3Z"/>`
	skullTwoFillPath              = `<path fill="currentColor" d="M12 2c5.523 0 10 4.477 10 10v3.764a2 2 0 0 1-1.106 1.789L18 19v1a3 3 0 0 1-2.824 2.995L14.95 23c.022-.107.037-.218.044-.33L15 22.5V22a2 2 0 0 0-1.85-1.994L13 20h-2a2 2 0 0 0-1.995 1.85L9 22v.5c0 .171.017.339.05.5H9a3 3 0 0 1-3-3v-1l-2.894-1.447A2 2 0 0 1 2 15.763V12C2 6.477 6.477 2 12 2Zm-4 9a2 2 0 1 0 0 4a2 2 0 0 0 0-4Zm8 0a2 2 0 1 0 0 4a2 2 0 0 0 0-4Z"/>`
	skullTwoLinePath              = `<path fill="currentColor" d="M12 2c5.523 0 10 4.477 10 10v3.764a2 2 0 0 1-1.106 1.789L18 19v1a3 3 0 0 1-2.824 2.995L14.95 23c.022-.107.037-.218.044-.33L15 22.5V22a2 2 0 0 0-1.85-1.994L13 20h-2a2 2 0 0 0-1.995 1.85L9 22v.5c0 .171.017.339.05.5H9a3 3 0 0 1-3-3v-1l-2.894-1.447A2 2 0 0 1 2 15.763V12C2 6.477 6.477 2 12 2Zm0 2a8 8 0 0 0-7.996 7.75L4 12v3.764l4 2v1.591l.075-.084a3.993 3.993 0 0 1 2.723-1.266L11 18l2.073.001l.223.01a3.99 3.99 0 0 1 2.55 1.177l.154.167v-1.591l4-2V12a8 8 0 0 0-8-8Zm-4 7a2 2 0 1 1 0 4a2 2 0 0 1 0-4Zm8 0a2 2 0 1 1 0 4a2 2 0 0 1 0-4Z"/>`
	skypeFillPath                 = `<path fill="currentColor" d="M13.31 20.4a8.5 8.5 0 0 1-9.71-9.71a5.25 5.25 0 0 1 7.09-7.09a8.5 8.5 0 0 1 9.71 9.71a5.25 5.25 0 0 1-7.09 7.09Zm-1.257-3.244h-.04c2.872 0 4.303-1.386 4.303-3.243c0-1.198-.551-2.471-2.726-2.958l-1.983-.44c-.755-.172-1.622-.4-1.622-1.115s.62-1.213 1.724-1.213c2.23 0 2.027 1.528 3.131 1.528c.576 0 1.093-.342 1.093-.93c0-1.37-2.197-2.4-4.056-2.4c-2.021 0-4.173.859-4.173 3.144c0 1.098.394 2.27 2.56 2.813l2.689.671c.816.202 1.018.659 1.018 1.072c0 .687-.684 1.358-1.918 1.358c-2.417 0-2.078-1.857-3.374-1.857c-.58 0-1.003.398-1.003.971c0 1.114 1.352 2.598 4.377 2.598Z"/>`
	skypeLinePath                 = `<path fill="currentColor" d="M13.005 18.423a2 2 0 0 1 1.237.207a3.25 3.25 0 0 0 4.389-4.389a2 2 0 0 1-.207-1.237a6.5 6.5 0 0 0-7.427-7.427A2 2 0 0 1 9.76 5.37a3.25 3.25 0 0 0-4.389 4.39a2 2 0 0 1 .207 1.237a6.5 6.5 0 0 0 7.427 7.427ZM12.001 20.5a8.5 8.5 0 0 1-8.4-9.81a5.25 5.25 0 0 1 7.09-7.09a8.5 8.5 0 0 1 9.71 9.71a5.25 5.25 0 0 1-7.09 7.09c-.427.066-.865.1-1.31.1Zm.053-3.5C9.252 17 8 15.62 8 14.586c0-.532.39-.902.928-.902c1.2 0 .887 1.725 3.125 1.725c1.143 0 1.776-.624 1.776-1.261c0-.384-.188-.808-.943-.995l-2.49-.624c-2.006-.504-2.37-1.592-2.37-2.612C8.027 7.797 10.019 7 11.89 7c1.72 0 3.755.956 3.755 2.228c0 .545-.479.863-1.011.863c-1.023 0-.835-1.418-2.9-1.418c-1.023 0-1.596.462-1.596 1.126c0 .663.803.876 1.502 1.035l1.836.409C15.49 11.695 16 12.876 16 13.989C16 15.713 14.675 17 12.015 17h.038Z"/>`
	slackFillPath                 = `<path fill="currentColor" d="M6.527 14.514a1.973 1.973 0 0 1-1.967 1.968a1.973 1.973 0 0 1-1.968-1.968c0-1.083.885-1.968 1.968-1.968h1.967v1.968Zm.992 0c0-1.083.885-1.968 1.968-1.968s1.967.885 1.967 1.968v4.927a1.973 1.973 0 0 1-1.967 1.968a1.973 1.973 0 0 1-1.968-1.968v-4.927Zm1.968-7.987A1.973 1.973 0 0 1 7.519 4.56c0-1.083.885-1.968 1.968-1.968s1.967.885 1.967 1.968v1.967H9.487Zm0 .992c1.083 0 1.967.885 1.967 1.968a1.973 1.973 0 0 1-1.967 1.967H4.56a1.973 1.973 0 0 1-1.968-1.967c0-1.083.885-1.968 1.968-1.968h4.927Zm7.986 1.968c0-1.083.885-1.968 1.968-1.968s1.968.885 1.968 1.968a1.973 1.973 0 0 1-1.968 1.967h-1.968V9.487Zm-.991 0a1.973 1.973 0 0 1-1.968 1.967a1.973 1.973 0 0 1-1.968-1.967V4.56c0-1.083.885-1.968 1.968-1.968s1.968.885 1.968 1.968v4.927Zm-1.968 7.986c1.083 0 1.968.885 1.968 1.968a1.973 1.973 0 0 1-1.968 1.968a1.973 1.973 0 0 1-1.968-1.968v-1.968h1.968Zm0-.991a1.973 1.973 0 0 1-1.968-1.968c0-1.083.885-1.968 1.968-1.968h4.927c1.083 0 1.968.885 1.968 1.968a1.973 1.973 0 0 1-1.968 1.968h-4.927Z"/>`
	slackLinePath                 = `<path fill="currentColor" d="M14.501 3a1.5 1.5 0 0 1 1.5 1.5v5a1.5 1.5 0 0 1-3 0v-5a1.5 1.5 0 0 1 1.5-1.5Zm-10 10h1.5v1.5a1.5 1.5 0 1 1-1.5-1.5Zm8.5 5h1.5a1.5 1.5 0 1 1-1.5 1.5V18Zm1.5-5h5a1.5 1.5 0 0 1 0 3h-5a1.5 1.5 0 1 1 0-3Zm5-5a1.5 1.5 0 0 1 0 3h-1.5V9.5a1.5 1.5 0 0 1 1.5-1.5Zm-15 0h5a1.5 1.5 0 1 1 0 3h-5a1.5 1.5 0 0 1 0-3Zm5-5a1.5 1.5 0 0 1 1.5 1.5V6h-1.5a1.5 1.5 0 1 1 0-3Zm0 10a1.5 1.5 0 0 1 1.5 1.5v5a1.5 1.5 0 0 1-3 0v-5a1.5 1.5 0 0 1 1.5-1.5Z"/>`
	slashCommandsPath             = `<path fill="currentColor" d="M3 3h2v4H3V3Zm6.788 18H7.66l6.551-18h2.129L9.788 21ZM21 3h-2v4h2V3Z"/>`
	slashCommandsTwoPath          = `<path fill="currentColor" d="M5 2a3 3 0 0 0-3 3v14a3 3 0 0 0 3 3h14a3 3 0 0 0 3-3V5a3 3 0 0 0-3-3H5ZM4 5a1 1 0 0 1 1-1h14a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V5Zm5.723 13L16.58 6h-2.303L7.42 18h2.303Z"/>`
	sliceFillPath                 = `<path fill="currentColor" d="m13.768 12.229l2.121 2.121c-4.596 4.596-10.253 6.01-13.788 5.304L17.657 4.097l2.121 2.121l-6.01 6.01Z"/>`
	sliceLinePath                 = `<path fill="currentColor" d="m15.69 12.915l1.769 1.767c-6.01 6.01-10.96 6.01-15.203 4.597L17.812 3.722l3.536 3.536l-5.657 5.657Zm-2.827 0l5.656-5.657l-.707-.707L6.314 18.048c2.732.108 5.358-.906 8.267-3.415l-1.718-1.718Z"/>`
	slideshowFillPath             = `<path fill="currentColor" d="M13 21v2h-2v-2H3a1 1 0 0 1-1-1V6h20v14a1 1 0 0 1-1 1h-8ZM8 10a3 3 0 1 0 3 3H8v-3Zm5 0v2h6v-2h-6Zm0 4v2h6v-2h-6ZM2 3h20v2H2V3Z"/>`
	slideshowFourFillPath         = `<path fill="currentColor" d="M8.17 3A3.001 3.001 0 0 1 11 1h2c1.306 0 2.418.835 2.83 2H21a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h5.17ZM10 9v6l5-3l-5-3Zm1-6a1 1 0 1 0 0 2h2a1 1 0 1 0 0-2h-2Z"/>`
	slideshowFourLinePath         = `<path fill="currentColor" d="M8.17 3A3.001 3.001 0 0 1 11 1h2c1.306 0 2.418.835 2.83 2H21a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h5.17ZM4 5v14h16V5h-4.17A3.001 3.001 0 0 1 13 7h-2a3.001 3.001 0 0 1-2.83-2H4Zm7-2a1 1 0 1 0 0 2h2a1 1 0 1 0 0-2h-2Zm-1 6l5 3l-5 3V9Z"/>`
	slideshowLinePath             = `<path fill="currentColor" d="M13 21v2h-2v-2H3a1 1 0 0 1-1-1V6h20v14a1 1 0 0 1-1 1h-8Zm-9-2h16V8H4v11Zm9-9h5v2h-5v-2Zm0 4h5v2h-5v-2Zm-4-4v3h3a3 3 0 1 1-3-3ZM2 3h20v2H2V3Z"/>`
	slideshowThreeFillPath        = `<path fill="currentColor" d="M13 18v2h4v2H7v-2h4v-2H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h18a1 1 0 0 1 1 1v13a1 1 0 0 1-1 1h-8ZM10 7.5v6l5-3l-5-3Z"/>`
	slideshowThreeLinePath        = `<path fill="currentColor" d="M13 18v2h4v2H7v-2h4v-2H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h18a1 1 0 0 1 1 1v13a1 1 0 0 1-1 1h-8ZM4 5v11h16V5H4Zm6 2.5l5 3l-5 3v-6Z"/>`
	slideshowTwoFillPath          = `<path fill="currentColor" d="M13 17v3h5v2H6v-2h5v-3H4a1 1 0 0 1-1-1V4H2V2h20v2h-1v12a1 1 0 0 1-1 1h-7ZM10 6v7l5-3.5L10 6Z"/>`
	slideshowTwoLinePath          = `<path fill="currentColor" d="M13 17v3h5v2H6v-2h5v-3H4a1 1 0 0 1-1-1V4H2V2h20v2h-1v12a1 1 0 0 1-1 1h-7Zm-8-2h14V4H5v11Zm5-9l5 3.5l-5 3.5V6Z"/>`
	slowDownFillPath              = `<path fill="currentColor" d="M4 13c0 2.21.895 4.21 2.343 5.657L4.93 20.07A9.969 9.969 0 0 1 2 13C2 7.477 6.477 3 12 3s10 4.477 10 10a9.97 9.97 0 0 1-2.929 7.071l-1.414-1.414A8 8 0 1 0 4 13Zm4.707-4.707L13.5 12.5l-2 2l-4.207-4.793l1.414-1.414Z"/>`
	slowDownLinePath              = `<path fill="currentColor" d="M4 13c0 2.21.895 4.21 2.343 5.657L4.93 20.07A9.969 9.969 0 0 1 2 13C2 7.477 6.477 3 12 3s10 4.477 10 10a9.97 9.97 0 0 1-2.929 7.071l-1.414-1.414A8 8 0 1 0 4 13Zm4.707-4.707l4.5 4.5l-1.414 1.414l-4.5-4.5l1.414-1.414Z"/>`
	smartphoneFillPath            = `<path fill="currentColor" d="M6 2h12a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1Zm6 15a1 1 0 1 0 0 2a1 1 0 0 0 0-2Z"/>`
	smartphoneLinePath            = `<path fill="currentColor" d="M7 4v16h10V4H7ZM6 2h12a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1Zm6 15a1 1 0 1 1 0 2a1 1 0 0 1 0-2Z"/>`
	snapchatFillPath              = `<path fill="currentColor" d="M11.872 21.765c-1.19 0-1.984-.562-2.693-1.057c-.504-.357-.976-.696-1.533-.79a4.562 4.562 0 0 0-.803-.066c-.472 0-.847.071-1.114.125c-.17.03-.312.058-.424.058c-.116 0-.263-.032-.32-.228c-.05-.16-.081-.312-.112-.459c-.08-.37-.147-.597-.286-.62c-1.489-.227-2.38-.57-2.554-.976c-.014-.044-.031-.09-.031-.125c-.01-.124.08-.227.205-.25c1.181-.195 2.242-.824 3.138-1.858c.696-.803 1.035-1.579 1.066-1.663c0-.01.009-.01.009-.01c.17-.351.205-.65.102-.895c-.192-.46-.825-.656-1.257-.79c-.111-.03-.205-.066-.285-.093c-.37-.147-.986-.46-.905-.892c.058-.312.472-.535.811-.535c.094 0 .174.014.24.05c.38.173.723.262 1.017.262c.366 0 .54-.138.584-.182a24.904 24.904 0 0 0-.035-.593c-.09-1.365-.192-3.059.24-4.03c1.298-2.907 4.053-3.14 4.869-3.14L12.157 3h.05c.815 0 3.57.227 4.868 3.139c.437.971.33 2.67.24 4.03l-.009.067c-.008.182-.022.356-.03.535c.044.035.204.169.534.173c.286-.008.598-.102.954-.263a.805.805 0 0 1 .312-.066c.125 0 .25.03.357.066h.009c.299.112.495.321.495.54c.009.205-.152.517-.914.825c-.08.03-.174.067-.285.093c-.424.13-1.057.335-1.258.79c-.111.24-.067.548.103.896c0 .008.009.008.009.008c.049.125 1.337 3.05 4.204 3.527a.246.246 0 0 1 .205.25a.267.267 0 0 1-.031.129c-.174.41-1.057.744-2.555.976c-.138.022-.205.25-.285.62a6.889 6.889 0 0 1-.111.459c-.045.147-.139.227-.3.227h-.021a2.24 2.24 0 0 1-.424-.049a5.282 5.282 0 0 0-1.115-.116a4.97 4.97 0 0 0-.802.067c-.553.09-1.03.433-1.534.79c-.718.49-1.516 1.052-2.697 1.052h-.254Z"/>`
	snapchatLinePath              = `<path fill="currentColor" d="m15.383 10.58l.02-.249c.01-.147.021-.304.031-.48c.032-.558.051-1.174.051-1.845c0-.872-.294-1.487-.914-2.064c-.66-.614-1.459-.942-2.59-.942c-1.137 0-1.958.335-2.51.888c-.696.695-.957 1.218-.957 2.1c0 .521.06 1.994.095 2.619a2 2 0 0 1-.468 1.4c.054.1.105.205.152.318c.3.771.198 1.543-.152 2.271c-.392.818-.73 1.393-1.41 2.154a7.973 7.973 0 0 1-.642.643a1.999 1.999 0 0 1 .412.564a5.886 5.886 0 0 1 1.585.075c.81.146 1.324.434 2.194 1.061l.016.011l.213.152c.62.44.877.546 1.473.546c.609 0 .91-.121 1.523-.552l.207-.146c.877-.632 1.407-.927 2.231-1.076a6.663 6.663 0 0 1 1.56-.074a1.998 1.998 0 0 1 .417-.567a8.415 8.415 0 0 1-.617-.617a9.23 9.23 0 0 1-1.447-2.159c-.363-.749-.47-1.54-.137-2.321c.04-.098.085-.19.132-.276a2 2 0 0 1-.468-1.435Zm-10.316-.102c.42 0 .601.305 1.22.305a.74.74 0 0 0 .325-.066c-.008-.156-.098-1.986-.098-2.729c0-1.688.719-2.69 1.542-3.514C8.879 3.65 10.162 3 11.982 3c1.82 0 3.066.653 3.952 1.478c.886.825 1.551 1.93 1.551 3.528c0 1.555-.099 2.594-.107 2.716a.59.59 0 0 0 .278.065c.63 0 .63-.31 1.33-.31c.686 0 .983.57.983.823c0 .621-.832.967-1.33 1.126c-.369.117-.931.291-1.075.635c-.073.174-.043.4.092.678c.004.008 1.26 2.883 3.93 3.326c.235.035.392.241.392.483c0 .333-.37.617-.727.782c-.443.2-1.09.37-1.952.505c-.043.078-.134.485-.235.887c-.135.542-.8.366-.99.326A4.997 4.997 0 0 0 16.277 20c-.483.087-.913.378-1.396.726c-.713.504-1.465 1.076-2.9 1.076c-1.435 0-2.144-.572-2.857-1.076c-.482-.348-.904-.637-1.395-.726c-.899-.163-1.57.036-1.796.056c-.226.021-.841.245-.996-.326c-.044-.166-.19-.808-.234-.895c-.857-.135-1.509-.313-1.953-.513c-.365-.165-.726-.443-.726-.778c0-.236.158-.44.392-.483c2.643-.483 3.765-3.005 3.921-3.33c.133-.276.161-.5.092-.679c-.144-.343-.705-.513-1.074-.635c-.105-.034-1.335-.373-1.335-1.117c0-.24.204-.573.581-.73c.162-.066.359-.092.465-.092Z"/>`
	snowyFillPath                 = `<path fill="currentColor" d="M6.027 17.43A8.003 8.003 0 0 1 9 2a8.003 8.003 0 0 1 7.458 5.099A5.5 5.5 0 1 1 18 17.978a6 6 0 0 0-11.973-.549ZM13 16.267l1.964-1.134l1 1.732L14 18l1.964 1.134l-1 1.732L13 19.732V22h-2v-2.268l-1.964 1.134l-1-1.732L10 18l-1.964-1.134l1-1.732L11 16.268V14h2v2.268Z"/>`
	snowyLinePath                 = `<path fill="currentColor" d="m13 16.268l1.964-1.134l1 1.732L14 18l1.964 1.134l-1 1.732L13 19.732V22h-2v-2.268l-1.964 1.134l-1-1.732L10 18l-1.964-1.134l1-1.732L11 16.268V14h2v2.268ZM17 18v-2h.5a3.5 3.5 0 1 0-2.5-5.95V10a6 6 0 1 0-8 5.659v2.089a8 8 0 1 1 9.458-10.65A5.5 5.5 0 1 1 17.5 18H17Z"/>`
	sortAscPath                   = `<path fill="currentColor" d="m19 3l4 5h-3v12h-2V8h-3l4-5Zm-5 15v2H3v-2h11Zm0-7v2H3v-2h11Zm-2-7v2H3V4h9Z"/>`
	sortDescPath                  = `<path fill="currentColor" d="M20 4v12h3l-4 5l-4-5h3V4h2Zm-8 14v2H3v-2h9Zm2-7v2H3v-2h11Zm0-7v2H3V4h11Z"/>`
	soundModuleFillPath           = `<path fill="currentColor" d="M21 18v3h-2v-3h-2v-3h6v3h-2ZM5 18v3H3v-3H1v-3h6v3H5Zm6-12V3h2v3h2v3H9V6h2Zm0 5h2v10h-2V11Zm-8 2V3h2v10H3Zm16 0V3h2v10h-2Z"/>`
	soundModuleLinePath           = `<path fill="currentColor" d="M21 18v3h-2v-3h-2v-2h6v2h-2ZM5 18v3H3v-3H1v-2h6v2H5Zm6-12V3h2v3h2v2H9V6h2Zm0 4h2v11h-2V10Zm-8 4V3h2v11H3Zm16 0V3h2v11h-2Z"/>`
	soundcloudFillPath            = `<path fill="currentColor" d="M10.464 8.597c.265 0 .48 2.106.48 4.704l-.001.35c-.019 2.435-.226 4.354-.479 4.354c-.256 0-.465-1.965-.48-4.44v-.353c.005-2.557.218-4.615.48-4.615Zm-1.664.96c.259 0 .47 1.8.48 4.054v.34c-.01 2.253-.221 4.053-.48 4.053c-.255 0-.464-1.755-.48-3.97v-.339l.002-.34c.025-2.133.23-3.798.478-3.798Zm-1.664 0c.255 0 .464 1.755.48 3.97v.339l-.002.34c-.025 2.133-.23 3.799-.478 3.799c-.259 0-.47-1.8-.48-4.055v-.34c.01-2.253.221-4.053.48-4.053Zm-1.664.575c.265 0 .48 1.763.48 3.937l-.002.335c-.02 2.017-.227 3.6-.478 3.6c-.262 0-.474-1.716-.48-3.851v-.169c.006-2.135.218-3.851.48-3.851Zm-1.664 1.729c.265 0 .48 1.375.48 3.071v.159c-.013 1.623-.223 2.914-.48 2.914c-.265 0-.48-1.376-.48-3.072v-.159c.013-1.623.223-2.913.48-2.913Zm10.784-4.8c2.58 0 4.72 1.885 5.118 4.354a3.36 3.36 0 1 1 .993 6.589H12.48a.768.768 0 0 1-.768-.768V7.933a5.16 5.16 0 0 1 2.88-.872ZM2.144 11.668c.265 0 .48 1.333.48 2.977v.155c-.014 1.571-.223 2.82-.48 2.82c-.26 0-.473-1.29-.48-2.897v-.079c0-1.643.215-2.976.48-2.976Zm-1.664.96c.265 0 .48.946.48 2.113v.13c-.016 1.106-.225 1.981-.48 1.981c-.265 0-.48-.945-.48-2.111v-.131c.016-1.106.225-1.981.48-1.981Z"/>`
	soundcloudLinePath            = `<path fill="currentColor" d="M4 10a1 1 0 0 1 1 1v7a1 1 0 1 1-2 0v-7a1 1 0 0 1 1-1Zm3 1a1 1 0 0 1 1 1v6a1 1 0 1 1-2 0v-6a1 1 0 0 1 1-1Zm3-4a1 1 0 0 1 1 1v10a1 1 0 1 1-2 0V8a1 1 0 0 1 1-1Zm5-1a6 6 0 0 1 5.996 5.775l.003.26a3.5 3.5 0 0 1-.307 6.96L20.5 19h-3.501a1 1 0 0 1-.117-1.993L17 17h3.447l.138-.002a1.5 1.5 0 0 0 .267-2.957l-.135-.026l-1.77-.252l.053-1.787l-.004-.176A4 4 0 0 0 15.2 8.005L15 8c-.268 0-.531.026-.788.077L14 8.126V18a1 1 0 0 1-.883.993L13 19a1 1 0 0 1-1-1V6.803A5.973 5.973 0 0 1 15 6ZM1 12a1 1 0 0 1 1 1v4a1 1 0 1 1-2 0v-4a1 1 0 0 1 1-1Z"/>`
	spacePath                     = `<path fill="currentColor" d="M4 9v4h16V9h2v5a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V9h2Z"/>`
	spaceShipFillPath             = `<path fill="currentColor" d="M2.88 18.05a35.897 35.897 0 0 1 8.53-16.322a.8.8 0 0 1 1.178 0a35.897 35.897 0 0 1 8.531 16.32a43.99 43.99 0 0 1-6.584.875L12.447 23.1a.5.5 0 0 1-.894 0l-2.089-4.177a44.015 44.015 0 0 1-6.584-.875ZM12 14.995a3 3 0 1 0 0-6a3 3 0 0 0 0 6Z"/>`
	spaceShipLinePath             = `<path fill="currentColor" d="M2.88 18.05a35.897 35.897 0 0 1 8.53-16.322a.8.8 0 0 1 1.178 0a35.897 35.897 0 0 1 8.531 16.32a43.99 43.99 0 0 1-6.584.875L12.447 23.1a.5.5 0 0 1-.894 0l-2.089-4.177a44.028 44.028 0 0 1-6.584-.875Zm6.697-1.123l1.158.066L12 19.523l1.265-2.53l1.157-.066a42.139 42.139 0 0 0 4.227-.454a33.914 33.914 0 0 0-6.65-12.387a33.913 33.913 0 0 0-6.648 12.387a42.14 42.14 0 0 0 4.226.454ZM12 14.996a3 3 0 1 1 0-6a3 3 0 0 1 0 6Zm0-2a1 1 0 1 0 0-2a1 1 0 0 0 0 2Z"/>`
	spamFillPath                  = `<path fill="currentColor" d="M17.5 2.5L23 12l-5.5 9.5h-11L1 12l5.5-9.5h11ZM11 15v2h2v-2h-2Zm0-8v6h2V7h-2Z"/>`
	spamLinePath                  = `<path fill="currentColor" d="M17.5 2.5L23 12l-5.5 9.5h-11L1 12l5.5-9.5h11Zm-1.153 2H7.653L3.311 12l4.342 7.5h8.694l4.342-7.5l-4.342-7.5ZM11 15h2v2h-2v-2Zm0-8h2v6h-2V7Z"/>`
	spamThreeFillPath             = `<path fill="currentColor" d="M15.935 2.501L21.5 8.066v7.87l-5.565 5.565h-7.87L2.5 15.936v-7.87l5.565-5.565h7.87Zm-7.936 8.5v2h8v-2H8Z"/>`
	spamThreeLinePath             = `<path fill="currentColor" d="M15.935 2.501L21.5 8.066v7.87l-5.565 5.565h-7.87L2.5 15.936v-7.87l5.565-5.565h7.87Zm-.828 2H8.893L4.5 8.894v6.214L8.893 19.5h6.214l4.393-4.393V8.894l-4.393-4.393Zm-7.108 6.5h8v2H8v-2Z"/>`
	spamTwoFillPath               = `<path fill="currentColor" d="M15.935 2.501L21.5 8.066v7.87l-5.565 5.565h-7.87L2.5 15.936v-7.87l5.565-5.565h7.87Zm-4.936 12.5v2h2v-2h-2Zm0-8v6h2V7h-2Z"/>`
	spamTwoLinePath               = `<path fill="currentColor" d="M15.935 2.501L21.5 8.066v7.87l-5.565 5.565h-7.87L2.5 15.936v-7.87l5.565-5.565h7.87Zm-.828 2H8.893L4.5 8.894v6.214L8.893 19.5h6.214l4.393-4.393V8.894l-4.393-4.393Zm-4.108 10.5h2v2h-2v-2Zm0-8h2v6h-2V7Z"/>`
	sparklingFillPath             = `<path fill="currentColor" d="M14 4.438A2.437 2.437 0 0 0 16.438 2h1.125A2.437 2.437 0 0 0 20 4.438v1.125A2.437 2.437 0 0 0 17.562 8h-1.125A2.437 2.437 0 0 0 14 5.562V4.438ZM1 11a6 6 0 0 0 6-6h2a6 6 0 0 0 6 6v2a6 6 0 0 0-6 6H7a6 6 0 0 0-6-6v-2Zm16.25 3A3.25 3.25 0 0 1 14 17.25v1.5A3.25 3.25 0 0 1 17.25 22h1.5A3.25 3.25 0 0 1 22 18.75v-1.5A3.25 3.25 0 0 1 18.75 14h-1.5Z"/>`
	sparklingLinePath             = `<path fill="currentColor" d="M14 4.438A2.437 2.437 0 0 0 16.438 2h1.125A2.437 2.437 0 0 0 20 4.438v1.125A2.437 2.437 0 0 0 17.562 8h-1.125A2.437 2.437 0 0 0 14 5.562V4.438ZM1 11a6 6 0 0 0 6-6h2a6 6 0 0 0 6 6v2a6 6 0 0 0-6 6H7a6 6 0 0 0-6-6v-2Zm3.876 1A8.038 8.038 0 0 1 8 15.124A8.038 8.038 0 0 1 11.124 12A8.038 8.038 0 0 1 8 8.876A8.038 8.038 0 0 1 4.876 12Zm12.374 2A3.25 3.25 0 0 1 14 17.25v1.5A3.25 3.25 0 0 1 17.25 22h1.5A3.25 3.25 0 0 1 22 18.75v-1.5A3.25 3.25 0 0 1 18.75 14h-1.5Z"/>`
	sparklingTwoFillPath          = `<path fill="currentColor" d="m17 1.208l1.32 2.473L20.792 5L18.32 6.319L17.002 8.79L15.68 6.32L13.208 5l2.473-1.318L17 1.208ZM8 4.333l2.667 5l5 2.667l-5 2.666l-2.666 5l-2.667-5l-5-2.666l5-2.667l2.667-5Zm11.667 12l-1.666-3.125l-1.667 3.125L13.209 18l3.125 1.666l1.667 3.125l1.666-3.125L22.792 18l-3.125-1.667Z"/>`
	sparklingTwoLinePath          = `<path fill="currentColor" d="m17 1.208l1.32 2.473L20.792 5L18.32 6.319L17.002 8.79L15.68 6.32L13.208 5l2.473-1.318L17 1.208Zm-6.333 8.125l5 2.667l-5 2.666l-2.666 5l-2.667-5l-5-2.666l5-2.667l2.667-5l2.666 5Zm.75 2.667L9.19 10.81L8.001 8.583l-1.189 2.228L4.584 12l2.228 1.188l1.189 2.228l1.188-2.228L11.417 12Zm8.25 4.333l-1.666-3.125l-1.667 3.125L13.209 18l3.125 1.666l1.667 3.125l1.666-3.125L22.792 18l-3.125-1.667Z"/>`
	speakFillPath                 = `<path fill="currentColor" d="M9 2a8.002 8.002 0 0 1 7.934 6.965l2.25 3.539c.148.233.118.58-.225.728L17 14.07V17a2 2 0 0 1-2 2h-1.999L13 22H4v-3.694c0-1.18-.436-2.297-1.244-3.305A8 8 0 0 1 9 2Zm12.154 16.102l-1.665-1.11A8.959 8.959 0 0 0 21 12a8.958 8.958 0 0 0-1.51-4.993l1.664-1.11A10.948 10.948 0 0 1 23 12c0 2.258-.68 4.356-1.846 6.102Z"/>`
	speakLinePath                 = `<path fill="currentColor" d="M16.934 8.965A8.002 8.002 0 0 0 1 10c0 1.892.657 3.631 1.756 5.001C3.564 16.01 4 17.125 4 18.306V22h9l.001-3H15a2 2 0 0 0 2-2v-2.929l1.96-.84c.342-.146.372-.494.224-.727l-2.25-3.54ZM3 10a6 6 0 0 1 11.95-.779l.057.442l1.543 2.425l-1.55.664V17h-3.998L11 20H6v-1.694c0-1.639-.591-3.192-1.685-4.556A5.966 5.966 0 0 1 3 10Zm18.154 8.102l-1.665-1.11A8.959 8.959 0 0 0 21 12a8.958 8.958 0 0 0-1.51-4.993l1.664-1.11A10.948 10.948 0 0 1 23 12c0 2.258-.68 4.356-1.846 6.102Z"/>`
	speakerFillPath               = `<path fill="currentColor" d="M4 2h16a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1Zm8 18a5 5 0 1 0 0-10a5 5 0 0 0 0 10Zm0-12a1.5 1.5 0 1 0 0-3a1.5 1.5 0 0 0 0 3Zm0 10a3 3 0 1 1 0-6a3 3 0 0 1 0 6Z"/>`
	speakerLinePath               = `<path fill="currentColor" d="M5 4v16h14V4H5ZM4 2h16a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1Zm8 15a2.5 2.5 0 1 0 0-5a2.5 2.5 0 0 0 0 5Zm0 2a4.5 4.5 0 1 1 0-9a4.5 4.5 0 0 1 0 9Zm0-10.5a1.5 1.5 0 1 1 0-3a1.5 1.5 0 0 1 0 3Z"/>`
	speakerThreeFillPath          = `<path fill="currentColor" d="M4 3h16a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Zm8 13a4 4 0 1 1 0-8a4 4 0 0 1 0 8Zm0 2a6 6 0 1 0 0-12a6 6 0 0 0 0 12ZM6 7a1 1 0 1 0 0-2a1 1 0 0 0 0 2Zm12 0a1 1 0 1 0 0-2a1 1 0 0 0 0 2Zm0 12a1 1 0 1 0 0-2a1 1 0 0 0 0 2ZM6 19a1 1 0 1 0 0-2a1 1 0 0 0 0 2Zm6-5.5a1.5 1.5 0 1 0 0-3a1.5 1.5 0 0 0 0 3Z"/>`
	speakerThreeLinePath          = `<path fill="currentColor" d="M5 5v14h14V5H5ZM4 3h16a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Zm3 5a1 1 0 1 1 0-2a1 1 0 0 1 0 2Zm10 0a1 1 0 1 1 0-2a1 1 0 0 1 0 2Zm0 10a1 1 0 1 1 0-2a1 1 0 0 1 0 2ZM7 18a1 1 0 1 1 0-2a1 1 0 0 1 0 2Zm5-3a3 3 0 1 0 0-6a3 3 0 0 0 0 6Zm0 2a5 5 0 1 1 0-10a5 5 0 0 1 0 10Zm0-4a1 1 0 1 1 0-2a1 1 0 0 1 0 2Z"/>`
	speakerTwoFillPath            = `<path fill="currentColor" d="M4 3h16a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Zm8 14a5 5 0 1 1 0-10a5 5 0 0 1 0 10Zm0 2a7 7 0 1 0 0-14a7 7 0 0 0 0 14Zm0-5a2 2 0 1 0 0-4a2 2 0 0 0 0 4Z"/>`
	speakerTwoLinePath            = `<path fill="currentColor" d="M5 5v14h14V5H5ZM4 3h16a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Zm8 13a4 4 0 1 0 0-8a4 4 0 0 0 0 8Zm0 2a6 6 0 1 1 0-12a6 6 0 0 1 0 12Zm0-4.5a1.5 1.5 0 1 1 0-3a1.5 1.5 0 0 1 0 3Z"/>`
	spectrumFillPath              = `<path fill="currentColor" d="M13.2 2.006c8.041.088 8.8 1.245 8.8 9.995l-.005 1.199C21.908 21.24 20.75 22 12 22l-1.2-.005c-7.658-.083-8.712-1.137-8.794-8.795L2 11.69l.006-.89c.085-7.85 1.19-8.76 9.381-8.799l1.812.004ZM8.25 7.001h-.583a.667.667 0 0 0-.66.568l-.006.098v3.667c0 .335.246.612.568.66l.098.007h.584a3.75 3.75 0 0 1 3.744 3.55l.006.2v.583c0 .335.246.612.568.66l.098.007h3.667a.667.667 0 0 0 .66-.569l.007-.098v-.583a8.75 8.75 0 0 0-8.492-8.747l-.258-.003Z"/>`
	spectrumLinePath              = `<path fill="currentColor" d="m11.389 2.001l1.81.005l.844.014c7.162.165 7.939 1.512 7.957 9.667l-.005 1.512l-.014.844c-.165 7.161-1.512 7.938-9.667 7.957l-1.512-.006l-.888-.015c-6.854-.163-7.828-1.427-7.907-8.78L2 11.691l.006-.89l.014-.865c.165-7.053 1.486-7.897 9.368-7.935ZM14.12 4.01L10.883 4l-1.322.01c-5.489.082-5.544.82-5.56 7.403l.002 2.175l.01 1.04c.088 4.982.793 5.343 6.399 5.37l3.455-.002l.776-.01c5.108-.091 5.346-.836 5.357-6.877l-.002-2.742l-.012-1.056c-.094-4.796-.785-5.25-5.866-5.303ZM8.25 7A8.75 8.75 0 0 1 17 15.75v.583a.667.667 0 0 1-.666.667h-3.667a.667.667 0 0 1-.666-.667v-.583A3.75 3.75 0 0 0 8.25 12h-.584A.667.667 0 0 1 7 11.333V7.667C7 7.299 7.299 7 7.667 7h.584Z"/>`
	speedFillPath                 = `<path fill="currentColor" d="m12 13.333l-9.223 6.149A.5.5 0 0 1 2 19.066V4.934a.5.5 0 0 1 .777-.416L12 10.666V4.934a.5.5 0 0 1 .777-.416l10.599 7.066a.5.5 0 0 1 0 .832l-10.599 7.066a.5.5 0 0 1-.777-.416v-5.733Z"/>`
	speedLinePath                 = `<path fill="currentColor" d="m12 13.333l-9.223 6.149A.5.5 0 0 1 2 19.066V4.934a.5.5 0 0 1 .777-.416L12 10.666V4.934a.5.5 0 0 1 .777-.416l10.599 7.066a.5.5 0 0 1 0 .832l-10.599 7.066a.5.5 0 0 1-.777-.416v-5.733ZM10.394 12L4 7.737v8.526L10.394 12ZM14 7.737v8.526L20.394 12L14 7.737Z"/>`
	speedMiniFillPath             = `<path fill="currentColor" d="M4.788 17.443A.5.5 0 0 1 4 17.035V6.965a.5.5 0 0 1 .788-.409l7.133 5.035a.5.5 0 0 1 0 .817l-7.133 5.035ZM13 6.965a.5.5 0 0 1 .788-.409l7.133 5.035a.5.5 0 0 1 0 .817l-7.133 5.035a.5.5 0 0 1-.788-.408V6.965Z"/>`
	speedMiniLinePath             = `<path fill="currentColor" d="M9.032 12L6 9.86v4.28L9.032 12Zm-4.244 5.443A.5.5 0 0 1 4 17.035V6.965a.5.5 0 0 1 .788-.409l7.133 5.035a.5.5 0 0 1 0 .817l-7.133 5.035ZM15 14.14L18.032 12L15 9.86v4.28Zm-2-7.175a.5.5 0 0 1 .788-.409l7.133 5.035a.5.5 0 0 1 0 .817l-7.133 5.035a.5.5 0 0 1-.788-.408V6.965Z"/>`
	speedUpFillPath               = `<path fill="currentColor" d="M20 13c0 2.21-.895 4.21-2.343 5.657l1.414 1.414A9.97 9.97 0 0 0 22 13c0-5.523-4.477-10-10-10S2 7.477 2 13a9.969 9.969 0 0 0 2.929 7.071l1.414-1.414A8 8 0 1 1 20 13Zm-4.707-4.707L10.5 12.5l2 2l4.207-4.793l-1.414-1.414Z"/>`
	speedUpLinePath               = `<path fill="currentColor" d="M20 13c0 2.21-.895 4.21-2.343 5.657l1.414 1.414A9.97 9.97 0 0 0 22 13c0-5.523-4.477-10-10-10S2 7.477 2 13a9.969 9.969 0 0 0 2.929 7.071l1.414-1.414A8 8 0 1 1 20 13Zm-4.707-4.707l-4.5 4.5l1.414 1.414l4.5-4.5l-1.414-1.414Z"/>`
	splitCellsHorizontalPath      = `<path fill="currentColor" d="M20 3a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h16Zm-9 2H5v14h6v-4h2v4h6V5h-6v4h-2V5Zm4 4l3 3l-3 3v-2H9v2l-3-3l3-3v2h6V9Z"/>`
	splitCellsVerticalPath        = `<path fill="currentColor" d="M20 3a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h16Zm-1 2H5v5.999L9 11v2H5v6h14v-6h-4v-2l4-.001V5Zm-7 1l3 3h-2v6h2l-3 3l-3-3h2V9H9l3-3Z"/>`
	spotifyFillPath               = `<path fill="currentColor" d="M12.001 2c-5.5 0-10 4.5-10 10s4.5 10 10 10s10-4.5 10-10s-4.45-10-10-10Zm3.75 14.65c-2.35-1.45-5.3-1.75-8.8-.95c-.35.1-.65-.15-.75-.45c-.1-.35.15-.65.45-.75c3.8-.85 7.1-.5 9.7 1.1c.35.15.4.55.25.85c-.2.3-.55.4-.85.2Zm1-2.7c-2.7-1.65-6.8-2.15-9.95-1.15c-.4.1-.85-.1-.95-.5c-.1-.4.1-.85.5-.95c3.65-1.1 8.15-.55 11.25 1.35c.3.15.45.65.2 1s-.7.5-1.05.25ZM6.3 9.75c-.5.15-1-.15-1.15-.6c-.15-.5.15-1 .6-1.15c3.55-1.05 9.4-.85 13.1 1.35c.45.25.6.85.35 1.3c-.25.35-.85.5-1.3.25C14.7 9 9.35 8.8 6.3 9.75Z"/>`
	spotifyLinePath               = `<path fill="currentColor" d="M12.001 2c5.55 0 10 4.5 10 10s-4.5 10-10 10s-10-4.5-10-10s4.5-10 10-10Zm0 2c-4.395 0-8 3.605-8 8s3.605 8 8 8s8-3.605 8-8c0-4.414-3.573-8-8-8Zm3.75 12.65c-2.35-1.45-5.3-1.75-8.8-.95c-.35.1-.65-.15-.75-.45c-.1-.35.15-.65.45-.75c3.8-.85 7.1-.5 9.7 1.1c.35.15.4.55.25.85c-.2.3-.55.4-.85.2Zm1-2.7c-2.7-1.65-6.8-2.15-9.95-1.15c-.4.1-.85-.1-.95-.5c-.1-.4.1-.85.5-.95c3.65-1.1 8.15-.55 11.25 1.35c.3.15.45.65.2 1s-.7.5-1.05.25ZM6.3 9.75c-.5.15-1-.15-1.15-.6c-.15-.5.15-1 .6-1.15c3.55-1.05 9.4-.85 13.1 1.35c.45.25.6.85.35 1.3c-.25.35-.85.5-1.3.25C14.7 9 9.35 8.8 6.3 9.75Z"/>`
	spyFillPath                   = `<path fill="currentColor" d="M17 13a4 4 0 0 1 0 8c-2.142 0-4-1.79-4-4h-2a4 4 0 1 1-.535-2h3.07A3.998 3.998 0 0 1 17 13ZM2 12v-2h2V7a4 4 0 0 1 4-4h8a4 4 0 0 1 4 4v3h2v2H2Z"/>`
	spyLinePath                   = `<path fill="currentColor" d="M17 13a4 4 0 1 1-4 4h-2a4 4 0 1 1-.535-2h3.07A3.998 3.998 0 0 1 17 13ZM7 15a2 2 0 1 0 0 4a2 2 0 0 0 0-4Zm10 0a2 2 0 1 0 0 4a2 2 0 0 0 0-4ZM16 3a4 4 0 0 1 4 4v3h2v2H2v-2h2V7a4 4 0 0 1 4-4h8Zm0 2H8c-1.054 0-2 .95-2 2v3h12V7c0-1.054-.95-2-2-2Z"/>`
	squareFillPath                = `<path fill="currentColor" d="M4 3h16a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Z"/>`
	squareLinePath                = `<path fill="currentColor" d="M4 3h16a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Zm1 2v14h14V5H5Z"/>`
	stackFillPath                 = `<path fill="currentColor" d="m20.083 10.5l1.202.721a.5.5 0 0 1 0 .858L12 17.649l-9.285-5.57a.5.5 0 0 1 0-.858l1.202-.721L12 15.35l8.083-4.85Zm0 4.7l1.202.721a.5.5 0 0 1 0 .858l-8.77 5.262a1 1 0 0 1-1.03 0l-8.77-5.262a.5.5 0 0 1 0-.858l1.202-.721L12 20.05l8.083-4.85ZM12.514 1.309l8.771 5.262a.5.5 0 0 1 0 .858L12 12.999L2.715 7.43a.5.5 0 0 1 0-.858l8.77-5.262a1 1 0 0 1 1.03 0Z"/>`
	stackLinePath                 = `<path fill="currentColor" d="m20.083 15.2l1.202.721a.5.5 0 0 1 0 .858l-8.77 5.262a1 1 0 0 1-1.03 0l-8.77-5.262a.5.5 0 0 1 0-.858l1.202-.721L12 20.05l8.083-4.85Zm0-4.7l1.202.721a.5.5 0 0 1 0 .858L12 17.649l-9.285-5.57a.5.5 0 0 1 0-.858l1.202-.721L12 15.35l8.083-4.85Zm-7.569-9.191l8.771 5.262a.5.5 0 0 1 0 .858L12 12.999L2.715 7.43a.5.5 0 0 1 0-.858l8.77-5.262a1 1 0 0 1 1.03 0ZM12 3.332L5.887 7L12 10.667L18.113 7L12 3.332Z"/>`
	stackOverflowFillPath         = `<path fill="currentColor" d="M18.001 20.003V14.67h2v7.333h-16V14.67h2v5.333h12ZM7.6 14.736l.313-1.979l8.837 1.7l-.113 1.586L7.6 14.736Zm1.2-4.531l.732-1.6l7.998 3.732l-.733 1.6l-7.998-3.732Zm2.265-3.932l1.133-1.333l6.798 5.664l-1.133 1.333l-6.798-5.664Zm4.332-4.132l5.265 7.064l-1.4 1.066l-5.264-7.064l1.4-1.066ZM7.333 18.668V16.67h9.33v2h-9.33Z"/>`
	stackOverflowLinePath         = `<path fill="currentColor" d="M18.001 20.003V15h2v7.003h-16V15h2v5.003h12ZM7.501 18v-2h9v2h-9Zm.077-4.38l.347-1.97l8.864 1.563l-.348 1.97l-8.863-1.563Zm1.634-5.504l1-1.732l7.794 4.5l-1 1.732l-7.794-4.5Zm3.417-4.613l1.532-1.285l5.785 6.894l-1.532 1.286l-5.785-6.895Z"/>`
	stackshareFillPath            = `<path fill="currentColor" d="M21.001 3a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1h-18a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h18Zm-4.208 2.621a2.222 2.222 0 0 0-2.133 1.6h-1.998l-2.46 4.185H8.764a2.222 2.222 0 1 0 0 1.242h1.471l2.417 4.134h2.018a2.222 2.222 0 1 0 0-1.243h-1.317l-2.056-3.537l2.053-3.538h1.31a2.222 2.222 0 1 0 2.133-2.843Zm.011 9.427a1.168 1.168 0 1 1-1.145 1.394s-.03-.226 0-.453a1.17 1.17 0 0 1 1.145-.94Zm-10.152-4.21a1.169 1.169 0 0 1 0 2.335a1.168 1.168 0 0 1 0-2.335Zm10.15-4.209a1.168 1.168 0 0 1 0 2.335a1.169 1.169 0 0 1-1.144-.941c-.026-.206 0-.446 0-.446a1.168 1.168 0 0 1 1.144-.948Z"/>`
	stackshareLinePath            = `<path fill="currentColor" d="M9.537 13H7.33a3.001 3.001 0 0 1-5.829-1a3 3 0 0 1 5.83-1h2.206l3.464-6h3.17a3.001 3.001 0 0 1 5.83 1a3 3 0 0 1-5.829 1h-2.017l-2.886 4.999L14.156 17h2.016A3.001 3.001 0 0 1 22 18a3 3 0 0 1-5.829 1H13l-3.464-6Zm9.464 4a1 1 0 1 0 0 2a1 1 0 0 0 0-2Zm-14.5-6a1 1 0 1 0 0 2a1 1 0 0 0 0-2Zm14.5-6a1 1 0 1 0 0 2a1 1 0 0 0 0-2Z"/>`
	starFillPath                  = `<path fill="currentColor" d="m12 18.26l-7.053 3.948l1.575-7.928L.588 8.792l8.027-.952L12 .5l3.385 7.34l8.027.952l-5.934 5.488l1.575 7.928L12 18.26Z"/>`
	starHalfFillPath              = `<path fill="currentColor" d="m12 15.968l4.247 2.377l-.948-4.773l3.573-3.305l-4.833-.573l-2.038-4.419v10.693Zm0 2.292l-7.053 3.948l1.575-7.928L.588 8.792l8.027-.952L12 .5l3.385 7.34l8.027.952l-5.934 5.488l1.575 7.928L12 18.26Z"/>`
	starHalfLinePath              = `<path fill="currentColor" d="m12 15.968l4.247 2.377l-.948-4.773l3.573-3.305l-4.833-.573l-2.038-4.419v10.693Zm0 2.292l-7.053 3.948l1.575-7.928L.588 8.792l8.027-.952L12 .5l3.385 7.34l8.027.952l-5.934 5.488l1.575 7.928L12 18.26Z"/>`
	starHalfSFillPath             = `<path fill="currentColor" d="m12 14.656l2.818 1.72l-.766-3.21l2.506-2.147l-3.29-.264l-1.267-3.047v6.948ZM12 17l-5.877 3.59l1.598-6.7l-5.23-4.48l6.865-.55L12 2.5l2.645 6.36l6.865.55l-5.23 4.48l1.598 6.7L12 17Z"/>`
	starHalfSLinePath             = `<path fill="currentColor" d="m12 14.656l2.818 1.72l-.766-3.21l2.506-2.147l-3.29-.264l-1.267-3.047v6.948ZM12 17l-5.877 3.59l1.598-6.7l-5.23-4.48l6.865-.55L12 2.5l2.645 6.36l6.865.55l-5.23 4.48l1.598 6.7L12 17Z"/>`
	starLinePath                  = `<path fill="currentColor" d="m12 18.26l-7.053 3.948l1.575-7.928L.588 8.792l8.027-.952L12 .5l3.385 7.34l8.027.952l-5.934 5.488l1.575 7.928L12 18.26Zm0-2.292l4.247 2.377l-.948-4.773l3.573-3.305l-4.833-.573l-2.038-4.419l-2.039 4.42l-4.833.572l3.573 3.305l-.948 4.773L12 15.968Z"/>`
	starSFillPath                 = `<path fill="currentColor" d="m12 17l-5.877 3.59l1.598-6.7l-5.23-4.48l6.865-.55L12 2.5l2.645 6.36l6.865.55l-5.23 4.48l1.598 6.7L12 17Z"/>`
	starSLinePath                 = `<path fill="currentColor" d="m12 17l-5.877 3.59l1.598-6.7l-5.23-4.48l6.865-.55L12 2.5l2.645 6.36l6.865.55l-5.23 4.48l1.598 6.7L12 17Zm0-2.344l2.818 1.72l-.766-3.21l2.506-2.147l-3.29-.264l-1.267-3.047l-1.268 3.047l-3.29.264l2.507 2.147l-.766 3.21l2.817-1.72Z"/>`
	starSmileFillPath             = `<path fill="currentColor" d="m11.999.5l4.226 6.183l7.186 2.109l-4.575 5.93l.216 7.486l-7.053-2.518l-7.054 2.518l.216-7.486l-4.575-5.93l7.187-2.109L11.999.5Zm-2 11.5h-2a4 4 0 0 0 7.995.2l.005-.2h-2a2 2 0 0 1-3.995.15L10 12Z"/>`
	starSmileLinePath             = `<path fill="currentColor" d="m11.999.5l4.226 6.183l7.186 2.109l-4.575 5.93l.216 7.486l-7.053-2.518l-7.054 2.518l.216-7.486l-4.575-5.93l7.187-2.109L11.999.5Zm0 3.544L9.02 8.402L3.956 9.887l3.225 4.178l-.153 5.275l4.97-1.774l4.97 1.774l-.151-5.274l3.224-4.179l-5.065-1.485L12 4.044Zm-2 7.956a2 2 0 1 0 4 0h2a4 4 0 1 1-8 0h2Z"/>`
	steamFillPath                 = `<path fill="currentColor" d="M12.005 2c-5.25 0-9.556 4.05-9.964 9.197l5.36 2.216a2.823 2.823 0 0 1 1.593-.492c.053 0 .105.003.157.005l2.384-3.452v-.049c0-2.08 1.69-3.77 3.77-3.77a3.776 3.776 0 0 1 3.77 3.772a3.774 3.774 0 0 1-3.77 3.771h-.087l-3.397 2.426c0 .043.003.088.003.133A2.826 2.826 0 0 1 9 18.587a2.844 2.844 0 0 1-2.775-2.273l-3.838-1.589C3.574 18.922 7.428 22 12.006 22c5.522 0 9.998-4.477 9.998-10c0-5.522-4.477-10-9.999-10ZM7.08 16.667c.218.452.595.832 1.095 1.041a2.126 2.126 0 0 0 2.78-2.77a2.123 2.123 0 0 0-2.712-1.178l1.269.526a1.565 1.565 0 0 1-1.204 2.889l-1.228-.508Zm10.74-7.245a2.516 2.516 0 0 0-2.513-2.512a2.513 2.513 0 1 0 2.513 2.512ZM15.312 7.53A1.89 1.89 0 0 1 17.2 9.418a1.89 1.89 0 0 1-1.888 1.888a1.887 1.887 0 1 1 0-3.776Z"/>`
	steamLinePath                 = `<path fill="currentColor" d="M17.001 4a5 5 0 1 1-.892 9.92l-2.651 1.989a4 4 0 1 1-7.923.068L1.709 14.43l.75-1.854l3.826 1.545a3.994 3.994 0 0 1 3.697-1.592l2.04-3.061A5 5 0 0 1 17.002 4Zm-7.5 10.5c-.464 0-.892.158-1.231.424l1.606.649a1 1 0 0 1-.75 1.854L7.52 16.78a2 2 0 1 0 1.981-2.28Zm3.364-2.69l-.983 1.476c.284.21.54.458.758.735l1.36-1.02a5.027 5.027 0 0 1-1.135-1.191ZM17 6a3 3 0 1 0 0 6a3 3 0 0 0 0-6Zm0 1a2 2 0 1 1 0 4a2 2 0 0 1 0-4Z"/>`
	steeringFillPath              = `<path fill="currentColor" d="M21.8 14.001a10.009 10.009 0 0 1-8.401 7.902v-2.025A8.01 8.01 0 0 0 19.747 14l2.052.001Zm-17.548 0a8.01 8.01 0 0 0 6.247 5.859v2.028a10.01 10.01 0 0 1-8.3-7.887h2.053ZM17.999 11v2h-1a4 4 0 0 0-3.995 3.8L13 17v1h-2v-1a4 4 0 0 0-3.8-3.995L7 13H6v-2h12Zm-6-9c5.186 0 9.45 3.947 9.951 9h-2.012A8.001 8.001 0 0 0 4.06 11H2.05C2.552 5.947 6.815 2 12 2Z"/>`
	steeringLinePath              = `<path fill="currentColor" d="M21.8 14.001a10.009 10.009 0 0 1-8.401 7.902v-2.025A8.01 8.01 0 0 0 19.747 14l2.052.001Zm-17.548 0a8.01 8.01 0 0 0 6.247 5.859v2.028a10.01 10.01 0 0 1-8.3-7.887h2.053ZM17.999 11v2h-3a2 2 0 0 0-1.994 1.85l-.006.15v3h-2v-3a2 2 0 0 0-1.85-1.995L8.999 13H6v-2h12Zm-6-9c5.186 0 9.45 3.947 9.951 9h-2.012A8.001 8.001 0 0 0 4.06 11H2.05C2.552 5.947 6.815 2 12 2Z"/>`
	steeringTwoFillPath           = `<path fill="currentColor" d="M12 2c5.523 0 10 4.477 10 10s-4.477 10-10 10S2 17.523 2 12S6.477 2 12 2ZM8 13l-3.938.001A8.004 8.004 0 0 0 11 19.938V16a3 3 0 0 1-3-3Zm11.938.001L16 13a3 3 0 0 1-3 3l.001 3.938a8.004 8.004 0 0 0 6.937-6.937ZM12 4a8.001 8.001 0 0 0-7.938 7H8a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1h3.938A8.001 8.001 0 0 0 12 4Z"/>`
	steeringTwoLinePath           = `<path fill="currentColor" d="M12 2c5.523 0 10 4.477 10 10s-4.477 10-10 10S2 17.523 2 12S6.477 2 12 2ZM8 13l-3.938.001A8.004 8.004 0 0 0 11 19.938V16a3 3 0 0 1-3-3Zm11.938.001L16 13a3 3 0 0 1-3 3l.001 3.938a8.004 8.004 0 0 0 6.937-6.937ZM14 12h-4v1a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1v-1Zm-2-8a8.001 8.001 0 0 0-7.938 7H8a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1h3.938A8.001 8.001 0 0 0 12 4Z"/>`
	stethoscopeFillPath           = `<path fill="currentColor" d="M8 3v2H6v4a4 4 0 0 0 8 0V5h-2V3h3a1 1 0 0 1 1 1v5a6.002 6.002 0 0 1-5 5.917V16.5a3.5 3.5 0 0 0 6.775 1.238a3 3 0 1 1 2.05.148A5.502 5.502 0 0 1 8.999 16.5v-1.583A6.002 6.002 0 0 1 4 9V4a1 1 0 0 1 1-1h3Z"/>`
	stethoscopeLinePath           = `<path fill="currentColor" d="M8 3v2H6v4a4 4 0 0 0 8 0V5h-2V3h3a1 1 0 0 1 1 1v5a6.002 6.002 0 0 1-5 5.917V16.5a3.5 3.5 0 0 0 6.775 1.238a3 3 0 1 1 2.05.148A5.502 5.502 0 0 1 8.999 16.5v-1.583A6.002 6.002 0 0 1 4 9V4a1 1 0 0 1 1-1h3Zm11 11a1 1 0 1 0 0 2a1 1 0 0 0 0-2Z"/>`
	stickyNoteFillPath            = `<path fill="currentColor" d="m15 14l-.117.007a1 1 0 0 0-.876.876L14 15v6H3.998A.996.996 0 0 1 3 20.007V3.993C3 3.445 3.445 3 3.993 3h16.014c.548 0 .993.447.993.998V14h-6Zm6 2l-5 4.997V16h5Z"/>`
	stickyNoteLinePath            = `<path fill="currentColor" d="m21 15l-6 5.996L4.002 21A.998.998 0 0 1 3 20.007V3.993C3 3.445 3.445 3 3.993 3h16.014c.548 0 .993.456.993 1.002V15ZM19 5H5v14h8v-5a1 1 0 0 1 .883-.993L14 13l5-.001V5Zm-.829 9.999L15 15v3.169l3.171-3.17Z"/>`
	stickyNoteTwoFillPath         = `<path fill="currentColor" d="m21 16l-5.003 5H3.998A.996.996 0 0 1 3 20.007V3.993C3 3.445 3.445 3 3.993 3h16.014c.548 0 .993.447.993.998V16Z"/>`
	stickyNoteTwoLinePath         = `<path fill="currentColor" d="M3.998 21A.996.996 0 0 1 3 20.007V3.993C3 3.445 3.445 3 3.993 3h16.014c.548 0 .993.447.993.998V16l-5.003 5H3.998ZM5 19h10.169L19 15.171V5H5v14Z"/>`
	stockFillPath                 = `<path fill="currentColor" d="M8.005 5.003h3v9h-3v3h-2v-3h-3v-9h3v-3h2v3Zm10 5h3v9h-3v3h-2v-3h-3v-9h3v-3h2v3Z"/>`
	stockLinePath                 = `<path fill="currentColor" d="M8.005 5.003h3v9h-3v3h-2v-3h-3v-9h3v-3h2v3Zm-3 2v5h4v-5h-4Zm13 3h3v9h-3v3h-2v-3h-3v-9h3v-3h2v3Zm-3 2v5h4v-5h-4Z"/>`
	stopCircleFillPath            = `<path fill="currentColor" d="M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10ZM9 9v6h6V9H9Z"/>`
	stopCircleLinePath            = `<path fill="currentColor" d="M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10Zm0-2a8 8 0 1 0 0-16a8 8 0 0 0 0 16ZM9 9h6v6H9V9Z"/>`
	stopFillPath                  = `<path fill="currentColor" d="M6 5h12a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H6a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1Z"/>`
	stopLinePath                  = `<path fill="currentColor" d="M7 7v10h10V7H7ZM6 5h12a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H6a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1Z"/>`
	stopMiniFillPath              = `<path fill="currentColor" d="M6 7v10a1 1 0 0 0 1 1h10a1 1 0 0 0 1-1V7a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1Z"/>`
	stopMiniLinePath              = `<path fill="currentColor" d="M6 7a1 1 0 0 1 1-1h10a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1V7Zm2 1v8h8V8H8Z"/>`
	storeFillPath                 = `<path fill="currentColor" d="M21 11.646V21a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1v-9.354A3.985 3.985 0 0 1 2 9V3a1 1 0 0 1 1-1h18a1 1 0 0 1 1 1v6a3.99 3.99 0 0 1-1 2.646ZM14 9a1 1 0 1 1 2 0a2 2 0 1 0 4 0V4H4v5a2 2 0 1 0 4 0a1 1 0 0 1 2 0a2 2 0 1 0 4 0Z"/>`
	storeLinePath                 = `<path fill="currentColor" d="M21 11.646V21a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1v-9.354A3.985 3.985 0 0 1 2 9V3a1 1 0 0 1 1-1h18a1 1 0 0 1 1 1v6a3.99 3.99 0 0 1-1 2.646Zm-2 1.228a4.01 4.01 0 0 1-4-1.228A3.99 3.99 0 0 1 12 13a3.99 3.99 0 0 1-3-1.354a3.99 3.99 0 0 1-4 1.228V20h14v-7.126ZM14 9a1 1 0 1 1 2 0a2 2 0 1 0 4 0V4H4v5a2 2 0 1 0 4 0a1 1 0 0 1 2 0a2 2 0 1 0 4 0Z"/>`
	storeThreeFillPath            = `<path fill="currentColor" d="M21 13v7a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1v-7H2v-2l1-5h18l1 5v2h-1ZM5 13v6h14v-6H5Zm1 1h8v3H6v-3ZM3 3h18v2H3V3Z"/>`
	storeThreeLinePath            = `<path fill="currentColor" d="M21 13v7a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1v-7H2v-2l1-5h18l1 5v2h-1ZM5 13v6h14v-6H5Zm-.96-2h15.92l-.6-3H4.64l-.6 3ZM6 14h8v3H6v-3ZM3 3h18v2H3V3Z"/>`
	storeTwoFillPath              = `<path fill="currentColor" d="M22 20v2H2v-2h1v-6.758A4.496 4.496 0 0 1 1 9.5c0-.827.224-1.624.633-2.303L4.345 2.5a1 1 0 0 1 .866-.5H18.79a1 1 0 0 1 .866.5l2.703 4.682c.418.694.642 1.49.642 2.318c0 1.56-.794 2.935-2 3.742V20h1ZM5.789 4L3.356 8.213a2.5 2.5 0 1 0 4.466 2.216c.335-.837 1.52-.837 1.856 0a2.5 2.5 0 0 0 4.644 0c.335-.837 1.52-.837 1.856 0a2.5 2.5 0 1 0 4.457-2.232L18.21 4H5.79Z"/>`
	storeTwoLinePath              = `<path fill="currentColor" d="M21 13.242V20h1v2H2v-2h1v-6.758A4.496 4.496 0 0 1 1 9.5c0-.827.224-1.624.633-2.303L4.345 2.5a1 1 0 0 1 .866-.5H18.79a1 1 0 0 1 .866.5l2.703 4.682c.418.694.642 1.49.642 2.318c0 1.56-.794 2.935-2 3.742Zm-2 .73a4.496 4.496 0 0 1-3.75-1.36A4.496 4.496 0 0 1 12 14.001a4.496 4.496 0 0 1-3.25-1.387A4.496 4.496 0 0 1 5 13.973V20h14v-6.027ZM5.789 4L3.356 8.213a2.5 2.5 0 1 0 4.466 2.216c.335-.837 1.52-.837 1.856 0a2.5 2.5 0 0 0 4.644 0c.335-.837 1.52-.837 1.856 0a2.5 2.5 0 1 0 4.457-2.232L18.21 4H5.79Z"/>`
	strikethroughPath             = `<path fill="currentColor" d="M17.154 14c.23.516.346 1.09.346 1.72c0 1.342-.524 2.392-1.571 3.147C14.88 19.622 13.434 20 11.586 20c-1.64 0-3.263-.381-4.87-1.145v-2.254c1.52.877 3.075 1.316 4.666 1.316c2.551 0 3.83-.732 3.839-2.197a2.21 2.21 0 0 0-.648-1.603l-.12-.117H3v-2h18v2h-3.846Zm-4.078-3H7.629a4.086 4.086 0 0 1-.481-.522C6.716 9.92 6.5 9.246 6.5 8.452c0-1.236.466-2.287 1.397-3.153C8.83 4.433 10.271 4 12.222 4c1.471 0 2.879.328 4.222.984v2.152c-1.2-.687-2.515-1.03-3.946-1.03c-2.48 0-3.719.782-3.719 2.346c0 .42.218.786.654 1.099c.436.313.974.563 1.613.75c.62.18 1.297.414 2.03.699Z"/>`
	strikethroughTwoPath          = `<path fill="currentColor" d="M13 9h-2V6H5V4h14v2h-6v3Zm0 6v5h-2v-5h2ZM3 11h18v2H3v-2Z"/>`
	subscriptPath                 = `<path fill="currentColor" d="M5.596 4L10.5 9.928L15.404 4H18l-6.202 7.497L18 18.994V19h-2.59l-4.91-5.934L5.59 19H3v-.006l6.202-7.497L3 4h2.596ZM21.8 16a.8.8 0 1 0-1.57.22l-1.154.33A2.001 2.001 0 1 1 23 16c0 .573-.24 1.09-.627 1.454L20.744 19H23v1h-4v-1l2.55-2.42a.798.798 0 0 0 .25-.58Z"/>`
	subscriptTwoPath              = `<path fill="currentColor" d="M11 6v13H9V6H3V4h14v2h-6Zm8.55 10.58a.8.8 0 1 0-1.32-.36l-1.154.33A2.001 2.001 0 1 1 21 16c0 .573-.24 1.09-.627 1.454L18.744 19H21v1h-4v-1l2.55-2.42Z"/>`
	subtractFillPath              = `<path fill="currentColor" d="M19 11H5v2h14v-2Z"/>`
	subtractLinePath              = `<path fill="currentColor" d="M5 11v2h14v-2H5Z"/>`
	subwayFillPath                = `<path fill="currentColor" d="m17.2 20l1.8 1.5v.5H5v-.5L6.8 20H5a2 2 0 0 1-2-2V7a4 4 0 0 1 4-4h10a4 4 0 0 1 4 4v11a2 2 0 0 1-2 2h-1.8ZM11 12V5H7a2 2 0 0 0-2 2v5h6Zm2 0h6V7a2 2 0 0 0-2-2h-4v7Zm-5.5 6a1.5 1.5 0 1 0 0-3a1.5 1.5 0 0 0 0 3Zm9 0a1.5 1.5 0 1 0 0-3a1.5 1.5 0 0 0 0 3Z"/>`
	subwayLinePath                = `<path fill="currentColor" d="m17.2 20l1.8 1.5v.5H5v-.5L6.8 20H5a2 2 0 0 1-2-2V7a4 4 0 0 1 4-4h10a4 4 0 0 1 4 4v11a2 2 0 0 1-2 2h-1.8ZM13 5v6h6V7a2 2 0 0 0-2-2h-4Zm-2 0H7a2 2 0 0 0-2 2v4h6V5Zm8 8H5v5h14v-5ZM7.5 17a1.5 1.5 0 1 1 0-3a1.5 1.5 0 0 1 0 3Zm9 0a1.5 1.5 0 1 1 0-3a1.5 1.5 0 0 1 0 3Z"/>`
	subwayWifiFillPath            = `<path fill="currentColor" d="M13 3v9h8v6a2 2 0 0 1-2 2h-1.8l1.8 1.5v.5H5v-.5L6.8 20H5a2 2 0 0 1-2-2V7a4 4 0 0 1 4-4h6ZM7.5 15a1.5 1.5 0 1 0 0 3a1.5 1.5 0 0 0 0-3Zm9 0a1.5 1.5 0 1 0 0 3a1.5 1.5 0 0 0 0-3ZM11 5H7a2 2 0 0 0-1.995 1.85L5 7v5h6V5Zm7.5-4a4.5 4.5 0 1 1 0 9a4.5 4.5 0 0 1 0-9Zm0 5.167c-.491 0-.94.177-1.289.47l-.125.115L18.5 8.167l1.413-1.415a1.994 1.994 0 0 0-1.413-.585Zm0-2.667a4.65 4.65 0 0 0-3.128 1.203l-.173.165l.944.942a3.323 3.323 0 0 1 2.357-.977a3.32 3.32 0 0 1 2.201.83l.156.147l.943-.943A4.652 4.652 0 0 0 18.5 3.5Z"/>`
	subwayWifiLinePath            = `<path fill="currentColor" d="M21 18a2 2 0 0 1-2 2h-1.8l1.8 1.5v.5H5v-.5L6.8 20H5a2 2 0 0 1-2-2V7a4 4 0 0 1 4-4h6v8h8v7Zm-2-5H5v5h14v-5ZM7.5 14a1.5 1.5 0 1 1 0 3a1.5 1.5 0 0 1 0-3Zm9 0a1.5 1.5 0 1 1 0 3a1.5 1.5 0 0 1 0-3ZM11 5H7a2 2 0 0 0-1.995 1.85L5 7v4h6V5Zm7.5-4a4.5 4.5 0 1 1 0 9a4.5 4.5 0 0 1 0-9Zm0 5.167c-.491 0-.94.177-1.289.47l-.125.115L18.5 8.167l1.413-1.415a1.994 1.994 0 0 0-1.413-.585Zm0-2.667a4.65 4.65 0 0 0-3.128 1.203l-.173.165l.944.942a3.323 3.323 0 0 1 2.357-.977a3.32 3.32 0 0 1 2.201.83l.156.147l.943-.943A4.652 4.652 0 0 0 18.5 3.5Z"/>`
	suitcaseFillPath              = `<path fill="currentColor" d="M15 3a1 1 0 0 1 1 1v2h5a1 1 0 0 1 1 1v13a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h5V4a1 1 0 0 1 1-1h6ZM8 8H6v11h2V8Zm10 0h-2v11h2V8Zm-4-3h-4v1h4V5Z"/>`
	suitcaseLinePath              = `<path fill="currentColor" d="M15 3a1 1 0 0 1 1 1v2h5a1 1 0 0 1 1 1v13a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h5V4a1 1 0 0 1 1-1h6Zm1 5H8v11h8V8ZM4 8v11h2V8H4Zm10-3h-4v1h4V5Zm4 3v11h2V8h-2Z"/>`
	suitcaseThreeFillPath         = `<path fill="currentColor" d="M15 1a1 1 0 0 1 1 1v5h1V6h2v1h1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1h-1v1h-2v-1H7v1H5v-1H4a1 1 0 0 1-1-1V8a1 1 0 0 1 1-1h1V6h2v1h1V2a1 1 0 0 1 1-1h6Zm-6 9H7v8h2v-8Zm4 0h-2v8h2v-8Zm4 0h-2v8h2v-8Zm-3-7h-4v4h4V3Z"/>`
	suitcaseThreeLinePath         = `<path fill="currentColor" d="M15 1a1 1 0 0 1 1 1v5h1V6h2v1h1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1h-1v1h-2v-1H7v1H5v-1H4a1 1 0 0 1-1-1V8a1 1 0 0 1 1-1h1V6h2v1h1V2a1 1 0 0 1 1-1h6Zm4 8H5v10h14V9ZM9 10v8H7v-8h2Zm4 0v8h-2v-8h2Zm4 0v8h-2v-8h2Zm-3-7h-4v4h4V3Z"/>`
	suitcaseTwoFillPath           = `<path fill="currentColor" d="M18 23h-2v-1H8v1H6v-1H5a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2h3V3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2h3a2 2 0 0 1 2 2v13a2 2 0 0 1-2 2h-1v1ZM10 9H8v9h2V9Zm6 0h-2v9h2V9Zm-2-5h-4v1h4V4Z"/>`
	suitcaseTwoLinePath           = `<path fill="currentColor" d="M18 23h-2v-1H8v1H6v-1H5a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2h3V3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2h3a2 2 0 0 1 2 2v13a2 2 0 0 1-2 2h-1v1Zm1-16H5v13h14V7Zm-9 2v9H8V9h2Zm6 0v9h-2V9h2Zm-2-5h-4v1h4V4Z"/>`
	sunCloudyFillPath             = `<path fill="currentColor" d="M9.984 5.06a6.5 6.5 0 0 1 11.286 6.436A5.5 5.5 0 0 1 17.5 21H9a8 8 0 1 1 .984-15.941Zm2.071.544a8.026 8.026 0 0 1 4.403 4.495a5.533 5.533 0 0 1 3.12.307a4.5 4.5 0 0 0-7.522-4.802Z"/>`
	sunCloudyLinePath             = `<path fill="currentColor" d="M9.984 5.06a6.5 6.5 0 0 1 11.286 6.436A5.5 5.5 0 0 1 17.5 21H9a8 8 0 1 1 .984-15.941Zm2.071.544a8.026 8.026 0 0 1 4.403 4.495a5.533 5.533 0 0 1 3.12.307a4.5 4.5 0 0 0-7.522-4.802ZM17.5 19a3.5 3.5 0 1 0-2.5-5.95V13a6 6 0 1 0-6 6h8.5Z"/>`
	sunFillPath                   = `<path fill="currentColor" d="M12 18a6 6 0 1 1 0-12a6 6 0 0 1 0 12ZM11 1h2v3h-2V1Zm0 19h2v3h-2v-3ZM3.515 4.929l1.414-1.414L7.05 5.636L5.636 7.05L3.515 4.93ZM16.95 18.364l1.414-1.414l2.121 2.121l-1.414 1.414l-2.121-2.121Zm2.121-14.85l1.414 1.415l-2.121 2.121l-1.414-1.414l2.121-2.121ZM5.636 16.95l1.414 1.414l-2.121 2.121l-1.414-1.414l2.121-2.121ZM23 11v2h-3v-2h3ZM4 11v2H1v-2h3Z"/>`
	sunFoggyFillPath              = `<path fill="currentColor" d="M6.341 14A6 6 0 1 1 12 18v-4H6.341ZM6 20h9v2H6v-2Zm-5-9h3v2H1v-2Zm1 5h8v2H2v-2Zm9-15h2v3h-2V1ZM3.515 4.929l1.414-1.414L7.05 5.636L5.636 7.05L3.515 4.93ZM16.95 18.364l1.414-1.414l2.121 2.121l-1.414 1.414l-2.121-2.121Zm2.121-14.85l1.414 1.415l-2.121 2.121l-1.414-1.414l2.121-2.121ZM23 11v2h-3v-2h3Z"/>`
	sunFoggyLinePath              = `<path fill="currentColor" d="M8 12h2v2H4v-2h2a6 6 0 1 1 6 6v-2a4 4 0 1 0-4-4Zm-2 8h9v2H6v-2Zm-4-4h8v2H2v-2Zm9-15h2v3h-2V1ZM3.515 4.929l1.414-1.414L7.05 5.636L5.636 7.05L3.515 4.93ZM16.95 18.364l1.414-1.414l2.121 2.121l-1.414 1.414l-2.121-2.121Zm2.121-14.85l1.414 1.415l-2.121 2.121l-1.414-1.414l2.121-2.121ZM23 11v2h-3v-2h3Z"/>`
	sunLinePath                   = `<path fill="currentColor" d="M12 18a6 6 0 1 1 0-12a6 6 0 0 1 0 12Zm0-2a4 4 0 1 0 0-8a4 4 0 0 0 0 8ZM11 1h2v3h-2V1Zm0 19h2v3h-2v-3ZM3.515 4.929l1.414-1.414L7.05 5.636L5.636 7.05L3.515 4.93ZM16.95 18.364l1.414-1.414l2.121 2.121l-1.414 1.414l-2.121-2.121Zm2.121-14.85l1.414 1.415l-2.121 2.121l-1.414-1.414l2.121-2.121ZM5.636 16.95l1.414 1.414l-2.121 2.121l-1.414-1.414l2.121-2.121ZM23 11v2h-3v-2h3ZM4 11v2H1v-2h3Z"/>`
	supabaseFillPath              = `<path fill="currentColor" d="M3.084 15.25c-1.664 0-2.6-1.912-1.58-3.226L10.21.807C10.794.054 12 .467 12 1.42v7.33h8.916c1.663 0 2.6 1.913 1.58 3.227L13.79 23.194c-.584.753-1.79.34-1.79-.613v-7.33H3.084Z"/>`
	supabaseLinePath              = `<path fill="currentColor" d="M11 2.598V13.97H3.9c-.67 0-1.07-.785-.643-1.336L11 2.598Zm2 5.432V2.333C13 .52 10.703-.292 9.582 1.162L1.673 11.41c-1.427 1.85-.125 4.559 2.227 4.559H11v5.698c0 1.811 2.296 2.624 3.418 1.171l7.908-10.249c1.427-1.85.126-4.559-2.227-4.559H13Zm0 2h7.1c.669 0 1.069.785.643 1.337L13 21.402V10.03Z"/>`
	superscriptPath               = `<path fill="currentColor" d="m5.596 5l4.904 5.928L15.404 5H18l-6.202 7.497L18 19.994V20h-2.59l-4.91-5.934L5.59 20H3v-.006l6.202-7.497L3 5h2.596ZM21.55 6.58a.8.8 0 1 0-1.32-.36l-1.155.33A2.001 2.001 0 1 1 23 6c0 .573-.24 1.09-.627 1.454L20.744 9H23v1h-4V9l2.55-2.42Z"/>`
	superscriptTwoPath            = `<path fill="currentColor" d="M11 7v13H9V7H3V5h12v2h-4Zm8.55-.42a.8.8 0 1 0-1.32-.36l-1.154.33A2.001 2.001 0 1 1 21 6c0 .573-.24 1.09-.627 1.454L18.744 9H21v1h-4V9l2.55-2.42Z"/>`
	surgicalMaskFillPath          = `<path fill="currentColor" d="m12.485 3.121l7.758 1.94a1 1 0 0 1 .757.97V7h1c1.1 0 2 .9 2 2v3a3 3 0 0 1-3 3h-.421a5.999 5.999 0 0 1-2.896 3.158l-4.789 2.395a2 2 0 0 1-1.788 0l-4.79-2.395A5.999 5.999 0 0 1 3.422 15H3a3 3 0 0 1-3-3V9a2 2 0 0 1 2-2h1v-.97a1 1 0 0 1 .757-.97l7.758-1.939a2 2 0 0 1 .97 0ZM3 9H2v3a1 1 0 0 0 1 1V9Zm19 0h-1v4a1 1 0 0 0 1-1V9Z"/>`
	surgicalMaskLinePath          = `<path fill="currentColor" d="m12.485 3.121l7.758 1.94a1 1 0 0 1 .757.97V7h1c1.1 0 2 .9 2 2v3a3 3 0 0 1-3 3h-.421a5.999 5.999 0 0 1-2.896 3.158l-4.789 2.395a2 2 0 0 1-1.788 0l-4.79-2.395A5.999 5.999 0 0 1 3.422 15H3a3 3 0 0 1-3-3V9a2 2 0 0 1 2-2h1v-.97a1 1 0 0 1 .757-.97l7.758-1.939a2 2 0 0 1 .97 0ZM12 5.061l-7 1.75v5.98a4 4 0 0 0 2.211 3.578L12 18.764l4.789-2.395A4 4 0 0 0 19 12.792v-5.98l-7-1.75ZM3 9H2v3a1 1 0 0 0 1 1V9Zm19 0h-1v4a1 1 0 0 0 1-1V9Z"/>`
	surroundSoundFillPath         = `<path fill="currentColor" d="M3 3h18a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Zm4.05 4.121A6.978 6.978 0 0 0 5 12.071c0 1.933.784 3.683 2.05 4.95l1.414-1.414A4.984 4.984 0 0 1 7 12.07c0-1.38.56-2.63 1.464-3.535L7.05 7.12Zm9.9 0l-1.414 1.415A4.984 4.984 0 0 1 17 12.07c0 1.38-.56 2.63-1.464 3.536l1.414 1.414A6.978 6.978 0 0 0 19 12.07a6.978 6.978 0 0 0-2.05-4.95ZM12 15.071a3 3 0 1 0 0-6a3 3 0 0 0 0 6Zm0-2a1 1 0 1 1 0-2a1 1 0 0 1 0 2Z"/>`
	surroundSoundLinePath         = `<path fill="currentColor" d="M4 5v14h16V5H4ZM3 3h18a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Zm4.05 4.121l1.414 1.415A4.984 4.984 0 0 0 7 12.07c0 1.38.56 2.63 1.464 3.536L7.05 17.02A6.978 6.978 0 0 1 5 12.07c0-1.933.784-3.683 2.05-4.95Zm9.9 0a6.978 6.978 0 0 1 2.05 4.95a6.978 6.978 0 0 1-2.05 4.95l-1.414-1.414A4.984 4.984 0 0 0 17 12.07c0-1.38-.56-2.63-1.464-3.535L16.95 7.12ZM12 13.071a1 1 0 1 0 0-2a1 1 0 0 0 0 2Zm0 2a3 3 0 1 1 0-6a3 3 0 0 1 0 6Z"/>`
	surveyFillPath                = `<path fill="currentColor" d="M6 4v4h12V4h2.007c.548 0 .993.445.993.993v16.014a.994.994 0 0 1-.993.993H3.993A.993.993 0 0 1 3 21.007V4.993C3 4.445 3.445 4 3.993 4H6Zm3 13H7v2h2v-2Zm0-3H7v2h2v-2Zm0-3H7v2h2v-2Zm7-9v4H8V2h8Z"/>`
	surveyLinePath                = `<path fill="currentColor" d="M17 2v2h3.007c.548 0 .993.445.993.993v16.014a.994.994 0 0 1-.993.993H3.993A.993.993 0 0 1 3 21.007V4.993C3 4.445 3.445 4 3.993 4H7V2h10ZM7 6H5v14h14V6h-2v2H7V6Zm2 10v2H7v-2h2Zm0-3v2H7v-2h2Zm0-3v2H7v-2h2Zm6-6H9v2h6V4Z"/>`
	swapBoxFillPath               = `<path fill="currentColor" d="M3.005 3.003h18a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1h-18a1 1 0 0 1-1-1v-16a1 1 0 0 1 1-1Zm12 4v2h-4v2h4v2l3.5-3l-3.5-3Zm-6 10v-2h4v-2h-4v-2l-3.5 3l3.5 3Z"/>`
	swapBoxLinePath               = `<path fill="currentColor" d="M4.005 5.003v14h16v-14h-16Zm-1-2h18a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1h-18a1 1 0 0 1-1-1v-16a1 1 0 0 1 1-1Zm12 4l3.5 3l-3.5 3v-2h-4v-2h4v-2Zm-6 10l-3.5-3l3.5-3v2h4v2h-4v2Z"/>`
	swapFillPath                  = `<path fill="currentColor" d="M12.005 22.003c-5.523 0-10-4.477-10-10s4.477-10 10-10s10 4.477 10 10s-4.477 10-10 10Zm-5-13h2v4h2v-4h2l-3-3.5l-3 3.5Zm10 6h-2v-4h-2v4h-2l3 3.5l3-3.5Z"/>`
	swapLinePath                  = `<path fill="currentColor" d="M12.005 22.003c-5.523 0-10-4.477-10-10s4.477-10 10-10s10 4.477 10 10s-4.477 10-10 10Zm0-2a8 8 0 1 0 0-16a8 8 0 0 0 0 16Zm-5-11l3-3.5l3 3.5h-2v4h-2v-4h-2Zm10 6l-3 3.5l-3-3.5h2v-4h2v4h2Z"/>`
	switchFillPath                = `<path fill="currentColor" d="M13.62 21c-.085 0-.141-.057-.127-.127V3.127c0-.056.042-.113.113-.113h2.785a4.61 4.61 0 0 1 4.61 4.61v8.766a4.61 4.61 0 0 1-4.61 4.61H13.62Zm3.422-9.926c-1.004 0-1.824.82-1.824 1.824s.82 1.824 1.824 1.824s1.824-.82 1.824-1.824s-.82-1.824-1.824-1.824ZM5.8 8.4a1.7 1.7 0 0 1 1.696-1.696A1.7 1.7 0 0 1 9.193 8.4c0 .934-.763 1.697-1.697 1.697A1.702 1.702 0 0 1 5.8 8.4ZM11.54 3c.085 0 .142.057.128.127V20.86c0 .07-.057.127-.128.127H7.61A4.61 4.61 0 0 1 3 16.376V7.61A4.61 4.61 0 0 1 7.611 3h3.93Zm-1.315 16.544V4.442H7.611c-.849 0-1.64.34-2.235.933a3.088 3.088 0 0 0-.933 2.235v8.766c0 .849.34 1.64.933 2.234a3.088 3.088 0 0 0 2.235.934h2.615Z"/>`
	switchLinePath                = `<path fill="currentColor" d="M12.001 3v18h-4.4a4.6 4.6 0 0 1-4.6-4.6V7.6a4.6 4.6 0 0 1 4.6-4.6h4.4Zm-2 2h-2.4a2.6 2.6 0 0 0-2.6 2.6v8.8a2.6 2.6 0 0 0 2.6 2.6h2.4V5Zm-2.5 5a1.5 1.5 0 1 1 0-3a1.5 1.5 0 0 1 0 3Zm6.5-7h2.4a4.6 4.6 0 0 1 4.6 4.6v8.8a4.6 4.6 0 0 1-4.6 4.6h-2.4V3Zm3 11.7a1.8 1.8 0 1 0 0-3.6a1.8 1.8 0 0 0 0 3.6Z"/>`
	swordFillPath                 = `<path fill="currentColor" d="m7.048 13.406l3.535 3.536l-1.413 1.414l1.415 1.415l-1.414 1.414l-2.475-2.475l-2.829 2.829l-1.414-1.414l2.829-2.83l-2.475-2.474l1.414-1.414l1.414 1.413l1.413-1.414ZM3 3l3.546.003l11.817 11.818l1.415-1.414l1.415 1.414l-2.475 2.475l2.828 2.829l-1.414 1.414l-2.829-2.829l-2.474 2.475l-1.415-1.414l1.414-1.415L3.002 6.531L2.999 3Zm14.457 0L21 3.003l.002 3.523l-4.053 4.052l-3.536-3.535L17.456 3Z"/>`
	swordLinePath                 = `<path fill="currentColor" d="M17.456 3L21 3.003l.002 3.523l-5.467 5.466l2.828 2.829l1.415-1.414l1.415 1.414l-2.475 2.475l2.828 2.829l-1.414 1.414l-2.829-2.829l-2.474 2.475l-1.415-1.414l1.414-1.415l-2.829-2.828l-2.828 2.828l1.415 1.415l-1.414 1.414l-2.475-2.475l-2.829 2.829l-1.414-1.414l2.829-2.83l-2.475-2.474l1.414-1.414l1.414 1.413l2.827-2.828l-5.46-5.46L2.999 3l3.546.003l5.453 5.454L17.456 3Zm-7.58 10.406l-2.828 2.828l.708.707l2.827-2.828l-.707-.707ZM19 5.001h-.717l-4.87 4.869l.706.707L19 5.698v-.697Zm-14 0v.7l11.241 11.241l.707-.707L5.715 5.002L5 5.001Z"/>`
	syringeFillPath               = `<path fill="currentColor" d="m21.678 7.98l-1.414 1.413l-2.122-2.121l-2.121 2.121l3.536 3.536l-1.415 1.414l-.707-.707L11.071 20H5.414l-2.12 2.121l-1.415-1.414L4 18.586v-5.657l6.364-6.364l-.707-.707l1.414-1.414l3.536 3.535l2.121-2.121l-2.121-2.122l1.414-1.414l5.657 5.657Zm-12.02 6.363l-2.83-2.828l-1.414 1.414l2.829 2.828l1.414-1.414Zm2.828-2.828l-2.83-2.829L8.243 10.1l2.828 2.829l1.415-1.414Z"/>`
	syringeLinePath               = `<path fill="currentColor" d="m21.678 7.98l-1.414 1.413l-2.122-2.121l-2.121 2.121l3.536 3.536l-1.415 1.414l-.707-.707L11.071 20H5.414l-2.12 2.121l-1.415-1.414L4 18.586v-5.657l6.364-6.364l-.707-.707l1.414-1.414l3.536 3.535l2.121-2.121l-2.121-2.122l1.414-1.414l5.657 5.657Zm-5.657 4.242l-4.243-4.243l-1.414 1.414l2.121 2.122l-1.414 1.414l-2.121-2.122l-1.414 1.415l2.121 2.121l-1.414 1.414l-2.121-2.121l-.122.121V18h4.243l5.778-5.778Z"/>`
	tBoxFillPath                  = `<path fill="currentColor" d="M17 8H7v2h4v7h2v-7h4V8ZM4 3h16a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Z"/>`
	tBoxLinePath                  = `<path fill="currentColor" d="M5 5v14h14V5H5ZM4 3h16a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Zm9 7v7h-2v-7H7V8h10v2h-4Z"/>`
	tShirtAirFillPath             = `<path fill="currentColor" d="M12.705 17.793c.827.827 1.588 1.207 2.293 1.207c.378 0 .68-.067 1.237-.276l.392-.152c1.05-.421 1.58-.572 2.371-.572c1.214 0 2.379.545 3.486 1.58l.221.213l-1.414 1.414C20.464 20.38 19.703 20 18.998 20c-.378 0-.68.067-1.237.276l-.392.152c-1.05.421-1.58.572-2.371.572c-1.214 0-2.379-.545-3.486-1.58l-.221-.213l1.414-1.414ZM8.998 3a3 3 0 1 0 6 0h6a1 1 0 0 1 1 1v7a1 1 0 0 1-1 1h-9a2 2 0 0 0-1.994 1.85l-.006.15v7h-4a1 1 0 0 1-1-1l-.001-8.001L2.998 12a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h6Zm3.707 10.793c.827.827 1.588 1.207 2.293 1.207c.378 0 .68-.067 1.237-.276l.392-.152c1.05-.421 1.58-.572 2.371-.572c1.214 0 2.379.545 3.486 1.58l.221.213l-1.414 1.414C20.464 16.38 19.703 16 18.998 16c-.378 0-.68.067-1.237.276l-.392.152c-1.05.421-1.58.572-2.371.572c-1.214 0-2.379-.545-3.486-1.58l-.221-.213l1.414-1.414Z"/>`
	tShirtAirLinePath             = `<path fill="currentColor" d="M12.705 17.793c.827.827 1.588 1.207 2.293 1.207c.378 0 .68-.067 1.237-.276l.392-.152c1.05-.421 1.58-.572 2.371-.572c1.214 0 2.379.545 3.486 1.58l.221.213l-1.414 1.414C20.464 20.38 19.703 20 18.998 20c-.378 0-.68.067-1.237.276l-.392.152c-1.05.421-1.58.572-2.371.572c-1.214 0-2.379-.545-3.486-1.58l-.221-.213l1.414-1.414ZM8.998 3a3 3 0 1 0 6 0h6a1 1 0 0 1 1 1v7a1 1 0 0 1-1 1h-4.002v-2l3.002-.001v-5h-3.417l-.017.041a5.002 5.002 0 0 1-4.35 2.955L11.999 8a5.001 5.001 0 0 1-4.566-2.96L7.414 5H3.998v5l2.999-.001V19h3.001v2h-4a1 1 0 0 1-1-1l-.001-8.001L2.998 12a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h6Zm3.707 10.793c.827.827 1.588 1.207 2.293 1.207c.378 0 .68-.067 1.237-.276l.392-.152c1.05-.421 1.58-.572 2.371-.572c1.214 0 2.379.545 3.486 1.58l.221.213l-1.414 1.414C20.464 16.38 19.703 16 18.998 16c-.378 0-.68.067-1.237.276l-.392.152c-1.05.421-1.58.572-2.371.572c-1.214 0-2.379-.545-3.486-1.58l-.221-.213l1.414-1.414Z"/>`
	tShirtFillPath                = `<path fill="currentColor" d="m14.514 5l2.606-2.607a1 1 0 0 1 1.414 0l4.243 4.243a1 1 0 0 1 0 1.414l-3.778 3.778V21a1 1 0 0 1-1 1h-12a1 1 0 0 1-1-1v-9.17L1.22 8.05a1 1 0 0 1 0-1.414l4.242-4.243a1 1 0 0 1 1.414 0L9.484 5h5.03Z"/>`
	tShirtLinePath                = `<path fill="currentColor" d="m14.514 5l2.606-2.607a1 1 0 0 1 1.414 0l4.243 4.243a1 1 0 0 1 0 1.414l-3.778 3.778V21a1 1 0 0 1-1 1h-12a1 1 0 0 1-1-1v-9.17L1.22 8.05a1 1 0 0 1 0-1.414l4.242-4.243a1 1 0 0 1 1.414 0L9.484 5h5.03Zm.828 2H8.656L6.17 4.515L3.342 7.343L6.999 11v9h10v-9l3.657-3.657l-2.829-2.828L15.342 7Z"/>`
	tShirtTwoFillPath             = `<path fill="currentColor" d="M20.998 3a1 1 0 0 1 1 1v7a1 1 0 0 1-1 1h-2.001l.001 8a1 1 0 0 1-1 1h-12a1 1 0 0 1-1-1l-.001-8.001L2.998 12a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h6a3 3 0 1 0 6 0h6Z"/>`
	tShirtTwoLinePath             = `<path fill="currentColor" d="M8.998 3a3 3 0 1 0 6 0h6a1 1 0 0 1 1 1v7a1 1 0 0 1-1 1h-2.001l.001 8a1 1 0 0 1-1 1h-12a1 1 0 0 1-1-1l-.001-8.001L2.998 12a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h6Zm11 1.999h-3.417l-.017.041a5.002 5.002 0 0 1-4.35 2.955L11.999 8a5.001 5.001 0 0 1-4.566-2.96L7.414 5H3.998v5l2.999-.001V19h10.001l-.001-9l3.001-.001v-5Z"/>`
	tableAltFillPath              = `<path fill="currentColor" d="M7 14V3H3a1 1 0 0 0-1 1v10h5Zm8 0V3H9v11h6Zm7 0V4a1 1 0 0 0-1-1h-4v11h5Zm-1 7a1 1 0 0 0 1-1v-4H2v4a1 1 0 0 0 1 1h18Z"/>`
	tableAltLinePath              = `<path fill="currentColor" d="M21 3a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h18Zm-1 13H4v3h16v-3ZM8 5H4v9h4V5Zm6 0h-4v9h4V5Zm6 0h-4v9h4V5Z"/>`
	tableFillPath                 = `<path fill="currentColor" d="M15 21H9V10h6v11Zm2 0V10h5v10a1 1 0 0 1-1 1h-4ZM7 21H3a1 1 0 0 1-1-1V10h5v11ZM22 8H2V4a1 1 0 0 1 1-1h18a1 1 0 0 1 1 1v4Z"/>`
	tableLinePath                 = `<path fill="currentColor" d="M4 8h16V5H4v3Zm10 11v-9h-4v9h4Zm2 0h4v-9h-4v9Zm-8 0v-9H4v9h4ZM3 3h18a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Z"/>`
	tableTwoPath                  = `<path fill="currentColor" d="M13 10v4h6v-4h-6Zm-2 0H5v4h6v-4Zm2 9h6v-3h-6v3Zm-2 0v-3H5v3h6Zm2-14v3h6V5h-6Zm-2 0H5v3h6V5ZM4 3h16a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Z"/>`
	tabletFillPath                = `<path fill="currentColor" d="M5 2h14a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1Zm7 15a1 1 0 1 0 0 2a1 1 0 0 0 0-2Z"/>`
	tabletLinePath                = `<path fill="currentColor" d="M6 4v16h12V4H6ZM5 2h14a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1Zm7 15a1 1 0 1 1 0 2a1 1 0 0 1 0-2Z"/>`
	takeawayFillPath              = `<path fill="currentColor" d="M16 1a1 1 0 0 1 1 1v.999L22 3v6l-2.02-.001l2.767 7.596A4 4 0 1 1 15.127 19h-4.253a4.002 4.002 0 0 1-7.8-.227A1.998 1.998 0 0 1 2 17v-5h9a1 1 0 0 0 .883.993L12 13h2a1 1 0 0 0 .993-.883L15 12V3h-3V1h4ZM7 16a2 2 0 1 0 0 4a2 2 0 0 0 0-4Zm12 0a2 2 0 1 0 0 4a2 2 0 0 0 0-4ZM10 3a1 1 0 0 1 1 1v7H2V4a1 1 0 0 1 1-1h7Zm10 2h-3v2h3V5ZM9 5H4v1h5V5Z"/>`
	takeawayLinePath              = `<path fill="currentColor" d="M16 1a1 1 0 0 1 1 1v.999L22 3v6l-2.02-.001l2.767 7.596A4 4 0 1 1 15.127 19h-4.253a4.002 4.002 0 0 1-7.8-.227A1.998 1.998 0 0 1 2 17V4a1 1 0 0 1 1-1h7a1 1 0 0 1 1 1v8a1 1 0 0 0 .883.993L12 13h2a1 1 0 0 0 .993-.883L15 12V3h-3V1h4ZM7 16a2 2 0 1 0 0 4a2 2 0 0 0 0-4Zm12-.001a2 2 0 1 0 0 4a2 2 0 0 0 0-4Zm-1.148-7H17V12a3 3 0 0 1-3 3h-2a3.001 3.001 0 0 1-2.829-2H4v2.354A4.002 4.002 0 0 1 10.874 17h4.252a4.002 4.002 0 0 1 4.57-2.94l-1.844-5.061ZM9 8H4v3h5V8Zm11-3h-3v2h3V5ZM9 5H4v1h5V5Z"/>`
	taobaoFillPath                = `<path fill="currentColor" d="M3.576 8.277L2.383 10.12l2.201 1.37s1.464.754.762 2.17C4.697 14.997 1.5 17.928 1.5 17.928l2.862 1.798c1.984-4.326 1.85-3.75 2.347-5.306c.512-1.58.625-2.793-.242-3.676c-1.113-1.125-1.238-1.23-2.89-2.468Zm1.565-.693c1.04 0 1.882-.758 1.882-1.693c0-.944-.842-1.702-1.882-1.702c-1.049 0-1.887.762-1.887 1.702c.004.93.838 1.693 1.887 1.693Zm17.005.21s-.625-4.87-11.208-1.855c.455-.794.67-1.306.67-1.306l-2.642-.75s-1.068 3.507-2.97 5.14c0 0 1.846 1.072 1.826 1.04a17.065 17.065 0 0 0 1.407-1.596c.423-.19.83-.363 1.225-.524c-.492.887-1.278 2.217-2.068 3.056l1.113.983s.762-.737 1.588-1.62h.944v1.636H8.345v1.307h3.684v3.132l-.14-.004c-.408-.02-1.037-.089-1.287-.484c-.298-.483-.076-1.358-.064-1.903H7.995l-.093.053s-.935 4.205 2.69 4.112c3.386.093 5.329-.955 6.264-1.677l.371 1.395l2.089-.883l-1.415-3.483l-1.694.536l.315 1.19c-.428.33-.932.572-1.468.753v-2.737h3.592v-1.31h-3.592v-1.637h3.604V9.05h-6.41c.464-.568.823-1.088.92-1.415l-1.121-.306c4.797-1.734 7.47-1.435 7.45 1.403v7.474s.282 2.564-2.637 2.383l-1.58-.343l-.367 1.512s6.817 1.968 7.374-3.314c.552-5.281-.141-8.652-.141-8.652Z"/>`
	taobaoLinePath                = `<path fill="currentColor" d="M17.173 14H14.5v1.375c.55-.222 1.153-.491 1.812-.81l-.082-.239l.942-.327Zm.828-.288l.12-.041c.641 1.85 1.034 3.011 1.185 3.5l-1.912.589c-.073-.24-.216-.672-.427-1.292c-6.081 2.884-8.671 2.054-9.008-1.908l1.993-.17c.1 1.166.344 1.622.897 1.753c.393.093.94.063 1.652-.105V14h-3.5v-2h.513l-1.167-1.39c1.043-.876 1.858-1.83 2.449-2.863a41.29 41.29 0 0 0-1.552.434a13.953 13.953 0 0 1-1.754 2.11L6.09 8.86c1.273-1.247 2.333-2.909 3.176-4.994l1.854.75c-.153.379-.313.746-.48 1.101c3.702-.935 7.275-1.317 9.138-.68c1.223.418 1.919 1.392 2.188 2.585c.17.755.313 2.688.313 5.122c0 2.808-.056 3.771-.34 4.622c-.298.89-.697 1.418-1.408 1.984c-.657.523-1.553.764-2.645.823c-.673.038-1.368.003-2.095-.079a14.834 14.834 0 0 1-.354-.043l-.242-.032l.264-1.983a70.813 70.813 0 0 0 .556.07c.625.071 1.216.1 1.762.07c.714-.039 1.245-.181 1.508-.39c.426-.34.591-.558.756-1.053c.186-.555.238-1.449.238-3.989c0-2.298-.134-4.102-.265-4.683c-.13-.576-.41-.97-.883-1.131c-1.207-.413-3.801-.194-6.652.416l.615.262c-.13.303-.273.6-.43.89h5.337v2h-3.5V12h3.5v1.713Zm-5.5-3.213h-1.208A13.678 13.678 0 0 1 9.799 12h2.702v-1.5Zm-10.038-.438L3.54 8.376c1.062.679 2.935 2.427 3.338 3.162c1.239 2.26.198 4.175-3.122 7.997l-1.51-1.312c2.687-3.094 3.5-4.59 2.878-5.724c-.214-.39-1.857-1.923-2.661-2.438ZM5.14 7.583c-1.048 0-1.882-.762-1.886-1.693c0-.94.838-1.702 1.886-1.702c1.04 0 1.883.758 1.883 1.702c0 .935-.843 1.693-1.883 1.693Z"/>`
	tapeFillPath                  = `<path fill="currentColor" d="M10.83 13A3 3 0 1 0 8 15h8a3 3 0 1 0-2.83-2h-2.34ZM3 3h18a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Zm13 10a1 1 0 1 1 0-2a1 1 0 0 1 0 2Zm-8 0a1 1 0 1 1 0-2a1 1 0 0 1 0 2Z"/>`
	tapeLinePath                  = `<path fill="currentColor" d="M10.83 13h2.34A3 3 0 1 1 16 15H8a3 3 0 1 1 2.83-2ZM4 5v14h16V5H4ZM3 3h18a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Zm5 10a1 1 0 1 0 0-2a1 1 0 0 0 0 2Zm8 0a1 1 0 1 0 0-2a1 1 0 0 0 0 2Z"/>`
	taskFillPath                  = `<path fill="currentColor" d="M21 3v18.008a.993.993 0 0 1-.993.992H3.993A1 1 0 0 1 3 21.008V2.992C3 2.444 3.445 2 3.993 2H20a1 1 0 0 1 1 1Zm-9.707 10.121l-2.475-2.475l-1.414 1.415l3.889 3.889l5.657-5.657l-1.414-1.414l-4.243 4.242Z"/>`
	taskLinePath                  = `<path fill="currentColor" d="M19 4H5v16h14V4ZM3 2.992C3 2.444 3.447 2 3.998 2H20a1 1 0 0 1 1 1v17.992A1 1 0 0 1 20.007 22H3.993A1 1 0 0 1 3 21.008V2.992Zm8.293 10.13l4.243-4.243l1.414 1.414l-5.657 5.657l-3.89-3.89l1.415-1.414l2.475 2.475Z"/>`
	taxiFillPath                  = `<path fill="currentColor" d="M22 12v9a1 1 0 0 1-1 1h-1a1 1 0 0 1-1-1v-1H5v1a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1v-9l2.48-5.788A2 2 0 0 1 6.32 5H9V3h6v2h2.681a2 2 0 0 1 1.838 1.212L22 12ZM4.176 12h15.648l-2.143-5H6.32l-2.143 5ZM6.5 17a1.5 1.5 0 1 0 0-3a1.5 1.5 0 0 0 0 3Zm11 0a1.5 1.5 0 1 0 0-3a1.5 1.5 0 0 0 0 3Z"/>`
	taxiLinePath                  = `<path fill="currentColor" d="M22 11v10a1 1 0 0 1-1 1h-1a1 1 0 0 1-1-1v-1H5v1a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V11l2.447-4.894A2 2 0 0 1 6.237 5H9V3h6v2h2.764a2 2 0 0 1 1.789 1.106L22 11Zm-2 2H4v5h16v-5ZM4.236 11h15.528l-2-4H6.236l-2 4ZM6.5 17a1.5 1.5 0 1 1 0-3a1.5 1.5 0 0 1 0 3Zm11 0a1.5 1.5 0 1 1 0-3a1.5 1.5 0 0 1 0 3Z"/>`
	taxiWifiFillPath              = `<path fill="currentColor" d="M12 3v4H6.319l-2.144 5H22v9a1 1 0 0 1-1 1h-1a1 1 0 0 1-1-1v-1H5v1a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1v-9l2.48-5.788A2 2 0 0 1 6.32 5H9V3h3ZM6.5 14a1.5 1.5 0 1 0 0 3a1.5 1.5 0 0 0 0-3Zm11 0a1.5 1.5 0 1 0 0 3a1.5 1.5 0 0 0 0-3Zm1-13a4.5 4.5 0 1 1 0 9a4.5 4.5 0 0 1 0-9Zm0 5.167c-.491 0-.94.177-1.289.47l-.125.115L18.5 8.167l1.413-1.415a1.994 1.994 0 0 0-1.413-.585Zm0-2.667a4.65 4.65 0 0 0-3.128 1.203l-.173.165l.944.942a3.323 3.323 0 0 1 2.357-.977a3.32 3.32 0 0 1 2.201.83l.156.147l.943-.943A4.652 4.652 0 0 0 18.5 3.5Z"/>`
	taxiWifiLinePath              = `<path fill="currentColor" d="M12 3v4H6.236l-2.001 4H22v10a1 1 0 0 1-1 1h-1a1 1 0 0 1-1-1v-1H5v1a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V11l2.447-4.894A2 2 0 0 1 6.237 5H9V3h3Zm8 10H4v5h16v-5ZM6.5 14a1.5 1.5 0 1 1 0 3a1.5 1.5 0 0 1 0-3Zm11 0a1.5 1.5 0 1 1 0 3a1.5 1.5 0 0 1 0-3Zm1-13a4.5 4.5 0 1 1 0 9a4.5 4.5 0 0 1 0-9Zm0 5.167c-.491 0-.94.177-1.289.47l-.125.115L18.5 8.167l1.413-1.415a1.994 1.994 0 0 0-1.413-.585Zm0-2.667a4.65 4.65 0 0 0-3.128 1.203l-.173.165l.944.942a3.323 3.323 0 0 1 2.357-.977a3.32 3.32 0 0 1 2.201.83l.156.147l.943-.943A4.652 4.652 0 0 0 18.5 3.5Z"/>`
	teamFillPath                  = `<path fill="currentColor" d="M12 10a4 4 0 1 0 0-8a4 4 0 0 0 0 8Zm-6.5 3a2.5 2.5 0 1 0 0-5a2.5 2.5 0 0 0 0 5ZM21 10.5a2.5 2.5 0 1 1-5 0a2.5 2.5 0 0 1 5 0Zm-9 .5a5 5 0 0 1 5 5v6H7v-6a5 5 0 0 1 5-5Zm-7 5c0-.693.1-1.362.288-1.994l-.17.014A3.5 3.5 0 0 0 2 17.5V22h3v-6Zm17 6v-4.5a3.5 3.5 0 0 0-3.288-3.494c.187.632.288 1.301.288 1.994v6h3Z"/>`
	teamLinePath                  = `<path fill="currentColor" d="M12 11a5 5 0 0 1 5 5v6h-2v-6a3 3 0 0 0-2.824-2.995L12 13a3 3 0 0 0-2.995 2.824L9 16v6H7v-6a5 5 0 0 1 5-5Zm-6.5 3c.279 0 .55.033.81.094a5.948 5.948 0 0 0-.301 1.575L6 16v.086a1.493 1.493 0 0 0-.356-.08L5.5 16a1.5 1.5 0 0 0-1.493 1.355L4 17.5V22H2v-4.5A3.5 3.5 0 0 1 5.5 14Zm13 0a3.5 3.5 0 0 1 3.5 3.5V22h-2v-4.5a1.5 1.5 0 0 0-1.355-1.493L18.5 16c-.175 0-.343.03-.5.085V16c0-.666-.108-1.306-.308-1.904c.258-.063.53-.096.808-.096Zm-13-6a2.5 2.5 0 1 1 0 5a2.5 2.5 0 0 1 0-5Zm13 0a2.5 2.5 0 1 1 0 5a2.5 2.5 0 0 1 0-5Zm-13 2a.5.5 0 1 0 0 1a.5.5 0 0 0 0-1Zm13 0a.5.5 0 1 0 0 1a.5.5 0 0 0 0-1ZM12 2a4 4 0 1 1 0 8a4 4 0 0 1 0-8Zm0 2a2 2 0 1 0 0 4a2 2 0 0 0 0-4Z"/>`
	telegramFillPath              = `<path fill="currentColor" d="M12.001 22c-5.523 0-10-4.477-10-10s4.477-10 10-10s10 4.477 10 10s-4.477 10-10 10Zm-3.11-8.83l.013-.007l.87 2.87c.112.311.266.367.453.341c.188-.025.287-.126.41-.244l1.188-1.148l2.55 1.888c.466.257.801.124.917-.432l1.658-7.822c.183-.728-.139-1.02-.703-.788l-9.733 3.76c-.664.266-.66.638-.12.803l2.497.78Z"/>`
	telegramLinePath              = `<path fill="currentColor" d="M12.001 20a8 8 0 1 0 0-16a8 8 0 0 0 0 16Zm0 2c-5.523 0-10-4.477-10-10s4.477-10 10-10s10 4.477 10 10s-4.477 10-10 10Zm-3.11-8.83l-2.498-.779c-.54-.165-.543-.537.121-.804l9.733-3.76c.564-.23.886.061.703.79l-1.658 7.82c-.116.557-.451.69-.916.433l-2.551-1.888l-1.189 1.148c-.122.118-.221.219-.409.244c-.187.026-.341-.03-.454-.34l-.87-2.871l-.012.008Z"/>`
	tempColdFillPath              = `<path fill="currentColor" d="M8 10.255V5a4 4 0 1 1 8 0v5.255a7 7 0 1 1-8 0ZM8 16a4 4 0 0 0 8 0H8Z"/>`
	tempColdLinePath              = `<path fill="currentColor" d="M8 5a4 4 0 1 1 8 0v5.255a7 7 0 1 1-8 0V5Zm1.144 6.895a5 5 0 1 0 5.712 0L14 11.298V5a2 2 0 1 0-4 0v6.298l-.856.597ZM8 16h8a4 4 0 0 1-8 0Z"/>`
	tempHotFillPath               = `<path fill="currentColor" d="M8 10.255V5a4 4 0 1 1 8 0v5.255a7 7 0 1 1-8 0Zm3 1.871A4.002 4.002 0 0 0 12 20a4 4 0 0 0 1-7.874V5h-2v7.126Z"/>`
	tempHotLinePath               = `<path fill="currentColor" d="M8 5a4 4 0 1 1 8 0v5.255a7 7 0 1 1-8 0V5Zm1.144 6.895a5 5 0 1 0 5.712 0L14 11.298V5a2 2 0 1 0-4 0v6.298l-.856.597Zm1.856.231V5h2v7.126A4.002 4.002 0 0 1 12 20a4 4 0 0 1-1-7.874ZM12 18a2 2 0 1 0 0-4a2 2 0 0 0 0 4Z"/>`
	tentFillPath                  = `<path fill="currentColor" d="m12.866 3l9.237 16H23v2H1v-2h.896l9.238-16a1 1 0 0 1 1.732 0ZM12 12.925L8.659 19h6.682L12 12.925Z"/>`
	tentLinePath                  = `<path fill="currentColor" d="M22.103 19L12.866 3a1 1 0 0 0-1.732 0L1.896 19H1v2h22v-2h-.897ZM7.6 19H4.206L12 5.5L19.794 19H16.4L12 11l-4.4 8Zm4.4-3.85L14.117 19H9.883L12 15.15Z"/>`
	terminalBoxFillPath           = `<path fill="currentColor" d="M3 3h18a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Zm9 12v2h6v-2h-6Zm-3.586-3l-2.828 2.828L7 16.243L11.243 12L7 7.757L5.586 9.172L8.414 12Z"/>`
	terminalBoxLinePath           = `<path fill="currentColor" d="M3 3h18a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Zm1 2v14h16V5H4Zm8 10h6v2h-6v-2Zm-3.333-3L5.838 9.172l1.415-1.415L11.495 12l-4.242 4.243l-1.415-1.415L8.667 12Z"/>`
	terminalFillPath              = `<path fill="currentColor" d="m11 12l-7.071 7.07l-1.414-1.413L8.172 12L2.514 6.343l1.414-1.414l7.07 7.07Zm0 7h10v2H11v-2Z"/>`
	terminalLinePath              = `<path fill="currentColor" d="m11 12l-7.071 7.07l-1.414-1.413L8.172 12L2.514 6.343l1.414-1.414l7.07 7.07Zm0 7h10v2H11v-2Z"/>`
	terminalWindowFillPath        = `<path fill="currentColor" d="M20 10H4v9h16v-9ZM3 3h18a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Zm2 3v2h2V6H5Zm4 0v2h2V6H9Zm-4 5h3v5H5v-5Z"/>`
	terminalWindowLinePath        = `<path fill="currentColor" d="M20 9V5H4v4h16Zm0 2H4v8h16v-8ZM3 3h18a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Zm2 9h3v5H5v-5Zm0-6h2v2H5V6Zm4 0h2v2H9V6Z"/>`
	testTubeFillPath              = `<path fill="currentColor" d="M17 2v2h-1v14a4 4 0 0 1-8 0V4H7V2h10Zm-4 13a1 1 0 1 0 0 2a1 1 0 0 0 0-2Zm-2-3a1 1 0 1 0 0 2a1 1 0 0 0 0-2Zm3-8h-4v4h4V4Z"/>`
	testTubeLinePath              = `<path fill="currentColor" d="M17 2v2h-1v14a4 4 0 0 1-8 0V4H7V2h10Zm-3 8h-4v8a2 2 0 1 0 4 0v-8Zm-1 5a1 1 0 1 1 0 2a1 1 0 0 1 0-2Zm-2-3a1 1 0 1 1 0 2a1 1 0 0 1 0-2Zm3-8h-4v4h4V4Z"/>`
	textPath                      = `<path fill="currentColor" d="M13 6v15h-2V6H5V4h14v2h-6Z"/>`
	textDirectionLPath            = `<path fill="currentColor" d="M11 5v10H9v-4a4 4 0 1 1 0-8h8v2h-2v10h-2V5h-2ZM9 5a2 2 0 1 0 0 4V5Zm8 12v-2.5l4 3.5l-4 3.5V19H5v-2h12Z"/>`
	textDirectionRPath            = `<path fill="currentColor" d="M11 5v10H9v-4a4 4 0 1 1 0-8h8v2h-2v10h-2V5h-2ZM9 5a2 2 0 1 0 0 4V5ZM7 17h12v2H7v2.5L3 18l4-3.5V17Z"/>`
	textSpacingPath               = `<path fill="currentColor" d="M7 17h10v-2.5l3.5 3.5l-3.5 3.5V19H7v2.5L3.5 18L7 14.5V17Zm6-11v9h-2V6H5V4h14v2h-6Z"/>`
	textWrapPath                  = `<path fill="currentColor" d="M15 18h1.5a2.5 2.5 0 0 0 0-5H3v-2h13.5a4.5 4.5 0 1 1 0 9H15v2l-4-3l4-3v2ZM3 4h18v2H3V4Zm6 14v2H3v-2h6Z"/>`
	thermometerFillPath           = `<path fill="currentColor" d="M20.556 3.444a4 4 0 0 1 0 5.656l-8.2 8.2a4 4 0 0 1-2.386 1.148l-3.38.374l-2.297 2.3a1 1 0 0 1-1.414-1.415l2.298-2.299l.375-3.378A4 4 0 0 1 6.7 11.645l8.2-8.2a4 4 0 0 1 5.658 0Zm-9.192 9.192L9.95 14.05l2.121 2.122l1.414-1.415l-2.12-2.121Zm2.829-2.828l-1.415 1.414l2.122 2.121l1.414-1.414l-2.121-2.121Zm2.828-2.829l-1.414 1.414l2.121 2.122L19.142 9.1l-2.121-2.12Z"/>`
	thermometerLinePath           = `<path fill="currentColor" d="M20.556 3.444a4 4 0 0 1 0 5.656l-8.2 8.2a4 4 0 0 1-2.386 1.148l-3.38.374l-2.297 2.3a1 1 0 0 1-1.414-1.415l2.298-2.299l.375-3.378A4 4 0 0 1 6.7 11.645l8.2-8.2a4 4 0 0 1 5.658 0Zm-4.242 1.414l-8.2 8.2a2 2 0 0 0-.574 1.193l-.276 2.485l2.485-.276a2 2 0 0 0 1.193-.574l.422-.422L9.95 14.05l1.414-1.414l1.414 1.414l1.414-1.414l-1.414-1.414l1.415-1.414l1.414 1.414l1.414-1.415l-1.414-1.414L17.02 6.98l1.414 1.414l.707-.707a2 2 0 0 0-2.828-2.828Z"/>`
	threadsFillPath               = `<path fill="currentColor" d="M16.705 11.108c-.162-2.987-1.794-4.697-4.534-4.714c-1.652-.01-3.033.69-3.879 1.973L9.8 9.4c.634-.961 1.635-1.16 2.36-1.153c.903.006 1.583.268 2.024.78c.32.372.535.887.642 1.536c-.8-.136-1.666-.178-2.59-.125c-2.606.15-4.28 1.67-4.168 3.781c.057 1.071.59 1.993 1.502 2.595c.77.509 1.764.757 2.795.701c1.363-.075 2.432-.595 3.178-1.545c.566-.722.924-1.658 1.082-2.836c.65.392 1.13.907 1.397 1.527c.452 1.054.478 2.786-.935 4.198c-1.238 1.236-2.726 1.772-4.975 1.788c-2.495-.018-4.382-.819-5.608-2.378c-1.15-1.46-1.743-3.57-1.765-6.269c.022-2.7.616-4.809 1.765-6.27c1.226-1.559 3.113-2.359 5.608-2.377c2.513.019 4.432.822 5.706 2.39c.625.768 1.095 1.734 1.406 2.86l1.766-.47c-.377-1.387-.969-2.582-1.774-3.573c-1.633-2.01-4.033-3.039-7.11-3.06c-3.071.021-5.433 1.055-7.019 3.071c-1.411 1.795-2.14 4.306-2.164 7.436c.024 3.13.753 5.627 2.164 7.422c1.587 2.016 3.96 3.05 7.03 3.071c2.731-.019 4.655-.734 6.24-2.317c2.075-2.073 2.012-4.67 1.329-6.264c-.525-1.225-1.57-2.206-2.98-2.81Zm-4.438 4.557c-1.142.064-2.328-.448-2.387-1.546c-.043-.814.58-1.722 2.457-1.83a9.389 9.389 0 0 1 2.533.174c-.216 2.702-1.485 3.14-2.603 3.202Z"/>`
	threadsLinePath               = `<path fill="currentColor" d="M12.184 1.41h-.002C9.09 1.432 6.7 2.473 5.094 4.516c-1.428 1.815-2.16 4.348-2.184 7.49v.002c.025 3.143.756 5.662 2.184 7.477c1.606 2.042 4.009 3.084 7.1 3.105h.002c2.748-.019 4.697-.74 6.303-2.344c2.104-2.103 2.042-4.741 1.347-6.363c-.53-1.234-1.575-2.221-2.976-2.835c-.18-2.985-1.86-4.726-4.62-4.744c-1.63-.01-3.102.72-4.003 2.087l1.655 1.136c.533-.809 1.377-1.199 2.335-1.19c1.387.009 2.3.774 2.555 2.117a11.738 11.738 0 0 0-2.484-.105c-2.64.152-4.368 1.712-4.253 3.875c.12 2.262 2.312 3.495 4.393 3.381c2.492-.137 3.973-1.976 4.324-4.321c.577.373 1.003.85 1.244 1.413c.44 1.025.468 2.716-.915 4.098c-1.217 1.216-2.68 1.746-4.912 1.762c-2.475-.018-4.332-.811-5.537-2.343C5.52 16.774 4.928 14.688 4.906 12c.022-2.688.614-4.775 1.746-6.213c1.205-1.533 3.062-2.325 5.537-2.344c2.493.019 4.384.815 5.636 2.356c.691.85 1.124 1.866 1.413 2.915l1.94-.517c-.363-1.338-.937-2.613-1.815-3.694c-1.653-2.034-4.081-3.071-7.18-3.093Zm.236 10.968a9.372 9.372 0 0 1 2.432.156c-.14 1.578-.793 2.947-2.512 3.041c-1.112.063-2.237-.434-2.292-1.461c-.04-.764.525-1.63 2.372-1.736Z"/>`
	thumbDownFillPath             = `<path fill="currentColor" d="M22 15h-3V3h3a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1Zm-5.293 1.293l-6.4 6.4a.5.5 0 0 1-.654.047L8.8 22.1a1.5 1.5 0 0 1-.553-1.57L9.4 16H3a2 2 0 0 1-2-2v-2.104a2 2 0 0 1 .15-.762L4.246 3.62A1 1 0 0 1 5.17 3H16a1 1 0 0 1 1 1v11.586a1 1 0 0 1-.293.707Z"/>`
	thumbDownLinePath             = `<path fill="currentColor" d="M9.4 16H3a2 2 0 0 1-2-2v-2.104a2 2 0 0 1 .15-.762L4.246 3.62A1 1 0 0 1 5.17 3H22a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1h-3.482a1 1 0 0 0-.817.423l-5.453 7.726a.5.5 0 0 1-.632.159L9.802 22.4a2.5 2.5 0 0 1-1.305-2.853L9.4 16Zm7.6-2.588V5H5.84L3 11.896V14h6.4a2 2 0 0 1 1.938 2.493l-.903 3.548a.5.5 0 0 0 .261.571l.661.33l4.71-6.672c.25-.354.57-.644.933-.857ZM19 13h2V5h-2v8Z"/>`
	thumbUpFillPath               = `<path fill="currentColor" d="M2 9h3v12H2a1 1 0 0 1-1-1V10a1 1 0 0 1 1-1Zm5.293-1.293l6.4-6.4a.5.5 0 0 1 .654-.047l.853.64a1.5 1.5 0 0 1 .553 1.57L14.6 8H21a2 2 0 0 1 2 2v2.104a2 2 0 0 1-.15.762l-3.095 7.515a1 1 0 0 1-.925.619H8a1 1 0 0 1-1-1V8.414a1 1 0 0 1 .293-.707Z"/>`
	thumbUpLinePath               = `<path fill="currentColor" d="M14.6 8H21a2 2 0 0 1 2 2v2.105c0 .26-.051.52-.15.761l-3.095 7.515a1 1 0 0 1-.925.62H2a1 1 0 0 1-1-1V10a1 1 0 0 1 1-1h3.482a1 1 0 0 0 .817-.424L11.752.851a.5.5 0 0 1 .632-.159l1.814.908a2.5 2.5 0 0 1 1.305 2.852L14.6 8ZM7 10.588V19h11.16L21 12.105V10h-6.4a2 2 0 0 1-1.938-2.493l.903-3.548a.5.5 0 0 0-.261-.57l-.661-.331l-4.71 6.672c-.25.354-.57.645-.933.858ZM5 11H3v8h2v-8Z"/>`
	thunderstormsFillPath         = `<path fill="currentColor" d="m16.988 18l1.216-1.58a1.5 1.5 0 0 0-1.189-2.415H15v-3.976a1.5 1.5 0 0 0-2.69-.914l-6.365 8.281A8.002 8.002 0 0 1 9 2a8.003 8.003 0 0 1 7.458 5.099A5.5 5.5 0 1 1 17.5 18h-.512ZM13 16.005h3l-5 6.5v-4.5H8l5-6.505v4.505Z"/>`
	thunderstormsLinePath         = `<path fill="currentColor" d="M17 18v-2h.5a3.5 3.5 0 1 0-2.5-5.95V10a6 6 0 1 0-8 5.659v2.089a8 8 0 1 1 9.458-10.65A5.5 5.5 0 1 1 17.5 18H17Zm-4-1.995h3l-5 6.5v-4.5H8l5-6.505v4.505Z"/>`
	ticketFillPath                = `<path fill="currentColor" d="M21.005 3a1 1 0 0 1 1 1v5.5a2.5 2.5 0 0 0 0 5V20a1 1 0 0 1-1 1h-18a1 1 0 0 1-1-1v-5.5a2.5 2.5 0 0 0 0-5V4a1 1 0 0 1 1-1h18Z"/>`
	ticketLinePath                = `<path fill="currentColor" d="M21.005 3a1 1 0 0 1 1 1v5.5a2.5 2.5 0 0 0 0 5V20a1 1 0 0 1-1 1h-18a1 1 0 0 1-1-1v-5.5a2.5 2.5 0 0 0 0-5V4a1 1 0 0 1 1-1h18Zm-1 2h-16v2.968l.156.081A4.5 4.5 0 0 1 6.5 11.79l.005.211a4.499 4.499 0 0 1-2.344 3.95l-.156.081V19h16v-2.969l-.156-.08a4.5 4.5 0 0 1-2.34-3.74L17.506 12c0-1.704.947-3.187 2.344-3.95l.156-.082V5Z"/>`
	ticketTwoFillPath             = `<path fill="currentColor" d="M21.005 3a1 1 0 0 1 1 1v5.5a2.5 2.5 0 0 0 0 5V20a1 1 0 0 1-1 1h-18a1 1 0 0 1-1-1v-5.5a2.5 2.5 0 0 0 0-5V4a1 1 0 0 1 1-1h18Zm-5 6h-8v6h8V9Z"/>`
	ticketTwoLinePath             = `<path fill="currentColor" d="M21.005 3a1 1 0 0 1 1 1v5.5a2.5 2.5 0 0 0 0 5V20a1 1 0 0 1-1 1h-18a1 1 0 0 1-1-1v-5.5a2.5 2.5 0 0 0 0-5V4a1 1 0 0 1 1-1h18Zm-1 2h-16v2.968l.156.081A4.5 4.5 0 0 1 6.5 11.79l.005.211a4.499 4.499 0 0 1-2.344 3.95l-.156.081V19h16v-2.969l-.156-.08a4.5 4.5 0 0 1-2.34-3.74L17.506 12c0-1.704.947-3.187 2.344-3.95l.156-.082V5Zm-4 4v6h-8V9h8Z"/>`
	tiktokFillPath                = `<path fill="currentColor" d="M16 8.245V15.5a6.5 6.5 0 1 1-5-6.326v3.163a3.5 3.5 0 1 0 2 3.163V2h3a5 5 0 0 0 5 5v3a7.966 7.966 0 0 1-5-1.755Z"/>`
	tiktokLinePath                = `<path fill="currentColor" d="M11 2v6.414a6.85 6.85 0 1 0 5.6 6.736v-3.736a8.603 8.603 0 0 0 3.4.686h1V6.5h-1c-1.903 0-3.4-1.537-3.4-3.5V2H11Zm2 2h1.688c.394 2.22 2.08 3.996 4.312 4.41v1.618c-1.038-.152-1.975-.542-2.843-1.123L14.6 7.863v7.287a4.85 4.85 0 1 1-4.6-4.844v1.604a3.25 3.25 0 1 0 3 3.24V4ZM8.5 15.15a1.25 1.25 0 1 1 2.5 0a1.25 1.25 0 0 1-2.5 0Z"/>`
	timeFillPath                  = `<path fill="currentColor" d="M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10Zm1-10V7h-2v7h6v-2h-4Z"/>`
	timeLinePath                  = `<path fill="currentColor" d="M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10Zm0-2a8 8 0 1 0 0-16a8 8 0 0 0 0 16Zm1-8h4v2h-6V7h2v5Z"/>`
	timerFillPath                 = `<path fill="currentColor" d="m17.618 5.968l1.453-1.453l1.414 1.414l-1.453 1.453A9 9 0 1 1 12 4c2.125 0 4.078.736 5.618 1.968ZM11 8v6h2V8h-2ZM8 1h8v2H8V1Z"/>`
	timerFlashFillPath            = `<path fill="currentColor" d="M6.382 5.968A8.962 8.962 0 0 1 12 4c2.125 0 4.078.736 5.618 1.968l1.453-1.453l1.414 1.414l-1.453 1.453A9 9 0 1 1 3 13c0-2.125.736-4.078 1.968-5.618L3.515 5.93l1.414-1.414l1.453 1.453ZM13 12V7.495L8 14h3v4.5l5-6.5h-3ZM8 1h8v2H8V1Z"/>`
	timerFlashLinePath            = `<path fill="currentColor" d="M6.382 5.968A8.962 8.962 0 0 1 12 4c2.125 0 4.078.736 5.618 1.968l1.453-1.453l1.414 1.414l-1.453 1.453A9 9 0 1 1 3 13c0-2.125.736-4.078 1.968-5.618L3.515 5.93l1.414-1.414l1.453 1.453ZM12 20a7 7 0 1 0 0-14a7 7 0 0 0 0 14Zm1-8h3l-5 6.5V14H8l5-6.505V12ZM8 1h8v2H8V1Z"/>`
	timerLinePath                 = `<path fill="currentColor" d="m17.618 5.968l1.453-1.453l1.414 1.414l-1.453 1.453A9 9 0 1 1 12 4c2.125 0 4.078.736 5.618 1.968ZM12 20a7 7 0 1 0 0-14a7 7 0 0 0 0 14ZM11 8h2v6h-2V8ZM8 1h8v2H8V1Z"/>`
	timerTwoFillPath              = `<path fill="currentColor" d="M12 2c5.52 0 10 4.48 10 10s-4.48 10-10 10S2 17.52 2 12S6.48 2 12 2Zm3.536 5.05L10.585 12L12 13.414l4.95-4.95l-1.414-1.414Z"/>`
	timerTwoLinePath              = `<path fill="currentColor" d="M12 2c5.52 0 10 4.48 10 10s-4.48 10-10 10S2 17.52 2 12S6.48 2 12 2Zm0 18c4.42 0 8-3.58 8-8s-3.58-8-8-8s-8 3.58-8 8s3.58 8 8 8Zm3.536-12.95l1.414 1.414l-4.95 4.95L10.586 12l4.95-4.95Z"/>`
	todoFillPath                  = `<path fill="currentColor" d="M17 2h3a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h3V0h2v2h6V0h2v2ZM7 8v2h10V8H7Zm0 4v2h10v-2H7Z"/>`
	todoLinePath                  = `<path fill="currentColor" d="M17 2h3a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h3V0h2v2h6V0h2v2Zm0 2v2h-2V4H9v2H7V4H5v16h14V4h-2ZM7 8h10v2H7V8Zm0 4h10v2H7v-2Z"/>`
	toggleFillPath                = `<path fill="currentColor" d="M8 5h8a7 7 0 1 1 0 14H8A7 7 0 1 1 8 5Zm8 10a3 3 0 1 0 0-6a3 3 0 0 0 0 6Z"/>`
	toggleLinePath                = `<path fill="currentColor" d="M8 7a5 5 0 0 0 0 10h8a5 5 0 0 0 0-10H8Zm0-2h8a7 7 0 1 1 0 14H8A7 7 0 1 1 8 5Zm0 10a3 3 0 1 1 0-6a3 3 0 0 1 0 6Z"/>`
	tokenSwapFillPath             = `<path fill="currentColor" d="M21.5 9a6.502 6.502 0 0 1-4 6.002V15A8.5 8.5 0 0 0 9 6.5h-.002A6.502 6.502 0 0 1 21.5 9ZM7 3a4 4 0 0 0-4 4v1.5h2V7a2 2 0 0 1 2-2h1.5V3H7Zm12 12.5V17a2 2 0 0 1-2 2h-1.5v2H17a4 4 0 0 0 4-4v-1.5h-2Zm-10 6a6.5 6.5 0 1 0 0-13a6.5 6.5 0 0 0 0 13Zm0-9l2.5 2.5L9 17.5L6.5 15L9 12.5Z"/>`
	tokenSwapLinePath             = `<path fill="currentColor" d="M9 12.5L6.5 15L9 17.5l2.5-2.5L9 12.5Zm6-10a6.5 6.5 0 0 0-6.482 6.018a6.5 6.5 0 1 0 6.964 6.964A6.5 6.5 0 0 0 15 2.5Zm.323 10.989a6.51 6.51 0 0 0-4.812-4.812a4.5 4.5 0 1 1 4.812 4.812ZM13.5 15a4.5 4.5 0 1 1-9 0a4.5 4.5 0 0 1 9 0ZM3 7a4 4 0 0 1 4-4h1.5v2H7a2 2 0 0 0-2 2v1.5H3V7Zm16 10v-1.5h2V17a4 4 0 0 1-4 4h-1.5v-2H17a2 2 0 0 0 2-2Z"/>`
	toolsFillPath                 = `<path fill="currentColor" d="M5.329 3.272A3.5 3.5 0 0 1 9.8 7.745L20.646 18.59l-2.121 2.122L7.679 9.867a3.5 3.5 0 0 1-4.472-4.474L5.443 7.63a1.5 1.5 0 0 0 2.122-2.121L5.329 3.272Zm10.367 1.883l3.182-1.768l1.415 1.415l-1.768 3.182l-1.768.353l-2.121 2.121l-1.415-1.414l2.122-2.121l.353-1.768Zm-7.07 7.778l2.12 2.122l-4.95 4.95a1.5 1.5 0 0 1-2.218-2.015l.097-.107l4.95-4.95Z"/>`
	toolsLinePath                 = `<path fill="currentColor" d="M5.329 3.272a3.5 3.5 0 0 1 4.255 4.962l10.709 10.71l-1.415 1.414L8.17 9.648a3.502 3.502 0 0 1-4.962-4.255L5.443 7.63a1.5 1.5 0 0 0 2.122-2.121L5.329 3.272Zm10.367 1.883l3.182-1.768l1.415 1.415l-1.768 3.182l-1.768.353l-2.121 2.121l-1.415-1.414l2.122-2.121l.353-1.768ZM8.98 13.287l1.414 1.414l-5.303 5.303a1 1 0 0 1-1.492-1.327l.077-.087l5.304-5.303Z"/>`
	tornadoFillPath               = `<path fill="currentColor" d="M2 3h20v2H2V3Zm2 4h16v2H4V7Zm4 4h14v2H8v-2Zm2 4h8v2h-8v-2Zm-2 4h6v2H8v-2Z"/>`
	tornadoLinePath               = `<path fill="currentColor" d="M2 3h20v2H2V3Zm2 4h16v2H4V7Zm4 4h14v2H8v-2Zm2 4h8v2h-8v-2Zm-2 4h6v2H8v-2Z"/>`
	trademarkFillPath             = `<path fill="currentColor" d="M10 6v2H6v10H4V8H0V6h10Zm2 0h2.5l3 5.196L20.5 6H23v12h-2V9.133l-3.5 6.063L14 9.135V18h-2V6Z"/>`
	trademarkLinePath             = `<path fill="currentColor" d="M10 6v2H6v10H4V8H0V6h10Zm2 0h2.5l3 5.196L20.5 6H23v12h-2V9.133l-3.5 6.063L14 9.135V18h-2V6Z"/>`
	trafficLightFillPath          = `<path fill="currentColor" d="M7 4V3a1 1 0 0 1 1-1h8a1 1 0 0 1 1 1v1h3c0 2.5-2.5 3.5-3 3.5V10h3c0 2.5-2.5 3.5-3 3.5V16h3c0 2.5-2.5 3.5-3 3.5V21a1 1 0 0 1-1 1H8a1 1 0 0 1-1-1v-1.5c-.5 0-3-1-3-3.5h3v-2.5c-.5 0-3-1-3-3.5h3V7.5c-.5 0-3-1-3-3.5h3Zm5 16a2 2 0 1 0 0-4a2 2 0 0 0 0 4Zm0-6a2 2 0 1 0 0-4a2 2 0 0 0 0 4Zm0-6a2 2 0 1 0 0-4a2 2 0 0 0 0 4Z"/>`
	trafficLightLinePath          = `<path fill="currentColor" d="M7 4V3a1 1 0 0 1 1-1h8a1 1 0 0 1 1 1v1h3c0 2.5-2.5 3.5-3 3.5V10h3c0 2.5-2.5 3.5-3 3.5V16h3c0 2.5-2.5 3.5-3 3.5V21a1 1 0 0 1-1 1H8a1 1 0 0 1-1-1v-1.5c-.5 0-3-1-3-3.5h3v-2.5c-.5 0-3-1-3-3.5h3V7.5c-.5 0-3-1-3-3.5h3Zm5 16a2 2 0 1 0 0-4a2 2 0 0 0 0 4Zm0-6a2 2 0 1 0 0-4a2 2 0 0 0 0 4Zm0-6a2 2 0 1 0 0-4a2 2 0 0 0 0 4Z"/>`
	trainFillPath                 = `<path fill="currentColor" d="m17.2 20l1.8 1.5v.5H5v-.5L6.8 20H5a2 2 0 0 1-2-2V7a4 4 0 0 1 4-4h10a4 4 0 0 1 4 4v11a2 2 0 0 1-2 2h-1.8ZM5 7v4h14V7H5Zm7 11a2 2 0 1 0 0-4a2 2 0 0 0 0 4Z"/>`
	trainLinePath                 = `<path fill="currentColor" d="m17.2 20l1.8 1.5v.5H5v-.5L6.8 20H5a2 2 0 0 1-2-2V7a4 4 0 0 1 4-4h10a4 4 0 0 1 4 4v11a2 2 0 0 1-2 2h-1.8ZM7 5a2 2 0 0 0-2 2v11h14V7a2 2 0 0 0-2-2H7Zm5 12a2 2 0 1 1 0-4a2 2 0 0 1 0 4ZM6 7h12v4H6V7Z"/>`
	trainWifiFillPath             = `<path fill="currentColor" d="M12.498 3a6.52 6.52 0 0 0-.324 4H5v4h10.035a6.47 6.47 0 0 0 3.465 1a6.48 6.48 0 0 0 2.5-.498V18a2 2 0 0 1-2 2h-1.8l1.8 1.5v.5H5v-.5L6.8 20H5a2 2 0 0 1-2-2V7a4 4 0 0 1 4-4h5.498ZM12 14a2 2 0 1 0 0 4a2 2 0 0 0 0-4Zm6.5-13a4.5 4.5 0 1 1 0 9a4.5 4.5 0 0 1 0-9Zm0 5.167c-.491 0-.94.177-1.289.47l-.125.115L18.5 8.167l1.413-1.415a1.994 1.994 0 0 0-1.413-.585Zm0-2.667a4.65 4.65 0 0 0-3.128 1.203l-.173.165l.944.942a3.323 3.323 0 0 1 2.357-.977a3.32 3.32 0 0 1 2.201.83l.156.147l.943-.943A4.652 4.652 0 0 0 18.5 3.5Z"/>`
	trainWifiLinePath             = `<path fill="currentColor" d="M12.498 3a6.463 6.463 0 0 0-.479 2H7a2 2 0 0 0-1.995 1.85L5 7v11h14v-6.019a6.463 6.463 0 0 0 2-.48V18a2 2 0 0 1-2 2h-1.8l1.8 1.5v.5H5v-.5L6.8 20H5a2 2 0 0 1-2-2V7a4 4 0 0 1 4-4h5.498ZM12 13a2 2 0 1 1 0 4a2 2 0 0 1 0-4Zm.174-6a6.51 6.51 0 0 0 2.862 4.001L6 11V7h6.174ZM18.5 1a4.5 4.5 0 1 1 0 9a4.5 4.5 0 0 1 0-9Zm0 5.167c-.491 0-.94.177-1.289.47l-.125.115L18.5 8.167l1.413-1.415a1.994 1.994 0 0 0-1.413-.585Zm0-2.667a4.65 4.65 0 0 0-3.128 1.203l-.173.165l.944.942a3.323 3.323 0 0 1 2.357-.977a3.32 3.32 0 0 1 2.201.83l.156.147l.943-.943A4.652 4.652 0 0 0 18.5 3.5Z"/>`
	translatePath                 = `<path fill="currentColor" d="M5 15v2a2 2 0 0 0 1.85 1.994L7 19h3v2H7a4 4 0 0 1-4-4v-2h2Zm13-5l4.4 11h-2.155l-1.201-3h-4.09l-1.199 3h-2.154L16 10h2Zm-1 2.885L15.753 16h2.492L17 12.885ZM8 2v2h4v7H8v3H6v-3H2V4h4V2h2Zm9 1a4 4 0 0 1 4 4v2h-2V7a2 2 0 0 0-2-2h-3V3h3ZM6 6H4v3h2V6Zm4 0H8v3h2V6Z"/>`
	translateTwoPath              = `<path fill="currentColor" d="m18.5 10l4.4 11h-2.155l-1.201-3h-4.09l-1.199 3h-2.154L16.5 10h2ZM10 2v2h6v2h-1.968a18.221 18.221 0 0 1-3.62 6.301a14.865 14.865 0 0 0 2.335 1.707l-.75 1.878A17.016 17.016 0 0 1 9 13.725a16.677 16.677 0 0 1-6.201 3.548l-.536-1.929a14.7 14.7 0 0 0 5.327-3.042A18.078 18.078 0 0 1 4.767 8h2.24A16.031 16.031 0 0 0 9 10.877a16.165 16.165 0 0 0 2.91-4.876L2 6V4h6V2h2Zm7.5 10.885L16.253 16h2.492L17.5 12.885Z"/>`
	travestiFillPath              = `<path fill="currentColor" d="M7.538 9.95L4.663 7.076L2.188 9.55L.773 8.136l6.364-6.364l1.415 1.414l-2.475 2.475l2.875 2.876A7.5 7.5 0 1 1 7.538 9.95Z"/>`
	travestiLinePath              = `<path fill="currentColor" d="M8.952 8.537A7.5 7.5 0 1 1 7.538 9.95L4.663 7.075L2.188 9.55L.773 8.136l6.364-6.364l1.415 1.414l-2.475 2.475l2.875 2.876ZM13.502 20a5.5 5.5 0 1 0 0-11a5.5 5.5 0 0 0 0 11Z"/>`
	treasureMapFillPath           = `<path fill="currentColor" d="m2 5l7-3l6 3l6.303-2.701a.5.5 0 0 1 .697.46V19l-7 3l-6-3l-6.303 2.701a.5.5 0 0 1-.697-.46V5Zm4 6v2h2v-2H6Zm4 0v2h2v-2h-2Zm6-.06l-1.237-1.238l-1.061 1.06L14.939 12l-1.237 1.237l1.06 1.061L16 13.061l1.237 1.237l1.061-1.06L17.061 12l1.237-1.237l-1.06-1.061L16 10.939Z"/>`
	treasureMapLinePath           = `<path fill="currentColor" d="m14.935 7.204l-6-3L4 6.319v12.648l5.065-2.17l6 3L20 17.68V5.033l-5.065 2.17ZM2 5l7-3l6 3l6.303-2.701a.5.5 0 0 1 .697.46V19l-7 3l-6-3l-6.303 2.701a.5.5 0 0 1-.697-.46V5Zm4 6h2v2H6v-2Zm4 0h2v2h-2v-2Zm5.998-.063L17.235 9.7l1.061 1.06l-1.237 1.238l1.237 1.238l-1.06 1.06l-1.238-1.237l-1.237 1.237l-1.061-1.06l1.237-1.238l-1.237-1.237L14.76 9.7l1.238 1.237Z"/>`
	treeFillPath                  = `<path fill="currentColor" d="M18 7c0 .262-.017.52-.05.774A6 6 0 0 1 13 18.658V22h-2v-3.6a5.5 5.5 0 0 1-6.517-8.657A8.006 8.006 0 0 0 6.286 12.6l1.428-1.4A5.989 5.989 0 0 1 6 7a6 6 0 1 1 12 0Z"/>`
	treeLinePath                  = `<path fill="currentColor" d="M6 7a6 6 0 1 1 11.95.775A6 6 0 0 1 15 19h-2v3h-2v-3H8.5A5.5 5.5 0 0 1 6.191 8.507A6.008 6.008 0 0 1 6 7Zm1.01 3.332A3.502 3.502 0 0 0 8.5 17H15a4 4 0 0 0 1.454-7.728l-.841-.328C15.79 8.304 16 7.672 16 7a4 4 0 1 0-6.4 3.2l-1.2 1.6a6.03 6.03 0 0 1-1.39-1.468Z"/>`
	trelloFillPath                = `<path fill="currentColor" d="M5.251 3h13.5a2.25 2.25 0 0 1 2.25 2.25v13.5a2.25 2.25 0 0 1-2.25 2.25h-13.5a2.25 2.25 0 0 1-2.25-2.25V5.25A2.25 2.25 0 0 1 5.251 3Zm7.92 3.42v5.76c0 .596.484 1.08 1.08 1.08h3.33a1.08 1.08 0 0 0 1.08-1.08V6.42a1.08 1.08 0 0 0-1.08-1.08h-3.33a1.08 1.08 0 0 0-1.08 1.08Zm-7.83 0v10.26c0 .596.484 1.08 1.08 1.08h3.33a1.08 1.08 0 0 0 1.08-1.08V6.42a1.08 1.08 0 0 0-1.08-1.08h-3.33a1.08 1.08 0 0 0-1.08 1.08Z"/>`
	trelloLinePath                = `<path fill="currentColor" d="M5.001 5v14h14V5h-14Zm0-2h14a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-14a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2Zm3 4h2a1 1 0 0 1 1 1v8a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1V8a1 1 0 0 1 1-1Zm6 0h2a1 1 0 0 1 1 1v4a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1V8a1 1 0 0 1 1-1Z"/>`
	triangleFillPath              = `<path fill="currentColor" d="m12.866 3l9.526 16.5a1 1 0 0 1-.866 1.5H2.474a1 1 0 0 1-.866-1.5L11.134 3a1 1 0 0 1 1.732 0Z"/>`
	triangleLinePath              = `<path fill="currentColor" d="m12.866 3l9.526 16.5a1 1 0 0 1-.866 1.5H2.474a1 1 0 0 1-.866-1.5L11.134 3a1 1 0 0 1 1.732 0Zm-8.66 16h15.588L12 5.5L4.206 19Z"/>`
	trophyFillPath                = `<path fill="currentColor" d="M13.005 16.941v2.062h5v2h-12v-2h5V16.94a8.001 8.001 0 0 1-7-7.938v-6h16v6a8.001 8.001 0 0 1-7 7.938Zm-12-11.938h2v4h-2v-4Zm20 0h2v4h-2v-4Z"/>`
	trophyLinePath                = `<path fill="currentColor" d="M13.005 16.941v2.062h5v2h-12v-2h5V16.94a8.001 8.001 0 0 1-7-7.938v-6h16v6a8.001 8.001 0 0 1-7 7.938Zm-7-11.938v4a6 6 0 0 0 12 0v-4h-12Zm-5 0h2v4h-2v-4Zm20 0h2v4h-2v-4Z"/>`
	truckFillPath                 = `<path fill="currentColor" d="M17 8h3l3 4.056V18h-2.035a3.501 3.501 0 0 1-6.93 0h-5.07a3.5 3.5 0 0 1-6.93 0H1V6a1 1 0 0 1 1-1h14a1 1 0 0 1 1 1v2Zm0 2v3h4v-.285L18.992 10H17Z"/>`
	truckLinePath                 = `<path fill="currentColor" d="M8.965 18a3.5 3.5 0 0 1-6.93 0H1V6a1 1 0 0 1 1-1h14a1 1 0 0 1 1 1v2h3l3 4.056V18h-2.035a3.501 3.501 0 0 1-6.93 0h-5.07ZM15 7H3v8.05a3.5 3.5 0 0 1 5.663.95h5.674c.168-.353.393-.674.663-.95V7Zm2 6h4v-.285L18.992 10H17v3Zm.5 6a1.5 1.5 0 1 0 0-3.001a1.5 1.5 0 0 0 0 3.001ZM7 17.5a1.5 1.5 0 1 0-3 0a1.5 1.5 0 0 0 3 0Z"/>`
	tumblrFillPath                = `<path fill="currentColor" d="M6.27 7.63A5.76 5.76 0 0 0 10.817 2h3.03v5.152h3.637v3.636h-3.637v5.454c0 .515.198 1.207.91 1.667c.474.307 1.484.458 3.03.455V22h-4.243a4.546 4.546 0 0 1-4.545-4.546v-6.666H6.27V7.63Z"/>`
	tumblrLinePath                = `<path fill="currentColor" d="M8.001 8c1.075 0 3.497-.673 3.497-4.5V2h1.5v6h5.003v2h-5.003v2.91c.003 2.48.003 3.686.003 4.09c-.002 2.208 1.615 3.4 4.785 3.4V22h-2.242c-2.402.002-4.546-2.035-4.546-4.546V10H7.001V8h1Z"/>`
	tvFillPath                    = `<path fill="currentColor" d="M15.414 5h5.594c.548 0 .992.445.992 1v14c0 .552-.455 1-.992 1H2.992A.994.994 0 0 1 2 20V6c0-.552.455-1 .992-1h5.594L6.05 2.465L7.464 1.05L11.414 5h1.172l3.95-3.95l1.414 1.415L15.414 5Z"/>`
	tvLinePath                    = `<path fill="currentColor" d="M15.414 5h5.594c.548 0 .992.445.992 1v14c0 .552-.455 1-.992 1H2.992A.994.994 0 0 1 2 20V6c0-.552.455-1 .992-1h5.594L6.05 2.465L7.464 1.05L11.414 5h1.172l3.95-3.95l1.414 1.415L15.414 5ZM4 7v12h16V7H4Z"/>`
	tvTwoFillPath                 = `<path fill="currentColor" d="M2 4c0-.552.455-1 .992-1h18.016c.548 0 .992.445.992 1v14c0 .552-.455 1-.992 1H2.992A.994.994 0 0 1 2 18V4Zm3 16h14v2H5v-2Z"/>`
	tvTwoLinePath                 = `<path fill="currentColor" d="M2 4c0-.552.455-1 .992-1h18.016c.548 0 .992.445.992 1v14c0 .552-.455 1-.992 1H2.992A.994.994 0 0 1 2 18V4Zm2 1v12h16V5H4Zm1 15h14v2H5v-2Z"/>`
	twentyFourHoursFillPath       = `<path fill="currentColor" d="M12.005 13.003a3 3 0 0 1 2.08 5.162l-1.91 1.838h2.83v2h-6l-.001-1.724l3.694-3.555a1 1 0 1 0-1.693-.72h-2a3 3 0 0 1 3-3.001Zm6 0v4h2v-4h2v9h-2v-3h-4v-6h2Zm-14-1a7.985 7.985 0 0 0 3 6.246v2.416a9.996 9.996 0 0 1-5-8.662h2Zm8-10c5.185 0 9.449 3.947 9.95 9h-2.012A8.001 8.001 0 0 0 5.87 6.868l2.135 2.135h-6v-6L4.45 5.449a9.977 9.977 0 0 1 7.554-3.446Z"/>`
	twentyFourHoursLinePath       = `<path fill="currentColor" d="M12.005 13.003a3 3 0 0 1 2.08 5.162l-1.91 1.838h2.83v2h-6l-.001-1.724l3.694-3.555a1 1 0 1 0-1.693-.72h-2a3 3 0 0 1 3-3.001Zm6 0v4h2v-4h2v9h-2v-3h-4v-6h2Zm-14-1a7.985 7.985 0 0 0 3 6.246v2.416a9.996 9.996 0 0 1-5-8.662h2Zm8-10c5.185 0 9.449 3.947 9.95 9h-2.012a8.001 8.001 0 0 0-14.554-3.5h2.616v2h-6v-6h2v2.5a9.985 9.985 0 0 1 8-4Z"/>`
	twitchFillPath                = `<path fill="currentColor" d="M21.001 3v11.74l-4.696 4.695h-3.913l-2.437 2.348H6.914v-2.348H3.001V6.13L4.228 3h16.773Zm-1.565 1.565H6.13v11.74h3.13v2.347l2.349-2.348h4.695l3.13-3.13V4.565Zm-3.13 3.13v4.696H14.74V7.696h1.565Zm-3.914 0v4.696h-1.565V7.696h1.565Z"/>`
	twitchLinePath                = `<path fill="currentColor" d="M4.301 3h16.7v11.7l-4.7 4.7h-3.9l-2.5 2.4h-2.9v-2.4h-4V6.2l1.3-3.2Zm.7 14.4h4v2.4h.095l2.5-2.4h3.877L19 13.872V5H5v12.4Zm10-9.4h2v4.7h-2V8Zm0 0h2v4.7h-2V8Zm-5 0h2v4.7h-2V8Z"/>`
	twitterFillPath               = `<path fill="currentColor" d="M22.212 5.656a8.384 8.384 0 0 1-2.401.658A4.195 4.195 0 0 0 21.649 4c-.82.488-1.719.83-2.655 1.015a4.182 4.182 0 0 0-7.126 3.814a11.874 11.874 0 0 1-8.621-4.37a4.168 4.168 0 0 0-.566 2.103c0 1.45.739 2.731 1.86 3.481a4.169 4.169 0 0 1-1.894-.523v.051a4.185 4.185 0 0 0 3.355 4.102a4.205 4.205 0 0 1-1.89.072A4.185 4.185 0 0 0 8.02 16.65a8.394 8.394 0 0 1-6.192 1.732a11.831 11.831 0 0 0 6.41 1.88c7.694 0 11.9-6.373 11.9-11.9c0-.18-.004-.362-.012-.541a8.497 8.497 0 0 0 2.086-2.164Z"/>`
	twitterLinePath               = `<path fill="currentColor" d="M15.35 5.55a2.9 2.9 0 0 0-2.9 2.846l-.028 1.575a.6.6 0 0 1-.68.584l-1.562-.213c-2.053-.28-4.021-1.225-5.91-2.798c-.597 3.31.57 5.603 3.383 7.372L9.4 16.014a.6.6 0 0 1 .035.992L7.843 18.17c.947.06 1.846.018 2.592-.13c4.718-.942 7.855-4.492 7.855-10.348c0-.478-1.013-2.141-2.94-2.141Zm-4.9 2.81a4.9 4.9 0 0 1 8.385-3.355c.711-.005 1.316.175 2.668-.646c-.334 1.64-.5 2.353-1.213 3.332c0 7.641-4.697 11.358-9.464 12.309c-3.267.652-8.02-.419-9.38-1.842c.693-.053 3.513-.356 5.143-1.55c-1.38-.91-6.868-4.14-3.261-12.822c1.693 1.977 3.41 3.322 5.15 4.037c1.157.475 1.442.465 1.973.538Z"/>`
	twitterXFillPath              = `<path fill="currentColor" d="M18.205 2.25h3.308l-7.227 8.26l8.502 11.24H16.13l-5.214-6.817L4.95 21.75H1.64l7.73-8.835L1.215 2.25H8.04l4.713 6.231l5.45-6.231Zm-1.161 17.52h1.833L7.045 4.126H5.078L17.044 19.77Z"/>`
	twitterXLinePath              = `<path fill="currentColor" d="M8 2H1l8.26 11.014L1.45 22H4.1l6.388-7.349L16 22h7l-8.608-11.478L21.8 2h-2.65l-5.986 6.886L8 2Zm9 18L5 4h2l12 16h-2Z"/>`
	typhoonFillPath               = `<path fill="currentColor" d="m17.654 1.7l-2.782 2.533a9.137 9.137 0 0 1 3.49 1.973c3.512 3.2 3.512 8.388 0 11.588c-2.592 2.36-6.598 3.862-12.016 4.506l2.782-2.533a9.137 9.137 0 0 1-3.49-1.973c-3.512-3.2-3.533-8.369 0-11.588C8.23 3.846 12.237 2.344 17.655 1.7ZM12 8c-2.485 0-4.5 1.791-4.5 4c0 2.21 2.015 4 4.5 4s4.5-1.79 4.5-4c0-2.209-2.015-4-4.5-4Z"/>`
	typhoonLinePath               = `<path fill="currentColor" d="m17.654 1.7l-2.782 2.533a9.137 9.137 0 0 1 3.49 1.973c3.512 3.2 3.512 8.388 0 11.588c-2.592 2.36-6.598 3.862-12.016 4.506l2.782-2.533a9.137 9.137 0 0 1-3.49-1.973c-3.512-3.2-3.533-8.369 0-11.588C8.23 3.846 12.237 2.344 17.655 1.7ZM12 6c-3.866 0-7 2.686-7 6s3.134 6 7 6s7-2.686 7-6s-3.134-6-7-6Zm0 2.3c2.21 0 4 1.657 4 3.7c0 2.044-1.79 3.7-4 3.7S8 14.044 8 12c0-2.043 1.79-3.7 4-3.7Zm0 2c-1.138 0-2 .798-2 1.7c0 .903.862 1.7 2 1.7s2-.797 2-1.7c0-.902-.862-1.7-2-1.7Z"/>`
	uDiskFillPath                 = `<path fill="currentColor" d="M4 12h16a1 1 0 0 1 1 1v8a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1v-8a1 1 0 0 1 1-1ZM5 2h14v8H5V2Zm4 3v2h2V5H9Zm4 0v2h2V5h-2Z"/>`
	uDiskLinePath                 = `<path fill="currentColor" d="M19 12H5v8h14v-8ZM5 10V2h14v8h1a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V11a1 1 0 0 1 1-1h1Zm2 0h10V4H7v6Zm2-4h2v2H9V6Zm4 0h2v2h-2V6Z"/>`
	ubuntuFillPath                = `<path fill="currentColor" d="M22.001 12c0 5.522-4.477 10-10 10s-10-4.478-10-10c0-5.523 4.477-10 10-10s10 4.477 10 10Zm-16.8-1.336a1.335 1.335 0 1 0 0 2.67a1.335 1.335 0 0 0 0-2.67Zm9.533 6.069a1.334 1.334 0 1 0 1.334 2.31a1.334 1.334 0 0 0-1.334-2.31ZM8.1 12c0-1.32.656-2.485 1.659-3.19l-.977-1.636a5.813 5.813 0 0 0-2.398 3.371a1.875 1.875 0 0 1 0 2.91a5.812 5.812 0 0 0 2.398 3.371l.977-1.636A3.892 3.892 0 0 1 8.1 12ZM12 8.1a3.9 3.9 0 0 1 3.884 3.554l1.903-.028a5.781 5.781 0 0 0-1.724-3.762A1.872 1.872 0 0 1 13.55 6.41a5.829 5.829 0 0 0-4.12.39l.927 1.663A3.885 3.885 0 0 1 12 8.1Zm0 7.8c-.587 0-1.143-.13-1.643-.363l-.927 1.662a5.774 5.774 0 0 0 4.12.39a1.872 1.872 0 0 1 2.514-1.454a5.782 5.782 0 0 0 1.723-3.762l-1.903-.027A3.898 3.898 0 0 1 12 15.9Zm2.732-8.633a1.335 1.335 0 1 0 1.335-2.312a1.335 1.335 0 0 0-1.335 2.312Z"/>`
	ubuntuLinePath                = `<path fill="currentColor" d="m8.668 19.273l1.006-1.742a6.001 6.001 0 0 0 8.282-4.781h2.012A7.972 7.972 0 0 1 18.929 16a8.002 8.002 0 0 1-1.452 1.835a2.493 2.493 0 0 0-1.976.227a2.493 2.493 0 0 0-1.184 1.595a7.979 7.979 0 0 1-5.65-.384Zm-1.3-.75a7.979 7.979 0 0 1-3.157-4.7c.486-.456.79-1.104.79-1.823c0-.72-.304-1.369-.791-1.825A8 8 0 0 1 5.073 8a7.97 7.97 0 0 1 2.295-2.524l1.006 1.742a6.001 6.001 0 0 0 0 9.563L7.37 18.523Zm1.3-13.796a8.007 8.007 0 0 1 5.648-.387a2.497 2.497 0 0 0 3.161 1.825a8.007 8.007 0 0 1 2.49 5.085h-2.013a5.99 5.99 0 0 0-2.953-4.446a5.99 5.99 0 0 0-5.327-.335L8.668 4.727ZM16 5.072a1.5 1.5 0 1 1 1.5-2.598A1.5 1.5 0 0 1 16 5.072ZM4.001 12a1.5 1.5 0 1 1-3 0a1.5 1.5 0 0 1 3 0Zm12 6.928a1.5 1.5 0 1 1 1.5 2.598a1.5 1.5 0 0 1-1.5-2.598Z"/>`
	umbrellaFillPath              = `<path fill="currentColor" d="M12.998 2.05c5.053.501 9 4.765 9 9.95v1h-9v6a2 2 0 0 0 4 0v-1h2v1a4 4 0 1 1-8 0v-6h-9v-1c0-5.185 3.947-9.449 9-9.95V2a1 1 0 0 1 2 0v.05Z"/>`
	umbrellaLinePath              = `<path fill="currentColor" d="M12.998 2.05c5.053.501 9 4.765 9 9.95v1h-9v6a2 2 0 0 0 4 0v-1h2v1a4 4 0 1 1-8 0v-6h-9v-1c0-5.185 3.947-9.449 9-9.95V2a1 1 0 0 1 2 0v.05ZM19.936 11A8.001 8.001 0 0 0 4.06 11h15.876Z"/>`
	underlinePath                 = `<path fill="currentColor" d="M8 3v9a4 4 0 0 0 8 0V3h2v9a6 6 0 0 1-12 0V3h2ZM4 20h16v2H4v-2Z"/>`
	uninstallFillPath             = `<path fill="currentColor" d="M20 2a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h16Zm-1 14H5v4h14v-4Zm-2 1v2h-2v-2h2ZM12 2L8 6h3v5h2V6h3l-4-4Z"/>`
	uninstallLinePath             = `<path fill="currentColor" d="M8 2v2H5l-.001 10h14L19 4h-3V2h4a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h4Zm10.999 14h-14L5 20h14l-.001-4ZM17 17v2h-2v-2h2ZM12 2l4 4h-3v5h-2V6H8l4-4Z"/>`
	unpinFillPath                 = `<path fill="currentColor" d="m20.971 17.172l-1.414 1.414l-3.535-3.535l-.073.074l-.707 3.535l-1.415 1.415l-4.242-4.243l-4.95 4.95l-1.414-1.414l4.95-4.95l-4.243-4.243l1.414-1.414l3.536-.707l.073-.074l-3.536-3.536l1.414-1.415L20.97 17.172Zm-2.12-4.95l1.34-1.34l.707.707l1.415-1.414l-8.486-8.485l-1.414 1.414l.707.707l-1.34 1.34l7.07 7.072Z"/>`
	unpinLinePath                 = `<path fill="currentColor" d="m20.97 17.172l-1.414 1.414l-3.535-3.535l-.073.074l-.707 3.535l-1.415 1.415l-4.242-4.243l-4.95 4.95l-1.414-1.414l4.95-4.95l-4.243-4.243L5.34 8.761l3.536-.707l.073-.074l-3.536-3.536l1.414-1.415L20.97 17.172ZM10.365 9.394l-.502.502l-2.822.565l6.5 6.5l.564-2.822l.502-.502l-4.242-4.243Zm8.411.074l-1.34 1.34l1.414 1.415l1.34-1.34l.707.706l1.415-1.414l-8.486-8.485l-1.414 1.414l.707.707l-1.34 1.34l1.414 1.415l1.34-1.34l4.243 4.242Z"/>`
	unsplashFillPath              = `<path fill="currentColor" d="M8.501 11v5h7v-5h5.5v10h-18V11h5.5Zm7-8v5h-7V3h7Z"/>`
	unsplashLinePath              = `<path fill="currentColor" d="M10.001 10v4h4v-4h7v11h-18V10h7Zm-2 2h-3v7h14v-7h-3L16 16H8v-4Zm8-9v6h-8V3h8Zm-2 2h-4v2h4V5Z"/>`
	uploadCloudFillPath           = `<path fill="currentColor" d="M7 20.981a6.5 6.5 0 0 1-2.936-12a8.001 8.001 0 0 1 15.872 0a6.5 6.5 0 0 1-2.936 12V21H7v-.019ZM13 13h3l-4-5l-4 5h3v4h2v-4Z"/>`
	uploadCloudLinePath           = `<path fill="currentColor" d="M1 14.5a6.496 6.496 0 0 1 3.064-5.519a8.001 8.001 0 0 1 15.872 0a6.5 6.5 0 0 1-2.936 12L7 21c-3.356-.274-6-3.078-6-6.5Zm15.848 4.487a4.5 4.5 0 0 0 2.03-8.309l-.807-.503l-.12-.942a6.001 6.001 0 0 0-11.903 0l-.12.942l-.805.503a4.5 4.5 0 0 0 2.029 8.309l.173.013h9.35l.173-.013ZM13 13v4h-2v-4H8l4-5l4 5h-3Z"/>`
	uploadCloudTwoFillPath        = `<path fill="currentColor" d="m12 12.586l4.243 4.242l-1.415 1.415L13 16.415V22h-2v-5.587l-1.828 1.83l-1.415-1.415L12 12.586ZM12 2a7.001 7.001 0 0 1 6.954 6.194A5.5 5.5 0 0 1 18 18.978V17a6 6 0 0 0-11.996-.225L6 17v1.978a5.5 5.5 0 0 1-.954-10.784A7 7 0 0 1 12 2Z"/>`
	uploadCloudTwoLinePath        = `<path fill="currentColor" d="m12 12.586l4.243 4.242l-1.415 1.415L13 16.415V22h-2v-5.587l-1.828 1.83l-1.415-1.415L12 12.586ZM12 2a7.001 7.001 0 0 1 6.954 6.194A5.5 5.5 0 0 1 18 18.978v-2.014a3.5 3.5 0 1 0-1.111-6.91a5 5 0 1 0-9.777 0a3.5 3.5 0 0 0-1.292 6.88l.18.03v2.014a5.5 5.5 0 0 1-.954-10.784A7 7 0 0 1 12 2Z"/>`
	uploadFillPath                = `<path fill="currentColor" d="M3 19h18v2H3v-2Zm10-9v8h-2v-8H4l8-8l8 8h-7Z"/>`
	uploadLinePath                = `<path fill="currentColor" d="M3 19h18v2H3v-2ZM13 5.828V17h-2V5.828L4.929 11.9l-1.414-1.414L12 2l8.485 8.485l-1.414 1.415L13 5.827Z"/>`
	uploadTwoFillPath             = `<path fill="currentColor" d="M4 19h16v-7h2v8a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1v-8h2v7ZM14 9v6h-4V9H5l7-7l7 7h-5Z"/>`
	uploadTwoLinePath             = `<path fill="currentColor" d="M4 19h16v-7h2v8a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1v-8h2v7Zm9-10v7h-2V9H6l6-6l6 6h-5Z"/>`
	usbFillPath                   = `<path fill="currentColor" d="m12 1l3 5h-2v7.381l3-1.499l-.001-.882H15V7h4v4h-1.001L18 13.118l-5 2.5v1.553A3.001 3.001 0 0 1 12 23a3 3 0 0 1-1.31-5.7L6 14l-.001-2.268a2 2 0 1 1 2.001 0V13l3 2.086V6H9l3-5Z"/>`
	usbLinePath                   = `<path fill="currentColor" d="m12 1l3 5h-2v7.381l3-1.499l-.001-.882H15V7h4v4h-1.001L18 13.118l-5 2.5v1.553A3.001 3.001 0 0 1 12 23a3 3 0 0 1-1.31-5.7L6 14l-.001-2.268a2 2 0 1 1 2.001 0V13l3 2.086V6H9l3-5Zm0 18a1 1 0 1 0 0 2a1 1 0 0 0 0-2Z"/>`
	userAddFillPath               = `<path fill="currentColor" d="M14 14.252V22H4a8 8 0 0 1 10-7.748ZM12 13c-3.315 0-6-2.685-6-6s2.685-6 6-6s6 2.685 6 6s-2.685 6-6 6Zm6 4v-3h2v3h3v2h-3v3h-2v-3h-3v-2h3Z"/>`
	userAddLinePath               = `<path fill="currentColor" d="M14 14.252v2.09A6 6 0 0 0 6 22H4a8 8 0 0 1 10-7.749ZM12 13c-3.315 0-6-2.685-6-6s2.685-6 6-6s6 2.685 6 6s-2.685 6-6 6Zm0-2c2.21 0 4-1.79 4-4s-1.79-4-4-4s-4 1.79-4 4s1.79 4 4 4Zm6 6v-3h2v3h3v2h-3v3h-2v-3h-3v-2h3Z"/>`
	userFillPath                  = `<path fill="currentColor" d="M4 22a8 8 0 1 1 16 0H4Zm8-9c-3.315 0-6-2.685-6-6s2.685-6 6-6s6 2.685 6 6s-2.685 6-6 6Z"/>`
	userFiveFillPath              = `<path fill="currentColor" d="M7.39 16.539a8 8 0 1 1 9.221 0l2.083 4.76a.5.5 0 0 1-.459.701H5.765a.5.5 0 0 1-.459-.7l2.083-4.761Zm.729-5.569a4.002 4.002 0 0 0 7.763 0l-1.941-.485a2 2 0 0 1-3.882 0l-1.94.485Z"/>`
	userFiveLinePath              = `<path fill="currentColor" d="M7.39 16.539a8 8 0 1 1 9.221 0l2.083 4.76a.5.5 0 0 1-.459.701H5.765a.5.5 0 0 1-.459-.7l2.083-4.761Zm6.735-.693l1.332-.941a6 6 0 1 0-6.913 0l1.331.941L8.058 20h7.884l-1.817-4.154ZM8.119 10.97l1.94-.485a2 2 0 0 0 3.882 0l1.94.485a4.002 4.002 0 0 1-7.762 0Z"/>`
	userFollowFillPath            = `<path fill="currentColor" d="M13 14.062V22H4a8 8 0 0 1 9-7.938ZM12 13c-3.315 0-6-2.685-6-6s2.685-6 6-6s6 2.685 6 6s-2.685 6-6 6Zm5.793 6.914l3.535-3.535l1.415 1.414l-4.95 4.95l-3.536-3.536l1.415-1.414l2.12 2.121Z"/>`
	userFollowLinePath            = `<path fill="currentColor" d="M14 14.252v2.09A6 6 0 0 0 6 22H4a8 8 0 0 1 10-7.749ZM12 13c-3.315 0-6-2.685-6-6s2.685-6 6-6s6 2.685 6 6s-2.685 6-6 6Zm0-2c2.21 0 4-1.79 4-4s-1.79-4-4-4s-4 1.79-4 4s1.79 4 4 4Zm5.793 8.914l3.535-3.535l1.415 1.414l-4.95 4.95l-3.536-3.536l1.415-1.414l2.12 2.121Z"/>`
	userForbidFillPath            = `<path fill="currentColor" d="M12 13a6 6 0 1 0 0-12a6 6 0 0 0 0 12Zm3 5a3 3 0 0 1 4.293-2.708l-4 4.001A2.988 2.988 0 0 1 15 18Zm1.707 2.708l4-4.001a3 3 0 0 1-4.001 4.001ZM18 13a5 5 0 1 0 0 10a5 5 0 0 0 0-10Zm-6 1c.084 0 .168.001.252.004A6.968 6.968 0 0 0 11 18c0 1.487.464 2.866 1.255 4H4a8 8 0 0 1 8-8Z"/>`
	userForbidLinePath            = `<path fill="currentColor" d="M8 7a4 4 0 1 1 8 0a4 4 0 0 1-8 0Zm4-6a6 6 0 1 0 0 12a6 6 0 0 0 0-12Zm3 17a3 3 0 0 1 4.293-2.708l-4 4.001A2.988 2.988 0 0 1 15 18Zm1.707 2.708l4-4.001a3 3 0 0 1-4.001 4.001ZM18 13a5 5 0 1 0 0 10a5 5 0 0 0 0-10Zm-6 1c.084 0 .168.001.252.004a6.97 6.97 0 0 0-.975 2.04A6.001 6.001 0 0 0 6 22H4a8 8 0 0 1 8-8Z"/>`
	userFourFillPath              = `<path fill="currentColor" d="M5 20h14v2H5v-2Zm7-2a8 8 0 1 1 0-16a8 8 0 0 1 0 16Z"/>`
	userFourLinePath              = `<path fill="currentColor" d="M5 20h14v2H5v-2Zm7-2a8 8 0 1 1 0-16a8 8 0 0 1 0 16Zm0-2a6 6 0 1 0 0-12a6 6 0 0 0 0 12Z"/>`
	userHeartFillPath             = `<path fill="currentColor" d="m17.841 15.659l.176.177l.178-.177a2.25 2.25 0 1 1 3.181 3.182L18.018 22.2l-3.359-3.359a2.25 2.25 0 1 1 3.182-3.182ZM12 14v8H4a8 8 0 0 1 7.75-7.996L12 14Zm0-13c3.315 0 6 2.685 6 6s-2.685 6-6 6s-6-2.685-6-6s2.685-6 6-6Z"/>`
	userHeartLinePath             = `<path fill="currentColor" d="m17.841 15.659l.176.177l.178-.177a2.25 2.25 0 1 1 3.181 3.182L18.018 22.2l-3.359-3.359a2.25 2.25 0 1 1 3.182-3.182ZM12 14v2a6 6 0 0 0-6 6H4a8 8 0 0 1 7.75-7.996L12 14Zm0-13c3.315 0 6 2.685 6 6a5.998 5.998 0 0 1-5.775 5.996L12 13c-3.315 0-6-2.685-6-6a5.998 5.998 0 0 1 5.775-5.996L12 1Zm0 2C9.79 3 8 4.79 8 7s1.79 4 4 4s4-1.79 4-4s-1.79-4-4-4Z"/>`
	userLinePath                  = `<path fill="currentColor" d="M4 22a8 8 0 1 1 16 0h-2a6 6 0 0 0-12 0H4Zm8-9c-3.315 0-6-2.685-6-6s2.685-6 6-6s6 2.685 6 6s-2.685 6-6 6Zm0-2c2.21 0 4-1.79 4-4s-1.79-4-4-4s-4 1.79-4 4s1.79 4 4 4Z"/>`
	userLocationFillPath          = `<path fill="currentColor" d="M12 14v8H4a8 8 0 0 1 8-8Zm0-1c-3.315 0-6-2.685-6-6s2.685-6 6-6s6 2.685 6 6s-2.685 6-6 6Zm8.828 7.828L18 23.657l-2.828-2.829a4 4 0 1 1 5.656 0ZM18 17a1 1 0 1 0 0 2a1 1 0 0 0 0-2Z"/>`
	userLocationLinePath          = `<path fill="currentColor" d="M12 14v2a6 6 0 0 0-6 6H4a8 8 0 0 1 8-8Zm0-1c-3.315 0-6-2.685-6-6s2.685-6 6-6s6 2.685 6 6s-2.685 6-6 6Zm0-2c2.21 0 4-1.79 4-4s-1.79-4-4-4s-4 1.79-4 4s1.79 4 4 4Zm8.828 10.071L18 24l-2.828-2.929c-1.563-1.618-1.563-4.24 0-5.858a3.904 3.904 0 0 1 5.656 0c1.563 1.618 1.563 4.24 0 5.858Zm-1.438-1.39c.813-.842.813-2.236 0-3.079a1.904 1.904 0 0 0-2.78 0c-.813.843-.813 2.237 0 3.08L18 21.12l1.39-1.44Z"/>`
	userReceivedFillPath          = `<path fill="currentColor" d="M14 14.252V22H4a8 8 0 0 1 10-7.748ZM12 13c-3.315 0-6-2.685-6-6s2.685-6 6-6s6 2.685 6 6s-2.685 6-6 6Zm7.418 4h3.586v2h-3.586l1.829 1.828l-1.414 1.415L15.59 18l4.243-4.243l1.414 1.415L19.418 17Z"/>`
	userReceivedLinePath          = `<path fill="currentColor" d="M14 14.252v2.09A6 6 0 0 0 6 22H4a8 8 0 0 1 10-7.749ZM12 13c-3.315 0-6-2.685-6-6s2.685-6 6-6s6 2.685 6 6s-2.685 6-6 6Zm0-2c2.21 0 4-1.79 4-4s-1.79-4-4-4s-4 1.79-4 4s1.79 4 4 4Zm7.418 6h3.586v2h-3.586l1.829 1.828l-1.414 1.415L15.59 18l4.243-4.243l1.414 1.415L19.418 17Z"/>`
	userReceivedTwoFillPath       = `<path fill="currentColor" d="M14 14.252V22H4a8 8 0 0 1 10-7.748ZM12 13c-3.315 0-6-2.685-6-6s2.685-6 6-6s6 2.685 6 6s-2.685 6-6 6Zm8 4h3v2h-3v3.5L15 18l5-4.5V17Z"/>`
	userReceivedTwoLinePath       = `<path fill="currentColor" d="M14 14.252v2.09A6 6 0 0 0 6 22H4a8 8 0 0 1 10-7.749ZM12 13c-3.315 0-6-2.685-6-6s2.685-6 6-6s6 2.685 6 6s-2.685 6-6 6Zm0-2c2.21 0 4-1.79 4-4s-1.79-4-4-4s-4 1.79-4 4s1.79 4 4 4Zm8 6h3v2h-3v3.5L15 18l5-4.5V17Z"/>`
	userSearchFillPath            = `<path fill="currentColor" d="M12 14v8H4a8 8 0 0 1 8-8Zm0-1c-3.315 0-6-2.685-6-6s2.685-6 6-6s6 2.685 6 6s-2.685 6-6 6Zm9.446 7.032l1.504 1.503l-1.415 1.415l-1.503-1.504a4 4 0 1 1 1.414-1.414ZM18 20a2 2 0 1 0 0-4a2 2 0 0 0 0 4Z"/>`
	userSearchLinePath            = `<path fill="currentColor" d="M12 14v2a6 6 0 0 0-6 6H4a8 8 0 0 1 8-8Zm0-1c-3.315 0-6-2.685-6-6s2.685-6 6-6s6 2.685 6 6s-2.685 6-6 6Zm0-2c2.21 0 4-1.79 4-4s-1.79-4-4-4s-4 1.79-4 4s1.79 4 4 4Zm9.446 9.032l1.504 1.503l-1.415 1.415l-1.503-1.504a4 4 0 1 1 1.414-1.414ZM18 20a2 2 0 1 0 0-4a2 2 0 0 0 0 4Z"/>`
	userSettingsFillPath          = `<path fill="currentColor" d="M12 14v8H4a8 8 0 0 1 8-8Zm0-1c-3.315 0-6-2.685-6-6s2.685-6 6-6s6 2.685 6 6s-2.685 6-6 6Zm2.595 5.811a3.505 3.505 0 0 1 0-1.622l-.992-.573l1-1.732l.992.573A3.498 3.498 0 0 1 17 14.645V13.5h2v1.145c.532.158 1.012.44 1.405.812l.992-.573l1 1.732l-.991.573a3.512 3.512 0 0 1 0 1.622l.991.573l-1 1.732l-.992-.573a3.495 3.495 0 0 1-1.405.812V22.5h-2v-1.145a3.495 3.495 0 0 1-1.405-.812l-.992.573l-1-1.732l.992-.573ZM18 17a1 1 0 1 0 0 2a1 1 0 0 0 0-2Z"/>`
	userSettingsLinePath          = `<path fill="currentColor" d="M12 14v2a6 6 0 0 0-6 6H4a8 8 0 0 1 8-8Zm0-1c-3.315 0-6-2.685-6-6s2.685-6 6-6s6 2.685 6 6s-2.685 6-6 6Zm0-2c2.21 0 4-1.79 4-4s-1.79-4-4-4s-4 1.79-4 4s1.79 4 4 4Zm2.595 7.811a3.505 3.505 0 0 1 0-1.622l-.992-.573l1-1.732l.992.573A3.498 3.498 0 0 1 17 14.645V13.5h2v1.145c.532.158 1.012.44 1.405.812l.992-.573l1 1.732l-.991.573a3.512 3.512 0 0 1 0 1.622l.991.573l-1 1.732l-.992-.573a3.495 3.495 0 0 1-1.405.812V22.5h-2v-1.145a3.495 3.495 0 0 1-1.405-.812l-.992.573l-1-1.732l.992-.573ZM18 19.5a1.5 1.5 0 1 0 0-3a1.5 1.5 0 0 0 0 3Z"/>`
	userSharedFillPath            = `<path fill="currentColor" d="M14 14.252V22H4a8 8 0 0 1 10-7.748ZM12 13c-3.315 0-6-2.685-6-6s2.685-6 6-6s6 2.685 6 6s-2.685 6-6 6Zm6.586 4l-1.829-1.828l1.415-1.415L22.414 18l-4.242 4.243l-1.415-1.415L18.586 19H15v-2h3.586Z"/>`
	userSharedLinePath            = `<path fill="currentColor" d="M14 14.252v2.09A6 6 0 0 0 6 22H4a8 8 0 0 1 10-7.749ZM12 13c-3.315 0-6-2.685-6-6s2.685-6 6-6s6 2.685 6 6s-2.685 6-6 6Zm0-2c2.21 0 4-1.79 4-4s-1.79-4-4-4s-4 1.79-4 4s1.79 4 4 4Zm6.586 6l-1.829-1.828l1.415-1.415L22.414 18l-4.242 4.243l-1.415-1.415L18.586 19H15v-2h3.586Z"/>`
	userSharedTwoFillPath         = `<path fill="currentColor" d="M14 14.252V22H4a8 8 0 0 1 10-7.748ZM12 13c-3.315 0-6-2.685-6-6s2.685-6 6-6s6 2.685 6 6s-2.685 6-6 6Zm6 4v-3.5l5 4.5l-5 4.5V19h-3v-2h3Z"/>`
	userSharedTwoLinePath         = `<path fill="currentColor" d="M14 14.252v2.09A6 6 0 0 0 6 22H4a8 8 0 0 1 10-7.749ZM12 13c-3.315 0-6-2.685-6-6s2.685-6 6-6s6 2.685 6 6s-2.685 6-6 6Zm0-2c2.21 0 4-1.79 4-4s-1.79-4-4-4s-4 1.79-4 4s1.79 4 4 4Zm6 6v-3.5l5 4.5l-5 4.5V19h-3v-2h3Z"/>`
	userSixFillPath               = `<path fill="currentColor" d="M12 17c3.663 0 6.866 1.575 8.608 3.925l-1.842.871C17.348 20.116 14.848 19 12.001 19c-2.848 0-5.347 1.116-6.765 2.796l-1.841-.872C5.137 18.574 8.339 17 12 17Zm0-15a5 5 0 0 1 5 5v3a5 5 0 0 1-10 0V7a5 5 0 0 1 5-5Z"/>`
	userSixLinePath               = `<path fill="currentColor" d="M12 17c3.663 0 6.866 1.575 8.608 3.925l-1.842.871C17.348 20.116 14.848 19 12.001 19c-2.848 0-5.347 1.116-6.765 2.796l-1.841-.872C5.137 18.574 8.339 17 12 17Zm0-15a5 5 0 0 1 5 5v3a5 5 0 0 1-4.782 4.995L12 15a5 5 0 0 1-5-5V7a5 5 0 0 1 4.783-4.995L12.001 2Zm0 2a3 3 0 0 0-2.994 2.824L9.001 7v3a3 3 0 0 0 5.995.176L15 10V7a3 3 0 0 0-3-3Z"/>`
	userSmileFillPath             = `<path fill="currentColor" d="M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10ZM7 12a5 5 0 0 0 10 0h-2a3 3 0 1 1-6 0H7Z"/>`
	userSmileLinePath             = `<path fill="currentColor" d="M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10Zm0-2a8 8 0 1 0 0-16a8 8 0 0 0 0 16Zm-5-8h2a3 3 0 1 0 6 0h2a5 5 0 0 1-10 0Z"/>`
	userStarFillPath              = `<path fill="currentColor" d="M12 14v8H4a8 8 0 0 1 8-8Zm6 7.5l-2.939 1.545l.561-3.273l-2.377-2.317l3.286-.477L18 14l1.47 2.977l3.285.478l-2.377 2.318l.56 3.272L18 21.5ZM12 13c-3.315 0-6-2.685-6-6s2.685-6 6-6s6 2.685 6 6s-2.685 6-6 6Z"/>`
	userStarLinePath              = `<path fill="currentColor" d="M12 14v2a6 6 0 0 0-6 6H4a8 8 0 0 1 8-8Zm0-1c-3.315 0-6-2.685-6-6s2.685-6 6-6s6 2.685 6 6s-2.685 6-6 6Zm0-2c2.21 0 4-1.79 4-4s-1.79-4-4-4s-4 1.79-4 4s1.79 4 4 4Zm6 10.5l-2.939 1.545l.561-3.273l-2.377-2.317l3.286-.477L18 14l1.47 2.977l3.285.478l-2.377 2.318l.56 3.272L18 21.5Z"/>`
	userThreeFillPath             = `<path fill="currentColor" d="M20 22H4v-2a5 5 0 0 1 5-5h6a5 5 0 0 1 5 5v2Zm-8-9a6 6 0 1 1 0-12a6 6 0 0 1 0 12Z"/>`
	userThreeLinePath             = `<path fill="currentColor" d="M20 22h-2v-2a3 3 0 0 0-3-3H9a3 3 0 0 0-3 3v2H4v-2a5 5 0 0 1 5-5h6a5 5 0 0 1 5 5v2Zm-8-9a6 6 0 1 1 0-12a6 6 0 0 1 0 12Zm0-2a4 4 0 1 0 0-8a4 4 0 0 0 0 8Z"/>`
	userTwoFillPath               = `<path fill="currentColor" d="M11 14.062V20h2v-5.938c3.946.492 7 3.858 7 7.938H4a8.001 8.001 0 0 1 7-7.938ZM12 13c-3.315 0-6-2.685-6-6s2.685-6 6-6s6 2.685 6 6s-2.685 6-6 6Z"/>`
	userTwoLinePath               = `<path fill="currentColor" d="M4 22a8 8 0 1 1 16 0H4Zm9-5.917V20h4.659A6.008 6.008 0 0 0 13 16.083ZM11 20v-3.917A6.008 6.008 0 0 0 6.341 20H11Zm1-7c-3.315 0-6-2.685-6-6s2.685-6 6-6s6 2.685 6 6s-2.685 6-6 6Zm0-2c2.21 0 4-1.79 4-4s-1.79-4-4-4s-4 1.79-4 4s1.79 4 4 4Z"/>`
	userUnfollowFillPath          = `<path fill="currentColor" d="M14 14.252V22H4a8 8 0 0 1 10-7.748ZM12 13c-3.315 0-6-2.685-6-6s2.685-6 6-6s6 2.685 6 6s-2.685 6-6 6Zm7 3.586l2.121-2.121l1.415 1.414L20.413 18l2.121 2.121l-1.414 1.415L19 19.413l-2.121 2.121l-1.415-1.414L17.587 18l-2.121-2.121l1.414-1.415L19 16.587Z"/>`
	userUnfollowLinePath          = `<path fill="currentColor" d="M14 14.252v2.09A6 6 0 0 0 6 22H4a8 8 0 0 1 10-7.749ZM12 13c-3.315 0-6-2.685-6-6s2.685-6 6-6s6 2.685 6 6s-2.685 6-6 6Zm0-2c2.21 0 4-1.79 4-4s-1.79-4-4-4s-4 1.79-4 4s1.79 4 4 4Zm7 6.586l2.121-2.121l1.415 1.414L20.413 19l2.121 2.121l-1.414 1.415L19 20.413l-2.121 2.121l-1.415-1.414L17.587 19l-2.121-2.121l1.414-1.415L19 17.587Z"/>`
	userVoiceFillPath             = `<path fill="currentColor" d="M1 22a8 8 0 0 1 16 0H1Zm8-9c-3.315 0-6-2.685-6-6s2.685-6 6-6s6 2.685 6 6s-2.685 6-6 6Zm9.246-9.815A9.97 9.97 0 0 1 19 7a9.97 9.97 0 0 1-.754 3.816l-1.677-1.22A7.99 7.99 0 0 0 17 7a7.99 7.99 0 0 0-.43-2.596l1.676-1.22ZM21.548.784A13.942 13.942 0 0 1 23 7c0 2.233-.523 4.344-1.452 6.217l-1.645-1.197A11.956 11.956 0 0 0 21 7a11.96 11.96 0 0 0-1.097-5.02L21.548.784Z"/>`
	userVoiceLinePath             = `<path fill="currentColor" d="M1 22a8 8 0 0 1 16 0h-2a6 6 0 0 0-12 0H1Zm8-9c-3.315 0-6-2.685-6-6s2.685-6 6-6s6 2.685 6 6s-2.685 6-6 6Zm0-2c2.21 0 4-1.79 4-4s-1.79-4-4-4s-4 1.79-4 4s1.79 4 4 4ZM21.548.784A13.942 13.942 0 0 1 23 7c0 2.233-.523 4.344-1.452 6.217l-1.645-1.197A11.956 11.956 0 0 0 21 7a11.96 11.96 0 0 0-1.097-5.02L21.548.784Zm-3.302 2.4A9.97 9.97 0 0 1 19 7a9.97 9.97 0 0 1-.754 3.816l-1.677-1.22A7.99 7.99 0 0 0 17 7a7.99 7.99 0 0 0-.43-2.596l1.676-1.22Z"/>`
	verifiedBadgeFillPath         = `<path fill="currentColor" d="M10.007 2.104a3 3 0 0 0-3.595 1.49L5.606 5.17a1 1 0 0 1-.436.436l-1.577.806a3 3 0 0 0-1.49 3.595l.546 1.685a1 1 0 0 1 0 .616l-.545 1.685a3 3 0 0 0 1.49 3.595l1.576.806a1 1 0 0 1 .436.436l.806 1.577a3 3 0 0 0 3.595 1.49l1.685-.546a1 1 0 0 1 .616 0l1.685.545a3 3 0 0 0 3.595-1.489l.806-1.577a1 1 0 0 1 .436-.436l1.577-.805a3 3 0 0 0 1.49-3.596l-.546-1.685a1 1 0 0 1 0-.616l.545-1.685a3 3 0 0 0-1.489-3.595l-1.577-.806a1 1 0 0 1-.436-.436l-.805-1.577a3 3 0 0 0-3.596-1.49l-1.685.546a1 1 0 0 1-.616 0l-1.685-.545ZM6.76 11.757l1.414-1.414l2.828 2.829l5.657-5.657l1.415 1.414l-7.072 7.07l-4.242-4.242Z"/>`
	verifiedBadgeLinePath         = `<path fill="currentColor" d="M10.007 2.104a3 3 0 0 0-3.595 1.49L5.606 5.17a1 1 0 0 1-.436.436l-1.577.806a3 3 0 0 0-1.49 3.595l.546 1.685a1 1 0 0 1 0 .616l-.545 1.685a3 3 0 0 0 1.49 3.595l1.576.806a1 1 0 0 1 .436.436l.806 1.577a3 3 0 0 0 3.595 1.49l1.685-.546a1 1 0 0 1 .616 0l1.685.545a3 3 0 0 0 3.595-1.489l.806-1.577a1 1 0 0 1 .436-.436l1.577-.805a3 3 0 0 0 1.49-3.596l-.546-1.685a1 1 0 0 1 0-.616l.545-1.685a3 3 0 0 0-1.489-3.595l-1.577-.806a1 1 0 0 1-.436-.436l-.805-1.577a3 3 0 0 0-3.596-1.49l-1.685.546a1 1 0 0 1-.616 0l-1.685-.545ZM8.193 4.503a1 1 0 0 1 1.198-.496l1.685.545a3 3 0 0 0 1.848 0l1.685-.545a1 1 0 0 1 1.198.496l.806 1.577a3 3 0 0 0 1.307 1.307l1.577.806a1 1 0 0 1 .497 1.198l-.546 1.685a3 3 0 0 0 0 1.848l.546 1.685a1 1 0 0 1-.497 1.198l-1.577.806a3 3 0 0 0-1.307 1.307l-.806 1.577a1 1 0 0 1-1.198.497l-1.685-.546a3 3 0 0 0-1.848 0l-1.685.546a1 1 0 0 1-1.198-.497l-.806-1.577a3 3 0 0 0-1.307-1.307l-1.577-.806a1 1 0 0 1-.496-1.198l.545-1.685a3 3 0 0 0 0-1.848l-.545-1.685a1 1 0 0 1 .496-1.198l1.577-.806A3 3 0 0 0 7.387 6.08l.806-1.577ZM6.76 11.757L11.002 16l7.071-7.071l-1.414-1.414l-5.657 5.657l-2.828-2.829l-1.414 1.414Z"/>`
	videoAddFillPath              = `<path fill="currentColor" d="M16 4a1 1 0 0 1 1 1v4.2l5.213-3.65a.5.5 0 0 1 .787.41v12.08a.5.5 0 0 1-.787.41L17 14.8V19a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V5a1 1 0 0 1 1-1h14ZM8 8v3H5v2h2.999L8 16h2l-.001-3H13v-2h-3V8H8Z"/>`
	videoAddLinePath              = `<path fill="currentColor" d="M16 4a1 1 0 0 1 1 1v4.2l5.213-3.65a.5.5 0 0 1 .787.41v12.08a.5.5 0 0 1-.787.41L17 14.8V19a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V5a1 1 0 0 1 1-1h14Zm-1 2H3v12h12V6ZM8 8h2v3h3v2H9.999L10 16H8l-.001-3H5v-2h3V8Zm13 .841l-4 2.8v.718l4 2.8V8.84Z"/>`
	videoChatFillPath             = `<path fill="currentColor" d="M6.455 19L2 22.5V4a1 1 0 0 1 1-1h18a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H6.455ZM14 10.25V8H7v6h7v-2.25L17 14V8l-3 2.25Z"/>`
	videoChatLinePath             = `<path fill="currentColor" d="M14 10.25L17 8v6l-3-2.25V14H7V8h7v2.25ZM5.763 17H20V5H4v13.385L5.763 17Zm.692 2L2 22.5V4a1 1 0 0 1 1-1h18a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H6.455Z"/>`
	videoDownloadFillPath         = `<path fill="currentColor" d="M16 4a1 1 0 0 1 1 1v4.2l5.213-3.65a.5.5 0 0 1 .787.41v12.08a.5.5 0 0 1-.787.41L17 14.8V19a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V5a1 1 0 0 1 1-1h14Zm-6 4H8v4H5l4 4l4-4h-3V8Z"/>`
	videoDownloadLinePath         = `<path fill="currentColor" d="M16 4a1 1 0 0 1 1 1v4.2l5.213-3.65a.5.5 0 0 1 .787.41v12.08a.5.5 0 0 1-.787.41L17 14.8V19a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V5a1 1 0 0 1 1-1h14Zm-1 2H3v12h12V6Zm-5 2v4h3l-4 4l-4-4h3V8h2Zm11 .841l-4 2.8v.718l4 2.8V8.84Z"/>`
	videoFillPath                 = `<path fill="currentColor" d="M3 3.993C3 3.445 3.445 3 3.993 3h16.014c.548 0 .993.445.993.993v16.014a.994.994 0 0 1-.993.993H3.993A.993.993 0 0 1 3 20.007V3.993Zm7.622 4.422a.4.4 0 0 0-.622.332v6.506a.4.4 0 0 0 .622.332l4.879-3.252a.401.401 0 0 0 0-.666l-4.88-3.252Z"/>`
	videoLinePath                 = `<path fill="currentColor" d="M3 3.993C3 3.445 3.445 3 3.993 3h16.014c.548 0 .993.445.993.993v16.014a.994.994 0 0 1-.993.993H3.993A.993.993 0 0 1 3 20.007V3.993ZM5 5v14h14V5H5Zm5.622 3.415l4.879 3.252a.4.4 0 0 1 0 .666l-4.88 3.252a.4.4 0 0 1-.621-.332V8.747a.4.4 0 0 1 .622-.332Z"/>`
	videoUploadFillPath           = `<path fill="currentColor" d="M16 4a1 1 0 0 1 1 1v4.2l5.213-3.65a.5.5 0 0 1 .787.41v12.08a.5.5 0 0 1-.787.41L17 14.8V19a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V5a1 1 0 0 1 1-1h14ZM9 8l-4 4h3v4h2v-4h3L9 8Z"/>`
	videoUploadLinePath           = `<path fill="currentColor" d="M16 4a1 1 0 0 1 1 1v4.2l5.213-3.65a.5.5 0 0 1 .787.41v12.08a.5.5 0 0 1-.787.41L17 14.8V19a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V5a1 1 0 0 1 1-1h14Zm-1 2H3v12h12V6ZM9 8l4 4h-3v4H8v-4H5l4-4Zm12 .841l-4 2.8v.718l4 2.8V8.84Z"/>`
	vidiconFillPath               = `<path fill="currentColor" d="m17 9.2l5.213-3.65a.5.5 0 0 1 .787.41v12.08a.5.5 0 0 1-.787.41L17 14.8V19a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V5a1 1 0 0 1 1-1h14a1 1 0 0 1 1 1v4.2ZM5 8v2h2V8H5Z"/>`
	vidiconLinePath               = `<path fill="currentColor" d="m17 9.2l5.213-3.65a.5.5 0 0 1 .787.41v12.08a.5.5 0 0 1-.787.41L17 14.8V19a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V5a1 1 0 0 1 1-1h14a1 1 0 0 1 1 1v4.2Zm0 3.159l4 2.8V8.84l-4 2.8v.718ZM3 6v12h12V6H3Zm2 2h2v2H5V8Z"/>`
	vidiconTwoFillPath            = `<path fill="currentColor" d="M13 6V4H5V2h10v4h1a1 1 0 0 1 1 1v2.2l5.213-3.65a.5.5 0 0 1 .787.41v12.08a.5.5 0 0 1-.787.41L17 14.8V19a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h11Zm-8 4v2h2v-2H5Z"/>`
	vidiconTwoLinePath            = `<path fill="currentColor" d="M13 6V4H5V2h10v4h1a1 1 0 0 1 1 1v2.2l5.213-3.65a.5.5 0 0 1 .787.41v12.08a.5.5 0 0 1-.787.41L17 14.8V19a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h11Zm2 2H3v10h12V8Zm2 4.359l4 2.8V8.84l-4 2.8v.718ZM5 10h2v2H5v-2Z"/>`
	vimeoFillPath                 = `<path fill="currentColor" d="M1.174 8.301c-.281-.413-.252-.413.328-.922c1.232-1.082 2.394-2.266 3.736-3.212c1.215-.852 2.826-1.402 3.927-.047c1.014 1.249 1.038 3.142 1.295 4.65c.257 1.564.503 3.164 1.051 4.66c.152.421.443 1.217.968 1.284c.678.093 1.368-1.096 1.683-1.54c.817-1.18 1.925-2.769 1.785-4.286c-.138-1.612-1.878-1.309-2.966-.924c.175-1.809 1.858-3.843 3.48-4.53c1.72-.714 4.276-.702 5.14 1.237c.922 2.102.093 4.543-.912 6.448c-1.096 2.068-2.509 3.982-4.018 5.77c-1.331 1.588-2.906 3.33-4.89 4.089c-2.267.864-3.61-.82-4.382-2.77c-.843-2.123-1.262-4.506-1.87-6.716c-.256-.935-.56-1.998-1.167-2.77c-.792-.994-1.692-.059-2.474.478c-.27-.267-.491-.607-.714-.899Z"/>`
	vimeoLinePath                 = `<path fill="currentColor" d="M17.994 3.004C20.427 3.004 22 4.516 22 7.499c0 1.72-.998 3.94-1.832 5.235c-2.789 4.333-6.233 8.74-9.643 8.74c-3.706 0-4.67-6.83-5.092-8.432c-.422-1.6-.533-2.209-1.17-3.232c-.317.219-.76.528-1.33.929a.5.5 0 0 1-.693-.116L.926 8.807a.5.5 0 0 1 .027-.62C3.78 4.914 6.129 3.277 8 3.277c2.392 0 3.125 2.815 3.324 4.222c.3 2.117.69 4.738 1.245 5.872c.556-.791 2.18-2.887 1.966-3.99c-.094-.486-1.317.184-1.887.078c-.425-.079-.805-.402-.805-1.026c0-1.31 1.851-5.43 6.15-5.43Zm.007 2c-2.194 0-3.251 1.532-3.653 2.207c1.25.046 1.97.819 2.134 1.804c.388 2.329-1.917 4.92-2.34 5.564c-.396.603-3.061 3.329-4.25-3.359c-.112-.63-.367-2.164-.665-4.187c-.17-1.15-.872-1.763-1.229-1.763c-.843 0-1.92.65-3.856 2.515c1.905-.115 2.545 2.276 2.917 3.634c.815 2.983 1.57 8.055 3.62 8.055c1.726 0 4.438-2.646 7.37-7.039c.208-.312 1.965-3.025 1.965-5.036c0-2.395-1.469-2.395-2.013-2.395Z"/>`
	vipCrownFillPath              = `<path fill="currentColor" d="M2.005 19h20v2h-20v-2Zm0-14l5 3l5-6l5 6l5-3v12h-20V5Z"/>`
	vipCrownLinePath              = `<path fill="currentColor" d="M2.005 19h20v2h-20v-2Zm0-14l5 3.5l5-6.5l5 6.5l5-3.5v12h-20V5Zm2 3.841V15h16V8.841l-3.42 2.394l-4.58-5.955l-4.58 5.955l-3.42-2.394Z"/>`
	vipCrownTwoFillPath           = `<path fill="currentColor" d="M2.806 5.2L7.005 8l4.186-5.86a1 1 0 0 1 1.628-.001L17.005 8l4.2-2.799a1 1 0 0 1 1.547.95L21.11 20.116a1 1 0 0 1-.993.883H3.894a1 1 0 0 1-.993-.883L1.258 6.149A1 1 0 0 1 2.806 5.2Zm9.2 9.8a2 2 0 1 0 0-4a2 2 0 0 0 0 4Z"/>`
	vipCrownTwoLinePath           = `<path fill="currentColor" d="M3.497 8.065L4.784 19h14.443l1.286-10.935l-4.01 2.673l-4.498-6.297l-4.498 6.297l-4.01-2.673ZM2.806 5.2L7.005 8l4.186-5.86a1 1 0 0 1 1.628-.001L17.005 8l4.2-2.799a1 1 0 0 1 1.547.95L21.11 20.116a1 1 0 0 1-.993.883H3.894a1 1 0 0 1-.993-.883L1.258 6.149A1 1 0 0 1 2.806 5.2Zm9.2 9.8a2 2 0 1 1-.001-4a2 2 0 0 1 0 4Z"/>`
	vipDiamondFillPath            = `<path fill="currentColor" d="M4.878 3.003h14.254a1 1 0 0 1 .809.412l3.822 5.256a.5.5 0 0 1-.037.633l-11.354 12.3a.5.5 0 0 1-.735 0L.283 9.305a.5.5 0 0 1-.037-.633l3.823-5.256a1 1 0 0 1 .809-.412Z"/>`
	vipDiamondLinePath            = `<path fill="currentColor" d="M4.878 3.003h14.254a1 1 0 0 1 .809.412l3.822 5.256a.5.5 0 0 1-.037.633l-11.354 12.3a.5.5 0 0 1-.706.03L.283 9.303a.5.5 0 0 1-.037-.633l3.823-5.256a1 1 0 0 1 .809-.412Zm.509 2l-2.8 3.85l9.418 10.201l9.417-10.202l-2.8-3.85H5.388Z"/>`
	vipFillPath                   = `<path fill="currentColor" d="M3.005 3h18a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1h-18a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Zm8 5.5v7h2v-7h-2Zm-.285 0H8.606l-1.497 4.113L5.612 8.5H3.498l2.611 6.964h2L10.72 8.5Zm5.285 5h1.5a2.5 2.5 0 0 0 0-5h-3.5v7h2v-2Zm0-2v-1h1.5a.5.5 0 0 1 0 1h-1.5Z"/>`
	vipLinePath                   = `<path fill="currentColor" d="M2.005 19h20v2h-20v-2Zm9-11h2v8h-2V8ZM7.97 8l-1.86 5.113L4.247 8H2.123l2.986 7.964h2L10.095 8H7.97Zm9.035 6v2h-2V8h4a3 3 0 0 1 0 6h-2Zm0-4v2h2a1 1 0 1 0 0-2h-2Zm-15-7h20v2h-20V3Z"/>`
	virusFillPath                 = `<path fill="currentColor" d="m13.716 1.947l3.735 1.434l-.717 1.867l-.934-.359l-.746 1.945a6.03 6.03 0 0 1 1.945 1.846l1.902-.848l-.406-.913l1.827-.814l1.627 3.655l-1.827.813l-.407-.914l-1.902.848a6.012 6.012 0 0 1 .07 2.68l1.944.745l.358-.932l1.867.716l-1.433 3.735l-1.867-.717l.357-.933l-1.944-.747a6.03 6.03 0 0 1-1.846 1.945l.848 1.902l.914-.406l.813 1.827l-3.654 1.627l-.813-1.827l.913-.407l-.847-1.902a6.012 6.012 0 0 1-2.68.07l-.747 1.944l.934.358l-.717 1.867L6.55 20.62l.717-1.867l.932.358l.748-1.945A6.032 6.032 0 0 1 7 15.32l-1.903.848l.407.914l-1.827.813L2.05 14.24l1.827-.813l.406.914l1.903-.848a6.01 6.01 0 0 1-.07-2.68l-1.945-.746l-.358.933l-1.867-.717L3.381 6.55l1.867.717l-.36.932l1.946.748A6.031 6.031 0 0 1 8.68 7l-.848-1.903l-.913.407l-.814-1.827L9.76 2.05l.813 1.827l-.914.407l.848 1.902a6.01 6.01 0 0 1 2.68-.07l.745-1.945L13 3.814l.716-1.867Zm-3.582 11.285a1 1 0 1 0 1.732 1a1 1 0 0 0-1.732-1ZM14 11a1 1 0 1 0 0 2a1 1 0 0 0 0-2Zm-3.5-1.598a1 1 0 1 0 1 1.732a1 1 0 0 0-1-1.732Z"/>`
	virusLinePath                 = `<path fill="currentColor" d="m13.716 1.947l3.735 1.434l-.717 1.867l-.934-.359l-.746 1.945a6.03 6.03 0 0 1 1.945 1.846l1.902-.848l-.406-.913l1.827-.814l1.627 3.655l-1.827.813l-.407-.914l-1.902.848a6.012 6.012 0 0 1 .07 2.68l1.944.745l.358-.932l1.867.716l-1.433 3.735l-1.867-.717l.357-.933l-1.944-.747a6.03 6.03 0 0 1-1.846 1.945l.848 1.902l.914-.406l.813 1.827l-3.654 1.627l-.813-1.827l.913-.407l-.847-1.902a6.012 6.012 0 0 1-2.68.07l-.747 1.944l.934.358l-.717 1.867L6.55 20.62l.717-1.867l.932.358l.748-1.945A6.032 6.032 0 0 1 7 15.32l-1.903.848l.407.914l-1.827.813L2.05 14.24l1.827-.813l.406.914l1.903-.848a6.01 6.01 0 0 1-.07-2.68l-1.945-.746l-.358.933l-1.867-.717L3.381 6.55l1.867.717l-.36.932l1.946.748A6.031 6.031 0 0 1 8.68 7l-.848-1.903l-.913.407l-.814-1.827L9.76 2.05l.813 1.827l-.914.407l.848 1.902a6.01 6.01 0 0 1 2.68-.07l.745-1.945L13 3.814l.716-1.867ZM12 8a4 4 0 1 0 0 8a4 4 0 0 0 0-8Zm-.5 4.866a1 1 0 1 1-1 1.732a1 1 0 0 1 1-1.732ZM14 11a1 1 0 1 1 0 2a1 1 0 0 1 0-2Zm-2.134-1.232a1 1 0 1 1-1.732 1a1 1 0 0 1 1.732-1Z"/>`
	visaFillPath                  = `<path fill="currentColor" d="M1 4h22v2H1V4Zm0 14h22v2H1v-2Zm18.622-3.086l-.174-.87h-1.949l-.31.863l-1.562.004c1.005-2.407 1.75-4.19 2.236-5.35c.127-.302.353-.456.685-.454c.254.002.669.002 1.245 0L21 14.912l-1.378.003Zm-1.684-2.062h1.256l-.47-2.18l-.786 2.18ZM7.872 9.106l1.57.002l-2.427 5.806l-1.59-.001c-.537-2.07-.932-3.606-1.184-4.605c-.077-.307-.23-.521-.526-.622c-.263-.09-.701-.23-1.315-.419v-.16h2.509c.434 0 .687.21.769.64l.62 3.289l1.574-3.93Zm3.727.002l-1.24 5.805l-1.495-.002l1.24-5.805l1.495.002ZM14.631 9c.446 0 1.01.138 1.334.267l-.262 1.204c-.293-.118-.775-.277-1.18-.27c-.59.009-.954.256-.954.493c0 .384.632.578 1.284.999c.743.48.84.91.832 1.378c-.011.971-.832 1.929-2.565 1.929c-.791-.012-1.076-.078-1.72-.306l.272-1.256c.656.274.935.361 1.495.361c.515 0 .956-.207.96-.568c.002-.257-.155-.384-.732-.702c-.577-.317-1.386-.756-1.375-1.64C12.033 9.759 13.107 9 14.63 9Z"/>`
	visaLinePath                  = `<path fill="currentColor" d="m22.221 15.768l-.224-1.125h-2.514l-.4 1.117l-2.015.004c1.295-3.113 2.257-5.418 2.884-6.917c.164-.392.455-.592.884-.589c.328.003.863.003 1.606.001L24 15.765l-1.779.003Zm-2.172-2.666h1.62l-.605-2.82l-1.015 2.82ZM7.06 8.257l2.026.002l-3.132 7.51l-2.051-.002a951.26 951.26 0 0 1-1.528-5.956c-.1-.396-.298-.673-.679-.804A60.876 60.876 0 0 0 0 8.466v-.207h3.237c.56 0 .887.271.992.827c.106.557.372 1.976.8 4.254L7.06 8.257Zm4.81.002l-1.601 7.509l-1.929-.003l1.6-7.508l1.93.002Zm3.91-.139c.577 0 1.304.18 1.722.346l-.338 1.556c-.378-.152-1-.357-1.523-.35c-.76.013-1.23.332-1.23.638c0 .498.816.749 1.656 1.293c.958.62 1.085 1.177 1.073 1.783c-.013 1.255-1.073 2.494-3.309 2.494c-1.02-.015-1.388-.1-2.22-.396l.352-1.624c.847.354 1.206.467 1.93.467c.663 0 1.232-.268 1.237-.735c.004-.332-.2-.497-.944-.907c-.744-.411-1.788-.979-1.774-2.122c.017-1.462 1.402-2.443 3.368-2.443Z"/>`
	voiceRecognitionFillPath      = `<path fill="currentColor" d="M20.998 3v18h-18V3h18Zm-8 3h-2v12h2V6Zm-4 3h-2v6h2V9Zm8 0h-2v6h2V9Z"/>`
	voiceRecognitionLinePath      = `<path fill="currentColor" d="M4.998 15v4h4v2h-6v-6h2Zm16 0v6h-6v-2h4v-4h2Zm-8-9v12h-2V6h2Zm-4 3v6h-2V9h2Zm8 0v6h-2V9h2Zm-8-6v2h-4v4h-2V3h6Zm12 0v6h-2V5h-4V3h6Z"/>`
	voiceprintFillPath            = `<path fill="currentColor" d="M5 7h2v10H5V7Zm-4 3h2v4H1v-4Zm8-8h2v18H9V2Zm4 2h2v18h-2V4Zm4 3h2v10h-2V7Zm4 3h2v4h-2v-4Z"/>`
	voiceprintLinePath            = `<path fill="currentColor" d="M5 7h2v10H5V7Zm-4 3h2v4H1v-4Zm8-8h2v18H9V2Zm4 2h2v18h-2V4Zm4 3h2v10h-2V7Zm4 3h2v4h-2v-4Z"/>`
	volumeDownFillPath            = `<path fill="currentColor" d="M8.889 16H5a1 1 0 0 1-1-1V9a1 1 0 0 1 1-1h3.889l5.294-4.332a.5.5 0 0 1 .817.387v15.89a.5.5 0 0 1-.817.387L8.89 16Zm9.974.591l-1.422-1.422A3.994 3.994 0 0 0 19 12c0-1.43-.75-2.685-1.88-3.392l1.439-1.439A5.991 5.991 0 0 1 21 12c0 1.842-.83 3.49-2.137 4.591Z"/>`
	volumeDownLinePath            = `<path fill="currentColor" d="M13 7.22L9.603 10H6v4h3.603L13 16.78V7.22ZM8.889 16H5a1 1 0 0 1-1-1V9a1 1 0 0 1 1-1h3.889l5.294-4.332a.5.5 0 0 1 .817.387v15.89a.5.5 0 0 1-.817.387L8.89 16Zm9.974.591l-1.422-1.422A3.994 3.994 0 0 0 19 12c0-1.43-.75-2.685-1.88-3.392l1.439-1.439A5.991 5.991 0 0 1 21 12c0 1.842-.83 3.49-2.137 4.591Z"/>`
	volumeMuteFillPath            = `<path fill="currentColor" d="M5.889 16H2a1 1 0 0 1-1-1V9a1 1 0 0 1 1-1h3.889l5.294-4.332a.5.5 0 0 1 .817.387v15.89a.5.5 0 0 1-.817.387L5.89 16Zm14.525-4l3.536 3.536l-1.415 1.414L19 13.414l-3.536 3.536l-1.414-1.414L17.586 12L14.05 8.465l1.414-1.415L19 10.586l3.535-3.536l1.415 1.415L20.414 12Z"/>`
	volumeMuteLinePath            = `<path fill="currentColor" d="M10 7.22L6.603 10H3v4h3.603L10 16.78V7.22ZM5.889 16H2a1 1 0 0 1-1-1V9a1 1 0 0 1 1-1h3.889l5.294-4.332a.5.5 0 0 1 .817.387v15.89a.5.5 0 0 1-.817.387L5.89 16Zm14.525-4l3.536 3.536l-1.415 1.414L19 13.414l-3.536 3.536l-1.414-1.414L17.586 12L14.05 8.465l1.414-1.415L19 10.586l3.535-3.536l1.415 1.415L20.414 12Z"/>`
	volumeOffVibrateFillPath      = `<path fill="currentColor" d="m19.39 3.161l1.414 1.414L18.33 7.05l2.475 2.475L18.33 12l2.475 2.476l-2.475 2.475l2.475 2.475l-1.414 1.414l-3.889-3.89l2.475-2.474L15.5 12l2.475-2.475L15.5 7.05l3.89-3.889Zm-6.389 16.784a.5.5 0 0 1-.817.387L6.89 15.999L3.001 16a1 1 0 0 1-1-1V9a1 1 0 0 1 1-1l2.584-.002l-3.776-3.776l1.414-1.414L13 12.586v7.359Zm-.113-16.206a.5.5 0 0 1 .113.316v5.702L9.283 6.04l2.901-2.372a.5.5 0 0 1 .704.07Z"/>`
	volumeOffVibrateLinePath      = `<path fill="currentColor" d="m19.39 3.161l1.414 1.414L18.33 7.05l2.475 2.475L18.33 12l2.475 2.476l-2.475 2.475l2.475 2.475l-1.414 1.414l-3.889-3.89l2.475-2.474L15.5 12l2.475-2.475L15.5 7.05l3.89-3.889Zm-6.389 16.784a.5.5 0 0 1-.817.387L6.89 15.999L3.001 16a1 1 0 0 1-1-1V9a1 1 0 0 1 1-1l2.584-.002l-3.776-3.776l1.414-1.414L13 12.586v7.359ZM7.585 9.998L4.001 10v4l3.603-.001L11 16.779v-3.365L7.585 9.998Zm5.303-6.26a.5.5 0 0 1 .113.317v5.702l-2-2V7.22l-.296.241l-1.421-1.42l2.9-2.373a.5.5 0 0 1 .704.07Z"/>`
	volumeUpFillPath              = `<path fill="currentColor" d="M2 16h3.889l5.294 4.332a.5.5 0 0 0 .817-.387V4.055a.5.5 0 0 0-.817-.387L5.89 8H2a1 1 0 0 0-1 1v6a1 1 0 0 0 1 1Zm21-4c0 3.292-1.446 6.246-3.738 8.262l-1.418-1.418A8.98 8.98 0 0 0 21 12a8.98 8.98 0 0 0-3.155-6.844l1.417-1.418A10.974 10.974 0 0 1 23 12Zm-5 0a5.99 5.99 0 0 0-2.287-4.713l-1.429 1.429A3.996 3.996 0 0 1 16 12c0 1.36-.679 2.561-1.716 3.284l1.43 1.43A5.99 5.99 0 0 0 18 12Z"/>`
	volumeUpLinePath              = `<path fill="currentColor" d="M6.603 10L10 7.22v9.56L6.603 14H3v-4h3.603ZM2 16h3.889l5.294 4.332a.5.5 0 0 0 .817-.387V4.055a.5.5 0 0 0-.817-.387L5.89 8H2a1 1 0 0 0-1 1v6a1 1 0 0 0 1 1Zm21-4c0 3.292-1.446 6.246-3.738 8.262l-1.418-1.418A8.98 8.98 0 0 0 21 12a8.98 8.98 0 0 0-3.155-6.844l1.417-1.418A10.974 10.974 0 0 1 23 12Zm-5 0a5.99 5.99 0 0 0-2.287-4.713l-1.429 1.429A3.996 3.996 0 0 1 16 12c0 1.36-.679 2.561-1.716 3.284l1.43 1.43A5.99 5.99 0 0 0 18 12Z"/>`
	volumeVibrateFillPath         = `<path fill="currentColor" d="m19.39 3.161l1.413 1.414l-2.475 2.475l2.475 2.475L18.328 12l2.475 2.476l-2.475 2.475l2.475 2.475l-1.414 1.414l-3.889-3.89l2.475-2.474L15.5 12l2.475-2.475L15.5 7.05l3.89-3.889Zm-6.503.577a.5.5 0 0 1 .113.317v15.89a.5.5 0 0 1-.817.387L6.89 15.999L3 16a1 1 0 0 1-1-1V9a1 1 0 0 1 1-1h3.889l5.294-4.332a.5.5 0 0 1 .704.07Z"/>`
	volumeVibrateLinePath         = `<path fill="currentColor" d="m19.39 3.161l1.413 1.414l-2.475 2.475l2.475 2.475L18.328 12l2.475 2.476l-2.475 2.475l2.475 2.475l-1.414 1.414l-3.889-3.89l2.475-2.474L15.5 12l2.475-2.475L15.5 7.05l3.89-3.889Zm-6.503.577a.5.5 0 0 1 .113.317v15.89a.5.5 0 0 1-.817.387L6.89 15.999L3 16a1 1 0 0 1-1-1V9a1 1 0 0 1 1-1h3.889l5.294-4.332a.5.5 0 0 1 .704.07ZM11 7.22L7.603 9.999H4V14l3.603-.001L11 16.779V7.22Z"/>`
	vuejsFillPath                 = `<path fill="currentColor" d="M1.001 3h4l7 12l7-12h4l-11 19l-11-19Zm8.667 0L12 7l2.333-4h4.035L12 14L5.633 3h4.035Z"/>`
	vuejsLinePath                 = `<path fill="currentColor" d="M3.317 3L12 18l8.684-15H23L12 22L1 3h2.316Zm4.342 0L12 10.5L16.343 3h2.316L12 14.5L5.343 3H7.66Z"/>`
	walkFillPath                  = `<path fill="currentColor" d="m7.617 8.712l3.205-2.328A1.995 1.995 0 0 1 12.065 6a2.616 2.616 0 0 1 2.427 1.82c.186.583.356.977.51 1.181A4.992 4.992 0 0 0 19 11v2a6.986 6.986 0 0 1-5.401-2.547l-.698 3.956l2.061 1.729l2.223 6.108l-1.88.684l-2.039-5.604l-3.39-2.845a2 2 0 0 1-.714-1.904l.509-2.885l-.677.492l-2.127 2.928l-1.618-1.176L7.6 8.7l.017.012ZM13.5 5.5a2 2 0 1 1 0-4a2 2 0 0 1 0 4Zm-2.97 13.181l-3.214 3.83l-1.532-1.285l2.975-3.546l.746-2.18l1.791 1.5l-.766 1.681Z"/>`
	walkLinePath                  = `<path fill="currentColor" d="m7.617 8.712l3.205-2.328A1.995 1.995 0 0 1 12.065 6a2.616 2.616 0 0 1 2.427 1.82c.186.583.356.977.51 1.181A4.992 4.992 0 0 0 19 11v2a6.986 6.986 0 0 1-5.401-2.547l-.698 3.956l2.061 1.729l2.223 6.108l-1.88.684l-2.039-5.604l-3.39-2.845a2 2 0 0 1-.714-1.904l.509-2.885l-.677.492l-2.127 2.928l-1.618-1.176L7.6 8.7l.017.012ZM13.5 5.5a2 2 0 1 1 0-4a2 2 0 0 1 0 4Zm-2.97 13.181l-3.214 3.83l-1.532-1.285l2.975-3.546l.746-2.18l1.791 1.5l-.766 1.681Z"/>`
	walletFillPath                = `<path fill="currentColor" d="M2.005 9h19a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1h-18a1 1 0 0 1-1-1V9Zm1-6h15v4h-16V4a1 1 0 0 1 1-1Zm12 11v2h3v-2h-3Z"/>`
	walletLinePath                = `<path fill="currentColor" d="M18.005 7h3a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1h-18a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h15v4Zm-14 2v10h16V9h-16Zm0-4v2h12V5h-12Zm11 8h3v2h-3v-2Z"/>`
	walletThreeFillPath           = `<path fill="currentColor" d="M22.005 6h-7a6 6 0 0 0 0 12h7v2a1 1 0 0 1-1 1h-18a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h18a1 1 0 0 1 1 1v2Zm-7 2h8v8h-8a4 4 0 1 1 0-8Zm0 3v2h3v-2h-3Z"/>`
	walletThreeLinePath           = `<path fill="currentColor" d="M22.005 7h1v10h-1v3a1 1 0 0 1-1 1h-18a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h18a1 1 0 0 1 1 1v3Zm-2 10h-6a5 5 0 0 1 0-10h6V5h-16v14h16v-2Zm1-2V9h-7a3 3 0 1 0 0 6h7Zm-7-4h3v2h-3v-2Z"/>`
	walletTwoFillPath             = `<path fill="currentColor" d="M22.005 8h-9a1 1 0 0 0-1 1v6a1 1 0 0 0 1 1h9v4a1 1 0 0 1-1 1h-18a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h18a1 1 0 0 1 1 1v4Zm-7 3h3v2h-3v-2Z"/>`
	walletTwoLinePath             = `<path fill="currentColor" d="M20.005 7V5h-16v14h16v-2h-8a1 1 0 0 1-1-1V8a1 1 0 0 1 1-1h8Zm-17-4h18a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1h-18a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Zm10 6v6h7V9h-7Zm2 2h3v2h-3v-2Z"/>`
	waterFlashFillPath            = `<path fill="currentColor" d="M5.64 6.639L12.006.275l6.364 6.364a9 9 0 1 1-12.728 0Zm7.365 4.364v-4.5l-4.5 6.5h2.5v4.5l4.5-6.5h-2.5Z"/>`
	waterFlashLinePath            = `<path fill="currentColor" d="m12.005 3.103l-4.95 4.95a7 7 0 1 0 9.9 0l-4.95-4.95Zm0-2.828l6.364 6.364a9 9 0 1 1-12.728 0L12.005.275Zm1 10.728h2.5l-4.5 6.5v-4.5h-2.5l4.5-6.5v4.5Z"/>`
	waterPercentFillPath          = `<path fill="currentColor" d="M12 .269L5.636 6.633a9 9 0 1 0 12.728 0L12 .269Zm4.243 9.902l-7.071 7.072l-1.415-1.415l7.072-7.07l1.414 1.413ZM8.11 9.111a1.5 1.5 0 1 1 2.121 2.121A1.5 1.5 0 0 1 8.11 9.111Zm7.778 7.778a1.5 1.5 0 1 1-2.121-2.121a1.5 1.5 0 0 1 2.121 2.12Z"/>`
	waterPercentLinePath          = `<path fill="currentColor" d="M7.05 8.047L12 3.097l4.95 4.95a7 7 0 1 1-9.9 0Zm11.314-1.414L12 .269L5.636 6.633a9 9 0 1 0 12.728 0Zm-2.121 3.538l-1.414-1.414l-7.072 7.071l1.415 1.415l7.07-7.072ZM8.11 11.232a1.5 1.5 0 1 0 2.121-2.121a1.5 1.5 0 0 0-2.121 2.121Zm7.778 5.657a1.5 1.5 0 1 1-2.121-2.121a1.5 1.5 0 0 1 2.121 2.12Z"/>`
	webcamFillPath                = `<path fill="currentColor" d="M11 21v-1.07A7.001 7.001 0 0 1 5 13V8a7 7 0 0 1 14 0v5a7.001 7.001 0 0 1-6 6.93V21h4v2H7v-2h4Zm1-12a1 1 0 1 1 0-2a1 1 0 0 1 0 2Zm0 2a3 3 0 1 0 0-6a3 3 0 0 0 0 6Z"/>`
	webcamLinePath                = `<path fill="currentColor" d="M11 21v-1.07A7.001 7.001 0 0 1 5 13V8a7 7 0 0 1 14 0v5a7.001 7.001 0 0 1-6 6.93V21h4v2H7v-2h4Zm1-18a5 5 0 0 0-5 5v5a5 5 0 0 0 10 0V8a5 5 0 0 0-5-5Zm0 6a1 1 0 1 0 0-2a1 1 0 0 0 0 2Zm0 2a3 3 0 1 1 0-6a3 3 0 0 1 0 6Z"/>`
	wechatChannelsFillPath        = `<path fill="currentColor" d="M19.194 3.181c1.162-.47 2.155-.019 2.672 1.277C23.26 7.944 20 21.133 17.441 21.133c-.828 0-1.657-.688-2.624-1.926a23.045 23.045 0 0 1-1.357-1.974c-.374-.6-.742-1.232-1.095-1.87L12 14.69l-.018.032a44.08 44.08 0 0 1-1.442 2.511c-.467.75-.922 1.416-1.358 1.974c-.966 1.238-1.795 1.926-2.623 1.926C4 21.133.74 7.943 2.133 4.458C2.651 3.162 3.644 2.71 4.806 3.18c.842.34 1.772 1.156 2.81 2.376A31.772 31.772 0 0 1 9.548 8.11a59.03 59.03 0 0 1 2.137 3.36l.316.538l.316-.538a61.531 61.531 0 0 1 1.696-2.71l.44-.65a31.79 31.79 0 0 1 1.931-2.553c1.039-1.22 1.968-2.035 2.81-2.376ZM4.324 4.353c-.49-.199-.743-.084-1.005.57c-.457 1.145-.265 4.028.413 7.264l.158.724l.174.733c.856 3.46 2.087 6.224 2.495 6.224c.28 0 .889-.506 1.615-1.436c.405-.518.835-1.148 1.28-1.863c.362-.581.72-1.194 1.063-1.816l.415-.767l.348-.671l-.364-.638l-.332-.566a57.76 57.76 0 0 0-2.09-3.287a30.556 30.556 0 0 0-1.852-2.45c-.916-1.077-1.716-1.778-2.318-2.021Zm16.356.57c-.261-.654-.514-.769-1.005-.57c-.602.243-1.402.944-2.317 2.02a30.544 30.544 0 0 0-1.852 2.45a55.503 55.503 0 0 0-1.687 2.615l-.574.962l-.527.915l.181.35l.245.465a43.23 43.23 0 0 0 1.401 2.438a21.81 21.81 0 0 0 1.28 1.864c.727.93 1.336 1.436 1.616 1.436c.408 0 1.639-2.763 2.494-6.224l.174-.733c.805-3.523 1.063-6.758.571-7.987Z"/>`
	wechatChannelsLinePath        = `<path fill="currentColor" d="M6.66 18.964a2.37 2.37 0 0 1-.155-.21c-.238-.353-.515-.905-.805-1.627c-.575-1.432-1.138-3.372-1.536-5.326c-.4-1.965-.616-3.869-.537-5.244c.04-.7.153-1.161.283-1.416A.692.692 0 0 1 4.002 5c.292 0 .74.162 1.356.651c.6.476 1.25 1.174 1.927 2.032c1.236 1.565 2.464 3.532 3.552 5.326c-.18.315-.37.66-.565 1.014l-.278.502A38.264 38.264 0 0 1 8.67 16.77c-.465.715-.918 1.312-1.344 1.72c-.3.289-.52.42-.665.474ZM12 11.076c-.962-1.562-2.042-3.236-3.145-4.632c-.721-.914-1.481-1.747-2.254-2.36C5.846 3.486 4.959 3 4.001 3c-.923 0-1.537.57-1.874 1.234c-.315.62-.45 1.408-.496 2.209c-.094 1.625.16 3.721.573 5.756c.416 2.046 1.01 4.106 1.64 5.674c.313.778.65 1.476 1 1.997c.175.26.378.514.614.713c.225.192.582.417 1.042.417c.895 0 1.648-.526 2.211-1.067c.589-.565 1.14-1.31 1.636-2.073c.5-.77.973-1.603 1.396-2.364l.249-.45l.024.045l.21.393c.41.76.867 1.595 1.358 2.367c.486.766 1.035 1.518 1.639 2.088C15.812 20.495 16.58 21 17.5 21c.46 0 .817-.226 1.043-.417c.235-.2.439-.453.613-.712c.35-.522.688-1.22 1-1.998c.63-1.568 1.224-3.628 1.64-5.674c.414-2.034.668-4.131.574-5.756c-.046-.8-.18-1.589-.496-2.209C21.536 3.57 20.924 3 20 3c-.958 0-1.846.485-2.6 1.084c-.773.613-1.533 1.446-2.255 2.36c-1.102 1.396-2.183 3.07-3.145 4.632Zm1.162 1.935c1.089-1.795 2.317-3.763 3.553-5.328c.677-.857 1.327-1.556 1.927-2.032c.617-.49 1.064-.65 1.356-.651a.69.69 0 0 1 .093.14c.13.256.242.718.282 1.417c.08 1.375-.137 3.279-.537 5.244c-.397 1.954-.96 3.894-1.536 5.326c-.29.722-.566 1.274-.804 1.628a2.28 2.28 0 0 1-.164.218c-.173-.052-.417-.186-.736-.488c-.426-.403-.871-.994-1.324-1.706a36.167 36.167 0 0 1-1.284-2.242l-.2-.374c-.215-.401-.425-.795-.626-1.152Z"/>`
	wechatFillPath                = `<path fill="currentColor" d="M18.575 13.711a.91.91 0 0 0 .898-.898a.895.895 0 0 0-.898-.898a.894.894 0 0 0-.898.898c0 .5.4.898.898.898Zm-4.425 0a.91.91 0 0 0 .898-.898c0-.498-.4-.898-.898-.898a.894.894 0 0 0-.898.898c0 .5.399.898.898.898Zm6.567 5.04a.347.347 0 0 0-.172.37c0 .048 0 .098.025.147c.098.417.294 1.081.294 1.106c0 .073.025.122.025.172a.22.22 0 0 1-.221.22c-.05 0-.074-.024-.123-.048l-1.449-.836a.8.8 0 0 0-.344-.098c-.073 0-.147 0-.196.024c-.688.197-1.4.295-2.161.295c-3.66 0-6.607-2.457-6.607-5.505c0-3.047 2.947-5.505 6.607-5.505c3.659 0 6.606 2.458 6.606 5.505c0 1.647-.884 3.146-2.284 4.154ZM16.674 8.099a9.112 9.112 0 0 0-.28-.005c-4.174 0-7.606 2.86-7.606 6.505c0 .554.08 1.09.228 1.6h-.089a9.966 9.966 0 0 1-2.584-.368c-.074-.025-.148-.025-.222-.025a.832.832 0 0 0-.419.123l-1.747 1.005a.35.35 0 0 1-.148.05a.273.273 0 0 1-.27-.27c0-.074.024-.123.049-.197c.024-.024.246-.834.369-1.324c0-.05.024-.123.024-.172a.556.556 0 0 0-.221-.441C2.059 13.376 1 11.585 1 9.598C1.001 5.944 4.571 3 8.951 3c3.765 0 6.93 2.169 7.723 5.098Zm-5.154.418c.573 0 1.026-.477 1.026-1.026c0-.573-.453-1.026-1.026-1.026s-1.026.453-1.026 1.026s.453 1.026 1.026 1.026Zm-5.26 0c.573 0 1.027-.477 1.027-1.026c0-.573-.454-1.026-1.027-1.026c-.572 0-1.026.453-1.026 1.026s.454 1.026 1.026 1.026Z"/>`
	wechatLinePath                = `<path fill="currentColor" d="M10.001 14.676v-.062c0-2.508 2.017-4.618 4.753-5.233c-.364-2.302-2.794-4.18-5.853-4.18c-3.32 0-5.9 2.213-5.9 4.779c0 .969.36 1.9 1.04 2.698c.032.038.083.094.152.165a3.568 3.568 0 0 1 1.002 2.238a3.613 3.613 0 0 1 2.363-.442c.166.026.302.046.405.06a7.253 7.253 0 0 0 2.038-.023Zm.457 1.951a9.204 9.204 0 0 1-2.753.055a18.997 18.997 0 0 1-.454-.066a1.613 1.613 0 0 0-1.08.211l-1.904 1.148a.806.806 0 0 1-.49.117a.791.791 0 0 1-.729-.851l.15-1.781a1.565 1.565 0 0 0-.439-1.223a5.558 5.558 0 0 1-.241-.262c-.954-1.12-1.517-2.502-1.517-3.995c0-3.745 3.537-6.78 7.9-6.78c4.06 0 7.403 2.627 7.85 6.008c3.371.154 6.05 2.515 6.05 5.406c0 1.193-.456 2.296-1.229 3.19c-.051.06-.116.13-.195.21a1.24 1.24 0 0 0-.356.977l.121 1.422a.635.635 0 0 1-.59.68a.66.66 0 0 1-.396-.094l-1.544-.917a1.322 1.322 0 0 0-.874-.169c-.147.023-.27.04-.368.053a7.72 7.72 0 0 1-.969.062c-2.694 0-4.998-1.408-5.943-3.4Zm6.977 1.31a3.326 3.326 0 0 1 1.675.174a3.25 3.25 0 0 1 .842-1.501c.05-.051.087-.09.106-.113c.489-.565.743-1.213.743-1.883c0-1.804-1.903-3.414-4.4-3.414c-2.497 0-4.4 1.61-4.4 3.414s1.903 3.414 4.4 3.414a5.6 5.6 0 0 0 .714-.045c.08-.01.188-.026.32-.046Z"/>`
	wechatPayFillPath             = `<path fill="currentColor" d="M9.271 14.669a.661.661 0 0 1-.88-.269l-.043-.095l-1.818-3.998a.473.473 0 0 1 0-.146a.327.327 0 0 1 .335-.327a.305.305 0 0 1 .196.066l2.18 1.527a.988.988 0 0 0 .546.167a.894.894 0 0 0 .342-.066l10.047-4.5a10.73 10.73 0 0 0-8.171-3.526C6.479 3.502 2 7.232 2 11.87a7.83 7.83 0 0 0 3.46 6.296a.662.662 0 0 1 .24.727l-.45 1.701a.945.945 0 0 0-.051.24a.327.327 0 0 0 .334.334a.416.416 0 0 0 .19-.058l2.18-1.265c.16-.098.343-.151.53-.152c.1 0 .198.014.292.043c1.062.3 2.16.452 3.264.45c5.525 0 10.011-3.729 10.011-8.33a7.228 7.228 0 0 0-1.098-3.883L9.351 14.625l-.08.044Z"/>`
	wechatPayLinePath             = `<path fill="currentColor" d="m19.146 8.993l-9.799 5.608l-.07.046a.647.647 0 0 1-.3.069a.655.655 0 0 1-.58-.345l-.046-.092l-1.831-3.95c-.023-.046-.023-.092-.023-.138c0-.183.139-.321.324-.321c.07 0 .139.023.209.069l2.155 1.515c.162.092.347.161.556.161a.938.938 0 0 0 .348-.069l8.274-3.648C16.935 6.273 14.635 5.2 12.001 5.2c-4.421 0-7.9 3.023-7.9 6.6c0 1.366.5 2.673 1.431 3.781c.049.058.12.137.215.235a4 4 0 0 1 1.1 3.102l-.024.298l.715-.437a4 4 0 0 1 2.706-.536c.211.033.385.059.52.077c.406.053.819.08 1.237.08c4.42 0 7.9-3.022 7.9-6.6c0-.996-.27-1.95-.755-2.807ZM6.193 21.943a1 1 0 0 1-1.527-.931l.189-2.26a2 2 0 0 0-.55-1.551a6.935 6.935 0 0 1-.303-.332C2.806 15.447 2.1 13.695 2.1 11.8c0-4.75 4.432-8.6 9.9-8.6c5.467 0 9.9 3.85 9.9 8.6s-4.433 8.6-9.9 8.6c-.51 0-1.01-.033-1.5-.098c-.152-.02-.342-.048-.568-.084a2 2 0 0 0-1.353.269l-2.387 1.456Z"/>`
	wechatTwoFillPath             = `<path fill="currentColor" d="M5.458 18.184C3.359 16.676 2 14.4 2 11.907C2 7.323 6.475 3.6 12 3.6s10 3.723 10 8.307c0 4.585-4.475 8.308-10 8.308c-1.142 0-2.253-.154-3.272-.462c-.092-.03-.216-.03-.308-.03c-.185 0-.37.061-.525.154l-2.191 1.261c-.062.03-.124.062-.186.062a.342.342 0 0 1-.339-.339c0-.092.03-.154.062-.246c.03-.03.308-1.046.463-1.662c0-.061.03-.153.03-.215c0-.246-.092-.43-.277-.554Zm3.21-7.673c.717 0 1.285-.568 1.285-1.286c0-.717-.568-1.286-1.285-1.286c-.718 0-1.285.569-1.285 1.286c0 .718.567 1.286 1.285 1.286Zm6.666 0c.718 0 1.285-.568 1.285-1.286c0-.717-.567-1.286-1.285-1.286c-.717 0-1.285.569-1.285 1.286c0 .718.568 1.286 1.285 1.286Z"/>`
	wechatTwoLinePath             = `<path fill="currentColor" d="M8.667 11.512a1.276 1.276 0 0 1-1.285-1.286c0-.718.568-1.286 1.285-1.286c.718 0 1.285.568 1.285 1.286c0 .717-.567 1.286-1.285 1.286Zm6.667 0a1.276 1.276 0 0 1-1.285-1.286c0-.718.568-1.286 1.285-1.286s1.285.568 1.285 1.286c0 .717-.568 1.286-1.285 1.286Zm-8.511 7.704l.715-.437a4 4 0 0 1 2.706-.536c.211.033.385.059.52.077c.406.053.819.08 1.237.08c4.42 0 7.9-3.022 7.9-6.6c0-3.577-3.48-6.6-7.9-6.6c-4.421 0-7.9 3.023-7.9 6.6c0 1.366.5 2.673 1.431 3.781c.049.058.12.137.215.235a4 4 0 0 1 1.1 3.102l-.024.298Zm-.63 2.726a1 1 0 0 1-1.527-.93l.189-2.26a2 2 0 0 0-.55-1.551a6.935 6.935 0 0 1-.303-.332C2.806 15.447 2.1 13.695 2.1 11.8c0-4.75 4.432-8.6 9.9-8.6c5.467 0 9.9 3.85 9.9 8.6s-4.433 8.6-9.9 8.6c-.51 0-1.01-.033-1.5-.098c-.152-.02-.342-.048-.568-.084a2 2 0 0 0-1.353.269l-2.387 1.456Z"/>`
	weiboFillPath                 = `<path fill="currentColor" d="M4.278 8.592c2.773-2.77 6.004-4.033 7.219-2.816c.537.537.588 1.464.244 2.572c-.178.557.524.25.524.25c2.241-.938 4.197-.994 4.91.027c.38.542.343 1.306-.008 2.19c-.163.407.048.47.36.563c1.262.392 2.668 1.336 2.668 3.004c0 2.763-3.98 6.239-9.964 6.239c-4.565 0-9.23-2.213-9.23-5.852c0-1.902 1.204-4.102 3.277-6.177Zm12.133 5.742c-.237-2.391-3.382-4.039-7.023-3.677c-3.64.359-6.403 2.59-6.167 4.98c.237 2.394 3.382 4.039 7.023 3.68c3.641-.362 6.401-2.592 6.167-4.983Zm-10.249.104c.754-1.528 2.712-2.39 4.446-1.94c1.792.463 2.707 2.154 1.976 3.799c-.744 1.683-2.883 2.58-4.695 1.994c-1.752-.566-2.493-2.295-1.727-3.853Zm2.715.578c-.563-.237-1.291.008-1.64.553c-.354.547-.189 1.201.371 1.456c.568.257 1.325.013 1.676-.55c.346-.568.163-1.217-.408-1.459Zm1.387-.578c-.216-.084-.486.018-.613.232c-.123.214-.054.458.163.547c.219.092.501-.012.628-.231c.123-.22.044-.466-.178-.548Zm5.694-11.514A5.831 5.831 0 0 1 21.5 4.72a5.836 5.836 0 0 1 1.22 5.704a.838.838 0 0 1-1.06.54a.844.844 0 0 1-.542-1.062a4.142 4.142 0 0 0-4.808-5.327a.845.845 0 0 1-.353-1.65Zm.626 2.926a2.836 2.836 0 0 1 3.29 3.648a.725.725 0 1 1-1.378-.45a1.38 1.38 0 0 0-.287-1.357a1.395 1.395 0 0 0-1.322-.426a.723.723 0 1 1-.303-1.415Z"/>`
	weiboLinePath                 = `<path fill="currentColor" d="M20.195 14.197c0 3.362-4.53 6.424-9.926 6.424c-4.95 0-9.268-2.432-9.268-6.087c0-1.947 1.18-4.087 3.24-6.088C7.072 5.7 10.47 4.413 12.098 5.998c.498.482.723 1.122.719 1.858c1.975-.576 3.65-.404 4.483.752c.449.623.532 1.38.326 2.207c1.511.61 2.568 1.77 2.568 3.382Zm-4.44-2.07c-.386-.41-.4-.92-.198-1.41c.208-.508.213-.812.12-.94c-.264-.368-1.533-.363-3.194.311a2.101 2.101 0 0 1-.509.14c-.344.046-.671.001-.983-.265c-.419-.359-.473-.855-.322-1.316c.214-.67.18-1.076.037-1.215c-.186-.18-.777-.191-1.659.143C7.978 7.98 6.75 8.799 5.633 9.88c-1.707 1.659-2.632 3.337-2.632 4.653c0 2.242 3.276 4.087 7.268 4.087c4.42 0 7.926-2.37 7.926-4.424c0-.738-.637-1.338-1.673-1.652c-.394-.113-.536-.171-.767-.417Zm7.054-1.617a1 1 0 1 1-1.936-.502a4 4 0 0 0-4.693-4.924a1 1 0 0 1-.407-1.958a6 6 0 0 1 7.036 7.384Z"/>`
	whatsappFillPath              = `<path fill="currentColor" d="M12.001 2c5.523 0 10 4.477 10 10s-4.477 10-10 10a9.954 9.954 0 0 1-5.03-1.355L2.005 22l1.352-4.968A9.953 9.953 0 0 1 2.001 12c0-5.523 4.477-10 10-10ZM8.593 7.3l-.2.008a.961.961 0 0 0-.372.1a1.293 1.293 0 0 0-.294.228c-.12.113-.188.211-.261.306A2.73 2.73 0 0 0 6.9 9.62c.002.49.13.967.33 1.413c.409.902 1.082 1.857 1.97 2.742c.214.213.424.427.65.626a9.448 9.448 0 0 0 3.84 2.046l.568.087c.185.01.37-.004.556-.013a1.99 1.99 0 0 0 .833-.231a4.83 4.83 0 0 0 .383-.22s.043-.028.125-.09c.135-.1.218-.171.33-.288c.083-.086.155-.187.21-.302c.078-.163.156-.474.188-.733c.024-.198.017-.306.014-.373c-.004-.107-.093-.218-.19-.265l-.582-.261s-.87-.379-1.402-.621a.497.497 0 0 0-.176-.041a.482.482 0 0 0-.378.127c-.005-.002-.072.055-.795.931a.35.35 0 0 1-.368.13a1.43 1.43 0 0 1-.191-.066c-.124-.052-.167-.072-.252-.108a6.025 6.025 0 0 1-1.575-1.003c-.126-.11-.243-.23-.363-.346a6.297 6.297 0 0 1-1.02-1.268l-.059-.095a.923.923 0 0 1-.102-.205c-.038-.147.061-.265.061-.265s.243-.266.356-.41c.11-.14.203-.276.263-.373c.118-.19.155-.385.093-.536c-.28-.684-.57-1.365-.868-2.041c-.059-.134-.234-.23-.393-.249c-.054-.006-.108-.012-.162-.016a3.385 3.385 0 0 0-.403.004l.201-.008Z"/>`
	whatsappLinePath              = `<path fill="currentColor" d="m7.254 18.494l.724.423A7.953 7.953 0 0 0 12.001 20a8 8 0 1 0-8-8a7.95 7.95 0 0 0 1.084 4.024l.422.724l-.653 2.401l2.4-.655ZM2.005 22l1.352-4.968A9.953 9.953 0 0 1 2.001 12c0-5.523 4.477-10 10-10s10 4.477 10 10s-4.477 10-10 10a9.954 9.954 0 0 1-5.03-1.355L2.005 22ZM8.392 7.308c.134-.01.269-.01.403-.004c.054.004.108.01.162.016c.159.018.334.115.393.249c.298.676.588 1.357.868 2.04c.062.152.025.347-.093.537c-.06.097-.154.233-.263.372c-.113.145-.356.411-.356.411s-.099.118-.061.265c.014.056.06.137.102.205l.059.095c.256.427.6.86 1.02 1.268c.12.116.237.235.363.346c.468.413.998.75 1.57 1l.005.002c.085.037.128.057.252.11c.062.026.126.048.191.066a.35.35 0 0 0 .367-.13c.724-.877.79-.934.796-.934v.002a.482.482 0 0 1 .378-.127c.06.004.121.015.177.04c.531.243 1.4.622 1.4.622l.582.261c.098.047.187.158.19.265c.004.067.01.175-.013.373c-.032.259-.11.57-.188.733a1.158 1.158 0 0 1-.21.302a2.381 2.381 0 0 1-.33.288c-.082.062-.125.09-.125.09a5.063 5.063 0 0 1-.383.22a1.99 1.99 0 0 1-.833.23c-.185.01-.37.024-.556.014c-.008 0-.568-.087-.568-.087a9.448 9.448 0 0 1-3.84-2.046c-.226-.199-.436-.413-.65-.626c-.888-.885-1.561-1.84-1.97-2.742a3.472 3.472 0 0 1-.33-1.413a2.73 2.73 0 0 1 .565-1.68c.073-.094.142-.192.261-.305c.126-.12.207-.184.294-.228a.961.961 0 0 1 .371-.1Z"/>`
	wheelchairFillPath            = `<path fill="currentColor" d="M7.998 10.341v2.194A4 4 0 1 0 13.463 18h2.193a6 6 0 1 1-7.658-7.66Zm4 6.659a3 3 0 0 1-3-3v-4a3 3 0 1 1 6 0v5h1.434a2 2 0 0 1 1.626.836l.089.135l2.709 4.514l-1.715 1.03L16.43 17h-4.433Zm0-15a2.5 2.5 0 1 1 0 5a2.5 2.5 0 0 1 0-5Z"/>`
	wheelchairLinePath            = `<path fill="currentColor" d="M7.998 10.341v2.194A4 4 0 1 0 13.463 18h2.193a6 6 0 1 1-7.658-7.66Zm4 6.659a3 3 0 0 1-3-3v-4c0-1.044.534-1.964 1.343-2.501a3 3 0 1 1 3.314.003A2.988 2.988 0 0 1 14.998 10v4.999l1.434.001a2 2 0 0 1 1.626.836l.089.135l2.709 4.514l-1.715 1.03L16.43 17l-1.433-.001l-3 .001Zm0-8a1 1 0 0 0-1 1v4a1 1 0 0 0 1 1h.999l.001-5a1 1 0 0 0-1-1Zm0-5a1 1 0 1 0 0 2a1 1 0 0 0 0-2Z"/>`
	wifiFillPath                  = `<path fill="currentColor" d="M.69 6.997A17.925 17.925 0 0 1 12 3c4.285 0 8.22 1.497 11.31 3.997L21.425 9.33A14.938 14.938 0 0 0 12 6C8.43 6 5.15 7.248 2.575 9.33L.689 6.997Zm3.141 3.89A12.946 12.946 0 0 1 12 8a12.95 12.95 0 0 1 8.169 2.886l-1.886 2.334A9.958 9.958 0 0 0 12 11c-2.38 0-4.567.832-6.284 2.22l-1.885-2.334Zm3.142 3.89A7.966 7.966 0 0 1 12 13c1.904 0 3.653.665 5.027 1.776l-1.885 2.334A4.979 4.979 0 0 0 12 16c-1.19 0-2.283.416-3.142 1.11l-1.885-2.334Zm3.142 3.89A2.988 2.988 0 0 1 12 18c.714 0 1.37.25 1.885.666L12 21l-1.885-2.334Z"/>`
	wifiLinePath                  = `<path fill="currentColor" d="M.69 6.997A17.925 17.925 0 0 1 12 3c4.285 0 8.22 1.497 11.31 3.997l-1.256 1.556A15.933 15.933 0 0 0 12 5C8.19 5 4.694 6.33 1.946 8.553L.69 6.997Zm3.141 3.89A12.946 12.946 0 0 1 12 8a12.95 12.95 0 0 1 8.169 2.886l-1.257 1.556A10.954 10.954 0 0 0 12 10c-2.618 0-5.023.915-6.912 2.442l-1.257-1.556Zm3.142 3.89A7.966 7.966 0 0 1 12 13c1.904 0 3.653.665 5.027 1.776l-1.257 1.556A5.975 5.975 0 0 0 12 15c-1.428 0-2.74.499-3.77 1.332l-1.257-1.556Zm3.142 3.89A2.988 2.988 0 0 1 12 18c.714 0 1.37.25 1.885.666L12 21l-1.885-2.334Z"/>`
	wifiOffFillPath               = `<path fill="currentColor" d="M12 18c.714 0 1.37.25 1.886.667L12 21l-1.886-2.333A2.988 2.988 0 0 1 12 18ZM2.808 1.394L20.485 19.07l-1.414 1.414l-3.682-3.68l-.246.306A4.98 4.98 0 0 0 12 16a4.98 4.98 0 0 0-3.14 1.11l-1.885-2.334a7.963 7.963 0 0 1 4.622-1.766l-1.773-1.772a9.962 9.962 0 0 0-4.106 1.982L3.83 10.887A12.985 12.985 0 0 1 7.416 8.83L5.885 7.3a15 15 0 0 0-3.31 2.032L.689 6.997a18.018 18.018 0 0 1 2.952-1.942L1.393 2.808l1.415-1.414ZM16.084 11.87l-3.867-3.867L12 8c3.095 0 5.937 1.082 8.17 2.887l-1.886 2.334a10.005 10.005 0 0 0-2.2-1.351ZM12 3c4.285 0 8.22 1.497 11.31 3.997l-1.885 2.334A14.937 14.937 0 0 0 12 6c-.572 0-1.136.031-1.69.093L7.724 3.511c1.37-.334 2.802-.51 4.275-.51Z"/>`
	wifiOffLinePath               = `<path fill="currentColor" d="M12 18c.714 0 1.37.25 1.886.667L12 21l-1.886-2.333A2.988 2.988 0 0 1 12 18ZM2.808 1.394L20.485 19.07l-1.414 1.414l-5.18-5.18a5.995 5.995 0 0 0-1.89-.305c-1.43 0-2.74.5-3.771 1.332l-1.256-1.556a7.963 7.963 0 0 1 4.622-1.766L9 10.414a10.967 10.967 0 0 0-3.912 2.029L3.83 10.887A12.985 12.985 0 0 1 7.416 8.83L5.132 6.545a16.01 16.01 0 0 0-3.185 2.007L.689 6.997a18.018 18.018 0 0 1 2.952-1.942L1.393 2.808l1.415-1.414ZM14.5 10.286l-2.284-2.283L12 8c3.095 0 5.937 1.082 8.17 2.887l-1.258 1.556a10.96 10.96 0 0 0-4.412-2.157ZM12 3c4.285 0 8.22 1.497 11.31 3.997l-1.257 1.555A15.933 15.933 0 0 0 12 5c-.878 0-1.74.07-2.58.207L7.726 3.511c1.37-.334 2.802-.51 4.275-.51Z"/>`
	windowFillPath                = `<path fill="currentColor" d="M3 3h18a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Zm17 7H4v9h16v-9ZM5 6v2h2V6H5Zm4 0v2h2V6H9Z"/>`
	windowLinePath                = `<path fill="currentColor" d="M21 3a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h18Zm-1 8H4v8h16v-8Zm0-6H4v4h16V5Zm-9 1v2H9V6h2ZM7 6v2H5V6h2Z"/>`
	windowTwoFillPath             = `<path fill="currentColor" d="M3 3h18a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1Zm17 7H4v9h16v-9Zm-5-4v2h4V6h-4Z"/>`
	windowTwoLinePath             = `<path fill="currentColor" d="M21 3a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h18Zm-1 8H4v8h16v-8Zm0-6H4v4h16V5Zm-1 1v2h-4V6h4Z"/>`
	windowsFillPath               = `<path fill="currentColor" d="m3.001 5.479l7.377-1.016v7.127H3V5.48Zm0 13.042l7.377 1.017v-7.04H3v6.023Zm8.188 1.125L21.001 21v-8.502h-9.812v7.148Zm0-15.292v7.236h9.812V3l-9.812 1.354Z"/>`
	windowsLinePath               = `<path fill="currentColor" d="M21.001 2.5v19l-18-2v-15l18-2Zm-2 10.499l-7 .001v5.487l7 .779v-6.267Zm-14 4.71l5 .556V13l-5-.001v4.71Zm14-6.71V4.735l-7 .777V11l7-.001Zm-9-5.265l-5 .556V11l5 .001V5.734Z"/>`
	windyFillPath                 = `<path fill="currentColor" d="M10.5 17H4v-2h6.5a3.5 3.5 0 1 1-3.278 4.73l1.873-.703A1.5 1.5 0 1 0 10.5 17ZM5 11h13.5a3.5 3.5 0 1 1-3.278 4.73l1.873-.703A1.5 1.5 0 1 0 18.5 13H5a3 3 0 1 1 0-6h8.5a1.5 1.5 0 1 0-1.405-2.027l-1.873-.702A3.501 3.501 0 0 1 17 5.5A3.5 3.5 0 0 1 13.5 9H5a1 1 0 0 0 0 2Z"/>`
	windyLinePath                 = `<path fill="currentColor" d="M10.5 17H4v-2h6.5a3.5 3.5 0 1 1-3.278 4.73l1.873-.703A1.5 1.5 0 1 0 10.5 17ZM5 11h13.5a3.5 3.5 0 1 1-3.278 4.73l1.873-.703A1.5 1.5 0 1 0 18.5 13H5a3 3 0 1 1 0-6h8.5a1.5 1.5 0 1 0-1.405-2.027l-1.873-.702A3.501 3.501 0 0 1 17 5.5A3.5 3.5 0 0 1 13.5 9H5a1 1 0 0 0 0 2Z"/>`
	wirelessChargingFillPath      = `<path fill="currentColor" d="m3.929 4.929l1.414 1.414A7.975 7.975 0 0 0 3 12c0 2.209.895 4.209 2.343 5.657L3.93 19.07A9.969 9.969 0 0 1 1 12a9.969 9.969 0 0 1 2.929-7.071Zm16.142 0A9.968 9.968 0 0 1 23 11.999a9.969 9.969 0 0 1-2.929 7.072l-1.414-1.414A7.975 7.975 0 0 0 21 12a7.975 7.975 0 0 0-2.342-5.656l1.413-1.415ZM13 4.999v6h3l-5 8v-6H8l5-8ZM6.757 7.758l1.415 1.414A3.988 3.988 0 0 0 7 12c0 1.104.448 2.104 1.172 2.828l-1.415 1.415A5.981 5.981 0 0 1 5 12c0-1.657.672-3.157 1.757-4.243Zm10.487.001A5.981 5.981 0 0 1 19 12a5.981 5.981 0 0 1-1.757 4.242l-1.415-1.414A3.988 3.988 0 0 0 17 12a3.987 3.987 0 0 0-1.17-2.828l1.414-1.414Z"/>`
	wirelessChargingLinePath      = `<path fill="currentColor" d="m3.929 4.929l1.414 1.414A7.975 7.975 0 0 0 3 12c0 2.209.895 4.209 2.343 5.657L3.93 19.07A9.969 9.969 0 0 1 1 12a9.969 9.969 0 0 1 2.929-7.071Zm16.142 0A9.968 9.968 0 0 1 23 11.999a9.969 9.969 0 0 1-2.929 7.072l-1.414-1.414A7.975 7.975 0 0 0 21 12a7.975 7.975 0 0 0-2.342-5.656l1.413-1.415ZM13 4.999v6h3l-5 8v-6H8l5-8ZM6.757 7.758l1.415 1.414A3.988 3.988 0 0 0 7 12c0 1.104.448 2.104 1.172 2.828l-1.415 1.415A5.981 5.981 0 0 1 5 12c0-1.657.672-3.157 1.757-4.243Zm10.487.001A5.981 5.981 0 0 1 19 12a5.981 5.981 0 0 1-1.757 4.242l-1.415-1.414A3.988 3.988 0 0 0 17 12a3.987 3.987 0 0 0-1.17-2.828l1.414-1.414Z"/>`
	womenFillPath                 = `<path fill="currentColor" d="M11 15.934A7.501 7.501 0 0 1 12 1a7.5 7.5 0 0 1 1 14.934V18h5v2h-5v4h-2v-4H6v-2h5v-2.066Z"/>`
	womenLinePath                 = `<path fill="currentColor" d="M11 15.934A7.501 7.501 0 0 1 12 1a7.5 7.5 0 0 1 1 14.934V18h5v2h-5v4h-2v-4H6v-2h5v-2.066ZM12 14a5.5 5.5 0 1 0 0-11a5.5 5.5 0 0 0 0 11Z"/>`
	wordpressFillPath             = `<path fill="currentColor" d="M3.323 12c0 3.438 2 6.4 4.892 7.808L4.077 8.469A8.646 8.646 0 0 0 3.323 12ZM12 20.677a8.77 8.77 0 0 0 2.885-.492l-.062-.116l-2.67-7.307l-2.6 7.561c.77.23 1.593.354 2.447.354ZM13.192 7.93l3.139 9.33l.869-2.892c.37-1.2.654-2.061.654-2.807c0-1.077-.385-1.816-.708-2.385c-.446-.723-.854-1.33-.854-2.039c0-.8.6-1.538 1.462-1.538h.107A8.646 8.646 0 0 0 12 3.323a8.67 8.67 0 0 0-7.246 3.908l.554.015c.907 0 2.307-.115 2.307-.115c.477-.023.531.661.062.715c0 0-.47.062-1 .085l3.17 9.4l1.9-5.692l-1.355-3.708a15.49 15.49 0 0 1-.907-.077c-.47-.03-.416-.746.053-.723c0 0 1.431.115 2.285.115c.908 0 2.308-.115 2.308-.115c.469-.023.53.661.061.715c0 0-.469.054-1 .085Zm3.17 11.569a8.676 8.676 0 0 0 3.253-11.662a8.192 8.192 0 0 1-.6 4L16.361 19.5ZM12 22a10 10 0 1 1 0-20a10 10 0 0 1 0 20Z"/>`
	wordpressLinePath             = `<path fill="currentColor" d="M22 12c0 5.523-4.477 10-10 10S2 17.523 2 12S6.477 2 12 2s10 4.477 10 10Zm-7.394 7.566l-2.155-5.985l-2.181 6.232a8.03 8.03 0 0 0 4.336-.247Zm2.468-1.38A7.984 7.984 0 0 0 20 12a7.981 7.981 0 0 0-.545-2.908c-.25 1.454-.692 3.35-.976 4.315l-1.405 4.778Zm-.201-12.531A7.965 7.965 0 0 0 12 4a7.985 7.985 0 0 0-6.245 3h1.39v2h-.75l2.755 7.958l2.227-6.362L10.802 9H8.645V7h5v2h-.717l2.621 7.282l1.012-3.44c.523-1.832.092-2.631-.339-3.429c-.289-.534-.577-1.068-.577-1.913a2 2 0 0 1 1.228-1.845ZM4.425 9.42A7.99 7.99 0 0 0 4 12a7.993 7.993 0 0 0 3.64 6.708L4.425 9.421Z"/>`
	wubiInputPath                 = `<path fill="currentColor" d="M3 21v-2h3.662l1.234-7H5v-2h3.249l.881-5H4V3h16v2h-8.839l-.882 5H18v9h3v2H3Zm13-9H9.927l-1.235 7H16v-7Z"/>`
	xboxFillPath                  = `<path fill="currentColor" d="M5.42 19.527A9.956 9.956 0 0 0 12 22a9.967 9.967 0 0 0 6.585-2.473c1.564-1.593-3.597-7.257-6.585-9.514c-2.985 2.257-8.15 7.921-6.582 9.514Zm9.3-12.005c2.083 2.468 6.236 8.595 5.063 10.76A9.952 9.952 0 0 0 22 12.003a9.958 9.958 0 0 0-2.975-7.113s-.023-.018-.068-.035a.686.686 0 0 0-.234-.038c-.494 0-1.655.362-4.005 2.705ZM5.045 4.856c-.048.017-.068.034-.072.035A9.963 9.963 0 0 0 2 12.004c0 2.379.832 4.561 2.217 6.278C3.051 16.11 7.201 9.988 9.285 7.523C6.935 5.178 5.772 4.818 5.28 4.818a.604.604 0 0 0-.234.039v-.002ZM12 4.96S9.546 3.524 7.63 3.456c-.753-.027-1.213.246-1.268.282C8.15 2.538 10.05 2 11.988 2H12c1.945 0 3.838.538 5.638 1.737c-.056-.038-.512-.31-1.266-.282c-1.917.068-4.372 1.5-4.372 1.5v.004Z"/>`
	xboxLinePath                  = `<path fill="currentColor" d="M4.798 15.485c1.123-2.52 3.2-5.44 4.487-6.962c-1.248-1.246-2.162-1.931-2.818-2.3A7.977 7.977 0 0 0 4.001 12c0 1.25.286 2.432.797 3.485Zm4.051-10.84c1.6.406 3.152 1.314 3.152 1.314v-.005s1.552-.904 3.151-1.31A7.974 7.974 0 0 0 12.001 4c-1.12 0-2.185.23-3.152.645Zm8.686 1.578c-.655.37-1.568 1.055-2.816 2.3c1.287 1.523 3.362 4.441 4.486 6.961A7.968 7.968 0 0 0 20 12c0-2.27-.946-4.32-2.466-5.777Zm.408 11.134c-1.403-2.237-4.09-4.945-5.942-6.344c-1.85 1.4-4.539 4.108-5.941 6.345A7.98 7.98 0 0 0 12 20a7.98 7.98 0 0 0 5.942-2.643ZM12.001 22c-5.523 0-10-4.477-10-10s4.477-10 10-10s10 4.477 10 10s-4.477 10-10 10Z"/>`
	xingFillPath                  = `<path fill="currentColor" d="M20.462 3.23c.154 0 .308.077.384.154a.49.49 0 0 1 0 .462l-6.076 10.77l3.846 7.076a.49.49 0 0 1 0 .462a.587.587 0 0 1-.385.153h-2.77c-.384 0-.614-.307-.768-.538l-3.923-7.154C11 14.307 16.924 3.77 16.924 3.77c.153-.308.384-.539.769-.539h2.769ZM8.923 7c.385 0 .616.307.77.538l1.923 3.308c-.154.154-3 5.23-3 5.23c-.154.231-.385.54-.77.54H5.155a.587.587 0 0 1-.384-.155a.49.49 0 0 1 0-.461l2.846-5.154l-1.846-3.23a.49.49 0 0 1 0-.462A.588.588 0 0 1 6.154 7h2.77Z"/>`
	xingLinePath                  = `<path fill="currentColor" d="M20.444 3.5L13.81 14.99L17.857 22h-2.31l-4.045-7.009H11.5L18.134 3.5h2.31ZM8.31 7l2.422 4.196l-.002.001L7.67 16.5H5.36l3.061-5.305L6.002 7H8.31Z"/>`
	youtubeFillPath               = `<path fill="currentColor" d="M12.244 4c.534.003 1.87.016 3.29.073l.504.022c1.429.067 2.857.183 3.566.38c.945.266 1.687 1.04 1.938 2.022c.4 1.56.45 4.602.456 5.339l.001.152v.174c-.007.737-.057 3.78-.457 5.339c-.254.985-.997 1.76-1.938 2.022c-.709.197-2.137.313-3.566.38l-.504.023c-1.42.056-2.756.07-3.29.072l-.235.001h-.255c-1.13-.007-5.856-.058-7.36-.476c-.944-.266-1.687-1.04-1.938-2.022c-.4-1.56-.45-4.602-.456-5.339v-.326c.006-.737.056-3.78.456-5.339c.254-.985.997-1.76 1.939-2.021c1.503-.419 6.23-.47 7.36-.476h.489ZM9.999 8.5v7l6-3.5l-6-3.5Z"/>`
	youtubeLinePath               = `<path fill="currentColor" d="M19.607 6.995c-.076-.298-.292-.523-.539-.592C18.63 6.28 16.501 6 12.001 6s-6.628.28-7.069.403c-.244.068-.46.293-.537.592c-.109.424-.394 2.2-.394 5.005c0 2.804.285 4.58.394 5.006c.076.297.292.522.538.59C5.373 17.72 7.5 18 12 18s6.629-.28 7.069-.403c.244-.068.46-.293.537-.592c.11-.424.394-2.205.394-5.005s-.285-4.58-.394-5.005Zm1.937-.497c.457 1.782.457 5.502.457 5.502s0 3.72-.457 5.502c-.254.985-.997 1.76-1.938 2.022C17.897 20 12 20 12 20s-5.893 0-7.605-.476c-.945-.266-1.687-1.04-1.938-2.022C2 15.72 2 12 2 12s0-3.72.457-5.502c.254-.985.997-1.76 1.938-2.022C6.108 4 12.001 4 12.001 4s5.896 0 7.605.476c.944.266 1.687 1.04 1.938 2.022ZM10.001 15.5v-7l6 3.5l-6 3.5Z"/>`
	yuqueFillPath                 = `<path fill="currentColor" d="M17.28 2.955c2.97.203 3.756 2.342 3.84 2.597l1.297.096c.13 0 .169.18.054.236c-1.323.716-1.727 2.17-1.49 3.118c.09.358.254.69.412 1.02c.307.642.651 1.418.707 2.981c.117 3.24-2.51 6.175-5.789 6.593c1.17-1.187 1.815-2.444 2.12-3.375c.606-1.846.508-3.316.055-4.44a4.458 4.458 0 0 0-1.782-2.141c-1.683-1.02-3.22-1.09-4.444-.762c.465-.594.876-1.201 1.2-1.864c.584-1.65-.102-2.848-.704-3.519c-.192-.246-.061-.655.305-.655c1.41 0 2.813.02 4.22.115ZM3.32 19.107c1.924-2.202 4.712-5.394 7.162-8.15c.559-.63 2.769-2.338 5.748-.533c.878.532 2.43 2.165 1.332 5.51c-.803 2.446-4.408 7.796-15.76 5.844c-.227-.039-.511-.354-.218-.688c.415-.472 1.015-1.158 1.736-1.983Z"/>`
	yuqueLinePath                 = `<path fill="currentColor" d="M11.505 3.043a.917.917 0 0 1 .795-.459c1.547 0 3.09.049 4.637.153c2.51.172 3.7 1.591 4.18 2.431c.596.092 1.388.088 1.571.806c.14.552-.217.834-.554 1.149c-.483.45-1.133 1.176-.954 1.887c.055.222.159.438.316.765l.002.004c.318.667.684 1.51.742 3.115c.156 4.34-3.596 6.896-7.252 7.079c-2.41 1.816-6.345 3.025-12.557 1.957a1.328 1.328 0 0 1-.945-.708a1.245 1.245 0 0 1-.12-.736a1.35 1.35 0 0 1 .33-.699c3.228-3.675 6.635-7.246 9.654-11.098c.526-.671.96-1.28 1.15-1.648c.309-.92-.009-1.444-.625-2.463c-.282-.467-.69-.978-.37-1.535Zm1.989 5.844c.874.005 1.85.248 2.885.875c2.124 1.287 2.334 3.996 1.625 6.157a7.62 7.62 0 0 1-.836 1.726c1.936-.796 3.319-2.483 3.24-4.685c-.047-1.28-.317-1.872-.564-2.39l-.03-.06c-.132-.277-.31-.646-.412-1.054c-.271-1.08.175-2.039.614-2.677a.917.917 0 0 1-.387-.493v-.002a2.578 2.578 0 0 0-.58-.816c-.407-.394-1.094-.824-2.236-.902a65.316 65.316 0 0 0-2.89-.13c.452.879.758 1.941.289 3.268c-.151.425-.46.819-.718 1.183Zm-.832 1.944c-.719.203-1.214.63-1.378.815c-2.717 3.057-5.881 6.69-7.576 8.627c5.45.748 8.601-.49 10.378-1.921c1.295-1.044 1.925-2.24 2.176-3.005c.434-1.323.537-3.186-.834-4.017c-1.153-.7-2.088-.69-2.766-.499Z"/>`
	zcoolFillPath                 = `<path fill="currentColor" d="M9.903 21.839a7.903 7.903 0 0 1-7.902-7.903c0-3.646 2.467-6.876 5.824-7.627C11.746 5.43 13.529 4.742 14.902 2c.998 1.935.323 3.71 0 4.677c4.698-1.129 6.371-3.28 6.774-3.548c0 3.952-1.231 6.452-2.419 8.065c1.476-.056 2.009-.484 2.744-.587c-.325 1.448-1.501 3.49-4.331 4.795a7.905 7.905 0 0 1-7.767 6.437Zm3.71-6.452c0 .323-.053.484-.403.484l-3.15.002l2.96-3.248c.86-.86.86-1.29.86-2.388c0-.334-.048-.717.048-1.05c.047-.144-.048-.192-.191-.144c-.335.095-.908.095-1.863.095H7.576c-.239 0-.335-.143-.239-.334c0-.048 0-.191-.096-.191c-.62.286-.764 1.576-.716 2.388c0 .43.239.669.573.669h3.391l-3.486 3.725c-.24.287-.478.669-.478 1.194v1.051c0 .478.287.764.812.86h5.988c.555 0 .933-.233.933-.855v-1.129c0-.208 0-.968-.645-1.129Z"/>`
	zcoolLinePath                 = `<path fill="currentColor" d="M8.262 8.26C5.838 8.803 4 11.208 4 13.935a5.903 5.903 0 0 0 11.703 1.098a2 2 0 0 1 1.129-1.447a7.75 7.75 0 0 0 1.284-.744c-.863-.603-1.186-1.862-.47-2.834a9.8 9.8 0 0 0 1.391-2.651c-1.084.51-2.3.936-3.668 1.265c-1.261.303-2.392-.638-2.466-1.814c-1.18.572-2.67 1.01-4.642 1.452Zm10.995 2.934c1.166 0 1.916-.424 2.744-.587c-.325 1.448-1.501 3.49-4.331 4.795a7.903 7.903 0 0 1-15.669-1.466c0-3.646 2.467-6.876 5.824-7.627C11.746 5.43 13.529 4.742 14.902 2c.689 1.333.689 2.892 0 4.677c2.816-.67 5.074-1.852 6.774-3.548c0 4.802-1.822 7.186-2.419 8.065Zm-5.84 3.932c.584.146.584.832.584 1.02v1.021c0 .562-.342.773-.844.773H7.743c-.475-.086-.734-.345-.734-.777v-.95c0-.475.216-.82.431-1.08l3.153-3.369H7.527c-.302 0-.518-.216-.518-.604c-.044-.735.086-1.9.647-2.16c.087 0 .087.13.087.173c-.087.173 0 .302.216.302h3.886c.864 0 1.382 0 1.685-.086c.13-.043.216 0 .173.13c-.087.302-.044.647-.044.95c0 .993 0 1.382-.777 2.159l-2.678 2.937l2.85-.002c.316 0 .364-.146.364-.437Z"/>`
	zhihuFillPath                 = `<path fill="currentColor" d="M13.373 18.897h1.453l.478 1.637l2.604-1.637h3.071V5.395h-7.605v13.502ZM14.92 6.861h4.515v10.57h-1.732l-1.73 1.088l-.315-1.085l-.738-.002V6.86Zm-2.83 4.712H8.846a70.3 70.3 0 0 0 .136-4.56h3.172s.122-1.4-.532-1.383H6.135c.217-.815.488-1.655.814-2.525c0 0-1.493 0-2.001 1.34c-.21.551-.82 2.677-1.903 4.848c.365-.04 1.573-.074 2.284-1.379c.13-.365.156-.413.318-.902h1.79c0 .652-.074 4.152-.105 4.559h-3.24c-.728 0-.964 1.466-.964 1.466h4.065c-.272 3.094-1.737 5.702-4.392 7.764c1.27.363 2.536-.058 3.162-.615c0 0 1.425-1.297 2.206-4.298l3.345 4.03s.491-1.668-.076-2.481c-.47-.554-1.74-2.052-2.281-2.595l-.907.72c.27-.867.433-1.71.488-2.524h3.822s-.005-1.466-.47-1.466v.001Z"/>`
	zhihuLinePath                 = `<path fill="currentColor" d="m12.345 17.963l-1.688 1.074l-2.132-3.35c-.44 1.402-1.171 2.665-2.138 3.825c-.402.483-.82.918-1.301 1.376c-.155.146-.775.716-.878.82l-1.414-1.415c.139-.139.787-.735.914-.856c.43-.408.796-.79 1.143-1.205C6.117 16.712 6.88 15.02 6.988 13H3v-2h4V7h-.868c-.689 1.266-1.558 2.222-2.618 2.858L2.486 8.143c1.396-.838 2.426-2.603 3.039-5.36l1.952.434c-.14.633-.303 1.228-.489 1.783h4.513v2H9v4h2.5v2H9.186l3.159 4.963Zm3.838-.07L17.3 17h1.702V7h-4v10h.736l.446.893ZM13.001 5h8v14h-3l-2.5 2l-1-2H13V5Z"/>`
	zoomInFillPath                = `<path fill="currentColor" d="m18.031 16.617l4.283 4.282l-1.415 1.415l-4.282-4.283A8.96 8.96 0 0 1 11 20c-4.968 0-9-4.032-9-9s4.032-9 9-9s9 4.032 9 9a8.96 8.96 0 0 1-1.969 5.617ZM10 10H7v2h3v3h2v-3h3v-2h-3V7h-2v3Z"/>`
	zoomInLinePath                = `<path fill="currentColor" d="m18.031 16.617l4.283 4.282l-1.415 1.415l-4.282-4.283A8.96 8.96 0 0 1 11 20c-4.968 0-9-4.032-9-9s4.032-9 9-9s9 4.032 9 9a8.96 8.96 0 0 1-1.969 5.617Zm-2.006-.742A6.977 6.977 0 0 0 18 11c0-3.867-3.133-7-7-7s-7 3.133-7 7s3.133 7 7 7a6.977 6.977 0 0 0 4.875-1.975l.15-.15ZM10 10V7h2v3h3v2h-3v3h-2v-3H7v-2h3Z"/>`
	zoomOutFillPath               = `<path fill="currentColor" d="m18.031 16.617l4.283 4.282l-1.415 1.415l-4.282-4.283A8.96 8.96 0 0 1 11 20c-4.968 0-9-4.032-9-9s4.032-9 9-9s9 4.032 9 9a8.96 8.96 0 0 1-1.969 5.617ZM7 10v2h8v-2H7Z"/>`
	zoomOutLinePath               = `<path fill="currentColor" d="m18.031 16.617l4.283 4.282l-1.415 1.415l-4.282-4.283A8.96 8.96 0 0 1 11 20c-4.968 0-9-4.032-9-9s4.032-9 9-9s9 4.032 9 9a8.96 8.96 0 0 1-1.969 5.617Zm-2.006-.742A6.977 6.977 0 0 0 18 11c0-3.867-3.133-7-7-7s-7 3.133-7 7s3.133 7 7 7a6.977 6.977 0 0 0 4.875-1.975l.15-.15ZM7 10h8v2H7v-2Z"/>`
	zzzFillPath                   = `<path fill="currentColor" d="M11 11v2l-5.327 6H11v2H3v-2l5.326-6H3v-2h8Zm10-8v2l-5.327 6H21v2h-8v-2l5.326-6H13V3h8Z"/>`
	zzzLinePath                   = `<path fill="currentColor" d="M11 11v2l-5.327 6H11v2H3v-2l5.326-6H3v-2h8Zm10-8v2l-5.327 6H21v2h-8v-2l5.326-6H13V3h8Z"/>`
)

var (
	hAttr   = g.Attr("height", "1em")
	viewbox = g.Attr("viewbox", "0 0 24 24")
)

func IconFromName(name string) g.Node {
	switch name {
	case "aB":
		return AB()
	case "accountBoxFill":
		return AccountBoxFill()
	case "accountBoxLine":
		return AccountBoxLine()
	case "accountCircleFill":
		return AccountCircleFill()
	case "accountCircleLine":
		return AccountCircleLine()
	case "accountPinBoxFill":
		return AccountPinBoxFill()
	case "accountPinBoxLine":
		return AccountPinBoxLine()
	case "accountPinCircleFill":
		return AccountPinCircleFill()
	case "accountPinCircleLine":
		return AccountPinCircleLine()
	case "addBoxFill":
		return AddBoxFill()
	case "addBoxLine":
		return AddBoxLine()
	case "addCircleFill":
		return AddCircleFill()
	case "addCircleLine":
		return AddCircleLine()
	case "addFill":
		return AddFill()
	case "addLine":
		return AddLine()
	case "adminFill":
		return AdminFill()
	case "adminLine":
		return AdminLine()
	case "advertisementFill":
		return AdvertisementFill()
	case "advertisementLine":
		return AdvertisementLine()
	case "aiGenerate":
		return AiGenerate()
	case "airplayFill":
		return AirplayFill()
	case "airplayLine":
		return AirplayLine()
	case "alarmFill":
		return AlarmFill()
	case "alarmLine":
		return AlarmLine()
	case "alarmWarningFill":
		return AlarmWarningFill()
	case "alarmWarningLine":
		return AlarmWarningLine()
	case "albumFill":
		return AlbumFill()
	case "albumLine":
		return AlbumLine()
	case "alertFill":
		return AlertFill()
	case "alertLine":
		return AlertLine()
	case "aliensFill":
		return AliensFill()
	case "aliensLine":
		return AliensLine()
	case "alignBottom":
		return AlignBottom()
	case "alignCenter":
		return AlignCenter()
	case "alignJustify":
		return AlignJustify()
	case "alignLeft":
		return AlignLeft()
	case "alignRight":
		return AlignRight()
	case "alignTop":
		return AlignTop()
	case "alignVertically":
		return AlignVertically()
	case "alipayFill":
		return AlipayFill()
	case "alipayLine":
		return AlipayLine()
	case "amazonFill":
		return AmazonFill()
	case "amazonLine":
		return AmazonLine()
	case "anchorFill":
		return AnchorFill()
	case "anchorLine":
		return AnchorLine()
	case "ancientGateFill":
		return AncientGateFill()
	case "ancientGateLine":
		return AncientGateLine()
	case "ancientPavilionFill":
		return AncientPavilionFill()
	case "ancientPavilionLine":
		return AncientPavilionLine()
	case "androidFill":
		return AndroidFill()
	case "androidLine":
		return AndroidLine()
	case "angularjsFill":
		return AngularjsFill()
	case "angularjsLine":
		return AngularjsLine()
	case "anticlockwiseFill":
		return AnticlockwiseFill()
	case "anticlockwiseLine":
		return AnticlockwiseLine()
	case "anticlockwiseTwoFill":
		return AnticlockwiseTwoFill()
	case "anticlockwiseTwoLine":
		return AnticlockwiseTwoLine()
	case "appStoreFill":
		return AppStoreFill()
	case "appStoreLine":
		return AppStoreLine()
	case "appleFill":
		return AppleFill()
	case "appleLine":
		return AppleLine()
	case "appsFill":
		return AppsFill()
	case "appsLine":
		return AppsLine()
	case "appsTwoFill":
		return AppsTwoFill()
	case "appsTwoLine":
		return AppsTwoLine()
	case "archiveDrawerFill":
		return ArchiveDrawerFill()
	case "archiveDrawerLine":
		return ArchiveDrawerLine()
	case "archiveFill":
		return ArchiveFill()
	case "archiveLine":
		return ArchiveLine()
	case "archiveTwoFill":
		return ArchiveTwoFill()
	case "archiveTwoLine":
		return ArchiveTwoLine()
	case "arrowDownCircleFill":
		return ArrowDownCircleFill()
	case "arrowDownCircleLine":
		return ArrowDownCircleLine()
	case "arrowDownDoubleFill":
		return ArrowDownDoubleFill()
	case "arrowDownDoubleLine":
		return ArrowDownDoubleLine()
	case "arrowDownFill":
		return ArrowDownFill()
	case "arrowDownLine":
		return ArrowDownLine()
	case "arrowDownSFill":
		return ArrowDownSFill()
	case "arrowDownSLine":
		return ArrowDownSLine()
	case "arrowDropDownFill":
		return ArrowDropDownFill()
	case "arrowDropDownLine":
		return ArrowDropDownLine()
	case "arrowDropLeftFill":
		return ArrowDropLeftFill()
	case "arrowDropLeftLine":
		return ArrowDropLeftLine()
	case "arrowDropRightFill":
		return ArrowDropRightFill()
	case "arrowDropRightLine":
		return ArrowDropRightLine()
	case "arrowDropUpFill":
		return ArrowDropUpFill()
	case "arrowDropUpLine":
		return ArrowDropUpLine()
	case "arrowGoBackFill":
		return ArrowGoBackFill()
	case "arrowGoBackLine":
		return ArrowGoBackLine()
	case "arrowGoForwardFill":
		return ArrowGoForwardFill()
	case "arrowGoForwardLine":
		return ArrowGoForwardLine()
	case "arrowLeftCircleFill":
		return ArrowLeftCircleFill()
	case "arrowLeftCircleLine":
		return ArrowLeftCircleLine()
	case "arrowLeftDoubleFill":
		return ArrowLeftDoubleFill()
	case "arrowLeftDoubleLine":
		return ArrowLeftDoubleLine()
	case "arrowLeftDownFill":
		return ArrowLeftDownFill()
	case "arrowLeftDownLine":
		return ArrowLeftDownLine()
	case "arrowLeftFill":
		return ArrowLeftFill()
	case "arrowLeftLine":
		return ArrowLeftLine()
	case "arrowLeftRightFill":
		return ArrowLeftRightFill()
	case "arrowLeftRightLine":
		return ArrowLeftRightLine()
	case "arrowLeftSFill":
		return ArrowLeftSFill()
	case "arrowLeftSLine":
		return ArrowLeftSLine()
	case "arrowLeftUpFill":
		return ArrowLeftUpFill()
	case "arrowLeftUpLine":
		return ArrowLeftUpLine()
	case "arrowRightCircleFill":
		return ArrowRightCircleFill()
	case "arrowRightCircleLine":
		return ArrowRightCircleLine()
	case "arrowRightDoubleFill":
		return ArrowRightDoubleFill()
	case "arrowRightDoubleLine":
		return ArrowRightDoubleLine()
	case "arrowRightDownFill":
		return ArrowRightDownFill()
	case "arrowRightDownLine":
		return ArrowRightDownLine()
	case "arrowRightFill":
		return ArrowRightFill()
	case "arrowRightLine":
		return ArrowRightLine()
	case "arrowRightSFill":
		return ArrowRightSFill()
	case "arrowRightSLine":
		return ArrowRightSLine()
	case "arrowRightUpFill":
		return ArrowRightUpFill()
	case "arrowRightUpLine":
		return ArrowRightUpLine()
	case "arrowTurnBackFill":
		return ArrowTurnBackFill()
	case "arrowTurnBackLine":
		return ArrowTurnBackLine()
	case "arrowTurnForwardFill":
		return ArrowTurnForwardFill()
	case "arrowTurnForwardLine":
		return ArrowTurnForwardLine()
	case "arrowUpCircleFill":
		return ArrowUpCircleFill()
	case "arrowUpCircleLine":
		return ArrowUpCircleLine()
	case "arrowUpDoubleFill":
		return ArrowUpDoubleFill()
	case "arrowUpDoubleLine":
		return ArrowUpDoubleLine()
	case "arrowUpDownFill":
		return ArrowUpDownFill()
	case "arrowUpDownLine":
		return ArrowUpDownLine()
	case "arrowUpFill":
		return ArrowUpFill()
	case "arrowUpLine":
		return ArrowUpLine()
	case "arrowUpSFill":
		return ArrowUpSFill()
	case "arrowUpSLine":
		return ArrowUpSLine()
	case "artboardFill":
		return ArtboardFill()
	case "artboardLine":
		return ArtboardLine()
	case "artboardTwoFill":
		return ArtboardTwoFill()
	case "artboardTwoLine":
		return ArtboardTwoLine()
	case "articleFill":
		return ArticleFill()
	case "articleLine":
		return ArticleLine()
	case "aspectRatioFill":
		return AspectRatioFill()
	case "aspectRatioLine":
		return AspectRatioLine()
	case "asterisk":
		return Asterisk()
	case "atFill":
		return AtFill()
	case "atLine":
		return AtLine()
	case "attachmentFill":
		return AttachmentFill()
	case "attachmentLine":
		return AttachmentLine()
	case "attachmentTwo":
		return AttachmentTwo()
	case "auctionFill":
		return AuctionFill()
	case "auctionLine":
		return AuctionLine()
	case "awardFill":
		return AwardFill()
	case "awardLine":
		return AwardLine()
	case "baiduFill":
		return BaiduFill()
	case "baiduLine":
		return BaiduLine()
	case "ballPenFill":
		return BallPenFill()
	case "ballPenLine":
		return BallPenLine()
	case "bankCardFill":
		return BankCardFill()
	case "bankCardLine":
		return BankCardLine()
	case "bankCardTwoFill":
		return BankCardTwoFill()
	case "bankCardTwoLine":
		return BankCardTwoLine()
	case "bankFill":
		return BankFill()
	case "bankLine":
		return BankLine()
	case "barChartBoxFill":
		return BarChartBoxFill()
	case "barChartBoxLine":
		return BarChartBoxLine()
	case "barChartFill":
		return BarChartFill()
	case "barChartGroupedFill":
		return BarChartGroupedFill()
	case "barChartGroupedLine":
		return BarChartGroupedLine()
	case "barChartHorizontalFill":
		return BarChartHorizontalFill()
	case "barChartHorizontalLine":
		return BarChartHorizontalLine()
	case "barChartLine":
		return BarChartLine()
	case "barChartTwoFill":
		return BarChartTwoFill()
	case "barChartTwoLine":
		return BarChartTwoLine()
	case "barcodeBoxFill":
		return BarcodeBoxFill()
	case "barcodeBoxLine":
		return BarcodeBoxLine()
	case "barcodeFill":
		return BarcodeFill()
	case "barcodeLine":
		return BarcodeLine()
	case "bardFill":
		return BardFill()
	case "bardLine":
		return BardLine()
	case "barricadeFill":
		return BarricadeFill()
	case "barricadeLine":
		return BarricadeLine()
	case "baseStationFill":
		return BaseStationFill()
	case "baseStationLine":
		return BaseStationLine()
	case "basketballFill":
		return BasketballFill()
	case "basketballLine":
		return BasketballLine()
	case "batteryChargeFill":
		return BatteryChargeFill()
	case "batteryChargeLine":
		return BatteryChargeLine()
	case "batteryFill":
		return BatteryFill()
	case "batteryLine":
		return BatteryLine()
	case "batteryLowFill":
		return BatteryLowFill()
	case "batteryLowLine":
		return BatteryLowLine()
	case "batterySaverFill":
		return BatterySaverFill()
	case "batterySaverLine":
		return BatterySaverLine()
	case "batteryShareFill":
		return BatteryShareFill()
	case "batteryShareLine":
		return BatteryShareLine()
	case "batteryTwoChargeFill":
		return BatteryTwoChargeFill()
	case "batteryTwoChargeLine":
		return BatteryTwoChargeLine()
	case "batteryTwoFill":
		return BatteryTwoFill()
	case "batteryTwoLine":
		return BatteryTwoLine()
	case "bearSmileFill":
		return BearSmileFill()
	case "bearSmileLine":
		return BearSmileLine()
	case "beerFill":
		return BeerFill()
	case "beerLine":
		return BeerLine()
	case "behanceFill":
		return BehanceFill()
	case "behanceLine":
		return BehanceLine()
	case "bellFill":
		return BellFill()
	case "bellLine":
		return BellLine()
	case "bikeFill":
		return BikeFill()
	case "bikeLine":
		return BikeLine()
	case "bilibiliFill":
		return BilibiliFill()
	case "bilibiliLine":
		return BilibiliLine()
	case "billFill":
		return BillFill()
	case "billLine":
		return BillLine()
	case "billiardsFill":
		return BilliardsFill()
	case "billiardsLine":
		return BilliardsLine()
	case "bitCoinFill":
		return BitCoinFill()
	case "bitCoinLine":
		return BitCoinLine()
	case "blazeFill":
		return BlazeFill()
	case "blazeLine":
		return BlazeLine()
	case "blenderFill":
		return BlenderFill()
	case "blenderLine":
		return BlenderLine()
	case "bluetoothConnectFill":
		return BluetoothConnectFill()
	case "bluetoothConnectLine":
		return BluetoothConnectLine()
	case "bluetoothFill":
		return BluetoothFill()
	case "bluetoothLine":
		return BluetoothLine()
	case "blurOffFill":
		return BlurOffFill()
	case "blurOffLine":
		return BlurOffLine()
	case "bodyScanFill":
		return BodyScanFill()
	case "bodyScanLine":
		return BodyScanLine()
	case "bold":
		return Bold()
	case "bookFill":
		return BookFill()
	case "bookLine":
		return BookLine()
	case "bookMarkFill":
		return BookMarkFill()
	case "bookMarkLine":
		return BookMarkLine()
	case "bookOpenFill":
		return BookOpenFill()
	case "bookOpenLine":
		return BookOpenLine()
	case "bookReadFill":
		return BookReadFill()
	case "bookReadLine":
		return BookReadLine()
	case "bookThreeFill":
		return BookThreeFill()
	case "bookThreeLine":
		return BookThreeLine()
	case "bookTwoFill":
		return BookTwoFill()
	case "bookTwoLine":
		return BookTwoLine()
	case "bookletFill":
		return BookletFill()
	case "bookletLine":
		return BookletLine()
	case "bookmarkFill":
		return BookmarkFill()
	case "bookmarkLine":
		return BookmarkLine()
	case "bookmarkThreeFill":
		return BookmarkThreeFill()
	case "bookmarkThreeLine":
		return BookmarkThreeLine()
	case "bookmarkTwoFill":
		return BookmarkTwoFill()
	case "bookmarkTwoLine":
		return BookmarkTwoLine()
	case "bootstrapFill":
		return BootstrapFill()
	case "bootstrapLine":
		return BootstrapLine()
	case "boxOneFill":
		return BoxOneFill()
	case "boxOneLine":
		return BoxOneLine()
	case "boxThreeFill":
		return BoxThreeFill()
	case "boxThreeLine":
		return BoxThreeLine()
	case "boxTwoFill":
		return BoxTwoFill()
	case "boxTwoLine":
		return BoxTwoLine()
	case "boxingFill":
		return BoxingFill()
	case "boxingLine":
		return BoxingLine()
	case "bracesFill":
		return BracesFill()
	case "bracesLine":
		return BracesLine()
	case "bracketsFill":
		return BracketsFill()
	case "bracketsLine":
		return BracketsLine()
	case "brainFill":
		return BrainFill()
	case "brainLine":
		return BrainLine()
	case "briefcaseFill":
		return BriefcaseFill()
	case "briefcaseFiveFill":
		return BriefcaseFiveFill()
	case "briefcaseFiveLine":
		return BriefcaseFiveLine()
	case "briefcaseFourFill":
		return BriefcaseFourFill()
	case "briefcaseFourLine":
		return BriefcaseFourLine()
	case "briefcaseLine":
		return BriefcaseLine()
	case "briefcaseThreeFill":
		return BriefcaseThreeFill()
	case "briefcaseThreeLine":
		return BriefcaseThreeLine()
	case "briefcaseTwoFill":
		return BriefcaseTwoFill()
	case "briefcaseTwoLine":
		return BriefcaseTwoLine()
	case "bringForward":
		return BringForward()
	case "bringToFront":
		return BringToFront()
	case "broadcastFill":
		return BroadcastFill()
	case "broadcastLine":
		return BroadcastLine()
	case "brushFill":
		return BrushFill()
	case "brushFourFill":
		return BrushFourFill()
	case "brushFourLine":
		return BrushFourLine()
	case "brushLine":
		return BrushLine()
	case "brushThreeFill":
		return BrushThreeFill()
	case "brushThreeLine":
		return BrushThreeLine()
	case "brushTwoFill":
		return BrushTwoFill()
	case "brushTwoLine":
		return BrushTwoLine()
	case "bubbleChartFill":
		return BubbleChartFill()
	case "bubbleChartLine":
		return BubbleChartLine()
	case "bugFill":
		return BugFill()
	case "bugLine":
		return BugLine()
	case "bugTwoFill":
		return BugTwoFill()
	case "bugTwoLine":
		return BugTwoLine()
	case "buildingFill":
		return BuildingFill()
	case "buildingFourFill":
		return BuildingFourFill()
	case "buildingFourLine":
		return BuildingFourLine()
	case "buildingLine":
		return BuildingLine()
	case "buildingThreeFill":
		return BuildingThreeFill()
	case "buildingThreeLine":
		return BuildingThreeLine()
	case "buildingTwoFill":
		return BuildingTwoFill()
	case "buildingTwoLine":
		return BuildingTwoLine()
	case "busFill":
		return BusFill()
	case "busLine":
		return BusLine()
	case "busTwoFill":
		return BusTwoFill()
	case "busTwoLine":
		return BusTwoLine()
	case "busWifiFill":
		return BusWifiFill()
	case "busWifiLine":
		return BusWifiLine()
	case "cactusFill":
		return CactusFill()
	case "cactusLine":
		return CactusLine()
	case "cakeFill":
		return CakeFill()
	case "cakeLine":
		return CakeLine()
	case "cakeThreeFill":
		return CakeThreeFill()
	case "cakeThreeLine":
		return CakeThreeLine()
	case "cakeTwoFill":
		return CakeTwoFill()
	case "cakeTwoLine":
		return CakeTwoLine()
	case "calculatorFill":
		return CalculatorFill()
	case "calculatorLine":
		return CalculatorLine()
	case "calendarCheckFill":
		return CalendarCheckFill()
	case "calendarCheckLine":
		return CalendarCheckLine()
	case "calendarCloseFill":
		return CalendarCloseFill()
	case "calendarCloseLine":
		return CalendarCloseLine()
	case "calendarEventFill":
		return CalendarEventFill()
	case "calendarEventLine":
		return CalendarEventLine()
	case "calendarFill":
		return CalendarFill()
	case "calendarLine":
		return CalendarLine()
	case "calendarTodoFill":
		return CalendarTodoFill()
	case "calendarTodoLine":
		return CalendarTodoLine()
	case "calendarTwoFill":
		return CalendarTwoFill()
	case "calendarTwoLine":
		return CalendarTwoLine()
	case "cameraFill":
		return CameraFill()
	case "cameraLensFill":
		return CameraLensFill()
	case "cameraLensLine":
		return CameraLensLine()
	case "cameraLine":
		return CameraLine()
	case "cameraOffFill":
		return CameraOffFill()
	case "cameraOffLine":
		return CameraOffLine()
	case "cameraSwitchFill":
		return CameraSwitchFill()
	case "cameraSwitchLine":
		return CameraSwitchLine()
	case "cameraThreeFill":
		return CameraThreeFill()
	case "cameraThreeLine":
		return CameraThreeLine()
	case "cameraTwoFill":
		return CameraTwoFill()
	case "cameraTwoLine":
		return CameraTwoLine()
	case "candleFill":
		return CandleFill()
	case "candleLine":
		return CandleLine()
	case "capsuleFill":
		return CapsuleFill()
	case "capsuleLine":
		return CapsuleLine()
	case "carFill":
		return CarFill()
	case "carLine":
		return CarLine()
	case "carWashingFill":
		return CarWashingFill()
	case "carWashingLine":
		return CarWashingLine()
	case "caravanFill":
		return CaravanFill()
	case "caravanLine":
		return CaravanLine()
	case "cashFill":
		return CashFill()
	case "cashLine":
		return CashLine()
	case "castFill":
		return CastFill()
	case "castLine":
		return CastLine()
	case "cellphoneFill":
		return CellphoneFill()
	case "cellphoneLine":
		return CellphoneLine()
	case "celsiusFill":
		return CelsiusFill()
	case "celsiusLine":
		return CelsiusLine()
	case "centosFill":
		return CentosFill()
	case "centosLine":
		return CentosLine()
	case "characterRecognitionFill":
		return CharacterRecognitionFill()
	case "characterRecognitionLine":
		return CharacterRecognitionLine()
	case "chargingPileFill":
		return ChargingPileFill()
	case "chargingPileLine":
		return ChargingPileLine()
	case "chargingPileTwoFill":
		return ChargingPileTwoFill()
	case "chargingPileTwoLine":
		return ChargingPileTwoLine()
	case "chatCheckFill":
		return ChatCheckFill()
	case "chatCheckLine":
		return ChatCheckLine()
	case "chatDeleteFill":
		return ChatDeleteFill()
	case "chatDeleteLine":
		return ChatDeleteLine()
	case "chatDownloadFill":
		return ChatDownloadFill()
	case "chatDownloadLine":
		return ChatDownloadLine()
	case "chatFollowUpFill":
		return ChatFollowUpFill()
	case "chatFollowUpLine":
		return ChatFollowUpLine()
	case "chatForwardFill":
		return ChatForwardFill()
	case "chatForwardLine":
		return ChatForwardLine()
	case "chatFourFill":
		return ChatFourFill()
	case "chatFourLine":
		return ChatFourLine()
	case "chatHeartFill":
		return ChatHeartFill()
	case "chatHeartLine":
		return ChatHeartLine()
	case "chatHistoryFill":
		return ChatHistoryFill()
	case "chatHistoryLine":
		return ChatHistoryLine()
	case "chatNewFill":
		return ChatNewFill()
	case "chatNewLine":
		return ChatNewLine()
	case "chatOffFill":
		return ChatOffFill()
	case "chatOffLine":
		return ChatOffLine()
	case "chatOneFill":
		return ChatOneFill()
	case "chatOneLine":
		return ChatOneLine()
	case "chatPollFill":
		return ChatPollFill()
	case "chatPollLine":
		return ChatPollLine()
	case "chatPrivateFill":
		return ChatPrivateFill()
	case "chatPrivateLine":
		return ChatPrivateLine()
	case "chatQuoteFill":
		return ChatQuoteFill()
	case "chatQuoteLine":
		return ChatQuoteLine()
	case "chatSettingsFill":
		return ChatSettingsFill()
	case "chatSettingsLine":
		return ChatSettingsLine()
	case "chatSmileFill":
		return ChatSmileFill()
	case "chatSmileLine":
		return ChatSmileLine()
	case "chatSmileThreeFill":
		return ChatSmileThreeFill()
	case "chatSmileThreeLine":
		return ChatSmileThreeLine()
	case "chatSmileTwoFill":
		return ChatSmileTwoFill()
	case "chatSmileTwoLine":
		return ChatSmileTwoLine()
	case "chatThreeFill":
		return ChatThreeFill()
	case "chatThreeLine":
		return ChatThreeLine()
	case "chatTwoFill":
		return ChatTwoFill()
	case "chatTwoLine":
		return ChatTwoLine()
	case "chatUploadFill":
		return ChatUploadFill()
	case "chatUploadLine":
		return ChatUploadLine()
	case "chatVoiceFill":
		return ChatVoiceFill()
	case "chatVoiceLine":
		return ChatVoiceLine()
	case "checkDoubleFill":
		return CheckDoubleFill()
	case "checkDoubleLine":
		return CheckDoubleLine()
	case "checkFill":
		return CheckFill()
	case "checkLine":
		return CheckLine()
	case "checkboxBlankCircleFill":
		return CheckboxBlankCircleFill()
	case "checkboxBlankCircleLine":
		return CheckboxBlankCircleLine()
	case "checkboxBlankFill":
		return CheckboxBlankFill()
	case "checkboxBlankLine":
		return CheckboxBlankLine()
	case "checkboxCircleFill":
		return CheckboxCircleFill()
	case "checkboxCircleLine":
		return CheckboxCircleLine()
	case "checkboxFill":
		return CheckboxFill()
	case "checkboxIndeterminateFill":
		return CheckboxIndeterminateFill()
	case "checkboxIndeterminateLine":
		return CheckboxIndeterminateLine()
	case "checkboxLine":
		return CheckboxLine()
	case "checkboxMultipleBlankFill":
		return CheckboxMultipleBlankFill()
	case "checkboxMultipleBlankLine":
		return CheckboxMultipleBlankLine()
	case "checkboxMultipleFill":
		return CheckboxMultipleFill()
	case "checkboxMultipleLine":
		return CheckboxMultipleLine()
	case "chinaRailwayFill":
		return ChinaRailwayFill()
	case "chinaRailwayLine":
		return ChinaRailwayLine()
	case "chromeFill":
		return ChromeFill()
	case "chromeLine":
		return ChromeLine()
	case "circleFill":
		return CircleFill()
	case "circleLine":
		return CircleLine()
	case "clapperboardFill":
		return ClapperboardFill()
	case "clapperboardLine":
		return ClapperboardLine()
	case "clipboardFill":
		return ClipboardFill()
	case "clipboardLine":
		return ClipboardLine()
	case "clockwiseFill":
		return ClockwiseFill()
	case "clockwiseLine":
		return ClockwiseLine()
	case "clockwiseTwoFill":
		return ClockwiseTwoFill()
	case "clockwiseTwoLine":
		return ClockwiseTwoLine()
	case "closeCircleFill":
		return CloseCircleFill()
	case "closeCircleLine":
		return CloseCircleLine()
	case "closeFill":
		return CloseFill()
	case "closeLine":
		return CloseLine()
	case "closedCaptioningFill":
		return ClosedCaptioningFill()
	case "closedCaptioningLine":
		return ClosedCaptioningLine()
	case "cloudFill":
		return CloudFill()
	case "cloudLine":
		return CloudLine()
	case "cloudOffFill":
		return CloudOffFill()
	case "cloudOffLine":
		return CloudOffLine()
	case "cloudWindyFill":
		return CloudWindyFill()
	case "cloudWindyLine":
		return CloudWindyLine()
	case "cloudyFill":
		return CloudyFill()
	case "cloudyLine":
		return CloudyLine()
	case "cloudyTwoFill":
		return CloudyTwoFill()
	case "cloudyTwoLine":
		return CloudyTwoLine()
	case "codeBoxFill":
		return CodeBoxFill()
	case "codeBoxLine":
		return CodeBoxLine()
	case "codeFill":
		return CodeFill()
	case "codeLine":
		return CodeLine()
	case "codeSFill":
		return CodeSFill()
	case "codeSLine":
		return CodeSLine()
	case "codeSSlashFill":
		return CodeSSlashFill()
	case "codeSSlashLine":
		return CodeSSlashLine()
	case "codeView":
		return CodeView()
	case "codepenFill":
		return CodepenFill()
	case "codepenLine":
		return CodepenLine()
	case "coinFill":
		return CoinFill()
	case "coinLine":
		return CoinLine()
	case "coinsFill":
		return CoinsFill()
	case "coinsLine":
		return CoinsLine()
	case "collageFill":
		return CollageFill()
	case "collageLine":
		return CollageLine()
	case "commandFill":
		return CommandFill()
	case "commandLine":
		return CommandLine()
	case "communityFill":
		return CommunityFill()
	case "communityLine":
		return CommunityLine()
	case "compassDiscoverFill":
		return CompassDiscoverFill()
	case "compassDiscoverLine":
		return CompassDiscoverLine()
	case "compassFill":
		return CompassFill()
	case "compassFourFill":
		return CompassFourFill()
	case "compassFourLine":
		return CompassFourLine()
	case "compassLine":
		return CompassLine()
	case "compassThreeFill":
		return CompassThreeFill()
	case "compassThreeLine":
		return CompassThreeLine()
	case "compassTwoFill":
		return CompassTwoFill()
	case "compassTwoLine":
		return CompassTwoLine()
	case "compassesFill":
		return CompassesFill()
	case "compassesLine":
		return CompassesLine()
	case "compassesTwoFill":
		return CompassesTwoFill()
	case "compassesTwoLine":
		return CompassesTwoLine()
	case "computerFill":
		return ComputerFill()
	case "computerLine":
		return ComputerLine()
	case "contactsBookFill":
		return ContactsBookFill()
	case "contactsBookLine":
		return ContactsBookLine()
	case "contactsBookTwoFill":
		return ContactsBookTwoFill()
	case "contactsBookTwoLine":
		return ContactsBookTwoLine()
	case "contactsBookUploadFill":
		return ContactsBookUploadFill()
	case "contactsBookUploadLine":
		return ContactsBookUploadLine()
	case "contactsFill":
		return ContactsFill()
	case "contactsLine":
		return ContactsLine()
	case "contractLeftFill":
		return ContractLeftFill()
	case "contractLeftLine":
		return ContractLeftLine()
	case "contractLeftRightFill":
		return ContractLeftRightFill()
	case "contractLeftRightLine":
		return ContractLeftRightLine()
	case "contractRightFill":
		return ContractRightFill()
	case "contractRightLine":
		return ContractRightLine()
	case "contractUpDownFill":
		return ContractUpDownFill()
	case "contractUpDownLine":
		return ContractUpDownLine()
	case "contrastDropFill":
		return ContrastDropFill()
	case "contrastDropLine":
		return ContrastDropLine()
	case "contrastDropTwoFill":
		return ContrastDropTwoFill()
	case "contrastDropTwoLine":
		return ContrastDropTwoLine()
	case "contrastFill":
		return ContrastFill()
	case "contrastLine":
		return ContrastLine()
	case "contrastTwoFill":
		return ContrastTwoFill()
	case "contrastTwoLine":
		return ContrastTwoLine()
	case "copilotFill":
		return CopilotFill()
	case "copilotLine":
		return CopilotLine()
	case "copperCoinFill":
		return CopperCoinFill()
	case "copperCoinLine":
		return CopperCoinLine()
	case "copperDiamondFill":
		return CopperDiamondFill()
	case "copperDiamondLine":
		return CopperDiamondLine()
	case "copyleftFill":
		return CopyleftFill()
	case "copyleftLine":
		return CopyleftLine()
	case "copyrightFill":
		return CopyrightFill()
	case "copyrightLine":
		return CopyrightLine()
	case "coreosFill":
		return CoreosFill()
	case "coreosLine":
		return CoreosLine()
	case "cornerDownLeftFill":
		return CornerDownLeftFill()
	case "cornerDownLeftLine":
		return CornerDownLeftLine()
	case "cornerDownRightFill":
		return CornerDownRightFill()
	case "cornerDownRightLine":
		return CornerDownRightLine()
	case "cornerLeftDownFill":
		return CornerLeftDownFill()
	case "cornerLeftDownLine":
		return CornerLeftDownLine()
	case "cornerLeftUpFill":
		return CornerLeftUpFill()
	case "cornerLeftUpLine":
		return CornerLeftUpLine()
	case "cornerRightDownFill":
		return CornerRightDownFill()
	case "cornerRightDownLine":
		return CornerRightDownLine()
	case "cornerRightUpFill":
		return CornerRightUpFill()
	case "cornerRightUpLine":
		return CornerRightUpLine()
	case "cornerUpLeftDoubleFill":
		return CornerUpLeftDoubleFill()
	case "cornerUpLeftDoubleLine":
		return CornerUpLeftDoubleLine()
	case "cornerUpLeftFill":
		return CornerUpLeftFill()
	case "cornerUpLeftLine":
		return CornerUpLeftLine()
	case "cornerUpRightDoubleFill":
		return CornerUpRightDoubleFill()
	case "cornerUpRightDoubleLine":
		return CornerUpRightDoubleLine()
	case "cornerUpRightFill":
		return CornerUpRightFill()
	case "cornerUpRightLine":
		return CornerUpRightLine()
	case "couponFill":
		return CouponFill()
	case "couponFiveFill":
		return CouponFiveFill()
	case "couponFiveLine":
		return CouponFiveLine()
	case "couponFourFill":
		return CouponFourFill()
	case "couponFourLine":
		return CouponFourLine()
	case "couponLine":
		return CouponLine()
	case "couponThreeFill":
		return CouponThreeFill()
	case "couponThreeLine":
		return CouponThreeLine()
	case "couponTwoFill":
		return CouponTwoFill()
	case "couponTwoLine":
		return CouponTwoLine()
	case "cpuFill":
		return CpuFill()
	case "cpuLine":
		return CpuLine()
	case "creativeCommonsByFill":
		return CreativeCommonsByFill()
	case "creativeCommonsByLine":
		return CreativeCommonsByLine()
	case "creativeCommonsFill":
		return CreativeCommonsFill()
	case "creativeCommonsLine":
		return CreativeCommonsLine()
	case "creativeCommonsNcFill":
		return CreativeCommonsNcFill()
	case "creativeCommonsNcLine":
		return CreativeCommonsNcLine()
	case "creativeCommonsNdFill":
		return CreativeCommonsNdFill()
	case "creativeCommonsNdLine":
		return CreativeCommonsNdLine()
	case "creativeCommonsSaFill":
		return CreativeCommonsSaFill()
	case "creativeCommonsSaLine":
		return CreativeCommonsSaLine()
	case "creativeCommonsZeroFill":
		return CreativeCommonsZeroFill()
	case "creativeCommonsZeroLine":
		return CreativeCommonsZeroLine()
	case "criminalFill":
		return CriminalFill()
	case "criminalLine":
		return CriminalLine()
	case "cropFill":
		return CropFill()
	case "cropLine":
		return CropLine()
	case "cropTwoFill":
		return CropTwoFill()
	case "cropTwoLine":
		return CropTwoLine()
	case "crossFill":
		return CrossFill()
	case "crossLine":
		return CrossLine()
	case "crosshairFill":
		return CrosshairFill()
	case "crosshairLine":
		return CrosshairLine()
	case "crosshairTwoFill":
		return CrosshairTwoFill()
	case "crosshairTwoLine":
		return CrosshairTwoLine()
	case "cssThreeFill":
		return CssThreeFill()
	case "cssThreeLine":
		return CssThreeLine()
	case "cupFill":
		return CupFill()
	case "cupLine":
		return CupLine()
	case "currencyFill":
		return CurrencyFill()
	case "currencyLine":
		return CurrencyLine()
	case "cursorFill":
		return CursorFill()
	case "cursorLine":
		return CursorLine()
	case "customerServiceFill":
		return CustomerServiceFill()
	case "customerServiceLine":
		return CustomerServiceLine()
	case "customerServiceTwoFill":
		return CustomerServiceTwoFill()
	case "customerServiceTwoLine":
		return CustomerServiceTwoLine()
	case "dashboardFill":
		return DashboardFill()
	case "dashboardLine":
		return DashboardLine()
	case "dashboardThreeFill":
		return DashboardThreeFill()
	case "dashboardThreeLine":
		return DashboardThreeLine()
	case "dashboardTwoFill":
		return DashboardTwoFill()
	case "dashboardTwoLine":
		return DashboardTwoLine()
	case "databaseFill":
		return DatabaseFill()
	case "databaseLine":
		return DatabaseLine()
	case "databaseTwoFill":
		return DatabaseTwoFill()
	case "databaseTwoLine":
		return DatabaseTwoLine()
	case "deleteBackFill":
		return DeleteBackFill()
	case "deleteBackLine":
		return DeleteBackLine()
	case "deleteBackTwoFill":
		return DeleteBackTwoFill()
	case "deleteBackTwoLine":
		return DeleteBackTwoLine()
	case "deleteBinFill":
		return DeleteBinFill()
	case "deleteBinFiveFill":
		return DeleteBinFiveFill()
	case "deleteBinFiveLine":
		return DeleteBinFiveLine()
	case "deleteBinFourFill":
		return DeleteBinFourFill()
	case "deleteBinFourLine":
		return DeleteBinFourLine()
	case "deleteBinLine":
		return DeleteBinLine()
	case "deleteBinSevenFill":
		return DeleteBinSevenFill()
	case "deleteBinSevenLine":
		return DeleteBinSevenLine()
	case "deleteBinSixFill":
		return DeleteBinSixFill()
	case "deleteBinSixLine":
		return DeleteBinSixLine()
	case "deleteBinThreeFill":
		return DeleteBinThreeFill()
	case "deleteBinThreeLine":
		return DeleteBinThreeLine()
	case "deleteBinTwoFill":
		return DeleteBinTwoFill()
	case "deleteBinTwoLine":
		return DeleteBinTwoLine()
	case "deleteColumn":
		return DeleteColumn()
	case "deleteRow":
		return DeleteRow()
	case "deviceFill":
		return DeviceFill()
	case "deviceLine":
		return DeviceLine()
	case "deviceRecoverFill":
		return DeviceRecoverFill()
	case "deviceRecoverLine":
		return DeviceRecoverLine()
	case "dingdingFill":
		return DingdingFill()
	case "dingdingLine":
		return DingdingLine()
	case "directionFill":
		return DirectionFill()
	case "directionLine":
		return DirectionLine()
	case "discFill":
		return DiscFill()
	case "discLine":
		return DiscLine()
	case "discordFill":
		return DiscordFill()
	case "discordLine":
		return DiscordLine()
	case "discussFill":
		return DiscussFill()
	case "discussLine":
		return DiscussLine()
	case "dislikeFill":
		return DislikeFill()
	case "dislikeLine":
		return DislikeLine()
	case "disqusFill":
		return DisqusFill()
	case "disqusLine":
		return DisqusLine()
	case "divideFill":
		return DivideFill()
	case "divideLine":
		return DivideLine()
	case "donutChartFill":
		return DonutChartFill()
	case "donutChartLine":
		return DonutChartLine()
	case "doorClosedFill":
		return DoorClosedFill()
	case "doorClosedLine":
		return DoorClosedLine()
	case "doorFill":
		return DoorFill()
	case "doorLine":
		return DoorLine()
	case "doorLockBoxFill":
		return DoorLockBoxFill()
	case "doorLockBoxLine":
		return DoorLockBoxLine()
	case "doorLockFill":
		return DoorLockFill()
	case "doorLockLine":
		return DoorLockLine()
	case "doorOpenFill":
		return DoorOpenFill()
	case "doorOpenLine":
		return DoorOpenLine()
	case "dossierFill":
		return DossierFill()
	case "dossierLine":
		return DossierLine()
	case "doubanFill":
		return DoubanFill()
	case "doubanLine":
		return DoubanLine()
	case "doubleQuotesL":
		return DoubleQuotesL()
	case "doubleQuotesR":
		return DoubleQuotesR()
	case "downloadCloudFill":
		return DownloadCloudFill()
	case "downloadCloudLine":
		return DownloadCloudLine()
	case "downloadCloudTwoFill":
		return DownloadCloudTwoFill()
	case "downloadCloudTwoLine":
		return DownloadCloudTwoLine()
	case "downloadFill":
		return DownloadFill()
	case "downloadLine":
		return DownloadLine()
	case "downloadTwoFill":
		return DownloadTwoFill()
	case "downloadTwoLine":
		return DownloadTwoLine()
	case "draftFill":
		return DraftFill()
	case "draftLine":
		return DraftLine()
	case "dragDropFill":
		return DragDropFill()
	case "dragDropLine":
		return DragDropLine()
	case "dragMoveFill":
		return DragMoveFill()
	case "dragMoveLine":
		return DragMoveLine()
	case "dragMoveTwoFill":
		return DragMoveTwoFill()
	case "dragMoveTwoLine":
		return DragMoveTwoLine()
	case "draggable":
		return Draggable()
	case "dribbbleFill":
		return DribbbleFill()
	case "dribbbleLine":
		return DribbbleLine()
	case "driveFill":
		return DriveFill()
	case "driveLine":
		return DriveLine()
	case "drizzleFill":
		return DrizzleFill()
	case "drizzleLine":
		return DrizzleLine()
	case "dropFill":
		return DropFill()
	case "dropLine":
		return DropLine()
	case "dropboxFill":
		return DropboxFill()
	case "dropboxLine":
		return DropboxLine()
	case "dropdownList":
		return DropdownList()
	case "dualSimOneFill":
		return DualSimOneFill()
	case "dualSimOneLine":
		return DualSimOneLine()
	case "dualSimTwoFill":
		return DualSimTwoFill()
	case "dualSimTwoLine":
		return DualSimTwoLine()
	case "dvFill":
		return DvFill()
	case "dvLine":
		return DvLine()
	case "dvdFill":
		return DvdFill()
	case "dvdLine":
		return DvdLine()
	case "eBikeFill":
		return EBikeFill()
	case "eBikeLine":
		return EBikeLine()
	case "eBikeTwoFill":
		return EBikeTwoFill()
	case "eBikeTwoLine":
		return EBikeTwoLine()
	case "earthFill":
		return EarthFill()
	case "earthLine":
		return EarthLine()
	case "earthquakeFill":
		return EarthquakeFill()
	case "earthquakeLine":
		return EarthquakeLine()
	case "edgeFill":
		return EdgeFill()
	case "edgeLine":
		return EdgeLine()
	case "edgeNewFill":
		return EdgeNewFill()
	case "edgeNewLine":
		return EdgeNewLine()
	case "editBoxFill":
		return EditBoxFill()
	case "editBoxLine":
		return EditBoxLine()
	case "editCircleFill":
		return EditCircleFill()
	case "editCircleLine":
		return EditCircleLine()
	case "editFill":
		return EditFill()
	case "editLine":
		return EditLine()
	case "editTwoFill":
		return EditTwoFill()
	case "editTwoLine":
		return EditTwoLine()
	case "ejectFill":
		return EjectFill()
	case "ejectLine":
		return EjectLine()
	case "emojiStickerFill":
		return EmojiStickerFill()
	case "emojiStickerLine":
		return EmojiStickerLine()
	case "emotionFill":
		return EmotionFill()
	case "emotionHappyFill":
		return EmotionHappyFill()
	case "emotionHappyLine":
		return EmotionHappyLine()
	case "emotionLaughFill":
		return EmotionLaughFill()
	case "emotionLaughLine":
		return EmotionLaughLine()
	case "emotionLine":
		return EmotionLine()
	case "emotionNormalFill":
		return EmotionNormalFill()
	case "emotionNormalLine":
		return EmotionNormalLine()
	case "emotionSadFill":
		return EmotionSadFill()
	case "emotionSadLine":
		return EmotionSadLine()
	case "emotionTwoFill":
		return EmotionTwoFill()
	case "emotionTwoLine":
		return EmotionTwoLine()
	case "emotionUnhappyFill":
		return EmotionUnhappyFill()
	case "emotionUnhappyLine":
		return EmotionUnhappyLine()
	case "empathizeFill":
		return EmpathizeFill()
	case "empathizeLine":
		return EmpathizeLine()
	case "emphasis":
		return Emphasis()
	case "emphasisCn":
		return EmphasisCn()
	case "englishInput":
		return EnglishInput()
	case "equalFill":
		return EqualFill()
	case "equalLine":
		return EqualLine()
	case "equalizerFill":
		return EqualizerFill()
	case "equalizerLine":
		return EqualizerLine()
	case "eraserFill":
		return EraserFill()
	case "eraserLine":
		return EraserLine()
	case "errorWarningFill":
		return ErrorWarningFill()
	case "errorWarningLine":
		return ErrorWarningLine()
	case "evernoteFill":
		return EvernoteFill()
	case "evernoteLine":
		return EvernoteLine()
	case "exchangeBoxFill":
		return ExchangeBoxFill()
	case "exchangeBoxLine":
		return ExchangeBoxLine()
	case "exchangeCnyFill":
		return ExchangeCnyFill()
	case "exchangeCnyLine":
		return ExchangeCnyLine()
	case "exchangeDollarFill":
		return ExchangeDollarFill()
	case "exchangeDollarLine":
		return ExchangeDollarLine()
	case "exchangeFill":
		return ExchangeFill()
	case "exchangeFundsFill":
		return ExchangeFundsFill()
	case "exchangeFundsLine":
		return ExchangeFundsLine()
	case "exchangeLine":
		return ExchangeLine()
	case "expandLeftFill":
		return ExpandLeftFill()
	case "expandLeftLine":
		return ExpandLeftLine()
	case "expandLeftRightFill":
		return ExpandLeftRightFill()
	case "expandLeftRightLine":
		return ExpandLeftRightLine()
	case "expandRightFill":
		return ExpandRightFill()
	case "expandRightLine":
		return ExpandRightLine()
	case "expandUpDownFill":
		return ExpandUpDownFill()
	case "expandUpDownLine":
		return ExpandUpDownLine()
	case "externalLinkFill":
		return ExternalLinkFill()
	case "externalLinkLine":
		return ExternalLinkLine()
	case "eyeCloseFill":
		return EyeCloseFill()
	case "eyeCloseLine":
		return EyeCloseLine()
	case "eyeFill":
		return EyeFill()
	case "eyeLine":
		return EyeLine()
	case "eyeOffFill":
		return EyeOffFill()
	case "eyeOffLine":
		return EyeOffLine()
	case "eyeTwoFill":
		return EyeTwoFill()
	case "eyeTwoLine":
		return EyeTwoLine()
	case "facebookBoxFill":
		return FacebookBoxFill()
	case "facebookBoxLine":
		return FacebookBoxLine()
	case "facebookCircleFill":
		return FacebookCircleFill()
	case "facebookCircleLine":
		return FacebookCircleLine()
	case "facebookFill":
		return FacebookFill()
	case "facebookLine":
		return FacebookLine()
	case "fahrenheitFill":
		return FahrenheitFill()
	case "fahrenheitLine":
		return FahrenheitLine()
	case "feedbackFill":
		return FeedbackFill()
	case "feedbackLine":
		return FeedbackLine()
	case "fileAddFill":
		return FileAddFill()
	case "fileAddLine":
		return FileAddLine()
	case "fileChartFill":
		return FileChartFill()
	case "fileChartLine":
		return FileChartLine()
	case "fileChartTwoFill":
		return FileChartTwoFill()
	case "fileChartTwoLine":
		return FileChartTwoLine()
	case "fileCloseFill":
		return FileCloseFill()
	case "fileCloseLine":
		return FileCloseLine()
	case "fileCloudFill":
		return FileCloudFill()
	case "fileCloudLine":
		return FileCloudLine()
	case "fileCodeFill":
		return FileCodeFill()
	case "fileCodeLine":
		return FileCodeLine()
	case "fileCopyFill":
		return FileCopyFill()
	case "fileCopyLine":
		return FileCopyLine()
	case "fileCopyTwoFill":
		return FileCopyTwoFill()
	case "fileCopyTwoLine":
		return FileCopyTwoLine()
	case "fileDamageFill":
		return FileDamageFill()
	case "fileDamageLine":
		return FileDamageLine()
	case "fileDownloadFill":
		return FileDownloadFill()
	case "fileDownloadLine":
		return FileDownloadLine()
	case "fileEditFill":
		return FileEditFill()
	case "fileEditLine":
		return FileEditLine()
	case "fileExcelFill":
		return FileExcelFill()
	case "fileExcelLine":
		return FileExcelLine()
	case "fileExcelTwoFill":
		return FileExcelTwoFill()
	case "fileExcelTwoLine":
		return FileExcelTwoLine()
	case "fileFill":
		return FileFill()
	case "fileForbidFill":
		return FileForbidFill()
	case "fileForbidLine":
		return FileForbidLine()
	case "fileFourFill":
		return FileFourFill()
	case "fileFourLine":
		return FileFourLine()
	case "fileGifFill":
		return FileGifFill()
	case "fileGifLine":
		return FileGifLine()
	case "fileHistoryFill":
		return FileHistoryFill()
	case "fileHistoryLine":
		return FileHistoryLine()
	case "fileHwpFill":
		return FileHwpFill()
	case "fileHwpLine":
		return FileHwpLine()
	case "fileImageFill":
		return FileImageFill()
	case "fileImageLine":
		return FileImageLine()
	case "fileInfoFill":
		return FileInfoFill()
	case "fileInfoLine":
		return FileInfoLine()
	case "fileLine":
		return FileLine()
	case "fileListFill":
		return FileListFill()
	case "fileListLine":
		return FileListLine()
	case "fileListThreeFill":
		return FileListThreeFill()
	case "fileListThreeLine":
		return FileListThreeLine()
	case "fileListTwoFill":
		return FileListTwoFill()
	case "fileListTwoLine":
		return FileListTwoLine()
	case "fileLockFill":
		return FileLockFill()
	case "fileLockLine":
		return FileLockLine()
	case "fileMarkFill":
		return FileMarkFill()
	case "fileMarkLine":
		return FileMarkLine()
	case "fileMusicFill":
		return FileMusicFill()
	case "fileMusicLine":
		return FileMusicLine()
	case "filePaperFill":
		return FilePaperFill()
	case "filePaperLine":
		return FilePaperLine()
	case "filePaperTwoFill":
		return FilePaperTwoFill()
	case "filePaperTwoLine":
		return FilePaperTwoLine()
	case "filePdfFill":
		return FilePdfFill()
	case "filePdfLine":
		return FilePdfLine()
	case "filePdfTwoFill":
		return FilePdfTwoFill()
	case "filePdfTwoLine":
		return FilePdfTwoLine()
	case "filePptFill":
		return FilePptFill()
	case "filePptLine":
		return FilePptLine()
	case "filePptTwoFill":
		return FilePptTwoFill()
	case "filePptTwoLine":
		return FilePptTwoLine()
	case "fileReduceFill":
		return FileReduceFill()
	case "fileReduceLine":
		return FileReduceLine()
	case "fileSearchFill":
		return FileSearchFill()
	case "fileSearchLine":
		return FileSearchLine()
	case "fileSettingsFill":
		return FileSettingsFill()
	case "fileSettingsLine":
		return FileSettingsLine()
	case "fileShieldFill":
		return FileShieldFill()
	case "fileShieldLine":
		return FileShieldLine()
	case "fileShieldTwoFill":
		return FileShieldTwoFill()
	case "fileShieldTwoLine":
		return FileShieldTwoLine()
	case "fileShredFill":
		return FileShredFill()
	case "fileShredLine":
		return FileShredLine()
	case "fileTextFill":
		return FileTextFill()
	case "fileTextLine":
		return FileTextLine()
	case "fileThreeFill":
		return FileThreeFill()
	case "fileThreeLine":
		return FileThreeLine()
	case "fileTransferFill":
		return FileTransferFill()
	case "fileTransferLine":
		return FileTransferLine()
	case "fileTwoFill":
		return FileTwoFill()
	case "fileTwoLine":
		return FileTwoLine()
	case "fileUnknowFill":
		return FileUnknowFill()
	case "fileUnknowLine":
		return FileUnknowLine()
	case "fileUploadFill":
		return FileUploadFill()
	case "fileUploadLine":
		return FileUploadLine()
	case "fileUserFill":
		return FileUserFill()
	case "fileUserLine":
		return FileUserLine()
	case "fileVideoFill":
		return FileVideoFill()
	case "fileVideoLine":
		return FileVideoLine()
	case "fileWarningFill":
		return FileWarningFill()
	case "fileWarningLine":
		return FileWarningLine()
	case "fileWordFill":
		return FileWordFill()
	case "fileWordLine":
		return FileWordLine()
	case "fileWordTwoFill":
		return FileWordTwoFill()
	case "fileWordTwoLine":
		return FileWordTwoLine()
	case "fileZipFill":
		return FileZipFill()
	case "fileZipLine":
		return FileZipLine()
	case "filmFill":
		return FilmFill()
	case "filmLine":
		return FilmLine()
	case "filterFill":
		return FilterFill()
	case "filterLine":
		return FilterLine()
	case "filterOffFill":
		return FilterOffFill()
	case "filterOffLine":
		return FilterOffLine()
	case "filterThreeFill":
		return FilterThreeFill()
	case "filterThreeLine":
		return FilterThreeLine()
	case "filterTwoFill":
		return FilterTwoFill()
	case "filterTwoLine":
		return FilterTwoLine()
	case "findReplaceFill":
		return FindReplaceFill()
	case "findReplaceLine":
		return FindReplaceLine()
	case "finderFill":
		return FinderFill()
	case "finderLine":
		return FinderLine()
	case "fingerprintFill":
		return FingerprintFill()
	case "fingerprintLine":
		return FingerprintLine()
	case "fingerprintTwoFill":
		return FingerprintTwoFill()
	case "fingerprintTwoLine":
		return FingerprintTwoLine()
	case "fireFill":
		return FireFill()
	case "fireLine":
		return FireLine()
	case "firefoxFill":
		return FirefoxFill()
	case "firefoxLine":
		return FirefoxLine()
	case "firstAidKitFill":
		return FirstAidKitFill()
	case "firstAidKitLine":
		return FirstAidKitLine()
	case "flagFill":
		return FlagFill()
	case "flagLine":
		return FlagLine()
	case "flagTwoFill":
		return FlagTwoFill()
	case "flagTwoLine":
		return FlagTwoLine()
	case "flashlightFill":
		return FlashlightFill()
	case "flashlightLine":
		return FlashlightLine()
	case "flaskFill":
		return FlaskFill()
	case "flaskLine":
		return FlaskLine()
	case "flickrFill":
		return FlickrFill()
	case "flickrLine":
		return FlickrLine()
	case "flightLandFill":
		return FlightLandFill()
	case "flightLandLine":
		return FlightLandLine()
	case "flightTakeoffFill":
		return FlightTakeoffFill()
	case "flightTakeoffLine":
		return FlightTakeoffLine()
	case "floodFill":
		return FloodFill()
	case "floodLine":
		return FloodLine()
	case "flowChart":
		return FlowChart()
	case "flutterFill":
		return FlutterFill()
	case "flutterLine":
		return FlutterLine()
	case "focusFill":
		return FocusFill()
	case "focusLine":
		return FocusLine()
	case "focusThreeFill":
		return FocusThreeFill()
	case "focusThreeLine":
		return FocusThreeLine()
	case "focusTwoFill":
		return FocusTwoFill()
	case "focusTwoLine":
		return FocusTwoLine()
	case "foggyFill":
		return FoggyFill()
	case "foggyLine":
		return FoggyLine()
	case "folderAddFill":
		return FolderAddFill()
	case "folderAddLine":
		return FolderAddLine()
	case "folderChartFill":
		return FolderChartFill()
	case "folderChartLine":
		return FolderChartLine()
	case "folderChartTwoFill":
		return FolderChartTwoFill()
	case "folderChartTwoLine":
		return FolderChartTwoLine()
	case "folderDownloadFill":
		return FolderDownloadFill()
	case "folderDownloadLine":
		return FolderDownloadLine()
	case "folderFill":
		return FolderFill()
	case "folderFiveFill":
		return FolderFiveFill()
	case "folderFiveLine":
		return FolderFiveLine()
	case "folderForbidFill":
		return FolderForbidFill()
	case "folderForbidLine":
		return FolderForbidLine()
	case "folderFourFill":
		return FolderFourFill()
	case "folderFourLine":
		return FolderFourLine()
	case "folderHistoryFill":
		return FolderHistoryFill()
	case "folderHistoryLine":
		return FolderHistoryLine()
	case "folderImageFill":
		return FolderImageFill()
	case "folderImageLine":
		return FolderImageLine()
	case "folderInfoFill":
		return FolderInfoFill()
	case "folderInfoLine":
		return FolderInfoLine()
	case "folderKeyholeFill":
		return FolderKeyholeFill()
	case "folderKeyholeLine":
		return FolderKeyholeLine()
	case "folderLine":
		return FolderLine()
	case "folderLockFill":
		return FolderLockFill()
	case "folderLockLine":
		return FolderLockLine()
	case "folderMusicFill":
		return FolderMusicFill()
	case "folderMusicLine":
		return FolderMusicLine()
	case "folderOpenFill":
		return FolderOpenFill()
	case "folderOpenLine":
		return FolderOpenLine()
	case "folderReceivedFill":
		return FolderReceivedFill()
	case "folderReceivedLine":
		return FolderReceivedLine()
	case "folderReduceFill":
		return FolderReduceFill()
	case "folderReduceLine":
		return FolderReduceLine()
	case "folderSettingsFill":
		return FolderSettingsFill()
	case "folderSettingsLine":
		return FolderSettingsLine()
	case "folderSharedFill":
		return FolderSharedFill()
	case "folderSharedLine":
		return FolderSharedLine()
	case "folderShieldFill":
		return FolderShieldFill()
	case "folderShieldLine":
		return FolderShieldLine()
	case "folderShieldTwoFill":
		return FolderShieldTwoFill()
	case "folderShieldTwoLine":
		return FolderShieldTwoLine()
	case "folderThreeFill":
		return FolderThreeFill()
	case "folderThreeLine":
		return FolderThreeLine()
	case "folderTransferFill":
		return FolderTransferFill()
	case "folderTransferLine":
		return FolderTransferLine()
	case "folderTwoFill":
		return FolderTwoFill()
	case "folderTwoLine":
		return FolderTwoLine()
	case "folderUnknowFill":
		return FolderUnknowFill()
	case "folderUnknowLine":
		return FolderUnknowLine()
	case "folderUploadFill":
		return FolderUploadFill()
	case "folderUploadLine":
		return FolderUploadLine()
	case "folderUserFill":
		return FolderUserFill()
	case "folderUserLine":
		return FolderUserLine()
	case "folderVideoFill":
		return FolderVideoFill()
	case "folderVideoLine":
		return FolderVideoLine()
	case "folderWarningFill":
		return FolderWarningFill()
	case "folderWarningLine":
		return FolderWarningLine()
	case "folderZipFill":
		return FolderZipFill()
	case "folderZipLine":
		return FolderZipLine()
	case "foldersFill":
		return FoldersFill()
	case "foldersLine":
		return FoldersLine()
	case "fontColor":
		return FontColor()
	case "fontFamily":
		return FontFamily()
	case "fontMono":
		return FontMono()
	case "fontSans":
		return FontSans()
	case "fontSansSerif":
		return FontSansSerif()
	case "fontSize":
		return FontSize()
	case "fontSizeTwo":
		return FontSizeTwo()
	case "footballFill":
		return FootballFill()
	case "footballLine":
		return FootballLine()
	case "footprintFill":
		return FootprintFill()
	case "footprintLine":
		return FootprintLine()
	case "forbidFill":
		return ForbidFill()
	case "forbidLine":
		return ForbidLine()
	case "forbidTwoFill":
		return ForbidTwoFill()
	case "forbidTwoLine":
		return ForbidTwoLine()
	case "formatClear":
		return FormatClear()
	case "forwardFifteenFill":
		return ForwardFifteenFill()
	case "forwardFifteenLine":
		return ForwardFifteenLine()
	case "forwardFiveFill":
		return ForwardFiveFill()
	case "forwardFiveLine":
		return ForwardFiveLine()
	case "forwardTenFill":
		return ForwardTenFill()
	case "forwardTenLine":
		return ForwardTenLine()
	case "forwardThirtyFill":
		return ForwardThirtyFill()
	case "forwardThirtyLine":
		return ForwardThirtyLine()
	case "fourKFill":
		return FourKFill()
	case "fourKLine":
		return FourKLine()
	case "fridgeFill":
		return FridgeFill()
	case "fridgeLine":
		return FridgeLine()
	case "fullscreenExitFill":
		return FullscreenExitFill()
	case "fullscreenExitLine":
		return FullscreenExitLine()
	case "fullscreenFill":
		return FullscreenFill()
	case "fullscreenLine":
		return FullscreenLine()
	case "functionFill":
		return FunctionFill()
	case "functionLine":
		return FunctionLine()
	case "functions":
		return Functions()
	case "fundsBoxFill":
		return FundsBoxFill()
	case "fundsBoxLine":
		return FundsBoxLine()
	case "fundsFill":
		return FundsFill()
	case "fundsLine":
		return FundsLine()
	case "galleryFill":
		return GalleryFill()
	case "galleryLine":
		return GalleryLine()
	case "galleryUploadFill":
		return GalleryUploadFill()
	case "galleryUploadLine":
		return GalleryUploadLine()
	case "gameFill":
		return GameFill()
	case "gameLine":
		return GameLine()
	case "gamepadFill":
		return GamepadFill()
	case "gamepadLine":
		return GamepadLine()
	case "gasStationFill":
		return GasStationFill()
	case "gasStationLine":
		return GasStationLine()
	case "gatsbyFill":
		return GatsbyFill()
	case "gatsbyLine":
		return GatsbyLine()
	case "genderlessFill":
		return GenderlessFill()
	case "genderlessLine":
		return GenderlessLine()
	case "ghostFill":
		return GhostFill()
	case "ghostLine":
		return GhostLine()
	case "ghostSmileFill":
		return GhostSmileFill()
	case "ghostSmileLine":
		return GhostSmileLine()
	case "ghostTwoFill":
		return GhostTwoFill()
	case "ghostTwoLine":
		return GhostTwoLine()
	case "giftFill":
		return GiftFill()
	case "giftLine":
		return GiftLine()
	case "giftTwoFill":
		return GiftTwoFill()
	case "giftTwoLine":
		return GiftTwoLine()
	case "gitBranchFill":
		return GitBranchFill()
	case "gitBranchLine":
		return GitBranchLine()
	case "gitClosePullRequestFill":
		return GitClosePullRequestFill()
	case "gitClosePullRequestLine":
		return GitClosePullRequestLine()
	case "gitCommitFill":
		return GitCommitFill()
	case "gitCommitLine":
		return GitCommitLine()
	case "gitMergeFill":
		return GitMergeFill()
	case "gitMergeLine":
		return GitMergeLine()
	case "gitPullRequestFill":
		return GitPullRequestFill()
	case "gitPullRequestLine":
		return GitPullRequestLine()
	case "gitRepositoryCommitsFill":
		return GitRepositoryCommitsFill()
	case "gitRepositoryCommitsLine":
		return GitRepositoryCommitsLine()
	case "gitRepositoryFill":
		return GitRepositoryFill()
	case "gitRepositoryLine":
		return GitRepositoryLine()
	case "gitRepositoryPrivateFill":
		return GitRepositoryPrivateFill()
	case "gitRepositoryPrivateLine":
		return GitRepositoryPrivateLine()
	case "githubFill":
		return GithubFill()
	case "githubLine":
		return GithubLine()
	case "gitlabFill":
		return GitlabFill()
	case "gitlabLine":
		return GitlabLine()
	case "globalFill":
		return GlobalFill()
	case "globalLine":
		return GlobalLine()
	case "globeFill":
		return GlobeFill()
	case "globeLine":
		return GlobeLine()
	case "gobletFill":
		return GobletFill()
	case "gobletLine":
		return GobletLine()
	case "googleFill":
		return GoogleFill()
	case "googleLine":
		return GoogleLine()
	case "googlePlayFill":
		return GooglePlayFill()
	case "googlePlayLine":
		return GooglePlayLine()
	case "governmentFill":
		return GovernmentFill()
	case "governmentLine":
		return GovernmentLine()
	case "gpsFill":
		return GpsFill()
	case "gpsLine":
		return GpsLine()
	case "gradienterFill":
		return GradienterFill()
	case "gradienterLine":
		return GradienterLine()
	case "graduationCapFill":
		return GraduationCapFill()
	case "graduationCapLine":
		return GraduationCapLine()
	case "gridFill":
		return GridFill()
	case "gridLine":
		return GridLine()
	case "groupFill":
		return GroupFill()
	case "groupLine":
		return GroupLine()
	case "groupTwoFill":
		return GroupTwoFill()
	case "groupTwoLine":
		return GroupTwoLine()
	case "guideFill":
		return GuideFill()
	case "guideLine":
		return GuideLine()
	case "hFive":
		return HFive()
	case "hFour":
		return HFour()
	case "hOne":
		return HOne()
	case "hSix":
		return HSix()
	case "hThree":
		return HThree()
	case "hTwo":
		return HTwo()
	case "hailFill":
		return HailFill()
	case "hailLine":
		return HailLine()
	case "hammerFill":
		return HammerFill()
	case "hammerLine":
		return HammerLine()
	case "handCoinFill":
		return HandCoinFill()
	case "handCoinLine":
		return HandCoinLine()
	case "handHeartFill":
		return HandHeartFill()
	case "handHeartLine":
		return HandHeartLine()
	case "handSanitizerFill":
		return HandSanitizerFill()
	case "handSanitizerLine":
		return HandSanitizerLine()
	case "handbagFill":
		return HandbagFill()
	case "handbagLine":
		return HandbagLine()
	case "hardDriveFill":
		return HardDriveFill()
	case "hardDriveLine":
		return HardDriveLine()
	case "hardDriveThreeFill":
		return HardDriveThreeFill()
	case "hardDriveThreeLine":
		return HardDriveThreeLine()
	case "hardDriveTwoFill":
		return HardDriveTwoFill()
	case "hardDriveTwoLine":
		return HardDriveTwoLine()
	case "hashtag":
		return Hashtag()
	case "hazeFill":
		return HazeFill()
	case "hazeLine":
		return HazeLine()
	case "hazeTwoFill":
		return HazeTwoFill()
	case "hazeTwoLine":
		return HazeTwoLine()
	case "hdFill":
		return HdFill()
	case "hdLine":
		return HdLine()
	case "heading":
		return Heading()
	case "headphoneFill":
		return HeadphoneFill()
	case "headphoneLine":
		return HeadphoneLine()
	case "healthBookFill":
		return HealthBookFill()
	case "healthBookLine":
		return HealthBookLine()
	case "heartAddFill":
		return HeartAddFill()
	case "heartAddLine":
		return HeartAddLine()
	case "heartFill":
		return HeartFill()
	case "heartLine":
		return HeartLine()
	case "heartPulseFill":
		return HeartPulseFill()
	case "heartPulseLine":
		return HeartPulseLine()
	case "heartThreeFill":
		return HeartThreeFill()
	case "heartThreeLine":
		return HeartThreeLine()
	case "heartTwoFill":
		return HeartTwoFill()
	case "heartTwoLine":
		return HeartTwoLine()
	case "heartsFill":
		return HeartsFill()
	case "heartsLine":
		return HeartsLine()
	case "heavyShowersFill":
		return HeavyShowersFill()
	case "heavyShowersLine":
		return HeavyShowersLine()
	case "hexagonFill":
		return HexagonFill()
	case "hexagonLine":
		return HexagonLine()
	case "historyFill":
		return HistoryFill()
	case "historyLine":
		return HistoryLine()
	case "homeEightFill":
		return HomeEightFill()
	case "homeEightLine":
		return HomeEightLine()
	case "homeFill":
		return HomeFill()
	case "homeFiveFill":
		return HomeFiveFill()
	case "homeFiveLine":
		return HomeFiveLine()
	case "homeFourFill":
		return HomeFourFill()
	case "homeFourLine":
		return HomeFourLine()
	case "homeGearFill":
		return HomeGearFill()
	case "homeGearLine":
		return HomeGearLine()
	case "homeHeartFill":
		return HomeHeartFill()
	case "homeHeartLine":
		return HomeHeartLine()
	case "homeLine":
		return HomeLine()
	case "homeOfficeFill":
		return HomeOfficeFill()
	case "homeOfficeLine":
		return HomeOfficeLine()
	case "homeSevenFill":
		return HomeSevenFill()
	case "homeSevenLine":
		return HomeSevenLine()
	case "homeSixFill":
		return HomeSixFill()
	case "homeSixLine":
		return HomeSixLine()
	case "homeSmileFill":
		return HomeSmileFill()
	case "homeSmileLine":
		return HomeSmileLine()
	case "homeSmileTwoFill":
		return HomeSmileTwoFill()
	case "homeSmileTwoLine":
		return HomeSmileTwoLine()
	case "homeThreeFill":
		return HomeThreeFill()
	case "homeThreeLine":
		return HomeThreeLine()
	case "homeTwoFill":
		return HomeTwoFill()
	case "homeTwoLine":
		return HomeTwoLine()
	case "homeWifiFill":
		return HomeWifiFill()
	case "homeWifiLine":
		return HomeWifiLine()
	case "honorOfKingsFill":
		return HonorOfKingsFill()
	case "honorOfKingsLine":
		return HonorOfKingsLine()
	case "honourFill":
		return HonourFill()
	case "honourLine":
		return HonourLine()
	case "hospitalFill":
		return HospitalFill()
	case "hospitalLine":
		return HospitalLine()
	case "hotelBedFill":
		return HotelBedFill()
	case "hotelBedLine":
		return HotelBedLine()
	case "hotelFill":
		return HotelFill()
	case "hotelLine":
		return HotelLine()
	case "hotspotFill":
		return HotspotFill()
	case "hotspotLine":
		return HotspotLine()
	case "hourglassFill":
		return HourglassFill()
	case "hourglassLine":
		return HourglassLine()
	case "hourglassTwoFill":
		return HourglassTwoFill()
	case "hourglassTwoLine":
		return HourglassTwoLine()
	case "hqFill":
		return HqFill()
	case "hqLine":
		return HqLine()
	case "htmlFiveFill":
		return HtmlFiveFill()
	case "htmlFiveLine":
		return HtmlFiveLine()
	case "ieFill":
		return IeFill()
	case "ieLine":
		return IeLine()
	case "imageAddFill":
		return ImageAddFill()
	case "imageAddLine":
		return ImageAddLine()
	case "imageEditFill":
		return ImageEditFill()
	case "imageEditLine":
		return ImageEditLine()
	case "imageFill":
		return ImageFill()
	case "imageLine":
		return ImageLine()
	case "imageTwoFill":
		return ImageTwoFill()
	case "imageTwoLine":
		return ImageTwoLine()
	case "inboxArchiveFill":
		return InboxArchiveFill()
	case "inboxArchiveLine":
		return InboxArchiveLine()
	case "inboxFill":
		return InboxFill()
	case "inboxLine":
		return InboxLine()
	case "inboxTwoFill":
		return InboxTwoFill()
	case "inboxTwoLine":
		return InboxTwoLine()
	case "inboxUnarchiveFill":
		return InboxUnarchiveFill()
	case "inboxUnarchiveLine":
		return InboxUnarchiveLine()
	case "increaseDecreaseFill":
		return IncreaseDecreaseFill()
	case "increaseDecreaseLine":
		return IncreaseDecreaseLine()
	case "indentDecrease":
		return IndentDecrease()
	case "indentIncrease":
		return IndentIncrease()
	case "indeterminateCircleFill":
		return IndeterminateCircleFill()
	case "indeterminateCircleLine":
		return IndeterminateCircleLine()
	case "infinityFill":
		return InfinityFill()
	case "infinityLine":
		return InfinityLine()
	case "informationFill":
		return InformationFill()
	case "informationLine":
		return InformationLine()
	case "infraredThermometerFill":
		return InfraredThermometerFill()
	case "infraredThermometerLine":
		return InfraredThermometerLine()
	case "inkBottleFill":
		return InkBottleFill()
	case "inkBottleLine":
		return InkBottleLine()
	case "inputCursorMove":
		return InputCursorMove()
	case "inputMethodFill":
		return InputMethodFill()
	case "inputMethodLine":
		return InputMethodLine()
	case "insertColumnLeft":
		return InsertColumnLeft()
	case "insertColumnRight":
		return InsertColumnRight()
	case "insertRowBottom":
		return InsertRowBottom()
	case "insertRowTop":
		return InsertRowTop()
	case "instagramFill":
		return InstagramFill()
	case "instagramLine":
		return InstagramLine()
	case "installFill":
		return InstallFill()
	case "installLine":
		return InstallLine()
	case "instanceFill":
		return InstanceFill()
	case "instanceLine":
		return InstanceLine()
	case "invisionFill":
		return InvisionFill()
	case "invisionLine":
		return InvisionLine()
	case "italic":
		return Italic()
	case "javascriptFill":
		return JavascriptFill()
	case "javascriptLine":
		return JavascriptLine()
	case "kakaoTalkFill":
		return KakaoTalkFill()
	case "kakaoTalkLine":
		return KakaoTalkLine()
	case "keyFill":
		return KeyFill()
	case "keyLine":
		return KeyLine()
	case "keyTwoFill":
		return KeyTwoFill()
	case "keyTwoLine":
		return KeyTwoLine()
	case "keyboardBoxFill":
		return KeyboardBoxFill()
	case "keyboardBoxLine":
		return KeyboardBoxLine()
	case "keyboardFill":
		return KeyboardFill()
	case "keyboardLine":
		return KeyboardLine()
	case "keynoteFill":
		return KeynoteFill()
	case "keynoteLine":
		return KeynoteLine()
	case "kickFill":
		return KickFill()
	case "kickLine":
		return KickLine()
	case "knifeBloodFill":
		return KnifeBloodFill()
	case "knifeBloodLine":
		return KnifeBloodLine()
	case "knifeFill":
		return KnifeFill()
	case "knifeLine":
		return KnifeLine()
	case "landscapeFill":
		return LandscapeFill()
	case "landscapeLine":
		return LandscapeLine()
	case "layoutBottomFill":
		return LayoutBottomFill()
	case "layoutBottomLine":
		return LayoutBottomLine()
	case "layoutBottomTwoFill":
		return LayoutBottomTwoFill()
	case "layoutBottomTwoLine":
		return LayoutBottomTwoLine()
	case "layoutColumnFill":
		return LayoutColumnFill()
	case "layoutColumnLine":
		return LayoutColumnLine()
	case "layoutFill":
		return LayoutFill()
	case "layoutFiveFill":
		return LayoutFiveFill()
	case "layoutFiveLine":
		return LayoutFiveLine()
	case "layoutFourFill":
		return LayoutFourFill()
	case "layoutFourLine":
		return LayoutFourLine()
	case "layoutGridFill":
		return LayoutGridFill()
	case "layoutGridLine":
		return LayoutGridLine()
	case "layoutLeftFill":
		return LayoutLeftFill()
	case "layoutLeftLine":
		return LayoutLeftLine()
	case "layoutLeftTwoFill":
		return LayoutLeftTwoFill()
	case "layoutLeftTwoLine":
		return LayoutLeftTwoLine()
	case "layoutLine":
		return LayoutLine()
	case "layoutMasonryFill":
		return LayoutMasonryFill()
	case "layoutMasonryLine":
		return LayoutMasonryLine()
	case "layoutRightFill":
		return LayoutRightFill()
	case "layoutRightLine":
		return LayoutRightLine()
	case "layoutRightTwoFill":
		return LayoutRightTwoFill()
	case "layoutRightTwoLine":
		return LayoutRightTwoLine()
	case "layoutRowFill":
		return LayoutRowFill()
	case "layoutRowLine":
		return LayoutRowLine()
	case "layoutSixFill":
		return LayoutSixFill()
	case "layoutSixLine":
		return LayoutSixLine()
	case "layoutThreeFill":
		return LayoutThreeFill()
	case "layoutThreeLine":
		return LayoutThreeLine()
	case "layoutTopFill":
		return LayoutTopFill()
	case "layoutTopLine":
		return LayoutTopLine()
	case "layoutTopTwoFill":
		return LayoutTopTwoFill()
	case "layoutTopTwoLine":
		return LayoutTopTwoLine()
	case "layoutTwoFill":
		return LayoutTwoFill()
	case "layoutTwoLine":
		return LayoutTwoLine()
	case "leafFill":
		return LeafFill()
	case "leafLine":
		return LeafLine()
	case "lifebuoyFill":
		return LifebuoyFill()
	case "lifebuoyLine":
		return LifebuoyLine()
	case "lightbulbFill":
		return LightbulbFill()
	case "lightbulbFlashFill":
		return LightbulbFlashFill()
	case "lightbulbFlashLine":
		return LightbulbFlashLine()
	case "lightbulbLine":
		return LightbulbLine()
	case "lineChartFill":
		return LineChartFill()
	case "lineChartLine":
		return LineChartLine()
	case "lineFill":
		return LineFill()
	case "lineHeight":
		return LineHeight()
	case "lineLine":
		return LineLine()
	case "link":
		return Link()
	case "linkM":
		return LinkM()
	case "linkUnlink":
		return LinkUnlink()
	case "linkUnlinkM":
		return LinkUnlinkM()
	case "linkedinBoxFill":
		return LinkedinBoxFill()
	case "linkedinBoxLine":
		return LinkedinBoxLine()
	case "linkedinFill":
		return LinkedinFill()
	case "linkedinLine":
		return LinkedinLine()
	case "linksFill":
		return LinksFill()
	case "linksLine":
		return LinksLine()
	case "listCheck":
		return ListCheck()
	case "listCheckThree":
		return ListCheckThree()
	case "listCheckTwo":
		return ListCheckTwo()
	case "listIndefinite":
		return ListIndefinite()
	case "listOrdered":
		return ListOrdered()
	case "listOrderedTwo":
		return ListOrderedTwo()
	case "listRadio":
		return ListRadio()
	case "listSettingsFill":
		return ListSettingsFill()
	case "listSettingsLine":
		return ListSettingsLine()
	case "listUnordered":
		return ListUnordered()
	case "liveFill":
		return LiveFill()
	case "liveLine":
		return LiveLine()
	case "loaderFill":
		return LoaderFill()
	case "loaderFiveFill":
		return LoaderFiveFill()
	case "loaderFiveLine":
		return LoaderFiveLine()
	case "loaderFourFill":
		return LoaderFourFill()
	case "loaderFourLine":
		return LoaderFourLine()
	case "loaderLine":
		return LoaderLine()
	case "loaderThreeFill":
		return LoaderThreeFill()
	case "loaderThreeLine":
		return LoaderThreeLine()
	case "loaderTwoFill":
		return LoaderTwoFill()
	case "loaderTwoLine":
		return LoaderTwoLine()
	case "lockFill":
		return LockFill()
	case "lockLine":
		return LockLine()
	case "lockPasswordFill":
		return LockPasswordFill()
	case "lockPasswordLine":
		return LockPasswordLine()
	case "lockTwoFill":
		return LockTwoFill()
	case "lockTwoLine":
		return LockTwoLine()
	case "lockUnlockFill":
		return LockUnlockFill()
	case "lockUnlockLine":
		return LockUnlockLine()
	case "loginBoxFill":
		return LoginBoxFill()
	case "loginBoxLine":
		return LoginBoxLine()
	case "loginCircleFill":
		return LoginCircleFill()
	case "loginCircleLine":
		return LoginCircleLine()
	case "logoutBoxFill":
		return LogoutBoxFill()
	case "logoutBoxLine":
		return LogoutBoxLine()
	case "logoutBoxRFill":
		return LogoutBoxRFill()
	case "logoutBoxRLine":
		return LogoutBoxRLine()
	case "logoutCircleFill":
		return LogoutCircleFill()
	case "logoutCircleLine":
		return LogoutCircleLine()
	case "logoutCircleRFill":
		return LogoutCircleRFill()
	case "logoutCircleRLine":
		return LogoutCircleRLine()
	case "loopLeftFill":
		return LoopLeftFill()
	case "loopLeftLine":
		return LoopLeftLine()
	case "loopRightFill":
		return LoopRightFill()
	case "loopRightLine":
		return LoopRightLine()
	case "luggageCartFill":
		return LuggageCartFill()
	case "luggageCartLine":
		return LuggageCartLine()
	case "luggageDepositFill":
		return LuggageDepositFill()
	case "luggageDepositLine":
		return LuggageDepositLine()
	case "lungsFill":
		return LungsFill()
	case "lungsLine":
		return LungsLine()
	case "macFill":
		return MacFill()
	case "macLine":
		return MacLine()
	case "macbookFill":
		return MacbookFill()
	case "macbookLine":
		return MacbookLine()
	case "magicFill":
		return MagicFill()
	case "magicLine":
		return MagicLine()
	case "mailAddFill":
		return MailAddFill()
	case "mailAddLine":
		return MailAddLine()
	case "mailCheckFill":
		return MailCheckFill()
	case "mailCheckLine":
		return MailCheckLine()
	case "mailCloseFill":
		return MailCloseFill()
	case "mailCloseLine":
		return MailCloseLine()
	case "mailDownloadFill":
		return MailDownloadFill()
	case "mailDownloadLine":
		return MailDownloadLine()
	case "mailFill":
		return MailFill()
	case "mailForbidFill":
		return MailForbidFill()
	case "mailForbidLine":
		return MailForbidLine()
	case "mailLine":
		return MailLine()
	case "mailLockFill":
		return MailLockFill()
	case "mailLockLine":
		return MailLockLine()
	case "mailOpenFill":
		return MailOpenFill()
	case "mailOpenLine":
		return MailOpenLine()
	case "mailSendFill":
		return MailSendFill()
	case "mailSendLine":
		return MailSendLine()
	case "mailSettingsFill":
		return MailSettingsFill()
	case "mailSettingsLine":
		return MailSettingsLine()
	case "mailStarFill":
		return MailStarFill()
	case "mailStarLine":
		return MailStarLine()
	case "mailUnreadFill":
		return MailUnreadFill()
	case "mailUnreadLine":
		return MailUnreadLine()
	case "mailVolumeFill":
		return MailVolumeFill()
	case "mailVolumeLine":
		return MailVolumeLine()
	case "mapFill":
		return MapFill()
	case "mapLine":
		return MapLine()
	case "mapPinAddFill":
		return MapPinAddFill()
	case "mapPinAddLine":
		return MapPinAddLine()
	case "mapPinFill":
		return MapPinFill()
	case "mapPinFiveFill":
		return MapPinFiveFill()
	case "mapPinFiveLine":
		return MapPinFiveLine()
	case "mapPinFourFill":
		return MapPinFourFill()
	case "mapPinFourLine":
		return MapPinFourLine()
	case "mapPinLine":
		return MapPinLine()
	case "mapPinRangeFill":
		return MapPinRangeFill()
	case "mapPinRangeLine":
		return MapPinRangeLine()
	case "mapPinThreeFill":
		return MapPinThreeFill()
	case "mapPinThreeLine":
		return MapPinThreeLine()
	case "mapPinTimeFill":
		return MapPinTimeFill()
	case "mapPinTimeLine":
		return MapPinTimeLine()
	case "mapPinTwoFill":
		return MapPinTwoFill()
	case "mapPinTwoLine":
		return MapPinTwoLine()
	case "mapPinUserFill":
		return MapPinUserFill()
	case "mapPinUserLine":
		return MapPinUserLine()
	case "mapTwoFill":
		return MapTwoFill()
	case "mapTwoLine":
		return MapTwoLine()
	case "markPenFill":
		return MarkPenFill()
	case "markPenLine":
		return MarkPenLine()
	case "markdownFill":
		return MarkdownFill()
	case "markdownLine":
		return MarkdownLine()
	case "markupFill":
		return MarkupFill()
	case "markupLine":
		return MarkupLine()
	case "mastercardFill":
		return MastercardFill()
	case "mastercardLine":
		return MastercardLine()
	case "mastodonFill":
		return MastodonFill()
	case "mastodonLine":
		return MastodonLine()
	case "medalFill":
		return MedalFill()
	case "medalLine":
		return MedalLine()
	case "medalTwoFill":
		return MedalTwoFill()
	case "medalTwoLine":
		return MedalTwoLine()
	case "medicineBottleFill":
		return MedicineBottleFill()
	case "medicineBottleLine":
		return MedicineBottleLine()
	case "mediumFill":
		return MediumFill()
	case "mediumLine":
		return MediumLine()
	case "megaphoneFill":
		return MegaphoneFill()
	case "megaphoneLine":
		return MegaphoneLine()
	case "memoriesFill":
		return MemoriesFill()
	case "memoriesLine":
		return MemoriesLine()
	case "menFill":
		return MenFill()
	case "menLine":
		return MenLine()
	case "mentalHealthFill":
		return MentalHealthFill()
	case "mentalHealthLine":
		return MentalHealthLine()
	case "menuAddFill":
		return MenuAddFill()
	case "menuAddLine":
		return MenuAddLine()
	case "menuFill":
		return MenuFill()
	case "menuFiveFill":
		return MenuFiveFill()
	case "menuFiveLine":
		return MenuFiveLine()
	case "menuFoldFill":
		return MenuFoldFill()
	case "menuFoldLine":
		return MenuFoldLine()
	case "menuFourFill":
		return MenuFourFill()
	case "menuFourLine":
		return MenuFourLine()
	case "menuLine":
		return MenuLine()
	case "menuSearchFill":
		return MenuSearchFill()
	case "menuSearchLine":
		return MenuSearchLine()
	case "menuThreeFill":
		return MenuThreeFill()
	case "menuThreeLine":
		return MenuThreeLine()
	case "menuTwoFill":
		return MenuTwoFill()
	case "menuTwoLine":
		return MenuTwoLine()
	case "menuUnfoldFill":
		return MenuUnfoldFill()
	case "menuUnfoldLine":
		return MenuUnfoldLine()
	case "mergeCellsHorizontal":
		return MergeCellsHorizontal()
	case "mergeCellsVertical":
		return MergeCellsVertical()
	case "messageFill":
		return MessageFill()
	case "messageLine":
		return MessageLine()
	case "messageThreeFill":
		return MessageThreeFill()
	case "messageThreeLine":
		return MessageThreeLine()
	case "messageTwoFill":
		return MessageTwoFill()
	case "messageTwoLine":
		return MessageTwoLine()
	case "messengerFill":
		return MessengerFill()
	case "messengerLine":
		return MessengerLine()
	case "metaFill":
		return MetaFill()
	case "metaLine":
		return MetaLine()
	case "meteorFill":
		return MeteorFill()
	case "meteorLine":
		return MeteorLine()
	case "micFill":
		return MicFill()
	case "micLine":
		return MicLine()
	case "micOffFill":
		return MicOffFill()
	case "micOffLine":
		return MicOffLine()
	case "micTwoFill":
		return MicTwoFill()
	case "micTwoLine":
		return MicTwoLine()
	case "mickeyFill":
		return MickeyFill()
	case "mickeyLine":
		return MickeyLine()
	case "microscopeFill":
		return MicroscopeFill()
	case "microscopeLine":
		return MicroscopeLine()
	case "microsoftFill":
		return MicrosoftFill()
	case "microsoftLine":
		return MicrosoftLine()
	case "microsoftLoopFill":
		return MicrosoftLoopFill()
	case "microsoftLoopLine":
		return MicrosoftLoopLine()
	case "mindMap":
		return MindMap()
	case "miniProgramFill":
		return MiniProgramFill()
	case "miniProgramLine":
		return MiniProgramLine()
	case "mistFill":
		return MistFill()
	case "mistLine":
		return MistLine()
	case "moneyCnyBoxFill":
		return MoneyCnyBoxFill()
	case "moneyCnyBoxLine":
		return MoneyCnyBoxLine()
	case "moneyCnyCircleFill":
		return MoneyCnyCircleFill()
	case "moneyCnyCircleLine":
		return MoneyCnyCircleLine()
	case "moneyDollarBoxFill":
		return MoneyDollarBoxFill()
	case "moneyDollarBoxLine":
		return MoneyDollarBoxLine()
	case "moneyDollarCircleFill":
		return MoneyDollarCircleFill()
	case "moneyDollarCircleLine":
		return MoneyDollarCircleLine()
	case "moneyEuroBoxFill":
		return MoneyEuroBoxFill()
	case "moneyEuroBoxLine":
		return MoneyEuroBoxLine()
	case "moneyEuroCircleFill":
		return MoneyEuroCircleFill()
	case "moneyEuroCircleLine":
		return MoneyEuroCircleLine()
	case "moneyPoundBoxFill":
		return MoneyPoundBoxFill()
	case "moneyPoundBoxLine":
		return MoneyPoundBoxLine()
	case "moneyPoundCircleFill":
		return MoneyPoundCircleFill()
	case "moneyPoundCircleLine":
		return MoneyPoundCircleLine()
	case "moonClearFill":
		return MoonClearFill()
	case "moonClearLine":
		return MoonClearLine()
	case "moonCloudyFill":
		return MoonCloudyFill()
	case "moonCloudyLine":
		return MoonCloudyLine()
	case "moonFill":
		return MoonFill()
	case "moonFoggyFill":
		return MoonFoggyFill()
	case "moonFoggyLine":
		return MoonFoggyLine()
	case "moonLine":
		return MoonLine()
	case "moreFill":
		return MoreFill()
	case "moreLine":
		return MoreLine()
	case "moreTwoFill":
		return MoreTwoFill()
	case "moreTwoLine":
		return MoreTwoLine()
	case "motorbikeFill":
		return MotorbikeFill()
	case "motorbikeLine":
		return MotorbikeLine()
	case "mouseFill":
		return MouseFill()
	case "mouseLine":
		return MouseLine()
	case "movieFill":
		return MovieFill()
	case "movieLine":
		return MovieLine()
	case "movieTwoFill":
		return MovieTwoFill()
	case "movieTwoLine":
		return MovieTwoLine()
	case "musicFill":
		return MusicFill()
	case "musicLine":
		return MusicLine()
	case "musicTwoFill":
		return MusicTwoFill()
	case "musicTwoLine":
		return MusicTwoLine()
	case "mvFill":
		return MvFill()
	case "mvLine":
		return MvLine()
	case "navigationFill":
		return NavigationFill()
	case "navigationLine":
		return NavigationLine()
	case "neteaseCloudMusicFill":
		return NeteaseCloudMusicFill()
	case "neteaseCloudMusicLine":
		return NeteaseCloudMusicLine()
	case "netflixFill":
		return NetflixFill()
	case "netflixLine":
		return NetflixLine()
	case "newspaperFill":
		return NewspaperFill()
	case "newspaperLine":
		return NewspaperLine()
	case "nftFill":
		return NftFill()
	case "nftLine":
		return NftLine()
	case "nodeTree":
		return NodeTree()
	case "notificationBadgeFill":
		return NotificationBadgeFill()
	case "notificationBadgeLine":
		return NotificationBadgeLine()
	case "notificationFill":
		return NotificationFill()
	case "notificationFourFill":
		return NotificationFourFill()
	case "notificationFourLine":
		return NotificationFourLine()
	case "notificationLine":
		return NotificationLine()
	case "notificationOffFill":
		return NotificationOffFill()
	case "notificationOffLine":
		return NotificationOffLine()
	case "notificationThreeFill":
		return NotificationThreeFill()
	case "notificationThreeLine":
		return NotificationThreeLine()
	case "notificationTwoFill":
		return NotificationTwoFill()
	case "notificationTwoLine":
		return NotificationTwoLine()
	case "notionFill":
		return NotionFill()
	case "notionLine":
		return NotionLine()
	case "npmjsFill":
		return NpmjsFill()
	case "npmjsLine":
		return NpmjsLine()
	case "numberEight":
		return NumberEight()
	case "numberFive":
		return NumberFive()
	case "numberFour":
		return NumberFour()
	case "numberNine":
		return NumberNine()
	case "numberOne":
		return NumberOne()
	case "numberSeven":
		return NumberSeven()
	case "numberSix":
		return NumberSix()
	case "numberThree":
		return NumberThree()
	case "numberTwo":
		return NumberTwo()
	case "numberZero":
		return NumberZero()
	case "numbersFill":
		return NumbersFill()
	case "numbersLine":
		return NumbersLine()
	case "nurseFill":
		return NurseFill()
	case "nurseLine":
		return NurseLine()
	case "octagonFill":
		return OctagonFill()
	case "octagonLine":
		return OctagonLine()
	case "oilFill":
		return OilFill()
	case "oilLine":
		return OilLine()
	case "omega":
		return Omega()
	case "openArmFill":
		return OpenArmFill()
	case "openArmLine":
		return OpenArmLine()
	case "openSourceFill":
		return OpenSourceFill()
	case "openSourceLine":
		return OpenSourceLine()
	case "openaiFill":
		return OpenaiFill()
	case "openaiLine":
		return OpenaiLine()
	case "openbaseFill":
		return OpenbaseFill()
	case "openbaseLine":
		return OpenbaseLine()
	case "operaFill":
		return OperaFill()
	case "operaLine":
		return OperaLine()
	case "orderPlayFill":
		return OrderPlayFill()
	case "orderPlayLine":
		return OrderPlayLine()
	case "organizationChart":
		return OrganizationChart()
	case "outletFill":
		return OutletFill()
	case "outletLine":
		return OutletLine()
	case "outletTwoFill":
		return OutletTwoFill()
	case "outletTwoLine":
		return OutletTwoLine()
	case "overline":
		return Overline()
	case "pTwoPFill":
		return PTwoPFill()
	case "pTwoPLine":
		return PTwoPLine()
	case "pageSeparator":
		return PageSeparator()
	case "pagesFill":
		return PagesFill()
	case "pagesLine":
		return PagesLine()
	case "paintBrushFill":
		return PaintBrushFill()
	case "paintBrushLine":
		return PaintBrushLine()
	case "paintFill":
		return PaintFill()
	case "paintLine":
		return PaintLine()
	case "paletteFill":
		return PaletteFill()
	case "paletteLine":
		return PaletteLine()
	case "pantoneFill":
		return PantoneFill()
	case "pantoneLine":
		return PantoneLine()
	case "paragraph":
		return Paragraph()
	case "parentFill":
		return ParentFill()
	case "parentLine":
		return ParentLine()
	case "parenthesesFill":
		return ParenthesesFill()
	case "parenthesesLine":
		return ParenthesesLine()
	case "parkingBoxFill":
		return ParkingBoxFill()
	case "parkingBoxLine":
		return ParkingBoxLine()
	case "parkingFill":
		return ParkingFill()
	case "parkingLine":
		return ParkingLine()
	case "passExpiredFill":
		return PassExpiredFill()
	case "passExpiredLine":
		return PassExpiredLine()
	case "passPendingFill":
		return PassPendingFill()
	case "passPendingLine":
		return PassPendingLine()
	case "passValidFill":
		return PassValidFill()
	case "passValidLine":
		return PassValidLine()
	case "passportFill":
		return PassportFill()
	case "passportLine":
		return PassportLine()
	case "patreonFill":
		return PatreonFill()
	case "patreonLine":
		return PatreonLine()
	case "pauseCircleFill":
		return PauseCircleFill()
	case "pauseCircleLine":
		return PauseCircleLine()
	case "pauseFill":
		return PauseFill()
	case "pauseLine":
		return PauseLine()
	case "pauseMiniFill":
		return PauseMiniFill()
	case "pauseMiniLine":
		return PauseMiniLine()
	case "paypalFill":
		return PaypalFill()
	case "paypalLine":
		return PaypalLine()
	case "penNibFill":
		return PenNibFill()
	case "penNibLine":
		return PenNibLine()
	case "pencilFill":
		return PencilFill()
	case "pencilLine":
		return PencilLine()
	case "pencilRulerFill":
		return PencilRulerFill()
	case "pencilRulerLine":
		return PencilRulerLine()
	case "pencilRulerTwoFill":
		return PencilRulerTwoFill()
	case "pencilRulerTwoLine":
		return PencilRulerTwoLine()
	case "pentagonFill":
		return PentagonFill()
	case "pentagonLine":
		return PentagonLine()
	case "percentFill":
		return PercentFill()
	case "percentLine":
		return PercentLine()
	case "phoneCameraFill":
		return PhoneCameraFill()
	case "phoneCameraLine":
		return PhoneCameraLine()
	case "phoneFill":
		return PhoneFill()
	case "phoneFindFill":
		return PhoneFindFill()
	case "phoneFindLine":
		return PhoneFindLine()
	case "phoneLine":
		return PhoneLine()
	case "phoneLockFill":
		return PhoneLockFill()
	case "phoneLockLine":
		return PhoneLockLine()
	case "pictureInPictureExitFill":
		return PictureInPictureExitFill()
	case "pictureInPictureExitLine":
		return PictureInPictureExitLine()
	case "pictureInPictureFill":
		return PictureInPictureFill()
	case "pictureInPictureLine":
		return PictureInPictureLine()
	case "pictureInPictureTwoFill":
		return PictureInPictureTwoFill()
	case "pictureInPictureTwoLine":
		return PictureInPictureTwoLine()
	case "pieChartBoxFill":
		return PieChartBoxFill()
	case "pieChartBoxLine":
		return PieChartBoxLine()
	case "pieChartFill":
		return PieChartFill()
	case "pieChartLine":
		return PieChartLine()
	case "pieChartTwoFill":
		return PieChartTwoFill()
	case "pieChartTwoLine":
		return PieChartTwoLine()
	case "pinDistanceFill":
		return PinDistanceFill()
	case "pinDistanceLine":
		return PinDistanceLine()
	case "pingPongFill":
		return PingPongFill()
	case "pingPongLine":
		return PingPongLine()
	case "pinterestFill":
		return PinterestFill()
	case "pinterestLine":
		return PinterestLine()
	case "pinyinInput":
		return PinyinInput()
	case "pixelfedFill":
		return PixelfedFill()
	case "pixelfedLine":
		return PixelfedLine()
	case "planeFill":
		return PlaneFill()
	case "planeLine":
		return PlaneLine()
	case "planetFill":
		return PlanetFill()
	case "planetLine":
		return PlanetLine()
	case "plantFill":
		return PlantFill()
	case "plantLine":
		return PlantLine()
	case "playCircleFill":
		return PlayCircleFill()
	case "playCircleLine":
		return PlayCircleLine()
	case "playFill":
		return PlayFill()
	case "playLine":
		return PlayLine()
	case "playListAddFill":
		return PlayListAddFill()
	case "playListAddLine":
		return PlayListAddLine()
	case "playListFill":
		return PlayListFill()
	case "playListLine":
		return PlayListLine()
	case "playListTwoFill":
		return PlayListTwoFill()
	case "playListTwoLine":
		return PlayListTwoLine()
	case "playMiniFill":
		return PlayMiniFill()
	case "playMiniLine":
		return PlayMiniLine()
	case "playstationFill":
		return PlaystationFill()
	case "playstationLine":
		return PlaystationLine()
	case "plugFill":
		return PlugFill()
	case "plugLine":
		return PlugLine()
	case "plugTwoFill":
		return PlugTwoFill()
	case "plugTwoLine":
		return PlugTwoLine()
	case "polaroidFill":
		return PolaroidFill()
	case "polaroidLine":
		return PolaroidLine()
	case "polaroidTwoFill":
		return PolaroidTwoFill()
	case "polaroidTwoLine":
		return PolaroidTwoLine()
	case "policeCarFill":
		return PoliceCarFill()
	case "policeCarLine":
		return PoliceCarLine()
	case "presentationFill":
		return PresentationFill()
	case "presentationLine":
		return PresentationLine()
	case "priceTagFill":
		return PriceTagFill()
	case "priceTagLine":
		return PriceTagLine()
	case "priceTagThreeFill":
		return PriceTagThreeFill()
	case "priceTagThreeLine":
		return PriceTagThreeLine()
	case "priceTagTwoFill":
		return PriceTagTwoFill()
	case "priceTagTwoLine":
		return PriceTagTwoLine()
	case "printerCloudFill":
		return PrinterCloudFill()
	case "printerCloudLine":
		return PrinterCloudLine()
	case "printerFill":
		return PrinterFill()
	case "printerLine":
		return PrinterLine()
	case "productHuntFill":
		return ProductHuntFill()
	case "productHuntLine":
		return ProductHuntLine()
	case "profileFill":
		return ProfileFill()
	case "profileLine":
		return ProfileLine()
	case "prohibitedFill":
		return ProhibitedFill()
	case "prohibitedLine":
		return ProhibitedLine()
	case "projectorFill":
		return ProjectorFill()
	case "projectorLine":
		return ProjectorLine()
	case "projectorTwoFill":
		return ProjectorTwoFill()
	case "projectorTwoLine":
		return ProjectorTwoLine()
	case "psychotherapyFill":
		return PsychotherapyFill()
	case "psychotherapyLine":
		return PsychotherapyLine()
	case "pulseFill":
		return PulseFill()
	case "pulseLine":
		return PulseLine()
	case "pushpinFill":
		return PushpinFill()
	case "pushpinLine":
		return PushpinLine()
	case "pushpinTwoFill":
		return PushpinTwoFill()
	case "pushpinTwoLine":
		return PushpinTwoLine()
	case "qqFill":
		return QqFill()
	case "qqLine":
		return QqLine()
	case "qrCodeFill":
		return QrCodeFill()
	case "qrCodeLine":
		return QrCodeLine()
	case "qrScanFill":
		return QrScanFill()
	case "qrScanLine":
		return QrScanLine()
	case "qrScanTwoFill":
		return QrScanTwoFill()
	case "qrScanTwoLine":
		return QrScanTwoLine()
	case "questionAnswerFill":
		return QuestionAnswerFill()
	case "questionAnswerLine":
		return QuestionAnswerLine()
	case "questionFill":
		return QuestionFill()
	case "questionLine":
		return QuestionLine()
	case "questionMark":
		return QuestionMark()
	case "questionnaireFill":
		return QuestionnaireFill()
	case "questionnaireLine":
		return QuestionnaireLine()
	case "quillPenFill":
		return QuillPenFill()
	case "quillPenLine":
		return QuillPenLine()
	case "quoteText":
		return QuoteText()
	case "radarFill":
		return RadarFill()
	case "radarLine":
		return RadarLine()
	case "radioButtonFill":
		return RadioButtonFill()
	case "radioButtonLine":
		return RadioButtonLine()
	case "radioFill":
		return RadioFill()
	case "radioLine":
		return RadioLine()
	case "radioTwoFill":
		return RadioTwoFill()
	case "radioTwoLine":
		return RadioTwoLine()
	case "rainbowFill":
		return RainbowFill()
	case "rainbowLine":
		return RainbowLine()
	case "rainyFill":
		return RainyFill()
	case "rainyLine":
		return RainyLine()
	case "reactjsFill":
		return ReactjsFill()
	case "reactjsLine":
		return ReactjsLine()
	case "recordCircleFill":
		return RecordCircleFill()
	case "recordCircleLine":
		return RecordCircleLine()
	case "recordMailFill":
		return RecordMailFill()
	case "recordMailLine":
		return RecordMailLine()
	case "rectangleFill":
		return RectangleFill()
	case "rectangleLine":
		return RectangleLine()
	case "recycleFill":
		return RecycleFill()
	case "recycleLine":
		return RecycleLine()
	case "redPacketFill":
		return RedPacketFill()
	case "redPacketLine":
		return RedPacketLine()
	case "redditFill":
		return RedditFill()
	case "redditLine":
		return RedditLine()
	case "refreshFill":
		return RefreshFill()
	case "refreshLine":
		return RefreshLine()
	case "refundFill":
		return RefundFill()
	case "refundLine":
		return RefundLine()
	case "refundTwoFill":
		return RefundTwoFill()
	case "refundTwoLine":
		return RefundTwoLine()
	case "registeredFill":
		return RegisteredFill()
	case "registeredLine":
		return RegisteredLine()
	case "remixiconFill":
		return RemixiconFill()
	case "remixiconLine":
		return RemixiconLine()
	case "remoteControlFill":
		return RemoteControlFill()
	case "remoteControlLine":
		return RemoteControlLine()
	case "remoteControlTwoFill":
		return RemoteControlTwoFill()
	case "remoteControlTwoLine":
		return RemoteControlTwoLine()
	case "repeatFill":
		return RepeatFill()
	case "repeatLine":
		return RepeatLine()
	case "repeatOneFill":
		return RepeatOneFill()
	case "repeatOneLine":
		return RepeatOneLine()
	case "repeatTwoFill":
		return RepeatTwoFill()
	case "repeatTwoLine":
		return RepeatTwoLine()
	case "replayFifteenFill":
		return ReplayFifteenFill()
	case "replayFifteenLine":
		return ReplayFifteenLine()
	case "replayFiveFill":
		return ReplayFiveFill()
	case "replayFiveLine":
		return ReplayFiveLine()
	case "replayTenFill":
		return ReplayTenFill()
	case "replayTenLine":
		return ReplayTenLine()
	case "replayThirtyFill":
		return ReplayThirtyFill()
	case "replayThirtyLine":
		return ReplayThirtyLine()
	case "replyAllFill":
		return ReplyAllFill()
	case "replyAllLine":
		return ReplyAllLine()
	case "replyFill":
		return ReplyFill()
	case "replyLine":
		return ReplyLine()
	case "reservedFill":
		return ReservedFill()
	case "reservedLine":
		return ReservedLine()
	case "restTimeFill":
		return RestTimeFill()
	case "restTimeLine":
		return RestTimeLine()
	case "restartFill":
		return RestartFill()
	case "restartLine":
		return RestartLine()
	case "restaurantFill":
		return RestaurantFill()
	case "restaurantLine":
		return RestaurantLine()
	case "restaurantTwoFill":
		return RestaurantTwoFill()
	case "restaurantTwoLine":
		return RestaurantTwoLine()
	case "rewindFill":
		return RewindFill()
	case "rewindLine":
		return RewindLine()
	case "rewindMiniFill":
		return RewindMiniFill()
	case "rewindMiniLine":
		return RewindMiniLine()
	case "rfidFill":
		return RfidFill()
	case "rfidLine":
		return RfidLine()
	case "rhythmFill":
		return RhythmFill()
	case "rhythmLine":
		return RhythmLine()
	case "ridingFill":
		return RidingFill()
	case "ridingLine":
		return RidingLine()
	case "roadMapFill":
		return RoadMapFill()
	case "roadMapLine":
		return RoadMapLine()
	case "roadsterFill":
		return RoadsterFill()
	case "roadsterLine":
		return RoadsterLine()
	case "robotFill":
		return RobotFill()
	case "robotLine":
		return RobotLine()
	case "robotTwoFill":
		return RobotTwoFill()
	case "robotTwoLine":
		return RobotTwoLine()
	case "rocketFill":
		return RocketFill()
	case "rocketLine":
		return RocketLine()
	case "rocketTwoFill":
		return RocketTwoFill()
	case "rocketTwoLine":
		return RocketTwoLine()
	case "rotateLockFill":
		return RotateLockFill()
	case "rotateLockLine":
		return RotateLockLine()
	case "roundedCorner":
		return RoundedCorner()
	case "routeFill":
		return RouteFill()
	case "routeLine":
		return RouteLine()
	case "routerFill":
		return RouterFill()
	case "routerLine":
		return RouterLine()
	case "rssFill":
		return RssFill()
	case "rssLine":
		return RssLine()
	case "rulerFill":
		return RulerFill()
	case "rulerLine":
		return RulerLine()
	case "rulerTwoFill":
		return RulerTwoFill()
	case "rulerTwoLine":
		return RulerTwoLine()
	case "runFill":
		return RunFill()
	case "runLine":
		return RunLine()
	case "safariFill":
		return SafariFill()
	case "safariLine":
		return SafariLine()
	case "safeFill":
		return SafeFill()
	case "safeLine":
		return SafeLine()
	case "safeTwoFill":
		return SafeTwoFill()
	case "safeTwoLine":
		return SafeTwoLine()
	case "sailboatFill":
		return SailboatFill()
	case "sailboatLine":
		return SailboatLine()
	case "saveFill":
		return SaveFill()
	case "saveLine":
		return SaveLine()
	case "saveThreeFill":
		return SaveThreeFill()
	case "saveThreeLine":
		return SaveThreeLine()
	case "saveTwoFill":
		return SaveTwoFill()
	case "saveTwoLine":
		return SaveTwoLine()
	case "scalesFill":
		return ScalesFill()
	case "scalesLine":
		return ScalesLine()
	case "scalesThreeFill":
		return ScalesThreeFill()
	case "scalesThreeLine":
		return ScalesThreeLine()
	case "scalesTwoFill":
		return ScalesTwoFill()
	case "scalesTwoLine":
		return ScalesTwoLine()
	case "scanFill":
		return ScanFill()
	case "scanLine":
		return ScanLine()
	case "scanTwoFill":
		return ScanTwoFill()
	case "scanTwoLine":
		return ScanTwoLine()
	case "schoolFill":
		return SchoolFill()
	case "schoolLine":
		return SchoolLine()
	case "scissorsCutFill":
		return ScissorsCutFill()
	case "scissorsCutLine":
		return ScissorsCutLine()
	case "scissorsFill":
		return ScissorsFill()
	case "scissorsLine":
		return ScissorsLine()
	case "scissorsTwoFill":
		return ScissorsTwoFill()
	case "scissorsTwoLine":
		return ScissorsTwoLine()
	case "screenshotFill":
		return ScreenshotFill()
	case "screenshotLine":
		return ScreenshotLine()
	case "screenshotTwoFill":
		return ScreenshotTwoFill()
	case "screenshotTwoLine":
		return ScreenshotTwoLine()
	case "sdCardFill":
		return SdCardFill()
	case "sdCardLine":
		return SdCardLine()
	case "sdCardMiniFill":
		return SdCardMiniFill()
	case "sdCardMiniLine":
		return SdCardMiniLine()
	case "searchEyeFill":
		return SearchEyeFill()
	case "searchEyeLine":
		return SearchEyeLine()
	case "searchFill":
		return SearchFill()
	case "searchLine":
		return SearchLine()
	case "searchTwoFill":
		return SearchTwoFill()
	case "searchTwoLine":
		return SearchTwoLine()
	case "securePaymentFill":
		return SecurePaymentFill()
	case "securePaymentLine":
		return SecurePaymentLine()
	case "seedlingFill":
		return SeedlingFill()
	case "seedlingLine":
		return SeedlingLine()
	case "sendBackward":
		return SendBackward()
	case "sendPlaneFill":
		return SendPlaneFill()
	case "sendPlaneLine":
		return SendPlaneLine()
	case "sendPlaneTwoFill":
		return SendPlaneTwoFill()
	case "sendPlaneTwoLine":
		return SendPlaneTwoLine()
	case "sendToBack":
		return SendToBack()
	case "sensorFill":
		return SensorFill()
	case "sensorLine":
		return SensorLine()
	case "seoFill":
		return SeoFill()
	case "seoLine":
		return SeoLine()
	case "separator":
		return Separator()
	case "serverFill":
		return ServerFill()
	case "serverLine":
		return ServerLine()
	case "serviceFill":
		return ServiceFill()
	case "serviceLine":
		return ServiceLine()
	case "settingsFill":
		return SettingsFill()
	case "settingsFiveFill":
		return SettingsFiveFill()
	case "settingsFiveLine":
		return SettingsFiveLine()
	case "settingsFourFill":
		return SettingsFourFill()
	case "settingsFourLine":
		return SettingsFourLine()
	case "settingsLine":
		return SettingsLine()
	case "settingsSixFill":
		return SettingsSixFill()
	case "settingsSixLine":
		return SettingsSixLine()
	case "settingsThreeFill":
		return SettingsThreeFill()
	case "settingsThreeLine":
		return SettingsThreeLine()
	case "settingsTwoFill":
		return SettingsTwoFill()
	case "settingsTwoLine":
		return SettingsTwoLine()
	case "shakeHandsFill":
		return ShakeHandsFill()
	case "shakeHandsLine":
		return ShakeHandsLine()
	case "shapeFill":
		return ShapeFill()
	case "shapeLine":
		return ShapeLine()
	case "shapeTwoFill":
		return ShapeTwoFill()
	case "shapeTwoLine":
		return ShapeTwoLine()
	case "shapesFill":
		return ShapesFill()
	case "shapesLine":
		return ShapesLine()
	case "shareBoxFill":
		return ShareBoxFill()
	case "shareBoxLine":
		return ShareBoxLine()
	case "shareCircleFill":
		return ShareCircleFill()
	case "shareCircleLine":
		return ShareCircleLine()
	case "shareFill":
		return ShareFill()
	case "shareForwardBoxFill":
		return ShareForwardBoxFill()
	case "shareForwardBoxLine":
		return ShareForwardBoxLine()
	case "shareForwardFill":
		return ShareForwardFill()
	case "shareForwardLine":
		return ShareForwardLine()
	case "shareForwardTwoFill":
		return ShareForwardTwoFill()
	case "shareForwardTwoLine":
		return ShareForwardTwoLine()
	case "shareLine":
		return ShareLine()
	case "shieldCheckFill":
		return ShieldCheckFill()
	case "shieldCheckLine":
		return ShieldCheckLine()
	case "shieldCrossFill":
		return ShieldCrossFill()
	case "shieldCrossLine":
		return ShieldCrossLine()
	case "shieldFill":
		return ShieldFill()
	case "shieldFlashFill":
		return ShieldFlashFill()
	case "shieldFlashLine":
		return ShieldFlashLine()
	case "shieldKeyholeFill":
		return ShieldKeyholeFill()
	case "shieldKeyholeLine":
		return ShieldKeyholeLine()
	case "shieldLine":
		return ShieldLine()
	case "shieldStarFill":
		return ShieldStarFill()
	case "shieldStarLine":
		return ShieldStarLine()
	case "shieldUserFill":
		return ShieldUserFill()
	case "shieldUserLine":
		return ShieldUserLine()
	case "shiningFill":
		return ShiningFill()
	case "shiningLine":
		return ShiningLine()
	case "shiningTwoFill":
		return ShiningTwoFill()
	case "shiningTwoLine":
		return ShiningTwoLine()
	case "shipFill":
		return ShipFill()
	case "shipLine":
		return ShipLine()
	case "shipTwoFill":
		return ShipTwoFill()
	case "shipTwoLine":
		return ShipTwoLine()
	case "shirtFill":
		return ShirtFill()
	case "shirtLine":
		return ShirtLine()
	case "shoppingBagFill":
		return ShoppingBagFill()
	case "shoppingBagLine":
		return ShoppingBagLine()
	case "shoppingBagThreeFill":
		return ShoppingBagThreeFill()
	case "shoppingBagThreeLine":
		return ShoppingBagThreeLine()
	case "shoppingBagTwoFill":
		return ShoppingBagTwoFill()
	case "shoppingBagTwoLine":
		return ShoppingBagTwoLine()
	case "shoppingBasketFill":
		return ShoppingBasketFill()
	case "shoppingBasketLine":
		return ShoppingBasketLine()
	case "shoppingBasketTwoFill":
		return ShoppingBasketTwoFill()
	case "shoppingBasketTwoLine":
		return ShoppingBasketTwoLine()
	case "shoppingCartFill":
		return ShoppingCartFill()
	case "shoppingCartLine":
		return ShoppingCartLine()
	case "shoppingCartTwoFill":
		return ShoppingCartTwoFill()
	case "shoppingCartTwoLine":
		return ShoppingCartTwoLine()
	case "showersFill":
		return ShowersFill()
	case "showersLine":
		return ShowersLine()
	case "shuffleFill":
		return ShuffleFill()
	case "shuffleLine":
		return ShuffleLine()
	case "shutDownFill":
		return ShutDownFill()
	case "shutDownLine":
		return ShutDownLine()
	case "sideBarFill":
		return SideBarFill()
	case "sideBarLine":
		return SideBarLine()
	case "signalTowerFill":
		return SignalTowerFill()
	case "signalTowerLine":
		return SignalTowerLine()
	case "signalWifiErrorFill":
		return SignalWifiErrorFill()
	case "signalWifiErrorLine":
		return SignalWifiErrorLine()
	case "signalWifiFill":
		return SignalWifiFill()
	case "signalWifiLine":
		return SignalWifiLine()
	case "signalWifiOffFill":
		return SignalWifiOffFill()
	case "signalWifiOffLine":
		return SignalWifiOffLine()
	case "signalWifiOneFill":
		return SignalWifiOneFill()
	case "signalWifiOneLine":
		return SignalWifiOneLine()
	case "signalWifiThreeFill":
		return SignalWifiThreeFill()
	case "signalWifiThreeLine":
		return SignalWifiThreeLine()
	case "signalWifiTwoFill":
		return SignalWifiTwoFill()
	case "signalWifiTwoLine":
		return SignalWifiTwoLine()
	case "simCardFill":
		return SimCardFill()
	case "simCardLine":
		return SimCardLine()
	case "simCardTwoFill":
		return SimCardTwoFill()
	case "simCardTwoLine":
		return SimCardTwoLine()
	case "singleQuotesL":
		return SingleQuotesL()
	case "singleQuotesR":
		return SingleQuotesR()
	case "sipFill":
		return SipFill()
	case "sipLine":
		return SipLine()
	case "sketching":
		return Sketching()
	case "skipBackFill":
		return SkipBackFill()
	case "skipBackLine":
		return SkipBackLine()
	case "skipBackMiniFill":
		return SkipBackMiniFill()
	case "skipBackMiniLine":
		return SkipBackMiniLine()
	case "skipDownFill":
		return SkipDownFill()
	case "skipDownLine":
		return SkipDownLine()
	case "skipForwardFill":
		return SkipForwardFill()
	case "skipForwardLine":
		return SkipForwardLine()
	case "skipForwardMiniFill":
		return SkipForwardMiniFill()
	case "skipForwardMiniLine":
		return SkipForwardMiniLine()
	case "skipLeftFill":
		return SkipLeftFill()
	case "skipLeftLine":
		return SkipLeftLine()
	case "skipRightFill":
		return SkipRightFill()
	case "skipRightLine":
		return SkipRightLine()
	case "skipUpFill":
		return SkipUpFill()
	case "skipUpLine":
		return SkipUpLine()
	case "skullFill":
		return SkullFill()
	case "skullLine":
		return SkullLine()
	case "skullTwoFill":
		return SkullTwoFill()
	case "skullTwoLine":
		return SkullTwoLine()
	case "skypeFill":
		return SkypeFill()
	case "skypeLine":
		return SkypeLine()
	case "slackFill":
		return SlackFill()
	case "slackLine":
		return SlackLine()
	case "slashCommands":
		return SlashCommands()
	case "slashCommandsTwo":
		return SlashCommandsTwo()
	case "sliceFill":
		return SliceFill()
	case "sliceLine":
		return SliceLine()
	case "slideshowFill":
		return SlideshowFill()
	case "slideshowFourFill":
		return SlideshowFourFill()
	case "slideshowFourLine":
		return SlideshowFourLine()
	case "slideshowLine":
		return SlideshowLine()
	case "slideshowThreeFill":
		return SlideshowThreeFill()
	case "slideshowThreeLine":
		return SlideshowThreeLine()
	case "slideshowTwoFill":
		return SlideshowTwoFill()
	case "slideshowTwoLine":
		return SlideshowTwoLine()
	case "slowDownFill":
		return SlowDownFill()
	case "slowDownLine":
		return SlowDownLine()
	case "smartphoneFill":
		return SmartphoneFill()
	case "smartphoneLine":
		return SmartphoneLine()
	case "snapchatFill":
		return SnapchatFill()
	case "snapchatLine":
		return SnapchatLine()
	case "snowyFill":
		return SnowyFill()
	case "snowyLine":
		return SnowyLine()
	case "sortAsc":
		return SortAsc()
	case "sortDesc":
		return SortDesc()
	case "soundModuleFill":
		return SoundModuleFill()
	case "soundModuleLine":
		return SoundModuleLine()
	case "soundcloudFill":
		return SoundcloudFill()
	case "soundcloudLine":
		return SoundcloudLine()
	case "space":
		return Space()
	case "spaceShipFill":
		return SpaceShipFill()
	case "spaceShipLine":
		return SpaceShipLine()
	case "spamFill":
		return SpamFill()
	case "spamLine":
		return SpamLine()
	case "spamThreeFill":
		return SpamThreeFill()
	case "spamThreeLine":
		return SpamThreeLine()
	case "spamTwoFill":
		return SpamTwoFill()
	case "spamTwoLine":
		return SpamTwoLine()
	case "sparklingFill":
		return SparklingFill()
	case "sparklingLine":
		return SparklingLine()
	case "sparklingTwoFill":
		return SparklingTwoFill()
	case "sparklingTwoLine":
		return SparklingTwoLine()
	case "speakFill":
		return SpeakFill()
	case "speakLine":
		return SpeakLine()
	case "speakerFill":
		return SpeakerFill()
	case "speakerLine":
		return SpeakerLine()
	case "speakerThreeFill":
		return SpeakerThreeFill()
	case "speakerThreeLine":
		return SpeakerThreeLine()
	case "speakerTwoFill":
		return SpeakerTwoFill()
	case "speakerTwoLine":
		return SpeakerTwoLine()
	case "spectrumFill":
		return SpectrumFill()
	case "spectrumLine":
		return SpectrumLine()
	case "speedFill":
		return SpeedFill()
	case "speedLine":
		return SpeedLine()
	case "speedMiniFill":
		return SpeedMiniFill()
	case "speedMiniLine":
		return SpeedMiniLine()
	case "speedUpFill":
		return SpeedUpFill()
	case "speedUpLine":
		return SpeedUpLine()
	case "splitCellsHorizontal":
		return SplitCellsHorizontal()
	case "splitCellsVertical":
		return SplitCellsVertical()
	case "spotifyFill":
		return SpotifyFill()
	case "spotifyLine":
		return SpotifyLine()
	case "spyFill":
		return SpyFill()
	case "spyLine":
		return SpyLine()
	case "squareFill":
		return SquareFill()
	case "squareLine":
		return SquareLine()
	case "stackFill":
		return StackFill()
	case "stackLine":
		return StackLine()
	case "stackOverflowFill":
		return StackOverflowFill()
	case "stackOverflowLine":
		return StackOverflowLine()
	case "stackshareFill":
		return StackshareFill()
	case "stackshareLine":
		return StackshareLine()
	case "starFill":
		return StarFill()
	case "starHalfFill":
		return StarHalfFill()
	case "starHalfLine":
		return StarHalfLine()
	case "starHalfSFill":
		return StarHalfSFill()
	case "starHalfSLine":
		return StarHalfSLine()
	case "starLine":
		return StarLine()
	case "starSFill":
		return StarSFill()
	case "starSLine":
		return StarSLine()
	case "starSmileFill":
		return StarSmileFill()
	case "starSmileLine":
		return StarSmileLine()
	case "steamFill":
		return SteamFill()
	case "steamLine":
		return SteamLine()
	case "steeringFill":
		return SteeringFill()
	case "steeringLine":
		return SteeringLine()
	case "steeringTwoFill":
		return SteeringTwoFill()
	case "steeringTwoLine":
		return SteeringTwoLine()
	case "stethoscopeFill":
		return StethoscopeFill()
	case "stethoscopeLine":
		return StethoscopeLine()
	case "stickyNoteFill":
		return StickyNoteFill()
	case "stickyNoteLine":
		return StickyNoteLine()
	case "stickyNoteTwoFill":
		return StickyNoteTwoFill()
	case "stickyNoteTwoLine":
		return StickyNoteTwoLine()
	case "stockFill":
		return StockFill()
	case "stockLine":
		return StockLine()
	case "stopCircleFill":
		return StopCircleFill()
	case "stopCircleLine":
		return StopCircleLine()
	case "stopFill":
		return StopFill()
	case "stopLine":
		return StopLine()
	case "stopMiniFill":
		return StopMiniFill()
	case "stopMiniLine":
		return StopMiniLine()
	case "storeFill":
		return StoreFill()
	case "storeLine":
		return StoreLine()
	case "storeThreeFill":
		return StoreThreeFill()
	case "storeThreeLine":
		return StoreThreeLine()
	case "storeTwoFill":
		return StoreTwoFill()
	case "storeTwoLine":
		return StoreTwoLine()
	case "strikethrough":
		return Strikethrough()
	case "strikethroughTwo":
		return StrikethroughTwo()
	case "subscript":
		return Subscript()
	case "subscriptTwo":
		return SubscriptTwo()
	case "subtractFill":
		return SubtractFill()
	case "subtractLine":
		return SubtractLine()
	case "subwayFill":
		return SubwayFill()
	case "subwayLine":
		return SubwayLine()
	case "subwayWifiFill":
		return SubwayWifiFill()
	case "subwayWifiLine":
		return SubwayWifiLine()
	case "suitcaseFill":
		return SuitcaseFill()
	case "suitcaseLine":
		return SuitcaseLine()
	case "suitcaseThreeFill":
		return SuitcaseThreeFill()
	case "suitcaseThreeLine":
		return SuitcaseThreeLine()
	case "suitcaseTwoFill":
		return SuitcaseTwoFill()
	case "suitcaseTwoLine":
		return SuitcaseTwoLine()
	case "sunCloudyFill":
		return SunCloudyFill()
	case "sunCloudyLine":
		return SunCloudyLine()
	case "sunFill":
		return SunFill()
	case "sunFoggyFill":
		return SunFoggyFill()
	case "sunFoggyLine":
		return SunFoggyLine()
	case "sunLine":
		return SunLine()
	case "supabaseFill":
		return SupabaseFill()
	case "supabaseLine":
		return SupabaseLine()
	case "superscript":
		return Superscript()
	case "superscriptTwo":
		return SuperscriptTwo()
	case "surgicalMaskFill":
		return SurgicalMaskFill()
	case "surgicalMaskLine":
		return SurgicalMaskLine()
	case "surroundSoundFill":
		return SurroundSoundFill()
	case "surroundSoundLine":
		return SurroundSoundLine()
	case "surveyFill":
		return SurveyFill()
	case "surveyLine":
		return SurveyLine()
	case "swapBoxFill":
		return SwapBoxFill()
	case "swapBoxLine":
		return SwapBoxLine()
	case "swapFill":
		return SwapFill()
	case "swapLine":
		return SwapLine()
	case "switchFill":
		return SwitchFill()
	case "switchLine":
		return SwitchLine()
	case "swordFill":
		return SwordFill()
	case "swordLine":
		return SwordLine()
	case "syringeFill":
		return SyringeFill()
	case "syringeLine":
		return SyringeLine()
	case "tBoxFill":
		return TBoxFill()
	case "tBoxLine":
		return TBoxLine()
	case "tShirtAirFill":
		return TShirtAirFill()
	case "tShirtAirLine":
		return TShirtAirLine()
	case "tShirtFill":
		return TShirtFill()
	case "tShirtLine":
		return TShirtLine()
	case "tShirtTwoFill":
		return TShirtTwoFill()
	case "tShirtTwoLine":
		return TShirtTwoLine()
	case "tableAltFill":
		return TableAltFill()
	case "tableAltLine":
		return TableAltLine()
	case "tableFill":
		return TableFill()
	case "tableLine":
		return TableLine()
	case "tableTwo":
		return TableTwo()
	case "tabletFill":
		return TabletFill()
	case "tabletLine":
		return TabletLine()
	case "takeawayFill":
		return TakeawayFill()
	case "takeawayLine":
		return TakeawayLine()
	case "taobaoFill":
		return TaobaoFill()
	case "taobaoLine":
		return TaobaoLine()
	case "tapeFill":
		return TapeFill()
	case "tapeLine":
		return TapeLine()
	case "taskFill":
		return TaskFill()
	case "taskLine":
		return TaskLine()
	case "taxiFill":
		return TaxiFill()
	case "taxiLine":
		return TaxiLine()
	case "taxiWifiFill":
		return TaxiWifiFill()
	case "taxiWifiLine":
		return TaxiWifiLine()
	case "teamFill":
		return TeamFill()
	case "teamLine":
		return TeamLine()
	case "telegramFill":
		return TelegramFill()
	case "telegramLine":
		return TelegramLine()
	case "tempColdFill":
		return TempColdFill()
	case "tempColdLine":
		return TempColdLine()
	case "tempHotFill":
		return TempHotFill()
	case "tempHotLine":
		return TempHotLine()
	case "tentFill":
		return TentFill()
	case "tentLine":
		return TentLine()
	case "terminalBoxFill":
		return TerminalBoxFill()
	case "terminalBoxLine":
		return TerminalBoxLine()
	case "terminalFill":
		return TerminalFill()
	case "terminalLine":
		return TerminalLine()
	case "terminalWindowFill":
		return TerminalWindowFill()
	case "terminalWindowLine":
		return TerminalWindowLine()
	case "testTubeFill":
		return TestTubeFill()
	case "testTubeLine":
		return TestTubeLine()
	case "text":
		return Text()
	case "textDirectionL":
		return TextDirectionL()
	case "textDirectionR":
		return TextDirectionR()
	case "textSpacing":
		return TextSpacing()
	case "textWrap":
		return TextWrap()
	case "thermometerFill":
		return ThermometerFill()
	case "thermometerLine":
		return ThermometerLine()
	case "threadsFill":
		return ThreadsFill()
	case "threadsLine":
		return ThreadsLine()
	case "thumbDownFill":
		return ThumbDownFill()
	case "thumbDownLine":
		return ThumbDownLine()
	case "thumbUpFill":
		return ThumbUpFill()
	case "thumbUpLine":
		return ThumbUpLine()
	case "thunderstormsFill":
		return ThunderstormsFill()
	case "thunderstormsLine":
		return ThunderstormsLine()
	case "ticketFill":
		return TicketFill()
	case "ticketLine":
		return TicketLine()
	case "ticketTwoFill":
		return TicketTwoFill()
	case "ticketTwoLine":
		return TicketTwoLine()
	case "tiktokFill":
		return TiktokFill()
	case "tiktokLine":
		return TiktokLine()
	case "timeFill":
		return TimeFill()
	case "timeLine":
		return TimeLine()
	case "timerFill":
		return TimerFill()
	case "timerFlashFill":
		return TimerFlashFill()
	case "timerFlashLine":
		return TimerFlashLine()
	case "timerLine":
		return TimerLine()
	case "timerTwoFill":
		return TimerTwoFill()
	case "timerTwoLine":
		return TimerTwoLine()
	case "todoFill":
		return TodoFill()
	case "todoLine":
		return TodoLine()
	case "toggleFill":
		return ToggleFill()
	case "toggleLine":
		return ToggleLine()
	case "tokenSwapFill":
		return TokenSwapFill()
	case "tokenSwapLine":
		return TokenSwapLine()
	case "toolsFill":
		return ToolsFill()
	case "toolsLine":
		return ToolsLine()
	case "tornadoFill":
		return TornadoFill()
	case "tornadoLine":
		return TornadoLine()
	case "trademarkFill":
		return TrademarkFill()
	case "trademarkLine":
		return TrademarkLine()
	case "trafficLightFill":
		return TrafficLightFill()
	case "trafficLightLine":
		return TrafficLightLine()
	case "trainFill":
		return TrainFill()
	case "trainLine":
		return TrainLine()
	case "trainWifiFill":
		return TrainWifiFill()
	case "trainWifiLine":
		return TrainWifiLine()
	case "translate":
		return Translate()
	case "translateTwo":
		return TranslateTwo()
	case "travestiFill":
		return TravestiFill()
	case "travestiLine":
		return TravestiLine()
	case "treasureMapFill":
		return TreasureMapFill()
	case "treasureMapLine":
		return TreasureMapLine()
	case "treeFill":
		return TreeFill()
	case "treeLine":
		return TreeLine()
	case "trelloFill":
		return TrelloFill()
	case "trelloLine":
		return TrelloLine()
	case "triangleFill":
		return TriangleFill()
	case "triangleLine":
		return TriangleLine()
	case "trophyFill":
		return TrophyFill()
	case "trophyLine":
		return TrophyLine()
	case "truckFill":
		return TruckFill()
	case "truckLine":
		return TruckLine()
	case "tumblrFill":
		return TumblrFill()
	case "tumblrLine":
		return TumblrLine()
	case "tvFill":
		return TvFill()
	case "tvLine":
		return TvLine()
	case "tvTwoFill":
		return TvTwoFill()
	case "tvTwoLine":
		return TvTwoLine()
	case "twentyFourHoursFill":
		return TwentyFourHoursFill()
	case "twentyFourHoursLine":
		return TwentyFourHoursLine()
	case "twitchFill":
		return TwitchFill()
	case "twitchLine":
		return TwitchLine()
	case "twitterFill":
		return TwitterFill()
	case "twitterLine":
		return TwitterLine()
	case "twitterXFill":
		return TwitterXFill()
	case "twitterXLine":
		return TwitterXLine()
	case "typhoonFill":
		return TyphoonFill()
	case "typhoonLine":
		return TyphoonLine()
	case "uDiskFill":
		return UDiskFill()
	case "uDiskLine":
		return UDiskLine()
	case "ubuntuFill":
		return UbuntuFill()
	case "ubuntuLine":
		return UbuntuLine()
	case "umbrellaFill":
		return UmbrellaFill()
	case "umbrellaLine":
		return UmbrellaLine()
	case "underline":
		return Underline()
	case "uninstallFill":
		return UninstallFill()
	case "uninstallLine":
		return UninstallLine()
	case "unpinFill":
		return UnpinFill()
	case "unpinLine":
		return UnpinLine()
	case "unsplashFill":
		return UnsplashFill()
	case "unsplashLine":
		return UnsplashLine()
	case "uploadCloudFill":
		return UploadCloudFill()
	case "uploadCloudLine":
		return UploadCloudLine()
	case "uploadCloudTwoFill":
		return UploadCloudTwoFill()
	case "uploadCloudTwoLine":
		return UploadCloudTwoLine()
	case "uploadFill":
		return UploadFill()
	case "uploadLine":
		return UploadLine()
	case "uploadTwoFill":
		return UploadTwoFill()
	case "uploadTwoLine":
		return UploadTwoLine()
	case "usbFill":
		return UsbFill()
	case "usbLine":
		return UsbLine()
	case "userAddFill":
		return UserAddFill()
	case "userAddLine":
		return UserAddLine()
	case "userFill":
		return UserFill()
	case "userFiveFill":
		return UserFiveFill()
	case "userFiveLine":
		return UserFiveLine()
	case "userFollowFill":
		return UserFollowFill()
	case "userFollowLine":
		return UserFollowLine()
	case "userForbidFill":
		return UserForbidFill()
	case "userForbidLine":
		return UserForbidLine()
	case "userFourFill":
		return UserFourFill()
	case "userFourLine":
		return UserFourLine()
	case "userHeartFill":
		return UserHeartFill()
	case "userHeartLine":
		return UserHeartLine()
	case "userLine":
		return UserLine()
	case "userLocationFill":
		return UserLocationFill()
	case "userLocationLine":
		return UserLocationLine()
	case "userReceivedFill":
		return UserReceivedFill()
	case "userReceivedLine":
		return UserReceivedLine()
	case "userReceivedTwoFill":
		return UserReceivedTwoFill()
	case "userReceivedTwoLine":
		return UserReceivedTwoLine()
	case "userSearchFill":
		return UserSearchFill()
	case "userSearchLine":
		return UserSearchLine()
	case "userSettingsFill":
		return UserSettingsFill()
	case "userSettingsLine":
		return UserSettingsLine()
	case "userSharedFill":
		return UserSharedFill()
	case "userSharedLine":
		return UserSharedLine()
	case "userSharedTwoFill":
		return UserSharedTwoFill()
	case "userSharedTwoLine":
		return UserSharedTwoLine()
	case "userSixFill":
		return UserSixFill()
	case "userSixLine":
		return UserSixLine()
	case "userSmileFill":
		return UserSmileFill()
	case "userSmileLine":
		return UserSmileLine()
	case "userStarFill":
		return UserStarFill()
	case "userStarLine":
		return UserStarLine()
	case "userThreeFill":
		return UserThreeFill()
	case "userThreeLine":
		return UserThreeLine()
	case "userTwoFill":
		return UserTwoFill()
	case "userTwoLine":
		return UserTwoLine()
	case "userUnfollowFill":
		return UserUnfollowFill()
	case "userUnfollowLine":
		return UserUnfollowLine()
	case "userVoiceFill":
		return UserVoiceFill()
	case "userVoiceLine":
		return UserVoiceLine()
	case "verifiedBadgeFill":
		return VerifiedBadgeFill()
	case "verifiedBadgeLine":
		return VerifiedBadgeLine()
	case "videoAddFill":
		return VideoAddFill()
	case "videoAddLine":
		return VideoAddLine()
	case "videoChatFill":
		return VideoChatFill()
	case "videoChatLine":
		return VideoChatLine()
	case "videoDownloadFill":
		return VideoDownloadFill()
	case "videoDownloadLine":
		return VideoDownloadLine()
	case "videoFill":
		return VideoFill()
	case "videoLine":
		return VideoLine()
	case "videoUploadFill":
		return VideoUploadFill()
	case "videoUploadLine":
		return VideoUploadLine()
	case "vidiconFill":
		return VidiconFill()
	case "vidiconLine":
		return VidiconLine()
	case "vidiconTwoFill":
		return VidiconTwoFill()
	case "vidiconTwoLine":
		return VidiconTwoLine()
	case "vimeoFill":
		return VimeoFill()
	case "vimeoLine":
		return VimeoLine()
	case "vipCrownFill":
		return VipCrownFill()
	case "vipCrownLine":
		return VipCrownLine()
	case "vipCrownTwoFill":
		return VipCrownTwoFill()
	case "vipCrownTwoLine":
		return VipCrownTwoLine()
	case "vipDiamondFill":
		return VipDiamondFill()
	case "vipDiamondLine":
		return VipDiamondLine()
	case "vipFill":
		return VipFill()
	case "vipLine":
		return VipLine()
	case "virusFill":
		return VirusFill()
	case "virusLine":
		return VirusLine()
	case "visaFill":
		return VisaFill()
	case "visaLine":
		return VisaLine()
	case "voiceRecognitionFill":
		return VoiceRecognitionFill()
	case "voiceRecognitionLine":
		return VoiceRecognitionLine()
	case "voiceprintFill":
		return VoiceprintFill()
	case "voiceprintLine":
		return VoiceprintLine()
	case "volumeDownFill":
		return VolumeDownFill()
	case "volumeDownLine":
		return VolumeDownLine()
	case "volumeMuteFill":
		return VolumeMuteFill()
	case "volumeMuteLine":
		return VolumeMuteLine()
	case "volumeOffVibrateFill":
		return VolumeOffVibrateFill()
	case "volumeOffVibrateLine":
		return VolumeOffVibrateLine()
	case "volumeUpFill":
		return VolumeUpFill()
	case "volumeUpLine":
		return VolumeUpLine()
	case "volumeVibrateFill":
		return VolumeVibrateFill()
	case "volumeVibrateLine":
		return VolumeVibrateLine()
	case "vuejsFill":
		return VuejsFill()
	case "vuejsLine":
		return VuejsLine()
	case "walkFill":
		return WalkFill()
	case "walkLine":
		return WalkLine()
	case "walletFill":
		return WalletFill()
	case "walletLine":
		return WalletLine()
	case "walletThreeFill":
		return WalletThreeFill()
	case "walletThreeLine":
		return WalletThreeLine()
	case "walletTwoFill":
		return WalletTwoFill()
	case "walletTwoLine":
		return WalletTwoLine()
	case "waterFlashFill":
		return WaterFlashFill()
	case "waterFlashLine":
		return WaterFlashLine()
	case "waterPercentFill":
		return WaterPercentFill()
	case "waterPercentLine":
		return WaterPercentLine()
	case "webcamFill":
		return WebcamFill()
	case "webcamLine":
		return WebcamLine()
	case "wechatChannelsFill":
		return WechatChannelsFill()
	case "wechatChannelsLine":
		return WechatChannelsLine()
	case "wechatFill":
		return WechatFill()
	case "wechatLine":
		return WechatLine()
	case "wechatPayFill":
		return WechatPayFill()
	case "wechatPayLine":
		return WechatPayLine()
	case "wechatTwoFill":
		return WechatTwoFill()
	case "wechatTwoLine":
		return WechatTwoLine()
	case "weiboFill":
		return WeiboFill()
	case "weiboLine":
		return WeiboLine()
	case "whatsappFill":
		return WhatsappFill()
	case "whatsappLine":
		return WhatsappLine()
	case "wheelchairFill":
		return WheelchairFill()
	case "wheelchairLine":
		return WheelchairLine()
	case "wifiFill":
		return WifiFill()
	case "wifiLine":
		return WifiLine()
	case "wifiOffFill":
		return WifiOffFill()
	case "wifiOffLine":
		return WifiOffLine()
	case "windowFill":
		return WindowFill()
	case "windowLine":
		return WindowLine()
	case "windowTwoFill":
		return WindowTwoFill()
	case "windowTwoLine":
		return WindowTwoLine()
	case "windowsFill":
		return WindowsFill()
	case "windowsLine":
		return WindowsLine()
	case "windyFill":
		return WindyFill()
	case "windyLine":
		return WindyLine()
	case "wirelessChargingFill":
		return WirelessChargingFill()
	case "wirelessChargingLine":
		return WirelessChargingLine()
	case "womenFill":
		return WomenFill()
	case "womenLine":
		return WomenLine()
	case "wordpressFill":
		return WordpressFill()
	case "wordpressLine":
		return WordpressLine()
	case "wubiInput":
		return WubiInput()
	case "xboxFill":
		return XboxFill()
	case "xboxLine":
		return XboxLine()
	case "xingFill":
		return XingFill()
	case "xingLine":
		return XingLine()
	case "youtubeFill":
		return YoutubeFill()
	case "youtubeLine":
		return YoutubeLine()
	case "yuqueFill":
		return YuqueFill()
	case "yuqueLine":
		return YuqueLine()
	case "zcoolFill":
		return ZcoolFill()
	case "zcoolLine":
		return ZcoolLine()
	case "zhihuFill":
		return ZhihuFill()
	case "zhihuLine":
		return ZhihuLine()
	case "zoomInFill":
		return ZoomInFill()
	case "zoomInLine":
		return ZoomInLine()
	case "zoomOutFill":
		return ZoomOutFill()
	case "zoomOutLine":
		return ZoomOutLine()
	case "zzzFill":
		return ZzzFill()
	case "zzzLine":
		return ZzzLine()
	default:
		panic("Unknown icon name: " + name)
	}
}

func AB(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(aBPath), g.Group(children))
}

func AccountBoxFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(accountBoxFillPath), g.Group(children))
}

func AccountBoxLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(accountBoxLinePath), g.Group(children))
}

func AccountCircleFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(accountCircleFillPath), g.Group(children))
}

func AccountCircleLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(accountCircleLinePath), g.Group(children))
}

func AccountPinBoxFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(accountPinBoxFillPath), g.Group(children))
}

func AccountPinBoxLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(accountPinBoxLinePath), g.Group(children))
}

func AccountPinCircleFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(accountPinCircleFillPath), g.Group(children))
}

func AccountPinCircleLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(accountPinCircleLinePath), g.Group(children))
}

func AddBoxFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(addBoxFillPath), g.Group(children))
}

func AddBoxLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(addBoxLinePath), g.Group(children))
}

func AddCircleFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(addCircleFillPath), g.Group(children))
}

func AddCircleLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(addCircleLinePath), g.Group(children))
}

func AddFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(addFillPath), g.Group(children))
}

func AddLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(addLinePath), g.Group(children))
}

func AdminFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(adminFillPath), g.Group(children))
}

func AdminLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(adminLinePath), g.Group(children))
}

func AdvertisementFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(advertisementFillPath), g.Group(children))
}

func AdvertisementLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(advertisementLinePath), g.Group(children))
}

func AiGenerate(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(aiGeneratePath), g.Group(children))
}

func AirplayFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(airplayFillPath), g.Group(children))
}

func AirplayLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(airplayLinePath), g.Group(children))
}

func AlarmFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(alarmFillPath), g.Group(children))
}

func AlarmLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(alarmLinePath), g.Group(children))
}

func AlarmWarningFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(alarmWarningFillPath), g.Group(children))
}

func AlarmWarningLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(alarmWarningLinePath), g.Group(children))
}

func AlbumFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(albumFillPath), g.Group(children))
}

func AlbumLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(albumLinePath), g.Group(children))
}

func AlertFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(alertFillPath), g.Group(children))
}

func AlertLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(alertLinePath), g.Group(children))
}

func AliensFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(aliensFillPath), g.Group(children))
}

func AliensLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(aliensLinePath), g.Group(children))
}

func AlignBottom(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(alignBottomPath), g.Group(children))
}

func AlignCenter(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(alignCenterPath), g.Group(children))
}

func AlignJustify(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(alignJustifyPath), g.Group(children))
}

func AlignLeft(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(alignLeftPath), g.Group(children))
}

func AlignRight(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(alignRightPath), g.Group(children))
}

func AlignTop(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(alignTopPath), g.Group(children))
}

func AlignVertically(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(alignVerticallyPath), g.Group(children))
}

func AlipayFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(alipayFillPath), g.Group(children))
}

func AlipayLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(alipayLinePath), g.Group(children))
}

func AmazonFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(amazonFillPath), g.Group(children))
}

func AmazonLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(amazonLinePath), g.Group(children))
}

func AnchorFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(anchorFillPath), g.Group(children))
}

func AnchorLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(anchorLinePath), g.Group(children))
}

func AncientGateFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(ancientGateFillPath), g.Group(children))
}

func AncientGateLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(ancientGateLinePath), g.Group(children))
}

func AncientPavilionFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(ancientPavilionFillPath), g.Group(children))
}

func AncientPavilionLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(ancientPavilionLinePath), g.Group(children))
}

func AndroidFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(androidFillPath), g.Group(children))
}

func AndroidLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(androidLinePath), g.Group(children))
}

func AngularjsFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(angularjsFillPath), g.Group(children))
}

func AngularjsLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(angularjsLinePath), g.Group(children))
}

func AnticlockwiseFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(anticlockwiseFillPath), g.Group(children))
}

func AnticlockwiseLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(anticlockwiseLinePath), g.Group(children))
}

func AnticlockwiseTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(anticlockwiseTwoFillPath), g.Group(children))
}

func AnticlockwiseTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(anticlockwiseTwoLinePath), g.Group(children))
}

func AppStoreFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(appStoreFillPath), g.Group(children))
}

func AppStoreLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(appStoreLinePath), g.Group(children))
}

func AppleFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(appleFillPath), g.Group(children))
}

func AppleLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(appleLinePath), g.Group(children))
}

func AppsFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(appsFillPath), g.Group(children))
}

func AppsLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(appsLinePath), g.Group(children))
}

func AppsTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(appsTwoFillPath), g.Group(children))
}

func AppsTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(appsTwoLinePath), g.Group(children))
}

func ArchiveDrawerFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(archiveDrawerFillPath), g.Group(children))
}

func ArchiveDrawerLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(archiveDrawerLinePath), g.Group(children))
}

func ArchiveFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(archiveFillPath), g.Group(children))
}

func ArchiveLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(archiveLinePath), g.Group(children))
}

func ArchiveTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(archiveTwoFillPath), g.Group(children))
}

func ArchiveTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(archiveTwoLinePath), g.Group(children))
}

func ArrowDownCircleFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(arrowDownCircleFillPath), g.Group(children))
}

func ArrowDownCircleLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(arrowDownCircleLinePath), g.Group(children))
}

func ArrowDownDoubleFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(arrowDownDoubleFillPath), g.Group(children))
}

func ArrowDownDoubleLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(arrowDownDoubleLinePath), g.Group(children))
}

func ArrowDownFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(arrowDownFillPath), g.Group(children))
}

func ArrowDownLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(arrowDownLinePath), g.Group(children))
}

func ArrowDownSFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(arrowDownSFillPath), g.Group(children))
}

func ArrowDownSLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(arrowDownSLinePath), g.Group(children))
}

func ArrowDropDownFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(arrowDropDownFillPath), g.Group(children))
}

func ArrowDropDownLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(arrowDropDownLinePath), g.Group(children))
}

func ArrowDropLeftFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(arrowDropLeftFillPath), g.Group(children))
}

func ArrowDropLeftLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(arrowDropLeftLinePath), g.Group(children))
}

func ArrowDropRightFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(arrowDropRightFillPath), g.Group(children))
}

func ArrowDropRightLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(arrowDropRightLinePath), g.Group(children))
}

func ArrowDropUpFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(arrowDropUpFillPath), g.Group(children))
}

func ArrowDropUpLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(arrowDropUpLinePath), g.Group(children))
}

func ArrowGoBackFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(arrowGoBackFillPath), g.Group(children))
}

func ArrowGoBackLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(arrowGoBackLinePath), g.Group(children))
}

func ArrowGoForwardFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(arrowGoForwardFillPath), g.Group(children))
}

func ArrowGoForwardLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(arrowGoForwardLinePath), g.Group(children))
}

func ArrowLeftCircleFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(arrowLeftCircleFillPath), g.Group(children))
}

func ArrowLeftCircleLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(arrowLeftCircleLinePath), g.Group(children))
}

func ArrowLeftDoubleFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(arrowLeftDoubleFillPath), g.Group(children))
}

func ArrowLeftDoubleLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(arrowLeftDoubleLinePath), g.Group(children))
}

func ArrowLeftDownFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(arrowLeftDownFillPath), g.Group(children))
}

func ArrowLeftDownLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(arrowLeftDownLinePath), g.Group(children))
}

func ArrowLeftFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(arrowLeftFillPath), g.Group(children))
}

func ArrowLeftLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(arrowLeftLinePath), g.Group(children))
}

func ArrowLeftRightFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(arrowLeftRightFillPath), g.Group(children))
}

func ArrowLeftRightLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(arrowLeftRightLinePath), g.Group(children))
}

func ArrowLeftSFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(arrowLeftSFillPath), g.Group(children))
}

func ArrowLeftSLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(arrowLeftSLinePath), g.Group(children))
}

func ArrowLeftUpFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(arrowLeftUpFillPath), g.Group(children))
}

func ArrowLeftUpLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(arrowLeftUpLinePath), g.Group(children))
}

func ArrowRightCircleFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(arrowRightCircleFillPath), g.Group(children))
}

func ArrowRightCircleLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(arrowRightCircleLinePath), g.Group(children))
}

func ArrowRightDoubleFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(arrowRightDoubleFillPath), g.Group(children))
}

func ArrowRightDoubleLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(arrowRightDoubleLinePath), g.Group(children))
}

func ArrowRightDownFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(arrowRightDownFillPath), g.Group(children))
}

func ArrowRightDownLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(arrowRightDownLinePath), g.Group(children))
}

func ArrowRightFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(arrowRightFillPath), g.Group(children))
}

func ArrowRightLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(arrowRightLinePath), g.Group(children))
}

func ArrowRightSFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(arrowRightSFillPath), g.Group(children))
}

func ArrowRightSLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(arrowRightSLinePath), g.Group(children))
}

func ArrowRightUpFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(arrowRightUpFillPath), g.Group(children))
}

func ArrowRightUpLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(arrowRightUpLinePath), g.Group(children))
}

func ArrowTurnBackFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(arrowTurnBackFillPath), g.Group(children))
}

func ArrowTurnBackLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(arrowTurnBackLinePath), g.Group(children))
}

func ArrowTurnForwardFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(arrowTurnForwardFillPath), g.Group(children))
}

func ArrowTurnForwardLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(arrowTurnForwardLinePath), g.Group(children))
}

func ArrowUpCircleFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(arrowUpCircleFillPath), g.Group(children))
}

func ArrowUpCircleLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(arrowUpCircleLinePath), g.Group(children))
}

func ArrowUpDoubleFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(arrowUpDoubleFillPath), g.Group(children))
}

func ArrowUpDoubleLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(arrowUpDoubleLinePath), g.Group(children))
}

func ArrowUpDownFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(arrowUpDownFillPath), g.Group(children))
}

func ArrowUpDownLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(arrowUpDownLinePath), g.Group(children))
}

func ArrowUpFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(arrowUpFillPath), g.Group(children))
}

func ArrowUpLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(arrowUpLinePath), g.Group(children))
}

func ArrowUpSFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(arrowUpSFillPath), g.Group(children))
}

func ArrowUpSLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(arrowUpSLinePath), g.Group(children))
}

func ArtboardFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(artboardFillPath), g.Group(children))
}

func ArtboardLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(artboardLinePath), g.Group(children))
}

func ArtboardTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(artboardTwoFillPath), g.Group(children))
}

func ArtboardTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(artboardTwoLinePath), g.Group(children))
}

func ArticleFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(articleFillPath), g.Group(children))
}

func ArticleLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(articleLinePath), g.Group(children))
}

func AspectRatioFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(aspectRatioFillPath), g.Group(children))
}

func AspectRatioLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(aspectRatioLinePath), g.Group(children))
}

func Asterisk(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(asteriskPath), g.Group(children))
}

func AtFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(atFillPath), g.Group(children))
}

func AtLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(atLinePath), g.Group(children))
}

func AttachmentFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(attachmentFillPath), g.Group(children))
}

func AttachmentLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(attachmentLinePath), g.Group(children))
}

func AttachmentTwo(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(attachmentTwoPath), g.Group(children))
}

func AuctionFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(auctionFillPath), g.Group(children))
}

func AuctionLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(auctionLinePath), g.Group(children))
}

func AwardFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(awardFillPath), g.Group(children))
}

func AwardLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(awardLinePath), g.Group(children))
}

func BaiduFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(baiduFillPath), g.Group(children))
}

func BaiduLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(baiduLinePath), g.Group(children))
}

func BallPenFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(ballPenFillPath), g.Group(children))
}

func BallPenLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(ballPenLinePath), g.Group(children))
}

func BankCardFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(bankCardFillPath), g.Group(children))
}

func BankCardLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(bankCardLinePath), g.Group(children))
}

func BankCardTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(bankCardTwoFillPath), g.Group(children))
}

func BankCardTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(bankCardTwoLinePath), g.Group(children))
}

func BankFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(bankFillPath), g.Group(children))
}

func BankLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(bankLinePath), g.Group(children))
}

func BarChartBoxFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(barChartBoxFillPath), g.Group(children))
}

func BarChartBoxLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(barChartBoxLinePath), g.Group(children))
}

func BarChartFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(barChartFillPath), g.Group(children))
}

func BarChartGroupedFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(barChartGroupedFillPath), g.Group(children))
}

func BarChartGroupedLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(barChartGroupedLinePath), g.Group(children))
}

func BarChartHorizontalFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(barChartHorizontalFillPath), g.Group(children))
}

func BarChartHorizontalLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(barChartHorizontalLinePath), g.Group(children))
}

func BarChartLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(barChartLinePath), g.Group(children))
}

func BarChartTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(barChartTwoFillPath), g.Group(children))
}

func BarChartTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(barChartTwoLinePath), g.Group(children))
}

func BarcodeBoxFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(barcodeBoxFillPath), g.Group(children))
}

func BarcodeBoxLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(barcodeBoxLinePath), g.Group(children))
}

func BarcodeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(barcodeFillPath), g.Group(children))
}

func BarcodeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(barcodeLinePath), g.Group(children))
}

func BardFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(bardFillPath), g.Group(children))
}

func BardLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(bardLinePath), g.Group(children))
}

func BarricadeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(barricadeFillPath), g.Group(children))
}

func BarricadeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(barricadeLinePath), g.Group(children))
}

func BaseStationFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(baseStationFillPath), g.Group(children))
}

func BaseStationLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(baseStationLinePath), g.Group(children))
}

func BasketballFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(basketballFillPath), g.Group(children))
}

func BasketballLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(basketballLinePath), g.Group(children))
}

func BatteryChargeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(batteryChargeFillPath), g.Group(children))
}

func BatteryChargeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(batteryChargeLinePath), g.Group(children))
}

func BatteryFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(batteryFillPath), g.Group(children))
}

func BatteryLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(batteryLinePath), g.Group(children))
}

func BatteryLowFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(batteryLowFillPath), g.Group(children))
}

func BatteryLowLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(batteryLowLinePath), g.Group(children))
}

func BatterySaverFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(batterySaverFillPath), g.Group(children))
}

func BatterySaverLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(batterySaverLinePath), g.Group(children))
}

func BatteryShareFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(batteryShareFillPath), g.Group(children))
}

func BatteryShareLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(batteryShareLinePath), g.Group(children))
}

func BatteryTwoChargeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(batteryTwoChargeFillPath), g.Group(children))
}

func BatteryTwoChargeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(batteryTwoChargeLinePath), g.Group(children))
}

func BatteryTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(batteryTwoFillPath), g.Group(children))
}

func BatteryTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(batteryTwoLinePath), g.Group(children))
}

func BearSmileFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(bearSmileFillPath), g.Group(children))
}

func BearSmileLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(bearSmileLinePath), g.Group(children))
}

func BeerFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(beerFillPath), g.Group(children))
}

func BeerLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(beerLinePath), g.Group(children))
}

func BehanceFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(behanceFillPath), g.Group(children))
}

func BehanceLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(behanceLinePath), g.Group(children))
}

func BellFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(bellFillPath), g.Group(children))
}

func BellLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(bellLinePath), g.Group(children))
}

func BikeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(bikeFillPath), g.Group(children))
}

func BikeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(bikeLinePath), g.Group(children))
}

func BilibiliFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(bilibiliFillPath), g.Group(children))
}

func BilibiliLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(bilibiliLinePath), g.Group(children))
}

func BillFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(billFillPath), g.Group(children))
}

func BillLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(billLinePath), g.Group(children))
}

func BilliardsFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(billiardsFillPath), g.Group(children))
}

func BilliardsLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(billiardsLinePath), g.Group(children))
}

func BitCoinFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(bitCoinFillPath), g.Group(children))
}

func BitCoinLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(bitCoinLinePath), g.Group(children))
}

func BlazeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(blazeFillPath), g.Group(children))
}

func BlazeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(blazeLinePath), g.Group(children))
}

func BlenderFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(blenderFillPath), g.Group(children))
}

func BlenderLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(blenderLinePath), g.Group(children))
}

func BluetoothConnectFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(bluetoothConnectFillPath), g.Group(children))
}

func BluetoothConnectLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(bluetoothConnectLinePath), g.Group(children))
}

func BluetoothFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(bluetoothFillPath), g.Group(children))
}

func BluetoothLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(bluetoothLinePath), g.Group(children))
}

func BlurOffFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(blurOffFillPath), g.Group(children))
}

func BlurOffLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(blurOffLinePath), g.Group(children))
}

func BodyScanFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(bodyScanFillPath), g.Group(children))
}

func BodyScanLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(bodyScanLinePath), g.Group(children))
}

func Bold(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(boldPath), g.Group(children))
}

func BookFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(bookFillPath), g.Group(children))
}

func BookLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(bookLinePath), g.Group(children))
}

func BookMarkFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(bookMarkFillPath), g.Group(children))
}

func BookMarkLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(bookMarkLinePath), g.Group(children))
}

func BookOpenFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(bookOpenFillPath), g.Group(children))
}

func BookOpenLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(bookOpenLinePath), g.Group(children))
}

func BookReadFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(bookReadFillPath), g.Group(children))
}

func BookReadLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(bookReadLinePath), g.Group(children))
}

func BookThreeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(bookThreeFillPath), g.Group(children))
}

func BookThreeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(bookThreeLinePath), g.Group(children))
}

func BookTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(bookTwoFillPath), g.Group(children))
}

func BookTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(bookTwoLinePath), g.Group(children))
}

func BookletFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(bookletFillPath), g.Group(children))
}

func BookletLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(bookletLinePath), g.Group(children))
}

func BookmarkFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(bookmarkFillPath), g.Group(children))
}

func BookmarkLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(bookmarkLinePath), g.Group(children))
}

func BookmarkThreeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(bookmarkThreeFillPath), g.Group(children))
}

func BookmarkThreeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(bookmarkThreeLinePath), g.Group(children))
}

func BookmarkTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(bookmarkTwoFillPath), g.Group(children))
}

func BookmarkTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(bookmarkTwoLinePath), g.Group(children))
}

func BootstrapFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(bootstrapFillPath), g.Group(children))
}

func BootstrapLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(bootstrapLinePath), g.Group(children))
}

func BoxOneFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(boxOneFillPath), g.Group(children))
}

func BoxOneLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(boxOneLinePath), g.Group(children))
}

func BoxThreeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(boxThreeFillPath), g.Group(children))
}

func BoxThreeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(boxThreeLinePath), g.Group(children))
}

func BoxTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(boxTwoFillPath), g.Group(children))
}

func BoxTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(boxTwoLinePath), g.Group(children))
}

func BoxingFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(boxingFillPath), g.Group(children))
}

func BoxingLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(boxingLinePath), g.Group(children))
}

func BracesFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(bracesFillPath), g.Group(children))
}

func BracesLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(bracesLinePath), g.Group(children))
}

func BracketsFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(bracketsFillPath), g.Group(children))
}

func BracketsLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(bracketsLinePath), g.Group(children))
}

func BrainFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(brainFillPath), g.Group(children))
}

func BrainLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(brainLinePath), g.Group(children))
}

func BriefcaseFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(briefcaseFillPath), g.Group(children))
}

func BriefcaseFiveFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(briefcaseFiveFillPath), g.Group(children))
}

func BriefcaseFiveLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(briefcaseFiveLinePath), g.Group(children))
}

func BriefcaseFourFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(briefcaseFourFillPath), g.Group(children))
}

func BriefcaseFourLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(briefcaseFourLinePath), g.Group(children))
}

func BriefcaseLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(briefcaseLinePath), g.Group(children))
}

func BriefcaseThreeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(briefcaseThreeFillPath), g.Group(children))
}

func BriefcaseThreeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(briefcaseThreeLinePath), g.Group(children))
}

func BriefcaseTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(briefcaseTwoFillPath), g.Group(children))
}

func BriefcaseTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(briefcaseTwoLinePath), g.Group(children))
}

func BringForward(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(bringForwardPath), g.Group(children))
}

func BringToFront(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(bringToFrontPath), g.Group(children))
}

func BroadcastFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(broadcastFillPath), g.Group(children))
}

func BroadcastLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(broadcastLinePath), g.Group(children))
}

func BrushFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(brushFillPath), g.Group(children))
}

func BrushFourFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(brushFourFillPath), g.Group(children))
}

func BrushFourLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(brushFourLinePath), g.Group(children))
}

func BrushLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(brushLinePath), g.Group(children))
}

func BrushThreeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(brushThreeFillPath), g.Group(children))
}

func BrushThreeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(brushThreeLinePath), g.Group(children))
}

func BrushTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(brushTwoFillPath), g.Group(children))
}

func BrushTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(brushTwoLinePath), g.Group(children))
}

func BubbleChartFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(bubbleChartFillPath), g.Group(children))
}

func BubbleChartLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(bubbleChartLinePath), g.Group(children))
}

func BugFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(bugFillPath), g.Group(children))
}

func BugLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(bugLinePath), g.Group(children))
}

func BugTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(bugTwoFillPath), g.Group(children))
}

func BugTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(bugTwoLinePath), g.Group(children))
}

func BuildingFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(buildingFillPath), g.Group(children))
}

func BuildingFourFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(buildingFourFillPath), g.Group(children))
}

func BuildingFourLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(buildingFourLinePath), g.Group(children))
}

func BuildingLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(buildingLinePath), g.Group(children))
}

func BuildingThreeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(buildingThreeFillPath), g.Group(children))
}

func BuildingThreeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(buildingThreeLinePath), g.Group(children))
}

func BuildingTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(buildingTwoFillPath), g.Group(children))
}

func BuildingTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(buildingTwoLinePath), g.Group(children))
}

func BusFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(busFillPath), g.Group(children))
}

func BusLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(busLinePath), g.Group(children))
}

func BusTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(busTwoFillPath), g.Group(children))
}

func BusTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(busTwoLinePath), g.Group(children))
}

func BusWifiFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(busWifiFillPath), g.Group(children))
}

func BusWifiLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(busWifiLinePath), g.Group(children))
}

func CactusFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(cactusFillPath), g.Group(children))
}

func CactusLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(cactusLinePath), g.Group(children))
}

func CakeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(cakeFillPath), g.Group(children))
}

func CakeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(cakeLinePath), g.Group(children))
}

func CakeThreeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(cakeThreeFillPath), g.Group(children))
}

func CakeThreeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(cakeThreeLinePath), g.Group(children))
}

func CakeTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(cakeTwoFillPath), g.Group(children))
}

func CakeTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(cakeTwoLinePath), g.Group(children))
}

func CalculatorFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(calculatorFillPath), g.Group(children))
}

func CalculatorLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(calculatorLinePath), g.Group(children))
}

func CalendarCheckFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(calendarCheckFillPath), g.Group(children))
}

func CalendarCheckLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(calendarCheckLinePath), g.Group(children))
}

func CalendarCloseFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(calendarCloseFillPath), g.Group(children))
}

func CalendarCloseLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(calendarCloseLinePath), g.Group(children))
}

func CalendarEventFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(calendarEventFillPath), g.Group(children))
}

func CalendarEventLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(calendarEventLinePath), g.Group(children))
}

func CalendarFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(calendarFillPath), g.Group(children))
}

func CalendarLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(calendarLinePath), g.Group(children))
}

func CalendarTodoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(calendarTodoFillPath), g.Group(children))
}

func CalendarTodoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(calendarTodoLinePath), g.Group(children))
}

func CalendarTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(calendarTwoFillPath), g.Group(children))
}

func CalendarTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(calendarTwoLinePath), g.Group(children))
}

func CameraFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(cameraFillPath), g.Group(children))
}

func CameraLensFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(cameraLensFillPath), g.Group(children))
}

func CameraLensLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(cameraLensLinePath), g.Group(children))
}

func CameraLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(cameraLinePath), g.Group(children))
}

func CameraOffFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(cameraOffFillPath), g.Group(children))
}

func CameraOffLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(cameraOffLinePath), g.Group(children))
}

func CameraSwitchFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(cameraSwitchFillPath), g.Group(children))
}

func CameraSwitchLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(cameraSwitchLinePath), g.Group(children))
}

func CameraThreeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(cameraThreeFillPath), g.Group(children))
}

func CameraThreeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(cameraThreeLinePath), g.Group(children))
}

func CameraTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(cameraTwoFillPath), g.Group(children))
}

func CameraTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(cameraTwoLinePath), g.Group(children))
}

func CandleFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(candleFillPath), g.Group(children))
}

func CandleLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(candleLinePath), g.Group(children))
}

func CapsuleFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(capsuleFillPath), g.Group(children))
}

func CapsuleLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(capsuleLinePath), g.Group(children))
}

func CarFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(carFillPath), g.Group(children))
}

func CarLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(carLinePath), g.Group(children))
}

func CarWashingFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(carWashingFillPath), g.Group(children))
}

func CarWashingLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(carWashingLinePath), g.Group(children))
}

func CaravanFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(caravanFillPath), g.Group(children))
}

func CaravanLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(caravanLinePath), g.Group(children))
}

func CashFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(cashFillPath), g.Group(children))
}

func CashLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(cashLinePath), g.Group(children))
}

func CastFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(castFillPath), g.Group(children))
}

func CastLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(castLinePath), g.Group(children))
}

func CellphoneFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(cellphoneFillPath), g.Group(children))
}

func CellphoneLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(cellphoneLinePath), g.Group(children))
}

func CelsiusFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(celsiusFillPath), g.Group(children))
}

func CelsiusLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(celsiusLinePath), g.Group(children))
}

func CentosFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(centosFillPath), g.Group(children))
}

func CentosLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(centosLinePath), g.Group(children))
}

func CharacterRecognitionFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(characterRecognitionFillPath), g.Group(children))
}

func CharacterRecognitionLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(characterRecognitionLinePath), g.Group(children))
}

func ChargingPileFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(chargingPileFillPath), g.Group(children))
}

func ChargingPileLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(chargingPileLinePath), g.Group(children))
}

func ChargingPileTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(chargingPileTwoFillPath), g.Group(children))
}

func ChargingPileTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(chargingPileTwoLinePath), g.Group(children))
}

func ChatCheckFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(chatCheckFillPath), g.Group(children))
}

func ChatCheckLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(chatCheckLinePath), g.Group(children))
}

func ChatDeleteFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(chatDeleteFillPath), g.Group(children))
}

func ChatDeleteLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(chatDeleteLinePath), g.Group(children))
}

func ChatDownloadFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(chatDownloadFillPath), g.Group(children))
}

func ChatDownloadLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(chatDownloadLinePath), g.Group(children))
}

func ChatFollowUpFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(chatFollowUpFillPath), g.Group(children))
}

func ChatFollowUpLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(chatFollowUpLinePath), g.Group(children))
}

func ChatForwardFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(chatForwardFillPath), g.Group(children))
}

func ChatForwardLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(chatForwardLinePath), g.Group(children))
}

func ChatFourFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(chatFourFillPath), g.Group(children))
}

func ChatFourLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(chatFourLinePath), g.Group(children))
}

func ChatHeartFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(chatHeartFillPath), g.Group(children))
}

func ChatHeartLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(chatHeartLinePath), g.Group(children))
}

func ChatHistoryFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(chatHistoryFillPath), g.Group(children))
}

func ChatHistoryLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(chatHistoryLinePath), g.Group(children))
}

func ChatNewFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(chatNewFillPath), g.Group(children))
}

func ChatNewLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(chatNewLinePath), g.Group(children))
}

func ChatOffFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(chatOffFillPath), g.Group(children))
}

func ChatOffLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(chatOffLinePath), g.Group(children))
}

func ChatOneFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(chatOneFillPath), g.Group(children))
}

func ChatOneLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(chatOneLinePath), g.Group(children))
}

func ChatPollFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(chatPollFillPath), g.Group(children))
}

func ChatPollLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(chatPollLinePath), g.Group(children))
}

func ChatPrivateFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(chatPrivateFillPath), g.Group(children))
}

func ChatPrivateLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(chatPrivateLinePath), g.Group(children))
}

func ChatQuoteFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(chatQuoteFillPath), g.Group(children))
}

func ChatQuoteLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(chatQuoteLinePath), g.Group(children))
}

func ChatSettingsFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(chatSettingsFillPath), g.Group(children))
}

func ChatSettingsLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(chatSettingsLinePath), g.Group(children))
}

func ChatSmileFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(chatSmileFillPath), g.Group(children))
}

func ChatSmileLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(chatSmileLinePath), g.Group(children))
}

func ChatSmileThreeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(chatSmileThreeFillPath), g.Group(children))
}

func ChatSmileThreeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(chatSmileThreeLinePath), g.Group(children))
}

func ChatSmileTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(chatSmileTwoFillPath), g.Group(children))
}

func ChatSmileTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(chatSmileTwoLinePath), g.Group(children))
}

func ChatThreeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(chatThreeFillPath), g.Group(children))
}

func ChatThreeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(chatThreeLinePath), g.Group(children))
}

func ChatTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(chatTwoFillPath), g.Group(children))
}

func ChatTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(chatTwoLinePath), g.Group(children))
}

func ChatUploadFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(chatUploadFillPath), g.Group(children))
}

func ChatUploadLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(chatUploadLinePath), g.Group(children))
}

func ChatVoiceFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(chatVoiceFillPath), g.Group(children))
}

func ChatVoiceLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(chatVoiceLinePath), g.Group(children))
}

func CheckDoubleFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(checkDoubleFillPath), g.Group(children))
}

func CheckDoubleLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(checkDoubleLinePath), g.Group(children))
}

func CheckFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(checkFillPath), g.Group(children))
}

func CheckLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(checkLinePath), g.Group(children))
}

func CheckboxBlankCircleFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(checkboxBlankCircleFillPath), g.Group(children))
}

func CheckboxBlankCircleLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(checkboxBlankCircleLinePath), g.Group(children))
}

func CheckboxBlankFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(checkboxBlankFillPath), g.Group(children))
}

func CheckboxBlankLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(checkboxBlankLinePath), g.Group(children))
}

func CheckboxCircleFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(checkboxCircleFillPath), g.Group(children))
}

func CheckboxCircleLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(checkboxCircleLinePath), g.Group(children))
}

func CheckboxFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(checkboxFillPath), g.Group(children))
}

func CheckboxIndeterminateFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(checkboxIndeterminateFillPath), g.Group(children))
}

func CheckboxIndeterminateLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(checkboxIndeterminateLinePath), g.Group(children))
}

func CheckboxLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(checkboxLinePath), g.Group(children))
}

func CheckboxMultipleBlankFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(checkboxMultipleBlankFillPath), g.Group(children))
}

func CheckboxMultipleBlankLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(checkboxMultipleBlankLinePath), g.Group(children))
}

func CheckboxMultipleFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(checkboxMultipleFillPath), g.Group(children))
}

func CheckboxMultipleLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(checkboxMultipleLinePath), g.Group(children))
}

func ChinaRailwayFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(chinaRailwayFillPath), g.Group(children))
}

func ChinaRailwayLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(chinaRailwayLinePath), g.Group(children))
}

func ChromeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(chromeFillPath), g.Group(children))
}

func ChromeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(chromeLinePath), g.Group(children))
}

func CircleFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(circleFillPath), g.Group(children))
}

func CircleLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(circleLinePath), g.Group(children))
}

func ClapperboardFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(clapperboardFillPath), g.Group(children))
}

func ClapperboardLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(clapperboardLinePath), g.Group(children))
}

func ClipboardFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(clipboardFillPath), g.Group(children))
}

func ClipboardLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(clipboardLinePath), g.Group(children))
}

func ClockwiseFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(clockwiseFillPath), g.Group(children))
}

func ClockwiseLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(clockwiseLinePath), g.Group(children))
}

func ClockwiseTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(clockwiseTwoFillPath), g.Group(children))
}

func ClockwiseTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(clockwiseTwoLinePath), g.Group(children))
}

func CloseCircleFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(closeCircleFillPath), g.Group(children))
}

func CloseCircleLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(closeCircleLinePath), g.Group(children))
}

func CloseFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(closeFillPath), g.Group(children))
}

func CloseLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(closeLinePath), g.Group(children))
}

func ClosedCaptioningFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(closedCaptioningFillPath), g.Group(children))
}

func ClosedCaptioningLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(closedCaptioningLinePath), g.Group(children))
}

func CloudFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(cloudFillPath), g.Group(children))
}

func CloudLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(cloudLinePath), g.Group(children))
}

func CloudOffFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(cloudOffFillPath), g.Group(children))
}

func CloudOffLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(cloudOffLinePath), g.Group(children))
}

func CloudWindyFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(cloudWindyFillPath), g.Group(children))
}

func CloudWindyLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(cloudWindyLinePath), g.Group(children))
}

func CloudyFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(cloudyFillPath), g.Group(children))
}

func CloudyLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(cloudyLinePath), g.Group(children))
}

func CloudyTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(cloudyTwoFillPath), g.Group(children))
}

func CloudyTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(cloudyTwoLinePath), g.Group(children))
}

func CodeBoxFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(codeBoxFillPath), g.Group(children))
}

func CodeBoxLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(codeBoxLinePath), g.Group(children))
}

func CodeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(codeFillPath), g.Group(children))
}

func CodeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(codeLinePath), g.Group(children))
}

func CodeSFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(codeSFillPath), g.Group(children))
}

func CodeSLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(codeSLinePath), g.Group(children))
}

func CodeSSlashFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(codeSSlashFillPath), g.Group(children))
}

func CodeSSlashLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(codeSSlashLinePath), g.Group(children))
}

func CodeView(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(codeViewPath), g.Group(children))
}

func CodepenFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(codepenFillPath), g.Group(children))
}

func CodepenLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(codepenLinePath), g.Group(children))
}

func CoinFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(coinFillPath), g.Group(children))
}

func CoinLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(coinLinePath), g.Group(children))
}

func CoinsFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(coinsFillPath), g.Group(children))
}

func CoinsLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(coinsLinePath), g.Group(children))
}

func CollageFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(collageFillPath), g.Group(children))
}

func CollageLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(collageLinePath), g.Group(children))
}

func CommandFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(commandFillPath), g.Group(children))
}

func CommandLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(commandLinePath), g.Group(children))
}

func CommunityFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(communityFillPath), g.Group(children))
}

func CommunityLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(communityLinePath), g.Group(children))
}

func CompassDiscoverFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(compassDiscoverFillPath), g.Group(children))
}

func CompassDiscoverLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(compassDiscoverLinePath), g.Group(children))
}

func CompassFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(compassFillPath), g.Group(children))
}

func CompassFourFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(compassFourFillPath), g.Group(children))
}

func CompassFourLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(compassFourLinePath), g.Group(children))
}

func CompassLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(compassLinePath), g.Group(children))
}

func CompassThreeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(compassThreeFillPath), g.Group(children))
}

func CompassThreeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(compassThreeLinePath), g.Group(children))
}

func CompassTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(compassTwoFillPath), g.Group(children))
}

func CompassTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(compassTwoLinePath), g.Group(children))
}

func CompassesFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(compassesFillPath), g.Group(children))
}

func CompassesLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(compassesLinePath), g.Group(children))
}

func CompassesTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(compassesTwoFillPath), g.Group(children))
}

func CompassesTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(compassesTwoLinePath), g.Group(children))
}

func ComputerFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(computerFillPath), g.Group(children))
}

func ComputerLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(computerLinePath), g.Group(children))
}

func ContactsBookFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(contactsBookFillPath), g.Group(children))
}

func ContactsBookLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(contactsBookLinePath), g.Group(children))
}

func ContactsBookTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(contactsBookTwoFillPath), g.Group(children))
}

func ContactsBookTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(contactsBookTwoLinePath), g.Group(children))
}

func ContactsBookUploadFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(contactsBookUploadFillPath), g.Group(children))
}

func ContactsBookUploadLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(contactsBookUploadLinePath), g.Group(children))
}

func ContactsFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(contactsFillPath), g.Group(children))
}

func ContactsLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(contactsLinePath), g.Group(children))
}

func ContractLeftFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(contractLeftFillPath), g.Group(children))
}

func ContractLeftLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(contractLeftLinePath), g.Group(children))
}

func ContractLeftRightFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(contractLeftRightFillPath), g.Group(children))
}

func ContractLeftRightLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(contractLeftRightLinePath), g.Group(children))
}

func ContractRightFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(contractRightFillPath), g.Group(children))
}

func ContractRightLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(contractRightLinePath), g.Group(children))
}

func ContractUpDownFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(contractUpDownFillPath), g.Group(children))
}

func ContractUpDownLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(contractUpDownLinePath), g.Group(children))
}

func ContrastDropFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(contrastDropFillPath), g.Group(children))
}

func ContrastDropLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(contrastDropLinePath), g.Group(children))
}

func ContrastDropTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(contrastDropTwoFillPath), g.Group(children))
}

func ContrastDropTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(contrastDropTwoLinePath), g.Group(children))
}

func ContrastFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(contrastFillPath), g.Group(children))
}

func ContrastLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(contrastLinePath), g.Group(children))
}

func ContrastTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(contrastTwoFillPath), g.Group(children))
}

func ContrastTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(contrastTwoLinePath), g.Group(children))
}

func CopilotFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(copilotFillPath), g.Group(children))
}

func CopilotLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(copilotLinePath), g.Group(children))
}

func CopperCoinFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(copperCoinFillPath), g.Group(children))
}

func CopperCoinLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(copperCoinLinePath), g.Group(children))
}

func CopperDiamondFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(copperDiamondFillPath), g.Group(children))
}

func CopperDiamondLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(copperDiamondLinePath), g.Group(children))
}

func CopyleftFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(copyleftFillPath), g.Group(children))
}

func CopyleftLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(copyleftLinePath), g.Group(children))
}

func CopyrightFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(copyrightFillPath), g.Group(children))
}

func CopyrightLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(copyrightLinePath), g.Group(children))
}

func CoreosFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(coreosFillPath), g.Group(children))
}

func CoreosLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(coreosLinePath), g.Group(children))
}

func CornerDownLeftFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(cornerDownLeftFillPath), g.Group(children))
}

func CornerDownLeftLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(cornerDownLeftLinePath), g.Group(children))
}

func CornerDownRightFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(cornerDownRightFillPath), g.Group(children))
}

func CornerDownRightLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(cornerDownRightLinePath), g.Group(children))
}

func CornerLeftDownFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(cornerLeftDownFillPath), g.Group(children))
}

func CornerLeftDownLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(cornerLeftDownLinePath), g.Group(children))
}

func CornerLeftUpFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(cornerLeftUpFillPath), g.Group(children))
}

func CornerLeftUpLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(cornerLeftUpLinePath), g.Group(children))
}

func CornerRightDownFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(cornerRightDownFillPath), g.Group(children))
}

func CornerRightDownLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(cornerRightDownLinePath), g.Group(children))
}

func CornerRightUpFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(cornerRightUpFillPath), g.Group(children))
}

func CornerRightUpLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(cornerRightUpLinePath), g.Group(children))
}

func CornerUpLeftDoubleFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(cornerUpLeftDoubleFillPath), g.Group(children))
}

func CornerUpLeftDoubleLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(cornerUpLeftDoubleLinePath), g.Group(children))
}

func CornerUpLeftFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(cornerUpLeftFillPath), g.Group(children))
}

func CornerUpLeftLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(cornerUpLeftLinePath), g.Group(children))
}

func CornerUpRightDoubleFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(cornerUpRightDoubleFillPath), g.Group(children))
}

func CornerUpRightDoubleLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(cornerUpRightDoubleLinePath), g.Group(children))
}

func CornerUpRightFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(cornerUpRightFillPath), g.Group(children))
}

func CornerUpRightLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(cornerUpRightLinePath), g.Group(children))
}

func CouponFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(couponFillPath), g.Group(children))
}

func CouponFiveFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(couponFiveFillPath), g.Group(children))
}

func CouponFiveLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(couponFiveLinePath), g.Group(children))
}

func CouponFourFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(couponFourFillPath), g.Group(children))
}

func CouponFourLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(couponFourLinePath), g.Group(children))
}

func CouponLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(couponLinePath), g.Group(children))
}

func CouponThreeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(couponThreeFillPath), g.Group(children))
}

func CouponThreeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(couponThreeLinePath), g.Group(children))
}

func CouponTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(couponTwoFillPath), g.Group(children))
}

func CouponTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(couponTwoLinePath), g.Group(children))
}

func CpuFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(cpuFillPath), g.Group(children))
}

func CpuLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(cpuLinePath), g.Group(children))
}

func CreativeCommonsByFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(creativeCommonsByFillPath), g.Group(children))
}

func CreativeCommonsByLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(creativeCommonsByLinePath), g.Group(children))
}

func CreativeCommonsFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(creativeCommonsFillPath), g.Group(children))
}

func CreativeCommonsLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(creativeCommonsLinePath), g.Group(children))
}

func CreativeCommonsNcFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(creativeCommonsNcFillPath), g.Group(children))
}

func CreativeCommonsNcLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(creativeCommonsNcLinePath), g.Group(children))
}

func CreativeCommonsNdFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(creativeCommonsNdFillPath), g.Group(children))
}

func CreativeCommonsNdLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(creativeCommonsNdLinePath), g.Group(children))
}

func CreativeCommonsSaFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(creativeCommonsSaFillPath), g.Group(children))
}

func CreativeCommonsSaLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(creativeCommonsSaLinePath), g.Group(children))
}

func CreativeCommonsZeroFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(creativeCommonsZeroFillPath), g.Group(children))
}

func CreativeCommonsZeroLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(creativeCommonsZeroLinePath), g.Group(children))
}

func CriminalFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(criminalFillPath), g.Group(children))
}

func CriminalLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(criminalLinePath), g.Group(children))
}

func CropFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(cropFillPath), g.Group(children))
}

func CropLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(cropLinePath), g.Group(children))
}

func CropTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(cropTwoFillPath), g.Group(children))
}

func CropTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(cropTwoLinePath), g.Group(children))
}

func CrossFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(crossFillPath), g.Group(children))
}

func CrossLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(crossLinePath), g.Group(children))
}

func CrosshairFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(crosshairFillPath), g.Group(children))
}

func CrosshairLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(crosshairLinePath), g.Group(children))
}

func CrosshairTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(crosshairTwoFillPath), g.Group(children))
}

func CrosshairTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(crosshairTwoLinePath), g.Group(children))
}

func CssThreeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(cssThreeFillPath), g.Group(children))
}

func CssThreeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(cssThreeLinePath), g.Group(children))
}

func CupFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(cupFillPath), g.Group(children))
}

func CupLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(cupLinePath), g.Group(children))
}

func CurrencyFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(currencyFillPath), g.Group(children))
}

func CurrencyLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(currencyLinePath), g.Group(children))
}

func CursorFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(cursorFillPath), g.Group(children))
}

func CursorLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(cursorLinePath), g.Group(children))
}

func CustomerServiceFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(customerServiceFillPath), g.Group(children))
}

func CustomerServiceLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(customerServiceLinePath), g.Group(children))
}

func CustomerServiceTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(customerServiceTwoFillPath), g.Group(children))
}

func CustomerServiceTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(customerServiceTwoLinePath), g.Group(children))
}

func DashboardFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(dashboardFillPath), g.Group(children))
}

func DashboardLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(dashboardLinePath), g.Group(children))
}

func DashboardThreeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(dashboardThreeFillPath), g.Group(children))
}

func DashboardThreeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(dashboardThreeLinePath), g.Group(children))
}

func DashboardTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(dashboardTwoFillPath), g.Group(children))
}

func DashboardTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(dashboardTwoLinePath), g.Group(children))
}

func DatabaseFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(databaseFillPath), g.Group(children))
}

func DatabaseLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(databaseLinePath), g.Group(children))
}

func DatabaseTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(databaseTwoFillPath), g.Group(children))
}

func DatabaseTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(databaseTwoLinePath), g.Group(children))
}

func DeleteBackFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(deleteBackFillPath), g.Group(children))
}

func DeleteBackLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(deleteBackLinePath), g.Group(children))
}

func DeleteBackTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(deleteBackTwoFillPath), g.Group(children))
}

func DeleteBackTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(deleteBackTwoLinePath), g.Group(children))
}

func DeleteBinFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(deleteBinFillPath), g.Group(children))
}

func DeleteBinFiveFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(deleteBinFiveFillPath), g.Group(children))
}

func DeleteBinFiveLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(deleteBinFiveLinePath), g.Group(children))
}

func DeleteBinFourFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(deleteBinFourFillPath), g.Group(children))
}

func DeleteBinFourLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(deleteBinFourLinePath), g.Group(children))
}

func DeleteBinLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(deleteBinLinePath), g.Group(children))
}

func DeleteBinSevenFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(deleteBinSevenFillPath), g.Group(children))
}

func DeleteBinSevenLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(deleteBinSevenLinePath), g.Group(children))
}

func DeleteBinSixFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(deleteBinSixFillPath), g.Group(children))
}

func DeleteBinSixLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(deleteBinSixLinePath), g.Group(children))
}

func DeleteBinThreeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(deleteBinThreeFillPath), g.Group(children))
}

func DeleteBinThreeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(deleteBinThreeLinePath), g.Group(children))
}

func DeleteBinTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(deleteBinTwoFillPath), g.Group(children))
}

func DeleteBinTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(deleteBinTwoLinePath), g.Group(children))
}

func DeleteColumn(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(deleteColumnPath), g.Group(children))
}

func DeleteRow(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(deleteRowPath), g.Group(children))
}

func DeviceFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(deviceFillPath), g.Group(children))
}

func DeviceLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(deviceLinePath), g.Group(children))
}

func DeviceRecoverFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(deviceRecoverFillPath), g.Group(children))
}

func DeviceRecoverLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(deviceRecoverLinePath), g.Group(children))
}

func DingdingFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(dingdingFillPath), g.Group(children))
}

func DingdingLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(dingdingLinePath), g.Group(children))
}

func DirectionFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(directionFillPath), g.Group(children))
}

func DirectionLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(directionLinePath), g.Group(children))
}

func DiscFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(discFillPath), g.Group(children))
}

func DiscLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(discLinePath), g.Group(children))
}

func DiscordFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(discordFillPath), g.Group(children))
}

func DiscordLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(discordLinePath), g.Group(children))
}

func DiscussFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(discussFillPath), g.Group(children))
}

func DiscussLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(discussLinePath), g.Group(children))
}

func DislikeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(dislikeFillPath), g.Group(children))
}

func DislikeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(dislikeLinePath), g.Group(children))
}

func DisqusFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(disqusFillPath), g.Group(children))
}

func DisqusLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(disqusLinePath), g.Group(children))
}

func DivideFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(divideFillPath), g.Group(children))
}

func DivideLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(divideLinePath), g.Group(children))
}

func DonutChartFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(donutChartFillPath), g.Group(children))
}

func DonutChartLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(donutChartLinePath), g.Group(children))
}

func DoorClosedFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(doorClosedFillPath), g.Group(children))
}

func DoorClosedLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(doorClosedLinePath), g.Group(children))
}

func DoorFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(doorFillPath), g.Group(children))
}

func DoorLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(doorLinePath), g.Group(children))
}

func DoorLockBoxFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(doorLockBoxFillPath), g.Group(children))
}

func DoorLockBoxLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(doorLockBoxLinePath), g.Group(children))
}

func DoorLockFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(doorLockFillPath), g.Group(children))
}

func DoorLockLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(doorLockLinePath), g.Group(children))
}

func DoorOpenFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(doorOpenFillPath), g.Group(children))
}

func DoorOpenLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(doorOpenLinePath), g.Group(children))
}

func DossierFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(dossierFillPath), g.Group(children))
}

func DossierLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(dossierLinePath), g.Group(children))
}

func DoubanFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(doubanFillPath), g.Group(children))
}

func DoubanLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(doubanLinePath), g.Group(children))
}

func DoubleQuotesL(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(doubleQuotesLPath), g.Group(children))
}

func DoubleQuotesR(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(doubleQuotesRPath), g.Group(children))
}

func DownloadCloudFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(downloadCloudFillPath), g.Group(children))
}

func DownloadCloudLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(downloadCloudLinePath), g.Group(children))
}

func DownloadCloudTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(downloadCloudTwoFillPath), g.Group(children))
}

func DownloadCloudTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(downloadCloudTwoLinePath), g.Group(children))
}

func DownloadFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(downloadFillPath), g.Group(children))
}

func DownloadLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(downloadLinePath), g.Group(children))
}

func DownloadTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(downloadTwoFillPath), g.Group(children))
}

func DownloadTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(downloadTwoLinePath), g.Group(children))
}

func DraftFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(draftFillPath), g.Group(children))
}

func DraftLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(draftLinePath), g.Group(children))
}

func DragDropFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(dragDropFillPath), g.Group(children))
}

func DragDropLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(dragDropLinePath), g.Group(children))
}

func DragMoveFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(dragMoveFillPath), g.Group(children))
}

func DragMoveLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(dragMoveLinePath), g.Group(children))
}

func DragMoveTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(dragMoveTwoFillPath), g.Group(children))
}

func DragMoveTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(dragMoveTwoLinePath), g.Group(children))
}

func Draggable(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(draggablePath), g.Group(children))
}

func DribbbleFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(dribbbleFillPath), g.Group(children))
}

func DribbbleLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(dribbbleLinePath), g.Group(children))
}

func DriveFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(driveFillPath), g.Group(children))
}

func DriveLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(driveLinePath), g.Group(children))
}

func DrizzleFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(drizzleFillPath), g.Group(children))
}

func DrizzleLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(drizzleLinePath), g.Group(children))
}

func DropFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(dropFillPath), g.Group(children))
}

func DropLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(dropLinePath), g.Group(children))
}

func DropboxFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(dropboxFillPath), g.Group(children))
}

func DropboxLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(dropboxLinePath), g.Group(children))
}

func DropdownList(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(dropdownListPath), g.Group(children))
}

func DualSimOneFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(dualSimOneFillPath), g.Group(children))
}

func DualSimOneLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(dualSimOneLinePath), g.Group(children))
}

func DualSimTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(dualSimTwoFillPath), g.Group(children))
}

func DualSimTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(dualSimTwoLinePath), g.Group(children))
}

func DvFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(dvFillPath), g.Group(children))
}

func DvLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(dvLinePath), g.Group(children))
}

func DvdFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(dvdFillPath), g.Group(children))
}

func DvdLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(dvdLinePath), g.Group(children))
}

func EBikeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(eBikeFillPath), g.Group(children))
}

func EBikeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(eBikeLinePath), g.Group(children))
}

func EBikeTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(eBikeTwoFillPath), g.Group(children))
}

func EBikeTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(eBikeTwoLinePath), g.Group(children))
}

func EarthFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(earthFillPath), g.Group(children))
}

func EarthLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(earthLinePath), g.Group(children))
}

func EarthquakeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(earthquakeFillPath), g.Group(children))
}

func EarthquakeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(earthquakeLinePath), g.Group(children))
}

func EdgeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(edgeFillPath), g.Group(children))
}

func EdgeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(edgeLinePath), g.Group(children))
}

func EdgeNewFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(edgeNewFillPath), g.Group(children))
}

func EdgeNewLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(edgeNewLinePath), g.Group(children))
}

func EditBoxFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(editBoxFillPath), g.Group(children))
}

func EditBoxLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(editBoxLinePath), g.Group(children))
}

func EditCircleFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(editCircleFillPath), g.Group(children))
}

func EditCircleLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(editCircleLinePath), g.Group(children))
}

func EditFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(editFillPath), g.Group(children))
}

func EditLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(editLinePath), g.Group(children))
}

func EditTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(editTwoFillPath), g.Group(children))
}

func EditTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(editTwoLinePath), g.Group(children))
}

func EjectFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(ejectFillPath), g.Group(children))
}

func EjectLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(ejectLinePath), g.Group(children))
}

func EmojiStickerFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(emojiStickerFillPath), g.Group(children))
}

func EmojiStickerLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(emojiStickerLinePath), g.Group(children))
}

func EmotionFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(emotionFillPath), g.Group(children))
}

func EmotionHappyFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(emotionHappyFillPath), g.Group(children))
}

func EmotionHappyLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(emotionHappyLinePath), g.Group(children))
}

func EmotionLaughFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(emotionLaughFillPath), g.Group(children))
}

func EmotionLaughLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(emotionLaughLinePath), g.Group(children))
}

func EmotionLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(emotionLinePath), g.Group(children))
}

func EmotionNormalFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(emotionNormalFillPath), g.Group(children))
}

func EmotionNormalLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(emotionNormalLinePath), g.Group(children))
}

func EmotionSadFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(emotionSadFillPath), g.Group(children))
}

func EmotionSadLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(emotionSadLinePath), g.Group(children))
}

func EmotionTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(emotionTwoFillPath), g.Group(children))
}

func EmotionTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(emotionTwoLinePath), g.Group(children))
}

func EmotionUnhappyFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(emotionUnhappyFillPath), g.Group(children))
}

func EmotionUnhappyLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(emotionUnhappyLinePath), g.Group(children))
}

func EmpathizeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(empathizeFillPath), g.Group(children))
}

func EmpathizeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(empathizeLinePath), g.Group(children))
}

func Emphasis(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(emphasisPath), g.Group(children))
}

func EmphasisCn(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(emphasisCnPath), g.Group(children))
}

func EnglishInput(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(englishInputPath), g.Group(children))
}

func EqualFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(equalFillPath), g.Group(children))
}

func EqualLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(equalLinePath), g.Group(children))
}

func EqualizerFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(equalizerFillPath), g.Group(children))
}

func EqualizerLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(equalizerLinePath), g.Group(children))
}

func EraserFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(eraserFillPath), g.Group(children))
}

func EraserLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(eraserLinePath), g.Group(children))
}

func ErrorWarningFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(errorWarningFillPath), g.Group(children))
}

func ErrorWarningLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(errorWarningLinePath), g.Group(children))
}

func EvernoteFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(evernoteFillPath), g.Group(children))
}

func EvernoteLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(evernoteLinePath), g.Group(children))
}

func ExchangeBoxFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(exchangeBoxFillPath), g.Group(children))
}

func ExchangeBoxLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(exchangeBoxLinePath), g.Group(children))
}

func ExchangeCnyFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(exchangeCnyFillPath), g.Group(children))
}

func ExchangeCnyLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(exchangeCnyLinePath), g.Group(children))
}

func ExchangeDollarFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(exchangeDollarFillPath), g.Group(children))
}

func ExchangeDollarLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(exchangeDollarLinePath), g.Group(children))
}

func ExchangeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(exchangeFillPath), g.Group(children))
}

func ExchangeFundsFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(exchangeFundsFillPath), g.Group(children))
}

func ExchangeFundsLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(exchangeFundsLinePath), g.Group(children))
}

func ExchangeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(exchangeLinePath), g.Group(children))
}

func ExpandLeftFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(expandLeftFillPath), g.Group(children))
}

func ExpandLeftLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(expandLeftLinePath), g.Group(children))
}

func ExpandLeftRightFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(expandLeftRightFillPath), g.Group(children))
}

func ExpandLeftRightLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(expandLeftRightLinePath), g.Group(children))
}

func ExpandRightFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(expandRightFillPath), g.Group(children))
}

func ExpandRightLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(expandRightLinePath), g.Group(children))
}

func ExpandUpDownFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(expandUpDownFillPath), g.Group(children))
}

func ExpandUpDownLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(expandUpDownLinePath), g.Group(children))
}

func ExternalLinkFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(externalLinkFillPath), g.Group(children))
}

func ExternalLinkLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(externalLinkLinePath), g.Group(children))
}

func EyeCloseFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(eyeCloseFillPath), g.Group(children))
}

func EyeCloseLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(eyeCloseLinePath), g.Group(children))
}

func EyeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(eyeFillPath), g.Group(children))
}

func EyeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(eyeLinePath), g.Group(children))
}

func EyeOffFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(eyeOffFillPath), g.Group(children))
}

func EyeOffLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(eyeOffLinePath), g.Group(children))
}

func EyeTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(eyeTwoFillPath), g.Group(children))
}

func EyeTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(eyeTwoLinePath), g.Group(children))
}

func FacebookBoxFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(facebookBoxFillPath), g.Group(children))
}

func FacebookBoxLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(facebookBoxLinePath), g.Group(children))
}

func FacebookCircleFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(facebookCircleFillPath), g.Group(children))
}

func FacebookCircleLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(facebookCircleLinePath), g.Group(children))
}

func FacebookFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(facebookFillPath), g.Group(children))
}

func FacebookLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(facebookLinePath), g.Group(children))
}

func FahrenheitFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fahrenheitFillPath), g.Group(children))
}

func FahrenheitLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fahrenheitLinePath), g.Group(children))
}

func FeedbackFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(feedbackFillPath), g.Group(children))
}

func FeedbackLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(feedbackLinePath), g.Group(children))
}

func FileAddFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileAddFillPath), g.Group(children))
}

func FileAddLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileAddLinePath), g.Group(children))
}

func FileChartFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileChartFillPath), g.Group(children))
}

func FileChartLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileChartLinePath), g.Group(children))
}

func FileChartTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileChartTwoFillPath), g.Group(children))
}

func FileChartTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileChartTwoLinePath), g.Group(children))
}

func FileCloseFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileCloseFillPath), g.Group(children))
}

func FileCloseLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileCloseLinePath), g.Group(children))
}

func FileCloudFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileCloudFillPath), g.Group(children))
}

func FileCloudLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileCloudLinePath), g.Group(children))
}

func FileCodeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileCodeFillPath), g.Group(children))
}

func FileCodeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileCodeLinePath), g.Group(children))
}

func FileCopyFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileCopyFillPath), g.Group(children))
}

func FileCopyLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileCopyLinePath), g.Group(children))
}

func FileCopyTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileCopyTwoFillPath), g.Group(children))
}

func FileCopyTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileCopyTwoLinePath), g.Group(children))
}

func FileDamageFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileDamageFillPath), g.Group(children))
}

func FileDamageLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileDamageLinePath), g.Group(children))
}

func FileDownloadFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileDownloadFillPath), g.Group(children))
}

func FileDownloadLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileDownloadLinePath), g.Group(children))
}

func FileEditFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileEditFillPath), g.Group(children))
}

func FileEditLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileEditLinePath), g.Group(children))
}

func FileExcelFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileExcelFillPath), g.Group(children))
}

func FileExcelLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileExcelLinePath), g.Group(children))
}

func FileExcelTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileExcelTwoFillPath), g.Group(children))
}

func FileExcelTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileExcelTwoLinePath), g.Group(children))
}

func FileFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileFillPath), g.Group(children))
}

func FileForbidFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileForbidFillPath), g.Group(children))
}

func FileForbidLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileForbidLinePath), g.Group(children))
}

func FileFourFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileFourFillPath), g.Group(children))
}

func FileFourLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileFourLinePath), g.Group(children))
}

func FileGifFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileGifFillPath), g.Group(children))
}

func FileGifLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileGifLinePath), g.Group(children))
}

func FileHistoryFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileHistoryFillPath), g.Group(children))
}

func FileHistoryLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileHistoryLinePath), g.Group(children))
}

func FileHwpFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileHwpFillPath), g.Group(children))
}

func FileHwpLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileHwpLinePath), g.Group(children))
}

func FileImageFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileImageFillPath), g.Group(children))
}

func FileImageLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileImageLinePath), g.Group(children))
}

func FileInfoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileInfoFillPath), g.Group(children))
}

func FileInfoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileInfoLinePath), g.Group(children))
}

func FileLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileLinePath), g.Group(children))
}

func FileListFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileListFillPath), g.Group(children))
}

func FileListLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileListLinePath), g.Group(children))
}

func FileListThreeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileListThreeFillPath), g.Group(children))
}

func FileListThreeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileListThreeLinePath), g.Group(children))
}

func FileListTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileListTwoFillPath), g.Group(children))
}

func FileListTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileListTwoLinePath), g.Group(children))
}

func FileLockFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileLockFillPath), g.Group(children))
}

func FileLockLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileLockLinePath), g.Group(children))
}

func FileMarkFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileMarkFillPath), g.Group(children))
}

func FileMarkLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileMarkLinePath), g.Group(children))
}

func FileMusicFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileMusicFillPath), g.Group(children))
}

func FileMusicLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileMusicLinePath), g.Group(children))
}

func FilePaperFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(filePaperFillPath), g.Group(children))
}

func FilePaperLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(filePaperLinePath), g.Group(children))
}

func FilePaperTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(filePaperTwoFillPath), g.Group(children))
}

func FilePaperTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(filePaperTwoLinePath), g.Group(children))
}

func FilePdfFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(filePdfFillPath), g.Group(children))
}

func FilePdfLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(filePdfLinePath), g.Group(children))
}

func FilePdfTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(filePdfTwoFillPath), g.Group(children))
}

func FilePdfTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(filePdfTwoLinePath), g.Group(children))
}

func FilePptFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(filePptFillPath), g.Group(children))
}

func FilePptLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(filePptLinePath), g.Group(children))
}

func FilePptTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(filePptTwoFillPath), g.Group(children))
}

func FilePptTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(filePptTwoLinePath), g.Group(children))
}

func FileReduceFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileReduceFillPath), g.Group(children))
}

func FileReduceLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileReduceLinePath), g.Group(children))
}

func FileSearchFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileSearchFillPath), g.Group(children))
}

func FileSearchLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileSearchLinePath), g.Group(children))
}

func FileSettingsFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileSettingsFillPath), g.Group(children))
}

func FileSettingsLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileSettingsLinePath), g.Group(children))
}

func FileShieldFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileShieldFillPath), g.Group(children))
}

func FileShieldLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileShieldLinePath), g.Group(children))
}

func FileShieldTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileShieldTwoFillPath), g.Group(children))
}

func FileShieldTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileShieldTwoLinePath), g.Group(children))
}

func FileShredFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileShredFillPath), g.Group(children))
}

func FileShredLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileShredLinePath), g.Group(children))
}

func FileTextFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileTextFillPath), g.Group(children))
}

func FileTextLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileTextLinePath), g.Group(children))
}

func FileThreeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileThreeFillPath), g.Group(children))
}

func FileThreeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileThreeLinePath), g.Group(children))
}

func FileTransferFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileTransferFillPath), g.Group(children))
}

func FileTransferLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileTransferLinePath), g.Group(children))
}

func FileTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileTwoFillPath), g.Group(children))
}

func FileTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileTwoLinePath), g.Group(children))
}

func FileUnknowFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileUnknowFillPath), g.Group(children))
}

func FileUnknowLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileUnknowLinePath), g.Group(children))
}

func FileUploadFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileUploadFillPath), g.Group(children))
}

func FileUploadLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileUploadLinePath), g.Group(children))
}

func FileUserFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileUserFillPath), g.Group(children))
}

func FileUserLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileUserLinePath), g.Group(children))
}

func FileVideoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileVideoFillPath), g.Group(children))
}

func FileVideoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileVideoLinePath), g.Group(children))
}

func FileWarningFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileWarningFillPath), g.Group(children))
}

func FileWarningLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileWarningLinePath), g.Group(children))
}

func FileWordFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileWordFillPath), g.Group(children))
}

func FileWordLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileWordLinePath), g.Group(children))
}

func FileWordTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileWordTwoFillPath), g.Group(children))
}

func FileWordTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileWordTwoLinePath), g.Group(children))
}

func FileZipFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileZipFillPath), g.Group(children))
}

func FileZipLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fileZipLinePath), g.Group(children))
}

func FilmFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(filmFillPath), g.Group(children))
}

func FilmLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(filmLinePath), g.Group(children))
}

func FilterFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(filterFillPath), g.Group(children))
}

func FilterLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(filterLinePath), g.Group(children))
}

func FilterOffFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(filterOffFillPath), g.Group(children))
}

func FilterOffLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(filterOffLinePath), g.Group(children))
}

func FilterThreeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(filterThreeFillPath), g.Group(children))
}

func FilterThreeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(filterThreeLinePath), g.Group(children))
}

func FilterTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(filterTwoFillPath), g.Group(children))
}

func FilterTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(filterTwoLinePath), g.Group(children))
}

func FindReplaceFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(findReplaceFillPath), g.Group(children))
}

func FindReplaceLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(findReplaceLinePath), g.Group(children))
}

func FinderFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(finderFillPath), g.Group(children))
}

func FinderLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(finderLinePath), g.Group(children))
}

func FingerprintFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fingerprintFillPath), g.Group(children))
}

func FingerprintLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fingerprintLinePath), g.Group(children))
}

func FingerprintTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fingerprintTwoFillPath), g.Group(children))
}

func FingerprintTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fingerprintTwoLinePath), g.Group(children))
}

func FireFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fireFillPath), g.Group(children))
}

func FireLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fireLinePath), g.Group(children))
}

func FirefoxFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(firefoxFillPath), g.Group(children))
}

func FirefoxLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(firefoxLinePath), g.Group(children))
}

func FirstAidKitFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(firstAidKitFillPath), g.Group(children))
}

func FirstAidKitLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(firstAidKitLinePath), g.Group(children))
}

func FlagFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(flagFillPath), g.Group(children))
}

func FlagLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(flagLinePath), g.Group(children))
}

func FlagTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(flagTwoFillPath), g.Group(children))
}

func FlagTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(flagTwoLinePath), g.Group(children))
}

func FlashlightFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(flashlightFillPath), g.Group(children))
}

func FlashlightLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(flashlightLinePath), g.Group(children))
}

func FlaskFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(flaskFillPath), g.Group(children))
}

func FlaskLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(flaskLinePath), g.Group(children))
}

func FlickrFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(flickrFillPath), g.Group(children))
}

func FlickrLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(flickrLinePath), g.Group(children))
}

func FlightLandFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(flightLandFillPath), g.Group(children))
}

func FlightLandLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(flightLandLinePath), g.Group(children))
}

func FlightTakeoffFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(flightTakeoffFillPath), g.Group(children))
}

func FlightTakeoffLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(flightTakeoffLinePath), g.Group(children))
}

func FloodFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(floodFillPath), g.Group(children))
}

func FloodLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(floodLinePath), g.Group(children))
}

func FlowChart(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(flowChartPath), g.Group(children))
}

func FlutterFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(flutterFillPath), g.Group(children))
}

func FlutterLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(flutterLinePath), g.Group(children))
}

func FocusFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(focusFillPath), g.Group(children))
}

func FocusLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(focusLinePath), g.Group(children))
}

func FocusThreeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(focusThreeFillPath), g.Group(children))
}

func FocusThreeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(focusThreeLinePath), g.Group(children))
}

func FocusTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(focusTwoFillPath), g.Group(children))
}

func FocusTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(focusTwoLinePath), g.Group(children))
}

func FoggyFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(foggyFillPath), g.Group(children))
}

func FoggyLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(foggyLinePath), g.Group(children))
}

func FolderAddFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(folderAddFillPath), g.Group(children))
}

func FolderAddLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(folderAddLinePath), g.Group(children))
}

func FolderChartFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(folderChartFillPath), g.Group(children))
}

func FolderChartLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(folderChartLinePath), g.Group(children))
}

func FolderChartTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(folderChartTwoFillPath), g.Group(children))
}

func FolderChartTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(folderChartTwoLinePath), g.Group(children))
}

func FolderDownloadFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(folderDownloadFillPath), g.Group(children))
}

func FolderDownloadLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(folderDownloadLinePath), g.Group(children))
}

func FolderFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(folderFillPath), g.Group(children))
}

func FolderFiveFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(folderFiveFillPath), g.Group(children))
}

func FolderFiveLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(folderFiveLinePath), g.Group(children))
}

func FolderForbidFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(folderForbidFillPath), g.Group(children))
}

func FolderForbidLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(folderForbidLinePath), g.Group(children))
}

func FolderFourFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(folderFourFillPath), g.Group(children))
}

func FolderFourLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(folderFourLinePath), g.Group(children))
}

func FolderHistoryFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(folderHistoryFillPath), g.Group(children))
}

func FolderHistoryLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(folderHistoryLinePath), g.Group(children))
}

func FolderImageFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(folderImageFillPath), g.Group(children))
}

func FolderImageLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(folderImageLinePath), g.Group(children))
}

func FolderInfoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(folderInfoFillPath), g.Group(children))
}

func FolderInfoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(folderInfoLinePath), g.Group(children))
}

func FolderKeyholeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(folderKeyholeFillPath), g.Group(children))
}

func FolderKeyholeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(folderKeyholeLinePath), g.Group(children))
}

func FolderLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(folderLinePath), g.Group(children))
}

func FolderLockFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(folderLockFillPath), g.Group(children))
}

func FolderLockLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(folderLockLinePath), g.Group(children))
}

func FolderMusicFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(folderMusicFillPath), g.Group(children))
}

func FolderMusicLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(folderMusicLinePath), g.Group(children))
}

func FolderOpenFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(folderOpenFillPath), g.Group(children))
}

func FolderOpenLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(folderOpenLinePath), g.Group(children))
}

func FolderReceivedFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(folderReceivedFillPath), g.Group(children))
}

func FolderReceivedLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(folderReceivedLinePath), g.Group(children))
}

func FolderReduceFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(folderReduceFillPath), g.Group(children))
}

func FolderReduceLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(folderReduceLinePath), g.Group(children))
}

func FolderSettingsFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(folderSettingsFillPath), g.Group(children))
}

func FolderSettingsLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(folderSettingsLinePath), g.Group(children))
}

func FolderSharedFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(folderSharedFillPath), g.Group(children))
}

func FolderSharedLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(folderSharedLinePath), g.Group(children))
}

func FolderShieldFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(folderShieldFillPath), g.Group(children))
}

func FolderShieldLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(folderShieldLinePath), g.Group(children))
}

func FolderShieldTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(folderShieldTwoFillPath), g.Group(children))
}

func FolderShieldTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(folderShieldTwoLinePath), g.Group(children))
}

func FolderThreeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(folderThreeFillPath), g.Group(children))
}

func FolderThreeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(folderThreeLinePath), g.Group(children))
}

func FolderTransferFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(folderTransferFillPath), g.Group(children))
}

func FolderTransferLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(folderTransferLinePath), g.Group(children))
}

func FolderTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(folderTwoFillPath), g.Group(children))
}

func FolderTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(folderTwoLinePath), g.Group(children))
}

func FolderUnknowFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(folderUnknowFillPath), g.Group(children))
}

func FolderUnknowLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(folderUnknowLinePath), g.Group(children))
}

func FolderUploadFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(folderUploadFillPath), g.Group(children))
}

func FolderUploadLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(folderUploadLinePath), g.Group(children))
}

func FolderUserFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(folderUserFillPath), g.Group(children))
}

func FolderUserLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(folderUserLinePath), g.Group(children))
}

func FolderVideoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(folderVideoFillPath), g.Group(children))
}

func FolderVideoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(folderVideoLinePath), g.Group(children))
}

func FolderWarningFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(folderWarningFillPath), g.Group(children))
}

func FolderWarningLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(folderWarningLinePath), g.Group(children))
}

func FolderZipFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(folderZipFillPath), g.Group(children))
}

func FolderZipLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(folderZipLinePath), g.Group(children))
}

func FoldersFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(foldersFillPath), g.Group(children))
}

func FoldersLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(foldersLinePath), g.Group(children))
}

func FontColor(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fontColorPath), g.Group(children))
}

func FontFamily(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fontFamilyPath), g.Group(children))
}

func FontMono(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fontMonoPath), g.Group(children))
}

func FontSans(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fontSansPath), g.Group(children))
}

func FontSansSerif(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fontSansSerifPath), g.Group(children))
}

func FontSize(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fontSizePath), g.Group(children))
}

func FontSizeTwo(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fontSizeTwoPath), g.Group(children))
}

func FootballFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(footballFillPath), g.Group(children))
}

func FootballLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(footballLinePath), g.Group(children))
}

func FootprintFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(footprintFillPath), g.Group(children))
}

func FootprintLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(footprintLinePath), g.Group(children))
}

func ForbidFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(forbidFillPath), g.Group(children))
}

func ForbidLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(forbidLinePath), g.Group(children))
}

func ForbidTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(forbidTwoFillPath), g.Group(children))
}

func ForbidTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(forbidTwoLinePath), g.Group(children))
}

func FormatClear(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(formatClearPath), g.Group(children))
}

func ForwardFifteenFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(forwardFifteenFillPath), g.Group(children))
}

func ForwardFifteenLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(forwardFifteenLinePath), g.Group(children))
}

func ForwardFiveFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(forwardFiveFillPath), g.Group(children))
}

func ForwardFiveLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(forwardFiveLinePath), g.Group(children))
}

func ForwardTenFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(forwardTenFillPath), g.Group(children))
}

func ForwardTenLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(forwardTenLinePath), g.Group(children))
}

func ForwardThirtyFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(forwardThirtyFillPath), g.Group(children))
}

func ForwardThirtyLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(forwardThirtyLinePath), g.Group(children))
}

func FourKFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fourKFillPath), g.Group(children))
}

func FourKLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fourKLinePath), g.Group(children))
}

func FridgeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fridgeFillPath), g.Group(children))
}

func FridgeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fridgeLinePath), g.Group(children))
}

func FullscreenExitFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fullscreenExitFillPath), g.Group(children))
}

func FullscreenExitLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fullscreenExitLinePath), g.Group(children))
}

func FullscreenFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fullscreenFillPath), g.Group(children))
}

func FullscreenLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fullscreenLinePath), g.Group(children))
}

func FunctionFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(functionFillPath), g.Group(children))
}

func FunctionLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(functionLinePath), g.Group(children))
}

func Functions(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(functionsPath), g.Group(children))
}

func FundsBoxFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fundsBoxFillPath), g.Group(children))
}

func FundsBoxLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fundsBoxLinePath), g.Group(children))
}

func FundsFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fundsFillPath), g.Group(children))
}

func FundsLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(fundsLinePath), g.Group(children))
}

func GalleryFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(galleryFillPath), g.Group(children))
}

func GalleryLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(galleryLinePath), g.Group(children))
}

func GalleryUploadFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(galleryUploadFillPath), g.Group(children))
}

func GalleryUploadLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(galleryUploadLinePath), g.Group(children))
}

func GameFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(gameFillPath), g.Group(children))
}

func GameLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(gameLinePath), g.Group(children))
}

func GamepadFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(gamepadFillPath), g.Group(children))
}

func GamepadLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(gamepadLinePath), g.Group(children))
}

func GasStationFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(gasStationFillPath), g.Group(children))
}

func GasStationLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(gasStationLinePath), g.Group(children))
}

func GatsbyFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(gatsbyFillPath), g.Group(children))
}

func GatsbyLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(gatsbyLinePath), g.Group(children))
}

func GenderlessFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(genderlessFillPath), g.Group(children))
}

func GenderlessLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(genderlessLinePath), g.Group(children))
}

func GhostFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(ghostFillPath), g.Group(children))
}

func GhostLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(ghostLinePath), g.Group(children))
}

func GhostSmileFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(ghostSmileFillPath), g.Group(children))
}

func GhostSmileLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(ghostSmileLinePath), g.Group(children))
}

func GhostTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(ghostTwoFillPath), g.Group(children))
}

func GhostTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(ghostTwoLinePath), g.Group(children))
}

func GiftFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(giftFillPath), g.Group(children))
}

func GiftLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(giftLinePath), g.Group(children))
}

func GiftTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(giftTwoFillPath), g.Group(children))
}

func GiftTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(giftTwoLinePath), g.Group(children))
}

func GitBranchFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(gitBranchFillPath), g.Group(children))
}

func GitBranchLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(gitBranchLinePath), g.Group(children))
}

func GitClosePullRequestFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(gitClosePullRequestFillPath), g.Group(children))
}

func GitClosePullRequestLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(gitClosePullRequestLinePath), g.Group(children))
}

func GitCommitFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(gitCommitFillPath), g.Group(children))
}

func GitCommitLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(gitCommitLinePath), g.Group(children))
}

func GitMergeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(gitMergeFillPath), g.Group(children))
}

func GitMergeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(gitMergeLinePath), g.Group(children))
}

func GitPullRequestFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(gitPullRequestFillPath), g.Group(children))
}

func GitPullRequestLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(gitPullRequestLinePath), g.Group(children))
}

func GitRepositoryCommitsFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(gitRepositoryCommitsFillPath), g.Group(children))
}

func GitRepositoryCommitsLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(gitRepositoryCommitsLinePath), g.Group(children))
}

func GitRepositoryFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(gitRepositoryFillPath), g.Group(children))
}

func GitRepositoryLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(gitRepositoryLinePath), g.Group(children))
}

func GitRepositoryPrivateFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(gitRepositoryPrivateFillPath), g.Group(children))
}

func GitRepositoryPrivateLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(gitRepositoryPrivateLinePath), g.Group(children))
}

func GithubFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(githubFillPath), g.Group(children))
}

func GithubLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(githubLinePath), g.Group(children))
}

func GitlabFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(gitlabFillPath), g.Group(children))
}

func GitlabLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(gitlabLinePath), g.Group(children))
}

func GlobalFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(globalFillPath), g.Group(children))
}

func GlobalLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(globalLinePath), g.Group(children))
}

func GlobeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(globeFillPath), g.Group(children))
}

func GlobeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(globeLinePath), g.Group(children))
}

func GobletFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(gobletFillPath), g.Group(children))
}

func GobletLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(gobletLinePath), g.Group(children))
}

func GoogleFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(googleFillPath), g.Group(children))
}

func GoogleLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(googleLinePath), g.Group(children))
}

func GooglePlayFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(googlePlayFillPath), g.Group(children))
}

func GooglePlayLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(googlePlayLinePath), g.Group(children))
}

func GovernmentFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(governmentFillPath), g.Group(children))
}

func GovernmentLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(governmentLinePath), g.Group(children))
}

func GpsFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(gpsFillPath), g.Group(children))
}

func GpsLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(gpsLinePath), g.Group(children))
}

func GradienterFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(gradienterFillPath), g.Group(children))
}

func GradienterLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(gradienterLinePath), g.Group(children))
}

func GraduationCapFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(graduationCapFillPath), g.Group(children))
}

func GraduationCapLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(graduationCapLinePath), g.Group(children))
}

func GridFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(gridFillPath), g.Group(children))
}

func GridLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(gridLinePath), g.Group(children))
}

func GroupFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(groupFillPath), g.Group(children))
}

func GroupLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(groupLinePath), g.Group(children))
}

func GroupTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(groupTwoFillPath), g.Group(children))
}

func GroupTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(groupTwoLinePath), g.Group(children))
}

func GuideFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(guideFillPath), g.Group(children))
}

func GuideLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(guideLinePath), g.Group(children))
}

func HFive(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(hFivePath), g.Group(children))
}

func HFour(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(hFourPath), g.Group(children))
}

func HOne(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(hOnePath), g.Group(children))
}

func HSix(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(hSixPath), g.Group(children))
}

func HThree(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(hThreePath), g.Group(children))
}

func HTwo(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(hTwoPath), g.Group(children))
}

func HailFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(hailFillPath), g.Group(children))
}

func HailLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(hailLinePath), g.Group(children))
}

func HammerFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(hammerFillPath), g.Group(children))
}

func HammerLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(hammerLinePath), g.Group(children))
}

func HandCoinFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(handCoinFillPath), g.Group(children))
}

func HandCoinLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(handCoinLinePath), g.Group(children))
}

func HandHeartFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(handHeartFillPath), g.Group(children))
}

func HandHeartLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(handHeartLinePath), g.Group(children))
}

func HandSanitizerFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(handSanitizerFillPath), g.Group(children))
}

func HandSanitizerLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(handSanitizerLinePath), g.Group(children))
}

func HandbagFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(handbagFillPath), g.Group(children))
}

func HandbagLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(handbagLinePath), g.Group(children))
}

func HardDriveFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(hardDriveFillPath), g.Group(children))
}

func HardDriveLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(hardDriveLinePath), g.Group(children))
}

func HardDriveThreeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(hardDriveThreeFillPath), g.Group(children))
}

func HardDriveThreeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(hardDriveThreeLinePath), g.Group(children))
}

func HardDriveTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(hardDriveTwoFillPath), g.Group(children))
}

func HardDriveTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(hardDriveTwoLinePath), g.Group(children))
}

func Hashtag(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(hashtagPath), g.Group(children))
}

func HazeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(hazeFillPath), g.Group(children))
}

func HazeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(hazeLinePath), g.Group(children))
}

func HazeTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(hazeTwoFillPath), g.Group(children))
}

func HazeTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(hazeTwoLinePath), g.Group(children))
}

func HdFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(hdFillPath), g.Group(children))
}

func HdLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(hdLinePath), g.Group(children))
}

func Heading(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(headingPath), g.Group(children))
}

func HeadphoneFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(headphoneFillPath), g.Group(children))
}

func HeadphoneLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(headphoneLinePath), g.Group(children))
}

func HealthBookFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(healthBookFillPath), g.Group(children))
}

func HealthBookLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(healthBookLinePath), g.Group(children))
}

func HeartAddFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(heartAddFillPath), g.Group(children))
}

func HeartAddLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(heartAddLinePath), g.Group(children))
}

func HeartFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(heartFillPath), g.Group(children))
}

func HeartLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(heartLinePath), g.Group(children))
}

func HeartPulseFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(heartPulseFillPath), g.Group(children))
}

func HeartPulseLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(heartPulseLinePath), g.Group(children))
}

func HeartThreeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(heartThreeFillPath), g.Group(children))
}

func HeartThreeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(heartThreeLinePath), g.Group(children))
}

func HeartTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(heartTwoFillPath), g.Group(children))
}

func HeartTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(heartTwoLinePath), g.Group(children))
}

func HeartsFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(heartsFillPath), g.Group(children))
}

func HeartsLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(heartsLinePath), g.Group(children))
}

func HeavyShowersFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(heavyShowersFillPath), g.Group(children))
}

func HeavyShowersLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(heavyShowersLinePath), g.Group(children))
}

func HexagonFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(hexagonFillPath), g.Group(children))
}

func HexagonLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(hexagonLinePath), g.Group(children))
}

func HistoryFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(historyFillPath), g.Group(children))
}

func HistoryLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(historyLinePath), g.Group(children))
}

func HomeEightFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(homeEightFillPath), g.Group(children))
}

func HomeEightLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(homeEightLinePath), g.Group(children))
}

func HomeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(homeFillPath), g.Group(children))
}

func HomeFiveFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(homeFiveFillPath), g.Group(children))
}

func HomeFiveLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(homeFiveLinePath), g.Group(children))
}

func HomeFourFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(homeFourFillPath), g.Group(children))
}

func HomeFourLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(homeFourLinePath), g.Group(children))
}

func HomeGearFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(homeGearFillPath), g.Group(children))
}

func HomeGearLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(homeGearLinePath), g.Group(children))
}

func HomeHeartFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(homeHeartFillPath), g.Group(children))
}

func HomeHeartLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(homeHeartLinePath), g.Group(children))
}

func HomeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(homeLinePath), g.Group(children))
}

func HomeOfficeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(homeOfficeFillPath), g.Group(children))
}

func HomeOfficeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(homeOfficeLinePath), g.Group(children))
}

func HomeSevenFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(homeSevenFillPath), g.Group(children))
}

func HomeSevenLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(homeSevenLinePath), g.Group(children))
}

func HomeSixFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(homeSixFillPath), g.Group(children))
}

func HomeSixLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(homeSixLinePath), g.Group(children))
}

func HomeSmileFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(homeSmileFillPath), g.Group(children))
}

func HomeSmileLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(homeSmileLinePath), g.Group(children))
}

func HomeSmileTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(homeSmileTwoFillPath), g.Group(children))
}

func HomeSmileTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(homeSmileTwoLinePath), g.Group(children))
}

func HomeThreeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(homeThreeFillPath), g.Group(children))
}

func HomeThreeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(homeThreeLinePath), g.Group(children))
}

func HomeTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(homeTwoFillPath), g.Group(children))
}

func HomeTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(homeTwoLinePath), g.Group(children))
}

func HomeWifiFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(homeWifiFillPath), g.Group(children))
}

func HomeWifiLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(homeWifiLinePath), g.Group(children))
}

func HonorOfKingsFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(honorOfKingsFillPath), g.Group(children))
}

func HonorOfKingsLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(honorOfKingsLinePath), g.Group(children))
}

func HonourFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(honourFillPath), g.Group(children))
}

func HonourLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(honourLinePath), g.Group(children))
}

func HospitalFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(hospitalFillPath), g.Group(children))
}

func HospitalLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(hospitalLinePath), g.Group(children))
}

func HotelBedFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(hotelBedFillPath), g.Group(children))
}

func HotelBedLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(hotelBedLinePath), g.Group(children))
}

func HotelFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(hotelFillPath), g.Group(children))
}

func HotelLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(hotelLinePath), g.Group(children))
}

func HotspotFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(hotspotFillPath), g.Group(children))
}

func HotspotLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(hotspotLinePath), g.Group(children))
}

func HourglassFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(hourglassFillPath), g.Group(children))
}

func HourglassLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(hourglassLinePath), g.Group(children))
}

func HourglassTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(hourglassTwoFillPath), g.Group(children))
}

func HourglassTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(hourglassTwoLinePath), g.Group(children))
}

func HqFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(hqFillPath), g.Group(children))
}

func HqLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(hqLinePath), g.Group(children))
}

func HtmlFiveFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(htmlFiveFillPath), g.Group(children))
}

func HtmlFiveLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(htmlFiveLinePath), g.Group(children))
}

func IeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(ieFillPath), g.Group(children))
}

func IeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(ieLinePath), g.Group(children))
}

func ImageAddFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(imageAddFillPath), g.Group(children))
}

func ImageAddLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(imageAddLinePath), g.Group(children))
}

func ImageEditFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(imageEditFillPath), g.Group(children))
}

func ImageEditLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(imageEditLinePath), g.Group(children))
}

func ImageFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(imageFillPath), g.Group(children))
}

func ImageLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(imageLinePath), g.Group(children))
}

func ImageTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(imageTwoFillPath), g.Group(children))
}

func ImageTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(imageTwoLinePath), g.Group(children))
}

func InboxArchiveFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(inboxArchiveFillPath), g.Group(children))
}

func InboxArchiveLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(inboxArchiveLinePath), g.Group(children))
}

func InboxFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(inboxFillPath), g.Group(children))
}

func InboxLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(inboxLinePath), g.Group(children))
}

func InboxTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(inboxTwoFillPath), g.Group(children))
}

func InboxTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(inboxTwoLinePath), g.Group(children))
}

func InboxUnarchiveFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(inboxUnarchiveFillPath), g.Group(children))
}

func InboxUnarchiveLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(inboxUnarchiveLinePath), g.Group(children))
}

func IncreaseDecreaseFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(increaseDecreaseFillPath), g.Group(children))
}

func IncreaseDecreaseLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(increaseDecreaseLinePath), g.Group(children))
}

func IndentDecrease(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(indentDecreasePath), g.Group(children))
}

func IndentIncrease(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(indentIncreasePath), g.Group(children))
}

func IndeterminateCircleFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(indeterminateCircleFillPath), g.Group(children))
}

func IndeterminateCircleLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(indeterminateCircleLinePath), g.Group(children))
}

func InfinityFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(infinityFillPath), g.Group(children))
}

func InfinityLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(infinityLinePath), g.Group(children))
}

func InformationFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(informationFillPath), g.Group(children))
}

func InformationLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(informationLinePath), g.Group(children))
}

func InfraredThermometerFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(infraredThermometerFillPath), g.Group(children))
}

func InfraredThermometerLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(infraredThermometerLinePath), g.Group(children))
}

func InkBottleFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(inkBottleFillPath), g.Group(children))
}

func InkBottleLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(inkBottleLinePath), g.Group(children))
}

func InputCursorMove(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(inputCursorMovePath), g.Group(children))
}

func InputMethodFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(inputMethodFillPath), g.Group(children))
}

func InputMethodLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(inputMethodLinePath), g.Group(children))
}

func InsertColumnLeft(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(insertColumnLeftPath), g.Group(children))
}

func InsertColumnRight(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(insertColumnRightPath), g.Group(children))
}

func InsertRowBottom(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(insertRowBottomPath), g.Group(children))
}

func InsertRowTop(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(insertRowTopPath), g.Group(children))
}

func InstagramFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(instagramFillPath), g.Group(children))
}

func InstagramLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(instagramLinePath), g.Group(children))
}

func InstallFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(installFillPath), g.Group(children))
}

func InstallLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(installLinePath), g.Group(children))
}

func InstanceFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(instanceFillPath), g.Group(children))
}

func InstanceLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(instanceLinePath), g.Group(children))
}

func InvisionFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(invisionFillPath), g.Group(children))
}

func InvisionLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(invisionLinePath), g.Group(children))
}

func Italic(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(italicPath), g.Group(children))
}

func JavascriptFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(javascriptFillPath), g.Group(children))
}

func JavascriptLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(javascriptLinePath), g.Group(children))
}

func KakaoTalkFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(kakaoTalkFillPath), g.Group(children))
}

func KakaoTalkLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(kakaoTalkLinePath), g.Group(children))
}

func KeyFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(keyFillPath), g.Group(children))
}

func KeyLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(keyLinePath), g.Group(children))
}

func KeyTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(keyTwoFillPath), g.Group(children))
}

func KeyTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(keyTwoLinePath), g.Group(children))
}

func KeyboardBoxFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(keyboardBoxFillPath), g.Group(children))
}

func KeyboardBoxLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(keyboardBoxLinePath), g.Group(children))
}

func KeyboardFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(keyboardFillPath), g.Group(children))
}

func KeyboardLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(keyboardLinePath), g.Group(children))
}

func KeynoteFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(keynoteFillPath), g.Group(children))
}

func KeynoteLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(keynoteLinePath), g.Group(children))
}

func KickFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(kickFillPath), g.Group(children))
}

func KickLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(kickLinePath), g.Group(children))
}

func KnifeBloodFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(knifeBloodFillPath), g.Group(children))
}

func KnifeBloodLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(knifeBloodLinePath), g.Group(children))
}

func KnifeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(knifeFillPath), g.Group(children))
}

func KnifeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(knifeLinePath), g.Group(children))
}

func LandscapeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(landscapeFillPath), g.Group(children))
}

func LandscapeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(landscapeLinePath), g.Group(children))
}

func LayoutBottomFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(layoutBottomFillPath), g.Group(children))
}

func LayoutBottomLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(layoutBottomLinePath), g.Group(children))
}

func LayoutBottomTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(layoutBottomTwoFillPath), g.Group(children))
}

func LayoutBottomTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(layoutBottomTwoLinePath), g.Group(children))
}

func LayoutColumnFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(layoutColumnFillPath), g.Group(children))
}

func LayoutColumnLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(layoutColumnLinePath), g.Group(children))
}

func LayoutFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(layoutFillPath), g.Group(children))
}

func LayoutFiveFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(layoutFiveFillPath), g.Group(children))
}

func LayoutFiveLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(layoutFiveLinePath), g.Group(children))
}

func LayoutFourFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(layoutFourFillPath), g.Group(children))
}

func LayoutFourLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(layoutFourLinePath), g.Group(children))
}

func LayoutGridFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(layoutGridFillPath), g.Group(children))
}

func LayoutGridLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(layoutGridLinePath), g.Group(children))
}

func LayoutLeftFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(layoutLeftFillPath), g.Group(children))
}

func LayoutLeftLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(layoutLeftLinePath), g.Group(children))
}

func LayoutLeftTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(layoutLeftTwoFillPath), g.Group(children))
}

func LayoutLeftTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(layoutLeftTwoLinePath), g.Group(children))
}

func LayoutLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(layoutLinePath), g.Group(children))
}

func LayoutMasonryFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(layoutMasonryFillPath), g.Group(children))
}

func LayoutMasonryLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(layoutMasonryLinePath), g.Group(children))
}

func LayoutRightFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(layoutRightFillPath), g.Group(children))
}

func LayoutRightLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(layoutRightLinePath), g.Group(children))
}

func LayoutRightTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(layoutRightTwoFillPath), g.Group(children))
}

func LayoutRightTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(layoutRightTwoLinePath), g.Group(children))
}

func LayoutRowFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(layoutRowFillPath), g.Group(children))
}

func LayoutRowLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(layoutRowLinePath), g.Group(children))
}

func LayoutSixFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(layoutSixFillPath), g.Group(children))
}

func LayoutSixLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(layoutSixLinePath), g.Group(children))
}

func LayoutThreeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(layoutThreeFillPath), g.Group(children))
}

func LayoutThreeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(layoutThreeLinePath), g.Group(children))
}

func LayoutTopFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(layoutTopFillPath), g.Group(children))
}

func LayoutTopLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(layoutTopLinePath), g.Group(children))
}

func LayoutTopTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(layoutTopTwoFillPath), g.Group(children))
}

func LayoutTopTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(layoutTopTwoLinePath), g.Group(children))
}

func LayoutTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(layoutTwoFillPath), g.Group(children))
}

func LayoutTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(layoutTwoLinePath), g.Group(children))
}

func LeafFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(leafFillPath), g.Group(children))
}

func LeafLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(leafLinePath), g.Group(children))
}

func LifebuoyFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(lifebuoyFillPath), g.Group(children))
}

func LifebuoyLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(lifebuoyLinePath), g.Group(children))
}

func LightbulbFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(lightbulbFillPath), g.Group(children))
}

func LightbulbFlashFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(lightbulbFlashFillPath), g.Group(children))
}

func LightbulbFlashLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(lightbulbFlashLinePath), g.Group(children))
}

func LightbulbLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(lightbulbLinePath), g.Group(children))
}

func LineChartFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(lineChartFillPath), g.Group(children))
}

func LineChartLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(lineChartLinePath), g.Group(children))
}

func LineFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(lineFillPath), g.Group(children))
}

func LineHeight(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(lineHeightPath), g.Group(children))
}

func LineLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(lineLinePath), g.Group(children))
}

func Link(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(linkPath), g.Group(children))
}

func LinkM(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(linkMPath), g.Group(children))
}

func LinkUnlink(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(linkUnlinkPath), g.Group(children))
}

func LinkUnlinkM(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(linkUnlinkMPath), g.Group(children))
}

func LinkedinBoxFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(linkedinBoxFillPath), g.Group(children))
}

func LinkedinBoxLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(linkedinBoxLinePath), g.Group(children))
}

func LinkedinFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(linkedinFillPath), g.Group(children))
}

func LinkedinLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(linkedinLinePath), g.Group(children))
}

func LinksFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(linksFillPath), g.Group(children))
}

func LinksLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(linksLinePath), g.Group(children))
}

func ListCheck(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(listCheckPath), g.Group(children))
}

func ListCheckThree(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(listCheckThreePath), g.Group(children))
}

func ListCheckTwo(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(listCheckTwoPath), g.Group(children))
}

func ListIndefinite(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(listIndefinitePath), g.Group(children))
}

func ListOrdered(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(listOrderedPath), g.Group(children))
}

func ListOrderedTwo(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(listOrderedTwoPath), g.Group(children))
}

func ListRadio(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(listRadioPath), g.Group(children))
}

func ListSettingsFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(listSettingsFillPath), g.Group(children))
}

func ListSettingsLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(listSettingsLinePath), g.Group(children))
}

func ListUnordered(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(listUnorderedPath), g.Group(children))
}

func LiveFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(liveFillPath), g.Group(children))
}

func LiveLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(liveLinePath), g.Group(children))
}

func LoaderFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(loaderFillPath), g.Group(children))
}

func LoaderFiveFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(loaderFiveFillPath), g.Group(children))
}

func LoaderFiveLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(loaderFiveLinePath), g.Group(children))
}

func LoaderFourFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(loaderFourFillPath), g.Group(children))
}

func LoaderFourLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(loaderFourLinePath), g.Group(children))
}

func LoaderLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(loaderLinePath), g.Group(children))
}

func LoaderThreeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(loaderThreeFillPath), g.Group(children))
}

func LoaderThreeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(loaderThreeLinePath), g.Group(children))
}

func LoaderTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(loaderTwoFillPath), g.Group(children))
}

func LoaderTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(loaderTwoLinePath), g.Group(children))
}

func LockFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(lockFillPath), g.Group(children))
}

func LockLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(lockLinePath), g.Group(children))
}

func LockPasswordFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(lockPasswordFillPath), g.Group(children))
}

func LockPasswordLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(lockPasswordLinePath), g.Group(children))
}

func LockTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(lockTwoFillPath), g.Group(children))
}

func LockTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(lockTwoLinePath), g.Group(children))
}

func LockUnlockFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(lockUnlockFillPath), g.Group(children))
}

func LockUnlockLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(lockUnlockLinePath), g.Group(children))
}

func LoginBoxFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(loginBoxFillPath), g.Group(children))
}

func LoginBoxLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(loginBoxLinePath), g.Group(children))
}

func LoginCircleFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(loginCircleFillPath), g.Group(children))
}

func LoginCircleLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(loginCircleLinePath), g.Group(children))
}

func LogoutBoxFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(logoutBoxFillPath), g.Group(children))
}

func LogoutBoxLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(logoutBoxLinePath), g.Group(children))
}

func LogoutBoxRFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(logoutBoxRFillPath), g.Group(children))
}

func LogoutBoxRLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(logoutBoxRLinePath), g.Group(children))
}

func LogoutCircleFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(logoutCircleFillPath), g.Group(children))
}

func LogoutCircleLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(logoutCircleLinePath), g.Group(children))
}

func LogoutCircleRFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(logoutCircleRFillPath), g.Group(children))
}

func LogoutCircleRLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(logoutCircleRLinePath), g.Group(children))
}

func LoopLeftFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(loopLeftFillPath), g.Group(children))
}

func LoopLeftLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(loopLeftLinePath), g.Group(children))
}

func LoopRightFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(loopRightFillPath), g.Group(children))
}

func LoopRightLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(loopRightLinePath), g.Group(children))
}

func LuggageCartFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(luggageCartFillPath), g.Group(children))
}

func LuggageCartLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(luggageCartLinePath), g.Group(children))
}

func LuggageDepositFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(luggageDepositFillPath), g.Group(children))
}

func LuggageDepositLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(luggageDepositLinePath), g.Group(children))
}

func LungsFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(lungsFillPath), g.Group(children))
}

func LungsLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(lungsLinePath), g.Group(children))
}

func MacFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(macFillPath), g.Group(children))
}

func MacLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(macLinePath), g.Group(children))
}

func MacbookFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(macbookFillPath), g.Group(children))
}

func MacbookLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(macbookLinePath), g.Group(children))
}

func MagicFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(magicFillPath), g.Group(children))
}

func MagicLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(magicLinePath), g.Group(children))
}

func MailAddFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(mailAddFillPath), g.Group(children))
}

func MailAddLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(mailAddLinePath), g.Group(children))
}

func MailCheckFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(mailCheckFillPath), g.Group(children))
}

func MailCheckLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(mailCheckLinePath), g.Group(children))
}

func MailCloseFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(mailCloseFillPath), g.Group(children))
}

func MailCloseLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(mailCloseLinePath), g.Group(children))
}

func MailDownloadFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(mailDownloadFillPath), g.Group(children))
}

func MailDownloadLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(mailDownloadLinePath), g.Group(children))
}

func MailFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(mailFillPath), g.Group(children))
}

func MailForbidFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(mailForbidFillPath), g.Group(children))
}

func MailForbidLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(mailForbidLinePath), g.Group(children))
}

func MailLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(mailLinePath), g.Group(children))
}

func MailLockFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(mailLockFillPath), g.Group(children))
}

func MailLockLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(mailLockLinePath), g.Group(children))
}

func MailOpenFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(mailOpenFillPath), g.Group(children))
}

func MailOpenLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(mailOpenLinePath), g.Group(children))
}

func MailSendFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(mailSendFillPath), g.Group(children))
}

func MailSendLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(mailSendLinePath), g.Group(children))
}

func MailSettingsFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(mailSettingsFillPath), g.Group(children))
}

func MailSettingsLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(mailSettingsLinePath), g.Group(children))
}

func MailStarFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(mailStarFillPath), g.Group(children))
}

func MailStarLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(mailStarLinePath), g.Group(children))
}

func MailUnreadFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(mailUnreadFillPath), g.Group(children))
}

func MailUnreadLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(mailUnreadLinePath), g.Group(children))
}

func MailVolumeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(mailVolumeFillPath), g.Group(children))
}

func MailVolumeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(mailVolumeLinePath), g.Group(children))
}

func MapFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(mapFillPath), g.Group(children))
}

func MapLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(mapLinePath), g.Group(children))
}

func MapPinAddFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(mapPinAddFillPath), g.Group(children))
}

func MapPinAddLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(mapPinAddLinePath), g.Group(children))
}

func MapPinFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(mapPinFillPath), g.Group(children))
}

func MapPinFiveFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(mapPinFiveFillPath), g.Group(children))
}

func MapPinFiveLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(mapPinFiveLinePath), g.Group(children))
}

func MapPinFourFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(mapPinFourFillPath), g.Group(children))
}

func MapPinFourLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(mapPinFourLinePath), g.Group(children))
}

func MapPinLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(mapPinLinePath), g.Group(children))
}

func MapPinRangeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(mapPinRangeFillPath), g.Group(children))
}

func MapPinRangeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(mapPinRangeLinePath), g.Group(children))
}

func MapPinThreeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(mapPinThreeFillPath), g.Group(children))
}

func MapPinThreeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(mapPinThreeLinePath), g.Group(children))
}

func MapPinTimeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(mapPinTimeFillPath), g.Group(children))
}

func MapPinTimeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(mapPinTimeLinePath), g.Group(children))
}

func MapPinTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(mapPinTwoFillPath), g.Group(children))
}

func MapPinTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(mapPinTwoLinePath), g.Group(children))
}

func MapPinUserFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(mapPinUserFillPath), g.Group(children))
}

func MapPinUserLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(mapPinUserLinePath), g.Group(children))
}

func MapTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(mapTwoFillPath), g.Group(children))
}

func MapTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(mapTwoLinePath), g.Group(children))
}

func MarkPenFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(markPenFillPath), g.Group(children))
}

func MarkPenLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(markPenLinePath), g.Group(children))
}

func MarkdownFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(markdownFillPath), g.Group(children))
}

func MarkdownLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(markdownLinePath), g.Group(children))
}

func MarkupFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(markupFillPath), g.Group(children))
}

func MarkupLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(markupLinePath), g.Group(children))
}

func MastercardFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(mastercardFillPath), g.Group(children))
}

func MastercardLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(mastercardLinePath), g.Group(children))
}

func MastodonFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(mastodonFillPath), g.Group(children))
}

func MastodonLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(mastodonLinePath), g.Group(children))
}

func MedalFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(medalFillPath), g.Group(children))
}

func MedalLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(medalLinePath), g.Group(children))
}

func MedalTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(medalTwoFillPath), g.Group(children))
}

func MedalTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(medalTwoLinePath), g.Group(children))
}

func MedicineBottleFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(medicineBottleFillPath), g.Group(children))
}

func MedicineBottleLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(medicineBottleLinePath), g.Group(children))
}

func MediumFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(mediumFillPath), g.Group(children))
}

func MediumLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(mediumLinePath), g.Group(children))
}

func MegaphoneFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(megaphoneFillPath), g.Group(children))
}

func MegaphoneLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(megaphoneLinePath), g.Group(children))
}

func MemoriesFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(memoriesFillPath), g.Group(children))
}

func MemoriesLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(memoriesLinePath), g.Group(children))
}

func MenFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(menFillPath), g.Group(children))
}

func MenLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(menLinePath), g.Group(children))
}

func MentalHealthFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(mentalHealthFillPath), g.Group(children))
}

func MentalHealthLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(mentalHealthLinePath), g.Group(children))
}

func MenuAddFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(menuAddFillPath), g.Group(children))
}

func MenuAddLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(menuAddLinePath), g.Group(children))
}

func MenuFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(menuFillPath), g.Group(children))
}

func MenuFiveFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(menuFiveFillPath), g.Group(children))
}

func MenuFiveLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(menuFiveLinePath), g.Group(children))
}

func MenuFoldFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(menuFoldFillPath), g.Group(children))
}

func MenuFoldLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(menuFoldLinePath), g.Group(children))
}

func MenuFourFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(menuFourFillPath), g.Group(children))
}

func MenuFourLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(menuFourLinePath), g.Group(children))
}

func MenuLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(menuLinePath), g.Group(children))
}

func MenuSearchFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(menuSearchFillPath), g.Group(children))
}

func MenuSearchLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(menuSearchLinePath), g.Group(children))
}

func MenuThreeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(menuThreeFillPath), g.Group(children))
}

func MenuThreeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(menuThreeLinePath), g.Group(children))
}

func MenuTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(menuTwoFillPath), g.Group(children))
}

func MenuTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(menuTwoLinePath), g.Group(children))
}

func MenuUnfoldFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(menuUnfoldFillPath), g.Group(children))
}

func MenuUnfoldLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(menuUnfoldLinePath), g.Group(children))
}

func MergeCellsHorizontal(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(mergeCellsHorizontalPath), g.Group(children))
}

func MergeCellsVertical(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(mergeCellsVerticalPath), g.Group(children))
}

func MessageFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(messageFillPath), g.Group(children))
}

func MessageLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(messageLinePath), g.Group(children))
}

func MessageThreeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(messageThreeFillPath), g.Group(children))
}

func MessageThreeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(messageThreeLinePath), g.Group(children))
}

func MessageTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(messageTwoFillPath), g.Group(children))
}

func MessageTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(messageTwoLinePath), g.Group(children))
}

func MessengerFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(messengerFillPath), g.Group(children))
}

func MessengerLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(messengerLinePath), g.Group(children))
}

func MetaFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(metaFillPath), g.Group(children))
}

func MetaLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(metaLinePath), g.Group(children))
}

func MeteorFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(meteorFillPath), g.Group(children))
}

func MeteorLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(meteorLinePath), g.Group(children))
}

func MicFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(micFillPath), g.Group(children))
}

func MicLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(micLinePath), g.Group(children))
}

func MicOffFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(micOffFillPath), g.Group(children))
}

func MicOffLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(micOffLinePath), g.Group(children))
}

func MicTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(micTwoFillPath), g.Group(children))
}

func MicTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(micTwoLinePath), g.Group(children))
}

func MickeyFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(mickeyFillPath), g.Group(children))
}

func MickeyLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(mickeyLinePath), g.Group(children))
}

func MicroscopeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(microscopeFillPath), g.Group(children))
}

func MicroscopeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(microscopeLinePath), g.Group(children))
}

func MicrosoftFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(microsoftFillPath), g.Group(children))
}

func MicrosoftLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(microsoftLinePath), g.Group(children))
}

func MicrosoftLoopFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(microsoftLoopFillPath), g.Group(children))
}

func MicrosoftLoopLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(microsoftLoopLinePath), g.Group(children))
}

func MindMap(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(mindMapPath), g.Group(children))
}

func MiniProgramFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(miniProgramFillPath), g.Group(children))
}

func MiniProgramLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(miniProgramLinePath), g.Group(children))
}

func MistFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(mistFillPath), g.Group(children))
}

func MistLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(mistLinePath), g.Group(children))
}

func MoneyCnyBoxFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(moneyCnyBoxFillPath), g.Group(children))
}

func MoneyCnyBoxLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(moneyCnyBoxLinePath), g.Group(children))
}

func MoneyCnyCircleFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(moneyCnyCircleFillPath), g.Group(children))
}

func MoneyCnyCircleLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(moneyCnyCircleLinePath), g.Group(children))
}

func MoneyDollarBoxFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(moneyDollarBoxFillPath), g.Group(children))
}

func MoneyDollarBoxLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(moneyDollarBoxLinePath), g.Group(children))
}

func MoneyDollarCircleFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(moneyDollarCircleFillPath), g.Group(children))
}

func MoneyDollarCircleLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(moneyDollarCircleLinePath), g.Group(children))
}

func MoneyEuroBoxFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(moneyEuroBoxFillPath), g.Group(children))
}

func MoneyEuroBoxLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(moneyEuroBoxLinePath), g.Group(children))
}

func MoneyEuroCircleFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(moneyEuroCircleFillPath), g.Group(children))
}

func MoneyEuroCircleLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(moneyEuroCircleLinePath), g.Group(children))
}

func MoneyPoundBoxFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(moneyPoundBoxFillPath), g.Group(children))
}

func MoneyPoundBoxLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(moneyPoundBoxLinePath), g.Group(children))
}

func MoneyPoundCircleFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(moneyPoundCircleFillPath), g.Group(children))
}

func MoneyPoundCircleLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(moneyPoundCircleLinePath), g.Group(children))
}

func MoonClearFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(moonClearFillPath), g.Group(children))
}

func MoonClearLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(moonClearLinePath), g.Group(children))
}

func MoonCloudyFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(moonCloudyFillPath), g.Group(children))
}

func MoonCloudyLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(moonCloudyLinePath), g.Group(children))
}

func MoonFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(moonFillPath), g.Group(children))
}

func MoonFoggyFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(moonFoggyFillPath), g.Group(children))
}

func MoonFoggyLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(moonFoggyLinePath), g.Group(children))
}

func MoonLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(moonLinePath), g.Group(children))
}

func MoreFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(moreFillPath), g.Group(children))
}

func MoreLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(moreLinePath), g.Group(children))
}

func MoreTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(moreTwoFillPath), g.Group(children))
}

func MoreTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(moreTwoLinePath), g.Group(children))
}

func MotorbikeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(motorbikeFillPath), g.Group(children))
}

func MotorbikeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(motorbikeLinePath), g.Group(children))
}

func MouseFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(mouseFillPath), g.Group(children))
}

func MouseLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(mouseLinePath), g.Group(children))
}

func MovieFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(movieFillPath), g.Group(children))
}

func MovieLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(movieLinePath), g.Group(children))
}

func MovieTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(movieTwoFillPath), g.Group(children))
}

func MovieTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(movieTwoLinePath), g.Group(children))
}

func MusicFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(musicFillPath), g.Group(children))
}

func MusicLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(musicLinePath), g.Group(children))
}

func MusicTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(musicTwoFillPath), g.Group(children))
}

func MusicTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(musicTwoLinePath), g.Group(children))
}

func MvFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(mvFillPath), g.Group(children))
}

func MvLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(mvLinePath), g.Group(children))
}

func NavigationFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(navigationFillPath), g.Group(children))
}

func NavigationLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(navigationLinePath), g.Group(children))
}

func NeteaseCloudMusicFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(neteaseCloudMusicFillPath), g.Group(children))
}

func NeteaseCloudMusicLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(neteaseCloudMusicLinePath), g.Group(children))
}

func NetflixFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(netflixFillPath), g.Group(children))
}

func NetflixLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(netflixLinePath), g.Group(children))
}

func NewspaperFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(newspaperFillPath), g.Group(children))
}

func NewspaperLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(newspaperLinePath), g.Group(children))
}

func NftFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(nftFillPath), g.Group(children))
}

func NftLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(nftLinePath), g.Group(children))
}

func NodeTree(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(nodeTreePath), g.Group(children))
}

func NotificationBadgeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(notificationBadgeFillPath), g.Group(children))
}

func NotificationBadgeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(notificationBadgeLinePath), g.Group(children))
}

func NotificationFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(notificationFillPath), g.Group(children))
}

func NotificationFourFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(notificationFourFillPath), g.Group(children))
}

func NotificationFourLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(notificationFourLinePath), g.Group(children))
}

func NotificationLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(notificationLinePath), g.Group(children))
}

func NotificationOffFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(notificationOffFillPath), g.Group(children))
}

func NotificationOffLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(notificationOffLinePath), g.Group(children))
}

func NotificationThreeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(notificationThreeFillPath), g.Group(children))
}

func NotificationThreeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(notificationThreeLinePath), g.Group(children))
}

func NotificationTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(notificationTwoFillPath), g.Group(children))
}

func NotificationTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(notificationTwoLinePath), g.Group(children))
}

func NotionFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(notionFillPath), g.Group(children))
}

func NotionLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(notionLinePath), g.Group(children))
}

func NpmjsFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(npmjsFillPath), g.Group(children))
}

func NpmjsLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(npmjsLinePath), g.Group(children))
}

func NumberEight(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(numberEightPath), g.Group(children))
}

func NumberFive(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(numberFivePath), g.Group(children))
}

func NumberFour(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(numberFourPath), g.Group(children))
}

func NumberNine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(numberNinePath), g.Group(children))
}

func NumberOne(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(numberOnePath), g.Group(children))
}

func NumberSeven(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(numberSevenPath), g.Group(children))
}

func NumberSix(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(numberSixPath), g.Group(children))
}

func NumberThree(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(numberThreePath), g.Group(children))
}

func NumberTwo(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(numberTwoPath), g.Group(children))
}

func NumberZero(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(numberZeroPath), g.Group(children))
}

func NumbersFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(numbersFillPath), g.Group(children))
}

func NumbersLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(numbersLinePath), g.Group(children))
}

func NurseFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(nurseFillPath), g.Group(children))
}

func NurseLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(nurseLinePath), g.Group(children))
}

func OctagonFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(octagonFillPath), g.Group(children))
}

func OctagonLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(octagonLinePath), g.Group(children))
}

func OilFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(oilFillPath), g.Group(children))
}

func OilLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(oilLinePath), g.Group(children))
}

func Omega(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(omegaPath), g.Group(children))
}

func OpenArmFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(openArmFillPath), g.Group(children))
}

func OpenArmLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(openArmLinePath), g.Group(children))
}

func OpenSourceFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(openSourceFillPath), g.Group(children))
}

func OpenSourceLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(openSourceLinePath), g.Group(children))
}

func OpenaiFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(openaiFillPath), g.Group(children))
}

func OpenaiLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(openaiLinePath), g.Group(children))
}

func OpenbaseFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(openbaseFillPath), g.Group(children))
}

func OpenbaseLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(openbaseLinePath), g.Group(children))
}

func OperaFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(operaFillPath), g.Group(children))
}

func OperaLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(operaLinePath), g.Group(children))
}

func OrderPlayFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(orderPlayFillPath), g.Group(children))
}

func OrderPlayLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(orderPlayLinePath), g.Group(children))
}

func OrganizationChart(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(organizationChartPath), g.Group(children))
}

func OutletFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(outletFillPath), g.Group(children))
}

func OutletLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(outletLinePath), g.Group(children))
}

func OutletTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(outletTwoFillPath), g.Group(children))
}

func OutletTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(outletTwoLinePath), g.Group(children))
}

func Overline(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(overlinePath), g.Group(children))
}

func PTwoPFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(pTwoPFillPath), g.Group(children))
}

func PTwoPLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(pTwoPLinePath), g.Group(children))
}

func PageSeparator(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(pageSeparatorPath), g.Group(children))
}

func PagesFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(pagesFillPath), g.Group(children))
}

func PagesLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(pagesLinePath), g.Group(children))
}

func PaintBrushFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(paintBrushFillPath), g.Group(children))
}

func PaintBrushLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(paintBrushLinePath), g.Group(children))
}

func PaintFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(paintFillPath), g.Group(children))
}

func PaintLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(paintLinePath), g.Group(children))
}

func PaletteFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(paletteFillPath), g.Group(children))
}

func PaletteLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(paletteLinePath), g.Group(children))
}

func PantoneFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(pantoneFillPath), g.Group(children))
}

func PantoneLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(pantoneLinePath), g.Group(children))
}

func Paragraph(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(paragraphPath), g.Group(children))
}

func ParentFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(parentFillPath), g.Group(children))
}

func ParentLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(parentLinePath), g.Group(children))
}

func ParenthesesFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(parenthesesFillPath), g.Group(children))
}

func ParenthesesLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(parenthesesLinePath), g.Group(children))
}

func ParkingBoxFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(parkingBoxFillPath), g.Group(children))
}

func ParkingBoxLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(parkingBoxLinePath), g.Group(children))
}

func ParkingFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(parkingFillPath), g.Group(children))
}

func ParkingLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(parkingLinePath), g.Group(children))
}

func PassExpiredFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(passExpiredFillPath), g.Group(children))
}

func PassExpiredLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(passExpiredLinePath), g.Group(children))
}

func PassPendingFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(passPendingFillPath), g.Group(children))
}

func PassPendingLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(passPendingLinePath), g.Group(children))
}

func PassValidFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(passValidFillPath), g.Group(children))
}

func PassValidLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(passValidLinePath), g.Group(children))
}

func PassportFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(passportFillPath), g.Group(children))
}

func PassportLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(passportLinePath), g.Group(children))
}

func PatreonFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(patreonFillPath), g.Group(children))
}

func PatreonLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(patreonLinePath), g.Group(children))
}

func PauseCircleFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(pauseCircleFillPath), g.Group(children))
}

func PauseCircleLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(pauseCircleLinePath), g.Group(children))
}

func PauseFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(pauseFillPath), g.Group(children))
}

func PauseLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(pauseLinePath), g.Group(children))
}

func PauseMiniFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(pauseMiniFillPath), g.Group(children))
}

func PauseMiniLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(pauseMiniLinePath), g.Group(children))
}

func PaypalFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(paypalFillPath), g.Group(children))
}

func PaypalLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(paypalLinePath), g.Group(children))
}

func PenNibFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(penNibFillPath), g.Group(children))
}

func PenNibLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(penNibLinePath), g.Group(children))
}

func PencilFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(pencilFillPath), g.Group(children))
}

func PencilLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(pencilLinePath), g.Group(children))
}

func PencilRulerFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(pencilRulerFillPath), g.Group(children))
}

func PencilRulerLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(pencilRulerLinePath), g.Group(children))
}

func PencilRulerTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(pencilRulerTwoFillPath), g.Group(children))
}

func PencilRulerTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(pencilRulerTwoLinePath), g.Group(children))
}

func PentagonFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(pentagonFillPath), g.Group(children))
}

func PentagonLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(pentagonLinePath), g.Group(children))
}

func PercentFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(percentFillPath), g.Group(children))
}

func PercentLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(percentLinePath), g.Group(children))
}

func PhoneCameraFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(phoneCameraFillPath), g.Group(children))
}

func PhoneCameraLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(phoneCameraLinePath), g.Group(children))
}

func PhoneFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(phoneFillPath), g.Group(children))
}

func PhoneFindFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(phoneFindFillPath), g.Group(children))
}

func PhoneFindLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(phoneFindLinePath), g.Group(children))
}

func PhoneLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(phoneLinePath), g.Group(children))
}

func PhoneLockFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(phoneLockFillPath), g.Group(children))
}

func PhoneLockLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(phoneLockLinePath), g.Group(children))
}

func PictureInPictureExitFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(pictureInPictureExitFillPath), g.Group(children))
}

func PictureInPictureExitLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(pictureInPictureExitLinePath), g.Group(children))
}

func PictureInPictureFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(pictureInPictureFillPath), g.Group(children))
}

func PictureInPictureLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(pictureInPictureLinePath), g.Group(children))
}

func PictureInPictureTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(pictureInPictureTwoFillPath), g.Group(children))
}

func PictureInPictureTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(pictureInPictureTwoLinePath), g.Group(children))
}

func PieChartBoxFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(pieChartBoxFillPath), g.Group(children))
}

func PieChartBoxLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(pieChartBoxLinePath), g.Group(children))
}

func PieChartFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(pieChartFillPath), g.Group(children))
}

func PieChartLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(pieChartLinePath), g.Group(children))
}

func PieChartTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(pieChartTwoFillPath), g.Group(children))
}

func PieChartTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(pieChartTwoLinePath), g.Group(children))
}

func PinDistanceFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(pinDistanceFillPath), g.Group(children))
}

func PinDistanceLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(pinDistanceLinePath), g.Group(children))
}

func PingPongFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(pingPongFillPath), g.Group(children))
}

func PingPongLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(pingPongLinePath), g.Group(children))
}

func PinterestFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(pinterestFillPath), g.Group(children))
}

func PinterestLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(pinterestLinePath), g.Group(children))
}

func PinyinInput(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(pinyinInputPath), g.Group(children))
}

func PixelfedFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(pixelfedFillPath), g.Group(children))
}

func PixelfedLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(pixelfedLinePath), g.Group(children))
}

func PlaneFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(planeFillPath), g.Group(children))
}

func PlaneLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(planeLinePath), g.Group(children))
}

func PlanetFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(planetFillPath), g.Group(children))
}

func PlanetLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(planetLinePath), g.Group(children))
}

func PlantFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(plantFillPath), g.Group(children))
}

func PlantLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(plantLinePath), g.Group(children))
}

func PlayCircleFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(playCircleFillPath), g.Group(children))
}

func PlayCircleLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(playCircleLinePath), g.Group(children))
}

func PlayFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(playFillPath), g.Group(children))
}

func PlayLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(playLinePath), g.Group(children))
}

func PlayListAddFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(playListAddFillPath), g.Group(children))
}

func PlayListAddLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(playListAddLinePath), g.Group(children))
}

func PlayListFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(playListFillPath), g.Group(children))
}

func PlayListLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(playListLinePath), g.Group(children))
}

func PlayListTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(playListTwoFillPath), g.Group(children))
}

func PlayListTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(playListTwoLinePath), g.Group(children))
}

func PlayMiniFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(playMiniFillPath), g.Group(children))
}

func PlayMiniLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(playMiniLinePath), g.Group(children))
}

func PlaystationFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(playstationFillPath), g.Group(children))
}

func PlaystationLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(playstationLinePath), g.Group(children))
}

func PlugFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(plugFillPath), g.Group(children))
}

func PlugLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(plugLinePath), g.Group(children))
}

func PlugTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(plugTwoFillPath), g.Group(children))
}

func PlugTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(plugTwoLinePath), g.Group(children))
}

func PolaroidFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(polaroidFillPath), g.Group(children))
}

func PolaroidLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(polaroidLinePath), g.Group(children))
}

func PolaroidTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(polaroidTwoFillPath), g.Group(children))
}

func PolaroidTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(polaroidTwoLinePath), g.Group(children))
}

func PoliceCarFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(policeCarFillPath), g.Group(children))
}

func PoliceCarLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(policeCarLinePath), g.Group(children))
}

func PresentationFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(presentationFillPath), g.Group(children))
}

func PresentationLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(presentationLinePath), g.Group(children))
}

func PriceTagFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(priceTagFillPath), g.Group(children))
}

func PriceTagLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(priceTagLinePath), g.Group(children))
}

func PriceTagThreeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(priceTagThreeFillPath), g.Group(children))
}

func PriceTagThreeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(priceTagThreeLinePath), g.Group(children))
}

func PriceTagTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(priceTagTwoFillPath), g.Group(children))
}

func PriceTagTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(priceTagTwoLinePath), g.Group(children))
}

func PrinterCloudFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(printerCloudFillPath), g.Group(children))
}

func PrinterCloudLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(printerCloudLinePath), g.Group(children))
}

func PrinterFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(printerFillPath), g.Group(children))
}

func PrinterLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(printerLinePath), g.Group(children))
}

func ProductHuntFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(productHuntFillPath), g.Group(children))
}

func ProductHuntLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(productHuntLinePath), g.Group(children))
}

func ProfileFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(profileFillPath), g.Group(children))
}

func ProfileLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(profileLinePath), g.Group(children))
}

func ProhibitedFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(prohibitedFillPath), g.Group(children))
}

func ProhibitedLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(prohibitedLinePath), g.Group(children))
}

func ProjectorFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(projectorFillPath), g.Group(children))
}

func ProjectorLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(projectorLinePath), g.Group(children))
}

func ProjectorTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(projectorTwoFillPath), g.Group(children))
}

func ProjectorTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(projectorTwoLinePath), g.Group(children))
}

func PsychotherapyFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(psychotherapyFillPath), g.Group(children))
}

func PsychotherapyLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(psychotherapyLinePath), g.Group(children))
}

func PulseFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(pulseFillPath), g.Group(children))
}

func PulseLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(pulseLinePath), g.Group(children))
}

func PushpinFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(pushpinFillPath), g.Group(children))
}

func PushpinLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(pushpinLinePath), g.Group(children))
}

func PushpinTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(pushpinTwoFillPath), g.Group(children))
}

func PushpinTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(pushpinTwoLinePath), g.Group(children))
}

func QqFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(qqFillPath), g.Group(children))
}

func QqLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(qqLinePath), g.Group(children))
}

func QrCodeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(qrCodeFillPath), g.Group(children))
}

func QrCodeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(qrCodeLinePath), g.Group(children))
}

func QrScanFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(qrScanFillPath), g.Group(children))
}

func QrScanLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(qrScanLinePath), g.Group(children))
}

func QrScanTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(qrScanTwoFillPath), g.Group(children))
}

func QrScanTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(qrScanTwoLinePath), g.Group(children))
}

func QuestionAnswerFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(questionAnswerFillPath), g.Group(children))
}

func QuestionAnswerLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(questionAnswerLinePath), g.Group(children))
}

func QuestionFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(questionFillPath), g.Group(children))
}

func QuestionLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(questionLinePath), g.Group(children))
}

func QuestionMark(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(questionMarkPath), g.Group(children))
}

func QuestionnaireFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(questionnaireFillPath), g.Group(children))
}

func QuestionnaireLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(questionnaireLinePath), g.Group(children))
}

func QuillPenFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(quillPenFillPath), g.Group(children))
}

func QuillPenLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(quillPenLinePath), g.Group(children))
}

func QuoteText(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(quoteTextPath), g.Group(children))
}

func RadarFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(radarFillPath), g.Group(children))
}

func RadarLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(radarLinePath), g.Group(children))
}

func RadioButtonFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(radioButtonFillPath), g.Group(children))
}

func RadioButtonLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(radioButtonLinePath), g.Group(children))
}

func RadioFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(radioFillPath), g.Group(children))
}

func RadioLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(radioLinePath), g.Group(children))
}

func RadioTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(radioTwoFillPath), g.Group(children))
}

func RadioTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(radioTwoLinePath), g.Group(children))
}

func RainbowFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(rainbowFillPath), g.Group(children))
}

func RainbowLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(rainbowLinePath), g.Group(children))
}

func RainyFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(rainyFillPath), g.Group(children))
}

func RainyLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(rainyLinePath), g.Group(children))
}

func ReactjsFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(reactjsFillPath), g.Group(children))
}

func ReactjsLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(reactjsLinePath), g.Group(children))
}

func RecordCircleFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(recordCircleFillPath), g.Group(children))
}

func RecordCircleLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(recordCircleLinePath), g.Group(children))
}

func RecordMailFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(recordMailFillPath), g.Group(children))
}

func RecordMailLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(recordMailLinePath), g.Group(children))
}

func RectangleFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(rectangleFillPath), g.Group(children))
}

func RectangleLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(rectangleLinePath), g.Group(children))
}

func RecycleFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(recycleFillPath), g.Group(children))
}

func RecycleLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(recycleLinePath), g.Group(children))
}

func RedPacketFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(redPacketFillPath), g.Group(children))
}

func RedPacketLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(redPacketLinePath), g.Group(children))
}

func RedditFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(redditFillPath), g.Group(children))
}

func RedditLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(redditLinePath), g.Group(children))
}

func RefreshFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(refreshFillPath), g.Group(children))
}

func RefreshLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(refreshLinePath), g.Group(children))
}

func RefundFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(refundFillPath), g.Group(children))
}

func RefundLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(refundLinePath), g.Group(children))
}

func RefundTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(refundTwoFillPath), g.Group(children))
}

func RefundTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(refundTwoLinePath), g.Group(children))
}

func RegisteredFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(registeredFillPath), g.Group(children))
}

func RegisteredLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(registeredLinePath), g.Group(children))
}

func RemixiconFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(remixiconFillPath), g.Group(children))
}

func RemixiconLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(remixiconLinePath), g.Group(children))
}

func RemoteControlFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(remoteControlFillPath), g.Group(children))
}

func RemoteControlLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(remoteControlLinePath), g.Group(children))
}

func RemoteControlTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(remoteControlTwoFillPath), g.Group(children))
}

func RemoteControlTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(remoteControlTwoLinePath), g.Group(children))
}

func RepeatFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(repeatFillPath), g.Group(children))
}

func RepeatLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(repeatLinePath), g.Group(children))
}

func RepeatOneFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(repeatOneFillPath), g.Group(children))
}

func RepeatOneLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(repeatOneLinePath), g.Group(children))
}

func RepeatTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(repeatTwoFillPath), g.Group(children))
}

func RepeatTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(repeatTwoLinePath), g.Group(children))
}

func ReplayFifteenFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(replayFifteenFillPath), g.Group(children))
}

func ReplayFifteenLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(replayFifteenLinePath), g.Group(children))
}

func ReplayFiveFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(replayFiveFillPath), g.Group(children))
}

func ReplayFiveLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(replayFiveLinePath), g.Group(children))
}

func ReplayTenFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(replayTenFillPath), g.Group(children))
}

func ReplayTenLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(replayTenLinePath), g.Group(children))
}

func ReplayThirtyFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(replayThirtyFillPath), g.Group(children))
}

func ReplayThirtyLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(replayThirtyLinePath), g.Group(children))
}

func ReplyAllFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(replyAllFillPath), g.Group(children))
}

func ReplyAllLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(replyAllLinePath), g.Group(children))
}

func ReplyFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(replyFillPath), g.Group(children))
}

func ReplyLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(replyLinePath), g.Group(children))
}

func ReservedFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(reservedFillPath), g.Group(children))
}

func ReservedLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(reservedLinePath), g.Group(children))
}

func RestTimeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(restTimeFillPath), g.Group(children))
}

func RestTimeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(restTimeLinePath), g.Group(children))
}

func RestartFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(restartFillPath), g.Group(children))
}

func RestartLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(restartLinePath), g.Group(children))
}

func RestaurantFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(restaurantFillPath), g.Group(children))
}

func RestaurantLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(restaurantLinePath), g.Group(children))
}

func RestaurantTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(restaurantTwoFillPath), g.Group(children))
}

func RestaurantTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(restaurantTwoLinePath), g.Group(children))
}

func RewindFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(rewindFillPath), g.Group(children))
}

func RewindLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(rewindLinePath), g.Group(children))
}

func RewindMiniFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(rewindMiniFillPath), g.Group(children))
}

func RewindMiniLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(rewindMiniLinePath), g.Group(children))
}

func RfidFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(rfidFillPath), g.Group(children))
}

func RfidLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(rfidLinePath), g.Group(children))
}

func RhythmFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(rhythmFillPath), g.Group(children))
}

func RhythmLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(rhythmLinePath), g.Group(children))
}

func RidingFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(ridingFillPath), g.Group(children))
}

func RidingLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(ridingLinePath), g.Group(children))
}

func RoadMapFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(roadMapFillPath), g.Group(children))
}

func RoadMapLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(roadMapLinePath), g.Group(children))
}

func RoadsterFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(roadsterFillPath), g.Group(children))
}

func RoadsterLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(roadsterLinePath), g.Group(children))
}

func RobotFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(robotFillPath), g.Group(children))
}

func RobotLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(robotLinePath), g.Group(children))
}

func RobotTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(robotTwoFillPath), g.Group(children))
}

func RobotTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(robotTwoLinePath), g.Group(children))
}

func RocketFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(rocketFillPath), g.Group(children))
}

func RocketLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(rocketLinePath), g.Group(children))
}

func RocketTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(rocketTwoFillPath), g.Group(children))
}

func RocketTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(rocketTwoLinePath), g.Group(children))
}

func RotateLockFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(rotateLockFillPath), g.Group(children))
}

func RotateLockLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(rotateLockLinePath), g.Group(children))
}

func RoundedCorner(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(roundedCornerPath), g.Group(children))
}

func RouteFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(routeFillPath), g.Group(children))
}

func RouteLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(routeLinePath), g.Group(children))
}

func RouterFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(routerFillPath), g.Group(children))
}

func RouterLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(routerLinePath), g.Group(children))
}

func RssFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(rssFillPath), g.Group(children))
}

func RssLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(rssLinePath), g.Group(children))
}

func RulerFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(rulerFillPath), g.Group(children))
}

func RulerLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(rulerLinePath), g.Group(children))
}

func RulerTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(rulerTwoFillPath), g.Group(children))
}

func RulerTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(rulerTwoLinePath), g.Group(children))
}

func RunFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(runFillPath), g.Group(children))
}

func RunLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(runLinePath), g.Group(children))
}

func SafariFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(safariFillPath), g.Group(children))
}

func SafariLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(safariLinePath), g.Group(children))
}

func SafeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(safeFillPath), g.Group(children))
}

func SafeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(safeLinePath), g.Group(children))
}

func SafeTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(safeTwoFillPath), g.Group(children))
}

func SafeTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(safeTwoLinePath), g.Group(children))
}

func SailboatFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(sailboatFillPath), g.Group(children))
}

func SailboatLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(sailboatLinePath), g.Group(children))
}

func SaveFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(saveFillPath), g.Group(children))
}

func SaveLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(saveLinePath), g.Group(children))
}

func SaveThreeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(saveThreeFillPath), g.Group(children))
}

func SaveThreeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(saveThreeLinePath), g.Group(children))
}

func SaveTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(saveTwoFillPath), g.Group(children))
}

func SaveTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(saveTwoLinePath), g.Group(children))
}

func ScalesFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(scalesFillPath), g.Group(children))
}

func ScalesLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(scalesLinePath), g.Group(children))
}

func ScalesThreeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(scalesThreeFillPath), g.Group(children))
}

func ScalesThreeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(scalesThreeLinePath), g.Group(children))
}

func ScalesTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(scalesTwoFillPath), g.Group(children))
}

func ScalesTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(scalesTwoLinePath), g.Group(children))
}

func ScanFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(scanFillPath), g.Group(children))
}

func ScanLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(scanLinePath), g.Group(children))
}

func ScanTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(scanTwoFillPath), g.Group(children))
}

func ScanTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(scanTwoLinePath), g.Group(children))
}

func SchoolFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(schoolFillPath), g.Group(children))
}

func SchoolLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(schoolLinePath), g.Group(children))
}

func ScissorsCutFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(scissorsCutFillPath), g.Group(children))
}

func ScissorsCutLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(scissorsCutLinePath), g.Group(children))
}

func ScissorsFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(scissorsFillPath), g.Group(children))
}

func ScissorsLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(scissorsLinePath), g.Group(children))
}

func ScissorsTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(scissorsTwoFillPath), g.Group(children))
}

func ScissorsTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(scissorsTwoLinePath), g.Group(children))
}

func ScreenshotFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(screenshotFillPath), g.Group(children))
}

func ScreenshotLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(screenshotLinePath), g.Group(children))
}

func ScreenshotTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(screenshotTwoFillPath), g.Group(children))
}

func ScreenshotTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(screenshotTwoLinePath), g.Group(children))
}

func SdCardFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(sdCardFillPath), g.Group(children))
}

func SdCardLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(sdCardLinePath), g.Group(children))
}

func SdCardMiniFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(sdCardMiniFillPath), g.Group(children))
}

func SdCardMiniLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(sdCardMiniLinePath), g.Group(children))
}

func SearchEyeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(searchEyeFillPath), g.Group(children))
}

func SearchEyeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(searchEyeLinePath), g.Group(children))
}

func SearchFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(searchFillPath), g.Group(children))
}

func SearchLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(searchLinePath), g.Group(children))
}

func SearchTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(searchTwoFillPath), g.Group(children))
}

func SearchTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(searchTwoLinePath), g.Group(children))
}

func SecurePaymentFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(securePaymentFillPath), g.Group(children))
}

func SecurePaymentLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(securePaymentLinePath), g.Group(children))
}

func SeedlingFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(seedlingFillPath), g.Group(children))
}

func SeedlingLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(seedlingLinePath), g.Group(children))
}

func SendBackward(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(sendBackwardPath), g.Group(children))
}

func SendPlaneFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(sendPlaneFillPath), g.Group(children))
}

func SendPlaneLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(sendPlaneLinePath), g.Group(children))
}

func SendPlaneTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(sendPlaneTwoFillPath), g.Group(children))
}

func SendPlaneTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(sendPlaneTwoLinePath), g.Group(children))
}

func SendToBack(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(sendToBackPath), g.Group(children))
}

func SensorFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(sensorFillPath), g.Group(children))
}

func SensorLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(sensorLinePath), g.Group(children))
}

func SeoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(seoFillPath), g.Group(children))
}

func SeoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(seoLinePath), g.Group(children))
}

func Separator(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(separatorPath), g.Group(children))
}

func ServerFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(serverFillPath), g.Group(children))
}

func ServerLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(serverLinePath), g.Group(children))
}

func ServiceFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(serviceFillPath), g.Group(children))
}

func ServiceLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(serviceLinePath), g.Group(children))
}

func SettingsFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(settingsFillPath), g.Group(children))
}

func SettingsFiveFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(settingsFiveFillPath), g.Group(children))
}

func SettingsFiveLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(settingsFiveLinePath), g.Group(children))
}

func SettingsFourFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(settingsFourFillPath), g.Group(children))
}

func SettingsFourLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(settingsFourLinePath), g.Group(children))
}

func SettingsLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(settingsLinePath), g.Group(children))
}

func SettingsSixFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(settingsSixFillPath), g.Group(children))
}

func SettingsSixLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(settingsSixLinePath), g.Group(children))
}

func SettingsThreeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(settingsThreeFillPath), g.Group(children))
}

func SettingsThreeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(settingsThreeLinePath), g.Group(children))
}

func SettingsTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(settingsTwoFillPath), g.Group(children))
}

func SettingsTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(settingsTwoLinePath), g.Group(children))
}

func ShakeHandsFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(shakeHandsFillPath), g.Group(children))
}

func ShakeHandsLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(shakeHandsLinePath), g.Group(children))
}

func ShapeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(shapeFillPath), g.Group(children))
}

func ShapeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(shapeLinePath), g.Group(children))
}

func ShapeTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(shapeTwoFillPath), g.Group(children))
}

func ShapeTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(shapeTwoLinePath), g.Group(children))
}

func ShapesFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(shapesFillPath), g.Group(children))
}

func ShapesLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(shapesLinePath), g.Group(children))
}

func ShareBoxFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(shareBoxFillPath), g.Group(children))
}

func ShareBoxLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(shareBoxLinePath), g.Group(children))
}

func ShareCircleFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(shareCircleFillPath), g.Group(children))
}

func ShareCircleLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(shareCircleLinePath), g.Group(children))
}

func ShareFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(shareFillPath), g.Group(children))
}

func ShareForwardBoxFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(shareForwardBoxFillPath), g.Group(children))
}

func ShareForwardBoxLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(shareForwardBoxLinePath), g.Group(children))
}

func ShareForwardFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(shareForwardFillPath), g.Group(children))
}

func ShareForwardLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(shareForwardLinePath), g.Group(children))
}

func ShareForwardTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(shareForwardTwoFillPath), g.Group(children))
}

func ShareForwardTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(shareForwardTwoLinePath), g.Group(children))
}

func ShareLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(shareLinePath), g.Group(children))
}

func ShieldCheckFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(shieldCheckFillPath), g.Group(children))
}

func ShieldCheckLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(shieldCheckLinePath), g.Group(children))
}

func ShieldCrossFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(shieldCrossFillPath), g.Group(children))
}

func ShieldCrossLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(shieldCrossLinePath), g.Group(children))
}

func ShieldFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(shieldFillPath), g.Group(children))
}

func ShieldFlashFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(shieldFlashFillPath), g.Group(children))
}

func ShieldFlashLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(shieldFlashLinePath), g.Group(children))
}

func ShieldKeyholeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(shieldKeyholeFillPath), g.Group(children))
}

func ShieldKeyholeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(shieldKeyholeLinePath), g.Group(children))
}

func ShieldLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(shieldLinePath), g.Group(children))
}

func ShieldStarFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(shieldStarFillPath), g.Group(children))
}

func ShieldStarLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(shieldStarLinePath), g.Group(children))
}

func ShieldUserFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(shieldUserFillPath), g.Group(children))
}

func ShieldUserLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(shieldUserLinePath), g.Group(children))
}

func ShiningFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(shiningFillPath), g.Group(children))
}

func ShiningLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(shiningLinePath), g.Group(children))
}

func ShiningTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(shiningTwoFillPath), g.Group(children))
}

func ShiningTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(shiningTwoLinePath), g.Group(children))
}

func ShipFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(shipFillPath), g.Group(children))
}

func ShipLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(shipLinePath), g.Group(children))
}

func ShipTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(shipTwoFillPath), g.Group(children))
}

func ShipTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(shipTwoLinePath), g.Group(children))
}

func ShirtFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(shirtFillPath), g.Group(children))
}

func ShirtLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(shirtLinePath), g.Group(children))
}

func ShoppingBagFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(shoppingBagFillPath), g.Group(children))
}

func ShoppingBagLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(shoppingBagLinePath), g.Group(children))
}

func ShoppingBagThreeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(shoppingBagThreeFillPath), g.Group(children))
}

func ShoppingBagThreeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(shoppingBagThreeLinePath), g.Group(children))
}

func ShoppingBagTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(shoppingBagTwoFillPath), g.Group(children))
}

func ShoppingBagTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(shoppingBagTwoLinePath), g.Group(children))
}

func ShoppingBasketFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(shoppingBasketFillPath), g.Group(children))
}

func ShoppingBasketLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(shoppingBasketLinePath), g.Group(children))
}

func ShoppingBasketTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(shoppingBasketTwoFillPath), g.Group(children))
}

func ShoppingBasketTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(shoppingBasketTwoLinePath), g.Group(children))
}

func ShoppingCartFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(shoppingCartFillPath), g.Group(children))
}

func ShoppingCartLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(shoppingCartLinePath), g.Group(children))
}

func ShoppingCartTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(shoppingCartTwoFillPath), g.Group(children))
}

func ShoppingCartTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(shoppingCartTwoLinePath), g.Group(children))
}

func ShowersFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(showersFillPath), g.Group(children))
}

func ShowersLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(showersLinePath), g.Group(children))
}

func ShuffleFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(shuffleFillPath), g.Group(children))
}

func ShuffleLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(shuffleLinePath), g.Group(children))
}

func ShutDownFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(shutDownFillPath), g.Group(children))
}

func ShutDownLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(shutDownLinePath), g.Group(children))
}

func SideBarFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(sideBarFillPath), g.Group(children))
}

func SideBarLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(sideBarLinePath), g.Group(children))
}

func SignalTowerFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(signalTowerFillPath), g.Group(children))
}

func SignalTowerLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(signalTowerLinePath), g.Group(children))
}

func SignalWifiErrorFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(signalWifiErrorFillPath), g.Group(children))
}

func SignalWifiErrorLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(signalWifiErrorLinePath), g.Group(children))
}

func SignalWifiFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(signalWifiFillPath), g.Group(children))
}

func SignalWifiLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(signalWifiLinePath), g.Group(children))
}

func SignalWifiOffFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(signalWifiOffFillPath), g.Group(children))
}

func SignalWifiOffLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(signalWifiOffLinePath), g.Group(children))
}

func SignalWifiOneFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(signalWifiOneFillPath), g.Group(children))
}

func SignalWifiOneLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(signalWifiOneLinePath), g.Group(children))
}

func SignalWifiThreeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(signalWifiThreeFillPath), g.Group(children))
}

func SignalWifiThreeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(signalWifiThreeLinePath), g.Group(children))
}

func SignalWifiTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(signalWifiTwoFillPath), g.Group(children))
}

func SignalWifiTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(signalWifiTwoLinePath), g.Group(children))
}

func SimCardFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(simCardFillPath), g.Group(children))
}

func SimCardLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(simCardLinePath), g.Group(children))
}

func SimCardTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(simCardTwoFillPath), g.Group(children))
}

func SimCardTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(simCardTwoLinePath), g.Group(children))
}

func SingleQuotesL(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(singleQuotesLPath), g.Group(children))
}

func SingleQuotesR(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(singleQuotesRPath), g.Group(children))
}

func SipFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(sipFillPath), g.Group(children))
}

func SipLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(sipLinePath), g.Group(children))
}

func Sketching(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(sketchingPath), g.Group(children))
}

func SkipBackFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(skipBackFillPath), g.Group(children))
}

func SkipBackLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(skipBackLinePath), g.Group(children))
}

func SkipBackMiniFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(skipBackMiniFillPath), g.Group(children))
}

func SkipBackMiniLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(skipBackMiniLinePath), g.Group(children))
}

func SkipDownFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(skipDownFillPath), g.Group(children))
}

func SkipDownLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(skipDownLinePath), g.Group(children))
}

func SkipForwardFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(skipForwardFillPath), g.Group(children))
}

func SkipForwardLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(skipForwardLinePath), g.Group(children))
}

func SkipForwardMiniFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(skipForwardMiniFillPath), g.Group(children))
}

func SkipForwardMiniLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(skipForwardMiniLinePath), g.Group(children))
}

func SkipLeftFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(skipLeftFillPath), g.Group(children))
}

func SkipLeftLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(skipLeftLinePath), g.Group(children))
}

func SkipRightFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(skipRightFillPath), g.Group(children))
}

func SkipRightLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(skipRightLinePath), g.Group(children))
}

func SkipUpFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(skipUpFillPath), g.Group(children))
}

func SkipUpLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(skipUpLinePath), g.Group(children))
}

func SkullFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(skullFillPath), g.Group(children))
}

func SkullLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(skullLinePath), g.Group(children))
}

func SkullTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(skullTwoFillPath), g.Group(children))
}

func SkullTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(skullTwoLinePath), g.Group(children))
}

func SkypeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(skypeFillPath), g.Group(children))
}

func SkypeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(skypeLinePath), g.Group(children))
}

func SlackFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(slackFillPath), g.Group(children))
}

func SlackLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(slackLinePath), g.Group(children))
}

func SlashCommands(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(slashCommandsPath), g.Group(children))
}

func SlashCommandsTwo(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(slashCommandsTwoPath), g.Group(children))
}

func SliceFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(sliceFillPath), g.Group(children))
}

func SliceLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(sliceLinePath), g.Group(children))
}

func SlideshowFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(slideshowFillPath), g.Group(children))
}

func SlideshowFourFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(slideshowFourFillPath), g.Group(children))
}

func SlideshowFourLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(slideshowFourLinePath), g.Group(children))
}

func SlideshowLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(slideshowLinePath), g.Group(children))
}

func SlideshowThreeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(slideshowThreeFillPath), g.Group(children))
}

func SlideshowThreeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(slideshowThreeLinePath), g.Group(children))
}

func SlideshowTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(slideshowTwoFillPath), g.Group(children))
}

func SlideshowTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(slideshowTwoLinePath), g.Group(children))
}

func SlowDownFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(slowDownFillPath), g.Group(children))
}

func SlowDownLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(slowDownLinePath), g.Group(children))
}

func SmartphoneFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(smartphoneFillPath), g.Group(children))
}

func SmartphoneLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(smartphoneLinePath), g.Group(children))
}

func SnapchatFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(snapchatFillPath), g.Group(children))
}

func SnapchatLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(snapchatLinePath), g.Group(children))
}

func SnowyFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(snowyFillPath), g.Group(children))
}

func SnowyLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(snowyLinePath), g.Group(children))
}

func SortAsc(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(sortAscPath), g.Group(children))
}

func SortDesc(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(sortDescPath), g.Group(children))
}

func SoundModuleFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(soundModuleFillPath), g.Group(children))
}

func SoundModuleLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(soundModuleLinePath), g.Group(children))
}

func SoundcloudFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(soundcloudFillPath), g.Group(children))
}

func SoundcloudLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(soundcloudLinePath), g.Group(children))
}

func Space(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(spacePath), g.Group(children))
}

func SpaceShipFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(spaceShipFillPath), g.Group(children))
}

func SpaceShipLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(spaceShipLinePath), g.Group(children))
}

func SpamFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(spamFillPath), g.Group(children))
}

func SpamLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(spamLinePath), g.Group(children))
}

func SpamThreeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(spamThreeFillPath), g.Group(children))
}

func SpamThreeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(spamThreeLinePath), g.Group(children))
}

func SpamTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(spamTwoFillPath), g.Group(children))
}

func SpamTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(spamTwoLinePath), g.Group(children))
}

func SparklingFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(sparklingFillPath), g.Group(children))
}

func SparklingLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(sparklingLinePath), g.Group(children))
}

func SparklingTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(sparklingTwoFillPath), g.Group(children))
}

func SparklingTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(sparklingTwoLinePath), g.Group(children))
}

func SpeakFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(speakFillPath), g.Group(children))
}

func SpeakLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(speakLinePath), g.Group(children))
}

func SpeakerFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(speakerFillPath), g.Group(children))
}

func SpeakerLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(speakerLinePath), g.Group(children))
}

func SpeakerThreeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(speakerThreeFillPath), g.Group(children))
}

func SpeakerThreeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(speakerThreeLinePath), g.Group(children))
}

func SpeakerTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(speakerTwoFillPath), g.Group(children))
}

func SpeakerTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(speakerTwoLinePath), g.Group(children))
}

func SpectrumFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(spectrumFillPath), g.Group(children))
}

func SpectrumLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(spectrumLinePath), g.Group(children))
}

func SpeedFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(speedFillPath), g.Group(children))
}

func SpeedLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(speedLinePath), g.Group(children))
}

func SpeedMiniFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(speedMiniFillPath), g.Group(children))
}

func SpeedMiniLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(speedMiniLinePath), g.Group(children))
}

func SpeedUpFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(speedUpFillPath), g.Group(children))
}

func SpeedUpLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(speedUpLinePath), g.Group(children))
}

func SplitCellsHorizontal(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(splitCellsHorizontalPath), g.Group(children))
}

func SplitCellsVertical(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(splitCellsVerticalPath), g.Group(children))
}

func SpotifyFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(spotifyFillPath), g.Group(children))
}

func SpotifyLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(spotifyLinePath), g.Group(children))
}

func SpyFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(spyFillPath), g.Group(children))
}

func SpyLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(spyLinePath), g.Group(children))
}

func SquareFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(squareFillPath), g.Group(children))
}

func SquareLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(squareLinePath), g.Group(children))
}

func StackFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(stackFillPath), g.Group(children))
}

func StackLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(stackLinePath), g.Group(children))
}

func StackOverflowFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(stackOverflowFillPath), g.Group(children))
}

func StackOverflowLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(stackOverflowLinePath), g.Group(children))
}

func StackshareFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(stackshareFillPath), g.Group(children))
}

func StackshareLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(stackshareLinePath), g.Group(children))
}

func StarFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(starFillPath), g.Group(children))
}

func StarHalfFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(starHalfFillPath), g.Group(children))
}

func StarHalfLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(starHalfLinePath), g.Group(children))
}

func StarHalfSFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(starHalfSFillPath), g.Group(children))
}

func StarHalfSLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(starHalfSLinePath), g.Group(children))
}

func StarLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(starLinePath), g.Group(children))
}

func StarSFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(starSFillPath), g.Group(children))
}

func StarSLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(starSLinePath), g.Group(children))
}

func StarSmileFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(starSmileFillPath), g.Group(children))
}

func StarSmileLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(starSmileLinePath), g.Group(children))
}

func SteamFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(steamFillPath), g.Group(children))
}

func SteamLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(steamLinePath), g.Group(children))
}

func SteeringFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(steeringFillPath), g.Group(children))
}

func SteeringLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(steeringLinePath), g.Group(children))
}

func SteeringTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(steeringTwoFillPath), g.Group(children))
}

func SteeringTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(steeringTwoLinePath), g.Group(children))
}

func StethoscopeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(stethoscopeFillPath), g.Group(children))
}

func StethoscopeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(stethoscopeLinePath), g.Group(children))
}

func StickyNoteFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(stickyNoteFillPath), g.Group(children))
}

func StickyNoteLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(stickyNoteLinePath), g.Group(children))
}

func StickyNoteTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(stickyNoteTwoFillPath), g.Group(children))
}

func StickyNoteTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(stickyNoteTwoLinePath), g.Group(children))
}

func StockFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(stockFillPath), g.Group(children))
}

func StockLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(stockLinePath), g.Group(children))
}

func StopCircleFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(stopCircleFillPath), g.Group(children))
}

func StopCircleLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(stopCircleLinePath), g.Group(children))
}

func StopFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(stopFillPath), g.Group(children))
}

func StopLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(stopLinePath), g.Group(children))
}

func StopMiniFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(stopMiniFillPath), g.Group(children))
}

func StopMiniLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(stopMiniLinePath), g.Group(children))
}

func StoreFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(storeFillPath), g.Group(children))
}

func StoreLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(storeLinePath), g.Group(children))
}

func StoreThreeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(storeThreeFillPath), g.Group(children))
}

func StoreThreeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(storeThreeLinePath), g.Group(children))
}

func StoreTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(storeTwoFillPath), g.Group(children))
}

func StoreTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(storeTwoLinePath), g.Group(children))
}

func Strikethrough(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(strikethroughPath), g.Group(children))
}

func StrikethroughTwo(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(strikethroughTwoPath), g.Group(children))
}

func Subscript(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(subscriptPath), g.Group(children))
}

func SubscriptTwo(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(subscriptTwoPath), g.Group(children))
}

func SubtractFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(subtractFillPath), g.Group(children))
}

func SubtractLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(subtractLinePath), g.Group(children))
}

func SubwayFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(subwayFillPath), g.Group(children))
}

func SubwayLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(subwayLinePath), g.Group(children))
}

func SubwayWifiFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(subwayWifiFillPath), g.Group(children))
}

func SubwayWifiLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(subwayWifiLinePath), g.Group(children))
}

func SuitcaseFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(suitcaseFillPath), g.Group(children))
}

func SuitcaseLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(suitcaseLinePath), g.Group(children))
}

func SuitcaseThreeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(suitcaseThreeFillPath), g.Group(children))
}

func SuitcaseThreeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(suitcaseThreeLinePath), g.Group(children))
}

func SuitcaseTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(suitcaseTwoFillPath), g.Group(children))
}

func SuitcaseTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(suitcaseTwoLinePath), g.Group(children))
}

func SunCloudyFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(sunCloudyFillPath), g.Group(children))
}

func SunCloudyLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(sunCloudyLinePath), g.Group(children))
}

func SunFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(sunFillPath), g.Group(children))
}

func SunFoggyFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(sunFoggyFillPath), g.Group(children))
}

func SunFoggyLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(sunFoggyLinePath), g.Group(children))
}

func SunLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(sunLinePath), g.Group(children))
}

func SupabaseFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(supabaseFillPath), g.Group(children))
}

func SupabaseLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(supabaseLinePath), g.Group(children))
}

func Superscript(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(superscriptPath), g.Group(children))
}

func SuperscriptTwo(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(superscriptTwoPath), g.Group(children))
}

func SurgicalMaskFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(surgicalMaskFillPath), g.Group(children))
}

func SurgicalMaskLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(surgicalMaskLinePath), g.Group(children))
}

func SurroundSoundFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(surroundSoundFillPath), g.Group(children))
}

func SurroundSoundLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(surroundSoundLinePath), g.Group(children))
}

func SurveyFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(surveyFillPath), g.Group(children))
}

func SurveyLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(surveyLinePath), g.Group(children))
}

func SwapBoxFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(swapBoxFillPath), g.Group(children))
}

func SwapBoxLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(swapBoxLinePath), g.Group(children))
}

func SwapFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(swapFillPath), g.Group(children))
}

func SwapLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(swapLinePath), g.Group(children))
}

func SwitchFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(switchFillPath), g.Group(children))
}

func SwitchLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(switchLinePath), g.Group(children))
}

func SwordFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(swordFillPath), g.Group(children))
}

func SwordLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(swordLinePath), g.Group(children))
}

func SyringeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(syringeFillPath), g.Group(children))
}

func SyringeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(syringeLinePath), g.Group(children))
}

func TBoxFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(tBoxFillPath), g.Group(children))
}

func TBoxLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(tBoxLinePath), g.Group(children))
}

func TShirtAirFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(tShirtAirFillPath), g.Group(children))
}

func TShirtAirLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(tShirtAirLinePath), g.Group(children))
}

func TShirtFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(tShirtFillPath), g.Group(children))
}

func TShirtLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(tShirtLinePath), g.Group(children))
}

func TShirtTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(tShirtTwoFillPath), g.Group(children))
}

func TShirtTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(tShirtTwoLinePath), g.Group(children))
}

func TableAltFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(tableAltFillPath), g.Group(children))
}

func TableAltLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(tableAltLinePath), g.Group(children))
}

func TableFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(tableFillPath), g.Group(children))
}

func TableLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(tableLinePath), g.Group(children))
}

func TableTwo(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(tableTwoPath), g.Group(children))
}

func TabletFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(tabletFillPath), g.Group(children))
}

func TabletLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(tabletLinePath), g.Group(children))
}

func TakeawayFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(takeawayFillPath), g.Group(children))
}

func TakeawayLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(takeawayLinePath), g.Group(children))
}

func TaobaoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(taobaoFillPath), g.Group(children))
}

func TaobaoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(taobaoLinePath), g.Group(children))
}

func TapeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(tapeFillPath), g.Group(children))
}

func TapeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(tapeLinePath), g.Group(children))
}

func TaskFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(taskFillPath), g.Group(children))
}

func TaskLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(taskLinePath), g.Group(children))
}

func TaxiFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(taxiFillPath), g.Group(children))
}

func TaxiLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(taxiLinePath), g.Group(children))
}

func TaxiWifiFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(taxiWifiFillPath), g.Group(children))
}

func TaxiWifiLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(taxiWifiLinePath), g.Group(children))
}

func TeamFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(teamFillPath), g.Group(children))
}

func TeamLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(teamLinePath), g.Group(children))
}

func TelegramFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(telegramFillPath), g.Group(children))
}

func TelegramLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(telegramLinePath), g.Group(children))
}

func TempColdFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(tempColdFillPath), g.Group(children))
}

func TempColdLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(tempColdLinePath), g.Group(children))
}

func TempHotFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(tempHotFillPath), g.Group(children))
}

func TempHotLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(tempHotLinePath), g.Group(children))
}

func TentFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(tentFillPath), g.Group(children))
}

func TentLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(tentLinePath), g.Group(children))
}

func TerminalBoxFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(terminalBoxFillPath), g.Group(children))
}

func TerminalBoxLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(terminalBoxLinePath), g.Group(children))
}

func TerminalFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(terminalFillPath), g.Group(children))
}

func TerminalLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(terminalLinePath), g.Group(children))
}

func TerminalWindowFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(terminalWindowFillPath), g.Group(children))
}

func TerminalWindowLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(terminalWindowLinePath), g.Group(children))
}

func TestTubeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(testTubeFillPath), g.Group(children))
}

func TestTubeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(testTubeLinePath), g.Group(children))
}

func Text(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(textPath), g.Group(children))
}

func TextDirectionL(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(textDirectionLPath), g.Group(children))
}

func TextDirectionR(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(textDirectionRPath), g.Group(children))
}

func TextSpacing(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(textSpacingPath), g.Group(children))
}

func TextWrap(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(textWrapPath), g.Group(children))
}

func ThermometerFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(thermometerFillPath), g.Group(children))
}

func ThermometerLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(thermometerLinePath), g.Group(children))
}

func ThreadsFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(threadsFillPath), g.Group(children))
}

func ThreadsLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(threadsLinePath), g.Group(children))
}

func ThumbDownFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(thumbDownFillPath), g.Group(children))
}

func ThumbDownLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(thumbDownLinePath), g.Group(children))
}

func ThumbUpFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(thumbUpFillPath), g.Group(children))
}

func ThumbUpLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(thumbUpLinePath), g.Group(children))
}

func ThunderstormsFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(thunderstormsFillPath), g.Group(children))
}

func ThunderstormsLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(thunderstormsLinePath), g.Group(children))
}

func TicketFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(ticketFillPath), g.Group(children))
}

func TicketLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(ticketLinePath), g.Group(children))
}

func TicketTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(ticketTwoFillPath), g.Group(children))
}

func TicketTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(ticketTwoLinePath), g.Group(children))
}

func TiktokFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(tiktokFillPath), g.Group(children))
}

func TiktokLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(tiktokLinePath), g.Group(children))
}

func TimeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(timeFillPath), g.Group(children))
}

func TimeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(timeLinePath), g.Group(children))
}

func TimerFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(timerFillPath), g.Group(children))
}

func TimerFlashFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(timerFlashFillPath), g.Group(children))
}

func TimerFlashLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(timerFlashLinePath), g.Group(children))
}

func TimerLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(timerLinePath), g.Group(children))
}

func TimerTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(timerTwoFillPath), g.Group(children))
}

func TimerTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(timerTwoLinePath), g.Group(children))
}

func TodoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(todoFillPath), g.Group(children))
}

func TodoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(todoLinePath), g.Group(children))
}

func ToggleFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(toggleFillPath), g.Group(children))
}

func ToggleLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(toggleLinePath), g.Group(children))
}

func TokenSwapFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(tokenSwapFillPath), g.Group(children))
}

func TokenSwapLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(tokenSwapLinePath), g.Group(children))
}

func ToolsFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(toolsFillPath), g.Group(children))
}

func ToolsLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(toolsLinePath), g.Group(children))
}

func TornadoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(tornadoFillPath), g.Group(children))
}

func TornadoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(tornadoLinePath), g.Group(children))
}

func TrademarkFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(trademarkFillPath), g.Group(children))
}

func TrademarkLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(trademarkLinePath), g.Group(children))
}

func TrafficLightFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(trafficLightFillPath), g.Group(children))
}

func TrafficLightLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(trafficLightLinePath), g.Group(children))
}

func TrainFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(trainFillPath), g.Group(children))
}

func TrainLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(trainLinePath), g.Group(children))
}

func TrainWifiFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(trainWifiFillPath), g.Group(children))
}

func TrainWifiLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(trainWifiLinePath), g.Group(children))
}

func Translate(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(translatePath), g.Group(children))
}

func TranslateTwo(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(translateTwoPath), g.Group(children))
}

func TravestiFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(travestiFillPath), g.Group(children))
}

func TravestiLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(travestiLinePath), g.Group(children))
}

func TreasureMapFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(treasureMapFillPath), g.Group(children))
}

func TreasureMapLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(treasureMapLinePath), g.Group(children))
}

func TreeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(treeFillPath), g.Group(children))
}

func TreeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(treeLinePath), g.Group(children))
}

func TrelloFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(trelloFillPath), g.Group(children))
}

func TrelloLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(trelloLinePath), g.Group(children))
}

func TriangleFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(triangleFillPath), g.Group(children))
}

func TriangleLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(triangleLinePath), g.Group(children))
}

func TrophyFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(trophyFillPath), g.Group(children))
}

func TrophyLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(trophyLinePath), g.Group(children))
}

func TruckFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(truckFillPath), g.Group(children))
}

func TruckLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(truckLinePath), g.Group(children))
}

func TumblrFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(tumblrFillPath), g.Group(children))
}

func TumblrLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(tumblrLinePath), g.Group(children))
}

func TvFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(tvFillPath), g.Group(children))
}

func TvLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(tvLinePath), g.Group(children))
}

func TvTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(tvTwoFillPath), g.Group(children))
}

func TvTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(tvTwoLinePath), g.Group(children))
}

func TwentyFourHoursFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(twentyFourHoursFillPath), g.Group(children))
}

func TwentyFourHoursLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(twentyFourHoursLinePath), g.Group(children))
}

func TwitchFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(twitchFillPath), g.Group(children))
}

func TwitchLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(twitchLinePath), g.Group(children))
}

func TwitterFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(twitterFillPath), g.Group(children))
}

func TwitterLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(twitterLinePath), g.Group(children))
}

func TwitterXFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(twitterXFillPath), g.Group(children))
}

func TwitterXLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(twitterXLinePath), g.Group(children))
}

func TyphoonFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(typhoonFillPath), g.Group(children))
}

func TyphoonLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(typhoonLinePath), g.Group(children))
}

func UDiskFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(uDiskFillPath), g.Group(children))
}

func UDiskLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(uDiskLinePath), g.Group(children))
}

func UbuntuFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(ubuntuFillPath), g.Group(children))
}

func UbuntuLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(ubuntuLinePath), g.Group(children))
}

func UmbrellaFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(umbrellaFillPath), g.Group(children))
}

func UmbrellaLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(umbrellaLinePath), g.Group(children))
}

func Underline(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(underlinePath), g.Group(children))
}

func UninstallFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(uninstallFillPath), g.Group(children))
}

func UninstallLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(uninstallLinePath), g.Group(children))
}

func UnpinFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(unpinFillPath), g.Group(children))
}

func UnpinLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(unpinLinePath), g.Group(children))
}

func UnsplashFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(unsplashFillPath), g.Group(children))
}

func UnsplashLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(unsplashLinePath), g.Group(children))
}

func UploadCloudFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(uploadCloudFillPath), g.Group(children))
}

func UploadCloudLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(uploadCloudLinePath), g.Group(children))
}

func UploadCloudTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(uploadCloudTwoFillPath), g.Group(children))
}

func UploadCloudTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(uploadCloudTwoLinePath), g.Group(children))
}

func UploadFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(uploadFillPath), g.Group(children))
}

func UploadLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(uploadLinePath), g.Group(children))
}

func UploadTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(uploadTwoFillPath), g.Group(children))
}

func UploadTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(uploadTwoLinePath), g.Group(children))
}

func UsbFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(usbFillPath), g.Group(children))
}

func UsbLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(usbLinePath), g.Group(children))
}

func UserAddFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(userAddFillPath), g.Group(children))
}

func UserAddLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(userAddLinePath), g.Group(children))
}

func UserFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(userFillPath), g.Group(children))
}

func UserFiveFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(userFiveFillPath), g.Group(children))
}

func UserFiveLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(userFiveLinePath), g.Group(children))
}

func UserFollowFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(userFollowFillPath), g.Group(children))
}

func UserFollowLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(userFollowLinePath), g.Group(children))
}

func UserForbidFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(userForbidFillPath), g.Group(children))
}

func UserForbidLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(userForbidLinePath), g.Group(children))
}

func UserFourFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(userFourFillPath), g.Group(children))
}

func UserFourLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(userFourLinePath), g.Group(children))
}

func UserHeartFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(userHeartFillPath), g.Group(children))
}

func UserHeartLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(userHeartLinePath), g.Group(children))
}

func UserLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(userLinePath), g.Group(children))
}

func UserLocationFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(userLocationFillPath), g.Group(children))
}

func UserLocationLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(userLocationLinePath), g.Group(children))
}

func UserReceivedFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(userReceivedFillPath), g.Group(children))
}

func UserReceivedLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(userReceivedLinePath), g.Group(children))
}

func UserReceivedTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(userReceivedTwoFillPath), g.Group(children))
}

func UserReceivedTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(userReceivedTwoLinePath), g.Group(children))
}

func UserSearchFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(userSearchFillPath), g.Group(children))
}

func UserSearchLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(userSearchLinePath), g.Group(children))
}

func UserSettingsFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(userSettingsFillPath), g.Group(children))
}

func UserSettingsLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(userSettingsLinePath), g.Group(children))
}

func UserSharedFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(userSharedFillPath), g.Group(children))
}

func UserSharedLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(userSharedLinePath), g.Group(children))
}

func UserSharedTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(userSharedTwoFillPath), g.Group(children))
}

func UserSharedTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(userSharedTwoLinePath), g.Group(children))
}

func UserSixFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(userSixFillPath), g.Group(children))
}

func UserSixLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(userSixLinePath), g.Group(children))
}

func UserSmileFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(userSmileFillPath), g.Group(children))
}

func UserSmileLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(userSmileLinePath), g.Group(children))
}

func UserStarFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(userStarFillPath), g.Group(children))
}

func UserStarLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(userStarLinePath), g.Group(children))
}

func UserThreeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(userThreeFillPath), g.Group(children))
}

func UserThreeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(userThreeLinePath), g.Group(children))
}

func UserTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(userTwoFillPath), g.Group(children))
}

func UserTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(userTwoLinePath), g.Group(children))
}

func UserUnfollowFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(userUnfollowFillPath), g.Group(children))
}

func UserUnfollowLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(userUnfollowLinePath), g.Group(children))
}

func UserVoiceFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(userVoiceFillPath), g.Group(children))
}

func UserVoiceLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(userVoiceLinePath), g.Group(children))
}

func VerifiedBadgeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(verifiedBadgeFillPath), g.Group(children))
}

func VerifiedBadgeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(verifiedBadgeLinePath), g.Group(children))
}

func VideoAddFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(videoAddFillPath), g.Group(children))
}

func VideoAddLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(videoAddLinePath), g.Group(children))
}

func VideoChatFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(videoChatFillPath), g.Group(children))
}

func VideoChatLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(videoChatLinePath), g.Group(children))
}

func VideoDownloadFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(videoDownloadFillPath), g.Group(children))
}

func VideoDownloadLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(videoDownloadLinePath), g.Group(children))
}

func VideoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(videoFillPath), g.Group(children))
}

func VideoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(videoLinePath), g.Group(children))
}

func VideoUploadFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(videoUploadFillPath), g.Group(children))
}

func VideoUploadLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(videoUploadLinePath), g.Group(children))
}

func VidiconFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(vidiconFillPath), g.Group(children))
}

func VidiconLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(vidiconLinePath), g.Group(children))
}

func VidiconTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(vidiconTwoFillPath), g.Group(children))
}

func VidiconTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(vidiconTwoLinePath), g.Group(children))
}

func VimeoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(vimeoFillPath), g.Group(children))
}

func VimeoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(vimeoLinePath), g.Group(children))
}

func VipCrownFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(vipCrownFillPath), g.Group(children))
}

func VipCrownLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(vipCrownLinePath), g.Group(children))
}

func VipCrownTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(vipCrownTwoFillPath), g.Group(children))
}

func VipCrownTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(vipCrownTwoLinePath), g.Group(children))
}

func VipDiamondFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(vipDiamondFillPath), g.Group(children))
}

func VipDiamondLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(vipDiamondLinePath), g.Group(children))
}

func VipFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(vipFillPath), g.Group(children))
}

func VipLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(vipLinePath), g.Group(children))
}

func VirusFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(virusFillPath), g.Group(children))
}

func VirusLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(virusLinePath), g.Group(children))
}

func VisaFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(visaFillPath), g.Group(children))
}

func VisaLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(visaLinePath), g.Group(children))
}

func VoiceRecognitionFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(voiceRecognitionFillPath), g.Group(children))
}

func VoiceRecognitionLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(voiceRecognitionLinePath), g.Group(children))
}

func VoiceprintFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(voiceprintFillPath), g.Group(children))
}

func VoiceprintLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(voiceprintLinePath), g.Group(children))
}

func VolumeDownFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(volumeDownFillPath), g.Group(children))
}

func VolumeDownLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(volumeDownLinePath), g.Group(children))
}

func VolumeMuteFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(volumeMuteFillPath), g.Group(children))
}

func VolumeMuteLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(volumeMuteLinePath), g.Group(children))
}

func VolumeOffVibrateFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(volumeOffVibrateFillPath), g.Group(children))
}

func VolumeOffVibrateLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(volumeOffVibrateLinePath), g.Group(children))
}

func VolumeUpFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(volumeUpFillPath), g.Group(children))
}

func VolumeUpLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(volumeUpLinePath), g.Group(children))
}

func VolumeVibrateFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(volumeVibrateFillPath), g.Group(children))
}

func VolumeVibrateLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(volumeVibrateLinePath), g.Group(children))
}

func VuejsFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(vuejsFillPath), g.Group(children))
}

func VuejsLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(vuejsLinePath), g.Group(children))
}

func WalkFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(walkFillPath), g.Group(children))
}

func WalkLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(walkLinePath), g.Group(children))
}

func WalletFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(walletFillPath), g.Group(children))
}

func WalletLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(walletLinePath), g.Group(children))
}

func WalletThreeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(walletThreeFillPath), g.Group(children))
}

func WalletThreeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(walletThreeLinePath), g.Group(children))
}

func WalletTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(walletTwoFillPath), g.Group(children))
}

func WalletTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(walletTwoLinePath), g.Group(children))
}

func WaterFlashFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(waterFlashFillPath), g.Group(children))
}

func WaterFlashLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(waterFlashLinePath), g.Group(children))
}

func WaterPercentFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(waterPercentFillPath), g.Group(children))
}

func WaterPercentLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(waterPercentLinePath), g.Group(children))
}

func WebcamFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(webcamFillPath), g.Group(children))
}

func WebcamLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(webcamLinePath), g.Group(children))
}

func WechatChannelsFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(wechatChannelsFillPath), g.Group(children))
}

func WechatChannelsLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(wechatChannelsLinePath), g.Group(children))
}

func WechatFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(wechatFillPath), g.Group(children))
}

func WechatLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(wechatLinePath), g.Group(children))
}

func WechatPayFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(wechatPayFillPath), g.Group(children))
}

func WechatPayLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(wechatPayLinePath), g.Group(children))
}

func WechatTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(wechatTwoFillPath), g.Group(children))
}

func WechatTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(wechatTwoLinePath), g.Group(children))
}

func WeiboFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(weiboFillPath), g.Group(children))
}

func WeiboLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(weiboLinePath), g.Group(children))
}

func WhatsappFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(whatsappFillPath), g.Group(children))
}

func WhatsappLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(whatsappLinePath), g.Group(children))
}

func WheelchairFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(wheelchairFillPath), g.Group(children))
}

func WheelchairLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(wheelchairLinePath), g.Group(children))
}

func WifiFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(wifiFillPath), g.Group(children))
}

func WifiLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(wifiLinePath), g.Group(children))
}

func WifiOffFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(wifiOffFillPath), g.Group(children))
}

func WifiOffLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(wifiOffLinePath), g.Group(children))
}

func WindowFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(windowFillPath), g.Group(children))
}

func WindowLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(windowLinePath), g.Group(children))
}

func WindowTwoFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(windowTwoFillPath), g.Group(children))
}

func WindowTwoLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(windowTwoLinePath), g.Group(children))
}

func WindowsFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(windowsFillPath), g.Group(children))
}

func WindowsLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(windowsLinePath), g.Group(children))
}

func WindyFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(windyFillPath), g.Group(children))
}

func WindyLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(windyLinePath), g.Group(children))
}

func WirelessChargingFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(wirelessChargingFillPath), g.Group(children))
}

func WirelessChargingLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(wirelessChargingLinePath), g.Group(children))
}

func WomenFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(womenFillPath), g.Group(children))
}

func WomenLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(womenLinePath), g.Group(children))
}

func WordpressFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(wordpressFillPath), g.Group(children))
}

func WordpressLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(wordpressLinePath), g.Group(children))
}

func WubiInput(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(wubiInputPath), g.Group(children))
}

func XboxFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(xboxFillPath), g.Group(children))
}

func XboxLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(xboxLinePath), g.Group(children))
}

func XingFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(xingFillPath), g.Group(children))
}

func XingLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(xingLinePath), g.Group(children))
}

func YoutubeFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(youtubeFillPath), g.Group(children))
}

func YoutubeLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(youtubeLinePath), g.Group(children))
}

func YuqueFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(yuqueFillPath), g.Group(children))
}

func YuqueLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(yuqueLinePath), g.Group(children))
}

func ZcoolFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(zcoolFillPath), g.Group(children))
}

func ZcoolLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(zcoolLinePath), g.Group(children))
}

func ZhihuFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(zhihuFillPath), g.Group(children))
}

func ZhihuLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(zhihuLinePath), g.Group(children))
}

func ZoomInFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(zoomInFillPath), g.Group(children))
}

func ZoomInLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(zoomInLinePath), g.Group(children))
}

func ZoomOutFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(zoomOutFillPath), g.Group(children))
}

func ZoomOutLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(zoomOutLinePath), g.Group(children))
}

func ZzzFill(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(zzzFillPath), g.Group(children))
}

func ZzzLine(children ...g.Node) g.Node {
	return s.SVG(viewbox, hAttr, g.Raw(zzzLinePath), g.Group(children))
}
