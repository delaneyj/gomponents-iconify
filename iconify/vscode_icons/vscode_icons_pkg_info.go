package vscode_icons

import (
	g "github.com/maragudk/gomponents"
)

const IconifyVersion = "12.5.0"

func IconFromName(name string) g.Node {
	switch name {
	case "defaultFile": return DefaultFile()
	case "defaultFolder": return DefaultFolder()
	case "defaultFolderOpened": return DefaultFolderOpened()
	case "defaultRootFolder": return DefaultRootFolder()
	case "defaultRootFolderOpened": return DefaultRootFolderOpened()
	case "fileTypeAccess": return FileTypeAccess()
	case "fileTypeAccessTwo": return FileTypeAccessTwo()
	case "fileTypeActionscript": return FileTypeActionscript()
	case "fileTypeActionscriptTwo": return FileTypeActionscriptTwo()
	case "fileTypeAda": return FileTypeAda()
	case "fileTypeAdvpl": return FileTypeAdvpl()
	case "fileTypeAffinitydesigner": return FileTypeAffinitydesigner()
	case "fileTypeAffinityphoto": return FileTypeAffinityphoto()
	case "fileTypeAffinitypublisher": return FileTypeAffinitypublisher()
	case "fileTypeAi": return FileTypeAi()
	case "fileTypeAiTwo": return FileTypeAiTwo()
	case "fileTypeAl": return FileTypeAl()
	case "fileTypeAlDal": return FileTypeAlDal()
	case "fileTypeAllcontributors": return FileTypeAllcontributors()
	case "fileTypeAngular": return FileTypeAngular()
	case "fileTypeAnsible": return FileTypeAnsible()
	case "fileTypeAntlr": return FileTypeAntlr()
	case "fileTypeAnyscript": return FileTypeAnyscript()
	case "fileTypeApache": return FileTypeApache()
	case "fileTypeApex": return FileTypeApex()
	case "fileTypeApiExtractor": return FileTypeApiExtractor()
	case "fileTypeApib": return FileTypeApib()
	case "fileTypeApibTwo": return FileTypeApibTwo()
	case "fileTypeApl": return FileTypeApl()
	case "fileTypeApplescript": return FileTypeApplescript()
	case "fileTypeAppscript": return FileTypeAppscript()
	case "fileTypeAppsemble": return FileTypeAppsemble()
	case "fileTypeAppveyor": return FileTypeAppveyor()
	case "fileTypeArduino": return FileTypeArduino()
	case "fileTypeAsciidoc": return FileTypeAsciidoc()
	case "fileTypeAsp": return FileTypeAsp()
	case "fileTypeAspx": return FileTypeAspx()
	case "fileTypeAssembly": return FileTypeAssembly()
	case "fileTypeAstro": return FileTypeAstro()
	case "fileTypeAstroconfig": return FileTypeAstroconfig()
	case "fileTypeAts": return FileTypeAts()
	case "fileTypeAudio": return FileTypeAudio()
	case "fileTypeAurelia": return FileTypeAurelia()
	case "fileTypeAutohotkey": return FileTypeAutohotkey()
	case "fileTypeAutoit": return FileTypeAutoit()
	case "fileTypeAvif": return FileTypeAvif()
	case "fileTypeAvro": return FileTypeAvro()
	case "fileTypeAwk": return FileTypeAwk()
	case "fileTypeAws": return FileTypeAws()
	case "fileTypeAzure": return FileTypeAzure()
	case "fileTypeAzurepipelines": return FileTypeAzurepipelines()
	case "fileTypeBabel": return FileTypeBabel()
	case "fileTypeBabelTwo": return FileTypeBabelTwo()
	case "fileTypeBallerina": return FileTypeBallerina()
	case "fileTypeBat": return FileTypeBat()
	case "fileTypeBats": return FileTypeBats()
	case "fileTypeBazaar": return FileTypeBazaar()
	case "fileTypeBazel": return FileTypeBazel()
	case "fileTypeBazelIgnore": return FileTypeBazelIgnore()
	case "fileTypeBazelVersion": return FileTypeBazelVersion()
	case "fileTypeBefunge": return FileTypeBefunge()
	case "fileTypeBicep": return FileTypeBicep()
	case "fileTypeBiml": return FileTypeBiml()
	case "fileTypeBinary": return FileTypeBinary()
	case "fileTypeBitbucketpipeline": return FileTypeBitbucketpipeline()
	case "fileTypeBithound": return FileTypeBithound()
	case "fileTypeBlade": return FileTypeBlade()
	case "fileTypeBlitzbasic": return FileTypeBlitzbasic()
	case "fileTypeBolt": return FileTypeBolt()
	case "fileTypeBosque": return FileTypeBosque()
	case "fileTypeBower": return FileTypeBower()
	case "fileTypeBowerTwo": return FileTypeBowerTwo()
	case "fileTypeBrowserslist": return FileTypeBrowserslist()
	case "fileTypeBuckbuild": return FileTypeBuckbuild()
	case "fileTypeBuf": return FileTypeBuf()
	case "fileTypeBun": return FileTypeBun()
	case "fileTypeBundler": return FileTypeBundler()
	case "fileTypeBunfig": return FileTypeBunfig()
	case "fileTypeC": return FileTypeC()
	case "fileTypeCAl": return FileTypeCAl()
	case "fileTypeCThree": return FileTypeCThree()
	case "fileTypeCTwo": return FileTypeCTwo()
	case "fileTypeCabal": return FileTypeCabal()
	case "fileTypeCaddy": return FileTypeCaddy()
	case "fileTypeCake": return FileTypeCake()
	case "fileTypeCakephp": return FileTypeCakephp()
	case "fileTypeCapacitor": return FileTypeCapacitor()
	case "fileTypeCargo": return FileTypeCargo()
	case "fileTypeCasc": return FileTypeCasc()
	case "fileTypeCddl": return FileTypeCddl()
	case "fileTypeCert": return FileTypeCert()
	case "fileTypeCeylon": return FileTypeCeylon()
	case "fileTypeCf": return FileTypeCf()
	case "fileTypeCfTwo": return FileTypeCfTwo()
	case "fileTypeCfc": return FileTypeCfc()
	case "fileTypeCfcTwo": return FileTypeCfcTwo()
	case "fileTypeCfm": return FileTypeCfm()
	case "fileTypeCfmTwo": return FileTypeCfmTwo()
	case "fileTypeCheader": return FileTypeCheader()
	case "fileTypeChef": return FileTypeChef()
	case "fileTypeChefCookbook": return FileTypeChefCookbook()
	case "fileTypeCircleci": return FileTypeCircleci()
	case "fileTypeClass": return FileTypeClass()
	case "fileTypeClojure": return FileTypeClojure()
	case "fileTypeClojurescript": return FileTypeClojurescript()
	case "fileTypeCloudfoundry": return FileTypeCloudfoundry()
	case "fileTypeCmake": return FileTypeCmake()
	case "fileTypeCobol": return FileTypeCobol()
	case "fileTypeCodacy": return FileTypeCodacy()
	case "fileTypeCodeclimate": return FileTypeCodeclimate()
	case "fileTypeCodecov": return FileTypeCodecov()
	case "fileTypeCodekit": return FileTypeCodekit()
	case "fileTypeCodeowners": return FileTypeCodeowners()
	case "fileTypeCodeql": return FileTypeCodeql()
	case "fileTypeCoffeelint": return FileTypeCoffeelint()
	case "fileTypeCoffeescript": return FileTypeCoffeescript()
	case "fileTypeCommitizen": return FileTypeCommitizen()
	case "fileTypeCommitlint": return FileTypeCommitlint()
	case "fileTypeCompass": return FileTypeCompass()
	case "fileTypeComposer": return FileTypeComposer()
	case "fileTypeConan": return FileTypeConan()
	case "fileTypeConda": return FileTypeConda()
	case "fileTypeConfig": return FileTypeConfig()
	case "fileTypeConfluence": return FileTypeConfluence()
	case "fileTypeCoveralls": return FileTypeCoveralls()
	case "fileTypeCpp": return FileTypeCpp()
	case "fileTypeCppThree": return FileTypeCppThree()
	case "fileTypeCppTwo": return FileTypeCppTwo()
	case "fileTypeCppheader": return FileTypeCppheader()
	case "fileTypeCrowdin": return FileTypeCrowdin()
	case "fileTypeCrystal": return FileTypeCrystal()
	case "fileTypeCsharp": return FileTypeCsharp()
	case "fileTypeCsharpTwo": return FileTypeCsharpTwo()
	case "fileTypeCspell": return FileTypeCspell()
	case "fileTypeCsproj": return FileTypeCsproj()
	case "fileTypeCss": return FileTypeCss()
	case "fileTypeCsscomb": return FileTypeCsscomb()
	case "fileTypeCsslint": return FileTypeCsslint()
	case "fileTypeCssmap": return FileTypeCssmap()
	case "fileTypeCucumber": return FileTypeCucumber()
	case "fileTypeCuda": return FileTypeCuda()
	case "fileTypeCvs": return FileTypeCvs()
	case "fileTypeCypress": return FileTypeCypress()
	case "fileTypeCypressSpec": return FileTypeCypressSpec()
	case "fileTypeCython": return FileTypeCython()
	case "fileTypeDal": return FileTypeDal()
	case "fileTypeDarcs": return FileTypeDarcs()
	case "fileTypeDartlang": return FileTypeDartlang()
	case "fileTypeDartlangGenerated": return FileTypeDartlangGenerated()
	case "fileTypeDartlangIgnore": return FileTypeDartlangIgnore()
	case "fileTypeDatadog": return FileTypeDatadog()
	case "fileTypeDb": return FileTypeDb()
	case "fileTypeDelphi": return FileTypeDelphi()
	case "fileTypeDeno": return FileTypeDeno()
	case "fileTypeDenoify": return FileTypeDenoify()
	case "fileTypeDependabot": return FileTypeDependabot()
	case "fileTypeDependencies": return FileTypeDependencies()
	case "fileTypeDevcontainer": return FileTypeDevcontainer()
	case "fileTypeDhall": return FileTypeDhall()
	case "fileTypeDiff": return FileTypeDiff()
	case "fileTypeDjango": return FileTypeDjango()
	case "fileTypeDlang": return FileTypeDlang()
	case "fileTypeDocker": return FileTypeDocker()
	case "fileTypeDockerTwo": return FileTypeDockerTwo()
	case "fileTypeDockertest": return FileTypeDockertest()
	case "fileTypeDockertestTwo": return FileTypeDockertestTwo()
	case "fileTypeDocpad": return FileTypeDocpad()
	case "fileTypeDocz": return FileTypeDocz()
	case "fileTypeDojo": return FileTypeDojo()
	case "fileTypeDoppler": return FileTypeDoppler()
	case "fileTypeDotenv": return FileTypeDotenv()
	case "fileTypeDotjs": return FileTypeDotjs()
	case "fileTypeDoxygen": return FileTypeDoxygen()
	case "fileTypeDrawio": return FileTypeDrawio()
	case "fileTypeDrone": return FileTypeDrone()
	case "fileTypeDrools": return FileTypeDrools()
	case "fileTypeDustjs": return FileTypeDustjs()
	case "fileTypeDvc": return FileTypeDvc()
	case "fileTypeDylan": return FileTypeDylan()
	case "fileTypeEarthly": return FileTypeEarthly()
	case "fileTypeEasMetadata": return FileTypeEasMetadata()
	case "fileTypeEdge": return FileTypeEdge()
	case "fileTypeEdgeTwo": return FileTypeEdgeTwo()
	case "fileTypeEditorconfig": return FileTypeEditorconfig()
	case "fileTypeEex": return FileTypeEex()
	case "fileTypeEjs": return FileTypeEjs()
	case "fileTypeElastic": return FileTypeElastic()
	case "fileTypeElasticbeanstalk": return FileTypeElasticbeanstalk()
	case "fileTypeEleventy": return FileTypeEleventy()
	case "fileTypeEleventyTwo": return FileTypeEleventyTwo()
	case "fileTypeElixir": return FileTypeElixir()
	case "fileTypeElm": return FileTypeElm()
	case "fileTypeElmTwo": return FileTypeElmTwo()
	case "fileTypeEmacs": return FileTypeEmacs()
	case "fileTypeEmber": return FileTypeEmber()
	case "fileTypeEnsime": return FileTypeEnsime()
	case "fileTypeEps": return FileTypeEps()
	case "fileTypeErb": return FileTypeErb()
	case "fileTypeErlang": return FileTypeErlang()
	case "fileTypeErlangTwo": return FileTypeErlangTwo()
	case "fileTypeEsbuild": return FileTypeEsbuild()
	case "fileTypeEslint": return FileTypeEslint()
	case "fileTypeEslintTwo": return FileTypeEslintTwo()
	case "fileTypeEsphome": return FileTypeEsphome()
	case "fileTypeExcel": return FileTypeExcel()
	case "fileTypeExcelTwo": return FileTypeExcelTwo()
	case "fileTypeExpo": return FileTypeExpo()
	case "fileTypeFalcon": return FileTypeFalcon()
	case "fileTypeFantasticon": return FileTypeFantasticon()
	case "fileTypeFauna": return FileTypeFauna()
	case "fileTypeFavicon": return FileTypeFavicon()
	case "fileTypeFbx": return FileTypeFbx()
	case "fileTypeFirebase": return FileTypeFirebase()
	case "fileTypeFirebasehosting": return FileTypeFirebasehosting()
	case "fileTypeFirestore": return FileTypeFirestore()
	case "fileTypeFitbit": return FileTypeFitbit()
	case "fileTypeFla": return FileTypeFla()
	case "fileTypeFlareact": return FileTypeFlareact()
	case "fileTypeFlash": return FileTypeFlash()
	case "fileTypeFloobits": return FileTypeFloobits()
	case "fileTypeFlow": return FileTypeFlow()
	case "fileTypeFlutter": return FileTypeFlutter()
	case "fileTypeFlutterPackage": return FileTypeFlutterPackage()
	case "fileTypeFont": return FileTypeFont()
	case "fileTypeFormkit": return FileTypeFormkit()
	case "fileTypeFortran": return FileTypeFortran()
	case "fileTypeFossa": return FileTypeFossa()
	case "fileTypeFossil": return FileTypeFossil()
	case "fileTypeFreemarker": return FileTypeFreemarker()
	case "fileTypeFsharp": return FileTypeFsharp()
	case "fileTypeFsharpTwo": return FileTypeFsharpTwo()
	case "fileTypeFsproj": return FileTypeFsproj()
	case "fileTypeFthtml": return FileTypeFthtml()
	case "fileTypeFunding": return FileTypeFunding()
	case "fileTypeFusebox": return FileTypeFusebox()
	case "fileTypeGalen": return FileTypeGalen()
	case "fileTypeGalenTwo": return FileTypeGalenTwo()
	case "fileTypeGamemaker": return FileTypeGamemaker()
	case "fileTypeGamemakerEightyOne": return FileTypeGamemakerEightyOne()
	case "fileTypeGamemakerTwo": return FileTypeGamemakerTwo()
	case "fileTypeGatsby": return FileTypeGatsby()
	case "fileTypeGcloud": return FileTypeGcloud()
	case "fileTypeGcode": return FileTypeGcode()
	case "fileTypeGdscript": return FileTypeGdscript()
	case "fileTypeGenstat": return FileTypeGenstat()
	case "fileTypeGit": return FileTypeGit()
	case "fileTypeGitTwo": return FileTypeGitTwo()
	case "fileTypeGitlab": return FileTypeGitlab()
	case "fileTypeGitpod": return FileTypeGitpod()
	case "fileTypeGlide": return FileTypeGlide()
	case "fileTypeGlitter": return FileTypeGlitter()
	case "fileTypeGlsl": return FileTypeGlsl()
	case "fileTypeGlyphs": return FileTypeGlyphs()
	case "fileTypeGnu": return FileTypeGnu()
	case "fileTypeGnuplot": return FileTypeGnuplot()
	case "fileTypeGo": return FileTypeGo()
	case "fileTypeGoAqua": return FileTypeGoAqua()
	case "fileTypeGoBlack": return FileTypeGoBlack()
	case "fileTypeGoFuchsia": return FileTypeGoFuchsia()
	case "fileTypeGoGopher": return FileTypeGoGopher()
	case "fileTypeGoLightblue": return FileTypeGoLightblue()
	case "fileTypeGoPackage": return FileTypeGoPackage()
	case "fileTypeGoWhite": return FileTypeGoWhite()
	case "fileTypeGoWork": return FileTypeGoWork()
	case "fileTypeGoYellow": return FileTypeGoYellow()
	case "fileTypeGoctl": return FileTypeGoctl()
	case "fileTypeGodot": return FileTypeGodot()
	case "fileTypeGradle": return FileTypeGradle()
	case "fileTypeGradleTwo": return FileTypeGradleTwo()
	case "fileTypeGrain": return FileTypeGrain()
	case "fileTypeGraphql": return FileTypeGraphql()
	case "fileTypeGraphqlConfig": return FileTypeGraphqlConfig()
	case "fileTypeGraphviz": return FileTypeGraphviz()
	case "fileTypeGreenkeeper": return FileTypeGreenkeeper()
	case "fileTypeGridsome": return FileTypeGridsome()
	case "fileTypeGroovy": return FileTypeGroovy()
	case "fileTypeGroovyTwo": return FileTypeGroovyTwo()
	case "fileTypeGrunt": return FileTypeGrunt()
	case "fileTypeGulp": return FileTypeGulp()
	case "fileTypeHaml": return FileTypeHaml()
	case "fileTypeHandlebars": return FileTypeHandlebars()
	case "fileTypeHandlebarsTwo": return FileTypeHandlebarsTwo()
	case "fileTypeHarbour": return FileTypeHarbour()
	case "fileTypeHardhat": return FileTypeHardhat()
	case "fileTypeHashicorp": return FileTypeHashicorp()
	case "fileTypeHaskell": return FileTypeHaskell()
	case "fileTypeHaskellTwo": return FileTypeHaskellTwo()
	case "fileTypeHaxe": return FileTypeHaxe()
	case "fileTypeHaxecheckstyle": return FileTypeHaxecheckstyle()
	case "fileTypeHaxedevelop": return FileTypeHaxedevelop()
	case "fileTypeHelix": return FileTypeHelix()
	case "fileTypeHelm": return FileTypeHelm()
	case "fileTypeHjson": return FileTypeHjson()
	case "fileTypeHlsl": return FileTypeHlsl()
	case "fileTypeHomeassistant": return FileTypeHomeassistant()
	case "fileTypeHorusec": return FileTypeHorusec()
	case "fileTypeHost": return FileTypeHost()
	case "fileTypeHtml": return FileTypeHtml()
	case "fileTypeHtmlhint": return FileTypeHtmlhint()
	case "fileTypeHttp": return FileTypeHttp()
	case "fileTypeHunspell": return FileTypeHunspell()
	case "fileTypeHusky": return FileTypeHusky()
	case "fileTypeHy": return FileTypeHy()
	case "fileTypeHygen": return FileTypeHygen()
	case "fileTypeHypr": return FileTypeHypr()
	case "fileTypeIcl": return FileTypeIcl()
	case "fileTypeIdris": return FileTypeIdris()
	case "fileTypeIdrisbin": return FileTypeIdrisbin()
	case "fileTypeIdrispkg": return FileTypeIdrispkg()
	case "fileTypeImage": return FileTypeImage()
	case "fileTypeImba": return FileTypeImba()
	case "fileTypeInc": return FileTypeInc()
	case "fileTypeInfopath": return FileTypeInfopath()
	case "fileTypeInformix": return FileTypeInformix()
	case "fileTypeIni": return FileTypeIni()
	case "fileTypeInk": return FileTypeInk()
	case "fileTypeInnosetup": return FileTypeInnosetup()
	case "fileTypeIo": return FileTypeIo()
	case "fileTypeIodine": return FileTypeIodine()
	case "fileTypeIonic": return FileTypeIonic()
	case "fileTypeJake": return FileTypeJake()
	case "fileTypeJanet": return FileTypeJanet()
	case "fileTypeJar": return FileTypeJar()
	case "fileTypeJasmine": return FileTypeJasmine()
	case "fileTypeJava": return FileTypeJava()
	case "fileTypeJbuilder": return FileTypeJbuilder()
	case "fileTypeJekyll": return FileTypeJekyll()
	case "fileTypeJenkins": return FileTypeJenkins()
	case "fileTypeJest": return FileTypeJest()
	case "fileTypeJestSnapshot": return FileTypeJestSnapshot()
	case "fileTypeJinja": return FileTypeJinja()
	case "fileTypeJpm": return FileTypeJpm()
	case "fileTypeJs": return FileTypeJs()
	case "fileTypeJsOfficial": return FileTypeJsOfficial()
	case "fileTypeJsbeautify": return FileTypeJsbeautify()
	case "fileTypeJsconfig": return FileTypeJsconfig()
	case "fileTypeJscpd": return FileTypeJscpd()
	case "fileTypeJshint": return FileTypeJshint()
	case "fileTypeJsmap": return FileTypeJsmap()
	case "fileTypeJson": return FileTypeJson()
	case "fileTypeJsonFive": return FileTypeJsonFive()
	case "fileTypeJsonOfficial": return FileTypeJsonOfficial()
	case "fileTypeJsonSchema": return FileTypeJsonSchema()
	case "fileTypeJsonTwo": return FileTypeJsonTwo()
	case "fileTypeJsonld": return FileTypeJsonld()
	case "fileTypeJsonnet": return FileTypeJsonnet()
	case "fileTypeJsp": return FileTypeJsp()
	case "fileTypeJss": return FileTypeJss()
	case "fileTypeJulia": return FileTypeJulia()
	case "fileTypeJuliaTwo": return FileTypeJuliaTwo()
	case "fileTypeJupyter": return FileTypeJupyter()
	case "fileTypeK": return FileTypeK()
	case "fileTypeKarma": return FileTypeKarma()
	case "fileTypeKey": return FileTypeKey()
	case "fileTypeKitchenci": return FileTypeKitchenci()
	case "fileTypeKite": return FileTypeKite()
	case "fileTypeKivy": return FileTypeKivy()
	case "fileTypeKos": return FileTypeKos()
	case "fileTypeKotlin": return FileTypeKotlin()
	case "fileTypeKusto": return FileTypeKusto()
	case "fileTypeLatino": return FileTypeLatino()
	case "fileTypeLayout": return FileTypeLayout()
	case "fileTypeLerna": return FileTypeLerna()
	case "fileTypeLess": return FileTypeLess()
	case "fileTypeLex": return FileTypeLex()
	case "fileTypeLicense": return FileTypeLicense()
	case "fileTypeLicensebat": return FileTypeLicensebat()
	case "fileTypeLightActionscriptTwo": return FileTypeLightActionscriptTwo()
	case "fileTypeLightAda": return FileTypeLightAda()
	case "fileTypeLightApl": return FileTypeLightApl()
	case "fileTypeLightBabel": return FileTypeLightBabel()
	case "fileTypeLightBabelTwo": return FileTypeLightBabelTwo()
	case "fileTypeLightCabal": return FileTypeLightCabal()
	case "fileTypeLightCircleci": return FileTypeLightCircleci()
	case "fileTypeLightCloudfoundry": return FileTypeLightCloudfoundry()
	case "fileTypeLightCodacy": return FileTypeLightCodacy()
	case "fileTypeLightCodeclimate": return FileTypeLightCodeclimate()
	case "fileTypeLightCodeowners": return FileTypeLightCodeowners()
	case "fileTypeLightConfig": return FileTypeLightConfig()
	case "fileTypeLightCrystal": return FileTypeLightCrystal()
	case "fileTypeLightCypress": return FileTypeLightCypress()
	case "fileTypeLightCypressSpec": return FileTypeLightCypressSpec()
	case "fileTypeLightDb": return FileTypeLightDb()
	case "fileTypeLightDeno": return FileTypeLightDeno()
	case "fileTypeLightDhall": return FileTypeLightDhall()
	case "fileTypeLightDocpad": return FileTypeLightDocpad()
	case "fileTypeLightDrone": return FileTypeLightDrone()
	case "fileTypeLightEasMetadata": return FileTypeLightEasMetadata()
	case "fileTypeLightEleventy": return FileTypeLightEleventy()
	case "fileTypeLightEleventyTwo": return FileTypeLightEleventyTwo()
	case "fileTypeLightEsphome": return FileTypeLightEsphome()
	case "fileTypeLightExpo": return FileTypeLightExpo()
	case "fileTypeLightFirebasehosting": return FileTypeLightFirebasehosting()
	case "fileTypeLightFla": return FileTypeLightFla()
	case "fileTypeLightFont": return FileTypeLightFont()
	case "fileTypeLightGamemakerTwo": return FileTypeLightGamemakerTwo()
	case "fileTypeLightGradle": return FileTypeLightGradle()
	case "fileTypeLightHashicorp": return FileTypeLightHashicorp()
	case "fileTypeLightHjson": return FileTypeLightHjson()
	case "fileTypeLightIni": return FileTypeLightIni()
	case "fileTypeLightIo": return FileTypeLightIo()
	case "fileTypeLightJs": return FileTypeLightJs()
	case "fileTypeLightJsconfig": return FileTypeLightJsconfig()
	case "fileTypeLightJsmap": return FileTypeLightJsmap()
	case "fileTypeLightJson": return FileTypeLightJson()
	case "fileTypeLightJsonFive": return FileTypeLightJsonFive()
	case "fileTypeLightJsonSchema": return FileTypeLightJsonSchema()
	case "fileTypeLightJsonld": return FileTypeLightJsonld()
	case "fileTypeLightKite": return FileTypeLightKite()
	case "fileTypeLightLerna": return FileTypeLightLerna()
	case "fileTypeLightMailing": return FileTypeLightMailing()
	case "fileTypeLightMdx": return FileTypeLightMdx()
	case "fileTypeLightMlang": return FileTypeLightMlang()
	case "fileTypeLightMustache": return FileTypeLightMustache()
	case "fileTypeLightNetlify": return FileTypeLightNetlify()
	case "fileTypeLightNext": return FileTypeLightNext()
	case "fileTypeLightNim": return FileTypeLightNim()
	case "fileTypeLightNx": return FileTypeLightNx()
	case "fileTypeLightObjidconfig": return FileTypeLightObjidconfig()
	case "fileTypeLightOpenhab": return FileTypeLightOpenhab()
	case "fileTypeLightPcl": return FileTypeLightPcl()
	case "fileTypeLightPnpm": return FileTypeLightPnpm()
	case "fileTypeLightPrettier": return FileTypeLightPrettier()
	case "fileTypeLightPrisma": return FileTypeLightPrisma()
	case "fileTypeLightPurescript": return FileTypeLightPurescript()
	case "fileTypeLightQuasar": return FileTypeLightQuasar()
	case "fileTypeLightRazzle": return FileTypeLightRazzle()
	case "fileTypeLightRehype": return FileTypeLightRehype()
	case "fileTypeLightRemark": return FileTypeLightRemark()
	case "fileTypeLightReplit": return FileTypeLightReplit()
	case "fileTypeLightRetext": return FileTypeLightRetext()
	case "fileTypeLightRome": return FileTypeLightRome()
	case "fileTypeLightRubocop": return FileTypeLightRubocop()
	case "fileTypeLightRust": return FileTypeLightRust()
	case "fileTypeLightRustToolchain": return FileTypeLightRustToolchain()
	case "fileTypeLightShaderlab": return FileTypeLightShaderlab()
	case "fileTypeLightSolidity": return FileTypeLightSolidity()
	case "fileTypeLightSpin": return FileTypeLightSpin()
	case "fileTypeLightStylelint": return FileTypeLightStylelint()
	case "fileTypeLightStylus": return FileTypeLightStylus()
	case "fileTypeLightSymfony": return FileTypeLightSymfony()
	case "fileTypeLightSystemd": return FileTypeLightSystemd()
	case "fileTypeLightSystemverilog": return FileTypeLightSystemverilog()
	case "fileTypeLightTestcafe": return FileTypeLightTestcafe()
	case "fileTypeLightTestjs": return FileTypeLightTestjs()
	case "fileTypeLightTex": return FileTypeLightTex()
	case "fileTypeLightTodo": return FileTypeLightTodo()
	case "fileTypeLightToit": return FileTypeLightToit()
	case "fileTypeLightToml": return FileTypeLightToml()
	case "fileTypeLightTree": return FileTypeLightTree()
	case "fileTypeLightTurbo": return FileTypeLightTurbo()
	case "fileTypeLightUnibeautify": return FileTypeLightUnibeautify()
	case "fileTypeLightVash": return FileTypeLightVash()
	case "fileTypeLightVercel": return FileTypeLightVercel()
	case "fileTypeLightVsix": return FileTypeLightVsix()
	case "fileTypeLightVsixmanifest": return FileTypeLightVsixmanifest()
	case "fileTypeLightXfl": return FileTypeLightXfl()
	case "fileTypeLightYaml": return FileTypeLightYaml()
	case "fileTypeLightZeit": return FileTypeLightZeit()
	case "fileTypeLighthouse": return FileTypeLighthouse()
	case "fileTypeLilypond": return FileTypeLilypond()
	case "fileTypeLime": return FileTypeLime()
	case "fileTypeLintstagedrc": return FileTypeLintstagedrc()
	case "fileTypeLiquid": return FileTypeLiquid()
	case "fileTypeLisp": return FileTypeLisp()
	case "fileTypeLivescript": return FileTypeLivescript()
	case "fileTypeLnk": return FileTypeLnk()
	case "fileTypeLocale": return FileTypeLocale()
	case "fileTypeLog": return FileTypeLog()
	case "fileTypeLolcode": return FileTypeLolcode()
	case "fileTypeLsl": return FileTypeLsl()
	case "fileTypeLua": return FileTypeLua()
	case "fileTypeLuau": return FileTypeLuau()
	case "fileTypeLync": return FileTypeLync()
	case "fileTypeMailing": return FileTypeMailing()
	case "fileTypeManifest": return FileTypeManifest()
	case "fileTypeManifestBak": return FileTypeManifestBak()
	case "fileTypeManifestSkip": return FileTypeManifestSkip()
	case "fileTypeMap": return FileTypeMap()
	case "fileTypeMariadb": return FileTypeMariadb()
	case "fileTypeMarkdown": return FileTypeMarkdown()
	case "fileTypeMarkdownlint": return FileTypeMarkdownlint()
	case "fileTypeMarkdownlintIgnore": return FileTypeMarkdownlintIgnore()
	case "fileTypeMarko": return FileTypeMarko()
	case "fileTypeMarkojs": return FileTypeMarkojs()
	case "fileTypeMasterCo": return FileTypeMasterCo()
	case "fileTypeMatlab": return FileTypeMatlab()
	case "fileTypeMaven": return FileTypeMaven()
	case "fileTypeMaxscript": return FileTypeMaxscript()
	case "fileTypeMaya": return FileTypeMaya()
	case "fileTypeMdx": return FileTypeMdx()
	case "fileTypeMediawiki": return FileTypeMediawiki()
	case "fileTypeMercurial": return FileTypeMercurial()
	case "fileTypeMermaid": return FileTypeMermaid()
	case "fileTypeMeson": return FileTypeMeson()
	case "fileTypeMeteor": return FileTypeMeteor()
	case "fileTypeMjml": return FileTypeMjml()
	case "fileTypeMlang": return FileTypeMlang()
	case "fileTypeMocha": return FileTypeMocha()
	case "fileTypeModernizr": return FileTypeModernizr()
	case "fileTypeMojo": return FileTypeMojo()
	case "fileTypeMojolicious": return FileTypeMojolicious()
	case "fileTypeMoleculer": return FileTypeMoleculer()
	case "fileTypeMondoo": return FileTypeMondoo()
	case "fileTypeMongo": return FileTypeMongo()
	case "fileTypeMonotone": return FileTypeMonotone()
	case "fileTypeMotif": return FileTypeMotif()
	case "fileTypeMson": return FileTypeMson()
	case "fileTypeMustache": return FileTypeMustache()
	case "fileTypeMysql": return FileTypeMysql()
	case "fileTypeNdst": return FileTypeNdst()
	case "fileTypeNearly": return FileTypeNearly()
	case "fileTypeNestAdapterJs": return FileTypeNestAdapterJs()
	case "fileTypeNestAdapterTs": return FileTypeNestAdapterTs()
	case "fileTypeNestControllerJs": return FileTypeNestControllerJs()
	case "fileTypeNestControllerTs": return FileTypeNestControllerTs()
	case "fileTypeNestDecoratorJs": return FileTypeNestDecoratorJs()
	case "fileTypeNestDecoratorTs": return FileTypeNestDecoratorTs()
	case "fileTypeNestFilterJs": return FileTypeNestFilterJs()
	case "fileTypeNestFilterTs": return FileTypeNestFilterTs()
	case "fileTypeNestGatewayJs": return FileTypeNestGatewayJs()
	case "fileTypeNestGatewayTs": return FileTypeNestGatewayTs()
	case "fileTypeNestGuardJs": return FileTypeNestGuardJs()
	case "fileTypeNestGuardTs": return FileTypeNestGuardTs()
	case "fileTypeNestInterceptorJs": return FileTypeNestInterceptorJs()
	case "fileTypeNestInterceptorTs": return FileTypeNestInterceptorTs()
	case "fileTypeNestMiddlewareJs": return FileTypeNestMiddlewareJs()
	case "fileTypeNestMiddlewareTs": return FileTypeNestMiddlewareTs()
	case "fileTypeNestModuleJs": return FileTypeNestModuleJs()
	case "fileTypeNestModuleTs": return FileTypeNestModuleTs()
	case "fileTypeNestPipeJs": return FileTypeNestPipeJs()
	case "fileTypeNestPipeTs": return FileTypeNestPipeTs()
	case "fileTypeNestServiceJs": return FileTypeNestServiceJs()
	case "fileTypeNestServiceTs": return FileTypeNestServiceTs()
	case "fileTypeNestjs": return FileTypeNestjs()
	case "fileTypeNetlify": return FileTypeNetlify()
	case "fileTypeNext": return FileTypeNext()
	case "fileTypeNgComponentCss": return FileTypeNgComponentCss()
	case "fileTypeNgComponentDart": return FileTypeNgComponentDart()
	case "fileTypeNgComponentHtml": return FileTypeNgComponentHtml()
	case "fileTypeNgComponentJs": return FileTypeNgComponentJs()
	case "fileTypeNgComponentJsTwo": return FileTypeNgComponentJsTwo()
	case "fileTypeNgComponentLess": return FileTypeNgComponentLess()
	case "fileTypeNgComponentSass": return FileTypeNgComponentSass()
	case "fileTypeNgComponentScss": return FileTypeNgComponentScss()
	case "fileTypeNgComponentTs": return FileTypeNgComponentTs()
	case "fileTypeNgComponentTsTwo": return FileTypeNgComponentTsTwo()
	case "fileTypeNgControllerJs": return FileTypeNgControllerJs()
	case "fileTypeNgControllerTs": return FileTypeNgControllerTs()
	case "fileTypeNgDirectiveDart": return FileTypeNgDirectiveDart()
	case "fileTypeNgDirectiveJs": return FileTypeNgDirectiveJs()
	case "fileTypeNgDirectiveJsTwo": return FileTypeNgDirectiveJsTwo()
	case "fileTypeNgDirectiveTs": return FileTypeNgDirectiveTs()
	case "fileTypeNgDirectiveTsTwo": return FileTypeNgDirectiveTsTwo()
	case "fileTypeNgGuardDart": return FileTypeNgGuardDart()
	case "fileTypeNgGuardJs": return FileTypeNgGuardJs()
	case "fileTypeNgGuardTs": return FileTypeNgGuardTs()
	case "fileTypeNgInterceptorDart": return FileTypeNgInterceptorDart()
	case "fileTypeNgInterceptorJs": return FileTypeNgInterceptorJs()
	case "fileTypeNgInterceptorTs": return FileTypeNgInterceptorTs()
	case "fileTypeNgModuleDart": return FileTypeNgModuleDart()
	case "fileTypeNgModuleJs": return FileTypeNgModuleJs()
	case "fileTypeNgModuleJsTwo": return FileTypeNgModuleJsTwo()
	case "fileTypeNgModuleTs": return FileTypeNgModuleTs()
	case "fileTypeNgModuleTsTwo": return FileTypeNgModuleTsTwo()
	case "fileTypeNgPipeDart": return FileTypeNgPipeDart()
	case "fileTypeNgPipeJs": return FileTypeNgPipeJs()
	case "fileTypeNgPipeJsTwo": return FileTypeNgPipeJsTwo()
	case "fileTypeNgPipeTs": return FileTypeNgPipeTs()
	case "fileTypeNgPipeTsTwo": return FileTypeNgPipeTsTwo()
	case "fileTypeNgRoutingDart": return FileTypeNgRoutingDart()
	case "fileTypeNgRoutingJs": return FileTypeNgRoutingJs()
	case "fileTypeNgRoutingJsTwo": return FileTypeNgRoutingJsTwo()
	case "fileTypeNgRoutingTs": return FileTypeNgRoutingTs()
	case "fileTypeNgRoutingTsTwo": return FileTypeNgRoutingTsTwo()
	case "fileTypeNgServiceDart": return FileTypeNgServiceDart()
	case "fileTypeNgServiceJs": return FileTypeNgServiceJs()
	case "fileTypeNgServiceJsTwo": return FileTypeNgServiceJsTwo()
	case "fileTypeNgServiceTs": return FileTypeNgServiceTs()
	case "fileTypeNgServiceTsTwo": return FileTypeNgServiceTsTwo()
	case "fileTypeNgSmartComponentDart": return FileTypeNgSmartComponentDart()
	case "fileTypeNgSmartComponentJs": return FileTypeNgSmartComponentJs()
	case "fileTypeNgSmartComponentJsTwo": return FileTypeNgSmartComponentJsTwo()
	case "fileTypeNgSmartComponentTs": return FileTypeNgSmartComponentTs()
	case "fileTypeNgSmartComponentTsTwo": return FileTypeNgSmartComponentTsTwo()
	case "fileTypeNgTailwind": return FileTypeNgTailwind()
	case "fileTypeNginx": return FileTypeNginx()
	case "fileTypeNim": return FileTypeNim()
	case "fileTypeNimble": return FileTypeNimble()
	case "fileTypeNinja": return FileTypeNinja()
	case "fileTypeNix": return FileTypeNix()
	case "fileTypeNjsproj": return FileTypeNjsproj()
	case "fileTypeNoc": return FileTypeNoc()
	case "fileTypeNode": return FileTypeNode()
	case "fileTypeNodeTwo": return FileTypeNodeTwo()
	case "fileTypeNodemon": return FileTypeNodemon()
	case "fileTypeNpm": return FileTypeNpm()
	case "fileTypeNsi": return FileTypeNsi()
	case "fileTypeNsri": return FileTypeNsri()
	case "fileTypeNsriIntegrity": return FileTypeNsriIntegrity()
	case "fileTypeNuget": return FileTypeNuget()
	case "fileTypeNumpy": return FileTypeNumpy()
	case "fileTypeNunjucks": return FileTypeNunjucks()
	case "fileTypeNuxt": return FileTypeNuxt()
	case "fileTypeNx": return FileTypeNx()
	case "fileTypeNyc": return FileTypeNyc()
	case "fileTypeObjectivec": return FileTypeObjectivec()
	case "fileTypeObjectivecpp": return FileTypeObjectivecpp()
	case "fileTypeObjidconfig": return FileTypeObjidconfig()
	case "fileTypeOcaml": return FileTypeOcaml()
	case "fileTypeOcamlIntf": return FileTypeOcamlIntf()
	case "fileTypeOgone": return FileTypeOgone()
	case "fileTypeOnenote": return FileTypeOnenote()
	case "fileTypeOpencl": return FileTypeOpencl()
	case "fileTypeOpenhab": return FileTypeOpenhab()
	case "fileTypeOpenscad": return FileTypeOpenscad()
	case "fileTypeOrg": return FileTypeOrg()
	case "fileTypeOutlook": return FileTypeOutlook()
	case "fileTypeOvpn": return FileTypeOvpn()
	case "fileTypePackage": return FileTypePackage()
	case "fileTypePaket": return FileTypePaket()
	case "fileTypePatch": return FileTypePatch()
	case "fileTypePcl": return FileTypePcl()
	case "fileTypePddl": return FileTypePddl()
	case "fileTypePddlHappenings": return FileTypePddlHappenings()
	case "fileTypePddlPlan": return FileTypePddlPlan()
	case "fileTypePdfTwo": return FileTypePdfTwo()
	case "fileTypePeeky": return FileTypePeeky()
	case "fileTypePerl": return FileTypePerl()
	case "fileTypePerlSix": return FileTypePerlSix()
	case "fileTypePerlTwo": return FileTypePerlTwo()
	case "fileTypePgsql": return FileTypePgsql()
	case "fileTypePhotoshop": return FileTypePhotoshop()
	case "fileTypePhotoshopTwo": return FileTypePhotoshopTwo()
	case "fileTypePhp": return FileTypePhp()
	case "fileTypePhpThree": return FileTypePhpThree()
	case "fileTypePhpTwo": return FileTypePhpTwo()
	case "fileTypePhpcsfixer": return FileTypePhpcsfixer()
	case "fileTypePhpstan": return FileTypePhpstan()
	case "fileTypePhpunit": return FileTypePhpunit()
	case "fileTypePhraseapp": return FileTypePhraseapp()
	case "fileTypePine": return FileTypePine()
	case "fileTypePip": return FileTypePip()
	case "fileTypePipeline": return FileTypePipeline()
	case "fileTypePlantuml": return FileTypePlantuml()
	case "fileTypePlatformio": return FileTypePlatformio()
	case "fileTypePlaywright": return FileTypePlaywright()
	case "fileTypePlsql": return FileTypePlsql()
	case "fileTypePlsqlPackage": return FileTypePlsqlPackage()
	case "fileTypePlsqlPackageBody": return FileTypePlsqlPackageBody()
	case "fileTypePlsqlPackageHeader": return FileTypePlsqlPackageHeader()
	case "fileTypePlsqlPackageSpec": return FileTypePlsqlPackageSpec()
	case "fileTypePmTwo": return FileTypePmTwo()
	case "fileTypePnpm": return FileTypePnpm()
	case "fileTypePoedit": return FileTypePoedit()
	case "fileTypePoetry": return FileTypePoetry()
	case "fileTypePolymer": return FileTypePolymer()
	case "fileTypePony": return FileTypePony()
	case "fileTypePostcss": return FileTypePostcss()
	case "fileTypePostcssconfig": return FileTypePostcssconfig()
	case "fileTypePostman": return FileTypePostman()
	case "fileTypePowerpoint": return FileTypePowerpoint()
	case "fileTypePowerpointTwo": return FileTypePowerpointTwo()
	case "fileTypePowershell": return FileTypePowershell()
	case "fileTypePowershellFormat": return FileTypePowershellFormat()
	case "fileTypePowershellPsd": return FileTypePowershellPsd()
	case "fileTypePowershellPsdTwo": return FileTypePowershellPsdTwo()
	case "fileTypePowershellPsm": return FileTypePowershellPsm()
	case "fileTypePowershellPsmTwo": return FileTypePowershellPsmTwo()
	case "fileTypePowershellTwo": return FileTypePowershellTwo()
	case "fileTypePowershellTypes": return FileTypePowershellTypes()
	case "fileTypePreact": return FileTypePreact()
	case "fileTypePrecommit": return FileTypePrecommit()
	case "fileTypePrettier": return FileTypePrettier()
	case "fileTypePrisma": return FileTypePrisma()
	case "fileTypeProcessinglang": return FileTypeProcessinglang()
	case "fileTypeProcfile": return FileTypeProcfile()
	case "fileTypeProgress": return FileTypeProgress()
	case "fileTypeProlog": return FileTypeProlog()
	case "fileTypePrometheus": return FileTypePrometheus()
	case "fileTypeProtobuf": return FileTypeProtobuf()
	case "fileTypeProtractor": return FileTypeProtractor()
	case "fileTypePubliccode": return FileTypePubliccode()
	case "fileTypePublisher": return FileTypePublisher()
	case "fileTypePug": return FileTypePug()
	case "fileTypePulumi": return FileTypePulumi()
	case "fileTypePuppet": return FileTypePuppet()
	case "fileTypePurescript": return FileTypePurescript()
	case "fileTypePyret": return FileTypePyret()
	case "fileTypePython": return FileTypePython()
	case "fileTypePythowo": return FileTypePythowo()
	case "fileTypePytyped": return FileTypePytyped()
	case "fileTypePyup": return FileTypePyup()
	case "fileTypeQ": return FileTypeQ()
	case "fileTypeQbs": return FileTypeQbs()
	case "fileTypeQlikview": return FileTypeQlikview()
	case "fileTypeQml": return FileTypeQml()
	case "fileTypeQmldir": return FileTypeQmldir()
	case "fileTypeQsharp": return FileTypeQsharp()
	case "fileTypeQuasar": return FileTypeQuasar()
	case "fileTypeR": return FileTypeR()
	case "fileTypeRacket": return FileTypeRacket()
	case "fileTypeRails": return FileTypeRails()
	case "fileTypeRake": return FileTypeRake()
	case "fileTypeRaml": return FileTypeRaml()
	case "fileTypeRazor": return FileTypeRazor()
	case "fileTypeRazzle": return FileTypeRazzle()
	case "fileTypeReactjs": return FileTypeReactjs()
	case "fileTypeReacttemplate": return FileTypeReacttemplate()
	case "fileTypeReactts": return FileTypeReactts()
	case "fileTypeReason": return FileTypeReason()
	case "fileTypeRed": return FileTypeRed()
	case "fileTypeRegistry": return FileTypeRegistry()
	case "fileTypeRego": return FileTypeRego()
	case "fileTypeRehype": return FileTypeRehype()
	case "fileTypeRemark": return FileTypeRemark()
	case "fileTypeRenovate": return FileTypeRenovate()
	case "fileTypeReplit": return FileTypeReplit()
	case "fileTypeRescript": return FileTypeRescript()
	case "fileTypeRest": return FileTypeRest()
	case "fileTypeRetext": return FileTypeRetext()
	case "fileTypeRexx": return FileTypeRexx()
	case "fileTypeRiot": return FileTypeRiot()
	case "fileTypeRmd": return FileTypeRmd()
	case "fileTypeRobotframework": return FileTypeRobotframework()
	case "fileTypeRobots": return FileTypeRobots()
	case "fileTypeRollup": return FileTypeRollup()
	case "fileTypeRome": return FileTypeRome()
	case "fileTypeRon": return FileTypeRon()
	case "fileTypeRproj": return FileTypeRproj()
	case "fileTypeRspec": return FileTypeRspec()
	case "fileTypeRubocop": return FileTypeRubocop()
	case "fileTypeRuby": return FileTypeRuby()
	case "fileTypeRust": return FileTypeRust()
	case "fileTypeRustToolchain": return FileTypeRustToolchain()
	case "fileTypeSails": return FileTypeSails()
	case "fileTypeSaltstack": return FileTypeSaltstack()
	case "fileTypeSan": return FileTypeSan()
	case "fileTypeSapphireFrameworkCli": return FileTypeSapphireFrameworkCli()
	case "fileTypeSas": return FileTypeSas()
	case "fileTypeSass": return FileTypeSass()
	case "fileTypeSbt": return FileTypeSbt()
	case "fileTypeScala": return FileTypeScala()
	case "fileTypeScilab": return FileTypeScilab()
	case "fileTypeScript": return FileTypeScript()
	case "fileTypeScss": return FileTypeScss()
	case "fileTypeScssTwo": return FileTypeScssTwo()
	case "fileTypeSdlang": return FileTypeSdlang()
	case "fileTypeSentry": return FileTypeSentry()
	case "fileTypeSequelize": return FileTypeSequelize()
	case "fileTypeServerless": return FileTypeServerless()
	case "fileTypeShaderlab": return FileTypeShaderlab()
	case "fileTypeShell": return FileTypeShell()
	case "fileTypeShuttle": return FileTypeShuttle()
	case "fileTypeSilverstripe": return FileTypeSilverstripe()
	case "fileTypeSino": return FileTypeSino()
	case "fileTypeSiyuan": return FileTypeSiyuan()
	case "fileTypeSketch": return FileTypeSketch()
	case "fileTypeSkipper": return FileTypeSkipper()
	case "fileTypeSlang": return FileTypeSlang()
	case "fileTypeSlashup": return FileTypeSlashup()
	case "fileTypeSlice": return FileTypeSlice()
	case "fileTypeSlim": return FileTypeSlim()
	case "fileTypeSln": return FileTypeSln()
	case "fileTypeSlnTwo": return FileTypeSlnTwo()
	case "fileTypeSmarty": return FileTypeSmarty()
	case "fileTypeSnapcraft": return FileTypeSnapcraft()
	case "fileTypeSnaplet": return FileTypeSnaplet()
	case "fileTypeSnort": return FileTypeSnort()
	case "fileTypeSnyk": return FileTypeSnyk()
	case "fileTypeSolidarity": return FileTypeSolidarity()
	case "fileTypeSolidity": return FileTypeSolidity()
	case "fileTypeSource": return FileTypeSource()
	case "fileTypeSpacengine": return FileTypeSpacengine()
	case "fileTypeSparql": return FileTypeSparql()
	case "fileTypeSpin": return FileTypeSpin()
	case "fileTypeSqf": return FileTypeSqf()
	case "fileTypeSql": return FileTypeSql()
	case "fileTypeSqlite": return FileTypeSqlite()
	case "fileTypeSquirrel": return FileTypeSquirrel()
	case "fileTypeSss": return FileTypeSss()
	case "fileTypeStan": return FileTypeStan()
	case "fileTypeStata": return FileTypeStata()
	case "fileTypeStencil": return FileTypeStencil()
	case "fileTypeStoryboard": return FileTypeStoryboard()
	case "fileTypeStorybook": return FileTypeStorybook()
	case "fileTypeStryker": return FileTypeStryker()
	case "fileTypeStylable": return FileTypeStylable()
	case "fileTypeStyle": return FileTypeStyle()
	case "fileTypeStyled": return FileTypeStyled()
	case "fileTypeStylelint": return FileTypeStylelint()
	case "fileTypeStylishHaskell": return FileTypeStylishHaskell()
	case "fileTypeStylus": return FileTypeStylus()
	case "fileTypeSubversion": return FileTypeSubversion()
	case "fileTypeSvelte": return FileTypeSvelte()
	case "fileTypeSvg": return FileTypeSvg()
	case "fileTypeSwagger": return FileTypeSwagger()
	case "fileTypeSwc": return FileTypeSwc()
	case "fileTypeSwift": return FileTypeSwift()
	case "fileTypeSwig": return FileTypeSwig()
	case "fileTypeSymfony": return FileTypeSymfony()
	case "fileTypeSystemd": return FileTypeSystemd()
	case "fileTypeSystemverilog": return FileTypeSystemverilog()
	case "fileTypeTFourTt": return FileTypeTFourTt()
	case "fileTypeTailwind": return FileTypeTailwind()
	case "fileTypeTamagui": return FileTypeTamagui()
	case "fileTypeTaskfile": return FileTypeTaskfile()
	case "fileTypeTauri": return FileTypeTauri()
	case "fileTypeTcl": return FileTypeTcl()
	case "fileTypeTeal": return FileTypeTeal()
	case "fileTypeTera": return FileTypeTera()
	case "fileTypeTerraform": return FileTypeTerraform()
	case "fileTypeTest": return FileTypeTest()
	case "fileTypeTestcafe": return FileTypeTestcafe()
	case "fileTypeTestjs": return FileTypeTestjs()
	case "fileTypeTestts": return FileTypeTestts()
	case "fileTypeTex": return FileTypeTex()
	case "fileTypeText": return FileTypeText()
	case "fileTypeTextile": return FileTypeTextile()
	case "fileTypeTfs": return FileTypeTfs()
	case "fileTypeTiltfile": return FileTypeTiltfile()
	case "fileTypeTodo": return FileTypeTodo()
	case "fileTypeToit": return FileTypeToit()
	case "fileTypeToml": return FileTypeToml()
	case "fileTypeTox": return FileTypeTox()
	case "fileTypeTravis": return FileTypeTravis()
	case "fileTypeTree": return FileTypeTree()
	case "fileTypeTres": return FileTypeTres()
	case "fileTypeTruffle": return FileTypeTruffle()
	case "fileTypeTrunk": return FileTypeTrunk()
	case "fileTypeTscn": return FileTypeTscn()
	case "fileTypeTsconfig": return FileTypeTsconfig()
	case "fileTypeTsconfigOfficial": return FileTypeTsconfigOfficial()
	case "fileTypeTslint": return FileTypeTslint()
	case "fileTypeTt": return FileTypeTt()
	case "fileTypeTtcn": return FileTypeTtcn()
	case "fileTypeTuc": return FileTypeTuc()
	case "fileTypeTurbo": return FileTypeTurbo()
	case "fileTypeTwig": return FileTypeTwig()
	case "fileTypeTypedoc": return FileTypeTypedoc()
	case "fileTypeTypescript": return FileTypeTypescript()
	case "fileTypeTypescriptOfficial": return FileTypeTypescriptOfficial()
	case "fileTypeTypescriptdef": return FileTypeTypescriptdef()
	case "fileTypeTypescriptdefOfficial": return FileTypeTypescriptdefOfficial()
	case "fileTypeTypoThree": return FileTypeTypoThree()
	case "fileTypeUnibeautify": return FileTypeUnibeautify()
	case "fileTypeUnison": return FileTypeUnison()
	case "fileTypeUnlicense": return FileTypeUnlicense()
	case "fileTypeUnocss": return FileTypeUnocss()
	case "fileTypeVagrant": return FileTypeVagrant()
	case "fileTypeVala": return FileTypeVala()
	case "fileTypeVanillaExtract": return FileTypeVanillaExtract()
	case "fileTypeVapi": return FileTypeVapi()
	case "fileTypeVapor": return FileTypeVapor()
	case "fileTypeVash": return FileTypeVash()
	case "fileTypeVb": return FileTypeVb()
	case "fileTypeVba": return FileTypeVba()
	case "fileTypeVbhtml": return FileTypeVbhtml()
	case "fileTypeVbproj": return FileTypeVbproj()
	case "fileTypeVcxproj": return FileTypeVcxproj()
	case "fileTypeVelocity": return FileTypeVelocity()
	case "fileTypeVercel": return FileTypeVercel()
	case "fileTypeVerilog": return FileTypeVerilog()
	case "fileTypeVhdl": return FileTypeVhdl()
	case "fileTypeVideo": return FileTypeVideo()
	case "fileTypeView": return FileTypeView()
	case "fileTypeVim": return FileTypeVim()
	case "fileTypeVite": return FileTypeVite()
	case "fileTypeVitest": return FileTypeVitest()
	case "fileTypeVlang": return FileTypeVlang()
	case "fileTypeVolt": return FileTypeVolt()
	case "fileTypeVscode": return FileTypeVscode()
	case "fileTypeVscodeInsiders": return FileTypeVscodeInsiders()
	case "fileTypeVscodeThree": return FileTypeVscodeThree()
	case "fileTypeVscodeTwo": return FileTypeVscodeTwo()
	case "fileTypeVsix": return FileTypeVsix()
	case "fileTypeVsixmanifest": return FileTypeVsixmanifest()
	case "fileTypeVue": return FileTypeVue()
	case "fileTypeVueconfig": return FileTypeVueconfig()
	case "fileTypeWallaby": return FileTypeWallaby()
	case "fileTypeWally": return FileTypeWally()
	case "fileTypeWasm": return FileTypeWasm()
	case "fileTypeWatchmanconfig": return FileTypeWatchmanconfig()
	case "fileTypeWebp": return FileTypeWebp()
	case "fileTypeWebpack": return FileTypeWebpack()
	case "fileTypeWenyan": return FileTypeWenyan()
	case "fileTypeWercker": return FileTypeWercker()
	case "fileTypeWgsl": return FileTypeWgsl()
	case "fileTypeWikitext": return FileTypeWikitext()
	case "fileTypeWindi": return FileTypeWindi()
	case "fileTypeWolfram": return FileTypeWolfram()
	case "fileTypeWord": return FileTypeWord()
	case "fileTypeWordTwo": return FileTypeWordTwo()
	case "fileTypeWpml": return FileTypeWpml()
	case "fileTypeWurst": return FileTypeWurst()
	case "fileTypeWxml": return FileTypeWxml()
	case "fileTypeWxss": return FileTypeWxss()
	case "fileTypeXcode": return FileTypeXcode()
	case "fileTypeXfl": return FileTypeXfl()
	case "fileTypeXib": return FileTypeXib()
	case "fileTypeXliff": return FileTypeXliff()
	case "fileTypeXmake": return FileTypeXmake()
	case "fileTypeXml": return FileTypeXml()
	case "fileTypeXquery": return FileTypeXquery()
	case "fileTypeXsl": return FileTypeXsl()
	case "fileTypeYacc": return FileTypeYacc()
	case "fileTypeYaml": return FileTypeYaml()
	case "fileTypeYamllint": return FileTypeYamllint()
	case "fileTypeYandex": return FileTypeYandex()
	case "fileTypeYang": return FileTypeYang()
	case "fileTypeYarn": return FileTypeYarn()
	case "fileTypeYeoman": return FileTypeYeoman()
	case "fileTypeZeit": return FileTypeZeit()
	case "fileTypeZig": return FileTypeZig()
	case "fileTypeZip": return FileTypeZip()
	case "fileTypeZipTwo": return FileTypeZipTwo()
	case "folderTypeAndroid": return FolderTypeAndroid()
	case "folderTypeAndroidOpened": return FolderTypeAndroidOpened()
	case "folderTypeApi": return FolderTypeApi()
	case "folderTypeApiOpened": return FolderTypeApiOpened()
	case "folderTypeApp": return FolderTypeApp()
	case "folderTypeAppOpened": return FolderTypeAppOpened()
	case "folderTypeArangodb": return FolderTypeArangodb()
	case "folderTypeArangodbOpened": return FolderTypeArangodbOpened()
	case "folderTypeAsset": return FolderTypeAsset()
	case "folderTypeAssetOpened": return FolderTypeAssetOpened()
	case "folderTypeAudio": return FolderTypeAudio()
	case "folderTypeAudioOpened": return FolderTypeAudioOpened()
	case "folderTypeAurelia": return FolderTypeAurelia()
	case "folderTypeAureliaOpened": return FolderTypeAureliaOpened()
	case "folderTypeAws": return FolderTypeAws()
	case "folderTypeAwsOpened": return FolderTypeAwsOpened()
	case "folderTypeAzure": return FolderTypeAzure()
	case "folderTypeAzureOpened": return FolderTypeAzureOpened()
	case "folderTypeAzurepipelines": return FolderTypeAzurepipelines()
	case "folderTypeAzurepipelinesOpened": return FolderTypeAzurepipelinesOpened()
	case "folderTypeBinary": return FolderTypeBinary()
	case "folderTypeBinaryOpened": return FolderTypeBinaryOpened()
	case "folderTypeBloc": return FolderTypeBloc()
	case "folderTypeBlocOpened": return FolderTypeBlocOpened()
	case "folderTypeBlueprint": return FolderTypeBlueprint()
	case "folderTypeBlueprintOpened": return FolderTypeBlueprintOpened()
	case "folderTypeBot": return FolderTypeBot()
	case "folderTypeBotOpened": return FolderTypeBotOpened()
	case "folderTypeBower": return FolderTypeBower()
	case "folderTypeBowerOpened": return FolderTypeBowerOpened()
	case "folderTypeBuildkite": return FolderTypeBuildkite()
	case "folderTypeBuildkiteOpened": return FolderTypeBuildkiteOpened()
	case "folderTypeCake": return FolderTypeCake()
	case "folderTypeCakeOpened": return FolderTypeCakeOpened()
	case "folderTypeCertificate": return FolderTypeCertificate()
	case "folderTypeCertificateOpened": return FolderTypeCertificateOpened()
	case "folderTypeChangesets": return FolderTypeChangesets()
	case "folderTypeChangesetsOpened": return FolderTypeChangesetsOpened()
	case "folderTypeChef": return FolderTypeChef()
	case "folderTypeChefOpened": return FolderTypeChefOpened()
	case "folderTypeCircleci": return FolderTypeCircleci()
	case "folderTypeCircleciOpened": return FolderTypeCircleciOpened()
	case "folderTypeCli": return FolderTypeCli()
	case "folderTypeCliOpened": return FolderTypeCliOpened()
	case "folderTypeClient": return FolderTypeClient()
	case "folderTypeClientOpened": return FolderTypeClientOpened()
	case "folderTypeCmake": return FolderTypeCmake()
	case "folderTypeCmakeOpened": return FolderTypeCmakeOpened()
	case "folderTypeCommon": return FolderTypeCommon()
	case "folderTypeCommonOpened": return FolderTypeCommonOpened()
	case "folderTypeComponent": return FolderTypeComponent()
	case "folderTypeComponentOpened": return FolderTypeComponentOpened()
	case "folderTypeComposer": return FolderTypeComposer()
	case "folderTypeComposerOpened": return FolderTypeComposerOpened()
	case "folderTypeConfig": return FolderTypeConfig()
	case "folderTypeConfigOpened": return FolderTypeConfigOpened()
	case "folderTypeController": return FolderTypeController()
	case "folderTypeControllerOpened": return FolderTypeControllerOpened()
	case "folderTypeCoverage": return FolderTypeCoverage()
	case "folderTypeCoverageOpened": return FolderTypeCoverageOpened()
	case "folderTypeCss": return FolderTypeCss()
	case "folderTypeCssOpened": return FolderTypeCssOpened()
	case "folderTypeCubit": return FolderTypeCubit()
	case "folderTypeCubitOpened": return FolderTypeCubitOpened()
	case "folderTypeCypress": return FolderTypeCypress()
	case "folderTypeCypressOpened": return FolderTypeCypressOpened()
	case "folderTypeDapr": return FolderTypeDapr()
	case "folderTypeDaprOpened": return FolderTypeDaprOpened()
	case "folderTypeDatadog": return FolderTypeDatadog()
	case "folderTypeDatadogOpened": return FolderTypeDatadogOpened()
	case "folderTypeDb": return FolderTypeDb()
	case "folderTypeDbOpened": return FolderTypeDbOpened()
	case "folderTypeDebian": return FolderTypeDebian()
	case "folderTypeDebianOpened": return FolderTypeDebianOpened()
	case "folderTypeDependabot": return FolderTypeDependabot()
	case "folderTypeDependabotOpened": return FolderTypeDependabotOpened()
	case "folderTypeDevcontainer": return FolderTypeDevcontainer()
	case "folderTypeDevcontainerOpened": return FolderTypeDevcontainerOpened()
	case "folderTypeDist": return FolderTypeDist()
	case "folderTypeDistOpened": return FolderTypeDistOpened()
	case "folderTypeDocker": return FolderTypeDocker()
	case "folderTypeDockerOpened": return FolderTypeDockerOpened()
	case "folderTypeDocs": return FolderTypeDocs()
	case "folderTypeDocsOpened": return FolderTypeDocsOpened()
	case "folderTypeETwoE": return FolderTypeETwoE()
	case "folderTypeETwoEOpened": return FolderTypeETwoEOpened()
	case "folderTypeElasticbeanstalk": return FolderTypeElasticbeanstalk()
	case "folderTypeElasticbeanstalkOpened": return FolderTypeElasticbeanstalkOpened()
	case "folderTypeElectron": return FolderTypeElectron()
	case "folderTypeElectronOpened": return FolderTypeElectronOpened()
	case "folderTypeExpo": return FolderTypeExpo()
	case "folderTypeExpoOpened": return FolderTypeExpoOpened()
	case "folderTypeFavicon": return FolderTypeFavicon()
	case "folderTypeFaviconOpened": return FolderTypeFaviconOpened()
	case "folderTypeFlow": return FolderTypeFlow()
	case "folderTypeFlowOpened": return FolderTypeFlowOpened()
	case "folderTypeFonts": return FolderTypeFonts()
	case "folderTypeFontsOpened": return FolderTypeFontsOpened()
	case "folderTypeGcp": return FolderTypeGcp()
	case "folderTypeGcpOpened": return FolderTypeGcpOpened()
	case "folderTypeGit": return FolderTypeGit()
	case "folderTypeGitOpened": return FolderTypeGitOpened()
	case "folderTypeGithub": return FolderTypeGithub()
	case "folderTypeGithubOpened": return FolderTypeGithubOpened()
	case "folderTypeGitlab": return FolderTypeGitlab()
	case "folderTypeGitlabOpened": return FolderTypeGitlabOpened()
	case "folderTypeGradle": return FolderTypeGradle()
	case "folderTypeGradleOpened": return FolderTypeGradleOpened()
	case "folderTypeGraphql": return FolderTypeGraphql()
	case "folderTypeGraphqlOpened": return FolderTypeGraphqlOpened()
	case "folderTypeGrunt": return FolderTypeGrunt()
	case "folderTypeGruntOpened": return FolderTypeGruntOpened()
	case "folderTypeGulp": return FolderTypeGulp()
	case "folderTypeGulpOpened": return FolderTypeGulpOpened()
	case "folderTypeHaxelib": return FolderTypeHaxelib()
	case "folderTypeHaxelibOpened": return FolderTypeHaxelibOpened()
	case "folderTypeHelper": return FolderTypeHelper()
	case "folderTypeHelperOpened": return FolderTypeHelperOpened()
	case "folderTypeHook": return FolderTypeHook()
	case "folderTypeHookOpened": return FolderTypeHookOpened()
	case "folderTypeHusky": return FolderTypeHusky()
	case "folderTypeHuskyOpened": return FolderTypeHuskyOpened()
	case "folderTypeIdea": return FolderTypeIdea()
	case "folderTypeIdeaOpened": return FolderTypeIdeaOpened()
	case "folderTypeImages": return FolderTypeImages()
	case "folderTypeImagesOpened": return FolderTypeImagesOpened()
	case "folderTypeInclude": return FolderTypeInclude()
	case "folderTypeIncludeOpened": return FolderTypeIncludeOpened()
	case "folderTypeInterfaces": return FolderTypeInterfaces()
	case "folderTypeInterfacesOpened": return FolderTypeInterfacesOpened()
	case "folderTypeIos": return FolderTypeIos()
	case "folderTypeIosOpened": return FolderTypeIosOpened()
	case "folderTypeJs": return FolderTypeJs()
	case "folderTypeJsOpened": return FolderTypeJsOpened()
	case "folderTypeJson": return FolderTypeJson()
	case "folderTypeJsonOfficial": return FolderTypeJsonOfficial()
	case "folderTypeJsonOfficialOpened": return FolderTypeJsonOfficialOpened()
	case "folderTypeJsonOpened": return FolderTypeJsonOpened()
	case "folderTypeKubernetes": return FolderTypeKubernetes()
	case "folderTypeKubernetesOpened": return FolderTypeKubernetesOpened()
	case "folderTypeLess": return FolderTypeLess()
	case "folderTypeLessOpened": return FolderTypeLessOpened()
	case "folderTypeLibrary": return FolderTypeLibrary()
	case "folderTypeLibraryOpened": return FolderTypeLibraryOpened()
	case "folderTypeLightCypress": return FolderTypeLightCypress()
	case "folderTypeLightCypressOpened": return FolderTypeLightCypressOpened()
	case "folderTypeLightElectron": return FolderTypeLightElectron()
	case "folderTypeLightElectronOpened": return FolderTypeLightElectronOpened()
	case "folderTypeLightExpo": return FolderTypeLightExpo()
	case "folderTypeLightExpoOpened": return FolderTypeLightExpoOpened()
	case "folderTypeLightFonts": return FolderTypeLightFonts()
	case "folderTypeLightFontsOpened": return FolderTypeLightFontsOpened()
	case "folderTypeLightGradle": return FolderTypeLightGradle()
	case "folderTypeLightGradleOpened": return FolderTypeLightGradleOpened()
	case "folderTypeLightMeteor": return FolderTypeLightMeteor()
	case "folderTypeLightMeteorOpened": return FolderTypeLightMeteorOpened()
	case "folderTypeLightMysql": return FolderTypeLightMysql()
	case "folderTypeLightMysqlOpened": return FolderTypeLightMysqlOpened()
	case "folderTypeLightNode": return FolderTypeLightNode()
	case "folderTypeLightNodeOpened": return FolderTypeLightNodeOpened()
	case "folderTypeLightRedux": return FolderTypeLightRedux()
	case "folderTypeLightReduxOpened": return FolderTypeLightReduxOpened()
	case "folderTypeLightSass": return FolderTypeLightSass()
	case "folderTypeLightSassOpened": return FolderTypeLightSassOpened()
	case "folderTypeLinux": return FolderTypeLinux()
	case "folderTypeLinuxOpened": return FolderTypeLinuxOpened()
	case "folderTypeLocale": return FolderTypeLocale()
	case "folderTypeLocaleOpened": return FolderTypeLocaleOpened()
	case "folderTypeLog": return FolderTypeLog()
	case "folderTypeLogOpened": return FolderTypeLogOpened()
	case "folderTypeMacos": return FolderTypeMacos()
	case "folderTypeMacosOpened": return FolderTypeMacosOpened()
	case "folderTypeMariadb": return FolderTypeMariadb()
	case "folderTypeMariadbOpened": return FolderTypeMariadbOpened()
	case "folderTypeMaven": return FolderTypeMaven()
	case "folderTypeMavenOpened": return FolderTypeMavenOpened()
	case "folderTypeMemcached": return FolderTypeMemcached()
	case "folderTypeMemcachedOpened": return FolderTypeMemcachedOpened()
	case "folderTypeMeteor": return FolderTypeMeteor()
	case "folderTypeMeteorOpened": return FolderTypeMeteorOpened()
	case "folderTypeMiddleware": return FolderTypeMiddleware()
	case "folderTypeMiddlewareOpened": return FolderTypeMiddlewareOpened()
	case "folderTypeMinikube": return FolderTypeMinikube()
	case "folderTypeMinikubeOpened": return FolderTypeMinikubeOpened()
	case "folderTypeMjml": return FolderTypeMjml()
	case "folderTypeMjmlOpened": return FolderTypeMjmlOpened()
	case "folderTypeMock": return FolderTypeMock()
	case "folderTypeMockOpened": return FolderTypeMockOpened()
	case "folderTypeModel": return FolderTypeModel()
	case "folderTypeModelOpened": return FolderTypeModelOpened()
	case "folderTypeModule": return FolderTypeModule()
	case "folderTypeModuleOpened": return FolderTypeModuleOpened()
	case "folderTypeMojo": return FolderTypeMojo()
	case "folderTypeMojoOpened": return FolderTypeMojoOpened()
	case "folderTypeMongodb": return FolderTypeMongodb()
	case "folderTypeMongodbOpened": return FolderTypeMongodbOpened()
	case "folderTypeMysql": return FolderTypeMysql()
	case "folderTypeMysqlOpened": return FolderTypeMysqlOpened()
	case "folderTypeNext": return FolderTypeNext()
	case "folderTypeNextOpened": return FolderTypeNextOpened()
	case "folderTypeNginx": return FolderTypeNginx()
	case "folderTypeNginxOpened": return FolderTypeNginxOpened()
	case "folderTypeNix": return FolderTypeNix()
	case "folderTypeNixOpened": return FolderTypeNixOpened()
	case "folderTypeNode": return FolderTypeNode()
	case "folderTypeNodeOpened": return FolderTypeNodeOpened()
	case "folderTypeNotebooks": return FolderTypeNotebooks()
	case "folderTypeNotebooksOpened": return FolderTypeNotebooksOpened()
	case "folderTypeNotification": return FolderTypeNotification()
	case "folderTypeNotificationOpened": return FolderTypeNotificationOpened()
	case "folderTypeNuget": return FolderTypeNuget()
	case "folderTypeNugetOpened": return FolderTypeNugetOpened()
	case "folderTypeNuxt": return FolderTypeNuxt()
	case "folderTypeNuxtOpened": return FolderTypeNuxtOpened()
	case "folderTypePackage": return FolderTypePackage()
	case "folderTypePackageOpened": return FolderTypePackageOpened()
	case "folderTypePaket": return FolderTypePaket()
	case "folderTypePaketOpened": return FolderTypePaketOpened()
	case "folderTypePhp": return FolderTypePhp()
	case "folderTypePhpOpened": return FolderTypePhpOpened()
	case "folderTypePlatformio": return FolderTypePlatformio()
	case "folderTypePlatformioOpened": return FolderTypePlatformioOpened()
	case "folderTypePlugin": return FolderTypePlugin()
	case "folderTypePluginOpened": return FolderTypePluginOpened()
	case "folderTypePrisma": return FolderTypePrisma()
	case "folderTypePrismaOpened": return FolderTypePrismaOpened()
	case "folderTypePrivate": return FolderTypePrivate()
	case "folderTypePrivateOpened": return FolderTypePrivateOpened()
	case "folderTypePublic": return FolderTypePublic()
	case "folderTypePublicOpened": return FolderTypePublicOpened()
	case "folderTypePython": return FolderTypePython()
	case "folderTypePythonOpened": return FolderTypePythonOpened()
	case "folderTypeRavendb": return FolderTypeRavendb()
	case "folderTypeRavendbOpened": return FolderTypeRavendbOpened()
	case "folderTypeRedis": return FolderTypeRedis()
	case "folderTypeRedisOpened": return FolderTypeRedisOpened()
	case "folderTypeRedux": return FolderTypeRedux()
	case "folderTypeReduxOpened": return FolderTypeReduxOpened()
	case "folderTypeRoute": return FolderTypeRoute()
	case "folderTypeRouteOpened": return FolderTypeRouteOpened()
	case "folderTypeSass": return FolderTypeSass()
	case "folderTypeSassOpened": return FolderTypeSassOpened()
	case "folderTypeScript": return FolderTypeScript()
	case "folderTypeScriptOpened": return FolderTypeScriptOpened()
	case "folderTypeServer": return FolderTypeServer()
	case "folderTypeServerOpened": return FolderTypeServerOpened()
	case "folderTypeServices": return FolderTypeServices()
	case "folderTypeServicesOpened": return FolderTypeServicesOpened()
	case "folderTypeShared": return FolderTypeShared()
	case "folderTypeSharedOpened": return FolderTypeSharedOpened()
	case "folderTypeSnaplet": return FolderTypeSnaplet()
	case "folderTypeSnapletOpened": return FolderTypeSnapletOpened()
	case "folderTypeSpin": return FolderTypeSpin()
	case "folderTypeSpinOpened": return FolderTypeSpinOpened()
	case "folderTypeSrc": return FolderTypeSrc()
	case "folderTypeSrcOpened": return FolderTypeSrcOpened()
	case "folderTypeSso": return FolderTypeSso()
	case "folderTypeSsoOpened": return FolderTypeSsoOpened()
	case "folderTypeStory": return FolderTypeStory()
	case "folderTypeStoryOpened": return FolderTypeStoryOpened()
	case "folderTypeStyle": return FolderTypeStyle()
	case "folderTypeStyleOpened": return FolderTypeStyleOpened()
	case "folderTypeTauri": return FolderTypeTauri()
	case "folderTypeTauriOpened": return FolderTypeTauriOpened()
	case "folderTypeTemp": return FolderTypeTemp()
	case "folderTypeTempOpened": return FolderTypeTempOpened()
	case "folderTypeTemplate": return FolderTypeTemplate()
	case "folderTypeTemplateOpened": return FolderTypeTemplateOpened()
	case "folderTypeTest": return FolderTypeTest()
	case "folderTypeTestOpened": return FolderTypeTestOpened()
	case "folderTypeTheme": return FolderTypeTheme()
	case "folderTypeThemeOpened": return FolderTypeThemeOpened()
	case "folderTypeTools": return FolderTypeTools()
	case "folderTypeToolsOpened": return FolderTypeToolsOpened()
	case "folderTypeTravis": return FolderTypeTravis()
	case "folderTypeTravisOpened": return FolderTypeTravisOpened()
	case "folderTypeTrunk": return FolderTypeTrunk()
	case "folderTypeTrunkOpened": return FolderTypeTrunkOpened()
	case "folderTypeTypescript": return FolderTypeTypescript()
	case "folderTypeTypescriptOpened": return FolderTypeTypescriptOpened()
	case "folderTypeTypings": return FolderTypeTypings()
	case "folderTypeTypingsOpened": return FolderTypeTypingsOpened()
	case "folderTypeTypingsTwo": return FolderTypeTypingsTwo()
	case "folderTypeTypingsTwoOpened": return FolderTypeTypingsTwoOpened()
	case "folderTypeVagrant": return FolderTypeVagrant()
	case "folderTypeVagrantOpened": return FolderTypeVagrantOpened()
	case "folderTypeVercel": return FolderTypeVercel()
	case "folderTypeVercelOpened": return FolderTypeVercelOpened()
	case "folderTypeVideo": return FolderTypeVideo()
	case "folderTypeVideoOpened": return FolderTypeVideoOpened()
	case "folderTypeView": return FolderTypeView()
	case "folderTypeViewOpened": return FolderTypeViewOpened()
	case "folderTypeVs": return FolderTypeVs()
	case "folderTypeVsOpened": return FolderTypeVsOpened()
	case "folderTypeVsTwo": return FolderTypeVsTwo()
	case "folderTypeVsTwoOpened": return FolderTypeVsTwoOpened()
	case "folderTypeVscode": return FolderTypeVscode()
	case "folderTypeVscodeOpened": return FolderTypeVscodeOpened()
	case "folderTypeVscodeTest": return FolderTypeVscodeTest()
	case "folderTypeVscodeTestOpened": return FolderTypeVscodeTestOpened()
	case "folderTypeVscodeTestThree": return FolderTypeVscodeTestThree()
	case "folderTypeVscodeTestThreeOpened": return FolderTypeVscodeTestThreeOpened()
	case "folderTypeVscodeTestTwo": return FolderTypeVscodeTestTwo()
	case "folderTypeVscodeTestTwoOpened": return FolderTypeVscodeTestTwoOpened()
	case "folderTypeVscodeThree": return FolderTypeVscodeThree()
	case "folderTypeVscodeThreeOpened": return FolderTypeVscodeThreeOpened()
	case "folderTypeVscodeTwo": return FolderTypeVscodeTwo()
	case "folderTypeVscodeTwoOpened": return FolderTypeVscodeTwoOpened()
	case "folderTypeWebpack": return FolderTypeWebpack()
	case "folderTypeWebpackOpened": return FolderTypeWebpackOpened()
	case "folderTypeWindows": return FolderTypeWindows()
	case "folderTypeWindowsOpened": return FolderTypeWindowsOpened()
	case "folderTypeWww": return FolderTypeWww()
	case "folderTypeWwwOpened": return FolderTypeWwwOpened()
	case "folderTypeYarn": return FolderTypeYarn()
	case "folderTypeYarnOpened": return FolderTypeYarnOpened()
	default:
		panic("Unknown icon name: " + name)
	}
}
